Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Bdt.Server.Service,TunnelSession,C:\repos\sailro_Bdtunnel\BdtServer\Service\TunnelSession.cs,CheckConnection,The length of the statement  "				response.Connected = !(connection.TcpClient.Client.Poll(SocketTestPollingTime' System.Net.Sockets.SelectMode.SelectRead) && connection.TcpClient.Client.Available == 0); " is 168.
Long Statement,Bdt.Server.Service,Tunnel,C:\repos\sailro_Bdtunnel\BdtServer\Service\Tunnel.cs,Login,The length of the statement  "			var password = Configuration.Value(string.Format(ConfigUserTemplate' request.Username) + ConfigUserPassword' string.Empty); " is 123.
Long Statement,Bdt.Server.Service,Tunnel,C:\repos\sailro_Bdtunnel\BdtServer\Service\Tunnel.cs,Login,The length of the statement  "			var stimeout = Configuration.ValueInt(string.Format(ConfigUserTemplate' request.Username) + ConfigSessionTimeout' int.MinValue); " is 128.
Long Statement,Bdt.Server.Service,Tunnel,C:\repos\sailro_Bdtunnel\BdtServer\Service\Tunnel.cs,Login,The length of the statement  "			var ctimeout = Configuration.ValueInt(string.Format(ConfigUserTemplate' request.Username) + ConfigConnectionTimeout' int.MinValue); " is 131.
Long Statement,Bdt.Server.Service,Tunnel,C:\repos\sailro_Bdtunnel\BdtServer\Service\Tunnel.cs,Version,The length of the statement  "			return new MinimalResponse(true' Strings.SERVER_SIDE + string.Format("{0} v{1}' {2}"' name.Name' name.Version.ToString(3)' Program.FrameworkVersion())); " is 152.
Long Statement,Bdt.Server.Service,Tunnel,C:\repos\sailro_Bdtunnel\BdtServer\Service\Tunnel.cs,Connect,The length of the statement  "					response.Message = Strings.SERVER_SIDE + string.Format(Strings.CONNECTED' connection.TcpClient.Client.RemoteEndPoint' request.Address); " is 135.
Long Statement,Bdt.Server.Service,Tunnel,C:\repos\sailro_Bdtunnel\BdtServer\Service\Tunnel.cs,Connect,The length of the statement  "					response.Message = Strings.SERVER_SIDE + string.Format(Strings.CONNECTION_REFUSED' request.Address' request.Port' ex.Message); " is 126.
Long Statement,Bdt.Server.Service,Tunnel,C:\repos\sailro_Bdtunnel\BdtServer\Service\Tunnel.cs,Disconnect,The length of the statement  "						response.Message = Strings.SERVER_SIDE + string.Format(Strings.DISCONNECTED' connection.TcpClient.Client.RemoteEndPoint); " is 121.
Long Statement,Bdt.Server.Service,Tunnel,C:\repos\sailro_Bdtunnel\BdtServer\Service\Tunnel.cs,KillSession,The length of the statement  "							response.Message = Strings.SERVER_SIDE + String.Format(Strings.SESSION_KILLED' targetsession.Username' adminsession.Username); " is 126.
Empty Catch Block,Bdt.Server.Service,TunnelConnection,C:\repos\sailro_Bdtunnel\BdtServer\Service\TunnelConnection.cs,SafeDisconnect,The method has an empty catch block.
Empty Catch Block,Bdt.Server.Service,TunnelConnection,C:\repos\sailro_Bdtunnel\BdtServer\Service\TunnelConnection.cs,SafeDisconnect,The method has an empty catch block.
Magic Number,Bdt.Server.Runtime,BdtServer,C:\repos\sailro_Bdtunnel\BdtServer\Runtime\BdtServer.cs,Run,The following statement contains a magic number: try  			{  				LoadConfiguration(args);    				Log(string.Format(Strings.SERVER_TITLE' GetType().Assembly.GetName().Version.ToString(3))' ESeverity.INFO);  				Log(FrameworkVersion()' ESeverity.INFO);    				Tunnel.Configuration = Configuration;  				Tunnel.Logger = GlobalLogger;  				Protocol.ConfigureServer(typeof(Tunnel));  				Log(Strings.SERVER_STARTED' ESeverity.INFO);  				Console.ReadLine();  				Tunnel.DisableChecking();  				Protocol.UnConfigureServer();    				UnLoadConfiguration();  			}  			catch (Exception ex)  			{  				if (GlobalLogger != null)  				{  					Log(ex.Message' ESeverity.ERROR);  					Log(ex.ToString()' ESeverity.DEBUG);  				}  				else  					Console.WriteLine(ex.Message);  			}
Magic Number,Bdt.Server.Service,Tunnel,C:\repos\sailro_Bdtunnel\BdtServer\Service\Tunnel.cs,Version,The following statement contains a magic number: return new MinimalResponse(true' Strings.SERVER_SIDE + string.Format("{0} v{1}' {2}"' name.Name' name.Version.ToString(3)' Program.FrameworkVersion()));
