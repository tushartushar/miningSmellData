Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Bdt.Client.Sockets,Gateway,C:\repos\sailro_Bdtunnel\BdtClient\Sockets\Gateway.cs,CommunicationThread,Cyclomatic complexity of the method is 9
Long Parameter List,Bdt.Client.Sockets,GatewayServer,C:\repos\sailro_Bdtunnel\BdtClient\Sockets\GatewayServer.cs,GatewayServer,The method has 6 parameters. Parameters: localport' shared' remoteport' address' tunnel' sid
Long Parameter List,Bdt.Client.Sockets,Gateway,C:\repos\sailro_Bdtunnel\BdtClient\Sockets\Gateway.cs,Gateway,The method has 5 parameters. Parameters: client' tunnel' sid' address' port
Long Identifier,Bdt.Client.Socks,Socks5Handler,C:\repos\sailro_Bdtunnel\BdtClient\Socks\Socks5Handler.cs,,The length of the parameter Socks5NoAuthenticationRequired is 30.
Long Statement,Bdt.Client.Commands,HelpCommand,C:\repos\sailro_Bdtunnel\BdtClient\Commands\HelpCommand.cs,Execute,The length of the statement  "				logger.Log(this' string.Format("{0}: {1}"' cmd.Help' cmd.Switch + " " + string.Join(" "' cmd.ParametersName))' ESeverity.INFO); " is 127.
Long Statement,Bdt.Client.Runtime,BdtClient,C:\repos\sailro_Bdtunnel\BdtClient\Runtime\BdtClient.cs,ConfigureProxy,The length of the statement  "				proxy = ClientConfig.ProxyAutoConfiguration ? GlobalProxySelection.Select : new WebProxy(ClientConfig.ProxyAddress' ClientConfig.ProxyPort); " is 140.
Long Statement,Bdt.Client.Runtime,BdtClient,C:\repos\sailro_Bdtunnel\BdtClient\Runtime\BdtClient.cs,ConfigureProxy,The length of the statement  "			Log(webProxy != null ? string.Format(Strings.USING_PROXY' ((WebProxy) proxy).Address' proxy) : Strings.NOT_USING_PROXY' ESeverity.INFO); " is 136.
Virtual Method Call from Constructor,Bdt.Client.Configuration,ClientConfig,C:\repos\sailro_Bdtunnel\BdtClient\Configuration\ClientConfig.cs,ClientConfig,The constructor "ClientConfig" calls a virtual method "Value".
Virtual Method Call from Constructor,Bdt.Client.Configuration,ClientConfig,C:\repos\sailro_Bdtunnel\BdtClient\Configuration\ClientConfig.cs,ClientConfig,The constructor "ClientConfig" calls a virtual method "Value".
Virtual Method Call from Constructor,Bdt.Client.Configuration,ClientConfig,C:\repos\sailro_Bdtunnel\BdtClient\Configuration\ClientConfig.cs,ClientConfig,The constructor "ClientConfig" calls a virtual method "Value".
Virtual Method Call from Constructor,Bdt.Client.Configuration,ClientConfig,C:\repos\sailro_Bdtunnel\BdtClient\Configuration\ClientConfig.cs,ClientConfig,The constructor "ClientConfig" calls a virtual method "Value".
Virtual Method Call from Constructor,Bdt.Client.Configuration,PortForward,C:\repos\sailro_Bdtunnel\BdtClient\Configuration\PortForward.cs,PortForward,The constructor "PortForward" calls a virtual method "Value".
Empty Catch Block,Bdt.Client.Runtime,BdtClient,C:\repos\sailro_Bdtunnel\BdtClient\Runtime\BdtClient.cs,StopClient,The method has an empty catch block.
Magic Number,Bdt.Client.Commands,MonitorCommand,C:\repos\sailro_Bdtunnel\BdtClient\Commands\MonitorCommand.cs,LogObject,The following statement contains a magic number: if (array != null)  			{  				var objarray = array;  				logger.Log(this' indentstr + "{"' ESeverity.INFO);  				var index = 0;  				foreach (var item in objarray)  				{  					if (index > 0) logger.Log(this' indentstr + "'"' ESeverity.INFO);  					LogObject(logger' indent + 2' item);  					index++;  				}  				logger.Log(this' indentstr + "}"' ESeverity.INFO);  			}  			else  			{  				var properties = obj.GetType().GetProperties();  				Array.Sort(properties' new PropertyInfoComparer());    				foreach (var prop in properties)  				{  					var value = prop.GetValue(obj' null);  					if (value is Array)  					{  						logger.Log(this' indentstr + string.Format("{0}="' prop.Name)' ESeverity.INFO);  						LogObject(logger' indent + 2' value);  					}  					else  					{  						logger.Log(this' indentstr + string.Format("{0}={1}"' prop.Name' value)' ESeverity.INFO);  					}  				}  			}
Magic Number,Bdt.Client.Commands,MonitorCommand,C:\repos\sailro_Bdtunnel\BdtClient\Commands\MonitorCommand.cs,LogObject,The following statement contains a magic number: if (array != null)  			{  				var objarray = array;  				logger.Log(this' indentstr + "{"' ESeverity.INFO);  				var index = 0;  				foreach (var item in objarray)  				{  					if (index > 0) logger.Log(this' indentstr + "'"' ESeverity.INFO);  					LogObject(logger' indent + 2' item);  					index++;  				}  				logger.Log(this' indentstr + "}"' ESeverity.INFO);  			}  			else  			{  				var properties = obj.GetType().GetProperties();  				Array.Sort(properties' new PropertyInfoComparer());    				foreach (var prop in properties)  				{  					var value = prop.GetValue(obj' null);  					if (value is Array)  					{  						logger.Log(this' indentstr + string.Format("{0}="' prop.Name)' ESeverity.INFO);  						LogObject(logger' indent + 2' value);  					}  					else  					{  						logger.Log(this' indentstr + string.Format("{0}={1}"' prop.Name' value)' ESeverity.INFO);  					}  				}  			}
Magic Number,Bdt.Client.Runtime,BdtClient,C:\repos\sailro_Bdtunnel\BdtClient\Runtime\BdtClient.cs,InputString,The following statement contains a magic number: do  			{  				cki = Console.ReadKey(true);  				switch (cki.Key)  				{  					case ConsoleKey.Backspace:  						if (result.Length > 0)  						{  							Console.SetCursorPosition(left + result.Length - 1' top);  							Console.Write(@" ");  							result.Remove(result.Length - 1' 1);  						}  						Console.SetCursorPosition(left + result.Length' top);  						break;  					default:  						if (char.IsLetterOrDigit(cki.KeyChar) && (result.Length < 32))  						{  							result.Append(cki.KeyChar);  							Console.Write(hide ? '*' : cki.KeyChar);  						}  						break;  				}  			} while (cki.Key != ConsoleKey.Enter);
Magic Number,Bdt.Client.Runtime,BdtClient,C:\repos\sailro_Bdtunnel\BdtClient\Runtime\BdtClient.cs,StartClient,The following statement contains a magic number: Log(string.Format(Strings.CLIENT_TITLE' GetType().Assembly.GetName().Version.ToString(3))' ESeverity.INFO);
Magic Number,Bdt.Client.Runtime,BdtClient,C:\repos\sailro_Bdtunnel\BdtClient\Runtime\BdtClient.cs,StartClient,The following statement contains a magic number: if ((response != null) && (Tunnel != null))  			{  				if (response.Message.IndexOf(GetType().Assembly.GetName().Version.ToString(3)' StringComparison.Ordinal) < 0)  				{  					Log(Strings.VERSION_MISMATCH' ESeverity.WARN);  				}  				Log(response.Message' ESeverity.INFO);  				if (!response.Success)  					return;    				var loginResponse = Tunnel.Login(new LoginRequest(ClientConfig.ServiceUserName' ClientConfig.ServicePassword));  				if (loginResponse.Success)  				{  					_sid = loginResponse.Sid;  					Log(loginResponse.Message' ESeverity.INFO);    					if (Args == null || Args.Length == 0)  					{  						InitializeForwards(Tunnel' _sid.Value);  						InitializeSocks(Tunnel' _sid.Value);  					}  				}  				else  				{  					throw new Exception(loginResponse.Message);  				}  			}  			else  			{  				throw new Exception(Strings.CONNECTION_FAILED);  			}
Magic Number,Bdt.Client.Socks,GenericSocksHandler,C:\repos\sailro_Bdtunnel\BdtClient\Socks\GenericSocksHandler.cs,GetInstance,The following statement contains a magic number: if (size < 3)  				throw new ArgumentException(Strings.INVALID_SOCKS_HANDSHAKE);
