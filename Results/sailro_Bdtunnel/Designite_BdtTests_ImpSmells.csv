Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Bdt.Tests.Configuration,TestConfigPackage,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\Configuration\TestConfigPackage.cs,Value,Cyclomatic complexity of the method is 29
Long Parameter List,Bdt.Tests.UnitTests,ProtocolsTest,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\UnitTests\ProtocolsTest.cs,Initialize,The method has 5 parameters. Parameters: port' server' client' echo' gw
Long Statement,Bdt.Tests.UnitTests,ProtocolsTest,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\UnitTests\ProtocolsTest.cs,TestProtocol,The length of the statement  "				Assert.IsTrue(channel.ChannelName == client.ClientConfig.ServiceName || channel.ChannelName == client.ClientConfig.ServiceName + ".Client"); " is 140.
Long Statement,Bdt.Tests.UnitTests,ProtocolsTest,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\UnitTests\ProtocolsTest.cs,TestBadValues,The length of the statement  "			Assert.IsTrue(bloginr.Message.Contains(String.Format(Server.Resources.Strings.ACCESS_DENIED' "foo"))' "Deny access to non-user"); " is 129.
Long Statement,Bdt.Tests.UnitTests,ProtocolsTest,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\UnitTests\ProtocolsTest.cs,TestBadValues,The length of the statement  "			bloginr = client.Tunnel.Login(new LoginRequest(TestConfigPackage.UserDisabledLogin' TestConfigPackage.UserDisabledPassword)); " is 125.
Long Statement,Bdt.Tests.UnitTests,ProtocolsTest,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\UnitTests\ProtocolsTest.cs,TestBadValues,The length of the statement  "			Assert.IsTrue(bloginr.Message.Contains(String.Format(Server.Resources.Strings.ACCESS_DENIED' TestConfigPackage.UserDisabledLogin))' " is 131.
Long Statement,Bdt.Tests.UnitTests,ProtocolsTest,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\UnitTests\ProtocolsTest.cs,TestBadValues,The length of the statement  "			Assert.IsTrue(bloginr.Message.Contains(String.Format(Server.Resources.Strings.ACCESS_DENIED_BAD_PASSWORD' TestConfigPackage.UserLambdaLogin))' " is 142.
Long Statement,Bdt.Tests.UnitTests,ProtocolsTest,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\UnitTests\ProtocolsTest.cs,TestBadValues,The length of the statement  "			var lambdaloginr = client.Tunnel.Login(new LoginRequest(TestConfigPackage.UserLambdaLogin' TestConfigPackage.UserLambdaPassword)); " is 130.
Long Statement,Bdt.Tests.UnitTests,ProtocolsTest,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\UnitTests\ProtocolsTest.cs,TestBadValues,The length of the statement  "			Assert.IsTrue(killcr.Message.Contains(Server.Resources.Strings.ADMIN_REQUIRED)' "Deny KillConnection to non-admin user"); " is 121.
Long Statement,Bdt.Tests.UnitTests,ProtocolsTest,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\UnitTests\ProtocolsTest.cs,TestKill,The length of the statement  "			var lambdaloginr = client.Tunnel.Login(new LoginRequest(TestConfigPackage.UserLambdaLogin' TestConfigPackage.UserLambdaPassword)); " is 130.
Long Statement,Bdt.Tests.UnitTests,ProtocolsTest,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\UnitTests\ProtocolsTest.cs,TestKill,The length of the statement  "			Assert.AreEqual(0' (from s in monr.Sessions where s.Sid == lambdaloginr.Sid.ToString("x") select s).First().Connections.Length' "Connection is not killed"); " is 156.
Long Statement,Bdt.Tests.UnitTests,ProtocolsTest,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\UnitTests\ProtocolsTest.cs,TestKill,The length of the statement  "			Assert.AreEqual(0' (from s in monr.Sessions where s.Sid == lambdaloginr.Sid.ToString("x") select s).Count()' "Session is not killed"); " is 134.
Empty Catch Block,Bdt.Tests.UnitTests,ProtocolsTest,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\UnitTests\ProtocolsTest.cs,TestCleanup,The method has an empty catch block.
Magic Number,Bdt.Tests.UnitTests,ProgramTest,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\UnitTests\ProgramTest.cs,TestStaticXorEncoder,The following statement contains a magic number: datalength < 1024
Magic Number,Bdt.Tests.UnitTests,ProtocolsTest,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\UnitTests\ProtocolsTest.cs,Initialize,The following statement contains a magic number: Assert.AreEqual(ChannelServices.RegisteredChannels.Length' 2);
Magic Number,Bdt.Tests.UnitTests,ProtocolsTest,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\UnitTests\ProtocolsTest.cs,Finalize,The following statement contains a magic number: Assert.AreEqual(ChannelServices.RegisteredChannels.Length' 2);
Magic Number,Bdt.Tests.UnitTests,ProtocolsTest,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\UnitTests\ProtocolsTest.cs,TestProtocol,The following statement contains a magic number: datalength < 4096
Magic Number,Bdt.Tests.UnitTests,ProtocolsTest,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\UnitTests\ProtocolsTest.cs,TestProtocol,The following statement contains a magic number: Assert.AreEqual(2' monr.Sessions[0].Connections.Length);
Magic Number,Bdt.Tests.UnitTests,ProtocolsTest,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\UnitTests\ProtocolsTest.cs,TestIpcRemoting,The following statement contains a magic number: TestProtocol<IpcRemoting' IpcChannel>(9079);
Magic Number,Bdt.Tests.UnitTests,ProtocolsTest,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\UnitTests\ProtocolsTest.cs,TestTcpRemoting,The following statement contains a magic number: TestProtocol<TcpRemoting' TcpChannel>(9080);
Magic Number,Bdt.Tests.UnitTests,ProtocolsTest,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\UnitTests\ProtocolsTest.cs,TestHttpSoapRemoting,The following statement contains a magic number: TestProtocol<HttpSoapRemoting' HttpChannel>(9081);
Magic Number,Bdt.Tests.UnitTests,ProtocolsTest,D:\research\architectureSmells\repos1\sailro_Bdtunnel\BdtTests\UnitTests\ProtocolsTest.cs,TestHttpBinaryRemoting,The following statement contains a magic number: TestProtocol<HttpBinaryRemoting' HttpChannel>(9082);
