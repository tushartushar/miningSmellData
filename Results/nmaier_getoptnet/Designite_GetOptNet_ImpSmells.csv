Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,Initialize,Cyclomatic complexity of the method is 11
Complex Method,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,MaybeHandleDashArgument,Cyclomatic complexity of the method is 13
Complex Method,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,MaybeHandleSlashArgument,Cyclomatic complexity of the method is 8
Complex Method,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,Update,Cyclomatic complexity of the method is 11
Complex Method,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,CollectOptInfos,Cyclomatic complexity of the method is 12
Complex Method,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,AssembleUsage,Cyclomatic complexity of the method is 8
Long Parameter List,NMaier.GetOptNet,ArgumentHandler,C:\repos\nmaier_getoptnet\Handlers\ArgumentHandler.cs,ArgumentHandler,The method has 5 parameters. Parameters: aObj' aInfo' aType' aIsFlag' aRequired
Long Parameter List,NMaier.GetOptNet,ArrayArgumentHandler,C:\repos\nmaier_getoptnet\Handlers\ArrayArgumentHandler.cs,ArrayArgumentHandler,The method has 5 parameters. Parameters: aObj' aInfo' aType' aMin' aMax
Long Parameter List,NMaier.GetOptNet,FlagArgumentHandler,C:\repos\nmaier_getoptnet\Handlers\FlagArgumentHandler.cs,FlagArgumentHandler,The method has 5 parameters. Parameters: aObj' aInfo' aCollision' aRequired' aWhenSet
Long Parameter List,NMaier.GetOptNet,IListArgumentHandler,C:\repos\nmaier_getoptnet\Handlers\IListArgumentHandler.cs,IListArgumentHandler,The method has 5 parameters. Parameters: aObj' aInfo' aType' aMin' aMax
Long Parameter List,NMaier.GetOptNet,MultipleArgumentHandler,C:\repos\nmaier_getoptnet\Handlers\MultipleArgumentHandler.cs,MultipleArgumentHandler,The method has 5 parameters. Parameters: aObj' aInfo' aType' aMin' aMax
Long Parameter List,NMaier.GetOptNet,OptInfo,C:\repos\nmaier_getoptnet\OptInfo.cs,OptInfo,The method has 5 parameters. Parameters: name' flag' helpText' helpVar' prefix
Long Parameter List,NMaier.GetOptNet,PlainArgumentHandler,C:\repos\nmaier_getoptnet\Handlers\PlainArgumentHandler.cs,PlainArgumentHandler,The method has 5 parameters. Parameters: aObj' aInfo' aType' aCollision' aRequired
Long Statement,NMaier.GetOptNet,ArgumentHandler,C:\repos\nmaier_getoptnet\Handlers\ArgumentHandler.cs,CheckCollision,The length of the statement  "            throw new DuplicateArgumentException(String.Format(CultureInfo.CurrentCulture' "Option {0} is specified more than once"' Name)); " is 128.
Long Statement,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,GetMemberType,The length of the statement  "          throw new ProgrammingError(String.Format(CultureInfo.CurrentCulture' "Property {0} is an argument but not assignable"' info.Name)); " is 131.
Long Statement,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,MaybeHandleDashArgument,The length of the statement  "          throw new InvalidValueException(String.Format(CultureInfo.CurrentCulture' "Argument \"{0}\" does not except a value"' arg)); " is 124.
Long Statement,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,MaybeHandleSlashArgument,The length of the statement  "            throw new InvalidValueException(String.Format(CultureInfo.CurrentCulture' "Argument \"{0}\" does not except a value"' arg)); " is 124.
Long Statement,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,MaybeHandleSlashArgument,The length of the statement  "          throw new InvalidValueException(String.Format(CultureInfo.CurrentCulture' "Argument \"{0}\" does except a value"' arg)); " is 120.
Long Statement,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,UpdateHandler,The length of the statement  "        throw new InvalidValueException(String.Format(CultureInfo.CurrentCulture' "Wrong value type for argument \"{0}\": {1}"' arg' ex.Message)); " is 138.
Long Statement,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,UpdateHandler,The length of the statement  "          throw new InvalidValueException(String.Format(CultureInfo.CurrentCulture' "Wrong value type for argument \"{0}\": {1}"' arg' ex.Message)); " is 138.
Empty Catch Block,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,PrintUsage,The method has an empty catch block.
Empty Catch Block,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,PrintUsage,The method has an empty catch block.
Magic Number,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,MaybeHandleDashArgument,The following statement contains a magic number: if (m.Success) {          var arg = m.Groups[1].Value;          if (opts.CaseType == ArgumentCaseType.Insensitive) {            arg = arg.ToLower();          }            var val = m.Groups[2].Value;          if (!longs.ContainsKey(arg)) {            HandleUnknownArgument(arg' val);            return HandleResult.Handled;          }          var h = longs[arg];          if (!String.IsNullOrEmpty(val) && h.IsFlag) {            throw new InvalidValueException(String.Format(CultureInfo.CurrentCulture' "Argument \"{0}\" does not except a value"' arg));          }          else if (String.IsNullOrEmpty(val) && !h.IsFlag) {            throw new InvalidValueException(String.Format(CultureInfo.CurrentCulture' "Omitted value for argument \"{0}\""' arg));          }          UpdateHandler(h' val' arg);          return HandleResult.Handled;        }
Magic Number,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,MaybeHandleSlashArgument,The following statement contains a magic number: if (m.Success) {          var arg = m.Groups[1].Value;          var val = m.Groups[2].Value;          ArgumentHandler h;          if (arg.Length == 1) {            var a = arg[0];            if (!shorts.ContainsKey(a)) {              HandleUnknownArgument(arg' val);              return HandleResult.Handled;            }            h = shorts[a];            if (!String.IsNullOrEmpty(val) && h.IsFlag) {              throw new InvalidValueException(String.Format(CultureInfo.CurrentCulture' "Argument \"{0}\" does not except a value"' arg));            }            else if (String.IsNullOrEmpty(val) && !h.IsFlag) {              val = e.MoveNext() ? e.Current : val;              if (String.IsNullOrEmpty(val)) {                throw new InvalidValueException(String.Format(CultureInfo.CurrentCulture' "Omitted value for argument \"{0}\""' arg));              }            }            UpdateHandler(h' val' arg);            return HandleResult.Handled;          }          if (opts.CaseType == ArgumentCaseType.Insensitive) {            arg = arg.ToLower();          }          if (!longs.ContainsKey(arg)) {            HandleUnknownArgument(arg' val);            return HandleResult.Handled;          }          h = longs[arg];          if (String.IsNullOrEmpty(val) && !h.IsFlag) {            throw new InvalidValueException(String.Format(CultureInfo.CurrentCulture' "Argument \"{0}\" does except a value"' arg));          }          UpdateHandler(h' val' arg);          return HandleResult.Handled;        }
Magic Number,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,GetUsageIntro,The following statement contains a magic number: if (parameters.Min == 2 && parameters.Min == parameters.Max) {          return string.Format("Usage: {0} [OPTION] [...] {1} {1}"' image' paramInfo.HelpVar);        }
Magic Number,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,AssembleUsage,The following statement contains a magic number: var maxLine = (long)width * 3 / 5;
Magic Number,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,AssembleUsage,The following statement contains a magic number: var maxLine = (long)width * 3 / 5;
Magic Number,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,AssembleUsage,The following statement contains a magic number: var maxArg = width / 4;
Magic Number,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,AssembleUsage,The following statement contains a magic number: foreach (OptInfo o in options) {          var len = o.Argtext.Length + 3;          if (len <= maxLine) {            maxArg = Math.Max(maxArg' len);          }        }
Magic Number,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,PrintUsage,The following statement contains a magic number: var ww = 80;
Missing Default,NMaier.GetOptNet,GetOpt,C:\repos\nmaier_getoptnet\GetOpt.cs,HandleUnknownArgument,The following switch statement is missing a default case: switch (opts.OnUnknownArgument) {          case UnknownArgumentsAction.Throw:            throw new UnknownAttributeException(String.Format("There is no argument with the name \"{0}\""' arg));            case UnknownArgumentsAction.PlaceInParameters:            parameters.Assign(arg);            if (!String.IsNullOrEmpty(val)) {              parameters.Assign(val);            }            break;        }
