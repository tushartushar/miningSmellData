Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Touch.Server.Android,AdbActivtiyLaunchCommand,C:\repos\Sitecore_sitecore-xamarin-pcl-sdk\scripts\Touch.Server.Android\AdbActivtiyLaunchCommand.cs,Execute,The length of the statement  "      ServerRunner.LogMessage("Executing adb command\n Command : {0}\n AdbExeFilePath : {1}"' this.Activity' this.AdbExeFile); " is 120.
Empty Catch Block,Touch.Server.Android,SimpleConnectionListener,C:\repos\Sitecore_sitecore-xamarin-pcl-sdk\scripts\Touch.Server.Android\SimpleConnectionListener.cs,Cancel,The method has an empty catch block.
Magic Number,Touch.Server.Android,ServerRunner,C:\repos\Sitecore_sitecore-xamarin-pcl-sdk\scripts\Touch.Server.Android\ServerRunner.cs,StartAdbAndListener,The following statement contains a magic number: var handles = new ManualResetEvent[2];
Magic Number,Touch.Server.Android,SimpleConnectionListener,C:\repos\Sitecore_sitecore-xamarin-pcl-sdk\scripts\Touch.Server.Android\SimpleConnectionListener.cs,Processing,The following statement contains a magic number: using (FileStream fs = File.Create(logfile))        {          string header = String.Format("[Local Date/Time:\t{1}]{0}[Remote Address:\t{2}]{0}"'            Environment.NewLine' DateTime.Now' remote);          ServerRunner.LogMessage(header);            int i;          int total = 0;          NetworkStream stream = client.GetStream();            while ((i = stream.Read(buffer' 0' buffer.Length)) != 0)          {            fs.Write(buffer' 0' i);            fs.Flush();            total += i;          }            if (total < 16)          {            // This wasn't a test run' but a connection from the app (on device) to find            // the ip address we're reachable on.            return false;          }        }
