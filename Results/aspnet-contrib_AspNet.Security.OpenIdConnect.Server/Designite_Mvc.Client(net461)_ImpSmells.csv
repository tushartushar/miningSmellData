Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Mvc.Client,Startup,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\samples\Mvc\Mvc.Client\Startup.cs,ConfigureServices,The following statement contains a magic number: services.AddAuthentication(options =>              {                  options.DefaultScheme = "ClientCookie";              })                .AddCookie("ClientCookie"' options =>              {                  options.Cookie.Name = CookieAuthenticationDefaults.CookiePrefix + "ClientCookie";                  options.ExpireTimeSpan = TimeSpan.FromMinutes(5);                  options.LoginPath = new PathString("/signin");                  options.LogoutPath = new PathString("/signout");              })                .AddOpenIdConnect(options =>              {                  options.RequireHttpsMetadata = false;                  options.SaveTokens = true;                  options.GetClaimsFromUserInfoEndpoint = true;                    // Note: these settings must match the application details                  // inserted in the database at the server level.                  options.ClientId = "myClient";                  options.ClientSecret = "secret_secret_secret";                    // Use the authorization code flow.                  options.ResponseType = OpenIdConnectResponseType.Code;                    // Note: setting the Authority allows the OIDC client middleware to automatically                  // retrieve the identity provider's configuration and spare you from setting                  // the different endpoints URIs or the token validation parameters explicitly.                  options.Authority = "http://localhost:54540/";                    options.SecurityTokenValidator = new JwtSecurityTokenHandler                  {                      // Disable the built-in JWT claims mapping feature.                      InboundClaimTypeMap = new Dictionary<string' string>()                  };                    options.TokenValidationParameters.NameClaimType = "name";                  options.TokenValidationParameters.RoleClaimType = "role";              });
