Implementation smell,Namespace,Class,File,Method,Description
Long Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeAuthorizationEndpointAsync,The method has 331 lines of code.
Long Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,SendAuthorizationResponseAsync,The method has 158 lines of code.
Long Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,HandleRequestAsync,The method has 120 lines of code.
Long Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,SignInAsync,The method has 197 lines of code.
Long Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeConfigurationEndpointAsync,The method has 255 lines of code.
Long Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeCryptographyEndpointAsync,The method has 283 lines of code.
Long Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeTokenEndpointAsync,The method has 423 lines of code.
Long Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeIntrospectionEndpointAsync,The method has 424 lines of code.
Long Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeRevocationEndpointAsync,The method has 296 lines of code.
Long Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,SerializeAccessTokenAsync,The method has 132 lines of code.
Long Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,SerializeIdentityTokenAsync,The method has 159 lines of code.
Long Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeLogoutEndpointAsync,The method has 138 lines of code.
Long Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeUserinfoEndpointAsync,The method has 242 lines of code.
Long Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerInitializer,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerInitializer.cs,PostConfigure,The method has 103 lines of code.
Complex Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeAuthorizationEndpointAsync,Cyclomatic complexity of the method is 35
Complex Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,SendAuthorizationResponseAsync,Cyclomatic complexity of the method is 18
Complex Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,HandleRequestAsync,Cyclomatic complexity of the method is 23
Complex Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,HandleAuthenticateAsync,Cyclomatic complexity of the method is 12
Complex Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,SignInAsync,Cyclomatic complexity of the method is 24
Complex Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,HandleUnauthorizedAsync,Cyclomatic complexity of the method is 11
Complex Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeConfigurationEndpointAsync,Cyclomatic complexity of the method is 32
Complex Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeCryptographyEndpointAsync,Cyclomatic complexity of the method is 29
Complex Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeTokenEndpointAsync,Cyclomatic complexity of the method is 43
Complex Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeIntrospectionEndpointAsync,Cyclomatic complexity of the method is 50
Complex Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeRevocationEndpointAsync,Cyclomatic complexity of the method is 37
Complex Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,SerializeAccessTokenAsync,Cyclomatic complexity of the method is 12
Complex Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,SerializeIdentityTokenAsync,Cyclomatic complexity of the method is 16
Complex Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeLogoutEndpointAsync,Cyclomatic complexity of the method is 17
Complex Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,SendLogoutResponseAsync,Cyclomatic complexity of the method is 13
Complex Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeUserinfoEndpointAsync,Cyclomatic complexity of the method is 30
Complex Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHelpers,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHelpers.cs,GetJwtAlgorithm,Cyclomatic complexity of the method is 13
Complex Method,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerInitializer,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerInitializer.cs,PostConfigure,Cyclomatic complexity of the method is 18
Complex Method,Microsoft.Extensions.DependencyInjection,OpenIdConnectServerExtensions,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerExtensions.cs,AddKey,Cyclomatic complexity of the method is 8
Long Parameter List,AspNet.Security.OpenIdConnect.Server,ApplyAuthorizationResponseContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ApplyAuthorizationResponseContext.cs,ApplyAuthorizationResponseContext,The method has 6 parameters. Parameters: context' scheme' options' ticket' request' response
Long Parameter List,AspNet.Security.OpenIdConnect.Server,ApplyConfigurationResponseContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ApplyConfigurationResponseContext.cs,ApplyConfigurationResponseContext,The method has 5 parameters. Parameters: context' scheme' options' request' response
Long Parameter List,AspNet.Security.OpenIdConnect.Server,ApplyCryptographyResponseContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ApplyCryptographyResponseContext.cs,ApplyCryptographyResponseContext,The method has 5 parameters. Parameters: context' scheme' options' request' response
Long Parameter List,AspNet.Security.OpenIdConnect.Server,ApplyIntrospectionResponseContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ApplyIntrospectionResponseContext.cs,ApplyIntrospectionResponseContext,The method has 5 parameters. Parameters: context' scheme' options' request' response
Long Parameter List,AspNet.Security.OpenIdConnect.Server,ApplyLogoutResponseContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ApplyLogoutResponseContext.cs,ApplyLogoutResponseContext,The method has 5 parameters. Parameters: context' scheme' options' request' response
Long Parameter List,AspNet.Security.OpenIdConnect.Server,ApplyRevocationResponseContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ApplyRevocationResponseContext.cs,ApplyRevocationResponseContext,The method has 5 parameters. Parameters: context' scheme' options' request' response
Long Parameter List,AspNet.Security.OpenIdConnect.Server,ApplyTokenResponseContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ApplyTokenResponseContext.cs,ApplyTokenResponseContext,The method has 6 parameters. Parameters: context' scheme' options' ticket' request' response
Long Parameter List,AspNet.Security.OpenIdConnect.Server,ApplyUserinfoResponseContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ApplyUserinfoResponseContext.cs,ApplyUserinfoResponseContext,The method has 5 parameters. Parameters: context' scheme' options' request' response
Long Parameter List,AspNet.Security.OpenIdConnect.Server,BaseSerializingContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\BaseSerializingContext.cs,BaseSerializingContext,The method has 6 parameters. Parameters: context' scheme' options' request' response' ticket
Long Parameter List,AspNet.Security.OpenIdConnect.Server,BaseValidatingTicketContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\BaseValidatingTicketContext.cs,BaseValidatingTicketContext,The method has 5 parameters. Parameters: context' scheme' options' request' ticket
Long Parameter List,AspNet.Security.OpenIdConnect.Server,DeserializeAccessTokenContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\DeserializeAccessTokenContext.cs,DeserializeAccessTokenContext,The method has 5 parameters. Parameters: context' scheme' options' request' token
Long Parameter List,AspNet.Security.OpenIdConnect.Server,DeserializeAuthorizationCodeContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\DeserializeAuthorizationCodeContext.cs,DeserializeAuthorizationCodeContext,The method has 5 parameters. Parameters: context' scheme' options' request' code
Long Parameter List,AspNet.Security.OpenIdConnect.Server,DeserializeIdentityTokenContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\DeserializeIdentityTokenContext.cs,DeserializeIdentityTokenContext,The method has 5 parameters. Parameters: context' scheme' options' request' token
Long Parameter List,AspNet.Security.OpenIdConnect.Server,DeserializeRefreshTokenContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\DeserializeRefreshTokenContext.cs,DeserializeRefreshTokenContext,The method has 5 parameters. Parameters: context' scheme' options' request' token
Long Parameter List,AspNet.Security.OpenIdConnect.Server,HandleIntrospectionRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\HandleIntrospectionRequestContext.cs,HandleIntrospectionRequestContext,The method has 5 parameters. Parameters: context' scheme' options' request' ticket
Long Parameter List,AspNet.Security.OpenIdConnect.Server,HandleRevocationRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\HandleRevocationRequestContext.cs,HandleRevocationRequestContext,The method has 5 parameters. Parameters: context' scheme' options' request' ticket
Long Parameter List,AspNet.Security.OpenIdConnect.Server,HandleTokenRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\HandleTokenRequestContext.cs,HandleTokenRequestContext,The method has 5 parameters. Parameters: context' scheme' options' request' ticket
Long Parameter List,AspNet.Security.OpenIdConnect.Server,HandleUserinfoRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\HandleUserinfoRequestContext.cs,HandleUserinfoRequestContext,The method has 5 parameters. Parameters: context' scheme' options' request' ticket
Long Parameter List,AspNet.Security.OpenIdConnect.Server,ProcessChallengeResponseContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ProcessChallengeResponseContext.cs,ProcessChallengeResponseContext,The method has 6 parameters. Parameters: context' scheme' options' properties' request' response
Long Parameter List,AspNet.Security.OpenIdConnect.Server,ProcessSigninResponseContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ProcessSigninResponseContext.cs,ProcessSigninResponseContext,The method has 6 parameters. Parameters: context' scheme' options' ticket' request' response
Long Parameter List,AspNet.Security.OpenIdConnect.Server,ProcessSignoutResponseContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ProcessSignoutResponseContext.cs,ProcessSignoutResponseContext,The method has 6 parameters. Parameters: context' scheme' options' properties' request' response
Long Parameter List,AspNet.Security.OpenIdConnect.Server,SerializeAccessTokenContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\SerializeAccessTokenContext.cs,SerializeAccessTokenContext,The method has 6 parameters. Parameters: context' scheme' options' request' response' ticket
Long Parameter List,AspNet.Security.OpenIdConnect.Server,SerializeAuthorizationCodeContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\SerializeAuthorizationCodeContext.cs,SerializeAuthorizationCodeContext,The method has 6 parameters. Parameters: context' scheme' options' request' response' ticket
Long Parameter List,AspNet.Security.OpenIdConnect.Server,SerializeIdentityTokenContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\SerializeIdentityTokenContext.cs,SerializeIdentityTokenContext,The method has 6 parameters. Parameters: context' scheme' options' request' response' ticket
Long Parameter List,AspNet.Security.OpenIdConnect.Server,SerializeRefreshTokenContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\SerializeRefreshTokenContext.cs,SerializeRefreshTokenContext,The method has 6 parameters. Parameters: context' scheme' options' request' response' ticket
Long Parameter List,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerInitializer,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerInitializer.cs,OpenIdConnectServerInitializer,The method has 6 parameters. Parameters: clock' dataProtectionProvider' hostingEnvironment' htmlEncoder' logger' options
Long Parameter List,Microsoft.Extensions.DependencyInjection,OpenIdConnectServerExtensions,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerExtensions.cs,AddCertificate,The method has 5 parameters. Parameters: credentials' assembly' resource' password' flags
Long Statement,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeAuthorizationEndpointAsync,The length of the statement  "            if (request.HasPrompt(OpenIdConnectConstants.Prompts.None) && (request.HasPrompt(OpenIdConnectConstants.Prompts.Consent) || " is 123.
Long Statement,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,SendAuthorizationResponseAsync,The length of the statement  "                        writer.WriteLine($@"<form name=""form"" method=""post"" action=""{Options.HtmlEncoder.Encode(notification.RedirectUri)}"">"); " is 125.
Long Statement,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeConfigurationEndpointAsync,The length of the statement  "                [OpenIdConnectConstants.Metadata.TokenEndpointAuthMethodsSupported] = new JArray(notification.TokenEndpointAuthenticationMethods)' " is 130.
Long Statement,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeConfigurationEndpointAsync,The length of the statement  "                [OpenIdConnectConstants.Metadata.IntrospectionEndpointAuthMethodsSupported] = new JArray(notification.IntrospectionEndpointAuthenticationMethods)' " is 146.
Long Statement,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeConfigurationEndpointAsync,The length of the statement  "                [OpenIdConnectConstants.Metadata.RevocationEndpointAuthMethodsSupported] = new JArray(notification.RevocationEndpointAuthenticationMethods) " is 139.
Long Statement,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,DeserializeIdentityTokenAsync,The length of the statement  "                principal = notification.SecurityTokenHandler.ValidateToken(token' notification.TokenValidationParameters' out securityToken); " is 126.
Long Statement,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHelpers,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHelpers.cs,GetDevelopmentCertificate,The length of the statement  "                var certificates = store.Certificates.Find(X509FindType.FindBySubjectDistinguishedName' subject.Name' validOnly: false); " is 120.
Long Statement,Microsoft.Extensions.DependencyInjection,OpenIdConnectServerExtensions,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerExtensions.cs,AddKey,The length of the statement  "            throw new InvalidOperationException("An encryption algorithm cannot be automatically inferred from the encrypting key. " + " is 122.
Complex Conditional,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeAuthorizationEndpointAsync,The conditional expression  "string.IsNullOrEmpty(request.Nonce) && request.HasScope(OpenIdConnectConstants.Scopes.OpenId) &&                                                        (request.IsImplicitFlow() || request.IsHybridFlow())"  is complex.
Complex Conditional,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeAuthorizationEndpointAsync,The conditional expression  "request.HasPrompt(OpenIdConnectConstants.Prompts.None) && (request.HasPrompt(OpenIdConnectConstants.Prompts.Consent) ||                                                                             request.HasPrompt(OpenIdConnectConstants.Prompts.Login) ||                                                                             request.HasPrompt(OpenIdConnectConstants.Prompts.SelectAccount))"  is complex.
Complex Conditional,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,HandleRequestAsync,The conditional expression  "notification.IsConfigurationEndpoint || notification.IsCryptographyEndpoint ||                           notification.IsIntrospectionEndpoint || notification.IsRevocationEndpoint ||                           notification.IsTokenEndpoint || notification.IsUserinfoEndpoint"  is complex.
Complex Conditional,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeIntrospectionEndpointAsync,The conditional expression  "ticket.IsAccessToken() && ticket.HasAudience() && !ticket.HasAudience(context.ClientId) &&                                                     ticket.HasPresenter() && !ticket.HasPresenter(context.ClientId)"  is complex.
Complex Conditional,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeRevocationEndpointAsync,The conditional expression  "ticket.IsAccessToken() && ticket.HasAudience() && !ticket.HasAudience(context.ClientId) &&                                                     ticket.HasPresenter() && !ticket.HasPresenter(context.ClientId)"  is complex.
Complex Conditional,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerInitializer,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerInitializer.cs,PostConfigure,The conditional expression  "string.Equals(_options.DefaultScheme' name' StringComparison.Ordinal) ||                  string.Equals(_options.DefaultAuthenticateScheme' name' StringComparison.Ordinal) ||                  string.Equals(_options.DefaultChallengeScheme' name' StringComparison.Ordinal) ||                  string.Equals(_options.DefaultForbidScheme' name' StringComparison.Ordinal) ||                  string.Equals(_options.DefaultSignInScheme' name' StringComparison.Ordinal) ||                  string.Equals(_options.DefaultSignOutScheme' name' StringComparison.Ordinal)"  is complex.
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,ExtractAuthorizationRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ExtractAuthorizationRequestContext.cs,ExtractAuthorizationRequestContext,The constructor "ExtractAuthorizationRequestContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,ExtractConfigurationRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ExtractConfigurationRequestContext.cs,ExtractConfigurationRequestContext,The constructor "ExtractConfigurationRequestContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,ExtractCryptographyRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ExtractCryptographyRequestContext.cs,ExtractCryptographyRequestContext,The constructor "ExtractCryptographyRequestContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,ExtractIntrospectionRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ExtractIntrospectionRequestContext.cs,ExtractIntrospectionRequestContext,The constructor "ExtractIntrospectionRequestContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,ExtractLogoutRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ExtractLogoutRequestContext.cs,ExtractLogoutRequestContext,The constructor "ExtractLogoutRequestContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,ExtractRevocationRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ExtractRevocationRequestContext.cs,ExtractRevocationRequestContext,The constructor "ExtractRevocationRequestContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,ExtractTokenRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ExtractTokenRequestContext.cs,ExtractTokenRequestContext,The constructor "ExtractTokenRequestContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,ExtractUserinfoRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ExtractUserinfoRequestContext.cs,ExtractUserinfoRequestContext,The constructor "ExtractUserinfoRequestContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,HandleAuthorizationRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\HandleAuthorizationRequestContext.cs,HandleAuthorizationRequestContext,The constructor "HandleAuthorizationRequestContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,HandleConfigurationRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\HandleConfigurationRequestContext.cs,HandleConfigurationRequestContext,The constructor "HandleConfigurationRequestContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,HandleCryptographyRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\HandleCryptographyRequestContext.cs,HandleCryptographyRequestContext,The constructor "HandleCryptographyRequestContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,HandleIntrospectionRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\HandleIntrospectionRequestContext.cs,HandleIntrospectionRequestContext,The constructor "HandleIntrospectionRequestContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,HandleLogoutRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\HandleLogoutRequestContext.cs,HandleLogoutRequestContext,The constructor "HandleLogoutRequestContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,HandleRevocationRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\HandleRevocationRequestContext.cs,HandleRevocationRequestContext,The constructor "HandleRevocationRequestContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,HandleTokenRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\HandleTokenRequestContext.cs,HandleTokenRequestContext,The constructor "HandleTokenRequestContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,HandleUserinfoRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\HandleUserinfoRequestContext.cs,HandleUserinfoRequestContext,The constructor "HandleUserinfoRequestContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,ProcessChallengeResponseContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ProcessChallengeResponseContext.cs,ProcessChallengeResponseContext,The constructor "ProcessChallengeResponseContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,ProcessSigninResponseContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ProcessSigninResponseContext.cs,ProcessSigninResponseContext,The constructor "ProcessSigninResponseContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,ProcessSignoutResponseContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ProcessSignoutResponseContext.cs,ProcessSignoutResponseContext,The constructor "ProcessSignoutResponseContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,ValidateConfigurationRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ValidateConfigurationRequestContext.cs,ValidateConfigurationRequestContext,The constructor "ValidateConfigurationRequestContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,ValidateCryptographyRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ValidateCryptographyRequestContext.cs,ValidateCryptographyRequestContext,The constructor "ValidateCryptographyRequestContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,ValidateLogoutRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ValidateLogoutRequestContext.cs,ValidateLogoutRequestContext,The constructor "ValidateLogoutRequestContext" calls a virtual method "Validate".
Virtual Method Call from Constructor,AspNet.Security.OpenIdConnect.Server,ValidateUserinfoRequestContext,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\Events\ValidateUserinfoRequestContext.cs,ValidateUserinfoRequestContext,The constructor "ValidateUserinfoRequestContext" calls a virtual method "Validate".
Magic Number,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,SendAuthorizationResponseAsync,The following statement contains a magic number: Response.StatusCode = 400;
Magic Number,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,SendAuthorizationResponseAsync,The following statement contains a magic number: switch (notification.ResponseMode)              {                  case OpenIdConnectConstants.ResponseModes.FormPost:                  {                      Logger.LogInformation("The authorization response was successfully returned to " +                                            "'{RedirectUri}' using the form post response mode: {Response}."'                                            notification.RedirectUri' response);                        using (var buffer = new MemoryStream())                      using (var writer = new StreamWriter(buffer))                      {                          writer.WriteLine("<!doctype html>");                          writer.WriteLine("<html>");                          writer.WriteLine("<body>");                            // While the redirect_uri parameter should be guarded against unknown values                          // by OpenIdConnectServerProvider.ValidateAuthorizationRequest'                          // it's still safer to encode it to avoid cross-site scripting attacks                          // if the authorization server has a relaxed policy concerning redirect URIs.                          writer.WriteLine($@"<form name=""form"" method=""post"" action=""{Options.HtmlEncoder.Encode(notification.RedirectUri)}"">");                            foreach (var parameter in parameters)                          {                              var key = Options.HtmlEncoder.Encode(parameter.Key);                              var value = Options.HtmlEncoder.Encode(parameter.Value);                                writer.WriteLine($@"<input type=""hidden"" name=""{key}"" value=""{value}"" />");                          }                            writer.WriteLine(@"<noscript>Click here to finish the authorization process: <input type=""submit"" /></noscript>");                          writer.WriteLine("</form>");                          writer.WriteLine("<script>document.form.submit();</script>");                          writer.WriteLine("</body>");                          writer.WriteLine("</html>");                          writer.Flush();                            Response.StatusCode = 200;                          Response.ContentLength = buffer.Length;                          Response.ContentType = "text/html;charset=UTF-8";                            Response.Headers["Cache-Control"] = "no-cache";                          Response.Headers["Pragma"] = "no-cache";                          Response.Headers["Expires"] = "-1";                            buffer.Seek(offset: 0' loc: SeekOrigin.Begin);                          await buffer.CopyToAsync(Response.Body' 4096' Context.RequestAborted);                            return true;                      }                  }                    case OpenIdConnectConstants.ResponseModes.Fragment:                  {                      Logger.LogInformation("The authorization response was successfully returned to " +                                            "'{RedirectUri}' using the fragment response mode: {Response}."'                                            notification.RedirectUri' response);                        var location = notification.RedirectUri;                      var appender = new OpenIdConnectServerHelpers.Appender(location' '#');                        foreach (var parameter in parameters)                      {                          appender.Append(parameter.Key' parameter.Value);                      }                        Response.Redirect(appender.ToString());                      return true;                  }                    case OpenIdConnectConstants.ResponseModes.Query:                  {                      Logger.LogInformation("The authorization response was successfully returned to " +                                            "'{RedirectUri}' using the query response mode: {Response}."'                                            notification.RedirectUri' response);                        var location = notification.RedirectUri;                        foreach (var parameter in parameters)                      {                          location = QueryHelpers.AddQueryString(location' parameter.Key' parameter.Value);                      }                        Response.Redirect(location);                      return true;                  }                    default:                  {                      Logger.LogError("The authorization request was rejected because the 'response_mode' " +                                      "parameter was invalid: {ResponseMode}."' request.ResponseMode);                        return await SendNativePageAsync(new OpenIdConnectResponse                      {                          Error = OpenIdConnectConstants.Errors.InvalidRequest'                          ErrorDescription = "The specified 'response_mode' parameter is not supported."                      });                  }              }
Magic Number,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,SendAuthorizationResponseAsync,The following statement contains a magic number: switch (notification.ResponseMode)              {                  case OpenIdConnectConstants.ResponseModes.FormPost:                  {                      Logger.LogInformation("The authorization response was successfully returned to " +                                            "'{RedirectUri}' using the form post response mode: {Response}."'                                            notification.RedirectUri' response);                        using (var buffer = new MemoryStream())                      using (var writer = new StreamWriter(buffer))                      {                          writer.WriteLine("<!doctype html>");                          writer.WriteLine("<html>");                          writer.WriteLine("<body>");                            // While the redirect_uri parameter should be guarded against unknown values                          // by OpenIdConnectServerProvider.ValidateAuthorizationRequest'                          // it's still safer to encode it to avoid cross-site scripting attacks                          // if the authorization server has a relaxed policy concerning redirect URIs.                          writer.WriteLine($@"<form name=""form"" method=""post"" action=""{Options.HtmlEncoder.Encode(notification.RedirectUri)}"">");                            foreach (var parameter in parameters)                          {                              var key = Options.HtmlEncoder.Encode(parameter.Key);                              var value = Options.HtmlEncoder.Encode(parameter.Value);                                writer.WriteLine($@"<input type=""hidden"" name=""{key}"" value=""{value}"" />");                          }                            writer.WriteLine(@"<noscript>Click here to finish the authorization process: <input type=""submit"" /></noscript>");                          writer.WriteLine("</form>");                          writer.WriteLine("<script>document.form.submit();</script>");                          writer.WriteLine("</body>");                          writer.WriteLine("</html>");                          writer.Flush();                            Response.StatusCode = 200;                          Response.ContentLength = buffer.Length;                          Response.ContentType = "text/html;charset=UTF-8";                            Response.Headers["Cache-Control"] = "no-cache";                          Response.Headers["Pragma"] = "no-cache";                          Response.Headers["Expires"] = "-1";                            buffer.Seek(offset: 0' loc: SeekOrigin.Begin);                          await buffer.CopyToAsync(Response.Body' 4096' Context.RequestAborted);                            return true;                      }                  }                    case OpenIdConnectConstants.ResponseModes.Fragment:                  {                      Logger.LogInformation("The authorization response was successfully returned to " +                                            "'{RedirectUri}' using the fragment response mode: {Response}."'                                            notification.RedirectUri' response);                        var location = notification.RedirectUri;                      var appender = new OpenIdConnectServerHelpers.Appender(location' '#');                        foreach (var parameter in parameters)                      {                          appender.Append(parameter.Key' parameter.Value);                      }                        Response.Redirect(appender.ToString());                      return true;                  }                    case OpenIdConnectConstants.ResponseModes.Query:                  {                      Logger.LogInformation("The authorization response was successfully returned to " +                                            "'{RedirectUri}' using the query response mode: {Response}."'                                            notification.RedirectUri' response);                        var location = notification.RedirectUri;                        foreach (var parameter in parameters)                      {                          location = QueryHelpers.AddQueryString(location' parameter.Key' parameter.Value);                      }                        Response.Redirect(location);                      return true;                  }                    default:                  {                      Logger.LogError("The authorization request was rejected because the 'response_mode' " +                                      "parameter was invalid: {ResponseMode}."' request.ResponseMode);                        return await SendNativePageAsync(new OpenIdConnectResponse                      {                          Error = OpenIdConnectConstants.Errors.InvalidRequest'                          ErrorDescription = "The specified 'response_mode' parameter is not supported."                      });                  }              }
Magic Number,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,SignInAsync,The following statement contains a magic number: response.ExpiresIn = (long) (lifetime.TotalSeconds + .5);
Magic Number,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,SendNativePageAsync,The following statement contains a magic number: Response.StatusCode = 400;
Magic Number,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,SendNativePageAsync,The following statement contains a magic number: await buffer.CopyToAsync(Response.Body' 4096' Context.RequestAborted);
Magic Number,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,SendPayloadAsync,The following statement contains a magic number: Response.StatusCode = 401;
Magic Number,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,SendPayloadAsync,The following statement contains a magic number: await buffer.CopyToAsync(Response.Body' 4096' Context.RequestAborted);
Magic Number,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,SerializeIdentityTokenAsync,The following statement contains a magic number: identity.AddClaim(OpenIdConnectConstants.Claims.CodeHash' Base64UrlEncoder.Encode(hash' 0' hash.Length / 2));
Magic Number,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,SerializeIdentityTokenAsync,The following statement contains a magic number: identity.AddClaim(OpenIdConnectConstants.Claims.AccessTokenHash' Base64UrlEncoder.Encode(hash' 0' hash.Length / 2));
Magic Number,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,SendLogoutResponseAsync,The following statement contains a magic number: Response.StatusCode = 400;
Magic Number,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHelpers,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHelpers.cs,GetKeyIdentifier,The following statement contains a magic number: return identifier.Substring(0' Math.Min(identifier.Length' 40)).ToUpperInvariant();
Magic Number,Microsoft.Extensions.DependencyInjection,OpenIdConnectServerExtensions,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerExtensions.cs,AddEphemeralKey,The following statement contains a magic number: switch (algorithm)              {                  case SecurityAlgorithms.RsaSha256:                  case SecurityAlgorithms.RsaSha384:                  case SecurityAlgorithms.RsaSha512:                  case SecurityAlgorithms.RsaSha256Signature:                  case SecurityAlgorithms.RsaSha384Signature:                  case SecurityAlgorithms.RsaSha512Signature:                  {                      var key = new RsaSecurityKey(OpenIdConnectServerHelpers.GenerateRsaKey(2048));                      key.KeyId = key.GetKeyIdentifier();                        credentials.Add(new SigningCredentials(key' algorithm));                        return credentials;                  }    #if SUPPORTS_ECDSA                  case SecurityAlgorithms.EcdsaSha256:                  case SecurityAlgorithms.EcdsaSha256Signature:                  {                      // Generate a new ECDSA key using the P-256 curve.                      var ecdsa = ECDsa.Create(ECCurve.NamedCurves.nistP256);                        var key = new ECDsaSecurityKey(ecdsa);                      key.KeyId = key.GetKeyIdentifier();                        credentials.Add(new SigningCredentials(key' algorithm));                        return credentials;                  }                    case SecurityAlgorithms.EcdsaSha384:                  case SecurityAlgorithms.EcdsaSha384Signature:                  {                      // Generate a new ECDSA key using the P-384 curve.                      var ecdsa = ECDsa.Create(ECCurve.NamedCurves.nistP384);                        var key = new ECDsaSecurityKey(ecdsa);                      key.KeyId = key.GetKeyIdentifier();                        credentials.Add(new SigningCredentials(key' algorithm));                        return credentials;                  }                    case SecurityAlgorithms.EcdsaSha512:                  case SecurityAlgorithms.EcdsaSha512Signature:                  {                      // Generate a new ECDSA key using the P-521 curve.                      var ecdsa = ECDsa.Create(ECCurve.NamedCurves.nistP521);                        var key = new ECDsaSecurityKey(ecdsa);                      key.KeyId = key.GetKeyIdentifier();                        credentials.Add(new SigningCredentials(key' algorithm));                        return credentials;                  }  #else                  case SecurityAlgorithms.EcdsaSha256:                  case SecurityAlgorithms.EcdsaSha384:                  case SecurityAlgorithms.EcdsaSha512:                  case SecurityAlgorithms.EcdsaSha256Signature:                  case SecurityAlgorithms.EcdsaSha384Signature:                  case SecurityAlgorithms.EcdsaSha512Signature:                      throw new PlatformNotSupportedException("ECDSA signing keys are not supported on this platform.");  #endif                    default: throw new InvalidOperationException("The specified algorithm is not supported.");              }
Missing Default,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeIntrospectionEndpointAsync,The following switch statement is missing a default case: switch (request.TokenTypeHint)              {                  case OpenIdConnectConstants.TokenTypeHints.AccessToken:                      ticket = await DeserializeAccessTokenAsync(request.Token' request);                      break;                    case OpenIdConnectConstants.TokenTypeHints.AuthorizationCode:                      ticket = await DeserializeAuthorizationCodeAsync(request.Token' request);                      break;                    case OpenIdConnectConstants.TokenTypeHints.IdToken:                      ticket = await DeserializeIdentityTokenAsync(request.Token' request);                      break;                    case OpenIdConnectConstants.TokenTypeHints.RefreshToken:                      ticket = await DeserializeRefreshTokenAsync(request.Token' request);                      break;              }
Missing Default,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeIntrospectionEndpointAsync,The following switch statement is missing a default case: switch (type)                          {                              case OpenIdConnectConstants.Claims.Audience:                              case OpenIdConnectConstants.Claims.ExpiresAt:                              case OpenIdConnectConstants.Claims.IssuedAt:                              case OpenIdConnectConstants.Claims.Issuer:                              case OpenIdConnectConstants.Claims.NotBefore:                              case OpenIdConnectConstants.Claims.Scope:                              case OpenIdConnectConstants.Claims.Subject:                              case OpenIdConnectConstants.Claims.TokenType:                              case OpenIdConnectConstants.Claims.TokenUsage:                                  continue;                          }
Missing Default,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHandler,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHandler.Authentication.cs,InvokeRevocationEndpointAsync,The following switch statement is missing a default case: switch (request.TokenTypeHint)              {                  case OpenIdConnectConstants.TokenTypeHints.AccessToken:                      ticket = await DeserializeAccessTokenAsync(request.Token' request);                      break;                    case OpenIdConnectConstants.TokenTypeHints.AuthorizationCode:                      ticket = await DeserializeAuthorizationCodeAsync(request.Token' request);                      break;                    case OpenIdConnectConstants.TokenTypeHints.IdToken:                      ticket = await DeserializeIdentityTokenAsync(request.Token' request);                      break;                    case OpenIdConnectConstants.TokenTypeHints.RefreshToken:                      ticket = await DeserializeRefreshTokenAsync(request.Token' request);                      break;              }
Missing Default,AspNet.Security.OpenIdConnect.Server,OpenIdConnectServerHelpers,D:\research\architectureSmells\repos\aspnet-contrib_AspNet.Security.OpenIdConnect.Server\src\AspNet.Security.OpenIdConnect.Server\OpenIdConnectServerHelpers.cs,GetHashAlgorithm,The following switch statement is missing a default case: switch (algorithm)              {                  case SecurityAlgorithms.RsaSha256:                  case SecurityAlgorithms.HmacSha256:                  case SecurityAlgorithms.EcdsaSha256:                  case SecurityAlgorithms.RsaSha256Signature:                  case SecurityAlgorithms.HmacSha256Signature:                  case SecurityAlgorithms.EcdsaSha256Signature:                      return SHA256.Create();                    case SecurityAlgorithms.RsaSha384:                  case SecurityAlgorithms.HmacSha384:                  case SecurityAlgorithms.EcdsaSha384:                  case SecurityAlgorithms.RsaSha384Signature:                  case SecurityAlgorithms.HmacSha384Signature:                  case SecurityAlgorithms.EcdsaSha384Signature:                      return SHA384.Create();                    case SecurityAlgorithms.RsaSha512:                  case SecurityAlgorithms.HmacSha512:                  case SecurityAlgorithms.EcdsaSha512:                  case SecurityAlgorithms.RsaSha512Signature:                  case SecurityAlgorithms.HmacSha512Signature:                  case SecurityAlgorithms.EcdsaSha512Signature:                      return SHA512.Create();              }
