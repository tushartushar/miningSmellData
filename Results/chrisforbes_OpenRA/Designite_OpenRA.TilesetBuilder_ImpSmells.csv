Implementation smell,Namespace,Class,File,Method,Description
Long Method,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The method has 309 lines of code.
Long Method,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The method has 184 lines of code.
Complex Method,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,Load,Cyclomatic complexity of the method is 8
Complex Method,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,Save,Cyclomatic complexity of the method is 11
Complex Method,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportTemplate,Cyclomatic complexity of the method is 11
Complex Method,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,Export,Cyclomatic complexity of the method is 11
Complex Method,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,Cyclomatic complexity of the method is 14
Long Statement,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,Load,The length of the statement  "			surface1.TerrainTypes [int.Parse (e.GetAttribute ("x"))' int.Parse (e.GetAttribute ("y"))] = int.Parse (e.GetAttribute ("t")); " is 126.
Long Statement,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,Load,The length of the statement  "				Cells = e.SelectNodes ("./cell").OfType<XmlElement> ().Select (f => new int2 (int.Parse (f.GetAttribute ("x"))' int.Parse (f.GetAttribute ("y")))).ToDictionary (a => a' a => true) " is 179.
Long Statement,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportTemplate,The length of the statement  "		Bitmap src = surface1.Image.Clone (new Rectangle (0' 0' surface1.Image.Width' surface1.Image.Height)' surface1.Image.PixelFormat); " is 130.
Long Statement,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportTemplateToTileNumberMapping,The length of the statement  "			Console.WriteLine ("{0} {1} {2} {3} {4} {5} {6}"' cur' idx' ((t.Key.Y * surface1.TilesPerRow) + t.Key.X).ToString ()' tp.Width' tp.Height' t.Key.X' t.Key.Y); " is 157.
Long Statement,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(frmBuilder)); " is 131.
Long Statement,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The length of the statement  "	this.toolStripContainer1.TopToolStripPanel.Click += new System.EventHandler (this.toolStripContainer1_TopToolStripPanel_Click); " is 127.
Long Statement,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The length of the statement  "				e.Graphics.DrawLine (pen' (TileSize * (c + new int2 (1' 0))).ToPoint ()' (TileSize * (c + new int2 (1' 1))).ToPoint ()); " is 120.
Long Statement,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The length of the statement  "				e.Graphics.DrawLine (pen' (TileSize * (c + new int2 (0' 1))).ToPoint ()' (TileSize * (c + new int2 (1' 1))).ToPoint ()); " is 120.
Empty Catch Block,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,Load,The method has an empty catch block.
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,CreateNewTileset,The following statement contains a magic number: using (var fNew = new frmNew {    })  	if (DialogResult.OK == fNew.ShowDialog ()) {  		PaletteFromImage = fNew.PaletteFromImage;  		PaletteFile = fNew.PaletteFile;  		ImageFile = fNew.ImageFile;  		TileSize = fNew.TileSize;  		srcfile = ImageFile;  		this.size = TileSize;  		surface1.TileSize = TileSize;  		Bitmap fbitmap = new Bitmap (ImageFile);  		Bitmap rbitmap = fbitmap.Clone (new Rectangle (0' 0' fbitmap.Width' fbitmap.Height)' fbitmap.PixelFormat);  		int[] ShadowIndex =  {    		};  		if (!PaletteFromImage) {  			tpal = Palette.Load (PaletteFile' ShadowIndex);  			rbitmap.Palette = tpal.AsSystemPalette ();  		}  		surface1.Image = (Bitmap)rbitmap;  		surface1.TilesPerRow = surface1.Image.Size.Width / surface1.TileSize;  		surface1.Image.SetResolution (96' 96);  		// people keep being noobs about DPI' and GDI+ cares.  		surface1.TerrainTypes = new int[surface1.Image.Width / size' surface1.Image.Height / size];  		/* all passable by default */surface1.Templates = new List<Template> ();  		surface1.Size = surface1.Image.Size;  		surface1.Enabled = true;  		Load ();  	}  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,CreateNewTileset,The following statement contains a magic number: using (var fNew = new frmNew {    })  	if (DialogResult.OK == fNew.ShowDialog ()) {  		PaletteFromImage = fNew.PaletteFromImage;  		PaletteFile = fNew.PaletteFile;  		ImageFile = fNew.ImageFile;  		TileSize = fNew.TileSize;  		srcfile = ImageFile;  		this.size = TileSize;  		surface1.TileSize = TileSize;  		Bitmap fbitmap = new Bitmap (ImageFile);  		Bitmap rbitmap = fbitmap.Clone (new Rectangle (0' 0' fbitmap.Width' fbitmap.Height)' fbitmap.PixelFormat);  		int[] ShadowIndex =  {    		};  		if (!PaletteFromImage) {  			tpal = Palette.Load (PaletteFile' ShadowIndex);  			rbitmap.Palette = tpal.AsSystemPalette ();  		}  		surface1.Image = (Bitmap)rbitmap;  		surface1.TilesPerRow = surface1.Image.Size.Width / surface1.TileSize;  		surface1.Image.SetResolution (96' 96);  		// people keep being noobs about DPI' and GDI+ cares.  		surface1.TerrainTypes = new int[surface1.Image.Width / size' surface1.Image.Height / size];  		/* all passable by default */surface1.Templates = new List<Template> ();  		surface1.Size = surface1.Image.Size;  		surface1.Enabled = true;  		Load ();  	}  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,CreateNewTileset,The following statement contains a magic number: if (DialogResult.OK == fNew.ShowDialog ()) {  	PaletteFromImage = fNew.PaletteFromImage;  	PaletteFile = fNew.PaletteFile;  	ImageFile = fNew.ImageFile;  	TileSize = fNew.TileSize;  	srcfile = ImageFile;  	this.size = TileSize;  	surface1.TileSize = TileSize;  	Bitmap fbitmap = new Bitmap (ImageFile);  	Bitmap rbitmap = fbitmap.Clone (new Rectangle (0' 0' fbitmap.Width' fbitmap.Height)' fbitmap.PixelFormat);  	int[] ShadowIndex =  {    	};  	if (!PaletteFromImage) {  		tpal = Palette.Load (PaletteFile' ShadowIndex);  		rbitmap.Palette = tpal.AsSystemPalette ();  	}  	surface1.Image = (Bitmap)rbitmap;  	surface1.TilesPerRow = surface1.Image.Size.Width / surface1.TileSize;  	surface1.Image.SetResolution (96' 96);  	// people keep being noobs about DPI' and GDI+ cares.  	surface1.TerrainTypes = new int[surface1.Image.Width / size' surface1.Image.Height / size];  	/* all passable by default */surface1.Templates = new List<Template> ();  	surface1.Size = surface1.Image.Size;  	surface1.Enabled = true;  	Load ();  }  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,CreateNewTileset,The following statement contains a magic number: if (DialogResult.OK == fNew.ShowDialog ()) {  	PaletteFromImage = fNew.PaletteFromImage;  	PaletteFile = fNew.PaletteFile;  	ImageFile = fNew.ImageFile;  	TileSize = fNew.TileSize;  	srcfile = ImageFile;  	this.size = TileSize;  	surface1.TileSize = TileSize;  	Bitmap fbitmap = new Bitmap (ImageFile);  	Bitmap rbitmap = fbitmap.Clone (new Rectangle (0' 0' fbitmap.Width' fbitmap.Height)' fbitmap.PixelFormat);  	int[] ShadowIndex =  {    	};  	if (!PaletteFromImage) {  		tpal = Palette.Load (PaletteFile' ShadowIndex);  		rbitmap.Palette = tpal.AsSystemPalette ();  	}  	surface1.Image = (Bitmap)rbitmap;  	surface1.TilesPerRow = surface1.Image.Size.Width / surface1.TileSize;  	surface1.Image.SetResolution (96' 96);  	// people keep being noobs about DPI' and GDI+ cares.  	surface1.TerrainTypes = new int[surface1.Image.Width / size' surface1.Image.Height / size];  	/* all passable by default */surface1.Templates = new List<Template> ();  	surface1.Size = surface1.Image.Size;  	surface1.Enabled = true;  	Load ();  }  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,CreateNewTileset,The following statement contains a magic number: surface1.Image.SetResolution (96' 96);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,CreateNewTileset,The following statement contains a magic number: surface1.Image.SetResolution (96' 96);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,frmBuilder,The following statement contains a magic number: foreach (var deftype in DefTerrain) {  	Bitmap icon = new Bitmap (16' 16);  	int x' y;  	// Loop through the images pixels to reset color.  	for (x = 0; x < icon.Width; x++) {  		for (y = 0; y < icon.Height; y++) {  			Color newColor = deftype.Value.Color;  			icon.SetPixel (x' y' newColor);  		}  	}  	surface1.icon [i] = icon;  	TerrainType [i] = deftype.Value;  	ToolStripButton TerrainTypeButton = new ToolStripButton (deftype.Key' icon' TerrainTypeSelectorClicked);  	TerrainTypeButton.ToolTipText = deftype.Key;  	TerrainTypeButton.DisplayStyle = ToolStripItemDisplayStyle.ImageAndText;  	TerrainTypeButton.Tag = i.ToString ();  	TerrainTypeButton.ImageAlign = ContentAlignment.MiddleLeft;  	i++;  	tsTerrainTypes.Items.Add (TerrainTypeButton);  }  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,frmBuilder,The following statement contains a magic number: foreach (var deftype in DefTerrain) {  	Bitmap icon = new Bitmap (16' 16);  	int x' y;  	// Loop through the images pixels to reset color.  	for (x = 0; x < icon.Width; x++) {  		for (y = 0; y < icon.Height; y++) {  			Color newColor = deftype.Value.Color;  			icon.SetPixel (x' y' newColor);  		}  	}  	surface1.icon [i] = icon;  	TerrainType [i] = deftype.Value;  	ToolStripButton TerrainTypeButton = new ToolStripButton (deftype.Key' icon' TerrainTypeSelectorClicked);  	TerrainTypeButton.ToolTipText = deftype.Key;  	TerrainTypeButton.DisplayStyle = ToolStripItemDisplayStyle.ImageAndText;  	TerrainTypeButton.Tag = i.ToString ();  	TerrainTypeButton.ImageAlign = ContentAlignment.MiddleLeft;  	i++;  	tsTerrainTypes.Items.Add (TerrainTypeButton);  }  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,frmBuilder,The following statement contains a magic number: if (src.Length > 0) {  	srcfile = src;  	this.size = size;  	surface1.TileSize = size;  	surface1.Image = (Bitmap)Image.FromFile (src);  	surface1.TilesPerRow = surface1.Image.Size.Width / surface1.TileSize;  	surface1.Image.SetResolution (96' 96);  	// people keep being noobs about DPI' and GDI+ cares.  	surface1.TerrainTypes = new int[surface1.Image.Width / size' surface1.Image.Height / size];  	/* all passable by default */surface1.Templates = new List<Template> ();  	surface1.Size = surface1.Image.Size;  	surface1.Enabled = true;  	Load ();  } else {  	CreateNewTileset ();  }  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,frmBuilder,The following statement contains a magic number: if (src.Length > 0) {  	srcfile = src;  	this.size = size;  	surface1.TileSize = size;  	surface1.Image = (Bitmap)Image.FromFile (src);  	surface1.TilesPerRow = surface1.Image.Size.Width / surface1.TileSize;  	surface1.Image.SetResolution (96' 96);  	// people keep being noobs about DPI' and GDI+ cares.  	surface1.TerrainTypes = new int[surface1.Image.Width / size' surface1.Image.Height / size];  	/* all passable by default */surface1.Templates = new List<Template> ();  	surface1.Size = surface1.Image.Size;  	surface1.Enabled = true;  	Load ();  } else {  	CreateNewTileset ();  }  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,frmBuilder,The following statement contains a magic number: surface1.Image.SetResolution (96' 96);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,frmBuilder,The following statement contains a magic number: surface1.Image.SetResolution (96' 96);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportPalette,The following statement contains a magic number: while (p.Count < 256)  	p.Add (Color.Black);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportTemplate,The following statement contains a magic number: using (var bw = new BinaryWriter (ms)) {  	bw.Write ((ushort)TileSize);  	bw.Write ((ushort)TileSize);  	bw.Write ((uint)totalTiles);  	bw.Write ((ushort)t.Width);  	bw.Write ((ushort)t.Height);  	bw.Write ((uint)0);  	// filesize placeholder  	bw.Flush ();  	bw.Write ((uint)ms.Position + 24);  	// image start  	bw.Write ((uint)0);  	// 0 (32bits)		  	bw.Write ((uint)0x2c730f8c);  	// magic?  	bw.Write ((uint)0);  	// flags start  	bw.Write ((uint)0);  	// walk start  	bw.Write ((uint)0);  	// index start  	Bitmap src = surface1.Image.Clone (new Rectangle (0' 0' surface1.Image.Width' surface1.Image.Height)' surface1.Image.PixelFormat);  	var data = src.LockBits (new Rectangle (0' 0' src.Width' src.Height)' ImageLockMode.ReadOnly' src.PixelFormat);  	unsafe {  		byte* p = (byte*)data.Scan0;  		for (var v = 0; v < t.Height; v++)  			for (var u = 0; u < t.Width; u++) {  				if (t.Cells.ContainsKey (new int2 (u + t.Left' v + t.Top))) {  					byte* q = p + data.Stride * TileSize * (v + t.Top) + TileSize * (u + t.Left);  					for (var j = 0; j < TileSize; j++)  						for (var i = 0; i < TileSize; i++) {  							bw.Write (q [i + j * data.Stride]);  						}  				} else  					for (var x = 0; x < TileSize * TileSize; x++)  						bw.Write ((byte)0);  				/* todo: don't fill with air */}  	}  	src.UnlockBits (data);  	bw.Flush ();  	var indexStart = ms.Position;  	for (var v = 0; v < t.Height; v++)  		for (var u = 0; u < t.Width; u++)  			bw.Write (t.Cells.ContainsKey (new int2 (u + t.Left' v + t.Top)) ? (byte)(u + t.Width * v) : (byte)0xff);  	bw.Flush ();  	var flagsStart = ms.Position;  	for (var x = 0; x < totalTiles; x++)  		bw.Write ((byte)0);  	bw.Flush ();  	var walkStart = ms.Position;  	for (var x = 0; x < totalTiles; x++)  		bw.Write ((byte)0x8);  	var bytes = ms.ToArray ();  	Array.Copy (BitConverter.GetBytes ((uint)bytes.Length)' 0' bytes' 12' 4);  	Array.Copy (BitConverter.GetBytes (flagsStart)' 0' bytes' 28' 4);  	Array.Copy (BitConverter.GetBytes (walkStart)' 0' bytes' 32' 4);  	Array.Copy (BitConverter.GetBytes (indexStart)' 0' bytes' 36' 4);  	File.WriteAllBytes (filename' bytes);  }  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportTemplate,The following statement contains a magic number: using (var bw = new BinaryWriter (ms)) {  	bw.Write ((ushort)TileSize);  	bw.Write ((ushort)TileSize);  	bw.Write ((uint)totalTiles);  	bw.Write ((ushort)t.Width);  	bw.Write ((ushort)t.Height);  	bw.Write ((uint)0);  	// filesize placeholder  	bw.Flush ();  	bw.Write ((uint)ms.Position + 24);  	// image start  	bw.Write ((uint)0);  	// 0 (32bits)		  	bw.Write ((uint)0x2c730f8c);  	// magic?  	bw.Write ((uint)0);  	// flags start  	bw.Write ((uint)0);  	// walk start  	bw.Write ((uint)0);  	// index start  	Bitmap src = surface1.Image.Clone (new Rectangle (0' 0' surface1.Image.Width' surface1.Image.Height)' surface1.Image.PixelFormat);  	var data = src.LockBits (new Rectangle (0' 0' src.Width' src.Height)' ImageLockMode.ReadOnly' src.PixelFormat);  	unsafe {  		byte* p = (byte*)data.Scan0;  		for (var v = 0; v < t.Height; v++)  			for (var u = 0; u < t.Width; u++) {  				if (t.Cells.ContainsKey (new int2 (u + t.Left' v + t.Top))) {  					byte* q = p + data.Stride * TileSize * (v + t.Top) + TileSize * (u + t.Left);  					for (var j = 0; j < TileSize; j++)  						for (var i = 0; i < TileSize; i++) {  							bw.Write (q [i + j * data.Stride]);  						}  				} else  					for (var x = 0; x < TileSize * TileSize; x++)  						bw.Write ((byte)0);  				/* todo: don't fill with air */}  	}  	src.UnlockBits (data);  	bw.Flush ();  	var indexStart = ms.Position;  	for (var v = 0; v < t.Height; v++)  		for (var u = 0; u < t.Width; u++)  			bw.Write (t.Cells.ContainsKey (new int2 (u + t.Left' v + t.Top)) ? (byte)(u + t.Width * v) : (byte)0xff);  	bw.Flush ();  	var flagsStart = ms.Position;  	for (var x = 0; x < totalTiles; x++)  		bw.Write ((byte)0);  	bw.Flush ();  	var walkStart = ms.Position;  	for (var x = 0; x < totalTiles; x++)  		bw.Write ((byte)0x8);  	var bytes = ms.ToArray ();  	Array.Copy (BitConverter.GetBytes ((uint)bytes.Length)' 0' bytes' 12' 4);  	Array.Copy (BitConverter.GetBytes (flagsStart)' 0' bytes' 28' 4);  	Array.Copy (BitConverter.GetBytes (walkStart)' 0' bytes' 32' 4);  	Array.Copy (BitConverter.GetBytes (indexStart)' 0' bytes' 36' 4);  	File.WriteAllBytes (filename' bytes);  }  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportTemplate,The following statement contains a magic number: using (var bw = new BinaryWriter (ms)) {  	bw.Write ((ushort)TileSize);  	bw.Write ((ushort)TileSize);  	bw.Write ((uint)totalTiles);  	bw.Write ((ushort)t.Width);  	bw.Write ((ushort)t.Height);  	bw.Write ((uint)0);  	// filesize placeholder  	bw.Flush ();  	bw.Write ((uint)ms.Position + 24);  	// image start  	bw.Write ((uint)0);  	// 0 (32bits)		  	bw.Write ((uint)0x2c730f8c);  	// magic?  	bw.Write ((uint)0);  	// flags start  	bw.Write ((uint)0);  	// walk start  	bw.Write ((uint)0);  	// index start  	Bitmap src = surface1.Image.Clone (new Rectangle (0' 0' surface1.Image.Width' surface1.Image.Height)' surface1.Image.PixelFormat);  	var data = src.LockBits (new Rectangle (0' 0' src.Width' src.Height)' ImageLockMode.ReadOnly' src.PixelFormat);  	unsafe {  		byte* p = (byte*)data.Scan0;  		for (var v = 0; v < t.Height; v++)  			for (var u = 0; u < t.Width; u++) {  				if (t.Cells.ContainsKey (new int2 (u + t.Left' v + t.Top))) {  					byte* q = p + data.Stride * TileSize * (v + t.Top) + TileSize * (u + t.Left);  					for (var j = 0; j < TileSize; j++)  						for (var i = 0; i < TileSize; i++) {  							bw.Write (q [i + j * data.Stride]);  						}  				} else  					for (var x = 0; x < TileSize * TileSize; x++)  						bw.Write ((byte)0);  				/* todo: don't fill with air */}  	}  	src.UnlockBits (data);  	bw.Flush ();  	var indexStart = ms.Position;  	for (var v = 0; v < t.Height; v++)  		for (var u = 0; u < t.Width; u++)  			bw.Write (t.Cells.ContainsKey (new int2 (u + t.Left' v + t.Top)) ? (byte)(u + t.Width * v) : (byte)0xff);  	bw.Flush ();  	var flagsStart = ms.Position;  	for (var x = 0; x < totalTiles; x++)  		bw.Write ((byte)0);  	bw.Flush ();  	var walkStart = ms.Position;  	for (var x = 0; x < totalTiles; x++)  		bw.Write ((byte)0x8);  	var bytes = ms.ToArray ();  	Array.Copy (BitConverter.GetBytes ((uint)bytes.Length)' 0' bytes' 12' 4);  	Array.Copy (BitConverter.GetBytes (flagsStart)' 0' bytes' 28' 4);  	Array.Copy (BitConverter.GetBytes (walkStart)' 0' bytes' 32' 4);  	Array.Copy (BitConverter.GetBytes (indexStart)' 0' bytes' 36' 4);  	File.WriteAllBytes (filename' bytes);  }  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportTemplate,The following statement contains a magic number: using (var bw = new BinaryWriter (ms)) {  	bw.Write ((ushort)TileSize);  	bw.Write ((ushort)TileSize);  	bw.Write ((uint)totalTiles);  	bw.Write ((ushort)t.Width);  	bw.Write ((ushort)t.Height);  	bw.Write ((uint)0);  	// filesize placeholder  	bw.Flush ();  	bw.Write ((uint)ms.Position + 24);  	// image start  	bw.Write ((uint)0);  	// 0 (32bits)		  	bw.Write ((uint)0x2c730f8c);  	// magic?  	bw.Write ((uint)0);  	// flags start  	bw.Write ((uint)0);  	// walk start  	bw.Write ((uint)0);  	// index start  	Bitmap src = surface1.Image.Clone (new Rectangle (0' 0' surface1.Image.Width' surface1.Image.Height)' surface1.Image.PixelFormat);  	var data = src.LockBits (new Rectangle (0' 0' src.Width' src.Height)' ImageLockMode.ReadOnly' src.PixelFormat);  	unsafe {  		byte* p = (byte*)data.Scan0;  		for (var v = 0; v < t.Height; v++)  			for (var u = 0; u < t.Width; u++) {  				if (t.Cells.ContainsKey (new int2 (u + t.Left' v + t.Top))) {  					byte* q = p + data.Stride * TileSize * (v + t.Top) + TileSize * (u + t.Left);  					for (var j = 0; j < TileSize; j++)  						for (var i = 0; i < TileSize; i++) {  							bw.Write (q [i + j * data.Stride]);  						}  				} else  					for (var x = 0; x < TileSize * TileSize; x++)  						bw.Write ((byte)0);  				/* todo: don't fill with air */}  	}  	src.UnlockBits (data);  	bw.Flush ();  	var indexStart = ms.Position;  	for (var v = 0; v < t.Height; v++)  		for (var u = 0; u < t.Width; u++)  			bw.Write (t.Cells.ContainsKey (new int2 (u + t.Left' v + t.Top)) ? (byte)(u + t.Width * v) : (byte)0xff);  	bw.Flush ();  	var flagsStart = ms.Position;  	for (var x = 0; x < totalTiles; x++)  		bw.Write ((byte)0);  	bw.Flush ();  	var walkStart = ms.Position;  	for (var x = 0; x < totalTiles; x++)  		bw.Write ((byte)0x8);  	var bytes = ms.ToArray ();  	Array.Copy (BitConverter.GetBytes ((uint)bytes.Length)' 0' bytes' 12' 4);  	Array.Copy (BitConverter.GetBytes (flagsStart)' 0' bytes' 28' 4);  	Array.Copy (BitConverter.GetBytes (walkStart)' 0' bytes' 32' 4);  	Array.Copy (BitConverter.GetBytes (indexStart)' 0' bytes' 36' 4);  	File.WriteAllBytes (filename' bytes);  }  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportTemplate,The following statement contains a magic number: using (var bw = new BinaryWriter (ms)) {  	bw.Write ((ushort)TileSize);  	bw.Write ((ushort)TileSize);  	bw.Write ((uint)totalTiles);  	bw.Write ((ushort)t.Width);  	bw.Write ((ushort)t.Height);  	bw.Write ((uint)0);  	// filesize placeholder  	bw.Flush ();  	bw.Write ((uint)ms.Position + 24);  	// image start  	bw.Write ((uint)0);  	// 0 (32bits)		  	bw.Write ((uint)0x2c730f8c);  	// magic?  	bw.Write ((uint)0);  	// flags start  	bw.Write ((uint)0);  	// walk start  	bw.Write ((uint)0);  	// index start  	Bitmap src = surface1.Image.Clone (new Rectangle (0' 0' surface1.Image.Width' surface1.Image.Height)' surface1.Image.PixelFormat);  	var data = src.LockBits (new Rectangle (0' 0' src.Width' src.Height)' ImageLockMode.ReadOnly' src.PixelFormat);  	unsafe {  		byte* p = (byte*)data.Scan0;  		for (var v = 0; v < t.Height; v++)  			for (var u = 0; u < t.Width; u++) {  				if (t.Cells.ContainsKey (new int2 (u + t.Left' v + t.Top))) {  					byte* q = p + data.Stride * TileSize * (v + t.Top) + TileSize * (u + t.Left);  					for (var j = 0; j < TileSize; j++)  						for (var i = 0; i < TileSize; i++) {  							bw.Write (q [i + j * data.Stride]);  						}  				} else  					for (var x = 0; x < TileSize * TileSize; x++)  						bw.Write ((byte)0);  				/* todo: don't fill with air */}  	}  	src.UnlockBits (data);  	bw.Flush ();  	var indexStart = ms.Position;  	for (var v = 0; v < t.Height; v++)  		for (var u = 0; u < t.Width; u++)  			bw.Write (t.Cells.ContainsKey (new int2 (u + t.Left' v + t.Top)) ? (byte)(u + t.Width * v) : (byte)0xff);  	bw.Flush ();  	var flagsStart = ms.Position;  	for (var x = 0; x < totalTiles; x++)  		bw.Write ((byte)0);  	bw.Flush ();  	var walkStart = ms.Position;  	for (var x = 0; x < totalTiles; x++)  		bw.Write ((byte)0x8);  	var bytes = ms.ToArray ();  	Array.Copy (BitConverter.GetBytes ((uint)bytes.Length)' 0' bytes' 12' 4);  	Array.Copy (BitConverter.GetBytes (flagsStart)' 0' bytes' 28' 4);  	Array.Copy (BitConverter.GetBytes (walkStart)' 0' bytes' 32' 4);  	Array.Copy (BitConverter.GetBytes (indexStart)' 0' bytes' 36' 4);  	File.WriteAllBytes (filename' bytes);  }  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportTemplate,The following statement contains a magic number: using (var bw = new BinaryWriter (ms)) {  	bw.Write ((ushort)TileSize);  	bw.Write ((ushort)TileSize);  	bw.Write ((uint)totalTiles);  	bw.Write ((ushort)t.Width);  	bw.Write ((ushort)t.Height);  	bw.Write ((uint)0);  	// filesize placeholder  	bw.Flush ();  	bw.Write ((uint)ms.Position + 24);  	// image start  	bw.Write ((uint)0);  	// 0 (32bits)		  	bw.Write ((uint)0x2c730f8c);  	// magic?  	bw.Write ((uint)0);  	// flags start  	bw.Write ((uint)0);  	// walk start  	bw.Write ((uint)0);  	// index start  	Bitmap src = surface1.Image.Clone (new Rectangle (0' 0' surface1.Image.Width' surface1.Image.Height)' surface1.Image.PixelFormat);  	var data = src.LockBits (new Rectangle (0' 0' src.Width' src.Height)' ImageLockMode.ReadOnly' src.PixelFormat);  	unsafe {  		byte* p = (byte*)data.Scan0;  		for (var v = 0; v < t.Height; v++)  			for (var u = 0; u < t.Width; u++) {  				if (t.Cells.ContainsKey (new int2 (u + t.Left' v + t.Top))) {  					byte* q = p + data.Stride * TileSize * (v + t.Top) + TileSize * (u + t.Left);  					for (var j = 0; j < TileSize; j++)  						for (var i = 0; i < TileSize; i++) {  							bw.Write (q [i + j * data.Stride]);  						}  				} else  					for (var x = 0; x < TileSize * TileSize; x++)  						bw.Write ((byte)0);  				/* todo: don't fill with air */}  	}  	src.UnlockBits (data);  	bw.Flush ();  	var indexStart = ms.Position;  	for (var v = 0; v < t.Height; v++)  		for (var u = 0; u < t.Width; u++)  			bw.Write (t.Cells.ContainsKey (new int2 (u + t.Left' v + t.Top)) ? (byte)(u + t.Width * v) : (byte)0xff);  	bw.Flush ();  	var flagsStart = ms.Position;  	for (var x = 0; x < totalTiles; x++)  		bw.Write ((byte)0);  	bw.Flush ();  	var walkStart = ms.Position;  	for (var x = 0; x < totalTiles; x++)  		bw.Write ((byte)0x8);  	var bytes = ms.ToArray ();  	Array.Copy (BitConverter.GetBytes ((uint)bytes.Length)' 0' bytes' 12' 4);  	Array.Copy (BitConverter.GetBytes (flagsStart)' 0' bytes' 28' 4);  	Array.Copy (BitConverter.GetBytes (walkStart)' 0' bytes' 32' 4);  	Array.Copy (BitConverter.GetBytes (indexStart)' 0' bytes' 36' 4);  	File.WriteAllBytes (filename' bytes);  }  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportTemplate,The following statement contains a magic number: using (var bw = new BinaryWriter (ms)) {  	bw.Write ((ushort)TileSize);  	bw.Write ((ushort)TileSize);  	bw.Write ((uint)totalTiles);  	bw.Write ((ushort)t.Width);  	bw.Write ((ushort)t.Height);  	bw.Write ((uint)0);  	// filesize placeholder  	bw.Flush ();  	bw.Write ((uint)ms.Position + 24);  	// image start  	bw.Write ((uint)0);  	// 0 (32bits)		  	bw.Write ((uint)0x2c730f8c);  	// magic?  	bw.Write ((uint)0);  	// flags start  	bw.Write ((uint)0);  	// walk start  	bw.Write ((uint)0);  	// index start  	Bitmap src = surface1.Image.Clone (new Rectangle (0' 0' surface1.Image.Width' surface1.Image.Height)' surface1.Image.PixelFormat);  	var data = src.LockBits (new Rectangle (0' 0' src.Width' src.Height)' ImageLockMode.ReadOnly' src.PixelFormat);  	unsafe {  		byte* p = (byte*)data.Scan0;  		for (var v = 0; v < t.Height; v++)  			for (var u = 0; u < t.Width; u++) {  				if (t.Cells.ContainsKey (new int2 (u + t.Left' v + t.Top))) {  					byte* q = p + data.Stride * TileSize * (v + t.Top) + TileSize * (u + t.Left);  					for (var j = 0; j < TileSize; j++)  						for (var i = 0; i < TileSize; i++) {  							bw.Write (q [i + j * data.Stride]);  						}  				} else  					for (var x = 0; x < TileSize * TileSize; x++)  						bw.Write ((byte)0);  				/* todo: don't fill with air */}  	}  	src.UnlockBits (data);  	bw.Flush ();  	var indexStart = ms.Position;  	for (var v = 0; v < t.Height; v++)  		for (var u = 0; u < t.Width; u++)  			bw.Write (t.Cells.ContainsKey (new int2 (u + t.Left' v + t.Top)) ? (byte)(u + t.Width * v) : (byte)0xff);  	bw.Flush ();  	var flagsStart = ms.Position;  	for (var x = 0; x < totalTiles; x++)  		bw.Write ((byte)0);  	bw.Flush ();  	var walkStart = ms.Position;  	for (var x = 0; x < totalTiles; x++)  		bw.Write ((byte)0x8);  	var bytes = ms.ToArray ();  	Array.Copy (BitConverter.GetBytes ((uint)bytes.Length)' 0' bytes' 12' 4);  	Array.Copy (BitConverter.GetBytes (flagsStart)' 0' bytes' 28' 4);  	Array.Copy (BitConverter.GetBytes (walkStart)' 0' bytes' 32' 4);  	Array.Copy (BitConverter.GetBytes (indexStart)' 0' bytes' 36' 4);  	File.WriteAllBytes (filename' bytes);  }  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportTemplate,The following statement contains a magic number: using (var bw = new BinaryWriter (ms)) {  	bw.Write ((ushort)TileSize);  	bw.Write ((ushort)TileSize);  	bw.Write ((uint)totalTiles);  	bw.Write ((ushort)t.Width);  	bw.Write ((ushort)t.Height);  	bw.Write ((uint)0);  	// filesize placeholder  	bw.Flush ();  	bw.Write ((uint)ms.Position + 24);  	// image start  	bw.Write ((uint)0);  	// 0 (32bits)		  	bw.Write ((uint)0x2c730f8c);  	// magic?  	bw.Write ((uint)0);  	// flags start  	bw.Write ((uint)0);  	// walk start  	bw.Write ((uint)0);  	// index start  	Bitmap src = surface1.Image.Clone (new Rectangle (0' 0' surface1.Image.Width' surface1.Image.Height)' surface1.Image.PixelFormat);  	var data = src.LockBits (new Rectangle (0' 0' src.Width' src.Height)' ImageLockMode.ReadOnly' src.PixelFormat);  	unsafe {  		byte* p = (byte*)data.Scan0;  		for (var v = 0; v < t.Height; v++)  			for (var u = 0; u < t.Width; u++) {  				if (t.Cells.ContainsKey (new int2 (u + t.Left' v + t.Top))) {  					byte* q = p + data.Stride * TileSize * (v + t.Top) + TileSize * (u + t.Left);  					for (var j = 0; j < TileSize; j++)  						for (var i = 0; i < TileSize; i++) {  							bw.Write (q [i + j * data.Stride]);  						}  				} else  					for (var x = 0; x < TileSize * TileSize; x++)  						bw.Write ((byte)0);  				/* todo: don't fill with air */}  	}  	src.UnlockBits (data);  	bw.Flush ();  	var indexStart = ms.Position;  	for (var v = 0; v < t.Height; v++)  		for (var u = 0; u < t.Width; u++)  			bw.Write (t.Cells.ContainsKey (new int2 (u + t.Left' v + t.Top)) ? (byte)(u + t.Width * v) : (byte)0xff);  	bw.Flush ();  	var flagsStart = ms.Position;  	for (var x = 0; x < totalTiles; x++)  		bw.Write ((byte)0);  	bw.Flush ();  	var walkStart = ms.Position;  	for (var x = 0; x < totalTiles; x++)  		bw.Write ((byte)0x8);  	var bytes = ms.ToArray ();  	Array.Copy (BitConverter.GetBytes ((uint)bytes.Length)' 0' bytes' 12' 4);  	Array.Copy (BitConverter.GetBytes (flagsStart)' 0' bytes' 28' 4);  	Array.Copy (BitConverter.GetBytes (walkStart)' 0' bytes' 32' 4);  	Array.Copy (BitConverter.GetBytes (indexStart)' 0' bytes' 36' 4);  	File.WriteAllBytes (filename' bytes);  }  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportTemplate,The following statement contains a magic number: using (var bw = new BinaryWriter (ms)) {  	bw.Write ((ushort)TileSize);  	bw.Write ((ushort)TileSize);  	bw.Write ((uint)totalTiles);  	bw.Write ((ushort)t.Width);  	bw.Write ((ushort)t.Height);  	bw.Write ((uint)0);  	// filesize placeholder  	bw.Flush ();  	bw.Write ((uint)ms.Position + 24);  	// image start  	bw.Write ((uint)0);  	// 0 (32bits)		  	bw.Write ((uint)0x2c730f8c);  	// magic?  	bw.Write ((uint)0);  	// flags start  	bw.Write ((uint)0);  	// walk start  	bw.Write ((uint)0);  	// index start  	Bitmap src = surface1.Image.Clone (new Rectangle (0' 0' surface1.Image.Width' surface1.Image.Height)' surface1.Image.PixelFormat);  	var data = src.LockBits (new Rectangle (0' 0' src.Width' src.Height)' ImageLockMode.ReadOnly' src.PixelFormat);  	unsafe {  		byte* p = (byte*)data.Scan0;  		for (var v = 0; v < t.Height; v++)  			for (var u = 0; u < t.Width; u++) {  				if (t.Cells.ContainsKey (new int2 (u + t.Left' v + t.Top))) {  					byte* q = p + data.Stride * TileSize * (v + t.Top) + TileSize * (u + t.Left);  					for (var j = 0; j < TileSize; j++)  						for (var i = 0; i < TileSize; i++) {  							bw.Write (q [i + j * data.Stride]);  						}  				} else  					for (var x = 0; x < TileSize * TileSize; x++)  						bw.Write ((byte)0);  				/* todo: don't fill with air */}  	}  	src.UnlockBits (data);  	bw.Flush ();  	var indexStart = ms.Position;  	for (var v = 0; v < t.Height; v++)  		for (var u = 0; u < t.Width; u++)  			bw.Write (t.Cells.ContainsKey (new int2 (u + t.Left' v + t.Top)) ? (byte)(u + t.Width * v) : (byte)0xff);  	bw.Flush ();  	var flagsStart = ms.Position;  	for (var x = 0; x < totalTiles; x++)  		bw.Write ((byte)0);  	bw.Flush ();  	var walkStart = ms.Position;  	for (var x = 0; x < totalTiles; x++)  		bw.Write ((byte)0x8);  	var bytes = ms.ToArray ();  	Array.Copy (BitConverter.GetBytes ((uint)bytes.Length)' 0' bytes' 12' 4);  	Array.Copy (BitConverter.GetBytes (flagsStart)' 0' bytes' 28' 4);  	Array.Copy (BitConverter.GetBytes (walkStart)' 0' bytes' 32' 4);  	Array.Copy (BitConverter.GetBytes (indexStart)' 0' bytes' 36' 4);  	File.WriteAllBytes (filename' bytes);  }  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportTemplate,The following statement contains a magic number: bw.Write ((uint)ms.Position + 24);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportTemplate,The following statement contains a magic number: Array.Copy (BitConverter.GetBytes ((uint)bytes.Length)' 0' bytes' 12' 4);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportTemplate,The following statement contains a magic number: Array.Copy (BitConverter.GetBytes ((uint)bytes.Length)' 0' bytes' 12' 4);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportTemplate,The following statement contains a magic number: Array.Copy (BitConverter.GetBytes (flagsStart)' 0' bytes' 28' 4);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportTemplate,The following statement contains a magic number: Array.Copy (BitConverter.GetBytes (flagsStart)' 0' bytes' 28' 4);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportTemplate,The following statement contains a magic number: Array.Copy (BitConverter.GetBytes (walkStart)' 0' bytes' 32' 4);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportTemplate,The following statement contains a magic number: Array.Copy (BitConverter.GetBytes (walkStart)' 0' bytes' 32' 4);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportTemplate,The following statement contains a magic number: Array.Copy (BitConverter.GetBytes (indexStart)' 0' bytes' 36' 4);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,ExportTemplate,The following statement contains a magic number: Array.Copy (BitConverter.GetBytes (indexStart)' 0' bytes' 36' 4);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,Export,The following statement contains a magic number: if (tilesetFile.Length < 8) {  	tilesetFile = tilesetName.ToLower () + ".yaml";  	//mixFile = tilesetName.ToLower() + ".mix";  } else {  	tilesetFile = tilesetName.ToLower ().Substring (0' 8) + ".yaml";  	//mixFile = tilesetName.ToLower().Substring(0' 8) + ".mix";  }  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,Export,The following statement contains a magic number: if (tilesetFile.Length < 8) {  	tilesetFile = tilesetName.ToLower () + ".yaml";  	//mixFile = tilesetName.ToLower() + ".mix";  } else {  	tilesetFile = tilesetName.ToLower ().Substring (0' 8) + ".yaml";  	//mixFile = tilesetName.ToLower().Substring(0' 8) + ".mix";  }  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,Export,The following statement contains a magic number: tilesetFile = tilesetName.ToLower ().Substring (0' 8) + ".yaml";  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,txtTilesetName_TextChanged,The following statement contains a magic number: if (tilesetFile.Length > 8) {  	tilesetFile = tilesetFile.ToLower ().Substring (0' 8);  }  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,txtTilesetName_TextChanged,The following statement contains a magic number: if (tilesetFile.Length > 8) {  	tilesetFile = tilesetFile.ToLower ().Substring (0' 8);  }  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,txtTilesetName_TextChanged,The following statement contains a magic number: tilesetFile = tilesetFile.ToLower ().Substring (0' 8);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,txtTilesetName_TextChanged,The following statement contains a magic number: if (tilesetFile.Length < 3) {  	txtExt.Text = ".tem'.shp";  } else {  	txtExt.Text = "." + tilesetFile.ToLower ().Substring (0' 3) + "'.shp";  }  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,txtTilesetName_TextChanged,The following statement contains a magic number: if (tilesetFile.Length < 3) {  	txtExt.Text = ".tem'.shp";  } else {  	txtExt.Text = "." + tilesetFile.ToLower ().Substring (0' 3) + "'.shp";  }  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,txtTilesetName_TextChanged,The following statement contains a magic number: txtExt.Text = "." + tilesetFile.ToLower ().Substring (0' 3) + "'.shp";  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripContainer1.ContentPanel.Size = new System.Drawing.Size (908' 571);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripContainer1.ContentPanel.Size = new System.Drawing.Size (908' 571);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripContainer1.Size = new System.Drawing.Size (908' 596);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripContainer1.Size = new System.Drawing.Size (908' 596);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size (788' 571);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size (788' 571);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.panel1.TabIndex = 3;  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (2' "road.png");  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (3' "rock.png");  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (4' "river.png");  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (5' "rough.png");  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (6' "wall.png");  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (7' "beach.png");  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (8' "tree.png");  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (9' "tiberium.png");  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.tsTerrainTypes.Location = new System.Drawing.Point (788' 0);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.tsTerrainTypes.Size = new System.Drawing.Size (120' 571);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.tsTerrainTypes.Size = new System.Drawing.Size (120' 571);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel3.Size = new System.Drawing.Size (118' 13);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel3.Size = new System.Drawing.Size (118' 13);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator3.Size = new System.Drawing.Size (118' 6);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator3.Size = new System.Drawing.Size (118' 6);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel4.Size = new System.Drawing.Size (118' 13);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel4.Size = new System.Drawing.Size (118' 13);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.txtTilesetName.MaxLength = 32;  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.txtTilesetName.Size = new System.Drawing.Size (116' 21);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.txtTilesetName.Size = new System.Drawing.Size (116' 21);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel5.Size = new System.Drawing.Size (118' 13);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel5.Size = new System.Drawing.Size (118' 13);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.txtID.Size = new System.Drawing.Size (116' 21);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.txtID.Size = new System.Drawing.Size (116' 21);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.lblExt.Size = new System.Drawing.Size (118' 13);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.lblExt.Size = new System.Drawing.Size (118' 13);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.txtExt.Size = new System.Drawing.Size (116' 21);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.txtExt.Size = new System.Drawing.Size (116' 21);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel6.Size = new System.Drawing.Size (118' 13);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel6.Size = new System.Drawing.Size (118' 13);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.txtPal.Size = new System.Drawing.Size (116' 21);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.txtPal.Size = new System.Drawing.Size (116' 21);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator5.Size = new System.Drawing.Size (118' 6);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator5.Size = new System.Drawing.Size (118' 6);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel2.Size = new System.Drawing.Size (118' 13);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel2.Size = new System.Drawing.Size (118' 13);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator4.Size = new System.Drawing.Size (118' 6);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator4.Size = new System.Drawing.Size (118' 6);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton1.Size = new System.Drawing.Size (118' 20);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton1.Size = new System.Drawing.Size (118' 20);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Location = new System.Drawing.Point (3' 0);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size (275' 25);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size (275' 25);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton15.Size = new System.Drawing.Size (48' 22);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton15.Size = new System.Drawing.Size (48' 22);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton2.Size = new System.Drawing.Size (51' 22);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton2.Size = new System.Drawing.Size (51' 22);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton14.Size = new System.Drawing.Size (59' 22);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton14.Size = new System.Drawing.Size (59' 22);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton16.Size = new System.Drawing.Size (65' 22);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton16.Size = new System.Drawing.Size (65' 22);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size (6' 25);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size (6' 25);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton3.Size = new System.Drawing.Size (70' 22);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton3.Size = new System.Drawing.Size (70' 22);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.surface1.Size = new System.Drawing.Size (653' 454);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.surface1.Size = new System.Drawing.Size (653' 454);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.surface1.TabIndex = 2;  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (908' 596);  
Magic Number,OpenRA.TilesetBuilder,frmBuilder,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmBuilder.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (908' 596);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,btnOk_Click,The following statement contains a magic number: if (!PaletteFromImage) {  	if (PaletteFile.Length < 5) {  		MessageBox.Show ("No palette specified"' "Warning"' MessageBoxButtons.OK' MessageBoxIcon.Warning);  	}  }  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,btnOk_Click,The following statement contains a magic number: if (PaletteFile.Length < 5) {  	MessageBox.Show ("No palette specified"' "Warning"' MessageBoxButtons.OK' MessageBoxIcon.Warning);  }  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,btnOk_Click,The following statement contains a magic number: if (ImageFile.Length < 5) {  	MessageBox.Show ("No image selected"' "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error);  } else {  	DialogResult = DialogResult.OK;  	Close ();  }  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.numSize.Location = new System.Drawing.Point (66' 6);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.numSize.Location = new System.Drawing.Point (66' 6);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.numSize.Maximum = new decimal (new int[] {  	264'  	0'  	0'  	0  });  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.numSize.Minimum = new decimal (new int[] {  	24'  	0'  	0'  	0  });  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.numSize.Size = new System.Drawing.Size (49' 20);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.numSize.Size = new System.Drawing.Size (49' 20);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.numSize.Value = new decimal (new int[] {  	24'  	0'  	0'  	0  });  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point (12' 9);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point (12' 9);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size (48' 13);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size (48' 13);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point (12' 34);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point (12' 34);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size (43' 13);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size (43' 13);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 2;  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.txtPal.Location = new System.Drawing.Point (15' 52);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.txtPal.Location = new System.Drawing.Point (15' 52);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.txtPal.Size = new System.Drawing.Size (267' 20);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.txtPal.Size = new System.Drawing.Size (267' 20);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.txtPal.TabIndex = 3;  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.btnPalBrowse.Location = new System.Drawing.Point (288' 50);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.btnPalBrowse.Location = new System.Drawing.Point (288' 50);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.btnPalBrowse.Size = new System.Drawing.Size (26' 23);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.btnPalBrowse.Size = new System.Drawing.Size (26' 23);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.btnPalBrowse.TabIndex = 4;  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.chkUsePalFromImage.Location = new System.Drawing.Point (66' 34);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.chkUsePalFromImage.Location = new System.Drawing.Point (66' 34);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.chkUsePalFromImage.Size = new System.Drawing.Size (134' 17);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.chkUsePalFromImage.Size = new System.Drawing.Size (134' 17);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.chkUsePalFromImage.TabIndex = 5;  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point (12' 75);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point (12' 75);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size (39' 13);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size (39' 13);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 6;  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.imgImage.Location = new System.Drawing.Point (15' 120);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.imgImage.Location = new System.Drawing.Point (15' 120);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.imgImage.Size = new System.Drawing.Size (299' 219);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.imgImage.Size = new System.Drawing.Size (299' 219);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.imgImage.TabIndex = 7;  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.btnImgBrowse.Location = new System.Drawing.Point (288' 91);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.btnImgBrowse.Location = new System.Drawing.Point (288' 91);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.btnImgBrowse.Size = new System.Drawing.Size (26' 23);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.btnImgBrowse.Size = new System.Drawing.Size (26' 23);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.btnImgBrowse.TabIndex = 9;  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.txtImage.Location = new System.Drawing.Point (15' 91);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.txtImage.Location = new System.Drawing.Point (15' 91);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.txtImage.Size = new System.Drawing.Size (267' 20);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.txtImage.Size = new System.Drawing.Size (267' 20);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.txtImage.TabIndex = 8;  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point (239' 345);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point (239' 345);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size (75' 23);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size (75' 23);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.TabIndex = 10;  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.btnOk.Location = new System.Drawing.Point (158' 345);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.btnOk.Location = new System.Drawing.Point (158' 345);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.btnOk.Size = new System.Drawing.Size (75' 23);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.btnOk.Size = new System.Drawing.Size (75' 23);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.btnOk.TabIndex = 11;  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (329' 378);  
Magic Number,OpenRA.TilesetBuilder,frmNew,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\frmNew.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (329' 378);  
Magic Number,OpenRA.TilesetBuilder,Program,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Program.cs,Main,The following statement contains a magic number: if (args.Length < 1) {  	Application.Run (new frmBuilder (""' "0"' false' "Tilesets"));  } else {  	if (args.Contains ("--export"))  		Application.Run (new frmBuilder (args [0]' args [1]' true' args [3]));  	else  		Application.Run (new frmBuilder (args [0]' args [1]' false' "Tilesets"));  }  
Magic Number,OpenRA.TilesetBuilder,Program,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Program.cs,Main,The following statement contains a magic number: if (args.Contains ("--export"))  	Application.Run (new frmBuilder (args [0]' args [1]' true' args [3]));  else  	Application.Run (new frmBuilder (args [0]' args [1]' false' "Tilesets"));  
Magic Number,OpenRA.TilesetBuilder,Program,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Program.cs,Main,The following statement contains a magic number: Application.Run (new frmBuilder (args [0]' args [1]' true' args [3]));  
Magic Number,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The following statement contains a magic number: if (ShowTerrainTypes) {  	for (var i = 0; i <= TerrainTypes.GetUpperBound (0); i++)  		for (var j = 0; j <= TerrainTypes.GetUpperBound (1); j++)  			if (TerrainTypes [i' j] != 0) {  				//e.Graphics.FillRectangle(Brushes.Black' TileSize * i + 8' TileSize * j + 8' 16' 16);  				e.Graphics.DrawImage (icon [TerrainTypes [i' j]]' TileSize * i + 8' TileSize * j + 8' 16' 16);  				//e.Graphics.DrawString(TerrainTypes[i' j].ToString()'  				//Font' Brushes.LimeGreen' TileSize * i + 10' TileSize * j + 10);  			}  }  
Magic Number,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The following statement contains a magic number: if (ShowTerrainTypes) {  	for (var i = 0; i <= TerrainTypes.GetUpperBound (0); i++)  		for (var j = 0; j <= TerrainTypes.GetUpperBound (1); j++)  			if (TerrainTypes [i' j] != 0) {  				//e.Graphics.FillRectangle(Brushes.Black' TileSize * i + 8' TileSize * j + 8' 16' 16);  				e.Graphics.DrawImage (icon [TerrainTypes [i' j]]' TileSize * i + 8' TileSize * j + 8' 16' 16);  				//e.Graphics.DrawString(TerrainTypes[i' j].ToString()'  				//Font' Brushes.LimeGreen' TileSize * i + 10' TileSize * j + 10);  			}  }  
Magic Number,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The following statement contains a magic number: if (ShowTerrainTypes) {  	for (var i = 0; i <= TerrainTypes.GetUpperBound (0); i++)  		for (var j = 0; j <= TerrainTypes.GetUpperBound (1); j++)  			if (TerrainTypes [i' j] != 0) {  				//e.Graphics.FillRectangle(Brushes.Black' TileSize * i + 8' TileSize * j + 8' 16' 16);  				e.Graphics.DrawImage (icon [TerrainTypes [i' j]]' TileSize * i + 8' TileSize * j + 8' 16' 16);  				//e.Graphics.DrawString(TerrainTypes[i' j].ToString()'  				//Font' Brushes.LimeGreen' TileSize * i + 10' TileSize * j + 10);  			}  }  
Magic Number,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The following statement contains a magic number: if (ShowTerrainTypes) {  	for (var i = 0; i <= TerrainTypes.GetUpperBound (0); i++)  		for (var j = 0; j <= TerrainTypes.GetUpperBound (1); j++)  			if (TerrainTypes [i' j] != 0) {  				//e.Graphics.FillRectangle(Brushes.Black' TileSize * i + 8' TileSize * j + 8' 16' 16);  				e.Graphics.DrawImage (icon [TerrainTypes [i' j]]' TileSize * i + 8' TileSize * j + 8' 16' 16);  				//e.Graphics.DrawString(TerrainTypes[i' j].ToString()'  				//Font' Brushes.LimeGreen' TileSize * i + 10' TileSize * j + 10);  			}  }  
Magic Number,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The following statement contains a magic number: for (var i = 0; i <= TerrainTypes.GetUpperBound (0); i++)  	for (var j = 0; j <= TerrainTypes.GetUpperBound (1); j++)  		if (TerrainTypes [i' j] != 0) {  			//e.Graphics.FillRectangle(Brushes.Black' TileSize * i + 8' TileSize * j + 8' 16' 16);  			e.Graphics.DrawImage (icon [TerrainTypes [i' j]]' TileSize * i + 8' TileSize * j + 8' 16' 16);  			//e.Graphics.DrawString(TerrainTypes[i' j].ToString()'  			//Font' Brushes.LimeGreen' TileSize * i + 10' TileSize * j + 10);  		}  
Magic Number,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The following statement contains a magic number: for (var i = 0; i <= TerrainTypes.GetUpperBound (0); i++)  	for (var j = 0; j <= TerrainTypes.GetUpperBound (1); j++)  		if (TerrainTypes [i' j] != 0) {  			//e.Graphics.FillRectangle(Brushes.Black' TileSize * i + 8' TileSize * j + 8' 16' 16);  			e.Graphics.DrawImage (icon [TerrainTypes [i' j]]' TileSize * i + 8' TileSize * j + 8' 16' 16);  			//e.Graphics.DrawString(TerrainTypes[i' j].ToString()'  			//Font' Brushes.LimeGreen' TileSize * i + 10' TileSize * j + 10);  		}  
Magic Number,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The following statement contains a magic number: for (var i = 0; i <= TerrainTypes.GetUpperBound (0); i++)  	for (var j = 0; j <= TerrainTypes.GetUpperBound (1); j++)  		if (TerrainTypes [i' j] != 0) {  			//e.Graphics.FillRectangle(Brushes.Black' TileSize * i + 8' TileSize * j + 8' 16' 16);  			e.Graphics.DrawImage (icon [TerrainTypes [i' j]]' TileSize * i + 8' TileSize * j + 8' 16' 16);  			//e.Graphics.DrawString(TerrainTypes[i' j].ToString()'  			//Font' Brushes.LimeGreen' TileSize * i + 10' TileSize * j + 10);  		}  
Magic Number,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The following statement contains a magic number: for (var i = 0; i <= TerrainTypes.GetUpperBound (0); i++)  	for (var j = 0; j <= TerrainTypes.GetUpperBound (1); j++)  		if (TerrainTypes [i' j] != 0) {  			//e.Graphics.FillRectangle(Brushes.Black' TileSize * i + 8' TileSize * j + 8' 16' 16);  			e.Graphics.DrawImage (icon [TerrainTypes [i' j]]' TileSize * i + 8' TileSize * j + 8' 16' 16);  			//e.Graphics.DrawString(TerrainTypes[i' j].ToString()'  			//Font' Brushes.LimeGreen' TileSize * i + 10' TileSize * j + 10);  		}  
Magic Number,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The following statement contains a magic number: for (var j = 0; j <= TerrainTypes.GetUpperBound (1); j++)  	if (TerrainTypes [i' j] != 0) {  		//e.Graphics.FillRectangle(Brushes.Black' TileSize * i + 8' TileSize * j + 8' 16' 16);  		e.Graphics.DrawImage (icon [TerrainTypes [i' j]]' TileSize * i + 8' TileSize * j + 8' 16' 16);  		//e.Graphics.DrawString(TerrainTypes[i' j].ToString()'  		//Font' Brushes.LimeGreen' TileSize * i + 10' TileSize * j + 10);  	}  
Magic Number,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The following statement contains a magic number: for (var j = 0; j <= TerrainTypes.GetUpperBound (1); j++)  	if (TerrainTypes [i' j] != 0) {  		//e.Graphics.FillRectangle(Brushes.Black' TileSize * i + 8' TileSize * j + 8' 16' 16);  		e.Graphics.DrawImage (icon [TerrainTypes [i' j]]' TileSize * i + 8' TileSize * j + 8' 16' 16);  		//e.Graphics.DrawString(TerrainTypes[i' j].ToString()'  		//Font' Brushes.LimeGreen' TileSize * i + 10' TileSize * j + 10);  	}  
Magic Number,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The following statement contains a magic number: for (var j = 0; j <= TerrainTypes.GetUpperBound (1); j++)  	if (TerrainTypes [i' j] != 0) {  		//e.Graphics.FillRectangle(Brushes.Black' TileSize * i + 8' TileSize * j + 8' 16' 16);  		e.Graphics.DrawImage (icon [TerrainTypes [i' j]]' TileSize * i + 8' TileSize * j + 8' 16' 16);  		//e.Graphics.DrawString(TerrainTypes[i' j].ToString()'  		//Font' Brushes.LimeGreen' TileSize * i + 10' TileSize * j + 10);  	}  
Magic Number,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The following statement contains a magic number: for (var j = 0; j <= TerrainTypes.GetUpperBound (1); j++)  	if (TerrainTypes [i' j] != 0) {  		//e.Graphics.FillRectangle(Brushes.Black' TileSize * i + 8' TileSize * j + 8' 16' 16);  		e.Graphics.DrawImage (icon [TerrainTypes [i' j]]' TileSize * i + 8' TileSize * j + 8' 16' 16);  		//e.Graphics.DrawString(TerrainTypes[i' j].ToString()'  		//Font' Brushes.LimeGreen' TileSize * i + 10' TileSize * j + 10);  	}  
Magic Number,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The following statement contains a magic number: if (TerrainTypes [i' j] != 0) {  	//e.Graphics.FillRectangle(Brushes.Black' TileSize * i + 8' TileSize * j + 8' 16' 16);  	e.Graphics.DrawImage (icon [TerrainTypes [i' j]]' TileSize * i + 8' TileSize * j + 8' 16' 16);  	//e.Graphics.DrawString(TerrainTypes[i' j].ToString()'  	//Font' Brushes.LimeGreen' TileSize * i + 10' TileSize * j + 10);  }  
Magic Number,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The following statement contains a magic number: if (TerrainTypes [i' j] != 0) {  	//e.Graphics.FillRectangle(Brushes.Black' TileSize * i + 8' TileSize * j + 8' 16' 16);  	e.Graphics.DrawImage (icon [TerrainTypes [i' j]]' TileSize * i + 8' TileSize * j + 8' 16' 16);  	//e.Graphics.DrawString(TerrainTypes[i' j].ToString()'  	//Font' Brushes.LimeGreen' TileSize * i + 10' TileSize * j + 10);  }  
Magic Number,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The following statement contains a magic number: if (TerrainTypes [i' j] != 0) {  	//e.Graphics.FillRectangle(Brushes.Black' TileSize * i + 8' TileSize * j + 8' 16' 16);  	e.Graphics.DrawImage (icon [TerrainTypes [i' j]]' TileSize * i + 8' TileSize * j + 8' 16' 16);  	//e.Graphics.DrawString(TerrainTypes[i' j].ToString()'  	//Font' Brushes.LimeGreen' TileSize * i + 10' TileSize * j + 10);  }  
Magic Number,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The following statement contains a magic number: if (TerrainTypes [i' j] != 0) {  	//e.Graphics.FillRectangle(Brushes.Black' TileSize * i + 8' TileSize * j + 8' 16' 16);  	e.Graphics.DrawImage (icon [TerrainTypes [i' j]]' TileSize * i + 8' TileSize * j + 8' 16' 16);  	//e.Graphics.DrawString(TerrainTypes[i' j].ToString()'  	//Font' Brushes.LimeGreen' TileSize * i + 10' TileSize * j + 10);  }  
Magic Number,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawImage (icon [TerrainTypes [i' j]]' TileSize * i + 8' TileSize * j + 8' 16' 16);  
Magic Number,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawImage (icon [TerrainTypes [i' j]]' TileSize * i + 8' TileSize * j + 8' 16' 16);  
Magic Number,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawImage (icon [TerrainTypes [i' j]]' TileSize * i + 8' TileSize * j + 8' 16' 16);  
Magic Number,OpenRA.TilesetBuilder,Surface,F:\newReposMay17\chrisforbes_OpenRA\OpenRA.TilesetBuilder\Surface.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawImage (icon [TerrainTypes [i' j]]' TileSize * i + 8' TileSize * j + 8' 16' 16);  
