Implementation smell,Namespace,Class,File,Method,Description
Long Method,OpenRA.FileFormats,FieldLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FieldLoader.cs,GetValue,The method has 102 lines of code.
Complex Method,OpenRA.FileFormats,ColorRamp,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\ColorRamp.cs,ColorFromHSL,Cyclomatic complexity of the method is 8
Complex Method,OpenRA.FileFormats,Evaluator,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Evaluator.cs,ToPostfix,Cyclomatic complexity of the method is 10
Complex Method,OpenRA.FileFormats,FieldLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FieldLoader.cs,GetValue,Cyclomatic complexity of the method is 28
Complex Method,OpenRA.FileFormats,Huffman,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blast.cs,Huffman,Cyclomatic complexity of the method is 9
Complex Method,OpenRA.FileFormats,Format40,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Format40.cs,DecodeInto,Cyclomatic complexity of the method is 12
Complex Method,OpenRA.FileFormats,Format80,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Format80.cs,DecodeInto,Cyclomatic complexity of the method is 12
Complex Method,OpenRA.FileFormats,VqaReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\VqaReader.cs,DecodeVQFR,Cyclomatic complexity of the method is 11
Complex Method,OpenRA.FileFormats,MiniYaml,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\MiniYaml.cs,Merge,Cyclomatic complexity of the method is 9
Complex Method,OpenRA.FileFormats.Graphics,PngLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\PngLoader.cs,Load,Cyclomatic complexity of the method is 15
Long Parameter List,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,sub_bignum,The method has 5 parameters. Parameters: dest' src1' src2' carry' len
Long Parameter List,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,sub_bignum,The method has 5 parameters. Parameters: dest' src1' src2' carry' len
Long Parameter List,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,calc_a_key,The method has 5 parameters. Parameters: n1' n2' n3' n4' len
Long Parameter List,OpenRA.FileFormats,InstallUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\InstallUtils.cs,ExtractFromPackage,The method has 6 parameters. Parameters: srcPath' package' files' destPath' onProgress' onError
Long Parameter List,OpenRA.FileFormats,InstallUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\InstallUtils.cs,CopyFiles,The method has 5 parameters. Parameters: srcPath' files' destPath' onProgress' onError
Long Parameter List,OpenRA,Exts,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Exts.cs,ToDictionaryWithConflictLog,The method has 5 parameters. Parameters: source' keySelector' debugName' logKey' logValue
Long Parameter List,OpenRA,Exts,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Exts.cs,ToDictionaryWithConflictLog,The method has 6 parameters. Parameters: source' keySelector' elementSelector' debugName' logKey' logValue
Long Parameter List,OpenRA,MouseInput,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\IInputHandler.cs,MouseInput,The method has 5 parameters. Parameters: ev' button' location' mods' multiTapCount
Long Parameter List,OpenRA.FileFormats.Graphics,PngLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\PngLoader.cs,UnapplyFilter,The method has 5 parameters. Parameters: f' x' a' b' c
Long Statement,OpenRA.FileFormats,FieldLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FieldLoader.cs,TryGetValueFromYaml,The length of the statement  "			throw new InvalidOperationException( "TryGetValueFromYaml: unable to load field {0} (of type {1})".F( fieldName' fieldType ) ); " is 127.
Long Statement,OpenRA.FileFormats,FieldLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FieldLoader.cs,GetValue,The length of the statement  "					return Color.FromArgb(int.Parse(parts[0]).Clamp(0' 255)' int.Parse(parts[1]).Clamp(0' 255)' int.Parse(parts[2]).Clamp(0' 255)); " is 127.
Long Statement,OpenRA.FileFormats,FieldLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FieldLoader.cs,GetValue,The length of the statement  "					return Color.FromArgb(int.Parse(parts[0]).Clamp(0' 255)' int.Parse(parts[1]).Clamp(0' 255)' int.Parse(parts[2]).Clamp(0' 255)' int.Parse(parts[3]).Clamp(0' 255)); " is 162.
Long Statement,OpenRA.FileFormats,LoadUsingAttribute,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FieldLoader.cs,LoaderFunc,The length of the statement  "					loaderFuncCache = (Func<MiniYaml' object>)Delegate.CreateDelegate( typeof( Func<MiniYaml' object> )' field.DeclaringType.GetMethod( Loader' bf ) ); " is 147.
Long Statement,OpenRA.FileFormats,FieldSaver,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FieldLoader.cs,FormatValue,The length of the statement  "			// Don't save floats in settings.yaml using country-specific decimal separators which can be misunderstood as group seperators. " is 127.
Long Statement,OpenRA.FileFormats,MiniYaml,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\MiniYaml.cs,FromDictionary,The length of the statement  "			return new MiniYaml( null' dict.Select( x => new MiniYamlNode( x.Key.ToString()' new MiniYaml( x.Value.ToString() ) ) ).ToList() ); " is 131.
Long Statement,OpenRA.FileFormats,MiniYaml,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\MiniYaml.cs,Merge,The length of the statement  "			var aDict = a.ToDictionaryWithConflictLog(x => x.Key' "MiniYaml.Merge"' null' x => "{0} (at {1})".F(x.Key' x.Location)); " is 120.
Long Statement,OpenRA.FileFormats,MiniYaml,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\MiniYaml.cs,Merge,The length of the statement  "			var bDict = b.ToDictionaryWithConflictLog(x => x.Key' "MiniYaml.Merge"' null' x => "{0} (at {1})".F(x.Key' x.Location)); " is 120.
Long Statement,OpenRA.FileFormats,MiniYaml,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\MiniYaml.cs,Merge,The length of the statement  "					var merged = ( aa == null || bb == null ) ? aa ?? bb : new MiniYamlNode( key' Merge( aa.Value' bb.Value' throwErrors )' loc ); " is 126.
Long Statement,OpenRA,Exts,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Exts.cs,ToDictionaryWithConflictLog,The length of the statement  "				string badKeysFormatted = String.Join("' "' dupKeys.Select(p => "{0}: [{1}]".F(logKey(p.Key)' String.Join("'"' p.Value.ToArray()))).ToArray()); " is 143.
Long Statement,OpenRA,int2,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Primitives\int2.cs,Swap,The length of the statement  "			return (uint)((orig & 0xff000000) >> 24) | ((orig & 0x00ff0000) >> 8) | ((orig & 0x0000ff00) << 8) | ((orig & 0x000000ff) << 24); " is 129.
Empty Catch Block,OpenRA.FileFormats,FileSystem,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Filesystem\FileSystem.cs,Mount,The method has an empty catch block.
Empty Catch Block,OpenRA,Platform,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Platform.cs,GetCurrentPlatform,The method has an empty catch block.
Empty Catch Block,OpenRA,Log,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Support\Log.cs,AddChannel,The method has an empty catch block.
Magic Number,OpenRA.FileFormats,ColorRamp,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\ColorRamp.cs,GetColor,The following statement contains a magic number: return ColorFromHSL( H / 255f' S / 255f' float2.Lerp( L / 255f' L*R / (255f * 255f)' t ) );
Magic Number,OpenRA.FileFormats,ColorRamp,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\ColorRamp.cs,GetColor,The following statement contains a magic number: return ColorFromHSL( H / 255f' S / 255f' float2.Lerp( L / 255f' L*R / (255f * 255f)' t ) );
Magic Number,OpenRA.FileFormats,ColorRamp,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\ColorRamp.cs,GetColor,The following statement contains a magic number: return ColorFromHSL( H / 255f' S / 255f' float2.Lerp( L / 255f' L*R / (255f * 255f)' t ) );
Magic Number,OpenRA.FileFormats,ColorRamp,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\ColorRamp.cs,GetColor,The following statement contains a magic number: return ColorFromHSL( H / 255f' S / 255f' float2.Lerp( L / 255f' L*R / (255f * 255f)' t ) );
Magic Number,OpenRA.FileFormats,ColorRamp,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\ColorRamp.cs,GetColor,The following statement contains a magic number: return ColorFromHSL( H / 255f' S / 255f' float2.Lerp( L / 255f' L*R / (255f * 255f)' t ) );
Magic Number,OpenRA.FileFormats,ColorRamp,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\ColorRamp.cs,ColorFromHSL,The following statement contains a magic number: var q = (l < 0.5f) ? l * (1 + s) : l + s - (l * s);
Magic Number,OpenRA.FileFormats,ColorRamp,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\ColorRamp.cs,ColorFromHSL,The following statement contains a magic number: var p = 2 * l - q;
Magic Number,OpenRA.FileFormats,ColorRamp,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\ColorRamp.cs,ColorFromHSL,The following statement contains a magic number: float[] trgb = { hk + 1 / 3.0f' hk' hk - 1/3.0f };
Magic Number,OpenRA.FileFormats,ColorRamp,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\ColorRamp.cs,ColorFromHSL,The following statement contains a magic number: float[] trgb = { hk + 1 / 3.0f' hk' hk - 1/3.0f };
Magic Number,OpenRA.FileFormats,ColorRamp,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\ColorRamp.cs,ColorFromHSL,The following statement contains a magic number: k < 3
Magic Number,OpenRA.FileFormats,ColorRamp,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\ColorRamp.cs,ColorFromHSL,The following statement contains a magic number: rgb[k] = (p + ((q - p) * 6 * trgb[k]));
Magic Number,OpenRA.FileFormats,ColorRamp,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\ColorRamp.cs,ColorFromHSL,The following statement contains a magic number: trgb[k] < 1 / 6.0f
Magic Number,OpenRA.FileFormats,ColorRamp,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\ColorRamp.cs,ColorFromHSL,The following statement contains a magic number: k < 3
Magic Number,OpenRA.FileFormats,ColorRamp,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\ColorRamp.cs,ColorFromHSL,The following statement contains a magic number: return Color.FromArgb((int)(rgb[0] * 255)' (int)(rgb[1] * 255)' (int)(rgb[2] * 255));
Magic Number,OpenRA.FileFormats,ColorRamp,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\ColorRamp.cs,ColorFromHSL,The following statement contains a magic number: return Color.FromArgb((int)(rgb[0] * 255)' (int)(rgb[1] * 255)' (int)(rgb[2] * 255));
Magic Number,OpenRA.FileFormats,ColorRamp,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\ColorRamp.cs,ColorFromHSL,The following statement contains a magic number: return Color.FromArgb((int)(rgb[0] * 255)' (int)(rgb[1] * 255)' (int)(rgb[2] * 255));
Magic Number,OpenRA.FileFormats,ColorRamp,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\ColorRamp.cs,ColorFromHSL,The following statement contains a magic number: return Color.FromArgb((int)(rgb[0] * 255)' (int)(rgb[1] * 255)' (int)(rgb[2] * 255));
Magic Number,OpenRA.FileFormats,FieldSaver,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FieldLoader.cs,FormatValue,The following statement contains a magic number: return "{0}'{1}'{2}'{3}".F(((int)c.A).Clamp(0' 255)'  					((int)c.R).Clamp(0' 255)'  					((int)c.G).Clamp(0' 255)'  					((int)c.B).Clamp(0' 255));
Magic Number,OpenRA.FileFormats,FieldSaver,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FieldLoader.cs,FormatValue,The following statement contains a magic number: return "{0}'{1}'{2}'{3}".F(((int)c.A).Clamp(0' 255)'  					((int)c.R).Clamp(0' 255)'  					((int)c.G).Clamp(0' 255)'  					((int)c.B).Clamp(0' 255));
Magic Number,OpenRA.FileFormats,FieldSaver,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FieldLoader.cs,FormatValue,The following statement contains a magic number: return "{0}'{1}'{2}'{3}".F(((int)c.A).Clamp(0' 255)'  					((int)c.R).Clamp(0' 255)'  					((int)c.G).Clamp(0' 255)'  					((int)c.B).Clamp(0' 255));
Magic Number,OpenRA.FileFormats,FieldSaver,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FieldLoader.cs,FormatValue,The following statement contains a magic number: return "{0}'{1}'{2}'{3}".F(((int)c.A).Clamp(0' 255)'  					((int)c.R).Clamp(0' 255)'  					((int)c.G).Clamp(0' 255)'  					((int)c.B).Clamp(0' 255));
Magic Number,OpenRA.FileFormats,AudLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\AudLoader.cs,DecodeSample,The following statement contains a magic number: var sb = (b & 8) != 0;
Magic Number,OpenRA.FileFormats,AudLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\AudLoader.cs,DecodeSample,The following statement contains a magic number: b &= 7;
Magic Number,OpenRA.FileFormats,AudLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\AudLoader.cs,DecodeSample,The following statement contains a magic number: var delta = (StepTable[index] * b) / 4 + StepTable[index] / 8;
Magic Number,OpenRA.FileFormats,AudLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\AudLoader.cs,DecodeSample,The following statement contains a magic number: var delta = (StepTable[index] * b) / 4 + StepTable[index] / 8;
Magic Number,OpenRA.FileFormats,AudLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\AudLoader.cs,DecodeSample,The following statement contains a magic number: index = 88;
Magic Number,OpenRA.FileFormats,AudLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\AudLoader.cs,DecodeSample,The following statement contains a magic number: index > 88
Magic Number,OpenRA.FileFormats,AudLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\AudLoader.cs,LoadSound,The following statement contains a magic number: var outputSize = raw.Length * 4;
Magic Number,OpenRA.FileFormats,AudLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\AudLoader.cs,LoadSound,The following statement contains a magic number: output[offset++] = (byte)(t >> 8);
Magic Number,OpenRA.FileFormats,AudLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\AudLoader.cs,LoadSound,The following statement contains a magic number: t = DecodeSample((byte)(b >> 4)' ref index' ref currentSample);
Magic Number,OpenRA.FileFormats,AudLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\AudLoader.cs,LoadSound,The following statement contains a magic number: output[offset++] = (byte)(t >> 8);
Magic Number,OpenRA.FileFormats,AudLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\AudLoader.cs,SoundLength,The following statement contains a magic number: samples /= 2;
Magic Number,OpenRA.FileFormats,AudLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\AudLoader.cs,SoundLength,The following statement contains a magic number: samples /= 2;
Magic Number,OpenRA.FileFormats,AudLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\AudLoader.cs,LoadSound,The following statement contains a magic number: output[offset++] = (byte)(t >> 8);
Magic Number,OpenRA.FileFormats,AudLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\AudLoader.cs,LoadSound,The following statement contains a magic number: t = DecodeSample((byte)(b >> 4)' ref index' ref currentSample);
Magic Number,OpenRA.FileFormats,AudLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\AudLoader.cs,LoadSound,The following statement contains a magic number: output[offset++] = (byte)(t >> 8);
Magic Number,OpenRA.FileFormats,AudLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\AudLoader.cs,LoadSound,The following statement contains a magic number: dataSize -= 8 + chunk.CompressedSize;
Magic Number,OpenRA.FileFormats,Blast,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blast.cs,Decompress,The following statement contains a magic number: int coded = br.ReadBits(8);
Magic Number,OpenRA.FileFormats,Blast,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blast.cs,Decompress,The following statement contains a magic number: int dict = br.ReadBits(8);
Magic Number,OpenRA.FileFormats,Blast,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blast.cs,Decompress,The following statement contains a magic number: dict < 4 || dict > 6
Magic Number,OpenRA.FileFormats,Blast,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blast.cs,Decompress,The following statement contains a magic number: dict < 4 || dict > 6
Magic Number,OpenRA.FileFormats,Blast,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blast.cs,Decompress,The following statement contains a magic number: len == 519
Magic Number,OpenRA.FileFormats,Blast,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blast.cs,Decompress,The following statement contains a magic number: symbol = len == 2 ? 2 : dict;
Magic Number,OpenRA.FileFormats,Blast,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blast.cs,Decompress,The following statement contains a magic number: symbol = len == 2 ? 2 : dict;
Magic Number,OpenRA.FileFormats,BitReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blast.cs,ReadBits,The following statement contains a magic number: bitCount = 8;
Magic Number,OpenRA.FileFormats,Huffman,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blast.cs,Huffman,The following statement contains a magic number: short[] length = new short[256];
Magic Number,OpenRA.FileFormats,Huffman,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blast.cs,Huffman,The following statement contains a magic number: int num = (code >> 4) + 1;
Magic Number,OpenRA.FileFormats,Huffman,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blast.cs,Huffman,The following statement contains a magic number: byte len = (byte)(code & 15);
Magic Number,OpenRA.FileFormats,Blowfish,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blowfish.cs,Blowfish,The following statement contains a magic number: m_p[i] ^= a << 24 | b << 16 | c << 8 | d;
Magic Number,OpenRA.FileFormats,Blowfish,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blowfish.cs,Blowfish,The following statement contains a magic number: m_p[i] ^= a << 24 | b << 16 | c << 8 | d;
Magic Number,OpenRA.FileFormats,Blowfish,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blowfish.cs,Blowfish,The following statement contains a magic number: m_p[i] ^= a << 24 | b << 16 | c << 8 | d;
Magic Number,OpenRA.FileFormats,Blowfish,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blowfish.cs,Blowfish,The following statement contains a magic number: i < 18
Magic Number,OpenRA.FileFormats,Blowfish,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blowfish.cs,Blowfish,The following statement contains a magic number: i < 18
Magic Number,OpenRA.FileFormats,Blowfish,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blowfish.cs,Blowfish,The following statement contains a magic number: i < 4
Magic Number,OpenRA.FileFormats,Blowfish,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blowfish.cs,RunCipher,The following statement contains a magic number: int size = data.Length / 2;
Magic Number,OpenRA.FileFormats,Blowfish,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blowfish.cs,Encrypt,The following statement contains a magic number: i <= 16
Magic Number,OpenRA.FileFormats,Blowfish,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blowfish.cs,Encrypt,The following statement contains a magic number: _b ^= m_p[17];
Magic Number,OpenRA.FileFormats,Blowfish,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blowfish.cs,Decrypt,The following statement contains a magic number: _a ^= m_p[17];
Magic Number,OpenRA.FileFormats,Blowfish,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blowfish.cs,S,The following statement contains a magic number: return m_s[i' (x >> ((3 - i) << 3)) & 0xff];
Magic Number,OpenRA.FileFormats,Blowfish,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blowfish.cs,S,The following statement contains a magic number: return m_s[i' (x >> ((3 - i) << 3)) & 0xff];
Magic Number,OpenRA.FileFormats,Blowfish,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blowfish.cs,bf_f,The following statement contains a magic number: return ((S(x' 0) + S(x' 1)) ^ S(x' 2)) + S(x' 3);
Magic Number,OpenRA.FileFormats,Blowfish,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blowfish.cs,bf_f,The following statement contains a magic number: return ((S(x' 0) + S(x' 1)) ^ S(x' 2)) + S(x' 3);
Magic Number,OpenRA.FileFormats,Blowfish,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blowfish.cs,SwapBytes,The following statement contains a magic number: i = (i << 16) | (i >> 16);
Magic Number,OpenRA.FileFormats,Blowfish,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blowfish.cs,SwapBytes,The following statement contains a magic number: i = (i << 16) | (i >> 16);
Magic Number,OpenRA.FileFormats,Blowfish,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blowfish.cs,SwapBytes,The following statement contains a magic number: i = ((i << 8) & 0xff00ff00) | ((i >> 8) & 0x00ff00ff);
Magic Number,OpenRA.FileFormats,Blowfish,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Blowfish.cs,SwapBytes,The following statement contains a magic number: i = ((i << 8) & 0xff00ff00) | ((i >> 8) & 0x00ff00ff);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,move_key_to_big,The following statement contains a magic number: uint i = blen * 4;
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,key_to_bignum,The following statement contains a magic number: key[j] != 2
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,key_to_bignum,The following statement contains a magic number: keylen = (keylen << 8) | key[j + i + 1];
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,key_to_bignum,The following statement contains a magic number: keylen <= len * 4
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,bitlen_bignum,The following statement contains a magic number: bitlen = ddlen * 32;
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,init_pubkey,The following statement contains a magic number: init_bignum(pubkey.key2' 0x10001' 64);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,init_pubkey,The following statement contains a magic number: key_to_bignum(pubkey.key1' Convert.FromBase64String(pubkeyStr)' 64);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,init_pubkey,The following statement contains a magic number: pubkey.len = bitlen_bignum(pubkey.key1' 64) - 1;
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,len_predata,The following statement contains a magic number: uint a = (pubkey.len - 1) / 8;
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,len_predata,The following statement contains a magic number: return (55 / a + 1) * (a + 1);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,shr_bignum,The following statement contains a magic number: int i2 = bits / 32;
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,shr_bignum,The following statement contains a magic number: bits = bits % 32;
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,shr_bignum,The following statement contains a magic number: n[i] = (n[i] >> bits) | (n[i + 1] << (32 -  		  bits));
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,shl_bignum,The following statement contains a magic number: i2 = bits / 32;
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,shl_bignum,The following statement contains a magic number: bits = bits % 32;
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,shl_bignum,The following statement contains a magic number: n[i] = (n[i] << bits) | (n[i - 1] >> (32 -  		  bits));
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,inv_bignum,The following statement contains a magic number: uint[] n_tmp = new uint[64];
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,inv_bignum,The following statement contains a magic number: bit = ((uint)1) << (n2_bitlen % 32);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,inv_bignum,The following statement contains a magic number: j = ((n2_bitlen + 32) / 32) - 1;
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,inv_bignum,The following statement contains a magic number: j = ((n2_bitlen + 32) / 32) - 1;
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,inv_bignum,The following statement contains a magic number: n2_bytelen = (uint)((n2_bitlen - 1) / 32) * 4;
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,inv_bignum,The following statement contains a magic number: n2_bytelen = (uint)((n2_bitlen - 1) / 32) * 4;
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,inv_bignum,The following statement contains a magic number: n_tmp[n2_bytelen / 4] |= ((uint)1) << ((n2_bitlen - 1) & 0x1f);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: glob1_len_x2 = (glob1_bitlen + 15) / 16;
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: glob1_len_x2 = (glob1_bitlen + 15) / 16;
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: mov_bignum(glob1_hi' glob1.Skip((int)len_bignum(glob1' len) - 2).ToArray()' 2);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: mov_bignum(glob1_hi' glob1.Skip((int)len_bignum(glob1' len) - 2).ToArray()' 2);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: glob1_hi_bitlen = bitlen_bignum(glob1_hi' 2) - 32;
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: glob1_hi_bitlen = bitlen_bignum(glob1_hi' 2) - 32;
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: shr_bignum(glob1_hi' (int)glob1_hi_bitlen' 2);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: inv_bignum(glob1_hi_inv' glob1_hi' 2);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: shr_bignum(glob1_hi_inv' 1' 2);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: glob1_hi_bitlen = (glob1_hi_bitlen + 15) % 16 + 1;
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: glob1_hi_bitlen = (glob1_hi_bitlen + 15) % 16 + 1;
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: inc_bignum(glob1_hi_inv' 2);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: shr_bignum(glob1_hi_inv' 1' 2);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: bitlen_bignum(glob1_hi_inv' 2) > 32
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: bitlen_bignum(glob1_hi_inv' 2) > 32
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,init_two_dw,The following statement contains a magic number: glob1_hi_inv_hi = (ushort)(glob1_hi_inv[0] >> 16);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,mul_bignum_word,The following statement contains a magic number: tmp >>= 16;
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,mul_bignum,The following statement contains a magic number: fixed(uint* _pdest = &dest[0])  			  {  				  ushort* psrc2 = (ushort*)_psrc2;  				  ushort* pdest = (ushort*)_pdest;    				  init_bignum(dest' 0' len * 2);  				  for (i = 0; i < len * 2; i++)  					  mul_bignum_word(pdest++' src1' *psrc2++' len * 2);  			  }
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,mul_bignum,The following statement contains a magic number: fixed(uint* _pdest = &dest[0])  			  {  				  ushort* psrc2 = (ushort*)_psrc2;  				  ushort* pdest = (ushort*)_pdest;    				  init_bignum(dest' 0' len * 2);  				  for (i = 0; i < len * 2; i++)  					  mul_bignum_word(pdest++' src1' *psrc2++' len * 2);  			  }
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,mul_bignum,The following statement contains a magic number: fixed(uint* _pdest = &dest[0])  			  {  				  ushort* psrc2 = (ushort*)_psrc2;  				  ushort* pdest = (ushort*)_pdest;    				  init_bignum(dest' 0' len * 2);  				  for (i = 0; i < len * 2; i++)  					  mul_bignum_word(pdest++' src1' *psrc2++' len * 2);  			  }
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,get_mulword,The following statement contains a magic number: uint i = (uint)((((((((((*(wn - 1) ^ 0xffff) & 0xffff) * glob1_hi_inv_lo + 0x10000) >> 1)  				 + (((*(wn - 2) ^ 0xffff) * glob1_hi_inv_hi + glob1_hi_inv_hi) >> 1) + 1)  				 >> 16) + ((((*(wn - 1) ^ 0xffff) & 0xffff) * glob1_hi_inv_hi) >> 1) +  				 (((*wn ^ 0xffff) * glob1_hi_inv_lo) >> 1) + 1) >> 14) + glob1_hi_inv_hi  				 * (*wn ^ 0xffff) * 2) >> (int)glob1_hi_bitlen);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,get_mulword,The following statement contains a magic number: uint i = (uint)((((((((((*(wn - 1) ^ 0xffff) & 0xffff) * glob1_hi_inv_lo + 0x10000) >> 1)  				 + (((*(wn - 2) ^ 0xffff) * glob1_hi_inv_hi + glob1_hi_inv_hi) >> 1) + 1)  				 >> 16) + ((((*(wn - 1) ^ 0xffff) & 0xffff) * glob1_hi_inv_hi) >> 1) +  				 (((*wn ^ 0xffff) * glob1_hi_inv_lo) >> 1) + 1) >> 14) + glob1_hi_inv_hi  				 * (*wn ^ 0xffff) * 2) >> (int)glob1_hi_bitlen);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,get_mulword,The following statement contains a magic number: uint i = (uint)((((((((((*(wn - 1) ^ 0xffff) & 0xffff) * glob1_hi_inv_lo + 0x10000) >> 1)  				 + (((*(wn - 2) ^ 0xffff) * glob1_hi_inv_hi + glob1_hi_inv_hi) >> 1) + 1)  				 >> 16) + ((((*(wn - 1) ^ 0xffff) & 0xffff) * glob1_hi_inv_hi) >> 1) +  				 (((*wn ^ 0xffff) * glob1_hi_inv_lo) >> 1) + 1) >> 14) + glob1_hi_inv_hi  				 * (*wn ^ 0xffff) * 2) >> (int)glob1_hi_bitlen);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,get_mulword,The following statement contains a magic number: uint i = (uint)((((((((((*(wn - 1) ^ 0xffff) & 0xffff) * glob1_hi_inv_lo + 0x10000) >> 1)  				 + (((*(wn - 2) ^ 0xffff) * glob1_hi_inv_hi + glob1_hi_inv_hi) >> 1) + 1)  				 >> 16) + ((((*(wn - 1) ^ 0xffff) & 0xffff) * glob1_hi_inv_hi) >> 1) +  				 (((*wn ^ 0xffff) * glob1_hi_inv_lo) >> 1) + 1) >> 14) + glob1_hi_inv_hi  				 * (*wn ^ 0xffff) * 2) >> (int)glob1_hi_bitlen);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,calc_a_bignum,The following statement contains a magic number: fixed (uint* g2 = &glob2[0])  				{  					mul_bignum(glob2' n2' n3' len);  					glob2[len * 2] = 0;  					g2_len_x2 = len_bignum(glob2' len * 2 + 1) * 2;  					if (g2_len_x2 >= glob1_len_x2)  					{  						inc_bignum(glob2' len * 2 + 1);  						neg_bignum(glob2' len * 2 + 1);  						len_diff = g2_len_x2 + 1 - glob1_len_x2;  						ushort* esi = ((ushort*)g2) + (1 + g2_len_x2 - glob1_len_x2);  						ushort* edi = ((ushort*)g2) + (g2_len_x2 + 1);  						for (; len_diff != 0; len_diff--)  						{  							edi--;  							uint tmp = get_mulword((uint*)edi);  							esi--;  							if (tmp > 0)  							{  								mul_bignum_word(esi' glob1' tmp' 2 * len);  								if ((*edi & 0x8000) == 0)  								{  									if (0 != sub_bignum((uint*)esi' (uint*)esi' g1' 0' (int)len)) (*edi)--;  								}  							}  						}  						neg_bignum(glob2' len);  						dec_bignum(glob2' len);  					}  					mov_bignum(n1' glob2' len);  				}
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,calc_a_bignum,The following statement contains a magic number: fixed (uint* g2 = &glob2[0])  				{  					mul_bignum(glob2' n2' n3' len);  					glob2[len * 2] = 0;  					g2_len_x2 = len_bignum(glob2' len * 2 + 1) * 2;  					if (g2_len_x2 >= glob1_len_x2)  					{  						inc_bignum(glob2' len * 2 + 1);  						neg_bignum(glob2' len * 2 + 1);  						len_diff = g2_len_x2 + 1 - glob1_len_x2;  						ushort* esi = ((ushort*)g2) + (1 + g2_len_x2 - glob1_len_x2);  						ushort* edi = ((ushort*)g2) + (g2_len_x2 + 1);  						for (; len_diff != 0; len_diff--)  						{  							edi--;  							uint tmp = get_mulword((uint*)edi);  							esi--;  							if (tmp > 0)  							{  								mul_bignum_word(esi' glob1' tmp' 2 * len);  								if ((*edi & 0x8000) == 0)  								{  									if (0 != sub_bignum((uint*)esi' (uint*)esi' g1' 0' (int)len)) (*edi)--;  								}  							}  						}  						neg_bignum(glob2' len);  						dec_bignum(glob2' len);  					}  					mov_bignum(n1' glob2' len);  				}
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,calc_a_bignum,The following statement contains a magic number: fixed (uint* g2 = &glob2[0])  				{  					mul_bignum(glob2' n2' n3' len);  					glob2[len * 2] = 0;  					g2_len_x2 = len_bignum(glob2' len * 2 + 1) * 2;  					if (g2_len_x2 >= glob1_len_x2)  					{  						inc_bignum(glob2' len * 2 + 1);  						neg_bignum(glob2' len * 2 + 1);  						len_diff = g2_len_x2 + 1 - glob1_len_x2;  						ushort* esi = ((ushort*)g2) + (1 + g2_len_x2 - glob1_len_x2);  						ushort* edi = ((ushort*)g2) + (g2_len_x2 + 1);  						for (; len_diff != 0; len_diff--)  						{  							edi--;  							uint tmp = get_mulword((uint*)edi);  							esi--;  							if (tmp > 0)  							{  								mul_bignum_word(esi' glob1' tmp' 2 * len);  								if ((*edi & 0x8000) == 0)  								{  									if (0 != sub_bignum((uint*)esi' (uint*)esi' g1' 0' (int)len)) (*edi)--;  								}  							}  						}  						neg_bignum(glob2' len);  						dec_bignum(glob2' len);  					}  					mov_bignum(n1' glob2' len);  				}
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,calc_a_bignum,The following statement contains a magic number: fixed (uint* g2 = &glob2[0])  				{  					mul_bignum(glob2' n2' n3' len);  					glob2[len * 2] = 0;  					g2_len_x2 = len_bignum(glob2' len * 2 + 1) * 2;  					if (g2_len_x2 >= glob1_len_x2)  					{  						inc_bignum(glob2' len * 2 + 1);  						neg_bignum(glob2' len * 2 + 1);  						len_diff = g2_len_x2 + 1 - glob1_len_x2;  						ushort* esi = ((ushort*)g2) + (1 + g2_len_x2 - glob1_len_x2);  						ushort* edi = ((ushort*)g2) + (g2_len_x2 + 1);  						for (; len_diff != 0; len_diff--)  						{  							edi--;  							uint tmp = get_mulword((uint*)edi);  							esi--;  							if (tmp > 0)  							{  								mul_bignum_word(esi' glob1' tmp' 2 * len);  								if ((*edi & 0x8000) == 0)  								{  									if (0 != sub_bignum((uint*)esi' (uint*)esi' g1' 0' (int)len)) (*edi)--;  								}  							}  						}  						neg_bignum(glob2' len);  						dec_bignum(glob2' len);  					}  					mov_bignum(n1' glob2' len);  				}
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,calc_a_bignum,The following statement contains a magic number: fixed (uint* g2 = &glob2[0])  				{  					mul_bignum(glob2' n2' n3' len);  					glob2[len * 2] = 0;  					g2_len_x2 = len_bignum(glob2' len * 2 + 1) * 2;  					if (g2_len_x2 >= glob1_len_x2)  					{  						inc_bignum(glob2' len * 2 + 1);  						neg_bignum(glob2' len * 2 + 1);  						len_diff = g2_len_x2 + 1 - glob1_len_x2;  						ushort* esi = ((ushort*)g2) + (1 + g2_len_x2 - glob1_len_x2);  						ushort* edi = ((ushort*)g2) + (g2_len_x2 + 1);  						for (; len_diff != 0; len_diff--)  						{  							edi--;  							uint tmp = get_mulword((uint*)edi);  							esi--;  							if (tmp > 0)  							{  								mul_bignum_word(esi' glob1' tmp' 2 * len);  								if ((*edi & 0x8000) == 0)  								{  									if (0 != sub_bignum((uint*)esi' (uint*)esi' g1' 0' (int)len)) (*edi)--;  								}  							}  						}  						neg_bignum(glob2' len);  						dec_bignum(glob2' len);  					}  					mov_bignum(n1' glob2' len);  				}
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,calc_a_bignum,The following statement contains a magic number: fixed (uint* g2 = &glob2[0])  				{  					mul_bignum(glob2' n2' n3' len);  					glob2[len * 2] = 0;  					g2_len_x2 = len_bignum(glob2' len * 2 + 1) * 2;  					if (g2_len_x2 >= glob1_len_x2)  					{  						inc_bignum(glob2' len * 2 + 1);  						neg_bignum(glob2' len * 2 + 1);  						len_diff = g2_len_x2 + 1 - glob1_len_x2;  						ushort* esi = ((ushort*)g2) + (1 + g2_len_x2 - glob1_len_x2);  						ushort* edi = ((ushort*)g2) + (g2_len_x2 + 1);  						for (; len_diff != 0; len_diff--)  						{  							edi--;  							uint tmp = get_mulword((uint*)edi);  							esi--;  							if (tmp > 0)  							{  								mul_bignum_word(esi' glob1' tmp' 2 * len);  								if ((*edi & 0x8000) == 0)  								{  									if (0 != sub_bignum((uint*)esi' (uint*)esi' g1' 0' (int)len)) (*edi)--;  								}  							}  						}  						neg_bignum(glob2' len);  						dec_bignum(glob2' len);  					}  					mov_bignum(n1' glob2' len);  				}
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,clear_tmp_vars,The following statement contains a magic number: init_bignum(glob1_hi_inv' 0' 4);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,clear_tmp_vars,The following statement contains a magic number: init_bignum(glob1_hi' 0' 4);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,calc_a_key,The following statement contains a magic number: uint[] n_tmp = new uint[64];
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,calc_a_key,The following statement contains a magic number: n3_len = (uint)((n3_bitlen + 31) / 32);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,calc_a_key,The following statement contains a magic number: n3_len = (uint)((n3_bitlen + 31) / 32);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,calc_a_key,The following statement contains a magic number: bit_mask = (((uint)1) << ((n3_bitlen - 1) % 32)) >> 1;
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,process_predata,The following statement contains a magic number: uint[] n2 = new uint[64];
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,process_predata,The following statement contains a magic number: uint[] n3 = new uint[64];
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,process_predata,The following statement contains a magic number: uint a = (pubkey.len - 1) / 8;
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,process_predata,The following statement contains a magic number: init_bignum(n2' 0' 64);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,process_predata,The following statement contains a magic number: calc_a_key(n3' n2' pubkey.key2' pubkey.key1' 64);
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,DecryptKey,The following statement contains a magic number: byte[] dest = new byte[256];
Magic Number,OpenRA.FileFormats,BlowfishKeyProvider,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\BlowfishKeyProvider.cs,DecryptKey,The following statement contains a magic number: return dest.Take(56).ToArray();
Magic Number,OpenRA.FileFormats,FastByteReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Format80.cs,ReadWord,The following statement contains a magic number: return x | (ReadByte() << 8);
Magic Number,OpenRA.FileFormats,Format80,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Format80.cs,DecodeInto,The following statement contains a magic number: int count = ( ( i & 0x70 ) >> 4 ) + 3;
Magic Number,OpenRA.FileFormats,Format80,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Format80.cs,DecodeInto,The following statement contains a magic number: int count = ( ( i & 0x70 ) >> 4 ) + 3;
Magic Number,OpenRA.FileFormats,Format80,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\FileFormats\Format80.cs,DecodeInto,The following statement contains a magic number: int rpos = ( ( i & 0xf ) << 8 ) + secondByte;
Magic Number,OpenRA.FileFormats,InstallShieldPackage,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Filesystem\InstallShieldPackage.cs,InstallShieldPackage,The following statement contains a magic number: reader.ReadBytes(8);
Magic Number,OpenRA.FileFormats,InstallShieldPackage,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Filesystem\InstallShieldPackage.cs,InstallShieldPackage,The following statement contains a magic number: reader.ReadBytes(4);
Magic Number,OpenRA.FileFormats,InstallShieldPackage,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Filesystem\InstallShieldPackage.cs,InstallShieldPackage,The following statement contains a magic number: reader.ReadBytes(19);
Magic Number,OpenRA.FileFormats,InstallShieldPackage,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Filesystem\InstallShieldPackage.cs,InstallShieldPackage,The following statement contains a magic number: reader.ReadBytes(4);
Magic Number,OpenRA.FileFormats,InstallShieldPackage,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Filesystem\InstallShieldPackage.cs,ParseDirectory,The following statement contains a magic number: reader.ReadBytes(ChunkSize - NameLength - 6);
Magic Number,OpenRA.FileFormats,InstallShieldPackage,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Filesystem\InstallShieldPackage.cs,ParseFile,The following statement contains a magic number: reader.ReadBytes(7);
Magic Number,OpenRA.FileFormats,InstallShieldPackage,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Filesystem\InstallShieldPackage.cs,ParseFile,The following statement contains a magic number: reader.ReadBytes(12);
Magic Number,OpenRA.FileFormats,InstallShieldPackage,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Filesystem\InstallShieldPackage.cs,ParseFile,The following statement contains a magic number: reader.ReadBytes(4);
Magic Number,OpenRA.FileFormats,InstallShieldPackage,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Filesystem\InstallShieldPackage.cs,ParseFile,The following statement contains a magic number: reader.ReadBytes(ChunkSize - NameLength - 30);
Magic Number,OpenRA.FileFormats,MixFile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Filesystem\MixFile.cs,ParseRaHeader,The following statement contains a magic number: byte[] keyblock = reader.ReadBytes(80);
Magic Number,OpenRA.FileFormats,MixFile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Filesystem\MixFile.cs,ParseRaHeader,The following statement contains a magic number: uint[] h = ReadUints(reader' 2);
Magic Number,OpenRA.FileFormats,MixFile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Filesystem\MixFile.cs,ParseRaHeader,The following statement contains a magic number: int byteCount = 6 + numFiles * PackageEntry.Size;
Magic Number,OpenRA.FileFormats,MixFile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Filesystem\MixFile.cs,ParseRaHeader,The following statement contains a magic number: h = ReadUints( reader' ( byteCount + 3 ) / 4 );
Magic Number,OpenRA.FileFormats,MixFile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Filesystem\MixFile.cs,ParseRaHeader,The following statement contains a magic number: h = ReadUints( reader' ( byteCount + 3 ) / 4 );
Magic Number,OpenRA.FileFormats,MixFile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Filesystem\MixFile.cs,ParseRaHeader,The following statement contains a magic number: dataStart = headerStart + byteCount + ( ( ~byteCount + 1 ) & 7 );
Magic Number,OpenRA.FileFormats,ZipFile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Filesystem\ZipFile.cs,GetContent,The following statement contains a magic number: int bufSize = 2048;
Magic Number,OpenRA.FileFormats,Dune2ImageHeader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\Dune2ShpReader.cs,Dune2ImageHeader,The following statement contains a magic number: int n = Flags == Dune2ImageFlags.Ln_F80_F2 ? reader.ReadByte() : (byte)16;
Magic Number,OpenRA.FileFormats,Dune2ShpReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\Dune2ShpReader.cs,Dune2ShpReader,The following statement contains a magic number: offsets[0] = ((temp & 0xFFFF0000) >> 16) + 2;
Magic Number,OpenRA.FileFormats,Dune2ShpReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\Dune2ShpReader.cs,Dune2ShpReader,The following statement contains a magic number: offsets[0] = ((temp & 0xFFFF0000) >> 16) + 2;
Magic Number,OpenRA.FileFormats,Dune2ShpReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\Dune2ShpReader.cs,Dune2ShpReader,The following statement contains a magic number: offsets[1] = (temp & 0xFFFF) + 2;
Magic Number,OpenRA.FileFormats,Dune2ShpReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\Dune2ShpReader.cs,Dune2ShpReader,The following statement contains a magic number: offsets[i] = (twoByteOffsets ? reader.ReadUInt16() : reader.ReadUInt32()) + 2;
Magic Number,OpenRA.FileFormats,ImageHeader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\ShpReader.cs,ImageHeader,The following statement contains a magic number: Format = (Format)(data >> 24);
Magic Number,OpenRA.FileFormats,ImageHeader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\ShpReader.cs,WriteTo,The following statement contains a magic number: writer.Write(Offset | ((uint)Format << 24));
Magic Number,OpenRA.FileFormats,VqaReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\VqaReader.cs,VqaReader,The following statement contains a magic number: new String(reader.ReadChars(4)) != "FORM"
Magic Number,OpenRA.FileFormats,VqaReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\VqaReader.cs,VqaReader,The following statement contains a magic number: new String(reader.ReadChars(8)) != "WVQAVQHD"
Magic Number,OpenRA.FileFormats,VqaReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\VqaReader.cs,VqaReader,The following statement contains a magic number: reader.ReadChars(14);
Magic Number,OpenRA.FileFormats,VqaReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\VqaReader.cs,VqaReader,The following statement contains a magic number: origData = new byte[2*blocks.X*blocks.Y];
Magic Number,OpenRA.FileFormats,VqaReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\VqaReader.cs,VqaReader,The following statement contains a magic number: var type = new String(reader.ReadChars(4));
Magic Number,OpenRA.FileFormats,VqaReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\VqaReader.cs,VqaReader,The following statement contains a magic number: reader.ReadBytes(27);
Magic Number,OpenRA.FileFormats,VqaReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\VqaReader.cs,VqaReader,The following statement contains a magic number: type = new String(reader.ReadChars(4));
Magic Number,OpenRA.FileFormats,VqaReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\VqaReader.cs,CollectAudioData,The following statement contains a magic number: var type = new String(reader.ReadChars(4));
Magic Number,OpenRA.FileFormats,VqaReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\VqaReader.cs,LoadFrame,The following statement contains a magic number: var type = new String(reader.ReadChars(4));
Magic Number,OpenRA.FileFormats,VqaReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\VqaReader.cs,DecodeVQFR,The following statement contains a magic number: var type = new String(reader.ReadChars(4));
Magic Number,OpenRA.FileFormats,VqaReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\VqaReader.cs,DecodeVQFR,The following statement contains a magic number: switch(type)  				{  					// Full frame-modifier  					case "CBFZ":  						Format80.DecodeInto( reader.ReadBytes(subchunkLength)' cbf );  					break;  					case "CBF0":  						cbf = reader.ReadBytes(subchunkLength);  					break;    					// frame-modifier chunk  					case "CBP0":  					case "CBPZ":  						// Partial buffer is full; dump and recreate  						if (cbChunk == cbParts)  						{  							if (type == "CBP0")  								cbf = (byte[])cbp.Clone();  							else  								Format80.DecodeInto( cbp' cbf );    							cbOffset = cbChunk = 0;  						}    						var bytes = reader.ReadBytes(subchunkLength);  						bytes.CopyTo(cbp'cbOffset);  						cbOffset += subchunkLength;  						cbChunk++;  					break;    					// Palette  					case "CPL0":  						for (int i = 0; i < numColors; i++)  						{  							byte r = (byte)(reader.ReadByte() << 2);  							byte g = (byte)(reader.ReadByte() << 2);  							byte b = (byte)(reader.ReadByte() << 2);  							palette[i] = (uint)((255 << 24) | (r << 16) | (g << 8) | b);  						}  					break;    					// Frame data  					case "VPTZ":  						Format80.DecodeInto( reader.ReadBytes(subchunkLength)' origData );  						// This is the last subchunk  						return;  					default:  						throw new InvalidDataException("Unknown sub-chunk {0}".F(type));  				}
Magic Number,OpenRA.FileFormats,VqaReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\VqaReader.cs,DecodeVQFR,The following statement contains a magic number: switch(type)  				{  					// Full frame-modifier  					case "CBFZ":  						Format80.DecodeInto( reader.ReadBytes(subchunkLength)' cbf );  					break;  					case "CBF0":  						cbf = reader.ReadBytes(subchunkLength);  					break;    					// frame-modifier chunk  					case "CBP0":  					case "CBPZ":  						// Partial buffer is full; dump and recreate  						if (cbChunk == cbParts)  						{  							if (type == "CBP0")  								cbf = (byte[])cbp.Clone();  							else  								Format80.DecodeInto( cbp' cbf );    							cbOffset = cbChunk = 0;  						}    						var bytes = reader.ReadBytes(subchunkLength);  						bytes.CopyTo(cbp'cbOffset);  						cbOffset += subchunkLength;  						cbChunk++;  					break;    					// Palette  					case "CPL0":  						for (int i = 0; i < numColors; i++)  						{  							byte r = (byte)(reader.ReadByte() << 2);  							byte g = (byte)(reader.ReadByte() << 2);  							byte b = (byte)(reader.ReadByte() << 2);  							palette[i] = (uint)((255 << 24) | (r << 16) | (g << 8) | b);  						}  					break;    					// Frame data  					case "VPTZ":  						Format80.DecodeInto( reader.ReadBytes(subchunkLength)' origData );  						// This is the last subchunk  						return;  					default:  						throw new InvalidDataException("Unknown sub-chunk {0}".F(type));  				}
Magic Number,OpenRA.FileFormats,VqaReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\VqaReader.cs,DecodeVQFR,The following statement contains a magic number: switch(type)  				{  					// Full frame-modifier  					case "CBFZ":  						Format80.DecodeInto( reader.ReadBytes(subchunkLength)' cbf );  					break;  					case "CBF0":  						cbf = reader.ReadBytes(subchunkLength);  					break;    					// frame-modifier chunk  					case "CBP0":  					case "CBPZ":  						// Partial buffer is full; dump and recreate  						if (cbChunk == cbParts)  						{  							if (type == "CBP0")  								cbf = (byte[])cbp.Clone();  							else  								Format80.DecodeInto( cbp' cbf );    							cbOffset = cbChunk = 0;  						}    						var bytes = reader.ReadBytes(subchunkLength);  						bytes.CopyTo(cbp'cbOffset);  						cbOffset += subchunkLength;  						cbChunk++;  					break;    					// Palette  					case "CPL0":  						for (int i = 0; i < numColors; i++)  						{  							byte r = (byte)(reader.ReadByte() << 2);  							byte g = (byte)(reader.ReadByte() << 2);  							byte b = (byte)(reader.ReadByte() << 2);  							palette[i] = (uint)((255 << 24) | (r << 16) | (g << 8) | b);  						}  					break;    					// Frame data  					case "VPTZ":  						Format80.DecodeInto( reader.ReadBytes(subchunkLength)' origData );  						// This is the last subchunk  						return;  					default:  						throw new InvalidDataException("Unknown sub-chunk {0}".F(type));  				}
Magic Number,OpenRA.FileFormats,VqaReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\VqaReader.cs,DecodeVQFR,The following statement contains a magic number: switch(type)  				{  					// Full frame-modifier  					case "CBFZ":  						Format80.DecodeInto( reader.ReadBytes(subchunkLength)' cbf );  					break;  					case "CBF0":  						cbf = reader.ReadBytes(subchunkLength);  					break;    					// frame-modifier chunk  					case "CBP0":  					case "CBPZ":  						// Partial buffer is full; dump and recreate  						if (cbChunk == cbParts)  						{  							if (type == "CBP0")  								cbf = (byte[])cbp.Clone();  							else  								Format80.DecodeInto( cbp' cbf );    							cbOffset = cbChunk = 0;  						}    						var bytes = reader.ReadBytes(subchunkLength);  						bytes.CopyTo(cbp'cbOffset);  						cbOffset += subchunkLength;  						cbChunk++;  					break;    					// Palette  					case "CPL0":  						for (int i = 0; i < numColors; i++)  						{  							byte r = (byte)(reader.ReadByte() << 2);  							byte g = (byte)(reader.ReadByte() << 2);  							byte b = (byte)(reader.ReadByte() << 2);  							palette[i] = (uint)((255 << 24) | (r << 16) | (g << 8) | b);  						}  					break;    					// Frame data  					case "VPTZ":  						Format80.DecodeInto( reader.ReadBytes(subchunkLength)' origData );  						// This is the last subchunk  						return;  					default:  						throw new InvalidDataException("Unknown sub-chunk {0}".F(type));  				}
Magic Number,OpenRA.FileFormats,VqaReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\VqaReader.cs,DecodeVQFR,The following statement contains a magic number: switch(type)  				{  					// Full frame-modifier  					case "CBFZ":  						Format80.DecodeInto( reader.ReadBytes(subchunkLength)' cbf );  					break;  					case "CBF0":  						cbf = reader.ReadBytes(subchunkLength);  					break;    					// frame-modifier chunk  					case "CBP0":  					case "CBPZ":  						// Partial buffer is full; dump and recreate  						if (cbChunk == cbParts)  						{  							if (type == "CBP0")  								cbf = (byte[])cbp.Clone();  							else  								Format80.DecodeInto( cbp' cbf );    							cbOffset = cbChunk = 0;  						}    						var bytes = reader.ReadBytes(subchunkLength);  						bytes.CopyTo(cbp'cbOffset);  						cbOffset += subchunkLength;  						cbChunk++;  					break;    					// Palette  					case "CPL0":  						for (int i = 0; i < numColors; i++)  						{  							byte r = (byte)(reader.ReadByte() << 2);  							byte g = (byte)(reader.ReadByte() << 2);  							byte b = (byte)(reader.ReadByte() << 2);  							palette[i] = (uint)((255 << 24) | (r << 16) | (g << 8) | b);  						}  					break;    					// Frame data  					case "VPTZ":  						Format80.DecodeInto( reader.ReadBytes(subchunkLength)' origData );  						// This is the last subchunk  						return;  					default:  						throw new InvalidDataException("Unknown sub-chunk {0}".F(type));  				}
Magic Number,OpenRA.FileFormats,VqaReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\VqaReader.cs,DecodeVQFR,The following statement contains a magic number: switch(type)  				{  					// Full frame-modifier  					case "CBFZ":  						Format80.DecodeInto( reader.ReadBytes(subchunkLength)' cbf );  					break;  					case "CBF0":  						cbf = reader.ReadBytes(subchunkLength);  					break;    					// frame-modifier chunk  					case "CBP0":  					case "CBPZ":  						// Partial buffer is full; dump and recreate  						if (cbChunk == cbParts)  						{  							if (type == "CBP0")  								cbf = (byte[])cbp.Clone();  							else  								Format80.DecodeInto( cbp' cbf );    							cbOffset = cbChunk = 0;  						}    						var bytes = reader.ReadBytes(subchunkLength);  						bytes.CopyTo(cbp'cbOffset);  						cbOffset += subchunkLength;  						cbChunk++;  					break;    					// Palette  					case "CPL0":  						for (int i = 0; i < numColors; i++)  						{  							byte r = (byte)(reader.ReadByte() << 2);  							byte g = (byte)(reader.ReadByte() << 2);  							byte b = (byte)(reader.ReadByte() << 2);  							palette[i] = (uint)((255 << 24) | (r << 16) | (g << 8) | b);  						}  					break;    					// Frame data  					case "VPTZ":  						Format80.DecodeInto( reader.ReadBytes(subchunkLength)' origData );  						// This is the last subchunk  						return;  					default:  						throw new InvalidDataException("Unknown sub-chunk {0}".F(type));  				}
Magic Number,OpenRA.FileFormats,VqaReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\VqaReader.cs,DecodeVQFR,The following statement contains a magic number: switch(type)  				{  					// Full frame-modifier  					case "CBFZ":  						Format80.DecodeInto( reader.ReadBytes(subchunkLength)' cbf );  					break;  					case "CBF0":  						cbf = reader.ReadBytes(subchunkLength);  					break;    					// frame-modifier chunk  					case "CBP0":  					case "CBPZ":  						// Partial buffer is full; dump and recreate  						if (cbChunk == cbParts)  						{  							if (type == "CBP0")  								cbf = (byte[])cbp.Clone();  							else  								Format80.DecodeInto( cbp' cbf );    							cbOffset = cbChunk = 0;  						}    						var bytes = reader.ReadBytes(subchunkLength);  						bytes.CopyTo(cbp'cbOffset);  						cbOffset += subchunkLength;  						cbChunk++;  					break;    					// Palette  					case "CPL0":  						for (int i = 0; i < numColors; i++)  						{  							byte r = (byte)(reader.ReadByte() << 2);  							byte g = (byte)(reader.ReadByte() << 2);  							byte b = (byte)(reader.ReadByte() << 2);  							palette[i] = (uint)((255 << 24) | (r << 16) | (g << 8) | b);  						}  					break;    					// Frame data  					case "VPTZ":  						Format80.DecodeInto( reader.ReadBytes(subchunkLength)' origData );  						// This is the last subchunk  						return;  					default:  						throw new InvalidDataException("Unknown sub-chunk {0}".F(type));  				}
Magic Number,OpenRA.FileFormats,VqaReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\VqaReader.cs,DecodeFrameData,The following statement contains a magic number: var cbfi = (mod*256 + px)*8 + j*blockWidth + i;
Magic Number,OpenRA.FileFormats,VqaReader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\VqaReader.cs,DecodeFrameData,The following statement contains a magic number: var cbfi = (mod*256 + px)*8 + j*blockWidth + i;
Magic Number,OpenRA.FileFormats,InstallUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\InstallUtils.cs,ExtractZip,The following statement contains a magic number: int bufSize = 2048;
Magic Number,OpenRA.FileFormats,Terrain,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Map\Terrain.cs,Terrain,The following statement contains a magic number: reader.ReadUInt16() == 65535
Magic Number,OpenRA.FileFormats,Terrain,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Map\Terrain.cs,Terrain,The following statement contains a magic number: b != 255
Magic Number,OpenRA.FileFormats,PackageEntry,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\PackageEntry.cs,HashFilename,The following statement contains a magic number: name = name.Substring(0' 12);
Magic Number,OpenRA.FileFormats,PackageEntry,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\PackageEntry.cs,HashFilename,The following statement contains a magic number: name.Length > 12
Magic Number,OpenRA.FileFormats,PackageEntry,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\PackageEntry.cs,HashFilename,The following statement contains a magic number: name = name.PadRight(name.Length + (4 - name.Length % 4)' '\0');
Magic Number,OpenRA.FileFormats,PackageEntry,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\PackageEntry.cs,HashFilename,The following statement contains a magic number: name = name.PadRight(name.Length + (4 - name.Length % 4)' '\0');
Magic Number,OpenRA.FileFormats,PackageEntry,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\PackageEntry.cs,HashFilename,The following statement contains a magic number: name.Length % 4 != 0
Magic Number,OpenRA.FileFormats,PackageEntry,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\PackageEntry.cs,HashFilename,The following statement contains a magic number: int len = name.Length >> 2;
Magic Number,OpenRA.FileFormats,PackageEntry,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\PackageEntry.cs,HashFilename,The following statement contains a magic number: result = ((result << 1) | (result >> 31)) + reader.ReadUInt32();
Magic Number,OpenRA.FileFormats,Palette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Palette.cs,ApplyRemap,The following statement contains a magic number: i < 256
Magic Number,OpenRA.FileFormats,Palette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Palette.cs,Palette,The following statement contains a magic number: colors = new uint[256];
Magic Number,OpenRA.FileFormats,Palette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Palette.cs,Palette,The following statement contains a magic number: byte r = (byte)(reader.ReadByte() << 2);
Magic Number,OpenRA.FileFormats,Palette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Palette.cs,Palette,The following statement contains a magic number: byte g = (byte)(reader.ReadByte() << 2);
Magic Number,OpenRA.FileFormats,Palette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Palette.cs,Palette,The following statement contains a magic number: byte b = (byte)(reader.ReadByte() << 2);
Magic Number,OpenRA.FileFormats,Palette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Palette.cs,Palette,The following statement contains a magic number: colors[i] = (uint)((255 << 24) | (r << 16) | (g << 8) | b);
Magic Number,OpenRA.FileFormats,Palette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Palette.cs,Palette,The following statement contains a magic number: colors[i] = (uint)((255 << 24) | (r << 16) | (g << 8) | b);
Magic Number,OpenRA.FileFormats,Palette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Palette.cs,Palette,The following statement contains a magic number: colors[i] = (uint)((255 << 24) | (r << 16) | (g << 8) | b);
Magic Number,OpenRA.FileFormats,Palette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Palette.cs,Palette,The following statement contains a magic number: colors[i] = (uint)((255 << 24) | (r << 16) | (g << 8) | b);
Magic Number,OpenRA.FileFormats,Palette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Palette.cs,Palette,The following statement contains a magic number: i < 256
Magic Number,OpenRA.FileFormats,Palette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Palette.cs,Palette,The following statement contains a magic number: colors[i] = 140u << 24;
Magic Number,OpenRA.FileFormats,Palette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Palette.cs,Palette,The following statement contains a magic number: colors[i] = 140u << 24;
Magic Number,OpenRA.FileFormats,Palette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Palette.cs,Palette,The following statement contains a magic number: data.Length != 256
Magic Number,OpenRA.FileFormats,Palette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Palette.cs,AsSystemPalette,The following statement contains a magic number: i < 256
Magic Number,OpenRA.FileFormats,Palette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Palette.cs,AsBitmap,The following statement contains a magic number: var b = new Bitmap(256' 1' PixelFormat.Format32bppArgb);
Magic Number,OpenRA.FileFormats,Palette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Palette.cs,AsBitmap,The following statement contains a magic number: x < 256
Magic Number,OpenRA.FileFormats,PlayerColorRemap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\PlayerColorRemap.cs,PlayerColorRemap,The following statement contains a magic number: baseIndex = Ramp[15];
Magic Number,OpenRA.FileFormats,PlayerColorRemap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\PlayerColorRemap.cs,PlayerColorRemap,The following statement contains a magic number: RemapRamp = Ramp.Select(r => r - Ramp[15]).ToArray();
Magic Number,OpenRA.FileFormats,PlayerColorRemap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\PlayerColorRemap.cs,PlayerColorRemap,The following statement contains a magic number: Ramp[0] > Ramp[15]
Magic Number,OpenRA.FileFormats,PlayerColorRemap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\PlayerColorRemap.cs,PlayerColorRemap,The following statement contains a magic number: remapColors = RemapRamp.Select((x' i) => Pair.New(baseIndex + i' Exts.ColorLerp(x / 16f' c1' c2)))  				.ToDictionary(u => u.First' u => u.Second);
Magic Number,OpenRA.FileFormats,BitAllocator<T>,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Primitives\Bits.cs,GetStrings,The following statement contains a magic number: i < 32
Magic Number,OpenRA,Exts,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Exts.cs,NextPowerOf2,The following statement contains a magic number: v |= v >> 2;
Magic Number,OpenRA,Exts,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Exts.cs,NextPowerOf2,The following statement contains a magic number: v |= v >> 4;
Magic Number,OpenRA,Exts,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Exts.cs,NextPowerOf2,The following statement contains a magic number: v |= v >> 8;
Magic Number,OpenRA,int2,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Primitives\int2.cs,Swap,The following statement contains a magic number: return (uint)((orig & 0xff000000) >> 24) | ((orig & 0x00ff0000) >> 8) | ((orig & 0x0000ff00) << 8) | ((orig & 0x000000ff) << 24);
Magic Number,OpenRA,int2,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Primitives\int2.cs,Swap,The following statement contains a magic number: return (uint)((orig & 0xff000000) >> 24) | ((orig & 0x00ff0000) >> 8) | ((orig & 0x0000ff00) << 8) | ((orig & 0x000000ff) << 24);
Magic Number,OpenRA,int2,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Primitives\int2.cs,Swap,The following statement contains a magic number: return (uint)((orig & 0xff000000) >> 24) | ((orig & 0x00ff0000) >> 8) | ((orig & 0x0000ff00) << 8) | ((orig & 0x000000ff) << 24);
Magic Number,OpenRA,int2,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Primitives\int2.cs,Swap,The following statement contains a magic number: return (uint)((orig & 0xff000000) >> 24) | ((orig & 0x00ff0000) >> 8) | ((orig & 0x0000ff00) << 8) | ((orig & 0x000000ff) << 24);
Magic Number,OpenRA.FileFormats.Graphics,PngLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\PngLoader.cs,Load,The following statement contains a magic number: var signature = new byte[] { 137' 80' 78' 71' 13' 10' 26' 10 };
Magic Number,OpenRA.FileFormats.Graphics,PngLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\PngLoader.cs,Load,The following statement contains a magic number: var signature = new byte[] { 137' 80' 78' 71' 13' 10' 26' 10 };
Magic Number,OpenRA.FileFormats.Graphics,PngLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\PngLoader.cs,Load,The following statement contains a magic number: var signature = new byte[] { 137' 80' 78' 71' 13' 10' 26' 10 };
Magic Number,OpenRA.FileFormats.Graphics,PngLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\PngLoader.cs,Load,The following statement contains a magic number: var signature = new byte[] { 137' 80' 78' 71' 13' 10' 26' 10 };
Magic Number,OpenRA.FileFormats.Graphics,PngLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\PngLoader.cs,Load,The following statement contains a magic number: var signature = new byte[] { 137' 80' 78' 71' 13' 10' 26' 10 };
Magic Number,OpenRA.FileFormats.Graphics,PngLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\PngLoader.cs,Load,The following statement contains a magic number: var signature = new byte[] { 137' 80' 78' 71' 13' 10' 26' 10 };
Magic Number,OpenRA.FileFormats.Graphics,PngLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\PngLoader.cs,Load,The following statement contains a magic number: var signature = new byte[] { 137' 80' 78' 71' 13' 10' 26' 10 };
Magic Number,OpenRA.FileFormats.Graphics,PngLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\PngLoader.cs,Load,The following statement contains a magic number: var signature = new byte[] { 137' 80' 78' 71' 13' 10' 26' 10 };
Magic Number,OpenRA.FileFormats.Graphics,PngLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\PngLoader.cs,Load,The following statement contains a magic number: var type = Encoding.UTF8.GetString(br.ReadBytes(4));
Magic Number,OpenRA.FileFormats.Graphics,PngLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\PngLoader.cs,Load,The following statement contains a magic number: switch (type)  						{  							case "IHDR":  								{    									var width = IPAddress.NetworkToHostOrder(cr.ReadInt32());  									var height = IPAddress.NetworkToHostOrder(cr.ReadInt32());  									var bitDepth = cr.ReadByte();  									var colorType = (PngColorType)cr.ReadByte();  									var compression = cr.ReadByte();  									/*var filter = */cr.ReadByte();  									var interlace = cr.ReadByte();    									if (compression != 0) throw new InvalidDataException("Compression method not supported");  									if (interlace != 0) throw new InvalidDataException("Interlacing not supported");    									bitmap = new Bitmap(width' height' MakePixelFormat(bitDepth' colorType));    								}  								break;    							case "PLTE":  								{  									palette = new Color[256];  									for (var i = 0; i < 256; i++)  									{  										var r = cr.ReadByte(); var g = cr.ReadByte(); var b = cr.ReadByte();  										palette[i] = Color.FromArgb(r' g' b);  									}  								}  								break;    							case "tRNS":  								{  									for (var i = 0; i < length; i++)  										palette[i] = Color.FromArgb(cr.ReadByte()' palette[i]);  								}  								break;    							case "IDAT":  								{  									data.AddRange(content);  								}  								break;    							case "IEND":  								{  									var bits = bitmap.LockBits(bitmap.Bounds()'  										ImageLockMode.WriteOnly' PixelFormat.Format8bppIndexed);    									using (var ns = new MemoryStream(data.ToArray()))  									{  										// 'zlib' flags bytes; confuses the DeflateStream.  										/*var flags = (byte)*/ns.ReadByte();  										/*var moreFlags = (byte)*/ns.ReadByte();    										using (var ds = new DeflateStream(ns' CompressionMode.Decompress))  										using (var dr = new BinaryReader(ds))  										{  											var prevLine = new byte[bitmap.Width];	// all zero  											for (var y = 0; y < bitmap.Height; y++)  											{  												var filter = (PngFilter)dr.ReadByte();  												var line = dr.ReadBytes(bitmap.Width);    												for (var i = 0; i < bitmap.Width; i++)  													line[i] = i > 0  														? UnapplyFilter(filter' line[i]' line[i - 1]' prevLine[i]' prevLine[i - 1])  														: UnapplyFilter(filter' line[i]' 0' prevLine[i]' 0);    												Marshal.Copy(line' 0' new IntPtr(bits.Scan0.ToInt64() + y * bits.Stride)' line.Length);  												prevLine = line;  											}  										}  									}    									bitmap.UnlockBits(bits);    									using (var temp = new Bitmap(1' 1' PixelFormat.Format8bppIndexed))  									{  										var cp = temp.Palette;  										for (var i = 0; i < 256; i++)  											cp.Entries[i] = palette[i];		// finalize the palette.  										bitmap.Palette = cp;  										return bitmap;  									}  								}  						}
Magic Number,OpenRA.FileFormats.Graphics,PngLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\PngLoader.cs,Load,The following statement contains a magic number: switch (type)  						{  							case "IHDR":  								{    									var width = IPAddress.NetworkToHostOrder(cr.ReadInt32());  									var height = IPAddress.NetworkToHostOrder(cr.ReadInt32());  									var bitDepth = cr.ReadByte();  									var colorType = (PngColorType)cr.ReadByte();  									var compression = cr.ReadByte();  									/*var filter = */cr.ReadByte();  									var interlace = cr.ReadByte();    									if (compression != 0) throw new InvalidDataException("Compression method not supported");  									if (interlace != 0) throw new InvalidDataException("Interlacing not supported");    									bitmap = new Bitmap(width' height' MakePixelFormat(bitDepth' colorType));    								}  								break;    							case "PLTE":  								{  									palette = new Color[256];  									for (var i = 0; i < 256; i++)  									{  										var r = cr.ReadByte(); var g = cr.ReadByte(); var b = cr.ReadByte();  										palette[i] = Color.FromArgb(r' g' b);  									}  								}  								break;    							case "tRNS":  								{  									for (var i = 0; i < length; i++)  										palette[i] = Color.FromArgb(cr.ReadByte()' palette[i]);  								}  								break;    							case "IDAT":  								{  									data.AddRange(content);  								}  								break;    							case "IEND":  								{  									var bits = bitmap.LockBits(bitmap.Bounds()'  										ImageLockMode.WriteOnly' PixelFormat.Format8bppIndexed);    									using (var ns = new MemoryStream(data.ToArray()))  									{  										// 'zlib' flags bytes; confuses the DeflateStream.  										/*var flags = (byte)*/ns.ReadByte();  										/*var moreFlags = (byte)*/ns.ReadByte();    										using (var ds = new DeflateStream(ns' CompressionMode.Decompress))  										using (var dr = new BinaryReader(ds))  										{  											var prevLine = new byte[bitmap.Width];	// all zero  											for (var y = 0; y < bitmap.Height; y++)  											{  												var filter = (PngFilter)dr.ReadByte();  												var line = dr.ReadBytes(bitmap.Width);    												for (var i = 0; i < bitmap.Width; i++)  													line[i] = i > 0  														? UnapplyFilter(filter' line[i]' line[i - 1]' prevLine[i]' prevLine[i - 1])  														: UnapplyFilter(filter' line[i]' 0' prevLine[i]' 0);    												Marshal.Copy(line' 0' new IntPtr(bits.Scan0.ToInt64() + y * bits.Stride)' line.Length);  												prevLine = line;  											}  										}  									}    									bitmap.UnlockBits(bits);    									using (var temp = new Bitmap(1' 1' PixelFormat.Format8bppIndexed))  									{  										var cp = temp.Palette;  										for (var i = 0; i < 256; i++)  											cp.Entries[i] = palette[i];		// finalize the palette.  										bitmap.Palette = cp;  										return bitmap;  									}  								}  						}
Magic Number,OpenRA.FileFormats.Graphics,PngLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\PngLoader.cs,Load,The following statement contains a magic number: switch (type)  						{  							case "IHDR":  								{    									var width = IPAddress.NetworkToHostOrder(cr.ReadInt32());  									var height = IPAddress.NetworkToHostOrder(cr.ReadInt32());  									var bitDepth = cr.ReadByte();  									var colorType = (PngColorType)cr.ReadByte();  									var compression = cr.ReadByte();  									/*var filter = */cr.ReadByte();  									var interlace = cr.ReadByte();    									if (compression != 0) throw new InvalidDataException("Compression method not supported");  									if (interlace != 0) throw new InvalidDataException("Interlacing not supported");    									bitmap = new Bitmap(width' height' MakePixelFormat(bitDepth' colorType));    								}  								break;    							case "PLTE":  								{  									palette = new Color[256];  									for (var i = 0; i < 256; i++)  									{  										var r = cr.ReadByte(); var g = cr.ReadByte(); var b = cr.ReadByte();  										palette[i] = Color.FromArgb(r' g' b);  									}  								}  								break;    							case "tRNS":  								{  									for (var i = 0; i < length; i++)  										palette[i] = Color.FromArgb(cr.ReadByte()' palette[i]);  								}  								break;    							case "IDAT":  								{  									data.AddRange(content);  								}  								break;    							case "IEND":  								{  									var bits = bitmap.LockBits(bitmap.Bounds()'  										ImageLockMode.WriteOnly' PixelFormat.Format8bppIndexed);    									using (var ns = new MemoryStream(data.ToArray()))  									{  										// 'zlib' flags bytes; confuses the DeflateStream.  										/*var flags = (byte)*/ns.ReadByte();  										/*var moreFlags = (byte)*/ns.ReadByte();    										using (var ds = new DeflateStream(ns' CompressionMode.Decompress))  										using (var dr = new BinaryReader(ds))  										{  											var prevLine = new byte[bitmap.Width];	// all zero  											for (var y = 0; y < bitmap.Height; y++)  											{  												var filter = (PngFilter)dr.ReadByte();  												var line = dr.ReadBytes(bitmap.Width);    												for (var i = 0; i < bitmap.Width; i++)  													line[i] = i > 0  														? UnapplyFilter(filter' line[i]' line[i - 1]' prevLine[i]' prevLine[i - 1])  														: UnapplyFilter(filter' line[i]' 0' prevLine[i]' 0);    												Marshal.Copy(line' 0' new IntPtr(bits.Scan0.ToInt64() + y * bits.Stride)' line.Length);  												prevLine = line;  											}  										}  									}    									bitmap.UnlockBits(bits);    									using (var temp = new Bitmap(1' 1' PixelFormat.Format8bppIndexed))  									{  										var cp = temp.Palette;  										for (var i = 0; i < 256; i++)  											cp.Entries[i] = palette[i];		// finalize the palette.  										bitmap.Palette = cp;  										return bitmap;  									}  								}  						}
Magic Number,OpenRA.FileFormats.Graphics,PngLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\PngLoader.cs,UnapplyFilter,The following statement contains a magic number: switch (f)  			{  				case PngFilter.None: return x;  				case PngFilter.Sub: return (byte)(x + a);  				case PngFilter.Up: return (byte)(x + b);  				case PngFilter.Average: return (byte)(x + (a + b) / 2);  				case PngFilter.Paeth: return (byte)(x + Paeth(a' b' c));  				default:  					throw new InvalidOperationException("Unsupported Filter");  			}
Magic Number,OpenRA.FileFormats.Graphics,PngLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\PngLoader.cs,MakePixelFormat,The following statement contains a magic number: bitDepth == 8 && colorType == (PngColorType.Indexed | PngColorType.Color)
Magic Number,OpenRA.FileFormats.Graphics,ShpWriter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\ShpWriter.cs,Write,The following statement contains a magic number: var dataOffset = 14 + (compressedFrames.Length + 2) * ImageHeader.SizeOnDisk;
Magic Number,OpenRA.FileFormats.Graphics,ShpWriter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\ShpWriter.cs,Write,The following statement contains a magic number: var dataOffset = 14 + (compressedFrames.Length + 2) * ImageHeader.SizeOnDisk;
Magic Number,OpenRA.Support,Stopwatch,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Support\Stopwatch.cs,ElapsedTime,The following statement contains a magic number: return sw.Elapsed.TotalMilliseconds / 1000.0;
Magic Number,OpenRA.Support,Timer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Support\Timer.cs,Time,The following statement contains a magic number: dt > 0.0001
Magic Number,OpenRA.Thirdparty,Random,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Thirdparty\Random.cs,Random,The following statement contains a magic number: mt[i] = 1812433253u * (mt[i - 1] ^ (mt[i - 1] >> 30)) + i;
Magic Number,OpenRA.Thirdparty,Random,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Thirdparty\Random.cs,Random,The following statement contains a magic number: mt[i] = 1812433253u * (mt[i - 1] ^ (mt[i - 1] >> 30)) + i;
Magic Number,OpenRA.Thirdparty,Random,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Thirdparty\Random.cs,Next,The following statement contains a magic number: y ^= (y >> 11);
Magic Number,OpenRA.Thirdparty,Random,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Thirdparty\Random.cs,Next,The following statement contains a magic number: y ^= ((y << 7) & 2636928640);
Magic Number,OpenRA.Thirdparty,Random,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Thirdparty\Random.cs,Next,The following statement contains a magic number: y ^= ((y << 7) & 2636928640);
Magic Number,OpenRA.Thirdparty,Random,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Thirdparty\Random.cs,Next,The following statement contains a magic number: y ^= ((y << 15) & 4022730752);
Magic Number,OpenRA.Thirdparty,Random,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Thirdparty\Random.cs,Next,The following statement contains a magic number: y ^= ((y << 15) & 4022730752);
Magic Number,OpenRA.Thirdparty,Random,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Thirdparty\Random.cs,Next,The following statement contains a magic number: y ^= y >> 18;
Magic Number,OpenRA.Thirdparty,Random,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Thirdparty\Random.cs,Next,The following statement contains a magic number: index = (index + 1) % 624;
Magic Number,OpenRA.Thirdparty,Random,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Thirdparty\Random.cs,Generate,The following statement contains a magic number: var y = (mt[i] & 0x80000000) | (mt[(i + 1) % 624] & 0x7fffffff);
Magic Number,OpenRA.Thirdparty,Random,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Thirdparty\Random.cs,Generate,The following statement contains a magic number: mt[i] = mt[(i + 397u) % 624u] ^ (y >> 1);
Magic Number,OpenRA.Thirdparty,Random,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Thirdparty\Random.cs,Generate,The following statement contains a magic number: mt[i] = mt[(i + 397u) % 624u] ^ (y >> 1);
Magic Number,OpenRA.Thirdparty,Random,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Thirdparty\Random.cs,Generate,The following statement contains a magic number: mt[i] = (mt[i] ^ 2567483615);
Missing Default,OpenRA.FileFormats.Graphics,PngLoader,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.FileFormats\Graphics\PngLoader.cs,Load,The following switch statement is missing a default case: switch (type)  						{  							case "IHDR":  								{    									var width = IPAddress.NetworkToHostOrder(cr.ReadInt32());  									var height = IPAddress.NetworkToHostOrder(cr.ReadInt32());  									var bitDepth = cr.ReadByte();  									var colorType = (PngColorType)cr.ReadByte();  									var compression = cr.ReadByte();  									/*var filter = */cr.ReadByte();  									var interlace = cr.ReadByte();    									if (compression != 0) throw new InvalidDataException("Compression method not supported");  									if (interlace != 0) throw new InvalidDataException("Interlacing not supported");    									bitmap = new Bitmap(width' height' MakePixelFormat(bitDepth' colorType));    								}  								break;    							case "PLTE":  								{  									palette = new Color[256];  									for (var i = 0; i < 256; i++)  									{  										var r = cr.ReadByte(); var g = cr.ReadByte(); var b = cr.ReadByte();  										palette[i] = Color.FromArgb(r' g' b);  									}  								}  								break;    							case "tRNS":  								{  									for (var i = 0; i < length; i++)  										palette[i] = Color.FromArgb(cr.ReadByte()' palette[i]);  								}  								break;    							case "IDAT":  								{  									data.AddRange(content);  								}  								break;    							case "IEND":  								{  									var bits = bitmap.LockBits(bitmap.Bounds()'  										ImageLockMode.WriteOnly' PixelFormat.Format8bppIndexed);    									using (var ns = new MemoryStream(data.ToArray()))  									{  										// 'zlib' flags bytes; confuses the DeflateStream.  										/*var flags = (byte)*/ns.ReadByte();  										/*var moreFlags = (byte)*/ns.ReadByte();    										using (var ds = new DeflateStream(ns' CompressionMode.Decompress))  										using (var dr = new BinaryReader(ds))  										{  											var prevLine = new byte[bitmap.Width];	// all zero  											for (var y = 0; y < bitmap.Height; y++)  											{  												var filter = (PngFilter)dr.ReadByte();  												var line = dr.ReadBytes(bitmap.Width);    												for (var i = 0; i < bitmap.Width; i++)  													line[i] = i > 0  														? UnapplyFilter(filter' line[i]' line[i - 1]' prevLine[i]' prevLine[i - 1])  														: UnapplyFilter(filter' line[i]' 0' prevLine[i]' 0);    												Marshal.Copy(line' 0' new IntPtr(bits.Scan0.ToInt64() + y * bits.Stride)' line.Length);  												prevLine = line;  											}  										}  									}    									bitmap.UnlockBits(bits);    									using (var temp = new Bitmap(1' 1' PixelFormat.Format8bppIndexed))  									{  										var cp = temp.Palette;  										for (var i = 0; i < 256; i++)  											cp.Entries[i] = palette[i];		// finalize the palette.  										bitmap.Palette = cp;  										return bitmap;  									}  								}  						}
