Implementation smell,Namespace,Class,File,Method,Description
Long Method,OpenRA.Mods.RA.Missions,MonsterTankMadnessScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs,Tick,The method has 107 lines of code.
Long Method,OpenRA.Mods.RA.Server,LobbyCommands,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ServerTraits\LobbyCommands.cs,InterpretCommand,The method has 414 lines of code.
Long Method,OpenRA.Mods.RA.Widgets.Logic,LobbyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\LobbyLogic.cs,LobbyLogic,The method has 171 lines of code.
Long Method,OpenRA.Mods.RA.Widgets.Logic,LobbyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\LobbyLogic.cs,UpdatePlayerList,The method has 162 lines of code.
Long Method,OpenRA.Mods.RA.Widgets.Logic,SettingsMenuLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\SettingsMenuLogic.cs,SettingsMenuLogic,The method has 168 lines of code.
Complex Method,OpenRA.Mods.RA.AI,BaseBuilder,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\BaseBuilder.cs,Tick,Cyclomatic complexity of the method is 12
Complex Method,OpenRA.Mods.RA.AI,AirAttackState,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,Execute,Cyclomatic complexity of the method is 12
Complex Method,OpenRA.Mods.RA.AI,GroundUnitsAttackMoveState,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,Execute,Cyclomatic complexity of the method is 10
Complex Method,OpenRA.Mods.RA.AI,HackyAI,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,ChooseBuildingToBuild,Cyclomatic complexity of the method is 8
Complex Method,OpenRA.Mods.RA.AI,HackyAI,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,ChooseBuildLocation,Cyclomatic complexity of the method is 10
Complex Method,OpenRA.Mods.RA.AI,HackyAI,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,FindAndDeployMcv,Cyclomatic complexity of the method is 8
Complex Method,OpenRA.Mods.RA.AI,HackyAI,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,Damaged,Cyclomatic complexity of the method is 9
Complex Method,OpenRA.Mods.RA,Bridge,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Bridge.cs,UpdateState,Cyclomatic complexity of the method is 9
Complex Method,OpenRA.Mods.RA,Combat,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Combat.cs,DoImpact,Cyclomatic complexity of the method is 18
Complex Method,OpenRA.Mods.RA,CreateMPPlayers,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\CreateMPPlayers.cs,CreatePlayers,Cyclomatic complexity of the method is 9
Complex Method,OpenRA.Mods.RA,Harvester,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Harvester.cs,ResolveOrder,Cyclomatic complexity of the method is 10
Complex Method,OpenRA.Mods.RA,ProductionQueue,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs,ResolveOrder,Cyclomatic complexity of the method is 9
Complex Method,OpenRA.Mods.RA,ProductionItem,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs,Tick,Cyclomatic complexity of the method is 8
Complex Method,OpenRA.Mods.RA,ProximityCapturable,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ProximityCapturable.cs,Tick,Cyclomatic complexity of the method is 8
Complex Method,OpenRA.Mods.RA,StrategicVictoryConditions,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\StrategicVictoryConditions.cs,Tick,Cyclomatic complexity of the method is 8
Complex Method,OpenRA.Mods.RA,ChronoshiftPower,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\SupportPowers\ChronoshiftPower.cs,SimilarTerrain,Cyclomatic complexity of the method is 9
Complex Method,OpenRA.Mods.RA,SelectDestination,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\SupportPowers\ChronoshiftPower.cs,RenderBeforeWorld,Cyclomatic complexity of the method is 8
Complex Method,OpenRA.Mods.RA,DebugOverlay,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\World\DebugOverlay.cs,Render,Cyclomatic complexity of the method is 9
Complex Method,OpenRA.Mods.RA.Activities,Attack,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\Attack.cs,InnerTick,Cyclomatic complexity of the method is 8
Complex Method,OpenRA.Mods.RA.Activities,CaptureActor,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\CaptureActor.cs,Tick,Cyclomatic complexity of the method is 8
Complex Method,OpenRA.Mods.RA.Activities,DeliverResources,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\DeliverResources.cs,Tick,Cyclomatic complexity of the method is 8
Complex Method,OpenRA.Mods.RA.Activities,FindResources,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\FindResources.cs,Tick,Cyclomatic complexity of the method is 9
Complex Method,OpenRA.Mods.RA.Activities,HarvestResource,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\FindResources.cs,Tick,Cyclomatic complexity of the method is 9
Complex Method,OpenRA.Mods.RA.Activities,Infiltrate,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\Infiltrate.cs,Tick,Cyclomatic complexity of the method is 8
Complex Method,OpenRA.Mods.RA.Activities,LayMines,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\LayMines.cs,Tick,Cyclomatic complexity of the method is 8
Complex Method,OpenRA.Mods.RA.Activities,Repair,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\Repair.cs,Tick,Cyclomatic complexity of the method is 8
Complex Method,OpenRA.Mods.RA.Air,Helicopter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\Helicopter.cs,ResolveOrder,Cyclomatic complexity of the method is 10
Complex Method,OpenRA.Mods.RA.Buildings,BuildingUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Buildings\Util.cs,GetLineBuildCells,Cyclomatic complexity of the method is 9
Complex Method,OpenRA.Mods.RA.Effects,Missile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Missile.cs,Tick,Cyclomatic complexity of the method is 11
Complex Method,OpenRA.Mods.RA.Missions,Allies01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs,Tick,Cyclomatic complexity of the method is 16
Complex Method,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,Tick,Cyclomatic complexity of the method is 22
Complex Method,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,Tick,Cyclomatic complexity of the method is 15
Complex Method,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,Tick,Cyclomatic complexity of the method is 22
Complex Method,OpenRA.Mods.RA.Missions,CountdownTimer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\CountdownTimer.cs,Tick,Cyclomatic complexity of the method is 11
Complex Method,OpenRA.Mods.RA.Missions,MonsterTankMadnessScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs,Tick,Cyclomatic complexity of the method is 32
Complex Method,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,Tick,Cyclomatic complexity of the method is 11
Complex Method,OpenRA.Mods.RA.Move,Mobile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\Mobile.cs,Nudge,Cyclomatic complexity of the method is 8
Complex Method,OpenRA.Mods.RA.Move,Move,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\Move.cs,Tick,Cyclomatic complexity of the method is 9
Complex Method,OpenRA.Mods.RA.Move,Move,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\Move.cs,PopPath,Cyclomatic complexity of the method is 9
Complex Method,OpenRA.Mods.RA.Move,PathSearch,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\PathSearch.cs,Expand,Cyclomatic complexity of the method is 22
Complex Method,OpenRA.Mods.RA.Orders,PlaceBuildingOrderGenerator,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Orders\PlaceBuildingOrderGenerator.cs,RenderBeforeWorld,Cyclomatic complexity of the method is 8
Complex Method,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,Cyclomatic complexity of the method is 15
Complex Method,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,HandleBuildPalette,Cyclomatic complexity of the method is 8
Complex Method,OpenRA.Mods.RA.Widgets,PowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\PowerBinWidget.cs,Draw,Cyclomatic complexity of the method is 8
Complex Method,OpenRA.Mods.RA.Widgets,RadarBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarBinWidget.cs,Tick,Cyclomatic complexity of the method is 11
Complex Method,OpenRA.Mods.RA.Widgets,RadarWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarWidget.cs,Tick,Cyclomatic complexity of the method is 9
Complex Method,OpenRA.Mods.RA.Widgets,StrategicProgressWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\StrategicProgressWidget.cs,Draw,Cyclomatic complexity of the method is 8
Complex Method,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,Cyclomatic complexity of the method is 11
Complex Method,OpenRA.Mods.RA.Widgets,WorldCommandWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldCommandWidget.cs,ProcessInput,Cyclomatic complexity of the method is 14
Complex Method,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,Cyclomatic complexity of the method is 8
Complex Method,OpenRA.Mods.RA.Widgets.Logic,LobbyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\LobbyLogic.cs,LobbyLogic,Cyclomatic complexity of the method is 8
Complex Method,OpenRA.Mods.RA.Widgets.Logic,LobbyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\LobbyLogic.cs,UpdatePlayerList,Cyclomatic complexity of the method is 12
Complex Method,OpenRA.Mods.RA.Widgets.Logic,MapChooserLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\MapChooserLogic.cs,EnumerateMaps,Cyclomatic complexity of the method is 8
Long Parameter List,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,RelativeValue,The method has 5 parameters. Parameters: own' enemy' normalizeByValue' relativeFunc' getValue
Long Parameter List,OpenRA.Mods.RA,AttackOrderTargeter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Attack\AttackBase.cs,CanTargetActor,The method has 5 parameters. Parameters: self' target' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Mods.RA,AttackOrderTargeter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Attack\AttackBase.cs,CanTargetLocation,The method has 6 parameters. Parameters: self' location' actorsAtLocation' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Mods.RA,CaptureOrderTargeter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Captures.cs,CanTargetActor,The method has 5 parameters. Parameters: self' target' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Mods.RA,Chronoshiftable,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Chronoshiftable.cs,Teleport,The method has 5 parameters. Parameters: self' targetLocation' duration' killCargo' chronosphere
Long Parameter List,OpenRA.Mods.RA,EngineerRepairOrderTargeter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\EngineerRepair.cs,CanTargetActor,The method has 5 parameters. Parameters: self' target' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Mods.RA,HarvestOrderTargeter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Harvester.cs,CanTargetActor,The method has 5 parameters. Parameters: self' target' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Mods.RA,HarvestOrderTargeter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Harvester.cs,CanTargetLocation,The method has 6 parameters. Parameters: self' location' actorsAtLocation' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Mods.RA,CheckActorReferences,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Lint\CheckActorReferences.cs,CheckReference,The method has 5 parameters. Parameters: actorInfo' traitInfo' fieldInfo' dict' type
Long Parameter List,OpenRA.Mods.RA,BeginMinefieldOrderTargeter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Minelayer.cs,CanTargetActor,The method has 5 parameters. Parameters: self' target' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Mods.RA,BeginMinefieldOrderTargeter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Minelayer.cs,CanTargetLocation,The method has 6 parameters. Parameters: self' location' actorsAtLocation' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Mods.RA,ProductionItem,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs,ProductionItem,The method has 6 parameters. Parameters: queue' item' time' cost' pm' onComplete
Long Parameter List,OpenRA.Mods.RA,RallyPointOrderTargeter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RallyPoint.cs,CanTargetActor,The method has 5 parameters. Parameters: self' target' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Mods.RA,RallyPointOrderTargeter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RallyPoint.cs,CanTargetLocation,The method has 6 parameters. Parameters: self' location' actorsAtLocation' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Mods.RA,SupplyTruckOrderTargeter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\SupplyTruck.cs,CanTargetActor,The method has 5 parameters. Parameters: self' target' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Mods.RA,GpsPower,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs,StanceChanged,The method has 5 parameters. Parameters: self' a' b' oldStance' newStance
Long Parameter List,OpenRA.Mods.RA,Weapon,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Weapon.cs,CheckFire,The method has 5 parameters. Parameters: self' attack' move' facing' target
Long Parameter List,OpenRA.Mods.RA,InfiltratorOrderTargeter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Infiltrates.cs,CanTargetActor,The method has 5 parameters. Parameters: self' target' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Mods.RA.Air,AircraftMoveOrderTargeter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs,CanTargetActor,The method has 5 parameters. Parameters: self' target' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Mods.RA.Air,AircraftMoveOrderTargeter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs,CanTargetLocation,The method has 6 parameters. Parameters: self' location' actorsAtLocation' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Mods.RA.Buildings,BuildingUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Buildings\Util.cs,CanPlaceBuilding,The method has 5 parameters. Parameters: world' name' building' topLeft' toIgnore
Long Parameter List,OpenRA.Mods.RA.Effects,CashTick,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\CashTick.cs,CashTick,The method has 5 parameters. Parameters: value' lifetime' velocity' pos' color
Long Parameter List,OpenRA.Mods.RA.Effects,CashTick,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\CashTick.cs,CashTick,The method has 5 parameters. Parameters: value' lifetime' velocity' pos' color
Long Parameter List,OpenRA.Mods.RA.Effects,Corpse,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Corpse.cs,Corpse,The method has 5 parameters. Parameters: world' pos' image' sequence' paletteName
Long Parameter List,OpenRA.Mods.RA.Effects,Explosion,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Explosion.cs,Explosion,The method has 5 parameters. Parameters: world' pixelPos' style' isWater' altitude
Long Parameter List,OpenRA.Mods.RA.Effects,NukeLaunch,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\NukeLaunch.cs,NukeLaunch,The method has 5 parameters. Parameters: firedBy' silo' weapon' spawnOffset' targetLocation
Long Parameter List,OpenRA.Mods.RA.Effects,TeslaZap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\TeslaZap.cs,DrawZap,The method has 5 parameters. Parameters: wr' from' to' s' p
Long Parameter List,OpenRA.Mods.RA.Missions,Patrol,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,Patrol,The method has 5 parameters. Parameters: world' actorNames' owner' points' pointIndex
Long Parameter List,OpenRA.Mods.RA.Missions,MissionUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs,ExtractUnitWithChinook,The method has 6 parameters. Parameters: world' owner' unit' entry' lz' exit
Long Parameter List,OpenRA.Mods.RA.Missions,MissionUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs,InsertUnitWithChinook,The method has 7 parameters. Parameters: world' owner' unitName' entry' lz' exit' afterUnload
Long Parameter List,OpenRA.Mods.RA.Missions,MissionUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs,Paradrop,The method has 5 parameters. Parameters: world' owner' units' entry' location
Long Parameter List,OpenRA.Mods.RA.Missions,MissionUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs,CreateActor,The method has 6 parameters. Parameters: world' addToWorld' name' owner' location' facing
Long Parameter List,OpenRA.Mods.RA.Missions,MissionUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs,CreateActor,The method has 5 parameters. Parameters: world' name' owner' location' facing
Long Parameter List,OpenRA.Mods.RA.Move,MobileInfo,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\Mobile.cs,CanEnterCell,The method has 6 parameters. Parameters: world' self' cell' ignoreActor' checkTransientActors' blockedByMovers
Long Parameter List,OpenRA.Mods.RA.Move,MoveOrderTargeter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\Mobile.cs,CanTargetActor,The method has 5 parameters. Parameters: self' target' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Mods.RA.Move,MoveOrderTargeter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\Mobile.cs,CanTargetLocation,The method has 6 parameters. Parameters: self' location' actorsAtLocation' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Mods.RA.Move,MovePart,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\Move.cs,MovePart,The method has 6 parameters. Parameters: move' from' to' fromFacing' toFacing' startingFraction
Long Parameter List,OpenRA.Mods.RA.Move,MoveFirstHalf,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\Move.cs,MoveFirstHalf,The method has 6 parameters. Parameters: move' from' to' fromFacing' toFacing' startingFraction
Long Parameter List,OpenRA.Mods.RA.Move,MoveSecondHalf,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\Move.cs,MoveSecondHalf,The method has 6 parameters. Parameters: move' from' to' fromFacing' toFacing' startingFraction
Long Parameter List,OpenRA.Mods.RA.Move,PathSearch,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\PathSearch.cs,FromPoint,The method has 6 parameters. Parameters: world' mi' self' from' target' checkForBlocked
Long Parameter List,OpenRA.Mods.RA.Move,PathSearch,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\PathSearch.cs,FromPoints,The method has 6 parameters. Parameters: world' mi' self' froms' target' checkForBlocked
Long Parameter List,OpenRA.Mods.RA.Orders,DeployOrderTargeter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Orders\DeployOrderTargeter.cs,CanTargetActor,The method has 5 parameters. Parameters: self' target' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Mods.RA.Orders,DeployOrderTargeter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Orders\DeployOrderTargeter.cs,CanTargetLocation,The method has 6 parameters. Parameters: self' location' actorsAtLocation' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Mods.RA.Orders,EnterOrderTargeter<T>,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Orders\EnterBuildingOrderTargeter.cs,EnterOrderTargeter,The method has 6 parameters. Parameters: order' priority' targetEnemy' targetAlly' canTarget' useEnterCursor
Long Parameter List,OpenRA.Mods.RA.Orders,EnterOrderTargeter<T>,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Orders\EnterBuildingOrderTargeter.cs,CanTargetActor,The method has 5 parameters. Parameters: self' target' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Mods.RA.Orders,UnitOrderTargeter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Orders\UnitOrderTargeter.cs,UnitOrderTargeter,The method has 5 parameters. Parameters: order' priority' cursor' targetEnemyUnits' targetAllyUnits
Long Parameter List,OpenRA.Mods.RA.Orders,UnitOrderTargeter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Orders\UnitOrderTargeter.cs,CanTargetActor,The method has 5 parameters. Parameters: self' target' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Mods.RA.Orders,UnitOrderTargeter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Orders\UnitOrderTargeter.cs,CanTargetLocation,The method has 6 parameters. Parameters: self' location' actorsAtLocation' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Mods.RA.Orders,UnitTraitOrderTargeter<T>,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Orders\UnitOrderTargeter.cs,UnitTraitOrderTargeter,The method has 5 parameters. Parameters: order' priority' cursor' targetEnemyUnits' targetAllyUnits
Long Parameter List,OpenRA.Mods.RA.Orders,UnitTraitOrderTargeter<T>,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Orders\UnitOrderTargeter.cs,CanTargetActor,The method has 5 parameters. Parameters: self' target' forceAttack' forceQueued' cursor
Long Parameter List,OpenRA.Scripting,RASpecialPowers,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Scripting\RASpecialPowers.cs,Chronoshift,The method has 5 parameters. Parameters: world' units' chronosphere' duration' killCargo
Long Parameter List,OpenRA.Mods.RA.Server,LobbyCommands,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ServerTraits\LobbyCommands.cs,ValidateSlotCommand,The method has 5 parameters. Parameters: server' conn' client' arg' requiresHost
Long Parameter List,OpenRA.Mods.RA.Widgets.Logic,ColorPickerLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ColorPickerLogic.cs,ColorPickerLogic,The method has 5 parameters. Parameters: widget' initialRamp' onChange' onSelect' worldRenderer
Long Parameter List,OpenRA.Mods.RA.Widgets.Logic,ConnectionLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ConnectionLogic.cs,ConnectionLogic,The method has 6 parameters. Parameters: widget' host' port' onConnect' onRetry' onAbort
Long Parameter List,OpenRA.Mods.RA.Widgets.Logic,ConnectionFailedLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ConnectionLogic.cs,ConnectionFailedLogic,The method has 5 parameters. Parameters: widget' host' port' onRetry' onAbort
Long Parameter List,OpenRA.Mods.RA.Widgets.Logic,LobbyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\LobbyLogic.cs,LobbyLogic,The method has 6 parameters. Parameters: widget' world' orderManager' onExit' onStart' addBots
Long Statement,OpenRA.Mods.RA.AI,StateBase,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,MayBeFlee,The length of the statement  "				var enemyAroundUnit = units.Where(unit => owner.bot.p.Stances[unit.Owner] == Stance.Enemy && unit.HasTrait<AttackBase>()).ToList(); " is 131.
Long Statement,OpenRA.Mods.RA.AI,GroundUnitsAttackMoveState,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,Execute,The length of the statement  "					var enemynearby = enemys.Where(a1 => a1.HasTrait<ITargetable>() && leader.Owner.Stances[a1.Owner] == Stance.Enemy).ToList(); " is 124.
Long Statement,OpenRA.Mods.RA,AttackWander,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs,TickIdle,The length of the statement  "			var target = (Util.SubPxVector[self.World.SharedRandom.Next(255)] * Info.MoveRadius).ToPVecInt().ToCVec() + self.Location; " is 122.
Long Statement,OpenRA.Mods.RA,CashTrickler,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\CashTrickler.cs,Tick,The length of the statement  "					self.World.AddFrameEndTask(w => w.Add(new CashTick(Info.Amount' Info.TickLifetime' Info.TickVelocity' self.CenterLocation' self.Owner.ColorRamp.GetColor(0)))); " is 159.
Long Statement,OpenRA.Mods.RA,Combat,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Combat.cs,DoImpact,The length of the statement  "				var smudgeType = world.GetTerrainInfo(targetTile).AcceptsSmudgeType.FirstOrDefault(t => warhead.SmudgeType.Contains(t)); " is 120.
Long Statement,OpenRA.Mods.RA,Combat,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Combat.cs,GetTurretPosition,The length of the statement  "			if (facing == null) return turret.ScreenSpacePosition;	/* things that don't have a rotating base don't need the turrets repositioned */ " is 135.
Long Statement,OpenRA.Mods.RA,ConquestVictoryConditions,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ConquestVictoryConditions.cs,Win,The length of the statement  "				Game.RunAfterDelay(Info.NotificationDelay' () => Sound.PlayNotification(self.Owner' "Speech"' "Win"' self.Owner.Country.Race)); " is 127.
Long Statement,OpenRA.Mods.RA,Contrail,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs,Tick,The length of the statement  "			history.Tick(self.CenterLocation - new PVecInt(0' move.Altitude) - (PVecInt)Combat.GetTurretPosition(self' facing' contrailTurret).ToInt2()); " is 141.
Long Statement,OpenRA.Mods.RA,EmitInfantryOnSell,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\EmitInfantryOnSell.cs,Emit,The length of the statement  "			var actorTypes = info.ActorTypes.Select(a => new { Name = a' Cost = Rules.Info[a].Traits.Get<ValuedInfo>().Cost }).ToArray(); " is 125.
Long Statement,OpenRA.Mods.RA,GivesBounty,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\GivesBounty.cs,Killed,The length of the statement  "			if (bounty > 0 && e.Attacker.World.LocalPlayer != null && e.Attacker.Owner.Stances[e.Attacker.World.LocalPlayer] == Stance.Ally) " is 128.
Long Statement,OpenRA.Mods.RA,GivesBounty,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\GivesBounty.cs,Killed,The length of the statement  "				e.Attacker.World.AddFrameEndTask(w => w.Add(new CashTick(bounty' 20' 1' self.CenterLocation' e.Attacker.Owner.ColorRamp.GetColor(0)))); " is 135.
Long Statement,OpenRA.Mods.RA,OreRefinery,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\OreRefinery.cs,Tick,The length of the statement  "					self.World.AddFrameEndTask(w => w.Add(new CashTick(temp' Info.TickLifetime' Info.TickVelocity' self.CenterLocation' self.Owner.ColorRamp.GetColor(0)))); " is 152.
Long Statement,OpenRA.Mods.RA,ProductionQueue,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs,ResolveOrder,The length of the statement  "						var owned = self.Owner.World.ActorsWithTrait<Buildable>().Count(a => a.Actor.Info.Name == order.TargetString && a.Actor.Owner == self.Owner); " is 141.
Long Statement,OpenRA.Mods.RA,TechTree,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Player\TechTree.cs,GatherBuildables,The length of the statement  "				  .Where(a => a.Actor.Info.Traits.Get<BuildableInfo>().BuildLimit > 0 && !a.Actor.IsDead() && a.Actor.Owner == player && ret.Keys.All(k => k != a.Actor.Info.Name)) " is 161.
Long Statement,OpenRA.Mods.RA,RALoadScreen,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RALoadScreen.cs,Display,The length of the statement  "			r.Fonts["Bold"].DrawText(text' new float2(Renderer.Resolution.Width - textSize.X - 20' Renderer.Resolution.Height - textSize.Y - 20)' Color.White); " is 147.
Long Statement,OpenRA.Mods.RA,SelectDestination,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\SupportPowers\ChronoshiftPower.cs,RenderBeforeWorld,The length of the statement  "                            r.Sprite.DrawAt(r.Pos - Traits.Util.CenterOfCell(unit.Location).ToFloat2() + Traits.Util.CenterOfCell(targetCell).ToFloat2()' " is 125.
Long Statement,OpenRA.Mods.RA,SelectDestination,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\SupportPowers\ChronoshiftPower.cs,RenderBeforeWorld,The length of the statement  "						var canEnter = ((manager.self.Owner.Shroud.IsExplored(targetCell) || manager.self.Owner.HasFogVisibility())&& unit.Trait<Chronoshiftable>().CanChronoshiftTo(unit'targetCell)); " is 175.
Long Statement,OpenRA.Mods.RA,SelectDestination,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\SupportPowers\ChronoshiftPower.cs,IsValidTarget,The length of the statement  "					if (manager.self.Owner.Shroud.IsExplored(targetCell) && unit.Trait<Chronoshiftable>().CanChronoshiftTo(unit'targetCell)) " is 120.
Long Statement,OpenRA.Mods.RA,GpsWatcher,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs,RefreshGps,The length of the statement  "			if ((Granted || GrantedAllies) && atek.World.LocalPlayer != null && (atek.World.LocalPlayer.Stances[atek.Owner] == Stance.Ally)) " is 128.
Long Statement,OpenRA.Mods.RA,TargetableUnit<Info>,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\TargetableUnit.cs,TargetableBy,The length of the statement  "			return self.World.ActorsWithTrait<DetectCloaked>().Any(a => (self.Location - a.Actor.Location).Length < a.Actor.Info.Traits.Get<DetectCloakedInfo>().Range); " is 156.
Long Statement,OpenRA.Mods.RA,Transforms,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Transforms.cs,ResolveOrder,The length of the statement  "				self.QueueActivity(new Transform(self' Info.IntoActor) { Offset = (CVec)Info.Offset' Facing = Info.Facing' Sounds = Info.TransformSounds }); " is 140.
Long Statement,OpenRA.Mods.RA.Activities,Attack,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\Attack.cs,InnerTick,The length of the statement  "			if (!self.Owner.HasFogVisibility() && Target.Actor != null && Target.Actor.HasTrait<Mobile>() && !self.Owner.Shroud.IsTargetable(Target.Actor)) " is 143.
Long Statement,OpenRA.Mods.RA.Activities,Attack,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\Attack.cs,InnerTick,The length of the statement  "				return (AllowMovement) ? Util.SequenceActivities(self.Trait<Mobile>().MoveWithinRange(Target' Range)' this) : NextActivity; " is 123.
Long Statement,OpenRA.Mods.RA.Activities,DonateSupplies,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\DonateSupplies.cs,Tick,The length of the statement  "				self.World.AddFrameEndTask(w => w.Add(new CashTick(payload' 30' 2' target.CenterLocation' target.Owner.ColorRamp.GetColor(0)))); " is 128.
Long Statement,OpenRA.Mods.RA.Air,ReturnToBase,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\ReturnToBase.cs,Calculate,The length of the statement  "			var c2 = approachStart + new float2(0' turnRadius * Math.Sign(self.CenterLocation.Y - approachStart.Y));	// above or below start point " is 134.
Long Statement,OpenRA.Mods.RA.Buildings,BuildingUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Buildings\Util.cs,GetLineBuildCells,The length of the statement  "					if (world.ActorsWithTrait<LineBuild>().Any(a => (a.Actor.Info.Name == name && a.Actor.Location.X == cell.X && a.Actor.Location.Y == cell.Y))) " is 141.
Long Statement,OpenRA.Mods.RA.Effects,CashTick,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\CashTick.cs,Render,The length of the statement  "			font.DrawTextWithContrast(s' Game.viewport.Zoom*(pos.ToFloat2() - Game.viewport.Location) - offset' color' Color.Black'1); " is 122.
Long Statement,OpenRA.Mods.RA.Missions,Allies01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs,SpawnSignalFlare,The length of the statement  "			world.CreateActor(SignalFlareName' new TypeDictionary { new OwnerInit(allies)' new LocationInit(extractionLZ.Location) }); " is 122.
Long Statement,OpenRA.Mods.RA.Missions,Allies01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs,SpawnEinsteinAtLab,The length of the statement  "			einstein = world.CreateActor(EinsteinName' new TypeDictionary { new OwnerInit(allies)' new LocationInit(lab.Location) }); " is 121.
Long Statement,OpenRA.Mods.RA.Missions,Allies01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs,SetAlliedUnitsToDefensiveStance,The length of the statement  "			foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == allies && !a.IsDead() && a.HasTrait<AutoTarget>())) " is 123.
Long Statement,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,Tick,The length of the statement  "				MissionUtils.Paradrop(world' soviets' Badger2Passengers' badgerEntryPoint1.Location + new CVec(3' 0)' badgerDropPoint2.Location); " is 129.
Long Statement,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,Tick,The length of the statement  "				MissionUtils.Paradrop(world' soviets' Badger3Passengers' badgerEntryPoint1.Location + new CVec(6' 0)' badgerDropPoint3.Location); " is 129.
Long Statement,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,Tick,The length of the statement  "					world.CreateActor(SignalFlareName' new TypeDictionary { new OwnerInit(allies1)' new LocationInit(extractionLZ.Location) }); " is 123.
Long Statement,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,SetupAlliedBase,The length of the statement  "					actor.AddTrait(new TransformedAction(s => s.Trait<Cargo>().Load(s' world.CreateActor(false' "e1"' allies2' null' null)))); " is 122.
Long Statement,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,SovietsAttackTown,The length of the statement  "			var sovietAttackUnits = world.FindAliveCombatantActorsInCircle(sovietTownAttackPoint1.CenterLocation' SovietTownAttackGroupRange) " is 129.
Long Statement,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,SovietsAttackTown,The length of the statement  "				unit.QueueActivity(new AttackMove.AttackMoveActivity(unit' new Move.Move(townPoint.Location' SovietTownMoveNearEnough))); " is 121.
Long Statement,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,FirstUnshroudedOrDefault,The length of the statement  "			return actors.FirstOrDefault(u => world.FindAliveCombatantActorsInCircle(u.CenterLocation' shroudRange).All(a => !a.HasTrait<CreatesShroud>())); " is 144.
Long Statement,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,ManageSovietAircraft,The length of the statement  "				&& (!u.HasTrait<Spy>() || !u.Trait<Spy>().Disguised || (u.Trait<Spy>().Disguised && u.Trait<Spy>().disguisedAsPlayer != soviets))); " is 131.
Long Statement,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,ManageSovietAircraft,The length of the statement  "					var enemy = FirstUnshroudedOrDefault(enemies.OrderBy(u => (aircraft.CenterLocation - u.CenterLocation).LengthSquared)' world' 10); " is 130.
Long Statement,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,CheckSovietAirbase,The length of the statement  "			if (objectives[AirbaseID].Status != ObjectiveStatus.Completed && sovietAirfields.All(a => a.IsDead() || a.Owner != soviets)) " is 124.
Long Statement,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,AttackNearestAlliedActor,The length of the statement  "			var enemy = FirstUnshroudedOrDefault(enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared)' world' 10); " is 126.
Long Statement,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,ManageSovietUnits,The length of the statement  "			var scatteredUnits = world.Actors.Where(u => u.IsInWorld && !u.IsDead() && u.HasTrait<Mobile>() && u.IsIdle && u.Owner == soviets) " is 130.
Long Statement,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The length of the statement  "			sovietEntryPoints = new[] { sovietEntryPoint1' sovietEntryPoint2' sovietEntryPoint3' sovietEntryPoint4' sovietEntryPoint5' sovietEntryPoint6 }.Select(p => p.Location).ToArray(); " is 177.
Long Statement,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The length of the statement  "			sovietRallyPoints = new[] { sovietRallyPoint1' sovietRallyPoint2' sovietRallyPoint3' sovietRallyPoint4' sovietRallyPoint5' sovietRallyPoint6 }.Select(p => p.Location).ToArray(); " is 177.
Long Statement,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The length of the statement  "			sovietAirfields = actors.Values.Where(a => a.Owner == soviets && a.HasTrait<Production>() && a.Info.Traits.Get<ProductionInfo>().Produces.Contains("Plane")).ToArray(); " is 167.
Long Statement,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The length of the statement  "			paradropBox = new Rectangle(topLeft.Location.X' topLeft.Location.Y' bottomRight.Location.X - topLeft.Location.X' bottomRight.Location.Y - topLeft.Location.Y); " is 158.
Long Statement,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,Tick,The length of the statement  "				if (world.FrameNumber == frameInfiltrated + 1500 * 12 && !bridgeTank.IsDead() && bridgeTank.IsInWorld && !bridge.IsDead()) " is 122.
Long Statement,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,Tick,The length of the statement  "						attacker.QueueActivity(new AttackMove.AttackMoveActivity(attacker' new Move.Move(reinforcementsUnloadPoint.Location + new CVec(10' -15)' 3))); " is 142.
Long Statement,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,Tick,The length of the statement  "						&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>() && !u.HasTrait<Bridge>()) || u.HasTrait<Mobile>()) && !u.IsDead() && u.IsInWorld); " is 133.
Long Statement,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,OnLabInfiltrated,The length of the statement  "					actor.QueueActivity(false' new Transform(actor' actor.Info.Traits.Get<Allies04TransformOnLabInfiltrateInfo>().ToActor) { SkipMakeAnims = true }); " is 145.
Long Statement,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,SetupSubStances,The length of the statement  "			foreach (var actor in world.Actors.Where(a => a.IsInWorld && a.Owner == soviets && !a.IsDead() && a.HasTrait<TargetableSubmarine>())) " is 133.
Long Statement,OpenRA.Mods.RA.Missions,Allies04MaintainBuilding,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,DamageStateChanged,The length of the statement  "			else if (self.HasTrait<RepairableBuilding>() && e.DamageState > DamageState.Undamaged && e.PreviousDamageState == DamageState.Undamaged) " is 136.
Long Statement,OpenRA.Mods.RA.Missions,MissionUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs,AttackNearestLandActor,The length of the statement  "					&& ((u.HasTrait<Building>() && !u.HasTrait<Wall>()) || (u.HasTrait<Mobile>() && !u.HasTrait<Aircraft>())) && u.IsInWorld && !u.IsDead()); " is 137.
Long Statement,OpenRA.Mods.RA.Missions,CountdownTimerWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs,Draw,The length of the statement  "			font.DrawTextWithContrast(text' pos' Timer.TicksLeft <= 25 * 10 && Game.LocalTick % 50 < 25 ? Color.Red : Color.White' Color.Black' 1); " is 135.
Long Statement,OpenRA.Mods.RA.Missions,MonsterTankMadnessScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs,Tick,The length of the statement  "			if (!hospitalEvacuated && !hospital.IsDead() && MissionUtils.AreaSecuredWithUnits(world' greece' hospital.CenterLocation' 5)) " is 125.
Long Statement,OpenRA.Mods.RA.Missions,MonsterTankMadnessScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs,Tick,The length of the statement  "				var actorsInBase = world.FindUnits(alliedBaseTopLeft.CenterLocation' alliedBaseBottomRight.CenterLocation).Where(a => a != a.Owner.PlayerActor); " is 144.
Long Statement,OpenRA.Mods.RA.Missions,MonsterTankMadnessScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs,Tick,The length of the statement  "						demitriChinook = MissionUtils.ExtractUnitWithChinook(world' greece' demitri' chinookEntry' demitriLZ.Location' chinookEntry); " is 125.
Long Statement,OpenRA.Mods.RA.Missions,MonsterTankMadnessScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs,Tick,The length of the statement  "				else if (demitriChinook != null && !demitriChinook.IsDead() && !world.Map.IsInMap(demitriChinook.Location) && demitriChinook.Trait<Cargo>().Passengers.Contains(demitri)) " is 169.
Long Statement,OpenRA.Mods.RA.Missions,MonsterTankMadnessScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs,SetupAlliedBase,The length of the statement  "					actor.AddTrait(new TransformedAction(s => s.Trait<Cargo>().Load(s' world.CreateActor(false' "e1"' greece' null' null)))); " is 121.
Long Statement,OpenRA.Mods.RA.Missions,MonsterTankMadnessScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs,SpawnAndMoveBridgeUnits,The length of the statement  "				world.CreateActor(unit' greece' startEntryPoint.Location' Util.GetFacing(startBridgeEndPoint.CenterLocation - startEntryPoint.CenterLocation' 0)) " is 145.
Long Statement,OpenRA.Mods.RA.Missions,MonsterTankMadnessScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs,SpawnAndMoveAlliedBaseUnits,The length of the statement  "				world.CreateActor(unit' greece' alliedBaseEntryPoint.Location' Util.GetFacing(alliedBaseMovePoint.CenterLocation - alliedBaseEntryPoint.CenterLocation' 0)) " is 155.
Long Statement,OpenRA.Mods.RA.Missions,Soviet01ClassicScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs,Tick,The length of the statement  "			var unitsAndBuildings = world.Actors.Where(a => !a.IsDead() && a.IsInWorld && (a.HasTrait<Mobile>() || (a.HasTrait<Building>() && !a.HasTrait<Wall>()))); " is 153.
Long Statement,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,SendSquad1,The length of the statement  "				var actor = world.CreateActor(squad1[i]' new TypeDictionary { new OwnerInit(soviets)' new LocationInit(alliesbase1.Location + new CVec(-2 + i' -6 + i * 2)) }); " is 159.
Long Statement,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,SendSquad2,The length of the statement  "				var actor = world.CreateActor(squad2[i]' new TypeDictionary { new OwnerInit(soviets)' new LocationInit(alliesbase2.Location + new CVec(-9 + i' -2 + i * 2)) }); " is 159.
Long Statement,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,SpawnSovietInfantry,The length of the statement  "				var units = world.CreateActor((sovietInfantry).Random(world.SharedRandom)' new TypeDictionary { new LocationInit(sovietinfantryentry1.Location)' new OwnerInit(soviets) }); " is 171.
Long Statement,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,ManageSovietUnits,The length of the statement  "			var scatteredUnits = world.Actors.Where(u => u.IsInWorld && !u.IsDead() && u.HasTrait<Mobile>() && u.IsIdle && u.Owner == soviets) " is 130.
Long Statement,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,WorldLoaded,The length of the statement  "			sovietEntryPoints = new[] { sovietEntryPoint1' sovietEntryPoint2' sovietEntryPoint3' sovietEntryPoint4' sovietEntryPoint5 }.Select(p => p.Location).ToArray(); " is 158.
Long Statement,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,WorldLoaded,The length of the statement  "			sovietRallyPoints = new[] { sovietRallyPoint1' sovietRallyPoint2' sovietRallyPoint3' sovietRallyPoint4' sovietRallyPoint5 }.Select(p => p.Location).ToArray(); " is 158.
Long Statement,OpenRA.Mods.RA.Move,Mobile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\Mobile.cs,PerformMoveInner,The length of the statement  "			ticksBeforePathing = avgTicksBeforePathing + self.World.SharedRandom.Next(-spreadTicksBeforePathing' spreadTicksBeforePathing); " is 127.
Long Statement,OpenRA.Mods.RA.Move,Move,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\Move.cs,Tick,The length of the statement  "					Util.BetweenCells( mobile.fromCell' mobile.toCell ) + (mobile.Info.SubCellOffsets[mobile.fromSubCell] + mobile.Info.SubCellOffsets[mobile.toSubCell] ) / 2' " is 155.
Long Statement,OpenRA.Mods.RA.Move,PathFinder,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\PathFinder.cs,FindPath,The length of the statement  "						dbg.AddLayer(search.considered.Select(p => new Pair<CPos' int>(p' search.cellInfo[p.X' p.Y].MinCost))' search.maxCost' search.owner); " is 133.
Long Statement,OpenRA.Mods.RA.Move,PathFinder,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\PathFinder.cs,FindBidiPath,The length of the statement  "						dbg.AddLayer(fromSrc.considered.Select(p => new Pair<CPos' int>(p' fromSrc.cellInfo[p.X' p.Y].MinCost))' fromSrc.maxCost' fromSrc.owner); " is 137.
Long Statement,OpenRA.Mods.RA.Move,PathFinder,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\PathFinder.cs,FindBidiPath,The length of the statement  "						dbg.AddLayer(fromDest.considered.Select(p => new Pair<CPos' int>(p' fromDest.cellInfo[p.X' p.Y].MinCost))' fromDest.maxCost' fromDest.owner); " is 141.
Long Statement,OpenRA.Mods.RA.Server,LobbyCommands,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ServerTraits\LobbyCommands.cs,InterpretCommand,The length of the statement  "						if ((server.Map.Difficulties == null && s != null) || (server.Map.Difficulties != null && !server.Map.Difficulties.Contains(s))) " is 128.
Long Statement,OpenRA.Mods.RA.Server,LobbyCommands,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ServerTraits\LobbyCommands.cs,InterpretCommand,The length of the statement  "						var connToKick = server.conns.SingleOrDefault( c => server.GetClient(c) != null && server.GetClient(c).Index == clientID); " is 122.
Long Statement,OpenRA.Mods.RA.Server,LobbyCommands,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ServerTraits\LobbyCommands.cs,InterpretCommand,The length of the statement  "						if (server.lobbyInfo.Clients.Where( cc => cc != client ).Any( cc => (cc.SpawnPoint == spawnPoint) && (cc.SpawnPoint != 0) )) " is 124.
Long Statement,OpenRA.Mods.RA.Server,LobbyCommands,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ServerTraits\LobbyCommands.cs,InterpretCommand,The length of the statement  "						targetClient.ColorRamp = targetClient.PreferredColorRamp = new ColorRamp((byte)ci[0]' (byte)ci[1]' (byte)ci[2]' (byte)ci[3]); " is 125.
Long Statement,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,TickPaletteAnimation,The length of the statement  "				paletteOrigin = float2.Lerp(paletteClosedOrigin' paletteOpenOrigin' paletteAnimationFrame * 1.0f / paletteAnimationLength); " is 123.
Long Statement,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The length of the statement  "					buttons.Add(Pair.New(new Rectangle((int)rect.X' (int)rect.Y' (int)rect.Width' (int)rect.Height)' HandleClick(closureName' world))); " is 131.
Long Statement,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawBuildTabs,The length of the statement  "				WidgetUtils.DrawRGBA(ChromeProvider.GetImage("tabs-" + tabKeys[index]' race + "-" + queue.Info.Type)' new float2(x' y)); " is 120.
Long Statement,OpenRA.Mods.RA.Widgets,PowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\PowerBinWidget.cs,Draw,The length of the statement  "			lastPowerProvidedPos = float2.Lerp(lastPowerProvidedPos.GetValueOrDefault(powerLevelTemp)' powerLevelTemp' PowerBarLerpFactor); " is 127.
Long Statement,OpenRA.Mods.RA.Widgets,PowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\PowerBinWidget.cs,Draw,The length of the statement  "			lastPowerDrainedPos = float2.Lerp(lastPowerDrainedPos.GetValueOrDefault(powerDrainedTemp)' powerDrainedTemp' PowerBarLerpFactor); " is 129.
Long Statement,OpenRA.Mods.RA.Widgets,PowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\PowerBinWidget.cs,Draw,The length of the statement  "				Game.Renderer.Fonts["Regular"].DrawText("Provided: {0}\nDrained: {1}".F(power.PowerProvided' power.PowerDrained)' pos' Color.White); " is 132.
Long Statement,OpenRA.Mods.RA.Widgets,RadarBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarBinWidget.cs,Draw,The length of the statement  "				var o = new float2(mapRect.Location.X' mapRect.Location.Y + world.Map.Bounds.Height * previewScale * (1 - radarMinimapHeight)/2); " is 129.
Long Statement,OpenRA.Mods.RA.Widgets,RadarBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarBinWidget.cs,Tick,The length of the statement  "				radarMinimapHeight = float2.Lerp(0' 1' (radarAnimationFrame - radarSlideAnimationLength) * 1.0f / radarActivateAnimationLength); " is 128.
Long Statement,OpenRA.Mods.RA.Widgets,RadarBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarBinWidget.cs,CellToMinimapPixel,The length of the statement  "			return new int2((int)(mapRect.X +previewScale*(p.X - world.Map.Bounds.Left))' (int)(mapRect.Y + previewScale*(p.Y - world.Map.Bounds.Top))); " is 140.
Long Statement,OpenRA.Mods.RA.Widgets,RadarBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarBinWidget.cs,MinimapPixelToCell,The length of the statement  "			return new CPos(world.Map.Bounds.Left + (int)((p.X - mapRect.X) / previewScale)' world.Map.Bounds.Top + (int)((p.Y - mapRect.Y) / previewScale)); " is 145.
Long Statement,OpenRA.Mods.RA.Widgets,RadarWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarWidget.cs,Initialize,The length of the statement  "			previewScale = Math.Min(RenderBounds.Width * 1f / world.Map.Bounds.Width' RenderBounds.Height * 1f / world.Map.Bounds.Height); " is 126.
Long Statement,OpenRA.Mods.RA.Widgets,RadarWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarWidget.cs,Initialize,The length of the statement  "			mapRect = new RectangleF(previewOrigin.X' previewOrigin.Y' (int)(world.Map.Bounds.Width * previewScale)' (int)(world.Map.Bounds.Height * previewScale)); " is 152.
Long Statement,OpenRA.Mods.RA.Widgets,RadarWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarWidget.cs,Draw,The length of the statement  "			var o = new float2(mapRect.Location.X' mapRect.Location.Y + world.Map.Bounds.Height * previewScale * (1 - radarMinimapHeight)/2); " is 129.
Long Statement,OpenRA.Mods.RA.Widgets,StrategicProgressWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\StrategicProgressWidget.cs,Draw,The length of the statement  "				WidgetUtils.DrawRGBA(ChromeProvider.GetImage("strategic"' "critical_unowned")' offset + new float2(rb.Left + curX' rb.Top)); " is 124.
Long Statement,OpenRA.Mods.RA.Widgets,StrategicProgressWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\StrategicProgressWidget.cs,Draw,The length of the statement  "					WidgetUtils.DrawRGBA(ChromeProvider.GetImage("strategic"' "player_owned")' offset + new float2(rb.Left + curX' rb.Top)); " is 120.
Long Statement,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The length of the statement  "				WidgetUtils.DrawRGBA(WidgetUtils.GetChromeImage(world' "specialbin-middle")' new float2(rectBounds.X' rectBounds.Y + i * 51)); " is 126.
Long Statement,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The length of the statement  "			WidgetUtils.DrawRGBA(WidgetUtils.GetChromeImage(world' "specialbin-bottom")' new float2(rectBounds.X' rectBounds.Y + numPowers * 51)); " is 134.
Long Statement,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The length of the statement  "						Game.Renderer.Fonts["Bold"].DrawText("/ {0}".F(WidgetUtils.FormatTime(sp.TotalTime))' pos + new int2(45'0)' Color.White); " is 121.
Long Statement,OpenRA.Mods.RA.Widgets.Logic,DownloadPackagesLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DownloadPackagesLogic.cs,ShowDownloadDialog,The length of the statement  "				statusLabel.GetText = () => "Downloading {1}/{2} kB ({0}%)".F(i.ProgressPercentage' i.BytesReceived / 1024' i.TotalBytesToReceive / 1024); " is 138.
Long Statement,OpenRA.Mods.RA.Widgets.Logic,LobbyUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\LobbyUtils.cs,SelectSpawnPoint,The length of the statement  "				var locals = orderManager.LobbyInfo.Clients.Where(c => c.Index == orderManager.LocalClient.Index || (Game.IsHost && c.Bot != null)); " is 132.
Long Statement,OpenRA.Mods.RA.Widgets.Logic,LobbyUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\LobbyUtils.cs,SelectSpawnPoint,The length of the statement  "				orderManager.IssueOrder(Order.Command("spawn {0} {1}".F((playerToMove ?? orderManager.LocalClient).Index' selectedSpawn))); " is 123.
Long Statement,OpenRA.Mods.RA.Widgets.Logic,MapChooserLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\MapChooserLogic.cs,EnumerateMaps,The length of the statement  "			Game.RunAfterTick(() => scrollpanel.RemoveChildren()); // queue removal in case another thread added any items to the game queue " is 128.
Long Statement,OpenRA.Mods.RA.Widgets.Logic,ObserverStatsLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ObserverStatsLogic.cs,EarnedThisMinuteGraph,The length of the statement  "					(p.PlayerActor.TraitOrDefault<PlayerStatistics>() ?? new PlayerStatistics(p.PlayerActor)).EarnedSamples.Select(s => (float)s) " is 125.
Long Statement,OpenRA.Mods.RA.Widgets.Logic,ObserverStatsLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ObserverStatsLogic.cs,DisplayStats,The length of the statement  "			var teams = players.GroupBy(p => (world.LobbyInfo.ClientWithIndex(p.ClientIndex) ?? new Session.Client()).Team).OrderBy(g => g.Key); " is 132.
Long Statement,OpenRA.Mods.RA.Widgets.Logic,ObserverStatsLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ObserverStatsLogic.cs,EconomyStats,The length of the statement  "			harvesters.GetText = () => world.Actors.Count(a => a.Owner == player && !a.IsDead() && a.HasTrait<Harvester>()).ToString(); " is 123.
Long Statement,OpenRA.Mods.RA.Widgets.Logic,ObserverStatsLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ObserverStatsLogic.cs,AddPlayerFlagAndName,The length of the statement  "			playerName.GetText = () => player.PlayerName + (player.WinState == WinState.Undefined ? "" : " (" + player.WinState + ")"); " is 123.
Complex Conditional,OpenRA.Mods.RA.AI,StateBase,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,BusyAttack,The conditional expression  "a.GetCurrentActivity().GetType() == typeof(OpenRA.Mods.RA.Activities.Attack) ||  						a.GetCurrentActivity().GetType() == typeof(FlyAttack) ||  						(a.GetCurrentActivity().NextActivity != null &&  						(a.GetCurrentActivity().NextActivity.GetType() == typeof(OpenRA.Mods.RA.Activities.Attack) ||   						a.GetCurrentActivity().NextActivity.GetType() == typeof(FlyAttack)) )"  is complex.
Complex Conditional,OpenRA.Mods.RA.AI,AirStateBase,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,CountAntiAirUnits,The conditional expression  "unit != null && unit.HasTrait<AttackBase>() && !unit.HasTrait<Aircraft>()  						&& !unit.IsDisabled()"  is complex.
Complex Conditional,OpenRA.Mods.RA.AI,AirStateBase,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,IsRearm,The conditional expression  "a.GetCurrentActivity().GetType() == typeof(OpenRA.Mods.RA.Activities.Rearm) ||  					a.GetCurrentActivity().GetType() == typeof(ResupplyAircraft) ||  					(a.GetCurrentActivity().NextActivity != null &&  					 (a.GetCurrentActivity().NextActivity.GetType() == typeof(OpenRA.Mods.RA.Activities.Rearm) ||  					 a.GetCurrentActivity().NextActivity.GetType() == typeof(ResupplyAircraft)))"  is complex.
Complex Conditional,OpenRA.Mods.RA,EjectOnDeath,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\EjectOnDeath.cs,Killed,The conditional expression  "IsSuitableCell(pilot' self.Location) && r > 100 - info.SuccessRate && aircraft.Altitude > 10  				&& self.Owner.WinState != WinState.Lost"  is complex.
Complex Conditional,OpenRA.Mods.RA,Bridge,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Bridge.cs,UpdateState,The conditional expression  "Info.Long && Health.DamageState != DamageState.Dead &&  				((southNeighbour != null && Info.ShorePieces.Contains(southNeighbour.Type) && !IsIntact(southNeighbour)) ||  				(northNeighbour != null && Info.ShorePieces.Contains(northNeighbour.Type) && !IsIntact(northNeighbour)))"  is complex.
Complex Conditional,OpenRA.Mods.RA,ChronoshiftDeploy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ChronoshiftDeploy.cs,CanJumpTo,The conditional expression  "chargeTick <= 0 // Can jump  				&& (self.Location - xy).Length <= Info.JumpDistance // Within jump range  				&& movement.CanEnterCell(xy) // Can enter cell  				&& (ignoreVis || self.Owner.Shroud.IsExplored(xy))"  is complex.
Complex Conditional,OpenRA.Mods.RA,TechTree,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Player\TechTree.cs,ActorChanged,The conditional expression  "a.Owner == player && (a.HasTrait<ITechTreePrerequisite>() || (bi != null && bi.BuildLimit > 0))"  is complex.
Complex Conditional,OpenRA.Mods.RA,SeedsResource,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\SeedsResource.cs,Tick,The conditional expression  "cell != null && self.World.Map.IsInMap(cell.Value) &&  					(resLayer.GetResource(cell.Value) == resourceType  					|| (resLayer.GetResource(cell.Value) == null && resLayer.AllowResourceAt(resourceType' cell.Value)))"  is complex.
Complex Conditional,OpenRA.Mods.RA,GpsWatcher,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs,RefreshGps,The conditional expression  "(Granted || GrantedAllies) && atek.World.LocalPlayer != null && (atek.World.LocalPlayer.Stances[atek.Owner] == Stance.Ally)"  is complex.
Complex Conditional,OpenRA.Mods.RA.Activities,Attack,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\Attack.cs,InnerTick,The conditional expression  "!self.Owner.HasFogVisibility() && Target.Actor != null && Target.Actor.HasTrait<Mobile>() && !self.Owner.Shroud.IsTargetable(Target.Actor)"  is complex.
Complex Conditional,OpenRA.Mods.RA.Effects,RepairIndicator,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\RepairIndicator.cs,Tick,The conditional expression  "!building.IsInWorld || building.IsDead() ||  				rb.Repairer == null || rb.Repairer != player"  is complex.
Complex Conditional,OpenRA.Mods.RA.Effects,TeslaZap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\TeslaZap.cs,DrawZap,The conditional expression  "(to - z).X > 5 || (to - z).X < -5 || (to - z).Y > 5 || (to - z).Y < -5"  is complex.
Complex Conditional,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,Tick,The conditional expression  "yak == null || (yak != null && !yak.IsDead() && (yak.GetCurrentActivity() is FlyCircle || yak.IsIdle))"  is complex.
Complex Conditional,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,Tick,The conditional expression  "!world.Actors.Any(a => (a.Owner == allies || a.Owner == allies2) && !a.IsDead()  				&& (a.HasTrait<Building>() && !a.HasTrait<Wall>()) || a.HasTrait<BaseBuilding>())"  is complex.
Complex Conditional,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,Tick,The conditional expression  "!world.Actors.Any(a => (a.Owner == allies1 || a.Owner == allies2) && a.IsInWorld && !a.IsDead()  				&& ((a.HasTrait<Building>() && !a.HasTrait<Wall>()) || a.HasTrait<BaseBuilding>()))"  is complex.
Complex Conditional,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,ManageSovietAircraft,The conditional expression  "(plane.Altitude == 0 && ammo.FullAmmo()) || (plane.Altitude != 0 && ammo.HasAmmo())"  is complex.
Complex Conditional,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,Tick,The conditional expression  "world.FrameNumber == frameInfiltrated + 1500 * 12 && !bridgeTank.IsDead() && bridgeTank.IsInWorld && !bridge.IsDead()"  is complex.
Complex Conditional,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,Tick,The conditional expression  "!world.Actors.Any(a => (a.Owner == allies1 || a.Owner == allies2) && !a.IsDead()  				&& (a.HasTrait<Building>() && !a.HasTrait<Wall>()) || a.HasTrait<BaseBuilding>())"  is complex.
Complex Conditional,OpenRA.Mods.RA.Missions,MonsterTankMadnessScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs,Tick,The conditional expression  "demitriChinook != null && !demitriChinook.IsDead() && !world.Map.IsInMap(demitriChinook.Location) && demitriChinook.Trait<Cargo>().Passengers.Contains(demitri)"  is complex.
Complex Conditional,OpenRA.Mods.RA.Missions,MonsterTankMadnessScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs,Tick,The conditional expression  "!world.Actors.Any(a => a.Owner == greece && a.IsInWorld && !a.IsDead()  				&& ((a.HasTrait<Building>() && !a.HasTrait<Wall>()) || a.HasTrait<BaseBuilding>() || a.HasTrait<Mobile>()))"  is complex.
Complex Conditional,OpenRA.Mods.RA.Server,LobbyCommands,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ServerTraits\LobbyCommands.cs,InterpretCommand,The conditional expression  "(server.Map.Difficulties == null && s != null) || (server.Map.Difficulties != null && !server.Map.Difficulties.Contains(s))"  is complex.
Complex Conditional,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,TickPaletteAnimation,The conditional expression  "(paletteAnimationFrame == 0 && !paletteOpen)  					|| (paletteAnimationFrame == paletteAnimationLength && paletteOpen)"  is complex.
Virtual Method Call from Constructor,OpenRA.Mods.RA.Render,RenderBuilding,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Render\RenderBuilding.cs,RenderBuilding,The constructor "RenderBuilding" calls a virtual method "NormalizeSequence".
Virtual Method Call from Constructor,OpenRA.Mods.RA.Render,RenderInfantry,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Render\RenderInfantry.cs,RenderInfantry,The constructor "RenderInfantry" calls a virtual method "NormalizeInfantrySequence".
Virtual Method Call from Constructor,OpenRA.Mods.RA.Widgets.Logic,SettingsMenuLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\SettingsMenuLogic.cs,SettingsMenuLogic,The constructor "SettingsMenuLogic" calls a virtual method "LoseFocus".
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: FuzzyVariable playerHealthFuzzy = new FuzzyVariable("OwnHealth"' 0.0' 100.0);
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: playerHealthFuzzy.Terms.Add(new FuzzyTerm("NearDead"' new TrapezoidMembershipFunction(0' 0' 20' 40)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: playerHealthFuzzy.Terms.Add(new FuzzyTerm("NearDead"' new TrapezoidMembershipFunction(0' 0' 20' 40)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: playerHealthFuzzy.Terms.Add(new FuzzyTerm("Injured"' new TrapezoidMembershipFunction(30' 50' 50' 70)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: playerHealthFuzzy.Terms.Add(new FuzzyTerm("Injured"' new TrapezoidMembershipFunction(30' 50' 50' 70)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: playerHealthFuzzy.Terms.Add(new FuzzyTerm("Injured"' new TrapezoidMembershipFunction(30' 50' 50' 70)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: playerHealthFuzzy.Terms.Add(new FuzzyTerm("Injured"' new TrapezoidMembershipFunction(30' 50' 50' 70)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: playerHealthFuzzy.Terms.Add(new FuzzyTerm("Normal"' new TrapezoidMembershipFunction(50' 80' 100' 100)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: playerHealthFuzzy.Terms.Add(new FuzzyTerm("Normal"' new TrapezoidMembershipFunction(50' 80' 100' 100)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: playerHealthFuzzy.Terms.Add(new FuzzyTerm("Normal"' new TrapezoidMembershipFunction(50' 80' 100' 100)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: playerHealthFuzzy.Terms.Add(new FuzzyTerm("Normal"' new TrapezoidMembershipFunction(50' 80' 100' 100)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: FuzzyVariable enemyHealthFuzzy = new FuzzyVariable("EnemyHealth"' 0.0' 100.0);
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: enemyHealthFuzzy.Terms.Add(new FuzzyTerm("NearDead"' new TrapezoidMembershipFunction(0' 0' 20' 40)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: enemyHealthFuzzy.Terms.Add(new FuzzyTerm("NearDead"' new TrapezoidMembershipFunction(0' 0' 20' 40)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: enemyHealthFuzzy.Terms.Add(new FuzzyTerm("Injured"' new TrapezoidMembershipFunction(30' 50' 50' 70)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: enemyHealthFuzzy.Terms.Add(new FuzzyTerm("Injured"' new TrapezoidMembershipFunction(30' 50' 50' 70)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: enemyHealthFuzzy.Terms.Add(new FuzzyTerm("Injured"' new TrapezoidMembershipFunction(30' 50' 50' 70)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: enemyHealthFuzzy.Terms.Add(new FuzzyTerm("Injured"' new TrapezoidMembershipFunction(30' 50' 50' 70)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: enemyHealthFuzzy.Terms.Add(new FuzzyTerm("Normal"' new TrapezoidMembershipFunction(50' 80' 100' 100)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: enemyHealthFuzzy.Terms.Add(new FuzzyTerm("Normal"' new TrapezoidMembershipFunction(50' 80' 100' 100)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: enemyHealthFuzzy.Terms.Add(new FuzzyTerm("Normal"' new TrapezoidMembershipFunction(50' 80' 100' 100)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: enemyHealthFuzzy.Terms.Add(new FuzzyTerm("Normal"' new TrapezoidMembershipFunction(50' 80' 100' 100)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: FuzzyVariable relativeAttackPowerFuzzy = new FuzzyVariable("RelativeAttackPower"' 0.0' 1000.0);
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: relativeAttackPowerFuzzy.Terms.Add(new FuzzyTerm("Weak"' new TrapezoidMembershipFunction(0' 0' 70' 90)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: relativeAttackPowerFuzzy.Terms.Add(new FuzzyTerm("Weak"' new TrapezoidMembershipFunction(0' 0' 70' 90)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: relativeAttackPowerFuzzy.Terms.Add(new FuzzyTerm("Equal"' new TrapezoidMembershipFunction(85' 100' 100' 115)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: relativeAttackPowerFuzzy.Terms.Add(new FuzzyTerm("Equal"' new TrapezoidMembershipFunction(85' 100' 100' 115)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: relativeAttackPowerFuzzy.Terms.Add(new FuzzyTerm("Equal"' new TrapezoidMembershipFunction(85' 100' 100' 115)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: relativeAttackPowerFuzzy.Terms.Add(new FuzzyTerm("Equal"' new TrapezoidMembershipFunction(85' 100' 100' 115)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: relativeAttackPowerFuzzy.Terms.Add(new FuzzyTerm("Strong"' new TrapezoidMembershipFunction(110' 150' 150' 1000)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: relativeAttackPowerFuzzy.Terms.Add(new FuzzyTerm("Strong"' new TrapezoidMembershipFunction(110' 150' 150' 1000)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: relativeAttackPowerFuzzy.Terms.Add(new FuzzyTerm("Strong"' new TrapezoidMembershipFunction(110' 150' 150' 1000)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: relativeAttackPowerFuzzy.Terms.Add(new FuzzyTerm("Strong"' new TrapezoidMembershipFunction(110' 150' 150' 1000)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: FuzzyVariable relativeSpeedFuzzy = new FuzzyVariable("RelativeSpeed"' 0.0' 1000.0);
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: relativeSpeedFuzzy.Terms.Add(new FuzzyTerm("Slow"' new TrapezoidMembershipFunction(0' 0' 70' 90)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: relativeSpeedFuzzy.Terms.Add(new FuzzyTerm("Slow"' new TrapezoidMembershipFunction(0' 0' 70' 90)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: relativeSpeedFuzzy.Terms.Add(new FuzzyTerm("Equal"' new TrapezoidMembershipFunction(85' 100' 100' 115)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: relativeSpeedFuzzy.Terms.Add(new FuzzyTerm("Equal"' new TrapezoidMembershipFunction(85' 100' 100' 115)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: relativeSpeedFuzzy.Terms.Add(new FuzzyTerm("Equal"' new TrapezoidMembershipFunction(85' 100' 100' 115)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: relativeSpeedFuzzy.Terms.Add(new FuzzyTerm("Equal"' new TrapezoidMembershipFunction(85' 100' 100' 115)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: relativeSpeedFuzzy.Terms.Add(new FuzzyTerm("Fast"' new TrapezoidMembershipFunction(110' 150' 150' 1000)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: relativeSpeedFuzzy.Terms.Add(new FuzzyTerm("Fast"' new TrapezoidMembershipFunction(110' 150' 150' 1000)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: relativeSpeedFuzzy.Terms.Add(new FuzzyTerm("Fast"' new TrapezoidMembershipFunction(110' 150' 150' 1000)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: relativeSpeedFuzzy.Terms.Add(new FuzzyTerm("Fast"' new TrapezoidMembershipFunction(110' 150' 150' 1000)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: FuzzyVariable attackOrFleeFuzzy = new FuzzyVariable("AttackOrFlee"' 0.0' 50.0);
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: attackOrFleeFuzzy.Terms.Add(new FuzzyTerm("Attack"' new TrapezoidMembershipFunction(0' 15' 15' 30)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: attackOrFleeFuzzy.Terms.Add(new FuzzyTerm("Attack"' new TrapezoidMembershipFunction(0' 15' 15' 30)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: attackOrFleeFuzzy.Terms.Add(new FuzzyTerm("Attack"' new TrapezoidMembershipFunction(0' 15' 15' 30)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: attackOrFleeFuzzy.Terms.Add(new FuzzyTerm("Flee"' new TrapezoidMembershipFunction(25' 35' 35' 50)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: attackOrFleeFuzzy.Terms.Add(new FuzzyTerm("Flee"' new TrapezoidMembershipFunction(25' 35' 35' 50)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: attackOrFleeFuzzy.Terms.Add(new FuzzyTerm("Flee"' new TrapezoidMembershipFunction(25' 35' 35' 50)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,InitializateFuzzyVariables,The following statement contains a magic number: attackOrFleeFuzzy.Terms.Add(new FuzzyTerm("Flee"' new TrapezoidMembershipFunction(25' 35' 35' 50)));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,CalculateFuzzy,The following statement contains a magic number: inputValues.Add(fuzzyEngine.InputByName("OwnHealth")' (double)NormalizedHealth(ownUnits' 100));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,CalculateFuzzy,The following statement contains a magic number: inputValues.Add(fuzzyEngine.InputByName("EnemyHealth")' (double)NormalizedHealth(enemyUnits' 100));
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,RelativePower,The following statement contains a magic number: return RelativeValue(own' enemy' 100' SumOfValues<AttackBase>' (Actor a) =>  			{  				int sumOfDamage = 0;  				foreach (var weap in a.Trait<AttackBase>().Weapons)  					if (weap.Info.Warheads[0] != null)  						sumOfDamage += weap.Info.Warheads[0].Damage;  				return sumOfDamage;  			});
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,RelativeSpeed,The following statement contains a magic number: return RelativeValue(own' enemy' 100' Average<Mobile>' (Actor a) => a.Trait<Mobile>().Info.Speed);
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,RelativeValue,The following statement contains a magic number: return 999.0f;
Magic Number,OpenRA.Mods.RA.AI,AttackOrFleeFuzzy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\AttackOrFleeFuzzy.cs,RelativeValue,The following statement contains a magic number: return relative.Clamp(0.0f' 999.0f);
Magic Number,OpenRA.Mods.RA.AI,GroundUnitsIdleState,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,Execute,The following statement contains a magic number: var enemyUnits = owner.world.FindUnitsInCircle(owner.Target.CenterLocation' Game.CellSize * 10)  					.Where(unit => owner.bot.p.Stances[unit.Owner] == Stance.Enemy).ToList();
Magic Number,OpenRA.Mods.RA.AI,GroundUnitsAttackMoveState,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,Execute,The following statement contains a magic number: var ownUnits = owner.world.FindUnitsInCircle(leader.CenterLocation' Game.CellSize * owner.units.Count/3)  					.Where(a => a.Owner == owner.units.FirstOrDefault().Owner && owner.units.Contains(a)).ToList();
Magic Number,OpenRA.Mods.RA.AI,UnitsForProtectionAttackState,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,Execute,The following statement contains a magic number: owner.Target = owner.bot.FindClosestEnemy(AverageUnitsPosition(owner.units).Value.ToPPos()' 8);
Magic Number,OpenRA.Mods.RA.AI,HackyAI,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,HasAdequatePower,The following statement contains a magic number: return playerPower.PowerProvided > 50 &&  				playerPower.PowerProvided > playerPower.PowerDrained * 1.2;
Magic Number,OpenRA.Mods.RA.AI,HackyAI,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,HasAdequatePower,The following statement contains a magic number: return playerPower.PowerProvided > 50 &&  				playerPower.PowerProvided > playerPower.PowerDrained * 1.2;
Magic Number,OpenRA.Mods.RA.AI,HackyAI,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,HasMinimumProc,The following statement contains a magic number: CountBuildingByCommonName("Refinery"' p) < 2 && CountBuildingByCommonName("Power"' p) > 0 &&  				CountBuildingByCommonName("Barracks"'p) > 0
Magic Number,OpenRA.Mods.RA.AI,HackyAI,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,ChooseEnemyTarget,The following statement contains a magic number: aggro[enemy].Aggro = aggro[enemy].Aggro / 2 - 1;
Magic Number,OpenRA.Mods.RA.AI,HackyAI,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,CreateAttackForce,The following statement contains a magic number: var randomizedSquadSize = Info.SquadSize + random.Next(30);
Magic Number,OpenRA.Mods.RA.AI,HackyAI,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,TryToRushAttack,The following statement contains a magic number: var enemys = world.FindUnitsInCircle(b.CenterLocation' Game.CellSize * 15)  					.Where(unit => p.Stances[unit.Owner] == Stance.Enemy && unit.HasTrait<AttackBase>()).ToList();
Magic Number,OpenRA.Mods.RA.AI,HackyAI,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,ProtectOwn,The following statement contains a magic number: var ownUnits = world.FindUnitsInCircle(baseCenter.ToPPos()' Game.CellSize * 15)  									.Where(unit => unit.Owner == p && !unit.HasTrait<Building>()  										&& unit.HasTrait<AttackBase>()).ToList();
Magic Number,OpenRA.Mods.RA.AI,HackyAI,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,ChooseRallyLocationNear,The following statement contains a magic number: var possibleRallyPoints = world.FindTilesInCircle(startPos' 8).Where(IsRallyPointValid).ToArray();
Magic Number,OpenRA.Mods.RA.AI,HackyAI,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,TryToUseSupportPower,The following statement contains a magic number: var attackLocation = FindAttackLocationToSupportPower(5);
Magic Number,OpenRA.Mods.RA.AI,HackyAI,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,ProductionUnits,The following statement contains a magic number: unitsHangingAroundTheBase.Count < 12
Magic Number,OpenRA.Mods.RA,EjectOnDeath,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\EjectOnDeath.cs,Killed,The following statement contains a magic number: var r = self.World.SharedRandom.Next(1' 100);
Magic Number,OpenRA.Mods.RA,EjectOnDeath,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\EjectOnDeath.cs,Killed,The following statement contains a magic number: IsSuitableCell(pilot' self.Location) && r > 100 - info.SuccessRate && aircraft.Altitude > 10  				&& self.Owner.WinState != WinState.Lost
Magic Number,OpenRA.Mods.RA,EjectOnDeath,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\EjectOnDeath.cs,Killed,The following statement contains a magic number: IsSuitableCell(pilot' self.Location) && r > 100 - info.SuccessRate && aircraft.Altitude > 10  				&& self.Owner.WinState != WinState.Lost
Magic Number,OpenRA.Mods.RA,AttackFrontal,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Attack\AttackFrontal.cs,CanAttack,The following statement contains a magic number: Math.Abs( facingToTarget - facing ) % 256 > info.FacingTolerance
Magic Number,OpenRA.Mods.RA,TeslaAttack,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Attack\AttackTesla.cs,Tick,The following statement contains a magic number: return Util.SequenceActivities( new Wait( 8 )' new TeslaZap( target )' this );
Magic Number,OpenRA.Mods.RA,TeslaZap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Attack\AttackTesla.cs,Tick,The following statement contains a magic number: return Util.SequenceActivities( new Wait( 3 )' this );
Magic Number,OpenRA.Mods.RA,AttackWander,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Attack\AttackWander.cs,TickIdle,The following statement contains a magic number: var target = (Util.SubPxVector[self.World.SharedRandom.Next(255)] * Info.MoveRadius).ToPVecInt().ToCVec() + self.Location;
Magic Number,OpenRA.Mods.RA,Burns,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Burns.cs,Burns,The following statement contains a magic number: rs.anims.Add("fire"'  					new AnimationWithOffset(anim' () => new float2(0' -3)' null));
Magic Number,OpenRA.Mods.RA,Capturable,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Capturable.cs,Tick,The following statement contains a magic number: CaptureProgressTime < Info.CaptureCompleteTime * 25
Magic Number,OpenRA.Mods.RA,CapturableBar,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\CapturableBar.cs,GetValue,The following statement contains a magic number: return (float)cap.CaptureProgressTime / (cap.Info.CaptureCompleteTime * 25);
Magic Number,OpenRA.Mods.RA,ChronoshiftDeploy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ChronoshiftDeploy.cs,ResolveOrder,The following statement contains a magic number: chargeTick = 25 * Info.ChargeTime;
Magic Number,OpenRA.Mods.RA,ChronoshiftDeploy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ChronoshiftDeploy.cs,GetPips,The following statement contains a magic number: const int numPips = 2;
Magic Number,OpenRA.Mods.RA,ChronoshiftDeploy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ChronoshiftDeploy.cs,GetPips,The following statement contains a magic number: (1 - chargeTick * 1.0f / (25 * Info.ChargeTime)) * numPips < i + 1
Magic Number,OpenRA.Mods.RA,ChronoTankOrderGenerator,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ChronoshiftDeploy.cs,RenderBeforeWorld,The following statement contains a magic number: wr.DrawRangeCircle(  				Color.FromArgb(128' Color.DeepSkyBlue)'  				self.CenterLocation.ToFloat2()' (int)self.Trait<ChronoshiftDeploy>().Info.JumpDistance);
Magic Number,OpenRA.Mods.RA,ChronoshiftPaletteEffect,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ChronoshiftPaletteEffect.cs,AdjustPalette,The following statement contains a magic number: var lum = (int)(255 * orig.GetBrightness());
Magic Number,OpenRA.Mods.RA,ChronoshiftPaletteEffect,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ChronoshiftPaletteEffect.cs,AdjustPalette,The following statement contains a magic number: x < 256
Magic Number,OpenRA.Mods.RA,Cloak,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Cloak.cs,RadarColorOverride,The following statement contains a magic number: c = Color.FromArgb(128' c);
Magic Number,OpenRA.Mods.RA,Combat,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Combat.cs,DoImpact,The following statement contains a magic number: warhead.Size.Length == 2
Magic Number,OpenRA.Mods.RA,Combat,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Combat.cs,DoImpact,The following statement contains a magic number: switch (warhead.DamageModel)  			{  				case DamageModel.Normal:  					{  						var maxSpread = warhead.Spread * (float)Math.Log(Math.Abs(warhead.Damage)' 2);  						var hitActors = world.FindUnitsInCircle(args.dest' (int)maxSpread);    						foreach (var victim in hitActors)  						{  							var damage = (int)GetDamageToInflict(victim' args' warhead' args.firepowerModifier);  							victim.InflictDamage(args.firedBy' damage' warhead);  						}  					} break;    				case DamageModel.PerCell:  					{  						foreach (var t in world.FindTilesInCircle(targetTile' warhead.Size[0]))  							foreach (var unit in world.FindUnits(t.ToPPos()' (t + new CVec(1'1)).ToPPos()))  								unit.InflictDamage(args.firedBy'  									(int)(warhead.Damage * warhead.EffectivenessAgainst(unit))' warhead);  					} break;  			}
Magic Number,OpenRA.Mods.RA,Combat,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Combat.cs,GetRecoil,The following statement contains a magic number: return (PVecFloat)Util.RotateVectorByFacing(localRecoil' facing' .7f);
Magic Number,OpenRA.Mods.RA,Combat,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Combat.cs,GetTurretPosition,The following statement contains a magic number: var numDirs = (ru != null) ? ru.anim.CurrentSequence.Facings : 8;
Magic Number,OpenRA.Mods.RA,Combat,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Combat.cs,GetTurretPosition,The following statement contains a magic number: var quantizedFacing = Util.QuantizeFacing(bodyFacing' numDirs) * (256 / numDirs);
Magic Number,OpenRA.Mods.RA,Combat,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Combat.cs,GetTurretPosition,The following statement contains a magic number: return (PVecFloat)Util.RotateVectorByFacing(turret.UnitSpacePosition.ToFloat2()' quantizedFacing' .7f)  				+ GetRecoil(self' turret.Recoil)  				+ (PVecFloat)turret.ScreenSpacePosition.ToFloat2();
Magic Number,OpenRA.Mods.RA,Combat,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Combat.cs,GetUnitspaceBarrelOffset,The following statement contains a magic number: return (PVecFloat)Util.RotateVectorByFacing(barrel.TurretSpaceOffset.ToFloat2()' turretFacing' .7f);
Magic Number,OpenRA.Mods.RA,Crate,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Crate.cs,Tick,The following statement contains a magic number: ++ticks >= Info.Lifetime * 25
Magic Number,OpenRA.Mods.RA,CrateDrop,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\CrateDrop.cs,Tick,The following statement contains a magic number: ticks = Info.SpawnInterval * 25;
Magic Number,OpenRA.Mods.RA,CrateDrop,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\CrateDrop.cs,SpawnCrate,The following statement contains a magic number: var pp = ChooseDropCell(self' inWater' 100);
Magic Number,OpenRA.Mods.RA,CrateSpawner,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\CrateSpawner.cs,Tick,The following statement contains a magic number: ticks = info.SpawnInterval * 25;
Magic Number,OpenRA.Mods.RA,CrateSpawner,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\CrateSpawner.cs,SpawnCrate,The following statement contains a magic number: var threshold = 100;
Magic Number,OpenRA.Mods.RA,GiveCashCrateAction,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Crates\GiveCashCrateAction.cs,Activate,The following statement contains a magic number: collector.World.AddFrameEndTask(w =>  			{  				var amount = (info as GiveCashCrateActionInfo).Amount;  				collector.Owner.PlayerActor.Trait<PlayerResources>().GiveCash(amount);    				if ((info as GiveCashCrateActionInfo).UseCashTick)  					w.Add(new CashTick(amount' 20' 1' collector.CenterLocation' collector.Owner.ColorRamp.GetColor(0)));  			});
Magic Number,OpenRA.Mods.RA,CrushableInfantry,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\CrushableInfantry.cs,WarnCrush,The following statement contains a magic number: self.World.SharedRandom.Next(100) <= Info.WarnProbability
Magic Number,OpenRA.Mods.RA,ContrailHistory,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs,ChooseColor,The following statement contains a magic number: var ownerColor = Color.FromArgb(255' self.Owner.ColorRamp.GetColor(0));
Magic Number,OpenRA.Mods.RA,ContrailHistory,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs,ChooseColor,The following statement contains a magic number: return Exts.ColorLerp(0.5f' ownerColor' Color.White);
Magic Number,OpenRA.Mods.RA,ContrailHistory,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs,Render,The following statement contains a magic number: Color trailEnd = Color.FromArgb(trailStart.A - 255 / TrailLength' trailStart.R' trailStart.G' trailStart.B);
Magic Number,OpenRA.Mods.RA,ContrailHistory,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Contrail.cs,Render,The following statement contains a magic number: trailEnd = Color.FromArgb(trailStart.A - 255 / positions.Count' trailStart.R' trailStart.G' trailStart.B);
Magic Number,OpenRA.Mods.RA,EmitInfantryOnSell,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\EmitInfantryOnSell.cs,Emit,The following statement contains a magic number: dudesValue /= 100;
Magic Number,OpenRA.Mods.RA,Explodes,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Explodes.cs,Killed,The following statement contains a magic number: self.World.SharedRandom.Next(100) > Info.Chance
Magic Number,OpenRA.Mods.RA,GainsExperience,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\GainsExperience.cs,GiveExperience,The following statement contains a magic number: self.World.AddFrameEndTask(w => w.Add(new CrateEffect(self' "levelup"' new int2(0'-24))));
Magic Number,OpenRA.Mods.RA,GainsExperience,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\GainsExperience.cs,InnerModifyRender,The following statement contains a magic number: yield return new Renderable(RankAnim.Image' new float2(bounds.Right - 6' bounds.Bottom - 8)'  				wr.Palette("effect")' self.CenterLocation.Y);
Magic Number,OpenRA.Mods.RA,GainsExperience,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\GainsExperience.cs,InnerModifyRender,The following statement contains a magic number: yield return new Renderable(RankAnim.Image' new float2(bounds.Right - 6' bounds.Bottom - 8)'  				wr.Palette("effect")' self.CenterLocation.Y);
Magic Number,OpenRA.Mods.RA,GivesBounty,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\GivesBounty.cs,GetMultiplier,The following statement contains a magic number: return 100;
Magic Number,OpenRA.Mods.RA,GivesBounty,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\GivesBounty.cs,GetMultiplier,The following statement contains a magic number: return (slevel > 0) ? slevel * info.LevelMod : 100;
Magic Number,OpenRA.Mods.RA,GivesBounty,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\GivesBounty.cs,Killed,The following statement contains a magic number: var bounty = cost * GetMultiplier(self) * info.Percentage / 10000;
Magic Number,OpenRA.Mods.RA,GivesBounty,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\GivesBounty.cs,Killed,The following statement contains a magic number: e.Attacker.World.AddFrameEndTask(w => w.Add(new CashTick(bounty' 20' 1' self.CenterLocation' e.Attacker.Owner.ColorRamp.GetColor(0))));
Magic Number,OpenRA.Mods.RA,Harvester,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Harvester.cs,ClosestProc,The following statement contains a magic number: var path = self.World.WorldActor.Trait<PathFinder>().FindPath(  				PathSearch.FromPoints(self.World' mi' self' refs.Values.Select(r => r.Location)' self.Location' false)  					.WithCustomCost((loc) =>  					{  						if (!refs.ContainsKey(loc)) return 0;    						int occupancy = refs[loc].Occupancy;  						// 4 harvesters clogs up the refinery's delivery location:  						if (occupancy >= 3) return int.MaxValue;    						// Prefer refineries with less occupancy (multiplier is to offset distance cost):  						return occupancy * 12;  					})  			);
Magic Number,OpenRA.Mods.RA,Harvester,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Harvester.cs,ClosestProc,The following statement contains a magic number: var path = self.World.WorldActor.Trait<PathFinder>().FindPath(  				PathSearch.FromPoints(self.World' mi' self' refs.Values.Select(r => r.Location)' self.Location' false)  					.WithCustomCost((loc) =>  					{  						if (!refs.ContainsKey(loc)) return 0;    						int occupancy = refs[loc].Occupancy;  						// 4 harvesters clogs up the refinery's delivery location:  						if (occupancy >= 3) return int.MaxValue;    						// Prefer refineries with less occupancy (multiplier is to offset distance cost):  						return occupancy * 12;  					})  			);
Magic Number,OpenRA.Mods.RA,Harvester,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Harvester.cs,UnblockRefinery,The following statement contains a magic number: var moveTo = harv.LastHarvestedCell ?? (deliveryLoc + new CVec(0' 4));
Magic Number,OpenRA.Mods.RA,Harvester,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Harvester.cs,OnNotifyBlockingMove,The following statement contains a magic number: var moveTo = mobile.NearestMoveableCell(cell' 2' 5);
Magic Number,OpenRA.Mods.RA,Harvester,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Harvester.cs,OnNotifyBlockingMove,The following statement contains a magic number: var moveTo = mobile.NearestMoveableCell(cell' 2' 5);
Magic Number,OpenRA.Mods.RA,Harvester,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Harvester.cs,TickIdle,The following statement contains a magic number: self.QueueActivity(new Wait(10));
Magic Number,OpenRA.Mods.RA,Harvester,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Harvester.cs,ResolveOrder,The following statement contains a magic number: loc = mobile.NearestCell(loc' p => mobile.CanEnterCell(p) && territory.ClaimResource(self' p)' 1' 6);
Magic Number,OpenRA.Mods.RA,Husk,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Husk.cs,Husk,The following statement contains a magic number: Facing = init.Contains<FacingInit>() ? init.Get<FacingInit'int>() : 128;
Magic Number,OpenRA.Mods.RA,Husk,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Husk.cs,Husk,The following statement contains a magic number: var length = (int)((to - PxPosition).Length * 3 / speed);
Magic Number,OpenRA.Mods.RA,InvisibleToEnemy,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\InvisibleToEnemy.cs,RadarColorOverride,The following statement contains a magic number: return Color.FromArgb(128' self.Owner.ColorRamp.GetColor(0));
Magic Number,OpenRA.Mods.RA,LightPaletteRotator,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs,Tick,The following statement contains a magic number: t += .5f;
Magic Number,OpenRA.Mods.RA,LightPaletteRotator,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs,AdjustPalette,The following statement contains a magic number: var rotate = (int)t % 18;
Magic Number,OpenRA.Mods.RA,LightPaletteRotator,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs,AdjustPalette,The following statement contains a magic number: rotate = 18 - rotate;
Magic Number,OpenRA.Mods.RA,LightPaletteRotator,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs,AdjustPalette,The following statement contains a magic number: rotate > 9
Magic Number,OpenRA.Mods.RA,LightPaletteRotator,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\LightPaletteRotator.cs,AdjustPalette,The following statement contains a magic number: pal.Value.SetColor(0x67' pal.Value.GetColor(230+rotate));
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,WorldLoaded,The following statement contains a magic number: ViewportOrigin = new CPos(b.Left + b.Width/2' b.Top + b.Height/2);
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,WorldLoaded,The following statement contains a magic number: ViewportOrigin = new CPos(b.Left + b.Width/2' b.Top + b.Height/2);
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,WorldLoaded,The following statement contains a magic number: Sound.SoundVolumeModifier = 0.25f;
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: var loc = new float2(  				(float)(System.Math.Sin((ticks + 45) % (360f * speed) * (Math.PI / 180) * 1f / speed) * 15f + ViewportOrigin.X)'  				(float)(System.Math.Cos((ticks + 45) % (360f * speed) * (Math.PI / 180) * 1f / speed) * 10f + ViewportOrigin.Y)  			);
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: var loc = new float2(  				(float)(System.Math.Sin((ticks + 45) % (360f * speed) * (Math.PI / 180) * 1f / speed) * 15f + ViewportOrigin.X)'  				(float)(System.Math.Cos((ticks + 45) % (360f * speed) * (Math.PI / 180) * 1f / speed) * 10f + ViewportOrigin.Y)  			);
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: var loc = new float2(  				(float)(System.Math.Sin((ticks + 45) % (360f * speed) * (Math.PI / 180) * 1f / speed) * 15f + ViewportOrigin.X)'  				(float)(System.Math.Cos((ticks + 45) % (360f * speed) * (Math.PI / 180) * 1f / speed) * 10f + ViewportOrigin.Y)  			);
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: var loc = new float2(  				(float)(System.Math.Sin((ticks + 45) % (360f * speed) * (Math.PI / 180) * 1f / speed) * 15f + ViewportOrigin.X)'  				(float)(System.Math.Cos((ticks + 45) % (360f * speed) * (Math.PI / 180) * 1f / speed) * 10f + ViewportOrigin.Y)  			);
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: var loc = new float2(  				(float)(System.Math.Sin((ticks + 45) % (360f * speed) * (Math.PI / 180) * 1f / speed) * 15f + ViewportOrigin.X)'  				(float)(System.Math.Cos((ticks + 45) % (360f * speed) * (Math.PI / 180) * 1f / speed) * 10f + ViewportOrigin.Y)  			);
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: var loc = new float2(  				(float)(System.Math.Sin((ticks + 45) % (360f * speed) * (Math.PI / 180) * 1f / speed) * 15f + ViewportOrigin.X)'  				(float)(System.Math.Cos((ticks + 45) % (360f * speed) * (Math.PI / 180) * 1f / speed) * 10f + ViewportOrigin.Y)  			);
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: var loc = new float2(  				(float)(System.Math.Sin((ticks + 45) % (360f * speed) * (Math.PI / 180) * 1f / speed) * 15f + ViewportOrigin.X)'  				(float)(System.Math.Cos((ticks + 45) % (360f * speed) * (Math.PI / 180) * 1f / speed) * 10f + ViewportOrigin.Y)  			);
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: var loc = new float2(  				(float)(System.Math.Sin((ticks + 45) % (360f * speed) * (Math.PI / 180) * 1f / speed) * 15f + ViewportOrigin.X)'  				(float)(System.Math.Cos((ticks + 45) % (360f * speed) * (Math.PI / 180) * 1f / speed) * 10f + ViewportOrigin.Y)  			);
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: Scripting.RASpecialPowers.Chronoshift(self.World' new List<Pair<Actor' CPos>>()  				{  					Pair.New(Actors["ca1"]' new CPos(90' 70))'  					Pair.New(Actors["ca2"]' new CPos(92' 71))  				}' Actors["pdox"]' -1' false);
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: Scripting.RASpecialPowers.Chronoshift(self.World' new List<Pair<Actor' CPos>>()  				{  					Pair.New(Actors["ca1"]' new CPos(90' 70))'  					Pair.New(Actors["ca2"]' new CPos(92' 71))  				}' Actors["pdox"]' -1' false);
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: Scripting.RASpecialPowers.Chronoshift(self.World' new List<Pair<Actor' CPos>>()  				{  					Pair.New(Actors["ca1"]' new CPos(90' 70))'  					Pair.New(Actors["ca2"]' new CPos(92' 71))  				}' Actors["pdox"]' -1' false);
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: Scripting.RASpecialPowers.Chronoshift(self.World' new List<Pair<Actor' CPos>>()  				{  					Pair.New(Actors["ca1"]' new CPos(90' 70))'  					Pair.New(Actors["ca2"]' new CPos(92' 71))  				}' Actors["pdox"]' -1' false);
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: ticks == 250
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: Actors["mslo1"].Trait<NukePower>().Activate(Actors["mslo1"]' new Order() { TargetLocation = new CPos(98' 52) });
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: Actors["mslo1"].Trait<NukePower>().Activate(Actors["mslo1"]' new Order() { TargetLocation = new CPos(98' 52) });
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: ticks == 100
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: Actors["mslo2"].Trait<NukePower>().Activate(Actors["mslo2"]' new Order() { TargetLocation = new CPos(95' 54) });
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: Actors["mslo2"].Trait<NukePower>().Activate(Actors["mslo2"]' new Order() { TargetLocation = new CPos(95' 54) });
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: ticks == 140
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: Actors["mslo3"].Trait<NukePower>().Activate(Actors["mslo3"]' new Order() { TargetLocation = new CPos(95' 49) });
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: Actors["mslo3"].Trait<NukePower>().Activate(Actors["mslo3"]' new Order() { TargetLocation = new CPos(95' 49) });
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: ticks == 180
Magic Number,OpenRA.Mods.RA,DefaultShellmapScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\DefaultShellmapScript.cs,Tick,The following statement contains a magic number: ticks == 430
Magic Number,OpenRA.Mods.RA,NukePaletteEffect,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\NukePaletteEffect.cs,AdjustPalette,The following statement contains a magic number: var white = Color.FromArgb(orig.A' 255' 255' 255);
Magic Number,OpenRA.Mods.RA,NukePaletteEffect,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\NukePaletteEffect.cs,AdjustPalette,The following statement contains a magic number: var white = Color.FromArgb(orig.A' 255' 255' 255);
Magic Number,OpenRA.Mods.RA,NukePaletteEffect,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\NukePaletteEffect.cs,AdjustPalette,The following statement contains a magic number: var white = Color.FromArgb(orig.A' 255' 255' 255);
Magic Number,OpenRA.Mods.RA,NukePaletteEffect,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\NukePaletteEffect.cs,AdjustPalette,The following statement contains a magic number: x < 256
Magic Number,OpenRA.Mods.RA,PaletteFromRGBA,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs,InitPalette,The following statement contains a magic number: var c = (uint)((info.A << 24) | (info.R << 16) | (info.G << 8) | info.B);
Magic Number,OpenRA.Mods.RA,PaletteFromRGBA,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs,InitPalette,The following statement contains a magic number: var c = (uint)((info.A << 24) | (info.R << 16) | (info.G << 8) | info.B);
Magic Number,OpenRA.Mods.RA,PaletteFromRGBA,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs,InitPalette,The following statement contains a magic number: var c = (uint)((info.A << 24) | (info.R << 16) | (info.G << 8) | info.B);
Magic Number,OpenRA.Mods.RA,PaletteFromRGBA,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\PaletteFromRGBA.cs,InitPalette,The following statement contains a magic number: wr.AddPalette(info.Name' new Palette(Exts.MakeArray(256' i => (i == 0) ? 0 : c))' info.AllowModifiers);
Magic Number,OpenRA.Mods.RA,PlayerStatistics,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Player\PlayerStatistics.cs,UpdateMapControl,The following statement contains a magic number: MapControl = world.Actors  				.Where(a => !a.IsDead() && a.IsInWorld && a.Owner == player && a.HasTrait<RevealsShroud>())  				.SelectMany(a => world.FindTilesInCircle(a.Location' a.Trait<RevealsShroud>().RevealRange.Clamp(0' 50)))  				.Distinct()  				.Count() / total;
Magic Number,OpenRA.Mods.RA,PlayerStatistics,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Player\PlayerStatistics.cs,UpdateEarnedThisMinute,The following statement contains a magic number: EarnedSamples.Count > 100
Magic Number,OpenRA.Mods.RA,PlayerStatistics,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Player\PlayerStatistics.cs,Tick,The following statement contains a magic number: self.World.FrameNumber % 1500 == 1
Magic Number,OpenRA.Mods.RA,PlayerStatistics,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Player\PlayerStatistics.cs,Tick,The following statement contains a magic number: self.World.FrameNumber % 250 == 0
Magic Number,OpenRA.Mods.RA,PlaceBuilding,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Player\PlaceBuilding.cs,ResolveOrder,The following statement contains a magic number: self.World.AddFrameEndTask(w =>  				{  					var prevItems = GetNumBuildables(self.Owner);    					// Find the queue with the target actor  					var queue = w.ActorsWithTrait<ProductionQueue>()  						.Where(p => p.Actor.Owner == self.Owner &&  							   		 p.Trait.CurrentItem() != null &&  									 p.Trait.CurrentItem().Item == order.TargetString &&  									 p.Trait.CurrentItem().RemainingTime == 0)  						.Select(p => p.Trait)  						.FirstOrDefault();    					if (queue == null)  						return;    					var unit = Rules.Info[order.TargetString];  					var buildingInfo = unit.Traits.Get<BuildingInfo>();    					if (order.OrderString == "LineBuild")  					{  						bool playSounds = true;  						foreach (var t in BuildingUtils.GetLineBuildCells(w' order.TargetLocation' order.TargetString' buildingInfo))  						{  							var building = w.CreateActor(order.TargetString' new TypeDictionary  							{  								new LocationInit( t )'  								new OwnerInit( order.Player )'  							});    							if (playSounds)  								foreach (var s in buildingInfo.BuildSounds)  									Sound.PlayToPlayer(order.Player' s' building.CenterLocation);  							playSounds = false;  						}  					}  					else  					{  						if (!self.World.CanPlaceBuilding(order.TargetString' buildingInfo' order.TargetLocation' null))  						{  							return;  						}    						var building = w.CreateActor(order.TargetString' new TypeDictionary  						{  							new LocationInit( order.TargetLocation )'  							new OwnerInit( order.Player )'  						});  						foreach (var s in buildingInfo.BuildSounds)  							Sound.PlayToPlayer(order.Player' s' building.CenterLocation);  					}    					PlayBuildAnim( self' unit );    					queue.FinishProduction();    					if (GetNumBuildables(self.Owner) > prevItems)  						w.Add(new DelayedAction(10'  							() => Sound.PlayNotification(order.Player' "Speech"' "NewOptions"' order.Player.Country.Race)));  				});
Magic Number,OpenRA.Mods.RA,Production,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Production.cs,DoProduction,The following statement contains a magic number: var length = speed > 0 ? (int)((to - spawn).Length * 3 / speed) : 0;
Magic Number,OpenRA.Mods.RA,RALoadScreen,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RALoadScreen.cs,Init,The following statement contains a magic number: Logo = new Sprite(s' new Rectangle(0'0'256'256)' TextureChannel.Alpha);
Magic Number,OpenRA.Mods.RA,RALoadScreen,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RALoadScreen.cs,Init,The following statement contains a magic number: Logo = new Sprite(s' new Rectangle(0'0'256'256)' TextureChannel.Alpha);
Magic Number,OpenRA.Mods.RA,RALoadScreen,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RALoadScreen.cs,Init,The following statement contains a magic number: Stripe = new Sprite(s' new Rectangle(256'0'256'256)' TextureChannel.Alpha);
Magic Number,OpenRA.Mods.RA,RALoadScreen,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RALoadScreen.cs,Init,The following statement contains a magic number: Stripe = new Sprite(s' new Rectangle(256'0'256'256)' TextureChannel.Alpha);
Magic Number,OpenRA.Mods.RA,RALoadScreen,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RALoadScreen.cs,Init,The following statement contains a magic number: Stripe = new Sprite(s' new Rectangle(256'0'256'256)' TextureChannel.Alpha);
Magic Number,OpenRA.Mods.RA,RALoadScreen,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RALoadScreen.cs,Init,The following statement contains a magic number: StripeRect = new Rectangle(0' Renderer.Resolution.Height/2 - 128' Renderer.Resolution.Width' 256);
Magic Number,OpenRA.Mods.RA,RALoadScreen,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RALoadScreen.cs,Init,The following statement contains a magic number: StripeRect = new Rectangle(0' Renderer.Resolution.Height/2 - 128' Renderer.Resolution.Width' 256);
Magic Number,OpenRA.Mods.RA,RALoadScreen,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RALoadScreen.cs,Init,The following statement contains a magic number: StripeRect = new Rectangle(0' Renderer.Resolution.Height/2 - 128' Renderer.Resolution.Width' 256);
Magic Number,OpenRA.Mods.RA,RALoadScreen,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RALoadScreen.cs,Init,The following statement contains a magic number: LogoPos =  new float2(Renderer.Resolution.Width/2 - 128' Renderer.Resolution.Height/2 - 128);
Magic Number,OpenRA.Mods.RA,RALoadScreen,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RALoadScreen.cs,Init,The following statement contains a magic number: LogoPos =  new float2(Renderer.Resolution.Width/2 - 128' Renderer.Resolution.Height/2 - 128);
Magic Number,OpenRA.Mods.RA,RALoadScreen,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RALoadScreen.cs,Init,The following statement contains a magic number: LogoPos =  new float2(Renderer.Resolution.Width/2 - 128' Renderer.Resolution.Height/2 - 128);
Magic Number,OpenRA.Mods.RA,RALoadScreen,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RALoadScreen.cs,Init,The following statement contains a magic number: LogoPos =  new float2(Renderer.Resolution.Width/2 - 128' Renderer.Resolution.Height/2 - 128);
Magic Number,OpenRA.Mods.RA,RALoadScreen,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RALoadScreen.cs,Display,The following statement contains a magic number: lastLoadScreen.ElapsedTime() < 0.5
Magic Number,OpenRA.Mods.RA,RALoadScreen,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RALoadScreen.cs,Display,The following statement contains a magic number: r.Fonts["Bold"].DrawText(text' new float2(Renderer.Resolution.Width - textSize.X - 20' Renderer.Resolution.Height - textSize.Y - 20)' Color.White);
Magic Number,OpenRA.Mods.RA,RALoadScreen,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RALoadScreen.cs,Display,The following statement contains a magic number: r.Fonts["Bold"].DrawText(text' new float2(Renderer.Resolution.Width - textSize.X - 20' Renderer.Resolution.Height - textSize.Y - 20)' Color.White);
Magic Number,OpenRA.Mods.RA,RenderDetectionCircle,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RenderDetectionCircle.cs,RenderBeforeWorld,The following statement contains a magic number: wr.DrawRangeCircle(  				Color.FromArgb(128' Color.LimeGreen)'  				self.CenterLocation.ToFloat2()' self.Info.Traits.Get<DetectCloakedInfo>().Range);
Magic Number,OpenRA.Mods.RA,RenderRangeCircleInfo,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RenderRangeCircle.cs,Render,The following statement contains a magic number: wr.DrawRangeCircle(  				Color.FromArgb(128' Color.Yellow)'  				centerLocation.ToFloat2()'  				ai.Traits.Get<AttackBaseInfo>().GetMaximumRange());
Magic Number,OpenRA.Mods.RA,RenderRangeCircle,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RenderRangeCircle.cs,RenderBeforeWorld,The following statement contains a magic number: wr.DrawRangeCircle(  				Color.FromArgb(128' Color.Yellow)'  				self.CenterLocation.ToFloat2()' self.Trait<AttackBase>().GetMaximumRange());
Magic Number,OpenRA.Mods.RA,ScaredyCat,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ScaredyCat.cs,Attacking,The following statement contains a magic number: self.World.SharedRandom.Next(100 / Info.AttackPanicChance) == 0
Magic Number,OpenRA.Mods.RA,SeedsResource,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\SeedsResource.cs,RandomWalk,The following statement contains a magic number: var dx = r.Next(-1' 2);
Magic Number,OpenRA.Mods.RA,SeedsResource,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\SeedsResource.cs,RandomWalk,The following statement contains a magic number: var dy = r.Next(-1' 2);
Magic Number,OpenRA.Mods.RA,ShroudPalette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ShroudPalette.cs,InitPalette,The following statement contains a magic number: var c = new[] {  				Color.Transparent' Color.Green'  				Color.Blue' Color.Yellow'  				Color.Black'  				Color.FromArgb(128'0'0'0)'  				Color.Transparent'  				Color.Transparent  			};
Magic Number,OpenRA.Mods.RA,ShroudPalette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ShroudPalette.cs,InitPalette,The following statement contains a magic number: wr.AddPalette(info.Name' new Palette(Exts.MakeArray(256' i => (uint)c[i % 8].ToArgb()))' false);
Magic Number,OpenRA.Mods.RA,ShroudPalette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ShroudPalette.cs,InitPalette,The following statement contains a magic number: wr.AddPalette(info.Name' new Palette(Exts.MakeArray(256' i => (uint)c[i % 8].ToArgb()))' false);
Magic Number,OpenRA.Mods.RA,ChronoshiftPower,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\SupportPowers\ChronoshiftPower.cs,Activate,The following statement contains a magic number: cs.Teleport(target' targetCell' cpi.Duration * 25' cpi.KillCargo' self);
Magic Number,OpenRA.Mods.RA,GpsWatcher,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\SupportPowers\GpsPower.cs,Launch,The following statement contains a magic number: atek.World.Add(new DelayedAction((info as GpsPowerInfo).RevealDelay * 25'  					() =>  					{  						Launched = true;  						RefreshGps(atek);  					}));
Magic Number,OpenRA.Mods.RA,IronCurtainPower,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\SupportPowers\IronCurtainPower.cs,Activate,The following statement contains a magic number: target.Trait<IronCurtainable>().Activate(target' (Info as IronCurtainPowerInfo).Duration * 25);
Magic Number,OpenRA.Mods.RA,SpyPlanePower,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\SupportPowers\SpyPlanePower.cs,Activate,The following statement contains a magic number: plane.QueueActivity(new CallFunc(() => plane.World.AddFrameEndTask( w =>  				{  					var camera = w.CreateActor("camera"' new TypeDictionary  					{  						new LocationInit( order.TargetLocation )'  						new OwnerInit( self.Owner )'  					});    					camera.QueueActivity(new Wait(25 * (Info as SpyPlanePowerInfo).RevealTime));  					camera.QueueActivity(new RemoveSelf());  				})));
Magic Number,OpenRA.Mods.RA,SupportPowerInstance,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerManager.cs,Tick,The following statement contains a magic number: RemainingTime = 25;
Magic Number,OpenRA.Mods.RA,SupportPowerInstance,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\SupportPowers\SupportPowerManager.cs,Tick,The following statement contains a magic number: Manager.devMode.FastCharge && RemainingTime > 25
Magic Number,OpenRA.Mods.RA,TakeCover,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\TakeCover.cs,ApplyBarrelOffset,The following statement contains a magic number: b.ScreenSpaceOffset += sign * new PVecInt(Info.BarrelOffset[2]' Info.BarrelOffset[3]);
Magic Number,OpenRA.Mods.RA,TakeCover,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\TakeCover.cs,ApplyBarrelOffset,The following statement contains a magic number: b.ScreenSpaceOffset += sign * new PVecInt(Info.BarrelOffset[2]' Info.BarrelOffset[3]);
Magic Number,OpenRA.Mods.RA,TeslaInstantKills,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\TeslaInstantKills.cs,GetDamageModifier,The following statement contains a magic number: return 1000f;
Magic Number,OpenRA.Mods.RA,TeslaInstantKills,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\TeslaInstantKills.cs,GetDamageModifier,The following statement contains a magic number: warhead != null && warhead.InfDeath == 6
Magic Number,OpenRA.Mods.RA,ThrowsParticle,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ThrowsParticle.cs,ThrowsParticle,The following statement contains a magic number: dfacing = Game.CosmeticRandom.Gauss1D(2) * info.ROT;
Magic Number,OpenRA.Mods.RA,WaterPaletteRotation,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\WaterPaletteRotation.cs,Tick,The following statement contains a magic number: t += .25f;
Magic Number,OpenRA.Mods.RA,WaterPaletteRotation,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\WaterPaletteRotation.cs,AdjustPalette,The following statement contains a magic number: var rotate = (int)t % 7;
Magic Number,OpenRA.Mods.RA,WaterPaletteRotation,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\WaterPaletteRotation.cs,AdjustPalette,The following statement contains a magic number: temp[(rotate + i) % 7] = colors[world.TileSet.WaterPaletteRotationBase + i];
Magic Number,OpenRA.Mods.RA,WaterPaletteRotation,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\WaterPaletteRotation.cs,AdjustPalette,The following statement contains a magic number: i < 7
Magic Number,OpenRA.Mods.RA,WaterPaletteRotation,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\WaterPaletteRotation.cs,AdjustPalette,The following statement contains a magic number: i < 7
Magic Number,OpenRA.Mods.RA,Weapon,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Weapon.cs,Weapon,The following statement contains a magic number: barrels.Add(new Barrel  				{  					TurretSpaceOffset = new PVecInt(localOffset[5 * i]' localOffset[5 * i + 1])'  					ScreenSpaceOffset = new PVecInt(localOffset[5 * i + 2]' localOffset[5 * i + 3])'  					Facing = localOffset[5 * i + 4]  				});
Magic Number,OpenRA.Mods.RA,Weapon,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Weapon.cs,Weapon,The following statement contains a magic number: barrels.Add(new Barrel  				{  					TurretSpaceOffset = new PVecInt(localOffset[5 * i]' localOffset[5 * i + 1])'  					ScreenSpaceOffset = new PVecInt(localOffset[5 * i + 2]' localOffset[5 * i + 3])'  					Facing = localOffset[5 * i + 4]  				});
Magic Number,OpenRA.Mods.RA,Weapon,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Weapon.cs,Weapon,The following statement contains a magic number: barrels.Add(new Barrel  				{  					TurretSpaceOffset = new PVecInt(localOffset[5 * i]' localOffset[5 * i + 1])'  					ScreenSpaceOffset = new PVecInt(localOffset[5 * i + 2]' localOffset[5 * i + 3])'  					Facing = localOffset[5 * i + 4]  				});
Magic Number,OpenRA.Mods.RA,Weapon,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Weapon.cs,Weapon,The following statement contains a magic number: barrels.Add(new Barrel  				{  					TurretSpaceOffset = new PVecInt(localOffset[5 * i]' localOffset[5 * i + 1])'  					ScreenSpaceOffset = new PVecInt(localOffset[5 * i + 2]' localOffset[5 * i + 3])'  					Facing = localOffset[5 * i + 4]  				});
Magic Number,OpenRA.Mods.RA,Weapon,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Weapon.cs,Weapon,The following statement contains a magic number: barrels.Add(new Barrel  				{  					TurretSpaceOffset = new PVecInt(localOffset[5 * i]' localOffset[5 * i + 1])'  					ScreenSpaceOffset = new PVecInt(localOffset[5 * i + 2]' localOffset[5 * i + 3])'  					Facing = localOffset[5 * i + 4]  				});
Magic Number,OpenRA.Mods.RA,Weapon,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Weapon.cs,Weapon,The following statement contains a magic number: barrels.Add(new Barrel  				{  					TurretSpaceOffset = new PVecInt(localOffset[5 * i]' localOffset[5 * i + 1])'  					ScreenSpaceOffset = new PVecInt(localOffset[5 * i + 2]' localOffset[5 * i + 3])'  					Facing = localOffset[5 * i + 4]  				});
Magic Number,OpenRA.Mods.RA,Weapon,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Weapon.cs,Weapon,The following statement contains a magic number: barrels.Add(new Barrel  				{  					TurretSpaceOffset = new PVecInt(localOffset[5 * i]' localOffset[5 * i + 1])'  					ScreenSpaceOffset = new PVecInt(localOffset[5 * i + 2]' localOffset[5 * i + 3])'  					Facing = localOffset[5 * i + 4]  				});
Magic Number,OpenRA.Mods.RA,Weapon,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Weapon.cs,Weapon,The following statement contains a magic number: barrels.Add(new Barrel  				{  					TurretSpaceOffset = new PVecInt(localOffset[5 * i]' localOffset[5 * i + 1])'  					ScreenSpaceOffset = new PVecInt(localOffset[5 * i + 2]' localOffset[5 * i + 3])'  					Facing = localOffset[5 * i + 4]  				});
Magic Number,OpenRA.Mods.RA,Weapon,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Weapon.cs,Weapon,The following statement contains a magic number: i < localOffset.Length / 5
Magic Number,OpenRA.Mods.RA,DebugOverlay,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\World\DebugOverlay.cs,WorldLoaded,The following statement contains a magic number: this.layers = new Dictionary<Player' int[']>(8);
Magic Number,OpenRA.Mods.RA,DebugOverlay,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\World\DebugOverlay.cs,AddLayer,The following statement contains a magic number: layer[p.First.X' p.First.Y] = Math.Min(128' (layer[p.First.X' p.First.Y]) + ((maxWeight - p.Second) * 64 / maxWeight));
Magic Number,OpenRA.Mods.RA,DebugOverlay,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\World\DebugOverlay.cs,AddLayer,The following statement contains a magic number: layer[p.First.X' p.First.Y] = Math.Min(128' (layer[p.First.X' p.First.Y]) + ((maxWeight - p.Second) * 64 / maxWeight));
Magic Number,OpenRA.Mods.RA,DebugOverlay,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\World\DebugOverlay.cs,Render,The following statement contains a magic number: refreshTick = world.FrameNumber + 20;
Magic Number,OpenRA.Mods.RA,DebugOverlay,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\World\DebugOverlay.cs,Render,The following statement contains a magic number: var w = Math.Max(0' Math.Min(layer[i' j]' 128));
Magic Number,OpenRA.Mods.RA,DebugOverlay,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\World\DebugOverlay.cs,Render,The following statement contains a magic number: layer[i' j] = layer[i' j] * 5 / 6;
Magic Number,OpenRA.Mods.RA,DebugOverlay,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\World\DebugOverlay.cs,Render,The following statement contains a magic number: layer[i' j] = layer[i' j] * 5 / 6;
Magic Number,OpenRA.Mods.RA,ResourceClaimLayer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\World\ResourceClaimLayer.cs,WorldLoaded,The following statement contains a magic number: claimByCell = new Dictionary<CPos' ResourceClaim>(32);
Magic Number,OpenRA.Mods.RA,ResourceClaimLayer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\World\ResourceClaimLayer.cs,WorldLoaded,The following statement contains a magic number: claimByActor = new Dictionary<Actor' ResourceClaim>(32);
Magic Number,OpenRA.Mods.RA,SmudgeLayer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\World\SmudgeLayer.cs,AddSmudge,The following statement contains a magic number: Game.CosmeticRandom.Next(0'100) <= Info.SmokePercentage
Magic Number,OpenRA.Mods.RA,BaseAttackNotifier,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Player\BaseAttackNotifier.cs,Damaged,The following statement contains a magic number: self.World.FrameNumber - lastAttackTime > info.NotifyInterval * 25
Magic Number,OpenRA.Mods.RA,HarvesterAttackNotifier,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Player\HarvesterAttackNotifier.cs,Damaged,The following statement contains a magic number: self.World.FrameNumber - lastAttackTime > info.NotifyInterval * 25
Magic Number,OpenRA.Mods.RA,InfiltrateForCash,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\InfiltrateForCash.cs,OnInfiltrate,The following statement contains a magic number: var toTake = (targetResources.Cash + targetResources.Ore) * info.Percentage / 100;
Magic Number,OpenRA.Mods.RA,InfiltrateForCash,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\InfiltrateForCash.cs,OnInfiltrate,The following statement contains a magic number: self.World.AddFrameEndTask(w => w.Add(new CashTick(toGive' 30' 2' self.CenterLocation'  			                                                   infiltrator.Owner.ColorRamp.GetColor(0))));
Magic Number,OpenRA.Mods.RA,InfiltrateForCash,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\InfiltrateForCash.cs,OnInfiltrate,The following statement contains a magic number: self.World.AddFrameEndTask(w => w.Add(new CashTick(toGive' 30' 2' self.CenterLocation'  			                                                   infiltrator.Owner.ColorRamp.GetColor(0))));
Magic Number,OpenRA.Mods.RA,RenderShroudCircleInfo,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RenderShroudCircle.cs,Render,The following statement contains a magic number: wr.DrawRangeCircle(  				Color.FromArgb(128' Color.Cyan)'  				centerLocation.ToFloat2()'  				ai.Traits.Get<CreatesShroudInfo>().Range);
Magic Number,OpenRA.Mods.RA,RenderShroudCircle,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\RenderShroudCircle.cs,RenderBeforeWorld,The following statement contains a magic number: wr.DrawRangeCircle(  				Color.FromArgb(128' Color.Cyan)'  				self.CenterLocation.ToFloat2()' self.Info.Traits.Get<CreatesShroudInfo>().Range);
Magic Number,OpenRA.Mods.RA,CloakPaletteEffect,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\CloakPaletteEffect.cs,AdjustPalette,The following statement contains a magic number: var k = (i+j) % 16 + 0xb0;
Magic Number,OpenRA.Mods.RA,CloakPaletteEffect,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\CloakPaletteEffect.cs,Tick,The following statement contains a magic number: t += 0.25f;
Magic Number,OpenRA.Mods.RA,CloakPaletteEffect,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\CloakPaletteEffect.cs,Tick,The following statement contains a magic number: t >= 256
Magic Number,OpenRA.Mods.RA,FogPalette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\FogPalette.cs,InitPalette,The following statement contains a magic number: var c = new[] {  				Color.Transparent' Color.Green'  				Color.Blue' Color.Yellow'  				Color.FromArgb(128'0'0'0)'  				Color.FromArgb(128'0'0'0)'  				Color.FromArgb(128'0'0'0)'  				Color.FromArgb(64'0'0'0)  			};
Magic Number,OpenRA.Mods.RA,FogPalette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\FogPalette.cs,InitPalette,The following statement contains a magic number: var c = new[] {  				Color.Transparent' Color.Green'  				Color.Blue' Color.Yellow'  				Color.FromArgb(128'0'0'0)'  				Color.FromArgb(128'0'0'0)'  				Color.FromArgb(128'0'0'0)'  				Color.FromArgb(64'0'0'0)  			};
Magic Number,OpenRA.Mods.RA,FogPalette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\FogPalette.cs,InitPalette,The following statement contains a magic number: var c = new[] {  				Color.Transparent' Color.Green'  				Color.Blue' Color.Yellow'  				Color.FromArgb(128'0'0'0)'  				Color.FromArgb(128'0'0'0)'  				Color.FromArgb(128'0'0'0)'  				Color.FromArgb(64'0'0'0)  			};
Magic Number,OpenRA.Mods.RA,FogPalette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\FogPalette.cs,InitPalette,The following statement contains a magic number: var c = new[] {  				Color.Transparent' Color.Green'  				Color.Blue' Color.Yellow'  				Color.FromArgb(128'0'0'0)'  				Color.FromArgb(128'0'0'0)'  				Color.FromArgb(128'0'0'0)'  				Color.FromArgb(64'0'0'0)  			};
Magic Number,OpenRA.Mods.RA,FogPalette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\FogPalette.cs,InitPalette,The following statement contains a magic number: wr.AddPalette(info.Name' new Palette(Exts.MakeArray(256' i => (uint)c[i % 8].ToArgb()))' false);
Magic Number,OpenRA.Mods.RA,FogPalette,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\FogPalette.cs,InitPalette,The following statement contains a magic number: wr.AddPalette(info.Name' new Palette(Exts.MakeArray(256' i => (uint)c[i % 8].ToArgb()))' false);
Magic Number,OpenRA.Mods.RA.Activities,CaptureActor,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\CaptureActor.cs,Tick,The following statement contains a magic number: int damage = (int)(0.25 * health.MaxHP);
Magic Number,OpenRA.Mods.RA.Activities,CaptureActor,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\CaptureActor.cs,Tick,The following statement contains a magic number: (nearest - mobile.toCell).LengthSquared > 2
Magic Number,OpenRA.Mods.RA.Activities,DeliverResources,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\DeliverResources.cs,Tick,The following statement contains a magic number: return Util.SequenceActivities(new Wait(25)' this);
Magic Number,OpenRA.Mods.RA.Activities,DeliverResources,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\DeliverResources.cs,Tick,The following statement contains a magic number: return Util.SequenceActivities(new Wait(10)' this);
Magic Number,OpenRA.Mods.RA.Activities,DonateSupplies,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\DonateSupplies.cs,Tick,The following statement contains a magic number: self.World.AddFrameEndTask(w => w.Add(new CashTick(payload' 30' 2' target.CenterLocation' target.Owner.ColorRamp.GetColor(0))));
Magic Number,OpenRA.Mods.RA.Activities,DonateSupplies,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\DonateSupplies.cs,Tick,The following statement contains a magic number: self.World.AddFrameEndTask(w => w.Add(new CashTick(payload' 30' 2' target.CenterLocation' target.Owner.ColorRamp.GetColor(0))));
Magic Number,OpenRA.Mods.RA.Activities,Enter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\Enter.cs,Tick,The following statement contains a magic number: ( nearest - mobile.toCell ).LengthSquared > 2
Magic Number,OpenRA.Mods.RA.Activities,EnterTransport,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\EnterTransport.cs,Tick,The following statement contains a magic number: (transport.Location - self.Location).LengthSquared > 2
Magic Number,OpenRA.Mods.RA.Activities,FindResources,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\FindResources.cs,Tick,The following statement contains a magic number: var path = self.World.WorldActor.Trait<PathFinder>().FindPath(  				PathSearch.Search(self.World' mobileInfo' self' true)  					.WithCustomCost(loc =>  					{  						// Avoid enemy territory:  						int safetycost = (  							// TODO: calculate weapons ranges of units and factor those in instead of hard-coding 8.  							from u in self.World.FindUnitsInCircle(loc.ToPPos()' Game.CellSize * 8)  							where !u.Destroyed  							where self.Owner.Stances[u.Owner] == Stance.Enemy  							select Math.Max(0' 64 - (loc - u.Location).LengthSquared)  						).Sum();    						return safetycost;  					})  					.WithHeuristic(loc =>  					{  						// Avoid this cell:  						if (avoidCell.HasValue && loc == avoidCell.Value) return 1;    						// Don't harvest out of range:  						int distSquared = (loc - searchFromLoc).LengthSquared;  						if (distSquared > searchRadiusSquared)  							return int.MaxValue;    						// Get the resource at this location:  						var resType = resLayer.GetResource(loc);    						if (resType == null) return 1;  						// Can the harvester collect this kind of resource?  						if (!harvInfo.Resources.Contains(resType.info.Name)) return 1;    						if (territory != null)  						{  							// Another harvester has claimed this resource:  							ResourceClaim claim;  							if (territory.IsClaimedByAnyoneElse(self' loc' out claim)) return 1;  						}    						return 0;  					})  					.FromPoint(self.Location)  			);
Magic Number,OpenRA.Mods.RA.Activities,FindResources,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\FindResources.cs,Tick,The following statement contains a magic number: var path = self.World.WorldActor.Trait<PathFinder>().FindPath(  				PathSearch.Search(self.World' mobileInfo' self' true)  					.WithCustomCost(loc =>  					{  						// Avoid enemy territory:  						int safetycost = (  							// TODO: calculate weapons ranges of units and factor those in instead of hard-coding 8.  							from u in self.World.FindUnitsInCircle(loc.ToPPos()' Game.CellSize * 8)  							where !u.Destroyed  							where self.Owner.Stances[u.Owner] == Stance.Enemy  							select Math.Max(0' 64 - (loc - u.Location).LengthSquared)  						).Sum();    						return safetycost;  					})  					.WithHeuristic(loc =>  					{  						// Avoid this cell:  						if (avoidCell.HasValue && loc == avoidCell.Value) return 1;    						// Don't harvest out of range:  						int distSquared = (loc - searchFromLoc).LengthSquared;  						if (distSquared > searchRadiusSquared)  							return int.MaxValue;    						// Get the resource at this location:  						var resType = resLayer.GetResource(loc);    						if (resType == null) return 1;  						// Can the harvester collect this kind of resource?  						if (!harvInfo.Resources.Contains(resType.info.Name)) return 1;    						if (territory != null)  						{  							// Another harvester has claimed this resource:  							ResourceClaim claim;  							if (territory.IsClaimedByAnyoneElse(self' loc' out claim)) return 1;  						}    						return 0;  					})  					.FromPoint(self.Location)  			);
Magic Number,OpenRA.Mods.RA.Activities,FindResources,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\FindResources.cs,Tick,The following statement contains a magic number: return Util.SequenceActivities(new Wait(25)' new FindResources());
Magic Number,OpenRA.Mods.RA.Activities,LayMines,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\LayMines.cs,Tick,The following statement contains a magic number: return new Wait(20);
Magic Number,OpenRA.Mods.RA.Activities,LayMines,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\LayMines.cs,Tick,The following statement contains a magic number: return Util.SequenceActivities( new Wait(20)' this );
Magic Number,OpenRA.Mods.RA.Activities,LayMines,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\LayMines.cs,Tick,The following statement contains a magic number: return new Wait(20);
Magic Number,OpenRA.Mods.RA.Activities,Repair,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\Repair.cs,Tick,The following statement contains a magic number: var cost = Math.Max(1' (hpToRepair * unitCost * repairsUnits.ValuePercentage) / (health.MaxHP * 100));
Magic Number,OpenRA.Mods.RA.Activities,Sell,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\Sell.cs,Tick,The following statement contains a magic number: var refund = (cost * si.RefundPercent * (h == null ? 1 : h.HP)) / (100 * (h == null ? 1 : h.MaxHP));
Magic Number,OpenRA.Mods.RA.Activities,Sell,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\Sell.cs,Tick,The following statement contains a magic number: self.World.AddFrameEndTask(  					w => w.Add(new CashTick(refund' 30' 2'  						self.CenterLocation'  						self.Owner.ColorRamp.GetColor(0))));
Magic Number,OpenRA.Mods.RA.Activities,Sell,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\Sell.cs,Tick,The following statement contains a magic number: self.World.AddFrameEndTask(  					w => w.Add(new CashTick(refund' 30' 2'  						self.CenterLocation'  						self.Owner.ColorRamp.GetColor(0))));
Magic Number,OpenRA.Mods.RA.Activities,Transform,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\Transform.cs,Tick,The following statement contains a magic number: self.World.AddFrameEndTask(w =>  			{  				foreach (var nt in self.TraitsImplementing<INotifyTransform>())  					nt.OnTransform(self);    				var selected = w.Selection.Contains(self);    				self.Destroy();  				foreach (var s in Sounds)  					Sound.PlayToPlayer(self.Owner' s' self.CenterLocation);    				var init = new TypeDictionary  				{  					new LocationInit( self.Location + Offset )'  					new OwnerInit( self.Owner )'  					new FacingInit( Facing )'  				};    				if (SkipMakeAnims) init.Add(new SkipMakeAnimsInit());    				var health = self.TraitOrDefault<Health>();  				if (health != null)  				{  					var newHP = (ForceHealthPercentage > 0)  						? ForceHealthPercentage / 100f  						: (float)health.HP / health.MaxHP;    					init.Add( new HealthInit(newHP) );  				}    				var cargo = self.TraitOrDefault<Cargo>();  				if (cargo != null)  					init.Add( new CargoInit( cargo.Passengers.ToArray() ) );    				var a = w.CreateActor( ToActor' init );    				foreach (var nt in self.TraitsImplementing<INotifyTransformed>())  					nt.OnTransformed(a);    				if (selected)  					w.Selection.Add(w' a);  			});
Magic Number,OpenRA.Mods.RA.Activities,UnloadCargo,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\UnloadCargo.cs,ChooseExitTile,The following statement contains a magic number: i < 2
Magic Number,OpenRA.Mods.RA.Activities,UnloadCargo,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\UnloadCargo.cs,ChooseRallyPoint,The following statement contains a magic number: i < 2
Magic Number,OpenRA.Mods.RA.Activities,UnloadCargo,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\UnloadCargo.cs,Tick,The following statement contains a magic number: self.World.AddFrameEndTask(w =>  			{  				if (actor.Destroyed) return;    				var mobile = actor.Trait<Mobile>();  				mobile.Facing = Util.GetFacing( (exitPx - currentPx).ToInt2()' mobile.Facing );  				mobile.SetPosition(actor' exitTile.Value);  				mobile.AdjustPxPosition(actor' currentPx);  				var speed = mobile.MovementSpeedForCell(actor' exitTile.Value);  				var length = speed > 0 ? ((int)(exitPx - currentPx).Length * 3 / speed) : 0;    				w.Add(actor);  				actor.CancelActivity();  				actor.QueueActivity(new Drag(currentPx' exitPx' length));  				actor.QueueActivity(mobile.MoveTo(exitTile.Value' 0));    				var rallyPoint = ChooseRallyPoint(actor).Value;  				actor.QueueActivity(mobile.MoveTo(rallyPoint' 0));  				actor.SetTargetLine(Target.FromCell(rallyPoint)' Color.Green' false);  			});
Magic Number,OpenRA.Mods.RA.Air,Aircraft,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs,TickMove,The following statement contains a magic number: var rawspeed = speed * 7 / (32 * PSubPos.PerPx);
Magic Number,OpenRA.Mods.RA.Air,Aircraft,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\Aircraft.cs,TickMove,The following statement contains a magic number: var rawspeed = speed * 7 / (32 * PSubPos.PerPx);
Magic Number,OpenRA.Mods.RA.Air,FallToEarth,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\FallsToEarth.cs,FallToEarth,The following statement contains a magic number: acceleration = self.World.SharedRandom.Next(2) * 2 - 1;
Magic Number,OpenRA.Mods.RA.Air,FallToEarth,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\FallsToEarth.cs,FallToEarth,The following statement contains a magic number: acceleration = self.World.SharedRandom.Next(2) * 2 - 1;
Magic Number,OpenRA.Mods.RA.Air,FallToEarth,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\FallsToEarth.cs,Tick,The following statement contains a magic number: aircraft.Facing = (aircraft.Facing + spin) % 256;
Magic Number,OpenRA.Mods.RA.Air,Fly,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\Fly.cs,Tick,The following statement contains a magic number: d.LengthSquared < 50
Magic Number,OpenRA.Mods.RA.Air,FlyAttack,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\FlyAttack.cs,Tick,The following statement contains a magic number: inner = Util.SequenceActivities(  					Fly.ToPx(Target.CenterLocation)'  					new FlyTimed(50));
Magic Number,OpenRA.Mods.RA.Air,FlyCircle,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\FlyCircle.cs,Tick,The following statement contains a magic number: var desiredFacing = aircraft.Facing + 64;
Magic Number,OpenRA.Mods.RA.Air,HeliFly,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\HeliFly.cs,Tick,The following statement contains a magic number: Math.Abs(dist.X) < 2 && Math.Abs(dist.Y) < 2
Magic Number,OpenRA.Mods.RA.Air,HeliFly,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\HeliFly.cs,Tick,The following statement contains a magic number: Math.Abs(dist.X) < 2 && Math.Abs(dist.Y) < 2
Magic Number,OpenRA.Mods.RA.Air,Helicopter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\Helicopter.cs,GetRepulseForce,The following statement contains a magic number: return Util.SubPxVector[self.World.SharedRandom.Next(255)];
Magic Number,OpenRA.Mods.RA.Air,Helicopter,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\Helicopter.cs,GetRepulseForce,The following statement contains a magic number: return (5 * d.ToPSubVec()) / d.LengthSquared;
Magic Number,OpenRA.Mods.RA.Air,Land,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\Land.cs,Tick,The following statement contains a magic number: d.LengthSquared < 50
Magic Number,OpenRA.Mods.RA.Air,ReturnToBase,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\ReturnToBase.cs,Calculate,The following statement contains a magic number: var speed = .2f * aircraft.MovementSpeed;
Magic Number,OpenRA.Mods.RA.Air,ReturnToBase,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\ReturnToBase.cs,Calculate,The following statement contains a magic number: var turnRadius = (128f / self.Info.Traits.Get<AircraftInfo>().ROT) * speed / (float)Math.PI;
Magic Number,OpenRA.Mods.RA.Air,ReturnToBase,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Air\ReturnToBase.cs,Calculate,The following statement contains a magic number: var fwd = -float2.FromAngle(aircraft.Facing / 128f * (float)Math.PI);
Magic Number,OpenRA.Mods.RA.Buildings,BibLayer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Buildings\BibLayer.cs,DoBib,The following statement contains a magic number: i < 2 * size
Magic Number,OpenRA.Mods.RA.Buildings,Building,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Buildings\Building.cs,Building,The following statement contains a magic number: pxPosition = (PPos) (( 2 * topLeft.ToInt2() + Info.Dimensions ) * Game.CellSize / 2);
Magic Number,OpenRA.Mods.RA.Buildings,Building,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Buildings\Building.cs,Building,The following statement contains a magic number: pxPosition = (PPos) (( 2 * topLeft.ToInt2() + Info.Dimensions ) * Game.CellSize / 2);
Magic Number,OpenRA.Mods.RA.Buildings,CustomBuildTimeValueExts,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Buildings\CustomBuildTimeValue.cs,GetBuildTime,The following statement contains a magic number: var time = cost  							* (25 * 60) /* frames per min */  							/ 1000;
Magic Number,OpenRA.Mods.RA.Buildings,CustomBuildTimeValueExts,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Buildings\CustomBuildTimeValue.cs,GetBuildTime,The following statement contains a magic number: var time = cost  							* (25 * 60) /* frames per min */  							/ 1000;
Magic Number,OpenRA.Mods.RA.Buildings,CustomBuildTimeValueExts,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Buildings\CustomBuildTimeValue.cs,GetBuildTime,The following statement contains a magic number: var time = cost  							* (25 * 60) /* frames per min */  							/ 1000;
Magic Number,OpenRA.Mods.RA.Buildings,FootprintUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Buildings\FootprintUtils.cs,AdjustForBuildingSize,The following statement contains a magic number: return new CVec(dim.X / 2' dim.Y > 1 ? (dim.Y + 1) / 2 : 0);
Magic Number,OpenRA.Mods.RA.Buildings,FootprintUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Buildings\FootprintUtils.cs,AdjustForBuildingSize,The following statement contains a magic number: return new CVec(dim.X / 2' dim.Y > 1 ? (dim.Y + 1) / 2 : 0);
Magic Number,OpenRA.Mods.RA.Buildings,PowerManager,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Buildings\PowerManager.cs,UpdateTotals,The following statement contains a magic number: totalProvided = 1000000;
Magic Number,OpenRA.Mods.RA.Buildings,RepairableBuilding,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Buildings\RepairableBuilding.cs,Tick,The following statement contains a magic number: var cost = Math.Max(1' (hpToRepair * Info.RepairPercent * buildingValue) / (Health.MaxHP * 100));
Magic Number,OpenRA.Mods.RA.Buildings,BuildingUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Buildings\Util.cs,GetLineBuildCells,The following statement contains a magic number: d < 4
Magic Number,OpenRA.Mods.RA.Crates,GiveUnitCrateAction,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Crates\GiveUnitCrateAction.cs,GetSuitableCells,The following statement contains a magic number: i < 2
Magic Number,OpenRA.Mods.RA.Effects,Bullet,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Bullet.cs,Bullet,The following statement contains a magic number: Args.dest += (PVecInt) (info.Inaccuracy * factor * args.firedBy.World.SharedRandom.Gauss2D(2)).ToInt2();
Magic Number,OpenRA.Mods.RA.Effects,Bullet,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Bullet.cs,GetAltitude,The following statement contains a magic number: return (Args.dest - Args.src).Length * Info.Angle * 4 * at * (1 - at);
Magic Number,OpenRA.Mods.RA.Effects,Bullet,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Bullet.cs,GetEffectiveFacing,The following statement contains a magic number: var attitude = Info.Angle * (1 - 2 * at);
Magic Number,OpenRA.Mods.RA.Effects,Bullet,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Bullet.cs,GetEffectiveFacing,The following statement contains a magic number: var u = (rawFacing % 128) / 128f;
Magic Number,OpenRA.Mods.RA.Effects,Bullet,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Bullet.cs,GetEffectiveFacing,The following statement contains a magic number: var u = (rawFacing % 128) / 128f;
Magic Number,OpenRA.Mods.RA.Effects,Bullet,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Bullet.cs,GetEffectiveFacing,The following statement contains a magic number: var scale = 512 * u * (1 - u);
Magic Number,OpenRA.Mods.RA.Effects,Bullet,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Bullet.cs,GetEffectiveFacing,The following statement contains a magic number: return (int)(rawFacing < 128  				? rawFacing - scale * attitude  				: rawFacing + scale * attitude);
Magic Number,OpenRA.Mods.RA.Effects,Bullet,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Bullet.cs,Tick,The following statement contains a magic number: t += 40;
Magic Number,OpenRA.Mods.RA.Effects,Bullet,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Bullet.cs,Render,The following statement contains a magic number: yield return new Renderable(anim.Image' pos - .5f * anim.Image.size' wr.Palette("shadow")' (int)pos.Y);
Magic Number,OpenRA.Mods.RA.Effects,Bullet,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Bullet.cs,Render,The following statement contains a magic number: yield return new Renderable(anim.Image' highPos - .5f * anim.Image.size' wr.Palette("effect")' (int)pos.Y);
Magic Number,OpenRA.Mods.RA.Effects,CashTick,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\CashTick.cs,CashTick,The following statement contains a magic number: offset = 0.5f*font.Measure(s).ToFloat2();
Magic Number,OpenRA.Mods.RA.Effects,Corpse,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Corpse.cs,Render,The following statement contains a magic number: yield return new Renderable(anim.Image' pos - .5f * anim.Image.size' wr.Palette(paletteName)' (int)pos.Y);
Magic Number,OpenRA.Mods.RA.Effects,CrateEffect,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\CrateEffect.cs,Render,The following statement contains a magic number: yield return new Renderable(anim.Image'  					a.CenterLocation.ToFloat2() - .5f * anim.Image.size + offset'  				    wr.Palette("effect")' (int)a.CenterLocation.Y);
Magic Number,OpenRA.Mods.RA.Effects,Explosion,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Explosion.cs,Render,The following statement contains a magic number: yield return new Renderable(anim.Image'  				pos.ToFloat2() - .5f * anim.Image.size - new int2(0'altitude)'  				wr.Palette("effect")' (int)pos.Y - altitude);
Magic Number,OpenRA.Mods.RA.Effects,GpsDot,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\GpsDot.cs,Render,The following statement contains a magic number: yield return new Renderable(anim.Image' p.ToFloat2() - 0.5f * anim.Image.size' palette' p.Y)  				.WithScale(1.5f);
Magic Number,OpenRA.Mods.RA.Effects,GpsDot,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\GpsDot.cs,Render,The following statement contains a magic number: yield return new Renderable(anim.Image' p.ToFloat2() - 0.5f * anim.Image.size' palette' p.Y)  				.WithScale(1.5f);
Magic Number,OpenRA.Mods.RA.Effects,GravityBomb,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\GravityBomb.cs,Render,The following statement contains a magic number: var pos = Args.dest.ToInt2() - new int2(0' altitude) - .5f * anim.Image.size;
Magic Number,OpenRA.Mods.RA.Effects,LaserZap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs,Render,The following statement contains a magic number: yield return new Renderable(explosion.Image' args.dest.ToFloat2() - .5f * explosion.Image.size'  				                            wr.Palette("effect")' (int)args.dest.Y);
Magic Number,OpenRA.Mods.RA.Effects,LaserZap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs,Render,The following statement contains a magic number: var rc = Color.FromArgb((info.BeamDuration - ticks)*255/info.BeamDuration' color);
Magic Number,OpenRA.Mods.RA.Effects,LaserZap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\LaserZap.cs,Render,The following statement contains a magic number: wlr.LineWidth = info.BeamRadius * 2;
Magic Number,OpenRA.Mods.RA.Effects,Missile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Missile.cs,Missile,The following statement contains a magic number: offset = (PVecInt)(info.Inaccuracy * args.firedBy.World.SharedRandom.Gauss2D(2)).ToInt2();
Magic Number,OpenRA.Mods.RA.Effects,Missile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Missile.cs,Tick,The following statement contains a magic number: t += 40;
Magic Number,OpenRA.Mods.RA.Effects,Missile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Missile.cs,Tick,The following statement contains a magic number: var dir = (-float2.FromAngle((float)(Facing / 128f * Math.PI))).ToPSubVec();
Magic Number,OpenRA.Mods.RA.Effects,Missile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Missile.cs,Tick,The following statement contains a magic number: move = (move * 3) / 2;
Magic Number,OpenRA.Mods.RA.Effects,Missile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Missile.cs,Tick,The following statement contains a magic number: move = (move * 3) / 2;
Magic Number,OpenRA.Mods.RA.Effects,Missile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Missile.cs,Tick,The following statement contains a magic number: move = move / 5;
Magic Number,OpenRA.Mods.RA.Effects,Missile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Missile.cs,Tick,The following statement contains a magic number: var sp = ((SubPxPosition - (move * 3) / 2)).ToPPos() - new PVecInt(0' Altitude);
Magic Number,OpenRA.Mods.RA.Effects,Missile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Missile.cs,Tick,The following statement contains a magic number: var sp = ((SubPxPosition - (move * 3) / 2)).ToPPos() - new PVecInt(0' Altitude);
Magic Number,OpenRA.Mods.RA.Effects,Missile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Missile.cs,Tick,The following statement contains a magic number: Info.RangeLimit != 0 && t > Info.RangeLimit * 40
Magic Number,OpenRA.Mods.RA.Effects,Missile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Missile.cs,Explode,The following statement contains a magic number: t > Info.Arm * 40
Magic Number,OpenRA.Mods.RA.Effects,Missile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Missile.cs,Render,The following statement contains a magic number: yield return new Renderable(anim.Image' PxPosition.ToFloat2() - 0.5f * anim.Image.size - new float2(0' Altitude)'  					wr.Palette(Args.weapon.Underwater ? "shadow" : "effect")' PxPosition.Y);
Magic Number,OpenRA.Mods.RA.Effects,NukeLaunch,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\NukeLaunch.cs,Tick,The following statement contains a magic number: altitude += 10;
Magic Number,OpenRA.Mods.RA.Effects,NukeLaunch,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\NukeLaunch.cs,Explode,The following statement contains a magic number: world.WorldActor.Trait<ScreenShaker>().AddEffect(20' pos.ToFloat2()' 5);
Magic Number,OpenRA.Mods.RA.Effects,NukeLaunch,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\NukeLaunch.cs,Explode,The following statement contains a magic number: world.WorldActor.Trait<ScreenShaker>().AddEffect(20' pos.ToFloat2()' 5);
Magic Number,OpenRA.Mods.RA.Effects,NukeLaunch,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\NukeLaunch.cs,Render,The following statement contains a magic number: yield return new Renderable(anim.Image' pos.ToFloat2() - 0.5f * anim.Image.size - new float2(0' altitude)'  				wr.Palette("effect")' (int)pos.Y);
Magic Number,OpenRA.Mods.RA.Effects,Parachute,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Parachute.cs,Render,The following statement contains a magic number: yield return c.WithPos(location.ToFloat2() - .5f * c.Sprite.size).WithPalette(wr.Palette("shadow")).WithZOffset(0);
Magic Number,OpenRA.Mods.RA.Effects,Parachute,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Parachute.cs,Render,The following statement contains a magic number: yield return c.WithZOffset(2);
Magic Number,OpenRA.Mods.RA.Effects,Parachute,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Parachute.cs,Render,The following statement contains a magic number: yield return new Renderable(paraAnim.Image' pos - .5f * paraAnim.Image.size + offset' rc.First().Palette' 3);
Magic Number,OpenRA.Mods.RA.Effects,Parachute,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Parachute.cs,Render,The following statement contains a magic number: yield return new Renderable(paraAnim.Image' pos - .5f * paraAnim.Image.size + offset' rc.First().Palette' 3);
Magic Number,OpenRA.Mods.RA.Effects,PowerdownIndicator,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\PowerdownIndicator.cs,Render,The following statement contains a magic number: yield return new Renderable(anim.Image'	a.CenterLocation.ToFloat2() - .5f * anim.Image.size'  					wr.Palette("chrome")' (int)a.CenterLocation.Y);
Magic Number,OpenRA.Mods.RA.Effects,RallyPoint,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\RallyPoint.cs,Render,The following statement contains a magic number: yield return new Renderable(circles.Image'  					pos.ToFloat2() - .5f * circles.Image.size'  					palette' (int)pos.Y);
Magic Number,OpenRA.Mods.RA.Effects,RallyPoint,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\RallyPoint.cs,Render,The following statement contains a magic number: yield return new Renderable(flag.Image'  					pos.ToFloat2() + new float2(-1'-17)'  					palette' (int)pos.Y);
Magic Number,OpenRA.Mods.RA.Effects,RepairIndicator,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\RepairIndicator.cs,Render,The following statement contains a magic number: yield return new Renderable(anim.Image'  					building.CenterLocation.ToFloat2() - .5f * anim.Image.size'  					wr.Palette(palettePrefix+player.InternalName)' (int)building.CenterLocation.Y);
Magic Number,OpenRA.Mods.RA.Effects,SatelliteLaunch,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\SatelliteLaunch.cs,SatelliteLaunch,The following statement contains a magic number: pos = a.CenterLocation.ToFloat2() - .5f * doors.Image.size + doorOffset;
Magic Number,OpenRA.Mods.RA.Effects,SatelliteLaunch,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\SatelliteLaunch.cs,Tick,The following statement contains a magic number: ++frame == 19
Magic Number,OpenRA.Mods.RA.Effects,Smoke,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\Smoke.cs,Render,The following statement contains a magic number: yield return new Renderable(anim.Image' pos.ToFloat2() - .5f * anim.Image.size'  				wr.Palette("effect")' (int)pos.Y);
Magic Number,OpenRA.Mods.RA.Effects,TeslaZap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\TeslaZap.cs,DrawZapWandering,The following statement contains a magic number: var p1 = from.ToFloat2() + (1 / 3f) * dist.ToFloat2() + Game.CosmeticRandom.Gauss1D(1) * .2f * dist.Length * norm;
Magic Number,OpenRA.Mods.RA.Effects,TeslaZap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\TeslaZap.cs,DrawZapWandering,The following statement contains a magic number: var p1 = from.ToFloat2() + (1 / 3f) * dist.ToFloat2() + Game.CosmeticRandom.Gauss1D(1) * .2f * dist.Length * norm;
Magic Number,OpenRA.Mods.RA.Effects,TeslaZap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\TeslaZap.cs,DrawZapWandering,The following statement contains a magic number: var p2 = from.ToFloat2() + (2 / 3f) * dist.ToFloat2() + Game.CosmeticRandom.Gauss1D(1) * .2f * dist.Length * norm;
Magic Number,OpenRA.Mods.RA.Effects,TeslaZap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\TeslaZap.cs,DrawZapWandering,The following statement contains a magic number: var p2 = from.ToFloat2() + (2 / 3f) * dist.ToFloat2() + Game.CosmeticRandom.Gauss1D(1) * .2f * dist.Length * norm;
Magic Number,OpenRA.Mods.RA.Effects,TeslaZap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\TeslaZap.cs,DrawZapWandering,The following statement contains a magic number: var p2 = from.ToFloat2() + (2 / 3f) * dist.ToFloat2() + Game.CosmeticRandom.Gauss1D(1) * .2f * dist.Length * norm;
Magic Number,OpenRA.Mods.RA.Effects,TeslaZap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\TeslaZap.cs,DrawZapWandering,The following statement contains a magic number: Game.CosmeticRandom.Next(2) != 0
Magic Number,OpenRA.Mods.RA.Effects,TeslaZap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\TeslaZap.cs,DrawZap,The following statement contains a magic number: rs.Add(new Renderable(s.GetSprite(step[4])' z + new float2(step[2]' step[3])'  					wr.Palette("effect")' (int)from.Y));
Magic Number,OpenRA.Mods.RA.Effects,TeslaZap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\TeslaZap.cs,DrawZap,The following statement contains a magic number: rs.Add(new Renderable(s.GetSprite(step[4])' z + new float2(step[2]' step[3])'  					wr.Palette("effect")' (int)from.Y));
Magic Number,OpenRA.Mods.RA.Effects,TeslaZap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\TeslaZap.cs,DrawZap,The following statement contains a magic number: rs.Add(new Renderable(s.GetSprite(step[4])' z + new float2(step[2]' step[3])'  					wr.Palette("effect")' (int)from.Y));
Magic Number,OpenRA.Mods.RA.Effects,TeslaZap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\TeslaZap.cs,DrawZap,The following statement contains a magic number: rs.Count >= 1000
Magic Number,OpenRA.Mods.RA.Effects,TeslaZap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\TeslaZap.cs,DrawZap,The following statement contains a magic number: (to - z).X > 5 || (to - z).X < -5 || (to - z).Y > 5 || (to - z).Y < -5
Magic Number,OpenRA.Mods.RA.Effects,TeslaZap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\TeslaZap.cs,DrawZap,The following statement contains a magic number: (to - z).X > 5 || (to - z).X < -5 || (to - z).Y > 5 || (to - z).Y < -5
Magic Number,OpenRA.Mods.RA.Effects,TeslaZap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\TeslaZap.cs,DrawZap,The following statement contains a magic number: (to - z).X > 5 || (to - z).X < -5 || (to - z).Y > 5 || (to - z).Y < -5
Magic Number,OpenRA.Mods.RA.Effects,TeslaZap,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Effects\TeslaZap.cs,DrawZap,The following statement contains a magic number: (to - z).X > 5 || (to - z).X < -5 || (to - z).Y > 5 || (to - z).Y < -5
Magic Number,OpenRA.Mods.RA.Missions,Allies01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs,Tick,The following statement contains a magic number: world.FrameNumber % 1000 == 0
Magic Number,OpenRA.Mods.RA.Missions,Allies01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs,Tick,The following statement contains a magic number: world.FrameNumber >= currentAttackWaveFrameNumber + 400
Magic Number,OpenRA.Mods.RA.Missions,Allies01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs,SpawnSovietUnits,The following statement contains a magic number: var spawnActor = world.SharedRandom.Next(2) == 0 ? attackEntryPoint1 : attackEntryPoint2;
Magic Number,OpenRA.Mods.RA.Missions,Allies01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs,ManageSovietUnits,The following statement contains a magic number: innerActivity = new Move.Move(Target.FromActor(einstein)' 3);
Magic Number,OpenRA.Mods.RA.Missions,Allies01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs,SendPatrol,The following statement contains a magic number: world.CreateActor(Patrol[i]' new TypeDictionary  				{  					new OwnerInit(soviets)'  					new LocationInit(insertionLZ.Location + new CVec(-1 + i' 10 + i * 2))  				})  				.QueueActivity(new Move.Move(insertionLZ.Location));
Magic Number,OpenRA.Mods.RA.Missions,Allies01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs,SendPatrol,The following statement contains a magic number: world.CreateActor(Patrol[i]' new TypeDictionary  				{  					new OwnerInit(soviets)'  					new LocationInit(insertionLZ.Location + new CVec(-1 + i' 10 + i * 2))  				})  				.QueueActivity(new Move.Move(insertionLZ.Location));
Magic Number,OpenRA.Mods.RA.Missions,Allies01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs,SpawnEinsteinAtLab,The following statement contains a magic number: einstein.QueueActivity(new Move.Move(lab.Location - new CVec(0' 2)));
Magic Number,OpenRA.Mods.RA.Missions,Allies01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs,SendShips,The following statement contains a magic number: world.CreateActor(Ships[i]' new TypeDictionary  				{  					new OwnerInit(allies)'  					new LocationInit(shipSpawnPoint.Location + new CVec(i * 2' 0))  				})  				.QueueActivity(new Move.Move(shipMovePoint.Location + new CVec(i * 4' 0)));
Magic Number,OpenRA.Mods.RA.Missions,Allies01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies01Script.cs,SendShips,The following statement contains a magic number: world.CreateActor(Ships[i]' new TypeDictionary  				{  					new OwnerInit(allies)'  					new LocationInit(shipSpawnPoint.Location + new CVec(i * 2' 0))  				})  				.QueueActivity(new Move.Move(shipMovePoint.Location + new CVec(i * 4' 0)));
Magic Number,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,Tick,The following statement contains a magic number: world.FrameNumber % 50 == 1 && chinookHusk.IsInWorld
Magic Number,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,Tick,The following statement contains a magic number: MissionUtils.Paradrop(world' soviets' Badger2Passengers' badgerEntryPoint1.Location + new CVec(3' 0)' badgerDropPoint2.Location);
Magic Number,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,Tick,The following statement contains a magic number: MissionUtils.Paradrop(world' soviets' Badger3Passengers' badgerEntryPoint1.Location + new CVec(6' 0)' badgerDropPoint3.Location);
Magic Number,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,Tick,The following statement contains a magic number: MissionUtils.Parabomb(world' soviets' badgerEntryPoint2.Location + new CVec(0' 3)' parabombPoint2.Location);
Magic Number,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,Tick,The following statement contains a magic number: var alliedUnitsNearYakPoint = world.FindAliveCombatantActorsInCircle(yakAttackPoint.CenterLocation' 10)  						.Where(a => a.Owner != soviets && a.HasTrait<IMove>() && a != tanya && a != einstein && a != engineer);
Magic Number,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,Tick,The following statement contains a magic number: currentReinforcement > -1 && currentReinforcement < Reinforcements.Length && world.FrameNumber % 25 == 0
Magic Number,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,Tick,The following statement contains a magic number: world.FrameNumber % 25 == 0
Magic Number,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,ManageSovietUnits,The following statement contains a magic number: var units = world.FindAliveCombatantActorsInCircle(sovietRallyPoint.CenterLocation' 10)  				.Where(u => u.IsIdle && u.HasTrait<Mobile>() && u.HasTrait<AttackBase>() && u.Owner == soviets)  				.Except(world.WorldActor.Trait<SpawnMapActors>().Actors.Values);
Magic Number,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,InitializeSovietFactories,The following statement contains a magic number: sbrp.nearEnough = swrp.nearEnough = 6;
Magic Number,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,WorldLoaded,The following statement contains a magic number: allies1.PlayerActor.Trait<PlayerResources>().Cash = 5000;
Magic Number,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,WorldLoaded,The following statement contains a magic number: soviets.PlayerActor.Trait<PlayerResources>().Cash = 1000;
Magic Number,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,WorldLoaded,The following statement contains a magic number: shroud.Explore(w' sam1.Location' 2);
Magic Number,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,WorldLoaded,The following statement contains a magic number: shroud.Explore(w' sam2.Location' 2);
Magic Number,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,WorldLoaded,The following statement contains a magic number: shroud.Explore(w' sam3.Location' 2);
Magic Number,OpenRA.Mods.RA.Missions,Allies02Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies02Script.cs,WorldLoaded,The following statement contains a magic number: shroud.Explore(w' sam4.Location' 2);
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,Tick,The following statement contains a magic number: attackAtFrameIncrement = Math.Max(attackAtFrameIncrement - 5' minAttackAtFrame);
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,Tick,The following statement contains a magic number: world.FrameNumber % 25 == 0
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,Tick,The following statement contains a magic number: world.FrameNumber % 25 == 0
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,Tick,The following statement contains a magic number: world.FrameNumber % 25 == 0
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,ManageSovietAircraft,The following statement contains a magic number: var enemy = FirstUnshroudedOrDefault(enemies.OrderBy(u => (aircraft.CenterLocation - u.CenterLocation).LengthSquared)' world' 10);
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,SpawnSovietUnits,The following statement contains a magic number: unit.QueueActivity(new AttackMove.AttackMoveActivity(unit' new Move.Move(rallyPoint' 3)));
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,AttackNearestAlliedActor,The following statement contains a magic number: var enemy = FirstUnshroudedOrDefault(enemies.OrderBy(u => (self.CenterLocation - u.CenterLocation).LengthSquared)' world' 10);
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,AttackNearestAlliedActor,The following statement contains a magic number: self.QueueActivity(new AttackMove.AttackMoveActivity(self' new Attack(Target.FromActor(enemy)' 3)));
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,ManageSovietUnits,The following statement contains a magic number: var units = world.FindAliveCombatantActorsInCircle(Util.CenterOfCell(rallyPoint)' 10)  					.Where(u => u.IsIdle && u.HasTrait<Mobile>() && u.HasTrait<AttackBase>() && u.Owner == soviets);
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,ManageSovietUnits,The following statement contains a magic number: var scatteredUnits = world.Actors.Where(u => u.IsInWorld && !u.IsDead() && u.HasTrait<Mobile>() && u.IsIdle && u.Owner == soviets)  				.Except(world.WorldActor.Trait<SpawnMapActors>().Actors.Values)  				.Except(sovietRallyPoints.SelectMany(rp => world.FindAliveCombatantActorsInCircle(Util.CenterOfCell(rp)' 10)));
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The following statement contains a magic number: res.Cash = 10000;
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The following statement contains a magic number: attackAtFrame = attackAtFrameIncrement = difficulty == "Hard" || difficulty == "Normal" ? 500 : 600;
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The following statement contains a magic number: attackAtFrame = attackAtFrameIncrement = difficulty == "Hard" || difficulty == "Normal" ? 500 : 600;
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The following statement contains a magic number: minAttackAtFrame = difficulty == "Hard" || difficulty == "Normal" ? 100 : 150;
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The following statement contains a magic number: minAttackAtFrame = difficulty == "Hard" || difficulty == "Normal" ? 100 : 150;
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The following statement contains a magic number: unitsEvacuatedThreshold = difficulty == "Hard" ? 200 : difficulty == "Normal" ? 100 : 50;
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The following statement contains a magic number: unitsEvacuatedThreshold = difficulty == "Hard" ? 200 : difficulty == "Normal" ? 100 : 50;
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The following statement contains a magic number: unitsEvacuatedThreshold = difficulty == "Hard" ? 200 : difficulty == "Normal" ? 100 : 50;
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The following statement contains a magic number: maxSovietYaks = difficulty == "Hard" ? 4 : difficulty == "Normal" ? 2 : 0;
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The following statement contains a magic number: maxSovietYaks = difficulty == "Hard" ? 4 : difficulty == "Normal" ? 2 : 0;
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The following statement contains a magic number: sovietParadrops = difficulty == "Hard" ? 40 : difficulty == "Normal" ? 20 : 0;
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The following statement contains a magic number: sovietParadrops = difficulty == "Hard" ? 40 : difficulty == "Normal" ? 20 : 0;
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The following statement contains a magic number: sovietParadropTicks = difficulty == "Hard" ? 1500 * 17 : 1500 * 20;
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The following statement contains a magic number: sovietParadropTicks = difficulty == "Hard" ? 1500 * 17 : 1500 * 20;
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The following statement contains a magic number: sovietParadropTicks = difficulty == "Hard" ? 1500 * 17 : 1500 * 20;
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The following statement contains a magic number: sovietParadropTicks = difficulty == "Hard" ? 1500 * 17 : 1500 * 20;
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The following statement contains a magic number: sovietUnits2Ticks = difficulty == "Hard" ? 1500 * 12 : 1500 * 15;
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The following statement contains a magic number: sovietUnits2Ticks = difficulty == "Hard" ? 1500 * 12 : 1500 * 15;
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The following statement contains a magic number: sovietUnits2Ticks = difficulty == "Hard" ? 1500 * 12 : 1500 * 15;
Magic Number,OpenRA.Mods.RA.Missions,Allies03Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies03Script.cs,WorldLoaded,The following statement contains a magic number: sovietUnits2Ticks = difficulty == "Hard" ? 1500 * 12 : 1500 * 15;
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,Tick,The following statement contains a magic number: world.FrameNumber == frameInfiltrated + 100
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,Tick,The following statement contains a magic number: world.FrameNumber == frameInfiltrated + 200
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,Tick,The following statement contains a magic number: world.FrameNumber >= frameInfiltrated + 200
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,Tick,The following statement contains a magic number: bridgeTank.QueueActivity(new Attack(Target.FromPos(bridge.CenterLocation)' 4));
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,Tick,The following statement contains a magic number: world.FrameNumber == frameInfiltrated + 1500 * 12 && !bridgeTank.IsDead() && bridgeTank.IsInWorld && !bridge.IsDead()
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,Tick,The following statement contains a magic number: world.FrameNumber == frameInfiltrated + 1500 * 12 && !bridgeTank.IsDead() && bridgeTank.IsInWorld && !bridge.IsDead()
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,Tick,The following statement contains a magic number: attacker.QueueActivity(new AttackMove.AttackMoveActivity(attacker' new Move.Move(reinforcementsUnloadPoint.Location + new CVec(10' -15)' 3)));
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,Tick,The following statement contains a magic number: attacker.QueueActivity(new AttackMove.AttackMoveActivity(attacker' new Move.Move(reinforcementsUnloadPoint.Location + new CVec(10' -15)' 3)));
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,Tick,The following statement contains a magic number: attacker.QueueActivity(new AttackMove.AttackMoveActivity(attacker' new Move.Move(reinforcementsUnloadPoint.Location + new CVec(10' -15)' 3)));
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,Tick,The following statement contains a magic number: world.FrameNumber == frameInfiltrated + 1500 * 6
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,Tick,The following statement contains a magic number: world.FrameNumber == frameInfiltrated + 1500 * 6
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,Tick,The following statement contains a magic number: attacker.QueueActivity(new AttackMove.AttackMoveActivity(attacker' new Attack(Target.FromActor(enemy)' 3)));
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,Tick,The following statement contains a magic number: nextCivilianMove += world.SharedRandom.Next(1' 75);
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,SendReinforcements,The following statement contains a magic number: lst.QueueActivity(new Wait(10));
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,SendReinforcements,The following statement contains a magic number: lst.QueueActivity(new CallFunc(() =>  			{  				allies1.PlayerActor.Trait<PlayerResources>().GiveCash(allies1 == allies2 ? 5000 : 2500);  				if (allies1 != allies2)  					allies2.PlayerActor.Trait<PlayerResources>().GiveCash(2500);  			}));
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,SendReinforcements,The following statement contains a magic number: lst.QueueActivity(new CallFunc(() =>  			{  				allies1.PlayerActor.Trait<PlayerResources>().GiveCash(allies1 == allies2 ? 5000 : 2500);  				if (allies1 != allies2)  					allies2.PlayerActor.Trait<PlayerResources>().GiveCash(2500);  			}));
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,SendReinforcements,The following statement contains a magic number: lst.QueueActivity(new CallFunc(() =>  			{  				allies1.PlayerActor.Trait<PlayerResources>().GiveCash(allies1 == allies2 ? 5000 : 2500);  				if (allies1 != allies2)  					allies2.PlayerActor.Trait<PlayerResources>().GiveCash(2500);  			}));
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,SendReinforcements,The following statement contains a magic number: lst.AddTrait(new TransformedAction(self =>  			{  				self.QueueActivity(new Wait(10));  				self.QueueActivity(new Move.Move(reinforcementsEntryPoint.Location));  				self.QueueActivity(new RemoveSelf());  			}));
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,InsertSpies,The following statement contains a magic number: lst.AddTrait(new TransformedAction(self =>  			{  				self.QueueActivity(new Wait(10));  				self.QueueActivity(new Move.Move(spyReinforcementsExitPoint.Location));  				self.QueueActivity(new RemoveSelf());  			}));
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,InsertSpies,The following statement contains a magic number: lst.QueueActivity(new Wait(10));
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,WorldLoaded,The following statement contains a magic number: destroyBaseTicks = difficulty == "Hard" ? 1500 * 25 : difficulty == "Normal" ? 1500 * 28 : 1500 * 31;
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,WorldLoaded,The following statement contains a magic number: destroyBaseTicks = difficulty == "Hard" ? 1500 * 25 : difficulty == "Normal" ? 1500 * 28 : 1500 * 31;
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,WorldLoaded,The following statement contains a magic number: destroyBaseTicks = difficulty == "Hard" ? 1500 * 25 : difficulty == "Normal" ? 1500 * 28 : 1500 * 31;
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,WorldLoaded,The following statement contains a magic number: destroyBaseTicks = difficulty == "Hard" ? 1500 * 25 : difficulty == "Normal" ? 1500 * 28 : 1500 * 31;
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,WorldLoaded,The following statement contains a magic number: destroyBaseTicks = difficulty == "Hard" ? 1500 * 25 : difficulty == "Normal" ? 1500 * 28 : 1500 * 31;
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,WorldLoaded,The following statement contains a magic number: destroyBaseTicks = difficulty == "Hard" ? 1500 * 25 : difficulty == "Normal" ? 1500 * 28 : 1500 * 31;
Magic Number,OpenRA.Mods.RA.Missions,Allies04Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,WorldLoaded,The following statement contains a magic number: patrols = new List<Patrol>  			{  				new Patrol(world' new[] { "e1"' "e1"' "e1"' "e1"' "e1" }' soviets' patrolPoints1' 0)'  				new Patrol(world' new[] { "e1"' "dog.patrol"' "dog.patrol" }' soviets' patrolPoints2' 2)'  				new Patrol(world' new[] { "e1"' "dog.patrol"' "dog.patrol" }' soviets' patrolPoints4' 0)'  				new Patrol(world' new[] { "e1"' "dog.patrol"' "dog.patrol" }' soviets' patrolPoints5' 0)'  			};
Magic Number,OpenRA.Mods.RA.Missions,Patrol,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,DoPatrol,The following statement contains a magic number: actor.QueueActivity(new Wait(world.SharedRandom.Next(50' 75)));
Magic Number,OpenRA.Mods.RA.Missions,Patrol,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,DoPatrol,The following statement contains a magic number: actor.QueueActivity(new Wait(world.SharedRandom.Next(50' 75)));
Magic Number,OpenRA.Mods.RA.Missions,Allies04HazyPaletteEffect,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,AdjustPalette,The following statement contains a magic number: pal.Value.SetColor(x' Exts.ColorLerp(0.15f' from' to));
Magic Number,OpenRA.Mods.RA.Missions,Allies04HazyPaletteEffect,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Allies04Script.cs,AdjustPalette,The following statement contains a magic number: x < 256
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\CountdownTimer.cs,Tick,The following statement contains a magic number: switch (TicksLeft)  			{  				case 1500 * 00: OnExpired(this); break;  				case 1500 * 01: OnOneMinuteRemaining(this); break;  				case 1500 * 02: OnTwoMinutesRemaining(this); break;  				case 1500 * 03: OnThreeMinutesRemaining(this); break;  				case 1500 * 04: OnFourMinutesRemaining(this); break;  				case 1500 * 05: OnFiveMinutesRemaining(this); break;  				case 1500 * 10: OnTenMinutesRemaining(this); break;  				case 1500 * 20: OnTwentyMinutesRemaining(this); break;  				case 1500 * 30: OnThirtyMinutesRemaining(this); break;  				case 1500 * 40: OnFortyMinutesRemaining(this); break;  			}
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\CountdownTimer.cs,Tick,The following statement contains a magic number: switch (TicksLeft)  			{  				case 1500 * 00: OnExpired(this); break;  				case 1500 * 01: OnOneMinuteRemaining(this); break;  				case 1500 * 02: OnTwoMinutesRemaining(this); break;  				case 1500 * 03: OnThreeMinutesRemaining(this); break;  				case 1500 * 04: OnFourMinutesRemaining(this); break;  				case 1500 * 05: OnFiveMinutesRemaining(this); break;  				case 1500 * 10: OnTenMinutesRemaining(this); break;  				case 1500 * 20: OnTwentyMinutesRemaining(this); break;  				case 1500 * 30: OnThirtyMinutesRemaining(this); break;  				case 1500 * 40: OnFortyMinutesRemaining(this); break;  			}
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\CountdownTimer.cs,Tick,The following statement contains a magic number: switch (TicksLeft)  			{  				case 1500 * 00: OnExpired(this); break;  				case 1500 * 01: OnOneMinuteRemaining(this); break;  				case 1500 * 02: OnTwoMinutesRemaining(this); break;  				case 1500 * 03: OnThreeMinutesRemaining(this); break;  				case 1500 * 04: OnFourMinutesRemaining(this); break;  				case 1500 * 05: OnFiveMinutesRemaining(this); break;  				case 1500 * 10: OnTenMinutesRemaining(this); break;  				case 1500 * 20: OnTwentyMinutesRemaining(this); break;  				case 1500 * 30: OnThirtyMinutesRemaining(this); break;  				case 1500 * 40: OnFortyMinutesRemaining(this); break;  			}
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\CountdownTimer.cs,Tick,The following statement contains a magic number: switch (TicksLeft)  			{  				case 1500 * 00: OnExpired(this); break;  				case 1500 * 01: OnOneMinuteRemaining(this); break;  				case 1500 * 02: OnTwoMinutesRemaining(this); break;  				case 1500 * 03: OnThreeMinutesRemaining(this); break;  				case 1500 * 04: OnFourMinutesRemaining(this); break;  				case 1500 * 05: OnFiveMinutesRemaining(this); break;  				case 1500 * 10: OnTenMinutesRemaining(this); break;  				case 1500 * 20: OnTwentyMinutesRemaining(this); break;  				case 1500 * 30: OnThirtyMinutesRemaining(this); break;  				case 1500 * 40: OnFortyMinutesRemaining(this); break;  			}
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\CountdownTimer.cs,Tick,The following statement contains a magic number: switch (TicksLeft)  			{  				case 1500 * 00: OnExpired(this); break;  				case 1500 * 01: OnOneMinuteRemaining(this); break;  				case 1500 * 02: OnTwoMinutesRemaining(this); break;  				case 1500 * 03: OnThreeMinutesRemaining(this); break;  				case 1500 * 04: OnFourMinutesRemaining(this); break;  				case 1500 * 05: OnFiveMinutesRemaining(this); break;  				case 1500 * 10: OnTenMinutesRemaining(this); break;  				case 1500 * 20: OnTwentyMinutesRemaining(this); break;  				case 1500 * 30: OnThirtyMinutesRemaining(this); break;  				case 1500 * 40: OnFortyMinutesRemaining(this); break;  			}
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\CountdownTimer.cs,Tick,The following statement contains a magic number: switch (TicksLeft)  			{  				case 1500 * 00: OnExpired(this); break;  				case 1500 * 01: OnOneMinuteRemaining(this); break;  				case 1500 * 02: OnTwoMinutesRemaining(this); break;  				case 1500 * 03: OnThreeMinutesRemaining(this); break;  				case 1500 * 04: OnFourMinutesRemaining(this); break;  				case 1500 * 05: OnFiveMinutesRemaining(this); break;  				case 1500 * 10: OnTenMinutesRemaining(this); break;  				case 1500 * 20: OnTwentyMinutesRemaining(this); break;  				case 1500 * 30: OnThirtyMinutesRemaining(this); break;  				case 1500 * 40: OnFortyMinutesRemaining(this); break;  			}
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\CountdownTimer.cs,Tick,The following statement contains a magic number: switch (TicksLeft)  			{  				case 1500 * 00: OnExpired(this); break;  				case 1500 * 01: OnOneMinuteRemaining(this); break;  				case 1500 * 02: OnTwoMinutesRemaining(this); break;  				case 1500 * 03: OnThreeMinutesRemaining(this); break;  				case 1500 * 04: OnFourMinutesRemaining(this); break;  				case 1500 * 05: OnFiveMinutesRemaining(this); break;  				case 1500 * 10: OnTenMinutesRemaining(this); break;  				case 1500 * 20: OnTwentyMinutesRemaining(this); break;  				case 1500 * 30: OnThirtyMinutesRemaining(this); break;  				case 1500 * 40: OnFortyMinutesRemaining(this); break;  			}
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\CountdownTimer.cs,Tick,The following statement contains a magic number: switch (TicksLeft)  			{  				case 1500 * 00: OnExpired(this); break;  				case 1500 * 01: OnOneMinuteRemaining(this); break;  				case 1500 * 02: OnTwoMinutesRemaining(this); break;  				case 1500 * 03: OnThreeMinutesRemaining(this); break;  				case 1500 * 04: OnFourMinutesRemaining(this); break;  				case 1500 * 05: OnFiveMinutesRemaining(this); break;  				case 1500 * 10: OnTenMinutesRemaining(this); break;  				case 1500 * 20: OnTwentyMinutesRemaining(this); break;  				case 1500 * 30: OnThirtyMinutesRemaining(this); break;  				case 1500 * 40: OnFortyMinutesRemaining(this); break;  			}
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\CountdownTimer.cs,Tick,The following statement contains a magic number: switch (TicksLeft)  			{  				case 1500 * 00: OnExpired(this); break;  				case 1500 * 01: OnOneMinuteRemaining(this); break;  				case 1500 * 02: OnTwoMinutesRemaining(this); break;  				case 1500 * 03: OnThreeMinutesRemaining(this); break;  				case 1500 * 04: OnFourMinutesRemaining(this); break;  				case 1500 * 05: OnFiveMinutesRemaining(this); break;  				case 1500 * 10: OnTenMinutesRemaining(this); break;  				case 1500 * 20: OnTwentyMinutesRemaining(this); break;  				case 1500 * 30: OnThirtyMinutesRemaining(this); break;  				case 1500 * 40: OnFortyMinutesRemaining(this); break;  			}
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\CountdownTimer.cs,Tick,The following statement contains a magic number: switch (TicksLeft)  			{  				case 1500 * 00: OnExpired(this); break;  				case 1500 * 01: OnOneMinuteRemaining(this); break;  				case 1500 * 02: OnTwoMinutesRemaining(this); break;  				case 1500 * 03: OnThreeMinutesRemaining(this); break;  				case 1500 * 04: OnFourMinutesRemaining(this); break;  				case 1500 * 05: OnFiveMinutesRemaining(this); break;  				case 1500 * 10: OnTenMinutesRemaining(this); break;  				case 1500 * 20: OnTwentyMinutesRemaining(this); break;  				case 1500 * 30: OnThirtyMinutesRemaining(this); break;  				case 1500 * 40: OnFortyMinutesRemaining(this); break;  			}
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\CountdownTimer.cs,Tick,The following statement contains a magic number: switch (TicksLeft)  			{  				case 1500 * 00: OnExpired(this); break;  				case 1500 * 01: OnOneMinuteRemaining(this); break;  				case 1500 * 02: OnTwoMinutesRemaining(this); break;  				case 1500 * 03: OnThreeMinutesRemaining(this); break;  				case 1500 * 04: OnFourMinutesRemaining(this); break;  				case 1500 * 05: OnFiveMinutesRemaining(this); break;  				case 1500 * 10: OnTenMinutesRemaining(this); break;  				case 1500 * 20: OnTwentyMinutesRemaining(this); break;  				case 1500 * 30: OnThirtyMinutesRemaining(this); break;  				case 1500 * 40: OnFortyMinutesRemaining(this); break;  			}
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\CountdownTimer.cs,Tick,The following statement contains a magic number: switch (TicksLeft)  			{  				case 1500 * 00: OnExpired(this); break;  				case 1500 * 01: OnOneMinuteRemaining(this); break;  				case 1500 * 02: OnTwoMinutesRemaining(this); break;  				case 1500 * 03: OnThreeMinutesRemaining(this); break;  				case 1500 * 04: OnFourMinutesRemaining(this); break;  				case 1500 * 05: OnFiveMinutesRemaining(this); break;  				case 1500 * 10: OnTenMinutesRemaining(this); break;  				case 1500 * 20: OnTwentyMinutesRemaining(this); break;  				case 1500 * 30: OnThirtyMinutesRemaining(this); break;  				case 1500 * 40: OnFortyMinutesRemaining(this); break;  			}
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\CountdownTimer.cs,Tick,The following statement contains a magic number: switch (TicksLeft)  			{  				case 1500 * 00: OnExpired(this); break;  				case 1500 * 01: OnOneMinuteRemaining(this); break;  				case 1500 * 02: OnTwoMinutesRemaining(this); break;  				case 1500 * 03: OnThreeMinutesRemaining(this); break;  				case 1500 * 04: OnFourMinutesRemaining(this); break;  				case 1500 * 05: OnFiveMinutesRemaining(this); break;  				case 1500 * 10: OnTenMinutesRemaining(this); break;  				case 1500 * 20: OnTwentyMinutesRemaining(this); break;  				case 1500 * 30: OnThirtyMinutesRemaining(this); break;  				case 1500 * 40: OnFortyMinutesRemaining(this); break;  			}
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\CountdownTimer.cs,Tick,The following statement contains a magic number: switch (TicksLeft)  			{  				case 1500 * 00: OnExpired(this); break;  				case 1500 * 01: OnOneMinuteRemaining(this); break;  				case 1500 * 02: OnTwoMinutesRemaining(this); break;  				case 1500 * 03: OnThreeMinutesRemaining(this); break;  				case 1500 * 04: OnFourMinutesRemaining(this); break;  				case 1500 * 05: OnFiveMinutesRemaining(this); break;  				case 1500 * 10: OnTenMinutesRemaining(this); break;  				case 1500 * 20: OnTwentyMinutesRemaining(this); break;  				case 1500 * 30: OnThirtyMinutesRemaining(this); break;  				case 1500 * 40: OnFortyMinutesRemaining(this); break;  			}
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\CountdownTimer.cs,Tick,The following statement contains a magic number: switch (TicksLeft)  			{  				case 1500 * 00: OnExpired(this); break;  				case 1500 * 01: OnOneMinuteRemaining(this); break;  				case 1500 * 02: OnTwoMinutesRemaining(this); break;  				case 1500 * 03: OnThreeMinutesRemaining(this); break;  				case 1500 * 04: OnFourMinutesRemaining(this); break;  				case 1500 * 05: OnFiveMinutesRemaining(this); break;  				case 1500 * 10: OnTenMinutesRemaining(this); break;  				case 1500 * 20: OnTwentyMinutesRemaining(this); break;  				case 1500 * 30: OnThirtyMinutesRemaining(this); break;  				case 1500 * 40: OnFortyMinutesRemaining(this); break;  			}
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\CountdownTimer.cs,Tick,The following statement contains a magic number: switch (TicksLeft)  			{  				case 1500 * 00: OnExpired(this); break;  				case 1500 * 01: OnOneMinuteRemaining(this); break;  				case 1500 * 02: OnTwoMinutesRemaining(this); break;  				case 1500 * 03: OnThreeMinutesRemaining(this); break;  				case 1500 * 04: OnFourMinutesRemaining(this); break;  				case 1500 * 05: OnFiveMinutesRemaining(this); break;  				case 1500 * 10: OnTenMinutesRemaining(this); break;  				case 1500 * 20: OnTwentyMinutesRemaining(this); break;  				case 1500 * 30: OnThirtyMinutesRemaining(this); break;  				case 1500 * 40: OnFortyMinutesRemaining(this); break;  			}
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\CountdownTimer.cs,Tick,The following statement contains a magic number: switch (TicksLeft)  			{  				case 1500 * 00: OnExpired(this); break;  				case 1500 * 01: OnOneMinuteRemaining(this); break;  				case 1500 * 02: OnTwoMinutesRemaining(this); break;  				case 1500 * 03: OnThreeMinutesRemaining(this); break;  				case 1500 * 04: OnFourMinutesRemaining(this); break;  				case 1500 * 05: OnFiveMinutesRemaining(this); break;  				case 1500 * 10: OnTenMinutesRemaining(this); break;  				case 1500 * 20: OnTwentyMinutesRemaining(this); break;  				case 1500 * 30: OnThirtyMinutesRemaining(this); break;  				case 1500 * 40: OnFortyMinutesRemaining(this); break;  			}
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\CountdownTimer.cs,Tick,The following statement contains a magic number: switch (TicksLeft)  			{  				case 1500 * 00: OnExpired(this); break;  				case 1500 * 01: OnOneMinuteRemaining(this); break;  				case 1500 * 02: OnTwoMinutesRemaining(this); break;  				case 1500 * 03: OnThreeMinutesRemaining(this); break;  				case 1500 * 04: OnFourMinutesRemaining(this); break;  				case 1500 * 05: OnFiveMinutesRemaining(this); break;  				case 1500 * 10: OnTenMinutesRemaining(this); break;  				case 1500 * 20: OnTwentyMinutesRemaining(this); break;  				case 1500 * 30: OnThirtyMinutesRemaining(this); break;  				case 1500 * 40: OnFortyMinutesRemaining(this); break;  			}
Magic Number,OpenRA.Mods.RA.Missions,MissionUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs,ExtractUnitWithChinook,The following statement contains a magic number: chinook.QueueActivity(new Wait(150));
Magic Number,OpenRA.Mods.RA.Missions,MissionUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs,InsertUnitWithChinook,The following statement contains a magic number: chinook.QueueActivity(new Wait(150));
Magic Number,OpenRA.Mods.RA.Missions,MissionUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs,CapOre,The following statement contains a magic number: res.Ore = (int)(res.OreCapacity * 0.8);
Magic Number,OpenRA.Mods.RA.Missions,MissionUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs,CapOre,The following statement contains a magic number: res.Ore > res.OreCapacity * 0.8
Magic Number,OpenRA.Mods.RA.Missions,MissionUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionUtils.cs,AttackNearestLandActor,The following statement contains a magic number: self.QueueActivity(queued' new AttackMove.AttackMoveActivity(self' new Attack(Target.FromActor(enemy)' 3)));
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimerWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs,Draw,The following statement contains a magic number: var pos = new float2(Game.viewport.Width * 0.5f - font.Measure(text).X / 2' Game.viewport.Height * 0.1f);
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimerWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs,Draw,The following statement contains a magic number: var pos = new float2(Game.viewport.Width * 0.5f - font.Measure(text).X / 2' Game.viewport.Height * 0.1f);
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimerWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs,Draw,The following statement contains a magic number: var pos = new float2(Game.viewport.Width * 0.5f - font.Measure(text).X / 2' Game.viewport.Height * 0.1f);
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimerWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs,Draw,The following statement contains a magic number: font.DrawTextWithContrast(text' pos' Timer.TicksLeft <= 25 * 10 && Game.LocalTick % 50 < 25 ? Color.Red : Color.White' Color.Black' 1);
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimerWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs,Draw,The following statement contains a magic number: font.DrawTextWithContrast(text' pos' Timer.TicksLeft <= 25 * 10 && Game.LocalTick % 50 < 25 ? Color.Red : Color.White' Color.Black' 1);
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimerWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs,Draw,The following statement contains a magic number: font.DrawTextWithContrast(text' pos' Timer.TicksLeft <= 25 * 10 && Game.LocalTick % 50 < 25 ? Color.Red : Color.White' Color.Black' 1);
Magic Number,OpenRA.Mods.RA.Missions,CountdownTimerWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs,Draw,The following statement contains a magic number: font.DrawTextWithContrast(text' pos' Timer.TicksLeft <= 25 * 10 && Game.LocalTick % 50 < 25 ? Color.Red : Color.White' Color.Black' 1);
Magic Number,OpenRA.Mods.RA.Missions,InfoWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs,Draw,The following statement contains a magic number: var pos = new float2(Game.viewport.Width * 0.5f - font.Measure(Text).X / 2' Game.viewport.Height * 0.1f);
Magic Number,OpenRA.Mods.RA.Missions,InfoWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs,Draw,The following statement contains a magic number: var pos = new float2(Game.viewport.Width * 0.5f - font.Measure(Text).X / 2' Game.viewport.Height * 0.1f);
Magic Number,OpenRA.Mods.RA.Missions,InfoWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MissionWidgets.cs,Draw,The following statement contains a magic number: var pos = new float2(Game.viewport.Width * 0.5f - font.Measure(Text).X / 2' Game.viewport.Height * 0.1f);
Magic Number,OpenRA.Mods.RA.Missions,MonsterTankMadnessScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs,Tick,The following statement contains a magic number: !hospitalEvacuated && !hospital.IsDead() && MissionUtils.AreaSecuredWithUnits(world' greece' hospital.CenterLocation' 5)
Magic Number,OpenRA.Mods.RA.Missions,MonsterTankMadnessScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\MonsterTankMadnessScript.cs,WorldLoaded,The following statement contains a magic number: ussr.PlayerActor.Trait<PlayerResources>().Cash = 2000;
Magic Number,OpenRA.Mods.RA.Missions,Soviet01ClassicScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs,LandYaks,The following statement contains a magic number: var entry = airfield.Location - new CVec(10' 0);
Magic Number,OpenRA.Mods.RA.Missions,Soviet01ClassicScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs,MoveJeep,The following statement contains a magic number: startJeep.QueueActivity(new Turn(128));
Magic Number,OpenRA.Mods.RA.Missions,Soviet01ClassicScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs,MoveJeep,The following statement contains a magic number: startJeep.QueueActivity(new CallFunc(() =>  			{  				var bridge = world.Actors  					.Where(a => a.HasTrait<Bridge>() && !a.IsDead())  					.OrderBy(a => (startJeep.CenterLocation - a.CenterLocation).LengthSquared)  					.First();  				Combat.DoExplosion(bridge' "Demolish"' bridge.CenterLocation' 0);  				world.WorldActor.Trait<ScreenShaker>().AddEffect(15' bridge.CenterLocation.ToFloat2()' 6);  				bridge.Kill(bridge);  			}));
Magic Number,OpenRA.Mods.RA.Missions,Soviet01ClassicScript,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Soviet01ClassicScript.cs,MoveJeep,The following statement contains a magic number: startJeep.QueueActivity(new CallFunc(() =>  			{  				var bridge = world.Actors  					.Where(a => a.HasTrait<Bridge>() && !a.IsDead())  					.OrderBy(a => (startJeep.CenterLocation - a.CenterLocation).LengthSquared)  					.First();  				Combat.DoExplosion(bridge' "Demolish"' bridge.CenterLocation' 0);  				world.WorldActor.Trait<ScreenShaker>().AddEffect(15' bridge.CenterLocation.ToFloat2()' 6);  				bridge.Kill(bridge);  			}));
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,Tick,The following statement contains a magic number: attackAtFrameIncrement = Math.Max(attackAtFrameIncrement - 5' 100);
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,Tick,The following statement contains a magic number: attackAtFrameIncrement = Math.Max(attackAtFrameIncrement - 5' 100);
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,Tick,The following statement contains a magic number: attackAtFrameIncrementInf = Math.Max(attackAtFrameIncrementInf - 5' 100);
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,Tick,The following statement contains a magic number: attackAtFrameIncrementInf = Math.Max(attackAtFrameIncrementInf - 5' 100);
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,Tick,The following statement contains a magic number: world.FrameNumber == paradropTicks * 2
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,Tick,The following statement contains a magic number: attackAtFrame = 100;
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,Tick,The following statement contains a magic number: attackAtFrameIncrement = 100;
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,Tick,The following statement contains a magic number: world.FrameNumber == 1500 * 23
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,Tick,The following statement contains a magic number: world.FrameNumber == 1500 * 23
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,Tick,The following statement contains a magic number: world.FrameNumber == 1500 * 25
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,Tick,The following statement contains a magic number: world.FrameNumber == 1500 * 25
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,SendSquad1,The following statement contains a magic number: var actor = world.CreateActor(squad1[i]' new TypeDictionary { new OwnerInit(soviets)' new LocationInit(alliesbase1.Location + new CVec(-2 + i' -6 + i * 2)) });
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,SendSquad1,The following statement contains a magic number: var actor = world.CreateActor(squad1[i]' new TypeDictionary { new OwnerInit(soviets)' new LocationInit(alliesbase1.Location + new CVec(-2 + i' -6 + i * 2)) });
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,SendSquad1,The following statement contains a magic number: var actor = world.CreateActor(squad1[i]' new TypeDictionary { new OwnerInit(soviets)' new LocationInit(alliesbase1.Location + new CVec(-2 + i' -6 + i * 2)) });
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,SendSquad2,The following statement contains a magic number: var actor = world.CreateActor(squad2[i]' new TypeDictionary { new OwnerInit(soviets)' new LocationInit(alliesbase2.Location + new CVec(-9 + i' -2 + i * 2)) });
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,SendSquad2,The following statement contains a magic number: var actor = world.CreateActor(squad2[i]' new TypeDictionary { new OwnerInit(soviets)' new LocationInit(alliesbase2.Location + new CVec(-9 + i' -2 + i * 2)) });
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,SendSquad2,The following statement contains a magic number: var actor = world.CreateActor(squad2[i]' new TypeDictionary { new OwnerInit(soviets)' new LocationInit(alliesbase2.Location + new CVec(-9 + i' -2 + i * 2)) });
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,SpawnSovietInfantry,The following statement contains a magic number: units.QueueActivity(new Move.Move(sovietinfantryrally1.Location' 3));
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,SpawnSovietInfantry,The following statement contains a magic number: var unitsincircle = world.FindAliveCombatantActorsInCircle(Util.CenterOfCell(sovietinfantryrally1.Location)' 10)  					.Where(a => a.Owner == soviets && a.IsIdle && a.HasTrait<IMove>());
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,SpawnSovietUnits,The following statement contains a magic number: unit.QueueActivity(new AttackMove.AttackMoveActivity(unit' new Move.Move(rallyPoint' 3)));
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,AttackNearestAlliedActor,The following statement contains a magic number: self.QueueActivity(new AttackMove.AttackMoveActivity(self' new Attack(Target.FromActor(targetEnemy)' 3)));
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,ManageSovietUnits,The following statement contains a magic number: var units = world.FindAliveCombatantActorsInCircle(Util.CenterOfCell(rallyPoint)' 4)  					.Where(u => u.IsIdle && u.HasTrait<Mobile>() && u.Owner == soviets);
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,ManageSovietUnits,The following statement contains a magic number: var scatteredUnits = world.Actors.Where(u => u.IsInWorld && !u.IsDead() && u.HasTrait<Mobile>() && u.IsIdle && u.Owner == soviets)  				.Except(world.WorldActor.Trait<SpawnMapActors>().Actors.Values)  				.Except(sovietRallyPoints.SelectMany(rp => world.FindAliveCombatantActorsInCircle(Util.CenterOfCell(rp)' 4)));
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,WorldLoaded,The following statement contains a magic number: attackAtFrameInf = 300;
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,WorldLoaded,The following statement contains a magic number: attackAtFrameIncrementInf = 300;
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,WorldLoaded,The following statement contains a magic number: attackAtFrame = 450;
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,WorldLoaded,The following statement contains a magic number: attackAtFrameIncrement = 450;
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,WorldLoaded,The following statement contains a magic number: switch (difficulty)  			{  			case "Hard":  				attackAtFrameIncrement = 350;  				attackAtFrameIncrementInf = 200;  				break;  			case "Normal":  				attackAtFrameIncrement = 450;  				attackAtFrameIncrementInf = 300;  				break;  			case "Easy":  				attackAtFrameIncrement = 550;  				attackAtFrameIncrementInf = 400;  				break;  			}
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,WorldLoaded,The following statement contains a magic number: switch (difficulty)  			{  			case "Hard":  				attackAtFrameIncrement = 350;  				attackAtFrameIncrementInf = 200;  				break;  			case "Normal":  				attackAtFrameIncrement = 450;  				attackAtFrameIncrementInf = 300;  				break;  			case "Easy":  				attackAtFrameIncrement = 550;  				attackAtFrameIncrementInf = 400;  				break;  			}
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,WorldLoaded,The following statement contains a magic number: switch (difficulty)  			{  			case "Hard":  				attackAtFrameIncrement = 350;  				attackAtFrameIncrementInf = 200;  				break;  			case "Normal":  				attackAtFrameIncrement = 450;  				attackAtFrameIncrementInf = 300;  				break;  			case "Easy":  				attackAtFrameIncrement = 550;  				attackAtFrameIncrementInf = 400;  				break;  			}
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,WorldLoaded,The following statement contains a magic number: switch (difficulty)  			{  			case "Hard":  				attackAtFrameIncrement = 350;  				attackAtFrameIncrementInf = 200;  				break;  			case "Normal":  				attackAtFrameIncrement = 450;  				attackAtFrameIncrementInf = 300;  				break;  			case "Easy":  				attackAtFrameIncrement = 550;  				attackAtFrameIncrementInf = 400;  				break;  			}
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,WorldLoaded,The following statement contains a magic number: switch (difficulty)  			{  			case "Hard":  				attackAtFrameIncrement = 350;  				attackAtFrameIncrementInf = 200;  				break;  			case "Normal":  				attackAtFrameIncrement = 450;  				attackAtFrameIncrementInf = 300;  				break;  			case "Easy":  				attackAtFrameIncrement = 550;  				attackAtFrameIncrementInf = 400;  				break;  			}
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,WorldLoaded,The following statement contains a magic number: switch (difficulty)  			{  			case "Hard":  				attackAtFrameIncrement = 350;  				attackAtFrameIncrementInf = 200;  				break;  			case "Normal":  				attackAtFrameIncrement = 450;  				attackAtFrameIncrementInf = 300;  				break;  			case "Easy":  				attackAtFrameIncrement = 550;  				attackAtFrameIncrementInf = 400;  				break;  			}
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,WorldLoaded,The following statement contains a magic number: shroud.Explore(w' sam1.Location' 4);
Magic Number,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,WorldLoaded,The following statement contains a magic number: shroud.Explore(w' sam2.Location' 4);
Magic Number,OpenRA.Mods.RA.Move,MobileInfo,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\Mobile.cs,LoadSpeeds,The following statement contains a magic number: var cost = t.Value.NodesDict.ContainsKey("PathingCost")  					? FieldLoader.GetValue<int>("cost"' t.Value.NodesDict["PathingCost"].Value)  					: (int)(10000 / speed);
Magic Number,OpenRA.Mods.RA.Move,Mobile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\Mobile.cs,NearestMoveableCell,The following statement contains a magic number: return NearestMoveableCell(target' 1' 10);
Magic Number,OpenRA.Mods.RA.Move,Mobile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\Mobile.cs,PerformMoveInner,The following statement contains a magic number: self.QueueActivity(new Move(currentLocation' 8));
Magic Number,OpenRA.Mods.RA.Move,Mobile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\Mobile.cs,MovementSpeedForCell,The following statement contains a magic number: return (int)(speed / 100);
Magic Number,OpenRA.Mods.RA.Move,Mobile,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\Mobile.cs,Nudge,The following statement contains a magic number: i < 2
Magic Number,OpenRA.Mods.RA.Move,Move,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\Move.cs,SanityCheckPath,The following statement contains a magic number: d.LengthSquared > 2
Magic Number,OpenRA.Mods.RA.Move,MovePart,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\Move.cs,MovePart,The following statement contains a magic number: this.moveFractionTotal = ( ( to - from ) * 3 ).Length;
Magic Number,OpenRA.Mods.RA.Move,MoveFirstHalf,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\Move.cs,OnComplete,The following statement contains a magic number: var ret = new MoveFirstHalf(  							move'  							Util.BetweenCells( mobile.fromCell' mobile.toCell ) + (fromSubcellOffset + toSubcellOffset) / 2'  							Util.BetweenCells( mobile.toCell' nextCell.Value.First ) + (toSubcellOffset + nextSubcellOffset) / 2'  							mobile.Facing'  							Util.GetNearestFacing( mobile.Facing' Util.GetFacing( nextCell.Value.First - mobile.toCell' mobile.Facing ) )'  							moveFraction - moveFractionTotal );
Magic Number,OpenRA.Mods.RA.Move,MoveFirstHalf,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\Move.cs,OnComplete,The following statement contains a magic number: var ret = new MoveFirstHalf(  							move'  							Util.BetweenCells( mobile.fromCell' mobile.toCell ) + (fromSubcellOffset + toSubcellOffset) / 2'  							Util.BetweenCells( mobile.toCell' nextCell.Value.First ) + (toSubcellOffset + nextSubcellOffset) / 2'  							mobile.Facing'  							Util.GetNearestFacing( mobile.Facing' Util.GetFacing( nextCell.Value.First - mobile.toCell' mobile.Facing ) )'  							moveFraction - moveFractionTotal );
Magic Number,OpenRA.Mods.RA.Move,MoveFirstHalf,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\Move.cs,OnComplete,The following statement contains a magic number: var ret2 = new MoveSecondHalf(  					move'  					Util.BetweenCells( mobile.fromCell' mobile.toCell ) + (fromSubcellOffset + toSubcellOffset) / 2'  					Util.CenterOfCell( mobile.toCell ) + toSubcellOffset'  					mobile.Facing'  					mobile.Facing'  					moveFraction - moveFractionTotal );
Magic Number,OpenRA.Mods.RA.Move,PathSearch,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\PathSearch.cs,Expand,The following statement contains a magic number: cellCost = (cellCost * 34) / 24;
Magic Number,OpenRA.Mods.RA.Move,PathSearch,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\PathSearch.cs,Expand,The following statement contains a magic number: cellCost = (cellCost * 34) / 24;
Magic Number,OpenRA.Mods.RA.Move,PathSearch,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\PathSearch.cs,DefaultEstimator,The following statement contains a magic number: return here =>  			{  				int diag = Math.Min(Math.Abs(here.X - destination.X)' Math.Abs(here.Y - destination.Y));  				int straight = (Math.Abs(here.X - destination.X) + Math.Abs(here.Y - destination.Y));  				int h = (3400 * diag / 24) + 100 * (straight - (2 * diag));  				h = (int)(h * 1.001);  				return h;  			};
Magic Number,OpenRA.Mods.RA.Move,PathSearch,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\PathSearch.cs,DefaultEstimator,The following statement contains a magic number: return here =>  			{  				int diag = Math.Min(Math.Abs(here.X - destination.X)' Math.Abs(here.Y - destination.Y));  				int straight = (Math.Abs(here.X - destination.X) + Math.Abs(here.Y - destination.Y));  				int h = (3400 * diag / 24) + 100 * (straight - (2 * diag));  				h = (int)(h * 1.001);  				return h;  			};
Magic Number,OpenRA.Mods.RA.Move,PathSearch,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\PathSearch.cs,DefaultEstimator,The following statement contains a magic number: return here =>  			{  				int diag = Math.Min(Math.Abs(here.X - destination.X)' Math.Abs(here.Y - destination.Y));  				int straight = (Math.Abs(here.X - destination.X) + Math.Abs(here.Y - destination.Y));  				int h = (3400 * diag / 24) + 100 * (straight - (2 * diag));  				h = (int)(h * 1.001);  				return h;  			};
Magic Number,OpenRA.Mods.RA.Move,PathSearch,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\PathSearch.cs,DefaultEstimator,The following statement contains a magic number: return here =>  			{  				int diag = Math.Min(Math.Abs(here.X - destination.X)' Math.Abs(here.Y - destination.Y));  				int straight = (Math.Abs(here.X - destination.X) + Math.Abs(here.Y - destination.Y));  				int h = (3400 * diag / 24) + 100 * (straight - (2 * diag));  				h = (int)(h * 1.001);  				return h;  			};
Magic Number,OpenRA.Mods.RA.Move,PathSearch,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Move\PathSearch.cs,DefaultEstimator,The following statement contains a magic number: return here =>  			{  				int diag = Math.Min(Math.Abs(here.X - destination.X)' Math.Abs(here.Y - destination.Y));  				int straight = (Math.Abs(here.X - destination.X) + Math.Abs(here.Y - destination.Y));  				int h = (3400 * diag / 24) + 100 * (straight - (2 * diag));  				h = (int)(h * 1.001);  				return h;  			};
Magic Number,OpenRA.Mods.RA.Render,RenderBuildingSilo,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Render\RenderBuildingSilo.cs,BuildingComplete,The following statement contains a magic number: anim.PlayFetchIndex("idle"'  				() => playerResources.OreCapacity != 0  					? (Info.FillSteps * playerResources.Ore) / (10 * playerResources.OreCapacity)  					: 0);
Magic Number,OpenRA.Mods.RA.Render,RenderBuildingWall,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Render\RenderBuildingWall.cs,AddAdjacentWall,The following statement contains a magic number: adjacentWalls |= 2;
Magic Number,OpenRA.Mods.RA.Render,RenderBuildingWall,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Render\RenderBuildingWall.cs,AddAdjacentWall,The following statement contains a magic number: adjacentWalls |= 4;
Magic Number,OpenRA.Mods.RA.Render,RenderBuildingWall,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Render\RenderBuildingWall.cs,AddAdjacentWall,The following statement contains a magic number: adjacentWalls |= 8;
Magic Number,OpenRA.Mods.RA.Render,RenderBuildingWarFactoryInfo,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Render\RenderBuildingWarFactory.cs,RenderPreview,The following statement contains a magic number: yield return new Renderable(anim.Image' rb.Origin + 0.5f*anim.Image.size*(1 - Scale)'  				pr' 0' Scale);
Magic Number,OpenRA.Mods.RA.Render,RenderBuildingWarFactory,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Render\RenderBuildingWarFactory.cs,RenderBuildingWarFactory,The following statement contains a magic number: var offset = new AnimationWithOffset( roof ) { ZOffset = 24 };
Magic Number,OpenRA.Mods.RA.Render,RenderHarvester,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Render\RenderHarvester.cs,Tick,The following statement contains a magic number: var desiredState = harv.Fullness * (info.ImagesByFullness.Length - 1) / 100;
Magic Number,OpenRA.Mods.RA.Render,WithShadow,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Render\WithShadow.cs,ModifyRender,The following statement contains a magic number: var visualOffset = ((move is Helicopter || move is Mobile) && move.Altitude > 0)  				? Math.Abs((self.ActorID + Game.LocalTick) / 5 % 4 - 1) - 1 : 0;
Magic Number,OpenRA.Mods.RA.Render,WithShadow,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Render\WithShadow.cs,ModifyRender,The following statement contains a magic number: var visualOffset = ((move is Helicopter || move is Mobile) && move.Altitude > 0)  				? Math.Abs((self.ActorID + Game.LocalTick) / 5 % 4 - 1) - 1 : 0;
Magic Number,OpenRA.Mods.RA.Server,LobbyCommands,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ServerTraits\LobbyCommands.cs,InterpretCommand,The following statement contains a magic number: var dict = new Dictionary<string' Func<string' bool>>  			{  				{ "ready"'  					s =>  					{  						// if we're downloading' we can't ready up.  						if (client.State == Session.ClientState.NotReady)  							client.State = Session.ClientState.Ready;  						else if (client.State == Session.ClientState.Ready)  							client.State = Session.ClientState.NotReady;    						Log.Write("server"' "Player @{0} is {1}"'  							conn.socket.RemoteEndPoint' client.State);    						server.SyncLobbyInfo();    						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "startgame"'  					s =>  					{  						if (server.lobbyInfo.Slots.Any(sl => sl.Value.Required &&   							server.lobbyInfo.ClientInSlot(sl.Key) == null))  						{  							server.SendChat(conn' "Unable to start the game until required slots are full.");  							return true;  						}  						server.StartGame();  						return true;  					}}'  				{ "lag"'  					s =>  					{  						int lag;  						if (!int.TryParse(s' out lag)) { Log.Write("server"' "Invalid order lag: {0}"' s); return false; }    						Log.Write("server"' "Order lag is now {0} frames."' lag);    						server.lobbyInfo.GlobalSettings.OrderLatency = lag;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot"'  					s =>  					{  						if (!server.lobbyInfo.Slots.ContainsKey(s))  						{  							Log.Write("server"' "Invalid slot: {0}"' s );  							return false;  						}  						var slot = server.lobbyInfo.Slots[s];    						if (slot.Closed || server.lobbyInfo.ClientInSlot(s) != null)  							return false;    						client.Slot = s;  						S.SyncClientToPlayerReference(client' server.Map.Players[s]);    						server.SyncLobbyInfo();  						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "spectate"'  					s =>  					{  						client.Slot = null;  						client.SpawnPoint = 0;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_close"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						// kick any player that's in the slot  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null)  						{  							if (occupant.Bot != null)  								server.lobbyInfo.Clients.Remove(occupant);  							else  							{  								var occupantConn = server.conns.FirstOrDefault( c => c.PlayerIndex == occupant.Index );  								if (occupantConn != null)  								{  									server.SendOrderTo(occupantConn' "ServerError"' "Your slot was closed by the host");  									server.DropClient(occupantConn);  								}  							}  						}    						server.lobbyInfo.Slots[s].Closed = true;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_open"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						var slot = server.lobbyInfo.Slots[s];  						slot.Closed = false;    						// Slot may have a bot in it  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null && occupant.Bot != null)  							server.lobbyInfo.Clients.Remove(occupant);    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_bot"'  					s =>  					{  						var parts = s.Split(' ');    						if (parts.Length < 2)  						{  							server.SendChatTo( conn' "Malformed slot_bot command" );  							return true;  						}    						if (!ValidateSlotCommand( server' conn' client' parts[0]' true ))  							return false;    						var slot = server.lobbyInfo.Slots[parts[0]];  						var bot = server.lobbyInfo.ClientInSlot(parts[0]);  						var botType = parts.Skip(1).JoinWith(" ");    						// Invalid slot  						if (bot != null && bot.Bot == null)  						{  							server.SendChatTo( conn' "Can't add bots to a slot with another client" );  							return true;  						}    						slot.Closed = false;  						if (bot == null)  						{  							// Create a new bot  							bot = new Session.Client()  							{  								Index = server.ChooseFreePlayerIndex()'  								Name = botType'  								Bot = botType'  								Slot = parts[0]'  								Country = "random"'  								SpawnPoint = 0'  								Team = 0'  								State = Session.ClientState.NotReady  							};    							// pick a random color for the bot  							var hue = (byte)server.Random.Next(255);  							var sat = (byte)server.Random.Next(255);  							var lum = (byte)server.Random.Next(51'255);  							bot.ColorRamp = bot.PreferredColorRamp = new ColorRamp(hue' sat' lum' 10);    							server.lobbyInfo.Clients.Add(bot);  						}  						else  						{  							// Change the type of the existing bot  							bot.Name = botType;  							bot.Bot = botType;  						}    						S.SyncClientToPlayerReference(bot' server.Map.Players[parts[0]]);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "map"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can change the map" );  							return true;  						}  						if(!server.ModData.AvailableMaps.ContainsKey(s))  						{  							server.SendChatTo( conn' "Map not found");  							return true;  						}  						server.lobbyInfo.GlobalSettings.Map = s;  						var oldSlots = server.lobbyInfo.Slots.Keys.ToArray();  						LoadMap(server);  						SetDefaultDifficulty(server);    						// Reassign players into new slots based on their old slots:  						//  - Observers remain as observers  						//  - Players who now lack a slot are made observers  						//  - Bots who now lack a slot are dropped  						var slots = server.lobbyInfo.Slots.Keys.ToArray();  						int i = 0;  						foreach (var os in oldSlots)  						{  							var c = server.lobbyInfo.ClientInSlot(os);  							if (c == null)  								continue;    							c.SpawnPoint = 0;  							c.State = Session.ClientState.NotReady;  							c.Slot = i < slots.Length ? slots[i++] : null;  							if (c.Slot != null)  							{  								// Remove Bot from slot if slot forbids bots  								if (c.Bot != null && !server.Map.Players[c.Slot].AllowBots)  									server.lobbyInfo.Clients.Remove(c);  								S.SyncClientToPlayerReference(c' server.Map.Players[c.Slot]);  							}  							else if (c.Bot != null)  								server.lobbyInfo.Clients.Remove(c);  						}    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "lockteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.LockTeams);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "allowcheats"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.AllowCheats);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "assignteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						int teams;  						if (!int.TryParse(s' out teams))  						{  							server.SendChatTo(conn' "Number of teams could not be parsed: {0}".F(s));  							return true;  						}  						teams = teams.Clamp(2' 8);    						var players = server.lobbyInfo.Slots  							.Select(slot => server.lobbyInfo.Clients.SingleOrDefault(c => c.Slot == slot.Key))  							.Where(c => c != null && !server.lobbyInfo.Slots[c.Slot].LockTeam).ToArray();  						if (players.Length < 2)  						{  							server.SendChatTo(conn' "Not enough players to assign teams");  							return true;  						}  						if (teams > players.Length)  						{  							server.SendChatTo(conn' "Too many teams for the number of players");  							return true;  						}    						var teamSizes = new int[players.Length];  						for (var i = 0; i < players.Length; i++)  							teamSizes[i % teams]++;    						var playerIndex = 0;  						for (var team = 1; team <= teams; team++)  						{  							for (var teamPlayerIndex = 0; teamPlayerIndex < teamSizes[team - 1]; playerIndex++' teamPlayerIndex++)  							{  								var cl = players[playerIndex];  								if (cl.Bot == null)  									cl.State = Session.ClientState.NotReady;  								cl.Team = team;  							}  						}  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "crates"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.Crates);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "difficulty"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}  						if ((server.Map.Difficulties == null && s != null) || (server.Map.Difficulties != null && !server.Map.Difficulties.Contains(s)))  						{  							server.SendChatTo(conn' "Unsupported difficulty selected: {0}".F(s));  							server.SendChatTo(conn' "Supported difficulties: {0}".F(server.Map.Difficulties.JoinWith("'")));  							return true;  						}    						server.lobbyInfo.GlobalSettings.Difficulty = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "kick"'  					s =>  					{    						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can kick players" );  							return true;  						}    						int clientID;  						int.TryParse( s' out clientID );    						var connToKick = server.conns.SingleOrDefault( c => server.GetClient(c) != null && server.GetClient(c).Index == clientID);  						if (connToKick == null)  						{  							server.SendChatTo( conn' "Noone in that slot." );  							return true;  						}    						server.SendOrderTo(connToKick' "ServerError"' "You have been kicked from the server");  						server.DropClient(connToKick);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "name"'  					s =>  					{  						Log.Write("server"' "Player@{0} is now known as {1}"' conn.socket.RemoteEndPoint' s);  						client.Name = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "race"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled race changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockRace)  							return true;    						targetClient.Country = parts[1];  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "team"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled team changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockTeam)  							return true;    						int team;  						if (!int.TryParse(parts[1]' out team)) { Log.Write("server"' "Invalid team: {0}"' s ); return false; }    						targetClient.Team = team;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "spawn"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Spectators don't need a spawnpoint  						if (targetClient.Slot == null)  							return true;    						// Map has disabled spawn changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockSpawn)  							return true;    						int spawnPoint;  						if (!int.TryParse(parts[1]' out spawnPoint) || spawnPoint < 0 || spawnPoint > server.Map.GetSpawnPoints().Length)  						{  							Log.Write("server"' "Invalid spawn point: {0}"' parts[1]);  							return true;  						}    						if (server.lobbyInfo.Clients.Where( cc => cc != client ).Any( cc => (cc.SpawnPoint == spawnPoint) && (cc.SpawnPoint != 0) ))  						{  							server.SendChatTo( conn' "You can't be at the same spawn point as another player" );  							return true;  						}    						targetClient.SpawnPoint = spawnPoint;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "color"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled color changes  						if (targetClient.Slot != null && server.lobbyInfo.Slots[targetClient.Slot].LockColor)  							return true;    						var ci = parts[1].Split(''').Select(cc => int.Parse(cc)).ToArray();  						targetClient.ColorRamp = targetClient.PreferredColorRamp = new ColorRamp((byte)ci[0]' (byte)ci[1]' (byte)ci[2]' (byte)ci[3]);  						server.SyncLobbyInfo();  						return true;  					}}  			};
Magic Number,OpenRA.Mods.RA.Server,LobbyCommands,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ServerTraits\LobbyCommands.cs,InterpretCommand,The following statement contains a magic number: var dict = new Dictionary<string' Func<string' bool>>  			{  				{ "ready"'  					s =>  					{  						// if we're downloading' we can't ready up.  						if (client.State == Session.ClientState.NotReady)  							client.State = Session.ClientState.Ready;  						else if (client.State == Session.ClientState.Ready)  							client.State = Session.ClientState.NotReady;    						Log.Write("server"' "Player @{0} is {1}"'  							conn.socket.RemoteEndPoint' client.State);    						server.SyncLobbyInfo();    						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "startgame"'  					s =>  					{  						if (server.lobbyInfo.Slots.Any(sl => sl.Value.Required &&   							server.lobbyInfo.ClientInSlot(sl.Key) == null))  						{  							server.SendChat(conn' "Unable to start the game until required slots are full.");  							return true;  						}  						server.StartGame();  						return true;  					}}'  				{ "lag"'  					s =>  					{  						int lag;  						if (!int.TryParse(s' out lag)) { Log.Write("server"' "Invalid order lag: {0}"' s); return false; }    						Log.Write("server"' "Order lag is now {0} frames."' lag);    						server.lobbyInfo.GlobalSettings.OrderLatency = lag;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot"'  					s =>  					{  						if (!server.lobbyInfo.Slots.ContainsKey(s))  						{  							Log.Write("server"' "Invalid slot: {0}"' s );  							return false;  						}  						var slot = server.lobbyInfo.Slots[s];    						if (slot.Closed || server.lobbyInfo.ClientInSlot(s) != null)  							return false;    						client.Slot = s;  						S.SyncClientToPlayerReference(client' server.Map.Players[s]);    						server.SyncLobbyInfo();  						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "spectate"'  					s =>  					{  						client.Slot = null;  						client.SpawnPoint = 0;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_close"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						// kick any player that's in the slot  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null)  						{  							if (occupant.Bot != null)  								server.lobbyInfo.Clients.Remove(occupant);  							else  							{  								var occupantConn = server.conns.FirstOrDefault( c => c.PlayerIndex == occupant.Index );  								if (occupantConn != null)  								{  									server.SendOrderTo(occupantConn' "ServerError"' "Your slot was closed by the host");  									server.DropClient(occupantConn);  								}  							}  						}    						server.lobbyInfo.Slots[s].Closed = true;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_open"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						var slot = server.lobbyInfo.Slots[s];  						slot.Closed = false;    						// Slot may have a bot in it  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null && occupant.Bot != null)  							server.lobbyInfo.Clients.Remove(occupant);    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_bot"'  					s =>  					{  						var parts = s.Split(' ');    						if (parts.Length < 2)  						{  							server.SendChatTo( conn' "Malformed slot_bot command" );  							return true;  						}    						if (!ValidateSlotCommand( server' conn' client' parts[0]' true ))  							return false;    						var slot = server.lobbyInfo.Slots[parts[0]];  						var bot = server.lobbyInfo.ClientInSlot(parts[0]);  						var botType = parts.Skip(1).JoinWith(" ");    						// Invalid slot  						if (bot != null && bot.Bot == null)  						{  							server.SendChatTo( conn' "Can't add bots to a slot with another client" );  							return true;  						}    						slot.Closed = false;  						if (bot == null)  						{  							// Create a new bot  							bot = new Session.Client()  							{  								Index = server.ChooseFreePlayerIndex()'  								Name = botType'  								Bot = botType'  								Slot = parts[0]'  								Country = "random"'  								SpawnPoint = 0'  								Team = 0'  								State = Session.ClientState.NotReady  							};    							// pick a random color for the bot  							var hue = (byte)server.Random.Next(255);  							var sat = (byte)server.Random.Next(255);  							var lum = (byte)server.Random.Next(51'255);  							bot.ColorRamp = bot.PreferredColorRamp = new ColorRamp(hue' sat' lum' 10);    							server.lobbyInfo.Clients.Add(bot);  						}  						else  						{  							// Change the type of the existing bot  							bot.Name = botType;  							bot.Bot = botType;  						}    						S.SyncClientToPlayerReference(bot' server.Map.Players[parts[0]]);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "map"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can change the map" );  							return true;  						}  						if(!server.ModData.AvailableMaps.ContainsKey(s))  						{  							server.SendChatTo( conn' "Map not found");  							return true;  						}  						server.lobbyInfo.GlobalSettings.Map = s;  						var oldSlots = server.lobbyInfo.Slots.Keys.ToArray();  						LoadMap(server);  						SetDefaultDifficulty(server);    						// Reassign players into new slots based on their old slots:  						//  - Observers remain as observers  						//  - Players who now lack a slot are made observers  						//  - Bots who now lack a slot are dropped  						var slots = server.lobbyInfo.Slots.Keys.ToArray();  						int i = 0;  						foreach (var os in oldSlots)  						{  							var c = server.lobbyInfo.ClientInSlot(os);  							if (c == null)  								continue;    							c.SpawnPoint = 0;  							c.State = Session.ClientState.NotReady;  							c.Slot = i < slots.Length ? slots[i++] : null;  							if (c.Slot != null)  							{  								// Remove Bot from slot if slot forbids bots  								if (c.Bot != null && !server.Map.Players[c.Slot].AllowBots)  									server.lobbyInfo.Clients.Remove(c);  								S.SyncClientToPlayerReference(c' server.Map.Players[c.Slot]);  							}  							else if (c.Bot != null)  								server.lobbyInfo.Clients.Remove(c);  						}    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "lockteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.LockTeams);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "allowcheats"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.AllowCheats);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "assignteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						int teams;  						if (!int.TryParse(s' out teams))  						{  							server.SendChatTo(conn' "Number of teams could not be parsed: {0}".F(s));  							return true;  						}  						teams = teams.Clamp(2' 8);    						var players = server.lobbyInfo.Slots  							.Select(slot => server.lobbyInfo.Clients.SingleOrDefault(c => c.Slot == slot.Key))  							.Where(c => c != null && !server.lobbyInfo.Slots[c.Slot].LockTeam).ToArray();  						if (players.Length < 2)  						{  							server.SendChatTo(conn' "Not enough players to assign teams");  							return true;  						}  						if (teams > players.Length)  						{  							server.SendChatTo(conn' "Too many teams for the number of players");  							return true;  						}    						var teamSizes = new int[players.Length];  						for (var i = 0; i < players.Length; i++)  							teamSizes[i % teams]++;    						var playerIndex = 0;  						for (var team = 1; team <= teams; team++)  						{  							for (var teamPlayerIndex = 0; teamPlayerIndex < teamSizes[team - 1]; playerIndex++' teamPlayerIndex++)  							{  								var cl = players[playerIndex];  								if (cl.Bot == null)  									cl.State = Session.ClientState.NotReady;  								cl.Team = team;  							}  						}  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "crates"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.Crates);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "difficulty"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}  						if ((server.Map.Difficulties == null && s != null) || (server.Map.Difficulties != null && !server.Map.Difficulties.Contains(s)))  						{  							server.SendChatTo(conn' "Unsupported difficulty selected: {0}".F(s));  							server.SendChatTo(conn' "Supported difficulties: {0}".F(server.Map.Difficulties.JoinWith("'")));  							return true;  						}    						server.lobbyInfo.GlobalSettings.Difficulty = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "kick"'  					s =>  					{    						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can kick players" );  							return true;  						}    						int clientID;  						int.TryParse( s' out clientID );    						var connToKick = server.conns.SingleOrDefault( c => server.GetClient(c) != null && server.GetClient(c).Index == clientID);  						if (connToKick == null)  						{  							server.SendChatTo( conn' "Noone in that slot." );  							return true;  						}    						server.SendOrderTo(connToKick' "ServerError"' "You have been kicked from the server");  						server.DropClient(connToKick);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "name"'  					s =>  					{  						Log.Write("server"' "Player@{0} is now known as {1}"' conn.socket.RemoteEndPoint' s);  						client.Name = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "race"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled race changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockRace)  							return true;    						targetClient.Country = parts[1];  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "team"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled team changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockTeam)  							return true;    						int team;  						if (!int.TryParse(parts[1]' out team)) { Log.Write("server"' "Invalid team: {0}"' s ); return false; }    						targetClient.Team = team;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "spawn"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Spectators don't need a spawnpoint  						if (targetClient.Slot == null)  							return true;    						// Map has disabled spawn changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockSpawn)  							return true;    						int spawnPoint;  						if (!int.TryParse(parts[1]' out spawnPoint) || spawnPoint < 0 || spawnPoint > server.Map.GetSpawnPoints().Length)  						{  							Log.Write("server"' "Invalid spawn point: {0}"' parts[1]);  							return true;  						}    						if (server.lobbyInfo.Clients.Where( cc => cc != client ).Any( cc => (cc.SpawnPoint == spawnPoint) && (cc.SpawnPoint != 0) ))  						{  							server.SendChatTo( conn' "You can't be at the same spawn point as another player" );  							return true;  						}    						targetClient.SpawnPoint = spawnPoint;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "color"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled color changes  						if (targetClient.Slot != null && server.lobbyInfo.Slots[targetClient.Slot].LockColor)  							return true;    						var ci = parts[1].Split(''').Select(cc => int.Parse(cc)).ToArray();  						targetClient.ColorRamp = targetClient.PreferredColorRamp = new ColorRamp((byte)ci[0]' (byte)ci[1]' (byte)ci[2]' (byte)ci[3]);  						server.SyncLobbyInfo();  						return true;  					}}  			};
Magic Number,OpenRA.Mods.RA.Server,LobbyCommands,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ServerTraits\LobbyCommands.cs,InterpretCommand,The following statement contains a magic number: var dict = new Dictionary<string' Func<string' bool>>  			{  				{ "ready"'  					s =>  					{  						// if we're downloading' we can't ready up.  						if (client.State == Session.ClientState.NotReady)  							client.State = Session.ClientState.Ready;  						else if (client.State == Session.ClientState.Ready)  							client.State = Session.ClientState.NotReady;    						Log.Write("server"' "Player @{0} is {1}"'  							conn.socket.RemoteEndPoint' client.State);    						server.SyncLobbyInfo();    						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "startgame"'  					s =>  					{  						if (server.lobbyInfo.Slots.Any(sl => sl.Value.Required &&   							server.lobbyInfo.ClientInSlot(sl.Key) == null))  						{  							server.SendChat(conn' "Unable to start the game until required slots are full.");  							return true;  						}  						server.StartGame();  						return true;  					}}'  				{ "lag"'  					s =>  					{  						int lag;  						if (!int.TryParse(s' out lag)) { Log.Write("server"' "Invalid order lag: {0}"' s); return false; }    						Log.Write("server"' "Order lag is now {0} frames."' lag);    						server.lobbyInfo.GlobalSettings.OrderLatency = lag;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot"'  					s =>  					{  						if (!server.lobbyInfo.Slots.ContainsKey(s))  						{  							Log.Write("server"' "Invalid slot: {0}"' s );  							return false;  						}  						var slot = server.lobbyInfo.Slots[s];    						if (slot.Closed || server.lobbyInfo.ClientInSlot(s) != null)  							return false;    						client.Slot = s;  						S.SyncClientToPlayerReference(client' server.Map.Players[s]);    						server.SyncLobbyInfo();  						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "spectate"'  					s =>  					{  						client.Slot = null;  						client.SpawnPoint = 0;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_close"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						// kick any player that's in the slot  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null)  						{  							if (occupant.Bot != null)  								server.lobbyInfo.Clients.Remove(occupant);  							else  							{  								var occupantConn = server.conns.FirstOrDefault( c => c.PlayerIndex == occupant.Index );  								if (occupantConn != null)  								{  									server.SendOrderTo(occupantConn' "ServerError"' "Your slot was closed by the host");  									server.DropClient(occupantConn);  								}  							}  						}    						server.lobbyInfo.Slots[s].Closed = true;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_open"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						var slot = server.lobbyInfo.Slots[s];  						slot.Closed = false;    						// Slot may have a bot in it  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null && occupant.Bot != null)  							server.lobbyInfo.Clients.Remove(occupant);    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_bot"'  					s =>  					{  						var parts = s.Split(' ');    						if (parts.Length < 2)  						{  							server.SendChatTo( conn' "Malformed slot_bot command" );  							return true;  						}    						if (!ValidateSlotCommand( server' conn' client' parts[0]' true ))  							return false;    						var slot = server.lobbyInfo.Slots[parts[0]];  						var bot = server.lobbyInfo.ClientInSlot(parts[0]);  						var botType = parts.Skip(1).JoinWith(" ");    						// Invalid slot  						if (bot != null && bot.Bot == null)  						{  							server.SendChatTo( conn' "Can't add bots to a slot with another client" );  							return true;  						}    						slot.Closed = false;  						if (bot == null)  						{  							// Create a new bot  							bot = new Session.Client()  							{  								Index = server.ChooseFreePlayerIndex()'  								Name = botType'  								Bot = botType'  								Slot = parts[0]'  								Country = "random"'  								SpawnPoint = 0'  								Team = 0'  								State = Session.ClientState.NotReady  							};    							// pick a random color for the bot  							var hue = (byte)server.Random.Next(255);  							var sat = (byte)server.Random.Next(255);  							var lum = (byte)server.Random.Next(51'255);  							bot.ColorRamp = bot.PreferredColorRamp = new ColorRamp(hue' sat' lum' 10);    							server.lobbyInfo.Clients.Add(bot);  						}  						else  						{  							// Change the type of the existing bot  							bot.Name = botType;  							bot.Bot = botType;  						}    						S.SyncClientToPlayerReference(bot' server.Map.Players[parts[0]]);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "map"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can change the map" );  							return true;  						}  						if(!server.ModData.AvailableMaps.ContainsKey(s))  						{  							server.SendChatTo( conn' "Map not found");  							return true;  						}  						server.lobbyInfo.GlobalSettings.Map = s;  						var oldSlots = server.lobbyInfo.Slots.Keys.ToArray();  						LoadMap(server);  						SetDefaultDifficulty(server);    						// Reassign players into new slots based on their old slots:  						//  - Observers remain as observers  						//  - Players who now lack a slot are made observers  						//  - Bots who now lack a slot are dropped  						var slots = server.lobbyInfo.Slots.Keys.ToArray();  						int i = 0;  						foreach (var os in oldSlots)  						{  							var c = server.lobbyInfo.ClientInSlot(os);  							if (c == null)  								continue;    							c.SpawnPoint = 0;  							c.State = Session.ClientState.NotReady;  							c.Slot = i < slots.Length ? slots[i++] : null;  							if (c.Slot != null)  							{  								// Remove Bot from slot if slot forbids bots  								if (c.Bot != null && !server.Map.Players[c.Slot].AllowBots)  									server.lobbyInfo.Clients.Remove(c);  								S.SyncClientToPlayerReference(c' server.Map.Players[c.Slot]);  							}  							else if (c.Bot != null)  								server.lobbyInfo.Clients.Remove(c);  						}    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "lockteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.LockTeams);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "allowcheats"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.AllowCheats);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "assignteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						int teams;  						if (!int.TryParse(s' out teams))  						{  							server.SendChatTo(conn' "Number of teams could not be parsed: {0}".F(s));  							return true;  						}  						teams = teams.Clamp(2' 8);    						var players = server.lobbyInfo.Slots  							.Select(slot => server.lobbyInfo.Clients.SingleOrDefault(c => c.Slot == slot.Key))  							.Where(c => c != null && !server.lobbyInfo.Slots[c.Slot].LockTeam).ToArray();  						if (players.Length < 2)  						{  							server.SendChatTo(conn' "Not enough players to assign teams");  							return true;  						}  						if (teams > players.Length)  						{  							server.SendChatTo(conn' "Too many teams for the number of players");  							return true;  						}    						var teamSizes = new int[players.Length];  						for (var i = 0; i < players.Length; i++)  							teamSizes[i % teams]++;    						var playerIndex = 0;  						for (var team = 1; team <= teams; team++)  						{  							for (var teamPlayerIndex = 0; teamPlayerIndex < teamSizes[team - 1]; playerIndex++' teamPlayerIndex++)  							{  								var cl = players[playerIndex];  								if (cl.Bot == null)  									cl.State = Session.ClientState.NotReady;  								cl.Team = team;  							}  						}  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "crates"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.Crates);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "difficulty"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}  						if ((server.Map.Difficulties == null && s != null) || (server.Map.Difficulties != null && !server.Map.Difficulties.Contains(s)))  						{  							server.SendChatTo(conn' "Unsupported difficulty selected: {0}".F(s));  							server.SendChatTo(conn' "Supported difficulties: {0}".F(server.Map.Difficulties.JoinWith("'")));  							return true;  						}    						server.lobbyInfo.GlobalSettings.Difficulty = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "kick"'  					s =>  					{    						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can kick players" );  							return true;  						}    						int clientID;  						int.TryParse( s' out clientID );    						var connToKick = server.conns.SingleOrDefault( c => server.GetClient(c) != null && server.GetClient(c).Index == clientID);  						if (connToKick == null)  						{  							server.SendChatTo( conn' "Noone in that slot." );  							return true;  						}    						server.SendOrderTo(connToKick' "ServerError"' "You have been kicked from the server");  						server.DropClient(connToKick);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "name"'  					s =>  					{  						Log.Write("server"' "Player@{0} is now known as {1}"' conn.socket.RemoteEndPoint' s);  						client.Name = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "race"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled race changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockRace)  							return true;    						targetClient.Country = parts[1];  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "team"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled team changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockTeam)  							return true;    						int team;  						if (!int.TryParse(parts[1]' out team)) { Log.Write("server"' "Invalid team: {0}"' s ); return false; }    						targetClient.Team = team;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "spawn"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Spectators don't need a spawnpoint  						if (targetClient.Slot == null)  							return true;    						// Map has disabled spawn changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockSpawn)  							return true;    						int spawnPoint;  						if (!int.TryParse(parts[1]' out spawnPoint) || spawnPoint < 0 || spawnPoint > server.Map.GetSpawnPoints().Length)  						{  							Log.Write("server"' "Invalid spawn point: {0}"' parts[1]);  							return true;  						}    						if (server.lobbyInfo.Clients.Where( cc => cc != client ).Any( cc => (cc.SpawnPoint == spawnPoint) && (cc.SpawnPoint != 0) ))  						{  							server.SendChatTo( conn' "You can't be at the same spawn point as another player" );  							return true;  						}    						targetClient.SpawnPoint = spawnPoint;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "color"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled color changes  						if (targetClient.Slot != null && server.lobbyInfo.Slots[targetClient.Slot].LockColor)  							return true;    						var ci = parts[1].Split(''').Select(cc => int.Parse(cc)).ToArray();  						targetClient.ColorRamp = targetClient.PreferredColorRamp = new ColorRamp((byte)ci[0]' (byte)ci[1]' (byte)ci[2]' (byte)ci[3]);  						server.SyncLobbyInfo();  						return true;  					}}  			};
Magic Number,OpenRA.Mods.RA.Server,LobbyCommands,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ServerTraits\LobbyCommands.cs,InterpretCommand,The following statement contains a magic number: var dict = new Dictionary<string' Func<string' bool>>  			{  				{ "ready"'  					s =>  					{  						// if we're downloading' we can't ready up.  						if (client.State == Session.ClientState.NotReady)  							client.State = Session.ClientState.Ready;  						else if (client.State == Session.ClientState.Ready)  							client.State = Session.ClientState.NotReady;    						Log.Write("server"' "Player @{0} is {1}"'  							conn.socket.RemoteEndPoint' client.State);    						server.SyncLobbyInfo();    						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "startgame"'  					s =>  					{  						if (server.lobbyInfo.Slots.Any(sl => sl.Value.Required &&   							server.lobbyInfo.ClientInSlot(sl.Key) == null))  						{  							server.SendChat(conn' "Unable to start the game until required slots are full.");  							return true;  						}  						server.StartGame();  						return true;  					}}'  				{ "lag"'  					s =>  					{  						int lag;  						if (!int.TryParse(s' out lag)) { Log.Write("server"' "Invalid order lag: {0}"' s); return false; }    						Log.Write("server"' "Order lag is now {0} frames."' lag);    						server.lobbyInfo.GlobalSettings.OrderLatency = lag;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot"'  					s =>  					{  						if (!server.lobbyInfo.Slots.ContainsKey(s))  						{  							Log.Write("server"' "Invalid slot: {0}"' s );  							return false;  						}  						var slot = server.lobbyInfo.Slots[s];    						if (slot.Closed || server.lobbyInfo.ClientInSlot(s) != null)  							return false;    						client.Slot = s;  						S.SyncClientToPlayerReference(client' server.Map.Players[s]);    						server.SyncLobbyInfo();  						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "spectate"'  					s =>  					{  						client.Slot = null;  						client.SpawnPoint = 0;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_close"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						// kick any player that's in the slot  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null)  						{  							if (occupant.Bot != null)  								server.lobbyInfo.Clients.Remove(occupant);  							else  							{  								var occupantConn = server.conns.FirstOrDefault( c => c.PlayerIndex == occupant.Index );  								if (occupantConn != null)  								{  									server.SendOrderTo(occupantConn' "ServerError"' "Your slot was closed by the host");  									server.DropClient(occupantConn);  								}  							}  						}    						server.lobbyInfo.Slots[s].Closed = true;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_open"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						var slot = server.lobbyInfo.Slots[s];  						slot.Closed = false;    						// Slot may have a bot in it  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null && occupant.Bot != null)  							server.lobbyInfo.Clients.Remove(occupant);    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_bot"'  					s =>  					{  						var parts = s.Split(' ');    						if (parts.Length < 2)  						{  							server.SendChatTo( conn' "Malformed slot_bot command" );  							return true;  						}    						if (!ValidateSlotCommand( server' conn' client' parts[0]' true ))  							return false;    						var slot = server.lobbyInfo.Slots[parts[0]];  						var bot = server.lobbyInfo.ClientInSlot(parts[0]);  						var botType = parts.Skip(1).JoinWith(" ");    						// Invalid slot  						if (bot != null && bot.Bot == null)  						{  							server.SendChatTo( conn' "Can't add bots to a slot with another client" );  							return true;  						}    						slot.Closed = false;  						if (bot == null)  						{  							// Create a new bot  							bot = new Session.Client()  							{  								Index = server.ChooseFreePlayerIndex()'  								Name = botType'  								Bot = botType'  								Slot = parts[0]'  								Country = "random"'  								SpawnPoint = 0'  								Team = 0'  								State = Session.ClientState.NotReady  							};    							// pick a random color for the bot  							var hue = (byte)server.Random.Next(255);  							var sat = (byte)server.Random.Next(255);  							var lum = (byte)server.Random.Next(51'255);  							bot.ColorRamp = bot.PreferredColorRamp = new ColorRamp(hue' sat' lum' 10);    							server.lobbyInfo.Clients.Add(bot);  						}  						else  						{  							// Change the type of the existing bot  							bot.Name = botType;  							bot.Bot = botType;  						}    						S.SyncClientToPlayerReference(bot' server.Map.Players[parts[0]]);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "map"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can change the map" );  							return true;  						}  						if(!server.ModData.AvailableMaps.ContainsKey(s))  						{  							server.SendChatTo( conn' "Map not found");  							return true;  						}  						server.lobbyInfo.GlobalSettings.Map = s;  						var oldSlots = server.lobbyInfo.Slots.Keys.ToArray();  						LoadMap(server);  						SetDefaultDifficulty(server);    						// Reassign players into new slots based on their old slots:  						//  - Observers remain as observers  						//  - Players who now lack a slot are made observers  						//  - Bots who now lack a slot are dropped  						var slots = server.lobbyInfo.Slots.Keys.ToArray();  						int i = 0;  						foreach (var os in oldSlots)  						{  							var c = server.lobbyInfo.ClientInSlot(os);  							if (c == null)  								continue;    							c.SpawnPoint = 0;  							c.State = Session.ClientState.NotReady;  							c.Slot = i < slots.Length ? slots[i++] : null;  							if (c.Slot != null)  							{  								// Remove Bot from slot if slot forbids bots  								if (c.Bot != null && !server.Map.Players[c.Slot].AllowBots)  									server.lobbyInfo.Clients.Remove(c);  								S.SyncClientToPlayerReference(c' server.Map.Players[c.Slot]);  							}  							else if (c.Bot != null)  								server.lobbyInfo.Clients.Remove(c);  						}    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "lockteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.LockTeams);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "allowcheats"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.AllowCheats);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "assignteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						int teams;  						if (!int.TryParse(s' out teams))  						{  							server.SendChatTo(conn' "Number of teams could not be parsed: {0}".F(s));  							return true;  						}  						teams = teams.Clamp(2' 8);    						var players = server.lobbyInfo.Slots  							.Select(slot => server.lobbyInfo.Clients.SingleOrDefault(c => c.Slot == slot.Key))  							.Where(c => c != null && !server.lobbyInfo.Slots[c.Slot].LockTeam).ToArray();  						if (players.Length < 2)  						{  							server.SendChatTo(conn' "Not enough players to assign teams");  							return true;  						}  						if (teams > players.Length)  						{  							server.SendChatTo(conn' "Too many teams for the number of players");  							return true;  						}    						var teamSizes = new int[players.Length];  						for (var i = 0; i < players.Length; i++)  							teamSizes[i % teams]++;    						var playerIndex = 0;  						for (var team = 1; team <= teams; team++)  						{  							for (var teamPlayerIndex = 0; teamPlayerIndex < teamSizes[team - 1]; playerIndex++' teamPlayerIndex++)  							{  								var cl = players[playerIndex];  								if (cl.Bot == null)  									cl.State = Session.ClientState.NotReady;  								cl.Team = team;  							}  						}  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "crates"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.Crates);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "difficulty"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}  						if ((server.Map.Difficulties == null && s != null) || (server.Map.Difficulties != null && !server.Map.Difficulties.Contains(s)))  						{  							server.SendChatTo(conn' "Unsupported difficulty selected: {0}".F(s));  							server.SendChatTo(conn' "Supported difficulties: {0}".F(server.Map.Difficulties.JoinWith("'")));  							return true;  						}    						server.lobbyInfo.GlobalSettings.Difficulty = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "kick"'  					s =>  					{    						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can kick players" );  							return true;  						}    						int clientID;  						int.TryParse( s' out clientID );    						var connToKick = server.conns.SingleOrDefault( c => server.GetClient(c) != null && server.GetClient(c).Index == clientID);  						if (connToKick == null)  						{  							server.SendChatTo( conn' "Noone in that slot." );  							return true;  						}    						server.SendOrderTo(connToKick' "ServerError"' "You have been kicked from the server");  						server.DropClient(connToKick);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "name"'  					s =>  					{  						Log.Write("server"' "Player@{0} is now known as {1}"' conn.socket.RemoteEndPoint' s);  						client.Name = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "race"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled race changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockRace)  							return true;    						targetClient.Country = parts[1];  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "team"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled team changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockTeam)  							return true;    						int team;  						if (!int.TryParse(parts[1]' out team)) { Log.Write("server"' "Invalid team: {0}"' s ); return false; }    						targetClient.Team = team;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "spawn"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Spectators don't need a spawnpoint  						if (targetClient.Slot == null)  							return true;    						// Map has disabled spawn changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockSpawn)  							return true;    						int spawnPoint;  						if (!int.TryParse(parts[1]' out spawnPoint) || spawnPoint < 0 || spawnPoint > server.Map.GetSpawnPoints().Length)  						{  							Log.Write("server"' "Invalid spawn point: {0}"' parts[1]);  							return true;  						}    						if (server.lobbyInfo.Clients.Where( cc => cc != client ).Any( cc => (cc.SpawnPoint == spawnPoint) && (cc.SpawnPoint != 0) ))  						{  							server.SendChatTo( conn' "You can't be at the same spawn point as another player" );  							return true;  						}    						targetClient.SpawnPoint = spawnPoint;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "color"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled color changes  						if (targetClient.Slot != null && server.lobbyInfo.Slots[targetClient.Slot].LockColor)  							return true;    						var ci = parts[1].Split(''').Select(cc => int.Parse(cc)).ToArray();  						targetClient.ColorRamp = targetClient.PreferredColorRamp = new ColorRamp((byte)ci[0]' (byte)ci[1]' (byte)ci[2]' (byte)ci[3]);  						server.SyncLobbyInfo();  						return true;  					}}  			};
Magic Number,OpenRA.Mods.RA.Server,LobbyCommands,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ServerTraits\LobbyCommands.cs,InterpretCommand,The following statement contains a magic number: var dict = new Dictionary<string' Func<string' bool>>  			{  				{ "ready"'  					s =>  					{  						// if we're downloading' we can't ready up.  						if (client.State == Session.ClientState.NotReady)  							client.State = Session.ClientState.Ready;  						else if (client.State == Session.ClientState.Ready)  							client.State = Session.ClientState.NotReady;    						Log.Write("server"' "Player @{0} is {1}"'  							conn.socket.RemoteEndPoint' client.State);    						server.SyncLobbyInfo();    						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "startgame"'  					s =>  					{  						if (server.lobbyInfo.Slots.Any(sl => sl.Value.Required &&   							server.lobbyInfo.ClientInSlot(sl.Key) == null))  						{  							server.SendChat(conn' "Unable to start the game until required slots are full.");  							return true;  						}  						server.StartGame();  						return true;  					}}'  				{ "lag"'  					s =>  					{  						int lag;  						if (!int.TryParse(s' out lag)) { Log.Write("server"' "Invalid order lag: {0}"' s); return false; }    						Log.Write("server"' "Order lag is now {0} frames."' lag);    						server.lobbyInfo.GlobalSettings.OrderLatency = lag;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot"'  					s =>  					{  						if (!server.lobbyInfo.Slots.ContainsKey(s))  						{  							Log.Write("server"' "Invalid slot: {0}"' s );  							return false;  						}  						var slot = server.lobbyInfo.Slots[s];    						if (slot.Closed || server.lobbyInfo.ClientInSlot(s) != null)  							return false;    						client.Slot = s;  						S.SyncClientToPlayerReference(client' server.Map.Players[s]);    						server.SyncLobbyInfo();  						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "spectate"'  					s =>  					{  						client.Slot = null;  						client.SpawnPoint = 0;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_close"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						// kick any player that's in the slot  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null)  						{  							if (occupant.Bot != null)  								server.lobbyInfo.Clients.Remove(occupant);  							else  							{  								var occupantConn = server.conns.FirstOrDefault( c => c.PlayerIndex == occupant.Index );  								if (occupantConn != null)  								{  									server.SendOrderTo(occupantConn' "ServerError"' "Your slot was closed by the host");  									server.DropClient(occupantConn);  								}  							}  						}    						server.lobbyInfo.Slots[s].Closed = true;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_open"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						var slot = server.lobbyInfo.Slots[s];  						slot.Closed = false;    						// Slot may have a bot in it  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null && occupant.Bot != null)  							server.lobbyInfo.Clients.Remove(occupant);    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_bot"'  					s =>  					{  						var parts = s.Split(' ');    						if (parts.Length < 2)  						{  							server.SendChatTo( conn' "Malformed slot_bot command" );  							return true;  						}    						if (!ValidateSlotCommand( server' conn' client' parts[0]' true ))  							return false;    						var slot = server.lobbyInfo.Slots[parts[0]];  						var bot = server.lobbyInfo.ClientInSlot(parts[0]);  						var botType = parts.Skip(1).JoinWith(" ");    						// Invalid slot  						if (bot != null && bot.Bot == null)  						{  							server.SendChatTo( conn' "Can't add bots to a slot with another client" );  							return true;  						}    						slot.Closed = false;  						if (bot == null)  						{  							// Create a new bot  							bot = new Session.Client()  							{  								Index = server.ChooseFreePlayerIndex()'  								Name = botType'  								Bot = botType'  								Slot = parts[0]'  								Country = "random"'  								SpawnPoint = 0'  								Team = 0'  								State = Session.ClientState.NotReady  							};    							// pick a random color for the bot  							var hue = (byte)server.Random.Next(255);  							var sat = (byte)server.Random.Next(255);  							var lum = (byte)server.Random.Next(51'255);  							bot.ColorRamp = bot.PreferredColorRamp = new ColorRamp(hue' sat' lum' 10);    							server.lobbyInfo.Clients.Add(bot);  						}  						else  						{  							// Change the type of the existing bot  							bot.Name = botType;  							bot.Bot = botType;  						}    						S.SyncClientToPlayerReference(bot' server.Map.Players[parts[0]]);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "map"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can change the map" );  							return true;  						}  						if(!server.ModData.AvailableMaps.ContainsKey(s))  						{  							server.SendChatTo( conn' "Map not found");  							return true;  						}  						server.lobbyInfo.GlobalSettings.Map = s;  						var oldSlots = server.lobbyInfo.Slots.Keys.ToArray();  						LoadMap(server);  						SetDefaultDifficulty(server);    						// Reassign players into new slots based on their old slots:  						//  - Observers remain as observers  						//  - Players who now lack a slot are made observers  						//  - Bots who now lack a slot are dropped  						var slots = server.lobbyInfo.Slots.Keys.ToArray();  						int i = 0;  						foreach (var os in oldSlots)  						{  							var c = server.lobbyInfo.ClientInSlot(os);  							if (c == null)  								continue;    							c.SpawnPoint = 0;  							c.State = Session.ClientState.NotReady;  							c.Slot = i < slots.Length ? slots[i++] : null;  							if (c.Slot != null)  							{  								// Remove Bot from slot if slot forbids bots  								if (c.Bot != null && !server.Map.Players[c.Slot].AllowBots)  									server.lobbyInfo.Clients.Remove(c);  								S.SyncClientToPlayerReference(c' server.Map.Players[c.Slot]);  							}  							else if (c.Bot != null)  								server.lobbyInfo.Clients.Remove(c);  						}    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "lockteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.LockTeams);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "allowcheats"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.AllowCheats);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "assignteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						int teams;  						if (!int.TryParse(s' out teams))  						{  							server.SendChatTo(conn' "Number of teams could not be parsed: {0}".F(s));  							return true;  						}  						teams = teams.Clamp(2' 8);    						var players = server.lobbyInfo.Slots  							.Select(slot => server.lobbyInfo.Clients.SingleOrDefault(c => c.Slot == slot.Key))  							.Where(c => c != null && !server.lobbyInfo.Slots[c.Slot].LockTeam).ToArray();  						if (players.Length < 2)  						{  							server.SendChatTo(conn' "Not enough players to assign teams");  							return true;  						}  						if (teams > players.Length)  						{  							server.SendChatTo(conn' "Too many teams for the number of players");  							return true;  						}    						var teamSizes = new int[players.Length];  						for (var i = 0; i < players.Length; i++)  							teamSizes[i % teams]++;    						var playerIndex = 0;  						for (var team = 1; team <= teams; team++)  						{  							for (var teamPlayerIndex = 0; teamPlayerIndex < teamSizes[team - 1]; playerIndex++' teamPlayerIndex++)  							{  								var cl = players[playerIndex];  								if (cl.Bot == null)  									cl.State = Session.ClientState.NotReady;  								cl.Team = team;  							}  						}  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "crates"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.Crates);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "difficulty"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}  						if ((server.Map.Difficulties == null && s != null) || (server.Map.Difficulties != null && !server.Map.Difficulties.Contains(s)))  						{  							server.SendChatTo(conn' "Unsupported difficulty selected: {0}".F(s));  							server.SendChatTo(conn' "Supported difficulties: {0}".F(server.Map.Difficulties.JoinWith("'")));  							return true;  						}    						server.lobbyInfo.GlobalSettings.Difficulty = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "kick"'  					s =>  					{    						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can kick players" );  							return true;  						}    						int clientID;  						int.TryParse( s' out clientID );    						var connToKick = server.conns.SingleOrDefault( c => server.GetClient(c) != null && server.GetClient(c).Index == clientID);  						if (connToKick == null)  						{  							server.SendChatTo( conn' "Noone in that slot." );  							return true;  						}    						server.SendOrderTo(connToKick' "ServerError"' "You have been kicked from the server");  						server.DropClient(connToKick);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "name"'  					s =>  					{  						Log.Write("server"' "Player@{0} is now known as {1}"' conn.socket.RemoteEndPoint' s);  						client.Name = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "race"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled race changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockRace)  							return true;    						targetClient.Country = parts[1];  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "team"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled team changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockTeam)  							return true;    						int team;  						if (!int.TryParse(parts[1]' out team)) { Log.Write("server"' "Invalid team: {0}"' s ); return false; }    						targetClient.Team = team;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "spawn"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Spectators don't need a spawnpoint  						if (targetClient.Slot == null)  							return true;    						// Map has disabled spawn changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockSpawn)  							return true;    						int spawnPoint;  						if (!int.TryParse(parts[1]' out spawnPoint) || spawnPoint < 0 || spawnPoint > server.Map.GetSpawnPoints().Length)  						{  							Log.Write("server"' "Invalid spawn point: {0}"' parts[1]);  							return true;  						}    						if (server.lobbyInfo.Clients.Where( cc => cc != client ).Any( cc => (cc.SpawnPoint == spawnPoint) && (cc.SpawnPoint != 0) ))  						{  							server.SendChatTo( conn' "You can't be at the same spawn point as another player" );  							return true;  						}    						targetClient.SpawnPoint = spawnPoint;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "color"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled color changes  						if (targetClient.Slot != null && server.lobbyInfo.Slots[targetClient.Slot].LockColor)  							return true;    						var ci = parts[1].Split(''').Select(cc => int.Parse(cc)).ToArray();  						targetClient.ColorRamp = targetClient.PreferredColorRamp = new ColorRamp((byte)ci[0]' (byte)ci[1]' (byte)ci[2]' (byte)ci[3]);  						server.SyncLobbyInfo();  						return true;  					}}  			};
Magic Number,OpenRA.Mods.RA.Server,LobbyCommands,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ServerTraits\LobbyCommands.cs,InterpretCommand,The following statement contains a magic number: var dict = new Dictionary<string' Func<string' bool>>  			{  				{ "ready"'  					s =>  					{  						// if we're downloading' we can't ready up.  						if (client.State == Session.ClientState.NotReady)  							client.State = Session.ClientState.Ready;  						else if (client.State == Session.ClientState.Ready)  							client.State = Session.ClientState.NotReady;    						Log.Write("server"' "Player @{0} is {1}"'  							conn.socket.RemoteEndPoint' client.State);    						server.SyncLobbyInfo();    						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "startgame"'  					s =>  					{  						if (server.lobbyInfo.Slots.Any(sl => sl.Value.Required &&   							server.lobbyInfo.ClientInSlot(sl.Key) == null))  						{  							server.SendChat(conn' "Unable to start the game until required slots are full.");  							return true;  						}  						server.StartGame();  						return true;  					}}'  				{ "lag"'  					s =>  					{  						int lag;  						if (!int.TryParse(s' out lag)) { Log.Write("server"' "Invalid order lag: {0}"' s); return false; }    						Log.Write("server"' "Order lag is now {0} frames."' lag);    						server.lobbyInfo.GlobalSettings.OrderLatency = lag;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot"'  					s =>  					{  						if (!server.lobbyInfo.Slots.ContainsKey(s))  						{  							Log.Write("server"' "Invalid slot: {0}"' s );  							return false;  						}  						var slot = server.lobbyInfo.Slots[s];    						if (slot.Closed || server.lobbyInfo.ClientInSlot(s) != null)  							return false;    						client.Slot = s;  						S.SyncClientToPlayerReference(client' server.Map.Players[s]);    						server.SyncLobbyInfo();  						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "spectate"'  					s =>  					{  						client.Slot = null;  						client.SpawnPoint = 0;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_close"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						// kick any player that's in the slot  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null)  						{  							if (occupant.Bot != null)  								server.lobbyInfo.Clients.Remove(occupant);  							else  							{  								var occupantConn = server.conns.FirstOrDefault( c => c.PlayerIndex == occupant.Index );  								if (occupantConn != null)  								{  									server.SendOrderTo(occupantConn' "ServerError"' "Your slot was closed by the host");  									server.DropClient(occupantConn);  								}  							}  						}    						server.lobbyInfo.Slots[s].Closed = true;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_open"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						var slot = server.lobbyInfo.Slots[s];  						slot.Closed = false;    						// Slot may have a bot in it  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null && occupant.Bot != null)  							server.lobbyInfo.Clients.Remove(occupant);    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_bot"'  					s =>  					{  						var parts = s.Split(' ');    						if (parts.Length < 2)  						{  							server.SendChatTo( conn' "Malformed slot_bot command" );  							return true;  						}    						if (!ValidateSlotCommand( server' conn' client' parts[0]' true ))  							return false;    						var slot = server.lobbyInfo.Slots[parts[0]];  						var bot = server.lobbyInfo.ClientInSlot(parts[0]);  						var botType = parts.Skip(1).JoinWith(" ");    						// Invalid slot  						if (bot != null && bot.Bot == null)  						{  							server.SendChatTo( conn' "Can't add bots to a slot with another client" );  							return true;  						}    						slot.Closed = false;  						if (bot == null)  						{  							// Create a new bot  							bot = new Session.Client()  							{  								Index = server.ChooseFreePlayerIndex()'  								Name = botType'  								Bot = botType'  								Slot = parts[0]'  								Country = "random"'  								SpawnPoint = 0'  								Team = 0'  								State = Session.ClientState.NotReady  							};    							// pick a random color for the bot  							var hue = (byte)server.Random.Next(255);  							var sat = (byte)server.Random.Next(255);  							var lum = (byte)server.Random.Next(51'255);  							bot.ColorRamp = bot.PreferredColorRamp = new ColorRamp(hue' sat' lum' 10);    							server.lobbyInfo.Clients.Add(bot);  						}  						else  						{  							// Change the type of the existing bot  							bot.Name = botType;  							bot.Bot = botType;  						}    						S.SyncClientToPlayerReference(bot' server.Map.Players[parts[0]]);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "map"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can change the map" );  							return true;  						}  						if(!server.ModData.AvailableMaps.ContainsKey(s))  						{  							server.SendChatTo( conn' "Map not found");  							return true;  						}  						server.lobbyInfo.GlobalSettings.Map = s;  						var oldSlots = server.lobbyInfo.Slots.Keys.ToArray();  						LoadMap(server);  						SetDefaultDifficulty(server);    						// Reassign players into new slots based on their old slots:  						//  - Observers remain as observers  						//  - Players who now lack a slot are made observers  						//  - Bots who now lack a slot are dropped  						var slots = server.lobbyInfo.Slots.Keys.ToArray();  						int i = 0;  						foreach (var os in oldSlots)  						{  							var c = server.lobbyInfo.ClientInSlot(os);  							if (c == null)  								continue;    							c.SpawnPoint = 0;  							c.State = Session.ClientState.NotReady;  							c.Slot = i < slots.Length ? slots[i++] : null;  							if (c.Slot != null)  							{  								// Remove Bot from slot if slot forbids bots  								if (c.Bot != null && !server.Map.Players[c.Slot].AllowBots)  									server.lobbyInfo.Clients.Remove(c);  								S.SyncClientToPlayerReference(c' server.Map.Players[c.Slot]);  							}  							else if (c.Bot != null)  								server.lobbyInfo.Clients.Remove(c);  						}    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "lockteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.LockTeams);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "allowcheats"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.AllowCheats);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "assignteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						int teams;  						if (!int.TryParse(s' out teams))  						{  							server.SendChatTo(conn' "Number of teams could not be parsed: {0}".F(s));  							return true;  						}  						teams = teams.Clamp(2' 8);    						var players = server.lobbyInfo.Slots  							.Select(slot => server.lobbyInfo.Clients.SingleOrDefault(c => c.Slot == slot.Key))  							.Where(c => c != null && !server.lobbyInfo.Slots[c.Slot].LockTeam).ToArray();  						if (players.Length < 2)  						{  							server.SendChatTo(conn' "Not enough players to assign teams");  							return true;  						}  						if (teams > players.Length)  						{  							server.SendChatTo(conn' "Too many teams for the number of players");  							return true;  						}    						var teamSizes = new int[players.Length];  						for (var i = 0; i < players.Length; i++)  							teamSizes[i % teams]++;    						var playerIndex = 0;  						for (var team = 1; team <= teams; team++)  						{  							for (var teamPlayerIndex = 0; teamPlayerIndex < teamSizes[team - 1]; playerIndex++' teamPlayerIndex++)  							{  								var cl = players[playerIndex];  								if (cl.Bot == null)  									cl.State = Session.ClientState.NotReady;  								cl.Team = team;  							}  						}  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "crates"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.Crates);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "difficulty"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}  						if ((server.Map.Difficulties == null && s != null) || (server.Map.Difficulties != null && !server.Map.Difficulties.Contains(s)))  						{  							server.SendChatTo(conn' "Unsupported difficulty selected: {0}".F(s));  							server.SendChatTo(conn' "Supported difficulties: {0}".F(server.Map.Difficulties.JoinWith("'")));  							return true;  						}    						server.lobbyInfo.GlobalSettings.Difficulty = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "kick"'  					s =>  					{    						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can kick players" );  							return true;  						}    						int clientID;  						int.TryParse( s' out clientID );    						var connToKick = server.conns.SingleOrDefault( c => server.GetClient(c) != null && server.GetClient(c).Index == clientID);  						if (connToKick == null)  						{  							server.SendChatTo( conn' "Noone in that slot." );  							return true;  						}    						server.SendOrderTo(connToKick' "ServerError"' "You have been kicked from the server");  						server.DropClient(connToKick);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "name"'  					s =>  					{  						Log.Write("server"' "Player@{0} is now known as {1}"' conn.socket.RemoteEndPoint' s);  						client.Name = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "race"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled race changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockRace)  							return true;    						targetClient.Country = parts[1];  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "team"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled team changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockTeam)  							return true;    						int team;  						if (!int.TryParse(parts[1]' out team)) { Log.Write("server"' "Invalid team: {0}"' s ); return false; }    						targetClient.Team = team;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "spawn"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Spectators don't need a spawnpoint  						if (targetClient.Slot == null)  							return true;    						// Map has disabled spawn changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockSpawn)  							return true;    						int spawnPoint;  						if (!int.TryParse(parts[1]' out spawnPoint) || spawnPoint < 0 || spawnPoint > server.Map.GetSpawnPoints().Length)  						{  							Log.Write("server"' "Invalid spawn point: {0}"' parts[1]);  							return true;  						}    						if (server.lobbyInfo.Clients.Where( cc => cc != client ).Any( cc => (cc.SpawnPoint == spawnPoint) && (cc.SpawnPoint != 0) ))  						{  							server.SendChatTo( conn' "You can't be at the same spawn point as another player" );  							return true;  						}    						targetClient.SpawnPoint = spawnPoint;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "color"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled color changes  						if (targetClient.Slot != null && server.lobbyInfo.Slots[targetClient.Slot].LockColor)  							return true;    						var ci = parts[1].Split(''').Select(cc => int.Parse(cc)).ToArray();  						targetClient.ColorRamp = targetClient.PreferredColorRamp = new ColorRamp((byte)ci[0]' (byte)ci[1]' (byte)ci[2]' (byte)ci[3]);  						server.SyncLobbyInfo();  						return true;  					}}  			};
Magic Number,OpenRA.Mods.RA.Server,LobbyCommands,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ServerTraits\LobbyCommands.cs,InterpretCommand,The following statement contains a magic number: var dict = new Dictionary<string' Func<string' bool>>  			{  				{ "ready"'  					s =>  					{  						// if we're downloading' we can't ready up.  						if (client.State == Session.ClientState.NotReady)  							client.State = Session.ClientState.Ready;  						else if (client.State == Session.ClientState.Ready)  							client.State = Session.ClientState.NotReady;    						Log.Write("server"' "Player @{0} is {1}"'  							conn.socket.RemoteEndPoint' client.State);    						server.SyncLobbyInfo();    						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "startgame"'  					s =>  					{  						if (server.lobbyInfo.Slots.Any(sl => sl.Value.Required &&   							server.lobbyInfo.ClientInSlot(sl.Key) == null))  						{  							server.SendChat(conn' "Unable to start the game until required slots are full.");  							return true;  						}  						server.StartGame();  						return true;  					}}'  				{ "lag"'  					s =>  					{  						int lag;  						if (!int.TryParse(s' out lag)) { Log.Write("server"' "Invalid order lag: {0}"' s); return false; }    						Log.Write("server"' "Order lag is now {0} frames."' lag);    						server.lobbyInfo.GlobalSettings.OrderLatency = lag;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot"'  					s =>  					{  						if (!server.lobbyInfo.Slots.ContainsKey(s))  						{  							Log.Write("server"' "Invalid slot: {0}"' s );  							return false;  						}  						var slot = server.lobbyInfo.Slots[s];    						if (slot.Closed || server.lobbyInfo.ClientInSlot(s) != null)  							return false;    						client.Slot = s;  						S.SyncClientToPlayerReference(client' server.Map.Players[s]);    						server.SyncLobbyInfo();  						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "spectate"'  					s =>  					{  						client.Slot = null;  						client.SpawnPoint = 0;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_close"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						// kick any player that's in the slot  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null)  						{  							if (occupant.Bot != null)  								server.lobbyInfo.Clients.Remove(occupant);  							else  							{  								var occupantConn = server.conns.FirstOrDefault( c => c.PlayerIndex == occupant.Index );  								if (occupantConn != null)  								{  									server.SendOrderTo(occupantConn' "ServerError"' "Your slot was closed by the host");  									server.DropClient(occupantConn);  								}  							}  						}    						server.lobbyInfo.Slots[s].Closed = true;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_open"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						var slot = server.lobbyInfo.Slots[s];  						slot.Closed = false;    						// Slot may have a bot in it  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null && occupant.Bot != null)  							server.lobbyInfo.Clients.Remove(occupant);    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_bot"'  					s =>  					{  						var parts = s.Split(' ');    						if (parts.Length < 2)  						{  							server.SendChatTo( conn' "Malformed slot_bot command" );  							return true;  						}    						if (!ValidateSlotCommand( server' conn' client' parts[0]' true ))  							return false;    						var slot = server.lobbyInfo.Slots[parts[0]];  						var bot = server.lobbyInfo.ClientInSlot(parts[0]);  						var botType = parts.Skip(1).JoinWith(" ");    						// Invalid slot  						if (bot != null && bot.Bot == null)  						{  							server.SendChatTo( conn' "Can't add bots to a slot with another client" );  							return true;  						}    						slot.Closed = false;  						if (bot == null)  						{  							// Create a new bot  							bot = new Session.Client()  							{  								Index = server.ChooseFreePlayerIndex()'  								Name = botType'  								Bot = botType'  								Slot = parts[0]'  								Country = "random"'  								SpawnPoint = 0'  								Team = 0'  								State = Session.ClientState.NotReady  							};    							// pick a random color for the bot  							var hue = (byte)server.Random.Next(255);  							var sat = (byte)server.Random.Next(255);  							var lum = (byte)server.Random.Next(51'255);  							bot.ColorRamp = bot.PreferredColorRamp = new ColorRamp(hue' sat' lum' 10);    							server.lobbyInfo.Clients.Add(bot);  						}  						else  						{  							// Change the type of the existing bot  							bot.Name = botType;  							bot.Bot = botType;  						}    						S.SyncClientToPlayerReference(bot' server.Map.Players[parts[0]]);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "map"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can change the map" );  							return true;  						}  						if(!server.ModData.AvailableMaps.ContainsKey(s))  						{  							server.SendChatTo( conn' "Map not found");  							return true;  						}  						server.lobbyInfo.GlobalSettings.Map = s;  						var oldSlots = server.lobbyInfo.Slots.Keys.ToArray();  						LoadMap(server);  						SetDefaultDifficulty(server);    						// Reassign players into new slots based on their old slots:  						//  - Observers remain as observers  						//  - Players who now lack a slot are made observers  						//  - Bots who now lack a slot are dropped  						var slots = server.lobbyInfo.Slots.Keys.ToArray();  						int i = 0;  						foreach (var os in oldSlots)  						{  							var c = server.lobbyInfo.ClientInSlot(os);  							if (c == null)  								continue;    							c.SpawnPoint = 0;  							c.State = Session.ClientState.NotReady;  							c.Slot = i < slots.Length ? slots[i++] : null;  							if (c.Slot != null)  							{  								// Remove Bot from slot if slot forbids bots  								if (c.Bot != null && !server.Map.Players[c.Slot].AllowBots)  									server.lobbyInfo.Clients.Remove(c);  								S.SyncClientToPlayerReference(c' server.Map.Players[c.Slot]);  							}  							else if (c.Bot != null)  								server.lobbyInfo.Clients.Remove(c);  						}    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "lockteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.LockTeams);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "allowcheats"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.AllowCheats);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "assignteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						int teams;  						if (!int.TryParse(s' out teams))  						{  							server.SendChatTo(conn' "Number of teams could not be parsed: {0}".F(s));  							return true;  						}  						teams = teams.Clamp(2' 8);    						var players = server.lobbyInfo.Slots  							.Select(slot => server.lobbyInfo.Clients.SingleOrDefault(c => c.Slot == slot.Key))  							.Where(c => c != null && !server.lobbyInfo.Slots[c.Slot].LockTeam).ToArray();  						if (players.Length < 2)  						{  							server.SendChatTo(conn' "Not enough players to assign teams");  							return true;  						}  						if (teams > players.Length)  						{  							server.SendChatTo(conn' "Too many teams for the number of players");  							return true;  						}    						var teamSizes = new int[players.Length];  						for (var i = 0; i < players.Length; i++)  							teamSizes[i % teams]++;    						var playerIndex = 0;  						for (var team = 1; team <= teams; team++)  						{  							for (var teamPlayerIndex = 0; teamPlayerIndex < teamSizes[team - 1]; playerIndex++' teamPlayerIndex++)  							{  								var cl = players[playerIndex];  								if (cl.Bot == null)  									cl.State = Session.ClientState.NotReady;  								cl.Team = team;  							}  						}  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "crates"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.Crates);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "difficulty"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}  						if ((server.Map.Difficulties == null && s != null) || (server.Map.Difficulties != null && !server.Map.Difficulties.Contains(s)))  						{  							server.SendChatTo(conn' "Unsupported difficulty selected: {0}".F(s));  							server.SendChatTo(conn' "Supported difficulties: {0}".F(server.Map.Difficulties.JoinWith("'")));  							return true;  						}    						server.lobbyInfo.GlobalSettings.Difficulty = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "kick"'  					s =>  					{    						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can kick players" );  							return true;  						}    						int clientID;  						int.TryParse( s' out clientID );    						var connToKick = server.conns.SingleOrDefault( c => server.GetClient(c) != null && server.GetClient(c).Index == clientID);  						if (connToKick == null)  						{  							server.SendChatTo( conn' "Noone in that slot." );  							return true;  						}    						server.SendOrderTo(connToKick' "ServerError"' "You have been kicked from the server");  						server.DropClient(connToKick);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "name"'  					s =>  					{  						Log.Write("server"' "Player@{0} is now known as {1}"' conn.socket.RemoteEndPoint' s);  						client.Name = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "race"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled race changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockRace)  							return true;    						targetClient.Country = parts[1];  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "team"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled team changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockTeam)  							return true;    						int team;  						if (!int.TryParse(parts[1]' out team)) { Log.Write("server"' "Invalid team: {0}"' s ); return false; }    						targetClient.Team = team;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "spawn"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Spectators don't need a spawnpoint  						if (targetClient.Slot == null)  							return true;    						// Map has disabled spawn changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockSpawn)  							return true;    						int spawnPoint;  						if (!int.TryParse(parts[1]' out spawnPoint) || spawnPoint < 0 || spawnPoint > server.Map.GetSpawnPoints().Length)  						{  							Log.Write("server"' "Invalid spawn point: {0}"' parts[1]);  							return true;  						}    						if (server.lobbyInfo.Clients.Where( cc => cc != client ).Any( cc => (cc.SpawnPoint == spawnPoint) && (cc.SpawnPoint != 0) ))  						{  							server.SendChatTo( conn' "You can't be at the same spawn point as another player" );  							return true;  						}    						targetClient.SpawnPoint = spawnPoint;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "color"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled color changes  						if (targetClient.Slot != null && server.lobbyInfo.Slots[targetClient.Slot].LockColor)  							return true;    						var ci = parts[1].Split(''').Select(cc => int.Parse(cc)).ToArray();  						targetClient.ColorRamp = targetClient.PreferredColorRamp = new ColorRamp((byte)ci[0]' (byte)ci[1]' (byte)ci[2]' (byte)ci[3]);  						server.SyncLobbyInfo();  						return true;  					}}  			};
Magic Number,OpenRA.Mods.RA.Server,LobbyCommands,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ServerTraits\LobbyCommands.cs,InterpretCommand,The following statement contains a magic number: var dict = new Dictionary<string' Func<string' bool>>  			{  				{ "ready"'  					s =>  					{  						// if we're downloading' we can't ready up.  						if (client.State == Session.ClientState.NotReady)  							client.State = Session.ClientState.Ready;  						else if (client.State == Session.ClientState.Ready)  							client.State = Session.ClientState.NotReady;    						Log.Write("server"' "Player @{0} is {1}"'  							conn.socket.RemoteEndPoint' client.State);    						server.SyncLobbyInfo();    						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "startgame"'  					s =>  					{  						if (server.lobbyInfo.Slots.Any(sl => sl.Value.Required &&   							server.lobbyInfo.ClientInSlot(sl.Key) == null))  						{  							server.SendChat(conn' "Unable to start the game until required slots are full.");  							return true;  						}  						server.StartGame();  						return true;  					}}'  				{ "lag"'  					s =>  					{  						int lag;  						if (!int.TryParse(s' out lag)) { Log.Write("server"' "Invalid order lag: {0}"' s); return false; }    						Log.Write("server"' "Order lag is now {0} frames."' lag);    						server.lobbyInfo.GlobalSettings.OrderLatency = lag;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot"'  					s =>  					{  						if (!server.lobbyInfo.Slots.ContainsKey(s))  						{  							Log.Write("server"' "Invalid slot: {0}"' s );  							return false;  						}  						var slot = server.lobbyInfo.Slots[s];    						if (slot.Closed || server.lobbyInfo.ClientInSlot(s) != null)  							return false;    						client.Slot = s;  						S.SyncClientToPlayerReference(client' server.Map.Players[s]);    						server.SyncLobbyInfo();  						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "spectate"'  					s =>  					{  						client.Slot = null;  						client.SpawnPoint = 0;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_close"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						// kick any player that's in the slot  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null)  						{  							if (occupant.Bot != null)  								server.lobbyInfo.Clients.Remove(occupant);  							else  							{  								var occupantConn = server.conns.FirstOrDefault( c => c.PlayerIndex == occupant.Index );  								if (occupantConn != null)  								{  									server.SendOrderTo(occupantConn' "ServerError"' "Your slot was closed by the host");  									server.DropClient(occupantConn);  								}  							}  						}    						server.lobbyInfo.Slots[s].Closed = true;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_open"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						var slot = server.lobbyInfo.Slots[s];  						slot.Closed = false;    						// Slot may have a bot in it  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null && occupant.Bot != null)  							server.lobbyInfo.Clients.Remove(occupant);    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_bot"'  					s =>  					{  						var parts = s.Split(' ');    						if (parts.Length < 2)  						{  							server.SendChatTo( conn' "Malformed slot_bot command" );  							return true;  						}    						if (!ValidateSlotCommand( server' conn' client' parts[0]' true ))  							return false;    						var slot = server.lobbyInfo.Slots[parts[0]];  						var bot = server.lobbyInfo.ClientInSlot(parts[0]);  						var botType = parts.Skip(1).JoinWith(" ");    						// Invalid slot  						if (bot != null && bot.Bot == null)  						{  							server.SendChatTo( conn' "Can't add bots to a slot with another client" );  							return true;  						}    						slot.Closed = false;  						if (bot == null)  						{  							// Create a new bot  							bot = new Session.Client()  							{  								Index = server.ChooseFreePlayerIndex()'  								Name = botType'  								Bot = botType'  								Slot = parts[0]'  								Country = "random"'  								SpawnPoint = 0'  								Team = 0'  								State = Session.ClientState.NotReady  							};    							// pick a random color for the bot  							var hue = (byte)server.Random.Next(255);  							var sat = (byte)server.Random.Next(255);  							var lum = (byte)server.Random.Next(51'255);  							bot.ColorRamp = bot.PreferredColorRamp = new ColorRamp(hue' sat' lum' 10);    							server.lobbyInfo.Clients.Add(bot);  						}  						else  						{  							// Change the type of the existing bot  							bot.Name = botType;  							bot.Bot = botType;  						}    						S.SyncClientToPlayerReference(bot' server.Map.Players[parts[0]]);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "map"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can change the map" );  							return true;  						}  						if(!server.ModData.AvailableMaps.ContainsKey(s))  						{  							server.SendChatTo( conn' "Map not found");  							return true;  						}  						server.lobbyInfo.GlobalSettings.Map = s;  						var oldSlots = server.lobbyInfo.Slots.Keys.ToArray();  						LoadMap(server);  						SetDefaultDifficulty(server);    						// Reassign players into new slots based on their old slots:  						//  - Observers remain as observers  						//  - Players who now lack a slot are made observers  						//  - Bots who now lack a slot are dropped  						var slots = server.lobbyInfo.Slots.Keys.ToArray();  						int i = 0;  						foreach (var os in oldSlots)  						{  							var c = server.lobbyInfo.ClientInSlot(os);  							if (c == null)  								continue;    							c.SpawnPoint = 0;  							c.State = Session.ClientState.NotReady;  							c.Slot = i < slots.Length ? slots[i++] : null;  							if (c.Slot != null)  							{  								// Remove Bot from slot if slot forbids bots  								if (c.Bot != null && !server.Map.Players[c.Slot].AllowBots)  									server.lobbyInfo.Clients.Remove(c);  								S.SyncClientToPlayerReference(c' server.Map.Players[c.Slot]);  							}  							else if (c.Bot != null)  								server.lobbyInfo.Clients.Remove(c);  						}    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "lockteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.LockTeams);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "allowcheats"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.AllowCheats);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "assignteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						int teams;  						if (!int.TryParse(s' out teams))  						{  							server.SendChatTo(conn' "Number of teams could not be parsed: {0}".F(s));  							return true;  						}  						teams = teams.Clamp(2' 8);    						var players = server.lobbyInfo.Slots  							.Select(slot => server.lobbyInfo.Clients.SingleOrDefault(c => c.Slot == slot.Key))  							.Where(c => c != null && !server.lobbyInfo.Slots[c.Slot].LockTeam).ToArray();  						if (players.Length < 2)  						{  							server.SendChatTo(conn' "Not enough players to assign teams");  							return true;  						}  						if (teams > players.Length)  						{  							server.SendChatTo(conn' "Too many teams for the number of players");  							return true;  						}    						var teamSizes = new int[players.Length];  						for (var i = 0; i < players.Length; i++)  							teamSizes[i % teams]++;    						var playerIndex = 0;  						for (var team = 1; team <= teams; team++)  						{  							for (var teamPlayerIndex = 0; teamPlayerIndex < teamSizes[team - 1]; playerIndex++' teamPlayerIndex++)  							{  								var cl = players[playerIndex];  								if (cl.Bot == null)  									cl.State = Session.ClientState.NotReady;  								cl.Team = team;  							}  						}  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "crates"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.Crates);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "difficulty"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}  						if ((server.Map.Difficulties == null && s != null) || (server.Map.Difficulties != null && !server.Map.Difficulties.Contains(s)))  						{  							server.SendChatTo(conn' "Unsupported difficulty selected: {0}".F(s));  							server.SendChatTo(conn' "Supported difficulties: {0}".F(server.Map.Difficulties.JoinWith("'")));  							return true;  						}    						server.lobbyInfo.GlobalSettings.Difficulty = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "kick"'  					s =>  					{    						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can kick players" );  							return true;  						}    						int clientID;  						int.TryParse( s' out clientID );    						var connToKick = server.conns.SingleOrDefault( c => server.GetClient(c) != null && server.GetClient(c).Index == clientID);  						if (connToKick == null)  						{  							server.SendChatTo( conn' "Noone in that slot." );  							return true;  						}    						server.SendOrderTo(connToKick' "ServerError"' "You have been kicked from the server");  						server.DropClient(connToKick);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "name"'  					s =>  					{  						Log.Write("server"' "Player@{0} is now known as {1}"' conn.socket.RemoteEndPoint' s);  						client.Name = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "race"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled race changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockRace)  							return true;    						targetClient.Country = parts[1];  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "team"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled team changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockTeam)  							return true;    						int team;  						if (!int.TryParse(parts[1]' out team)) { Log.Write("server"' "Invalid team: {0}"' s ); return false; }    						targetClient.Team = team;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "spawn"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Spectators don't need a spawnpoint  						if (targetClient.Slot == null)  							return true;    						// Map has disabled spawn changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockSpawn)  							return true;    						int spawnPoint;  						if (!int.TryParse(parts[1]' out spawnPoint) || spawnPoint < 0 || spawnPoint > server.Map.GetSpawnPoints().Length)  						{  							Log.Write("server"' "Invalid spawn point: {0}"' parts[1]);  							return true;  						}    						if (server.lobbyInfo.Clients.Where( cc => cc != client ).Any( cc => (cc.SpawnPoint == spawnPoint) && (cc.SpawnPoint != 0) ))  						{  							server.SendChatTo( conn' "You can't be at the same spawn point as another player" );  							return true;  						}    						targetClient.SpawnPoint = spawnPoint;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "color"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled color changes  						if (targetClient.Slot != null && server.lobbyInfo.Slots[targetClient.Slot].LockColor)  							return true;    						var ci = parts[1].Split(''').Select(cc => int.Parse(cc)).ToArray();  						targetClient.ColorRamp = targetClient.PreferredColorRamp = new ColorRamp((byte)ci[0]' (byte)ci[1]' (byte)ci[2]' (byte)ci[3]);  						server.SyncLobbyInfo();  						return true;  					}}  			};
Magic Number,OpenRA.Mods.RA.Server,LobbyCommands,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ServerTraits\LobbyCommands.cs,InterpretCommand,The following statement contains a magic number: var dict = new Dictionary<string' Func<string' bool>>  			{  				{ "ready"'  					s =>  					{  						// if we're downloading' we can't ready up.  						if (client.State == Session.ClientState.NotReady)  							client.State = Session.ClientState.Ready;  						else if (client.State == Session.ClientState.Ready)  							client.State = Session.ClientState.NotReady;    						Log.Write("server"' "Player @{0} is {1}"'  							conn.socket.RemoteEndPoint' client.State);    						server.SyncLobbyInfo();    						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "startgame"'  					s =>  					{  						if (server.lobbyInfo.Slots.Any(sl => sl.Value.Required &&   							server.lobbyInfo.ClientInSlot(sl.Key) == null))  						{  							server.SendChat(conn' "Unable to start the game until required slots are full.");  							return true;  						}  						server.StartGame();  						return true;  					}}'  				{ "lag"'  					s =>  					{  						int lag;  						if (!int.TryParse(s' out lag)) { Log.Write("server"' "Invalid order lag: {0}"' s); return false; }    						Log.Write("server"' "Order lag is now {0} frames."' lag);    						server.lobbyInfo.GlobalSettings.OrderLatency = lag;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot"'  					s =>  					{  						if (!server.lobbyInfo.Slots.ContainsKey(s))  						{  							Log.Write("server"' "Invalid slot: {0}"' s );  							return false;  						}  						var slot = server.lobbyInfo.Slots[s];    						if (slot.Closed || server.lobbyInfo.ClientInSlot(s) != null)  							return false;    						client.Slot = s;  						S.SyncClientToPlayerReference(client' server.Map.Players[s]);    						server.SyncLobbyInfo();  						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "spectate"'  					s =>  					{  						client.Slot = null;  						client.SpawnPoint = 0;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_close"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						// kick any player that's in the slot  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null)  						{  							if (occupant.Bot != null)  								server.lobbyInfo.Clients.Remove(occupant);  							else  							{  								var occupantConn = server.conns.FirstOrDefault( c => c.PlayerIndex == occupant.Index );  								if (occupantConn != null)  								{  									server.SendOrderTo(occupantConn' "ServerError"' "Your slot was closed by the host");  									server.DropClient(occupantConn);  								}  							}  						}    						server.lobbyInfo.Slots[s].Closed = true;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_open"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						var slot = server.lobbyInfo.Slots[s];  						slot.Closed = false;    						// Slot may have a bot in it  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null && occupant.Bot != null)  							server.lobbyInfo.Clients.Remove(occupant);    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_bot"'  					s =>  					{  						var parts = s.Split(' ');    						if (parts.Length < 2)  						{  							server.SendChatTo( conn' "Malformed slot_bot command" );  							return true;  						}    						if (!ValidateSlotCommand( server' conn' client' parts[0]' true ))  							return false;    						var slot = server.lobbyInfo.Slots[parts[0]];  						var bot = server.lobbyInfo.ClientInSlot(parts[0]);  						var botType = parts.Skip(1).JoinWith(" ");    						// Invalid slot  						if (bot != null && bot.Bot == null)  						{  							server.SendChatTo( conn' "Can't add bots to a slot with another client" );  							return true;  						}    						slot.Closed = false;  						if (bot == null)  						{  							// Create a new bot  							bot = new Session.Client()  							{  								Index = server.ChooseFreePlayerIndex()'  								Name = botType'  								Bot = botType'  								Slot = parts[0]'  								Country = "random"'  								SpawnPoint = 0'  								Team = 0'  								State = Session.ClientState.NotReady  							};    							// pick a random color for the bot  							var hue = (byte)server.Random.Next(255);  							var sat = (byte)server.Random.Next(255);  							var lum = (byte)server.Random.Next(51'255);  							bot.ColorRamp = bot.PreferredColorRamp = new ColorRamp(hue' sat' lum' 10);    							server.lobbyInfo.Clients.Add(bot);  						}  						else  						{  							// Change the type of the existing bot  							bot.Name = botType;  							bot.Bot = botType;  						}    						S.SyncClientToPlayerReference(bot' server.Map.Players[parts[0]]);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "map"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can change the map" );  							return true;  						}  						if(!server.ModData.AvailableMaps.ContainsKey(s))  						{  							server.SendChatTo( conn' "Map not found");  							return true;  						}  						server.lobbyInfo.GlobalSettings.Map = s;  						var oldSlots = server.lobbyInfo.Slots.Keys.ToArray();  						LoadMap(server);  						SetDefaultDifficulty(server);    						// Reassign players into new slots based on their old slots:  						//  - Observers remain as observers  						//  - Players who now lack a slot are made observers  						//  - Bots who now lack a slot are dropped  						var slots = server.lobbyInfo.Slots.Keys.ToArray();  						int i = 0;  						foreach (var os in oldSlots)  						{  							var c = server.lobbyInfo.ClientInSlot(os);  							if (c == null)  								continue;    							c.SpawnPoint = 0;  							c.State = Session.ClientState.NotReady;  							c.Slot = i < slots.Length ? slots[i++] : null;  							if (c.Slot != null)  							{  								// Remove Bot from slot if slot forbids bots  								if (c.Bot != null && !server.Map.Players[c.Slot].AllowBots)  									server.lobbyInfo.Clients.Remove(c);  								S.SyncClientToPlayerReference(c' server.Map.Players[c.Slot]);  							}  							else if (c.Bot != null)  								server.lobbyInfo.Clients.Remove(c);  						}    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "lockteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.LockTeams);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "allowcheats"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.AllowCheats);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "assignteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						int teams;  						if (!int.TryParse(s' out teams))  						{  							server.SendChatTo(conn' "Number of teams could not be parsed: {0}".F(s));  							return true;  						}  						teams = teams.Clamp(2' 8);    						var players = server.lobbyInfo.Slots  							.Select(slot => server.lobbyInfo.Clients.SingleOrDefault(c => c.Slot == slot.Key))  							.Where(c => c != null && !server.lobbyInfo.Slots[c.Slot].LockTeam).ToArray();  						if (players.Length < 2)  						{  							server.SendChatTo(conn' "Not enough players to assign teams");  							return true;  						}  						if (teams > players.Length)  						{  							server.SendChatTo(conn' "Too many teams for the number of players");  							return true;  						}    						var teamSizes = new int[players.Length];  						for (var i = 0; i < players.Length; i++)  							teamSizes[i % teams]++;    						var playerIndex = 0;  						for (var team = 1; team <= teams; team++)  						{  							for (var teamPlayerIndex = 0; teamPlayerIndex < teamSizes[team - 1]; playerIndex++' teamPlayerIndex++)  							{  								var cl = players[playerIndex];  								if (cl.Bot == null)  									cl.State = Session.ClientState.NotReady;  								cl.Team = team;  							}  						}  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "crates"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.Crates);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "difficulty"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}  						if ((server.Map.Difficulties == null && s != null) || (server.Map.Difficulties != null && !server.Map.Difficulties.Contains(s)))  						{  							server.SendChatTo(conn' "Unsupported difficulty selected: {0}".F(s));  							server.SendChatTo(conn' "Supported difficulties: {0}".F(server.Map.Difficulties.JoinWith("'")));  							return true;  						}    						server.lobbyInfo.GlobalSettings.Difficulty = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "kick"'  					s =>  					{    						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can kick players" );  							return true;  						}    						int clientID;  						int.TryParse( s' out clientID );    						var connToKick = server.conns.SingleOrDefault( c => server.GetClient(c) != null && server.GetClient(c).Index == clientID);  						if (connToKick == null)  						{  							server.SendChatTo( conn' "Noone in that slot." );  							return true;  						}    						server.SendOrderTo(connToKick' "ServerError"' "You have been kicked from the server");  						server.DropClient(connToKick);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "name"'  					s =>  					{  						Log.Write("server"' "Player@{0} is now known as {1}"' conn.socket.RemoteEndPoint' s);  						client.Name = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "race"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled race changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockRace)  							return true;    						targetClient.Country = parts[1];  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "team"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled team changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockTeam)  							return true;    						int team;  						if (!int.TryParse(parts[1]' out team)) { Log.Write("server"' "Invalid team: {0}"' s ); return false; }    						targetClient.Team = team;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "spawn"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Spectators don't need a spawnpoint  						if (targetClient.Slot == null)  							return true;    						// Map has disabled spawn changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockSpawn)  							return true;    						int spawnPoint;  						if (!int.TryParse(parts[1]' out spawnPoint) || spawnPoint < 0 || spawnPoint > server.Map.GetSpawnPoints().Length)  						{  							Log.Write("server"' "Invalid spawn point: {0}"' parts[1]);  							return true;  						}    						if (server.lobbyInfo.Clients.Where( cc => cc != client ).Any( cc => (cc.SpawnPoint == spawnPoint) && (cc.SpawnPoint != 0) ))  						{  							server.SendChatTo( conn' "You can't be at the same spawn point as another player" );  							return true;  						}    						targetClient.SpawnPoint = spawnPoint;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "color"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled color changes  						if (targetClient.Slot != null && server.lobbyInfo.Slots[targetClient.Slot].LockColor)  							return true;    						var ci = parts[1].Split(''').Select(cc => int.Parse(cc)).ToArray();  						targetClient.ColorRamp = targetClient.PreferredColorRamp = new ColorRamp((byte)ci[0]' (byte)ci[1]' (byte)ci[2]' (byte)ci[3]);  						server.SyncLobbyInfo();  						return true;  					}}  			};
Magic Number,OpenRA.Mods.RA.Server,LobbyCommands,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ServerTraits\LobbyCommands.cs,InterpretCommand,The following statement contains a magic number: var dict = new Dictionary<string' Func<string' bool>>  			{  				{ "ready"'  					s =>  					{  						// if we're downloading' we can't ready up.  						if (client.State == Session.ClientState.NotReady)  							client.State = Session.ClientState.Ready;  						else if (client.State == Session.ClientState.Ready)  							client.State = Session.ClientState.NotReady;    						Log.Write("server"' "Player @{0} is {1}"'  							conn.socket.RemoteEndPoint' client.State);    						server.SyncLobbyInfo();    						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "startgame"'  					s =>  					{  						if (server.lobbyInfo.Slots.Any(sl => sl.Value.Required &&   							server.lobbyInfo.ClientInSlot(sl.Key) == null))  						{  							server.SendChat(conn' "Unable to start the game until required slots are full.");  							return true;  						}  						server.StartGame();  						return true;  					}}'  				{ "lag"'  					s =>  					{  						int lag;  						if (!int.TryParse(s' out lag)) { Log.Write("server"' "Invalid order lag: {0}"' s); return false; }    						Log.Write("server"' "Order lag is now {0} frames."' lag);    						server.lobbyInfo.GlobalSettings.OrderLatency = lag;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot"'  					s =>  					{  						if (!server.lobbyInfo.Slots.ContainsKey(s))  						{  							Log.Write("server"' "Invalid slot: {0}"' s );  							return false;  						}  						var slot = server.lobbyInfo.Slots[s];    						if (slot.Closed || server.lobbyInfo.ClientInSlot(s) != null)  							return false;    						client.Slot = s;  						S.SyncClientToPlayerReference(client' server.Map.Players[s]);    						server.SyncLobbyInfo();  						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "spectate"'  					s =>  					{  						client.Slot = null;  						client.SpawnPoint = 0;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_close"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						// kick any player that's in the slot  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null)  						{  							if (occupant.Bot != null)  								server.lobbyInfo.Clients.Remove(occupant);  							else  							{  								var occupantConn = server.conns.FirstOrDefault( c => c.PlayerIndex == occupant.Index );  								if (occupantConn != null)  								{  									server.SendOrderTo(occupantConn' "ServerError"' "Your slot was closed by the host");  									server.DropClient(occupantConn);  								}  							}  						}    						server.lobbyInfo.Slots[s].Closed = true;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_open"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						var slot = server.lobbyInfo.Slots[s];  						slot.Closed = false;    						// Slot may have a bot in it  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null && occupant.Bot != null)  							server.lobbyInfo.Clients.Remove(occupant);    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_bot"'  					s =>  					{  						var parts = s.Split(' ');    						if (parts.Length < 2)  						{  							server.SendChatTo( conn' "Malformed slot_bot command" );  							return true;  						}    						if (!ValidateSlotCommand( server' conn' client' parts[0]' true ))  							return false;    						var slot = server.lobbyInfo.Slots[parts[0]];  						var bot = server.lobbyInfo.ClientInSlot(parts[0]);  						var botType = parts.Skip(1).JoinWith(" ");    						// Invalid slot  						if (bot != null && bot.Bot == null)  						{  							server.SendChatTo( conn' "Can't add bots to a slot with another client" );  							return true;  						}    						slot.Closed = false;  						if (bot == null)  						{  							// Create a new bot  							bot = new Session.Client()  							{  								Index = server.ChooseFreePlayerIndex()'  								Name = botType'  								Bot = botType'  								Slot = parts[0]'  								Country = "random"'  								SpawnPoint = 0'  								Team = 0'  								State = Session.ClientState.NotReady  							};    							// pick a random color for the bot  							var hue = (byte)server.Random.Next(255);  							var sat = (byte)server.Random.Next(255);  							var lum = (byte)server.Random.Next(51'255);  							bot.ColorRamp = bot.PreferredColorRamp = new ColorRamp(hue' sat' lum' 10);    							server.lobbyInfo.Clients.Add(bot);  						}  						else  						{  							// Change the type of the existing bot  							bot.Name = botType;  							bot.Bot = botType;  						}    						S.SyncClientToPlayerReference(bot' server.Map.Players[parts[0]]);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "map"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can change the map" );  							return true;  						}  						if(!server.ModData.AvailableMaps.ContainsKey(s))  						{  							server.SendChatTo( conn' "Map not found");  							return true;  						}  						server.lobbyInfo.GlobalSettings.Map = s;  						var oldSlots = server.lobbyInfo.Slots.Keys.ToArray();  						LoadMap(server);  						SetDefaultDifficulty(server);    						// Reassign players into new slots based on their old slots:  						//  - Observers remain as observers  						//  - Players who now lack a slot are made observers  						//  - Bots who now lack a slot are dropped  						var slots = server.lobbyInfo.Slots.Keys.ToArray();  						int i = 0;  						foreach (var os in oldSlots)  						{  							var c = server.lobbyInfo.ClientInSlot(os);  							if (c == null)  								continue;    							c.SpawnPoint = 0;  							c.State = Session.ClientState.NotReady;  							c.Slot = i < slots.Length ? slots[i++] : null;  							if (c.Slot != null)  							{  								// Remove Bot from slot if slot forbids bots  								if (c.Bot != null && !server.Map.Players[c.Slot].AllowBots)  									server.lobbyInfo.Clients.Remove(c);  								S.SyncClientToPlayerReference(c' server.Map.Players[c.Slot]);  							}  							else if (c.Bot != null)  								server.lobbyInfo.Clients.Remove(c);  						}    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "lockteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.LockTeams);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "allowcheats"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.AllowCheats);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "assignteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						int teams;  						if (!int.TryParse(s' out teams))  						{  							server.SendChatTo(conn' "Number of teams could not be parsed: {0}".F(s));  							return true;  						}  						teams = teams.Clamp(2' 8);    						var players = server.lobbyInfo.Slots  							.Select(slot => server.lobbyInfo.Clients.SingleOrDefault(c => c.Slot == slot.Key))  							.Where(c => c != null && !server.lobbyInfo.Slots[c.Slot].LockTeam).ToArray();  						if (players.Length < 2)  						{  							server.SendChatTo(conn' "Not enough players to assign teams");  							return true;  						}  						if (teams > players.Length)  						{  							server.SendChatTo(conn' "Too many teams for the number of players");  							return true;  						}    						var teamSizes = new int[players.Length];  						for (var i = 0; i < players.Length; i++)  							teamSizes[i % teams]++;    						var playerIndex = 0;  						for (var team = 1; team <= teams; team++)  						{  							for (var teamPlayerIndex = 0; teamPlayerIndex < teamSizes[team - 1]; playerIndex++' teamPlayerIndex++)  							{  								var cl = players[playerIndex];  								if (cl.Bot == null)  									cl.State = Session.ClientState.NotReady;  								cl.Team = team;  							}  						}  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "crates"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.Crates);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "difficulty"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}  						if ((server.Map.Difficulties == null && s != null) || (server.Map.Difficulties != null && !server.Map.Difficulties.Contains(s)))  						{  							server.SendChatTo(conn' "Unsupported difficulty selected: {0}".F(s));  							server.SendChatTo(conn' "Supported difficulties: {0}".F(server.Map.Difficulties.JoinWith("'")));  							return true;  						}    						server.lobbyInfo.GlobalSettings.Difficulty = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "kick"'  					s =>  					{    						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can kick players" );  							return true;  						}    						int clientID;  						int.TryParse( s' out clientID );    						var connToKick = server.conns.SingleOrDefault( c => server.GetClient(c) != null && server.GetClient(c).Index == clientID);  						if (connToKick == null)  						{  							server.SendChatTo( conn' "Noone in that slot." );  							return true;  						}    						server.SendOrderTo(connToKick' "ServerError"' "You have been kicked from the server");  						server.DropClient(connToKick);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "name"'  					s =>  					{  						Log.Write("server"' "Player@{0} is now known as {1}"' conn.socket.RemoteEndPoint' s);  						client.Name = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "race"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled race changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockRace)  							return true;    						targetClient.Country = parts[1];  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "team"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled team changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockTeam)  							return true;    						int team;  						if (!int.TryParse(parts[1]' out team)) { Log.Write("server"' "Invalid team: {0}"' s ); return false; }    						targetClient.Team = team;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "spawn"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Spectators don't need a spawnpoint  						if (targetClient.Slot == null)  							return true;    						// Map has disabled spawn changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockSpawn)  							return true;    						int spawnPoint;  						if (!int.TryParse(parts[1]' out spawnPoint) || spawnPoint < 0 || spawnPoint > server.Map.GetSpawnPoints().Length)  						{  							Log.Write("server"' "Invalid spawn point: {0}"' parts[1]);  							return true;  						}    						if (server.lobbyInfo.Clients.Where( cc => cc != client ).Any( cc => (cc.SpawnPoint == spawnPoint) && (cc.SpawnPoint != 0) ))  						{  							server.SendChatTo( conn' "You can't be at the same spawn point as another player" );  							return true;  						}    						targetClient.SpawnPoint = spawnPoint;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "color"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled color changes  						if (targetClient.Slot != null && server.lobbyInfo.Slots[targetClient.Slot].LockColor)  							return true;    						var ci = parts[1].Split(''').Select(cc => int.Parse(cc)).ToArray();  						targetClient.ColorRamp = targetClient.PreferredColorRamp = new ColorRamp((byte)ci[0]' (byte)ci[1]' (byte)ci[2]' (byte)ci[3]);  						server.SyncLobbyInfo();  						return true;  					}}  			};
Magic Number,OpenRA.Mods.RA.Server,LobbyCommands,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ServerTraits\LobbyCommands.cs,InterpretCommand,The following statement contains a magic number: var dict = new Dictionary<string' Func<string' bool>>  			{  				{ "ready"'  					s =>  					{  						// if we're downloading' we can't ready up.  						if (client.State == Session.ClientState.NotReady)  							client.State = Session.ClientState.Ready;  						else if (client.State == Session.ClientState.Ready)  							client.State = Session.ClientState.NotReady;    						Log.Write("server"' "Player @{0} is {1}"'  							conn.socket.RemoteEndPoint' client.State);    						server.SyncLobbyInfo();    						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "startgame"'  					s =>  					{  						if (server.lobbyInfo.Slots.Any(sl => sl.Value.Required &&   							server.lobbyInfo.ClientInSlot(sl.Key) == null))  						{  							server.SendChat(conn' "Unable to start the game until required slots are full.");  							return true;  						}  						server.StartGame();  						return true;  					}}'  				{ "lag"'  					s =>  					{  						int lag;  						if (!int.TryParse(s' out lag)) { Log.Write("server"' "Invalid order lag: {0}"' s); return false; }    						Log.Write("server"' "Order lag is now {0} frames."' lag);    						server.lobbyInfo.GlobalSettings.OrderLatency = lag;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot"'  					s =>  					{  						if (!server.lobbyInfo.Slots.ContainsKey(s))  						{  							Log.Write("server"' "Invalid slot: {0}"' s );  							return false;  						}  						var slot = server.lobbyInfo.Slots[s];    						if (slot.Closed || server.lobbyInfo.ClientInSlot(s) != null)  							return false;    						client.Slot = s;  						S.SyncClientToPlayerReference(client' server.Map.Players[s]);    						server.SyncLobbyInfo();  						CheckAutoStart(server' conn' client);    						return true;  					}}'  				{ "spectate"'  					s =>  					{  						client.Slot = null;  						client.SpawnPoint = 0;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_close"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						// kick any player that's in the slot  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null)  						{  							if (occupant.Bot != null)  								server.lobbyInfo.Clients.Remove(occupant);  							else  							{  								var occupantConn = server.conns.FirstOrDefault( c => c.PlayerIndex == occupant.Index );  								if (occupantConn != null)  								{  									server.SendOrderTo(occupantConn' "ServerError"' "Your slot was closed by the host");  									server.DropClient(occupantConn);  								}  							}  						}    						server.lobbyInfo.Slots[s].Closed = true;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_open"'  					s =>  					{  						if (!ValidateSlotCommand( server' conn' client' s' true ))  							return false;    						var slot = server.lobbyInfo.Slots[s];  						slot.Closed = false;    						// Slot may have a bot in it  						var occupant = server.lobbyInfo.ClientInSlot(s);  						if (occupant != null && occupant.Bot != null)  							server.lobbyInfo.Clients.Remove(occupant);    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "slot_bot"'  					s =>  					{  						var parts = s.Split(' ');    						if (parts.Length < 2)  						{  							server.SendChatTo( conn' "Malformed slot_bot command" );  							return true;  						}    						if (!ValidateSlotCommand( server' conn' client' parts[0]' true ))  							return false;    						var slot = server.lobbyInfo.Slots[parts[0]];  						var bot = server.lobbyInfo.ClientInSlot(parts[0]);  						var botType = parts.Skip(1).JoinWith(" ");    						// Invalid slot  						if (bot != null && bot.Bot == null)  						{  							server.SendChatTo( conn' "Can't add bots to a slot with another client" );  							return true;  						}    						slot.Closed = false;  						if (bot == null)  						{  							// Create a new bot  							bot = new Session.Client()  							{  								Index = server.ChooseFreePlayerIndex()'  								Name = botType'  								Bot = botType'  								Slot = parts[0]'  								Country = "random"'  								SpawnPoint = 0'  								Team = 0'  								State = Session.ClientState.NotReady  							};    							// pick a random color for the bot  							var hue = (byte)server.Random.Next(255);  							var sat = (byte)server.Random.Next(255);  							var lum = (byte)server.Random.Next(51'255);  							bot.ColorRamp = bot.PreferredColorRamp = new ColorRamp(hue' sat' lum' 10);    							server.lobbyInfo.Clients.Add(bot);  						}  						else  						{  							// Change the type of the existing bot  							bot.Name = botType;  							bot.Bot = botType;  						}    						S.SyncClientToPlayerReference(bot' server.Map.Players[parts[0]]);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "map"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can change the map" );  							return true;  						}  						if(!server.ModData.AvailableMaps.ContainsKey(s))  						{  							server.SendChatTo( conn' "Map not found");  							return true;  						}  						server.lobbyInfo.GlobalSettings.Map = s;  						var oldSlots = server.lobbyInfo.Slots.Keys.ToArray();  						LoadMap(server);  						SetDefaultDifficulty(server);    						// Reassign players into new slots based on their old slots:  						//  - Observers remain as observers  						//  - Players who now lack a slot are made observers  						//  - Bots who now lack a slot are dropped  						var slots = server.lobbyInfo.Slots.Keys.ToArray();  						int i = 0;  						foreach (var os in oldSlots)  						{  							var c = server.lobbyInfo.ClientInSlot(os);  							if (c == null)  								continue;    							c.SpawnPoint = 0;  							c.State = Session.ClientState.NotReady;  							c.Slot = i < slots.Length ? slots[i++] : null;  							if (c.Slot != null)  							{  								// Remove Bot from slot if slot forbids bots  								if (c.Bot != null && !server.Map.Players[c.Slot].AllowBots)  									server.lobbyInfo.Clients.Remove(c);  								S.SyncClientToPlayerReference(c' server.Map.Players[c.Slot]);  							}  							else if (c.Bot != null)  								server.lobbyInfo.Clients.Remove(c);  						}    						server.SyncLobbyInfo();  						return true;  					}}'  				{ "lockteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.LockTeams);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "allowcheats"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can set that option" );  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.AllowCheats);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "assignteams"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						int teams;  						if (!int.TryParse(s' out teams))  						{  							server.SendChatTo(conn' "Number of teams could not be parsed: {0}".F(s));  							return true;  						}  						teams = teams.Clamp(2' 8);    						var players = server.lobbyInfo.Slots  							.Select(slot => server.lobbyInfo.Clients.SingleOrDefault(c => c.Slot == slot.Key))  							.Where(c => c != null && !server.lobbyInfo.Slots[c.Slot].LockTeam).ToArray();  						if (players.Length < 2)  						{  							server.SendChatTo(conn' "Not enough players to assign teams");  							return true;  						}  						if (teams > players.Length)  						{  							server.SendChatTo(conn' "Too many teams for the number of players");  							return true;  						}    						var teamSizes = new int[players.Length];  						for (var i = 0; i < players.Length; i++)  							teamSizes[i % teams]++;    						var playerIndex = 0;  						for (var team = 1; team <= teams; team++)  						{  							for (var teamPlayerIndex = 0; teamPlayerIndex < teamSizes[team - 1]; playerIndex++' teamPlayerIndex++)  							{  								var cl = players[playerIndex];  								if (cl.Bot == null)  									cl.State = Session.ClientState.NotReady;  								cl.Team = team;  							}  						}  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "crates"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}    						bool.TryParse(s' out server.lobbyInfo.GlobalSettings.Crates);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "difficulty"'  					s =>  					{  						if (!client.IsAdmin)  						{  							server.SendChatTo(conn' "Only the host can set that option");  							return true;  						}  						if ((server.Map.Difficulties == null && s != null) || (server.Map.Difficulties != null && !server.Map.Difficulties.Contains(s)))  						{  							server.SendChatTo(conn' "Unsupported difficulty selected: {0}".F(s));  							server.SendChatTo(conn' "Supported difficulties: {0}".F(server.Map.Difficulties.JoinWith("'")));  							return true;  						}    						server.lobbyInfo.GlobalSettings.Difficulty = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "kick"'  					s =>  					{    						if (!client.IsAdmin)  						{  							server.SendChatTo( conn' "Only the host can kick players" );  							return true;  						}    						int clientID;  						int.TryParse( s' out clientID );    						var connToKick = server.conns.SingleOrDefault( c => server.GetClient(c) != null && server.GetClient(c).Index == clientID);  						if (connToKick == null)  						{  							server.SendChatTo( conn' "Noone in that slot." );  							return true;  						}    						server.SendOrderTo(connToKick' "ServerError"' "You have been kicked from the server");  						server.DropClient(connToKick);  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "name"'  					s =>  					{  						Log.Write("server"' "Player@{0} is now known as {1}"' conn.socket.RemoteEndPoint' s);  						client.Name = s;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "race"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled race changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockRace)  							return true;    						targetClient.Country = parts[1];  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "team"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled team changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockTeam)  							return true;    						int team;  						if (!int.TryParse(parts[1]' out team)) { Log.Write("server"' "Invalid team: {0}"' s ); return false; }    						targetClient.Team = team;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "spawn"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Spectators don't need a spawnpoint  						if (targetClient.Slot == null)  							return true;    						// Map has disabled spawn changes  						if (server.lobbyInfo.Slots[targetClient.Slot].LockSpawn)  							return true;    						int spawnPoint;  						if (!int.TryParse(parts[1]' out spawnPoint) || spawnPoint < 0 || spawnPoint > server.Map.GetSpawnPoints().Length)  						{  							Log.Write("server"' "Invalid spawn point: {0}"' parts[1]);  							return true;  						}    						if (server.lobbyInfo.Clients.Where( cc => cc != client ).Any( cc => (cc.SpawnPoint == spawnPoint) && (cc.SpawnPoint != 0) ))  						{  							server.SendChatTo( conn' "You can't be at the same spawn point as another player" );  							return true;  						}    						targetClient.SpawnPoint = spawnPoint;  						server.SyncLobbyInfo();  						return true;  					}}'  				{ "color"'  					s =>  					{  						var parts = s.Split(' ');  						var targetClient = server.lobbyInfo.ClientWithIndex(int.Parse(parts[0]));    						// Only the host can change other client's info  						if (targetClient.Index != client.Index && !client.IsAdmin)  							return true;    						// Map has disabled color changes  						if (targetClient.Slot != null && server.lobbyInfo.Slots[targetClient.Slot].LockColor)  							return true;    						var ci = parts[1].Split(''').Select(cc => int.Parse(cc)).ToArray();  						targetClient.ColorRamp = targetClient.PreferredColorRamp = new ColorRamp((byte)ci[0]' (byte)ci[1]' (byte)ci[2]' (byte)ci[3]);  						server.SyncLobbyInfo();  						return true;  					}}  			};
Magic Number,OpenRA.Mods.RA.Server,MasterServerPinger,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\ServerTraits\MasterServerPinger.cs,Tick,The following statement contains a magic number: (Environment.TickCount - lastPing > MasterPingInterval * 1000) || isInitialPing
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: float2 origin = new float2(paletteOrigin.X + 9' paletteOrigin.Y + 9);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: float2 origin = new float2(paletteOrigin.X + 9' paletteOrigin.Y + 9);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: WidgetUtils.DrawRGBA(ChromeProvider.GetImage(paletteCollection' "top")' new float2(origin.X - 9' origin.Y - 9));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: WidgetUtils.DrawRGBA(ChromeProvider.GetImage(paletteCollection' "top")' new float2(origin.X - 9' origin.Y - 9));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: WidgetUtils.DrawRGBA(  						ChromeProvider.GetImage(paletteCollection' "bg-" + (w % 4))'  						new float2(origin.X - 9' origin.Y + 48 * w));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: WidgetUtils.DrawRGBA(  						ChromeProvider.GetImage(paletteCollection' "bg-" + (w % 4))'  						new float2(origin.X - 9' origin.Y + 48 * w));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: WidgetUtils.DrawRGBA(  						ChromeProvider.GetImage(paletteCollection' "bg-" + (w % 4))'  						new float2(origin.X - 9' origin.Y + 48 * w));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: WidgetUtils.DrawRGBA(ChromeProvider.GetImage(paletteCollection' "bottom")'  					new float2(origin.X - 9' origin.Y - 1 + 48 * numActualRows));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: WidgetUtils.DrawRGBA(ChromeProvider.GetImage(paletteCollection' "bottom")'  					new float2(origin.X - 9' origin.Y - 1 + 48 * numActualRows));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: var rect = new RectangleF(origin.X + x * 64' origin.Y + 48 * y' 64' 48);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: var rect = new RectangleF(origin.X + x * 64' origin.Y + 48 * y' 64' 48);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: var rect = new RectangleF(origin.X + x * 64' origin.Y + 48 * y' 64' 48);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: var rect = new RectangleF(origin.X + x * 64' origin.Y + 48 * y' 64' 48);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: var overlayPos = drawPos + new float2(32' 16);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: var overlayPos = drawPos + new float2(32' 16);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: textBits.Add(Pair.New(overlayPos + new float2(-24' -14)' repeats.ToString()));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: textBits.Add(Pair.New(overlayPos + new float2(-24' -14)' repeats.ToString()));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: font.DrawTextWithContrast(tb.Second' tb.First - new float2(size.X / 2' 0)'  						Color.White' Color.Black' 1);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: DrawProductionTooltip(world' tooltipItem'  						new float2(Game.viewport.Width' origin.Y + numActualRows * 48 + 9).ToInt2());
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: DrawProductionTooltip(world' tooltipItem'  						new float2(Game.viewport.Width' origin.Y + numActualRows * 48 + 9).ToInt2());
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: WidgetUtils.DrawRGBA(ChromeProvider.GetImage(paletteCollection' "dock-top")'  				new float2(Game.viewport.Width - 14' origin.Y - 23));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: WidgetUtils.DrawRGBA(ChromeProvider.GetImage(paletteCollection' "dock-top")'  				new float2(Game.viewport.Width - 14' origin.Y - 23));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: WidgetUtils.DrawRGBA(ChromeProvider.GetImage(paletteCollection' "dock-" + (i % 4).ToString())'  					new float2(Game.viewport.Width - 14' origin.Y + 48 * i));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: WidgetUtils.DrawRGBA(ChromeProvider.GetImage(paletteCollection' "dock-" + (i % 4).ToString())'  					new float2(Game.viewport.Width - 14' origin.Y + 48 * i));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: WidgetUtils.DrawRGBA(ChromeProvider.GetImage(paletteCollection' "dock-" + (i % 4).ToString())'  					new float2(Game.viewport.Width - 14' origin.Y + 48 * i));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: WidgetUtils.DrawRGBA(ChromeProvider.GetImage(paletteCollection' "dock-bottom")'  				new float2(Game.viewport.Width - 14' origin.Y - 1 + 48 * numActualRows));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: WidgetUtils.DrawRGBA(ChromeProvider.GetImage(paletteCollection' "dock-bottom")'  				new float2(Game.viewport.Width - 14' origin.Y - 1 + 48 * numActualRows));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: return 48 * y + 9;
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawPalette,The following statement contains a magic number: return 48 * y + 9;
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,StartProduction,The following statement contains a magic number: world.IssueOrder(Order.StartProduction(CurrentQueue.self' item'  				Game.GetModifierKeys().HasModifier(Modifiers.Shift) ? 5 : 1));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawBuildTabs,The following statement contains a magic number: const int tabWidth = 24;
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawBuildTabs,The following statement contains a magic number: const int tabHeight = 40;
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawBuildTabs,The following statement contains a magic number: var y = paletteOrigin.Y + 9;
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawBuildTabs,The following statement contains a magic number: var index = queue == CurrentQueue ? 2 : (producing != null && producing.Done) ? 1 : 0;
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawBuildTabs,The following statement contains a magic number: WidgetUtils.DrawPanelPartial("dialog4"'  						Rectangle.FromLTRB(rect.Left - sz.X - 30' rect.Top' rect.Left - 5' rect.Bottom)'  						PanelSides.All);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawBuildTabs,The following statement contains a magic number: WidgetUtils.DrawPanelPartial("dialog4"'  						Rectangle.FromLTRB(rect.Left - sz.X - 30' rect.Top' rect.Left - 5' rect.Bottom)'  						PanelSides.All);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawBuildTabs,The following statement contains a magic number: font.DrawText(text' new float2(rect.Left - sz.X - 20' rect.Top + 12)' Color.White);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawBuildTabs,The following statement contains a magic number: font.DrawText(text' new float2(rect.Left - sz.X - 20' rect.Top + 12)' Color.White);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawProductionTooltip,The following statement contains a magic number: pos.Y += 15;
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawProductionTooltip,The following statement contains a magic number: var p = pos.ToFloat2() - new float2(297' -3);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawProductionTooltip,The following statement contains a magic number: var p = pos.ToFloat2() - new float2(297' -3);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawProductionTooltip,The following statement contains a magic number: longDescSize += 8;
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawProductionTooltip,The following statement contains a magic number: WidgetUtils.DrawPanel("dialog4"' new Rectangle(Game.viewport.Width - 300' pos.Y' 300' longDescSize + 65));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawProductionTooltip,The following statement contains a magic number: WidgetUtils.DrawPanel("dialog4"' new Rectangle(Game.viewport.Width - 300' pos.Y' 300' longDescSize + 65));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawProductionTooltip,The following statement contains a magic number: WidgetUtils.DrawPanel("dialog4"' new Rectangle(Game.viewport.Width - 300' pos.Y' 300' longDescSize + 65));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawProductionTooltip,The following statement contains a magic number: Game.Renderer.Fonts["Bold"].DrawText(  				tooltip.Name + ((buildable.Hotkey != null) ? " ({0})".F(buildable.Hotkey.ToUpper()) : "")'  												   p.ToInt2() + new int2(5' 5)' Color.White);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawProductionTooltip,The following statement contains a magic number: Game.Renderer.Fonts["Bold"].DrawText(  				tooltip.Name + ((buildable.Hotkey != null) ? " ({0})".F(buildable.Hotkey.ToUpper()) : "")'  												   p.ToInt2() + new int2(5' 5)' Color.White);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawProductionTooltip,The following statement contains a magic number: DrawRightAligned("${0}".F(cost)' pos + new int2(-5' 5)'  				(resources.DisplayCash + resources.DisplayOre >= cost ? Color.White : Color.Red));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawProductionTooltip,The following statement contains a magic number: DrawRightAligned("${0}".F(cost)' pos + new int2(-5' 5)'  				(resources.DisplayCash + resources.DisplayOre >= cost ? Color.White : Color.Red));
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawProductionTooltip,The following statement contains a magic number: DrawRightAligned(WidgetUtils.FormatTime(time)' pos + new int2(-5' 35)' lowpower ? Color.Red : Color.White);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawProductionTooltip,The following statement contains a magic number: DrawRightAligned(WidgetUtils.FormatTime(time)' pos + new int2(-5' 35)' lowpower ? Color.Red : Color.White);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawProductionTooltip,The following statement contains a magic number: DrawRightAligned("{1}{0}".F(bi.Power' bi.Power > 0 ? "+" : "")' pos + new int2(-5' 20)'  					((power.PowerProvided - power.PowerDrained) >= -bi.Power || bi.Power > 0) ? Color.White : Color.Red);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawProductionTooltip,The following statement contains a magic number: DrawRightAligned("{1}{0}".F(bi.Power' bi.Power > 0 ? "+" : "")' pos + new int2(-5' 20)'  					((power.PowerProvided - power.PowerDrained) >= -bi.Power || bi.Power > 0) ? Color.White : Color.Red);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawProductionTooltip,The following statement contains a magic number: p += new int2(5' 35);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawProductionTooltip,The following statement contains a magic number: p += new int2(5' 35);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawProductionTooltip,The following statement contains a magic number: p += new int2(0' 8);
Magic Number,OpenRA.Mods.RA.Widgets,BuildPaletteWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\BuildPaletteWidget.cs,DrawProductionTooltip,The following statement contains a magic number: p += new int2(0' 15);
Magic Number,OpenRA.Mods.RA.Widgets,MoneyBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\MoneyBinWidget.cs,Draw,The following statement contains a magic number: var x = Bounds.Right - 65;
Magic Number,OpenRA.Mods.RA.Widgets,MoneyBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\MoneyBinWidget.cs,Draw,The following statement contains a magic number: Game.Renderer.RgbaSpriteRenderer.DrawSprite(  					ChromeProvider.GetImage(digitCollection' (d - '0').ToString())'  					new float2(x' 6));
Magic Number,OpenRA.Mods.RA.Widgets,MoneyBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\MoneyBinWidget.cs,Draw,The following statement contains a magic number: x -= 14;
Magic Number,OpenRA.Mods.RA.Widgets,ObserverProductionIconsWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\ObserverProductionIconsWidget.cs,Draw,The following statement contains a magic number: var size = sprite.size / new float2(2' 2);
Magic Number,OpenRA.Mods.RA.Widgets,ObserverProductionIconsWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\ObserverProductionIconsWidget.cs,Draw,The following statement contains a magic number: var size = sprite.size / new float2(2' 2);
Magic Number,OpenRA.Mods.RA.Widgets,ObserverProductionIconsWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\ObserverProductionIconsWidget.cs,Draw,The following statement contains a magic number: tiny.DrawTextWithContrast(text'  					location + new float2(16' 16) - new float2(tiny.Measure(text).X / 2' 0)'  					Color.White' Color.Black' 1);
Magic Number,OpenRA.Mods.RA.Widgets,ObserverProductionIconsWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\ObserverProductionIconsWidget.cs,Draw,The following statement contains a magic number: tiny.DrawTextWithContrast(text'  					location + new float2(16' 16) - new float2(tiny.Measure(text).X / 2' 0)'  					Color.White' Color.Black' 1);
Magic Number,OpenRA.Mods.RA.Widgets,ObserverProductionIconsWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\ObserverProductionIconsWidget.cs,Draw,The following statement contains a magic number: tiny.DrawTextWithContrast(text'  					location + new float2(16' 16) - new float2(tiny.Measure(text).X / 2' 0)'  					Color.White' Color.Black' 1);
Magic Number,OpenRA.Mods.RA.Widgets,ObserverSupportPowerIconsWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\ObserverSupportPowerIconsWidget.cs,Draw,The following statement contains a magic number: var size = sprite.size / new float2(2' 2);
Magic Number,OpenRA.Mods.RA.Widgets,ObserverSupportPowerIconsWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\ObserverSupportPowerIconsWidget.cs,Draw,The following statement contains a magic number: var size = sprite.size / new float2(2' 2);
Magic Number,OpenRA.Mods.RA.Widgets,ObserverSupportPowerIconsWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\ObserverSupportPowerIconsWidget.cs,Draw,The following statement contains a magic number: tiny.DrawTextWithContrast(text'  					location + new float2(16' 16) - new float2(tiny.Measure(text).X / 2' 0)'  					Color.White' Color.Black' 1);
Magic Number,OpenRA.Mods.RA.Widgets,ObserverSupportPowerIconsWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\ObserverSupportPowerIconsWidget.cs,Draw,The following statement contains a magic number: tiny.DrawTextWithContrast(text'  					location + new float2(16' 16) - new float2(tiny.Measure(text).X / 2' 0)'  					Color.White' Color.Black' 1);
Magic Number,OpenRA.Mods.RA.Widgets,ObserverSupportPowerIconsWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\ObserverSupportPowerIconsWidget.cs,Draw,The following statement contains a magic number: tiny.DrawTextWithContrast(text'  					location + new float2(16' 16) - new float2(tiny.Measure(text).X / 2' 0)'  					Color.White' Color.Black' 1);
Magic Number,OpenRA.Mods.RA.Widgets,OrderButtonWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\OrderButtonWidget.cs,Draw,The following statement contains a magic number: rect = rect.InflateBy(3' 3' 3' 3);
Magic Number,OpenRA.Mods.RA.Widgets,OrderButtonWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\OrderButtonWidget.cs,Draw,The following statement contains a magic number: rect = rect.InflateBy(3' 3' 3' 3);
Magic Number,OpenRA.Mods.RA.Widgets,OrderButtonWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\OrderButtonWidget.cs,Draw,The following statement contains a magic number: rect = rect.InflateBy(3' 3' 3' 3);
Magic Number,OpenRA.Mods.RA.Widgets,OrderButtonWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\OrderButtonWidget.cs,Draw,The following statement contains a magic number: rect = rect.InflateBy(3' 3' 3' 3);
Magic Number,OpenRA.Mods.RA.Widgets,OrderButtonWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\OrderButtonWidget.cs,Draw,The following statement contains a magic number: var br = pos + new int2(rect.Width' rect.Height + 20);
Magic Number,OpenRA.Mods.RA.Widgets,OrderButtonWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\OrderButtonWidget.cs,Draw,The following statement contains a magic number: br += new int2(-15' 25);
Magic Number,OpenRA.Mods.RA.Widgets,OrderButtonWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\OrderButtonWidget.cs,Draw,The following statement contains a magic number: br += new int2(-15' 25);
Magic Number,OpenRA.Mods.RA.Widgets,OrderButtonWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\OrderButtonWidget.cs,Draw,The following statement contains a magic number: WidgetUtils.DrawPanelPartial("dialog4"' new Rectangle(br.X' m.Y' pos.X - br.X' br.Y - m.Y)  						.InflateBy(0' 0' border[3]' 0)'  						PanelSides.Top | PanelSides.Left | PanelSides.Bottom | PanelSides.Center);
Magic Number,OpenRA.Mods.RA.Widgets,OrderButtonWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\OrderButtonWidget.cs,Draw,The following statement contains a magic number: WidgetUtils.DrawPanelPartial("dialog4"' new Rectangle(pos.X' m.Y' m.X - pos.X' br.Y - m.Y)  						.InflateBy(border[2]' border[0]' 0' 0)'  						PanelSides.Right | PanelSides.Bottom | PanelSides.Center);
Magic Number,OpenRA.Mods.RA.Widgets,OrderButtonWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\OrderButtonWidget.cs,Draw,The following statement contains a magic number: pos.X = br.X + 8;
Magic Number,OpenRA.Mods.RA.Widgets,OrderButtonWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\OrderButtonWidget.cs,Draw,The following statement contains a magic number: pos.Y = m.Y + 8;
Magic Number,OpenRA.Mods.RA.Widgets,OrderButtonWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\OrderButtonWidget.cs,Draw,The following statement contains a magic number: pos += new int2(0' 20);
Magic Number,OpenRA.Mods.RA.Widgets,PowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\PowerBinWidget.cs,Draw,The following statement contains a magic number: float powerScaleBy = 100;
Magic Number,OpenRA.Mods.RA.Widgets,PowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\PowerBinWidget.cs,Draw,The following statement contains a magic number: powerScaleBy *= 2;
Magic Number,OpenRA.Mods.RA.Widgets,PowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\PowerBinWidget.cs,Draw,The following statement contains a magic number: var colorDark = Exts.ColorLerp(0.25f' color' Color.Black);
Magic Number,OpenRA.Mods.RA.Widgets,PowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\PowerBinWidget.cs,Draw,The following statement contains a magic number: color = (i - 1 < powerSize.Height / 2) ? color : colorDark;
Magic Number,OpenRA.Mods.RA.Widgets,PowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\PowerBinWidget.cs,Draw,The following statement contains a magic number: var powerDrainLevel = new float2(lastPowerDrainedPos.Value - indicator.size.X / 2' barStart.Y - 1);
Magic Number,OpenRA.Mods.RA.Widgets,PowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\PowerBinWidget.cs,Draw,The following statement contains a magic number: var pos = new int2(rect.Left + 5' rect.Top + 5);
Magic Number,OpenRA.Mods.RA.Widgets,PowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\PowerBinWidget.cs,Draw,The following statement contains a magic number: var pos = new int2(rect.Left + 5' rect.Top + 5);
Magic Number,OpenRA.Mods.RA.Widgets,PowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\PowerBinWidget.cs,Draw,The following statement contains a magic number: WidgetUtils.DrawPanel("dialog4"' rect.InflateBy(0' 0' 0' 50 + border[1]));
Magic Number,OpenRA.Mods.RA.Widgets,PowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\PowerBinWidget.cs,Draw,The following statement contains a magic number: pos += new int2(0' 20);
Magic Number,OpenRA.Mods.RA.Widgets,PowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\PowerBinWidget.cs,Draw,The following statement contains a magic number: rect.InflateBy(0' 5' 0' 5).Contains(Viewport.LastMousePos)
Magic Number,OpenRA.Mods.RA.Widgets,PowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\PowerBinWidget.cs,Draw,The following statement contains a magic number: rect.InflateBy(0' 5' 0' 5).Contains(Viewport.LastMousePos)
Magic Number,OpenRA.Mods.RA.Widgets,RadarBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarBinWidget.cs,RadarBinWidget,The following statement contains a magic number: previewScale = Math.Min(192f / world.Map.Bounds.Width' 192f / world.Map.Bounds.Height);
Magic Number,OpenRA.Mods.RA.Widgets,RadarBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarBinWidget.cs,RadarBinWidget,The following statement contains a magic number: previewScale = Math.Min(192f / world.Map.Bounds.Width' 192f / world.Map.Bounds.Height);
Magic Number,OpenRA.Mods.RA.Widgets,RadarBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarBinWidget.cs,RadarBinWidget,The following statement contains a magic number: previewOrigin = new int2(9 + (int)(radarOpenOrigin.X + previewScale * (size - world.Map.Bounds.Width)/2)' (int)(radarOpenOrigin.Y + previewScale * (size - world.Map.Bounds.Height)/2));
Magic Number,OpenRA.Mods.RA.Widgets,RadarBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarBinWidget.cs,RadarBinWidget,The following statement contains a magic number: previewOrigin = new int2(9 + (int)(radarOpenOrigin.X + previewScale * (size - world.Map.Bounds.Width)/2)' (int)(radarOpenOrigin.Y + previewScale * (size - world.Map.Bounds.Height)/2));
Magic Number,OpenRA.Mods.RA.Widgets,RadarBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarBinWidget.cs,RadarBinWidget,The following statement contains a magic number: previewOrigin = new int2(9 + (int)(radarOpenOrigin.X + previewScale * (size - world.Map.Bounds.Width)/2)' (int)(radarOpenOrigin.Y + previewScale * (size - world.Map.Bounds.Height)/2));
Magic Number,OpenRA.Mods.RA.Widgets,RadarBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarBinWidget.cs,Draw,The following statement contains a magic number: rsr.DrawSprite(ChromeProvider.GetImage(radarCollection' "right")' radarOrigin + new float2(201' 0));
Magic Number,OpenRA.Mods.RA.Widgets,RadarBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarBinWidget.cs,Draw,The following statement contains a magic number: rsr.DrawSprite(ChromeProvider.GetImage(radarCollection' "bottom")' radarOrigin + new float2(0' 192));
Magic Number,OpenRA.Mods.RA.Widgets,RadarBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarBinWidget.cs,Draw,The following statement contains a magic number: rsr.DrawSprite(ChromeProvider.GetImage(radarCollection' "bg")' radarOrigin + new float2(9' 0));
Magic Number,OpenRA.Mods.RA.Widgets,RadarBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarBinWidget.cs,Draw,The following statement contains a magic number: var o = new float2(mapRect.Location.X' mapRect.Location.Y + world.Map.Bounds.Height * previewScale * (1 - radarMinimapHeight)/2);
Magic Number,OpenRA.Mods.RA.Widgets,RadarBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarBinWidget.cs,Tick,The following statement contains a magic number: updateTicks = 12;
Magic Number,OpenRA.Mods.RA.Widgets,RadarBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarBinWidget.cs,Tick,The following statement contains a magic number: updateTicks == 8
Magic Number,OpenRA.Mods.RA.Widgets,RadarBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarBinWidget.cs,Tick,The following statement contains a magic number: updateTicks == 4
Magic Number,OpenRA.Mods.RA.Widgets,RadarWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarWidget.cs,Initialize,The following statement contains a magic number: previewOrigin = new int2(RenderOrigin.X' RenderOrigin.Y + (int)(previewScale * (size - world.Map.Bounds.Height)/2));
Magic Number,OpenRA.Mods.RA.Widgets,RadarWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarWidget.cs,Draw,The following statement contains a magic number: var o = new float2(mapRect.Location.X' mapRect.Location.Y + world.Map.Bounds.Height * previewScale * (1 - radarMinimapHeight)/2);
Magic Number,OpenRA.Mods.RA.Widgets,RadarWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarWidget.cs,Tick,The following statement contains a magic number: updateTicks = 12;
Magic Number,OpenRA.Mods.RA.Widgets,RadarWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarWidget.cs,Tick,The following statement contains a magic number: updateTicks == 8
Magic Number,OpenRA.Mods.RA.Widgets,RadarWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\RadarWidget.cs,Tick,The following statement contains a magic number: updateTicks == 4
Magic Number,OpenRA.Mods.RA.Widgets,StrategicProgressWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\StrategicProgressWidget.cs,Draw,The following statement contains a magic number: var totalWidth = svc.Total * 32;
Magic Number,OpenRA.Mods.RA.Widgets,StrategicProgressWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\StrategicProgressWidget.cs,Draw,The following statement contains a magic number: var curX = -totalWidth / 2;
Magic Number,OpenRA.Mods.RA.Widgets,StrategicProgressWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\StrategicProgressWidget.cs,Draw,The following statement contains a magic number: curX += 32;
Magic Number,OpenRA.Mods.RA.Widgets,StrategicProgressWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\StrategicProgressWidget.cs,Draw,The following statement contains a magic number: offset += new int2(0' 32);
Magic Number,OpenRA.Mods.RA.Widgets,StrategicProgressWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\StrategicProgressWidget.cs,Draw,The following statement contains a magic number: font.DrawTextWithContrast(tc' offset + new float2(rb.Left - size.X / 2 + 1' rb.Top + 1)' Color.White' Color.Black' 1);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: WidgetUtils.DrawRGBA(WidgetUtils.GetChromeImage(world' "specialbin-middle")' new float2(rectBounds.X' rectBounds.Y + i * 51));
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: WidgetUtils.DrawRGBA(WidgetUtils.GetChromeImage(world' "specialbin-bottom")' new float2(rectBounds.X' rectBounds.Y + numPowers * 51));
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: rectBounds.Width = 69;
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: rectBounds.Height = 10 + numPowers * 51 + 21;
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: rectBounds.Height = 10 + numPowers * 51 + 21;
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: rectBounds.Height = 10 + numPowers * 51 + 21;
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: var y = rectBounds.Y + 10;
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: var drawPos = new float2(rectBounds.X + 5' y);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: var rect = new Rectangle(rectBounds.X + 5' y' 64' 48);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: var rect = new Rectangle(rectBounds.X + 5' y' 64' 48);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: var rect = new Rectangle(rectBounds.X + 5' y' 64' 48);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: var tl = new int2(pos.X-3'pos.Y-3);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: var tl = new int2(pos.X-3'pos.Y-3);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: var m = new int2(pos.X+64+3'pos.Y+48+3);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: var m = new int2(pos.X+64+3'pos.Y+48+3);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: var m = new int2(pos.X+64+3'pos.Y+48+3);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: var m = new int2(pos.X+64+3'pos.Y+48+3);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: var br = tl + new int2(64+3+20'40);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: var br = tl + new int2(64+3+20'40);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: var br = tl + new int2(64+3+20'40);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: var br = tl + new int2(64+3+20'40);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: br += new int2(0'20);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: WidgetUtils.DrawPanelPartial("dialog4"' Rectangle.FromLTRB(tl.X' tl.Y' m.X + border[3]' m.Y)'  						PanelSides.Left | PanelSides.Top | PanelSides.Bottom | PanelSides.Center);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: WidgetUtils.DrawPanelPartial("dialog4"' Rectangle.FromLTRB(m.X - border[2]' tl.Y' br.X' m.Y + border[1])'  						PanelSides.Top | PanelSides.Right | PanelSides.Center);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: pos += new int2(77' 5);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: pos += new int2(77' 5);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: pos += new int2(0'20);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: Game.Renderer.Fonts["Bold"].DrawText("/ {0}".F(WidgetUtils.FormatTime(sp.TotalTime))' pos + new int2(45'0)' Color.White);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: pos += new int2(0' 20);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: var overlayPos = drawPos + new float2(32' 16);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: var overlayPos = drawPos + new float2(32' 16);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: font.DrawTextWithContrast(overlay' overlayPos - new float2(size.X / 2' 0)' Color.White' Color.Black' 1);
Magic Number,OpenRA.Mods.RA.Widgets,SupportPowerBinWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\SupportPowerBinWidget.cs,Draw,The following statement contains a magic number: y += 51;
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: var usz = Game.Renderer.Fonts["Bold"].Measure(utext) + new int2(20' 24);
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: var usz = Game.Renderer.Fonts["Bold"].Measure(utext) + new int2(20' 24);
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: WidgetUtils.DrawPanel("dialog4"' Rectangle.FromLTRB(  					Viewport.LastMousePos.X + 20' Viewport.LastMousePos.Y + 20'  					Viewport.LastMousePos.X + usz.X + 20' Viewport.LastMousePos.Y + usz.Y + 20));
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: WidgetUtils.DrawPanel("dialog4"' Rectangle.FromLTRB(  					Viewport.LastMousePos.X + 20' Viewport.LastMousePos.Y + 20'  					Viewport.LastMousePos.X + usz.X + 20' Viewport.LastMousePos.Y + usz.Y + 20));
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: WidgetUtils.DrawPanel("dialog4"' Rectangle.FromLTRB(  					Viewport.LastMousePos.X + 20' Viewport.LastMousePos.Y + 20'  					Viewport.LastMousePos.X + usz.X + 20' Viewport.LastMousePos.Y + usz.Y + 20));
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: WidgetUtils.DrawPanel("dialog4"' Rectangle.FromLTRB(  					Viewport.LastMousePos.X + 20' Viewport.LastMousePos.Y + 20'  					Viewport.LastMousePos.X + usz.X + 20' Viewport.LastMousePos.Y + usz.Y + 20));
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: Game.Renderer.Fonts["Bold"].DrawText(utext'  					new float2(Viewport.LastMousePos.X + 30' Viewport.LastMousePos.Y + 30)' Color.White);
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: Game.Renderer.Fonts["Bold"].DrawText(utext'  					new float2(Viewport.LastMousePos.X + 30' Viewport.LastMousePos.Y + 30)' Color.White);
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: var panelSize = new int2(Math.Max(nameSize.X' ownerSize.X + stanceSize.X + 35) + 20' nameSize.Y + 24);
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: var panelSize = new int2(Math.Max(nameSize.X' ownerSize.X + stanceSize.X + 35) + 20' nameSize.Y + 24);
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: var panelSize = new int2(Math.Max(nameSize.X' ownerSize.X + stanceSize.X + 35) + 20' nameSize.Y + 24);
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: panelSize.Y += ownerSize.Y + 2;
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: WidgetUtils.DrawPanel("dialog4"' Rectangle.FromLTRB(  				Viewport.LastMousePos.X + 20' Viewport.LastMousePos.Y + 20'  				Viewport.LastMousePos.X + panelSize.X + 20' Viewport.LastMousePos.Y + panelSize.Y + 20));
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: WidgetUtils.DrawPanel("dialog4"' Rectangle.FromLTRB(  				Viewport.LastMousePos.X + 20' Viewport.LastMousePos.Y + 20'  				Viewport.LastMousePos.X + panelSize.X + 20' Viewport.LastMousePos.Y + panelSize.Y + 20));
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: WidgetUtils.DrawPanel("dialog4"' Rectangle.FromLTRB(  				Viewport.LastMousePos.X + 20' Viewport.LastMousePos.Y + 20'  				Viewport.LastMousePos.X + panelSize.X + 20' Viewport.LastMousePos.Y + panelSize.Y + 20));
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: WidgetUtils.DrawPanel("dialog4"' Rectangle.FromLTRB(  				Viewport.LastMousePos.X + 20' Viewport.LastMousePos.Y + 20'  				Viewport.LastMousePos.X + panelSize.X + 20' Viewport.LastMousePos.Y + panelSize.Y + 20));
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: Game.Renderer.Fonts["Bold"].DrawText(nameText'  				new float2(Viewport.LastMousePos.X + 30' Viewport.LastMousePos.Y + 30)' Color.White);
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: Game.Renderer.Fonts["Bold"].DrawText(nameText'  				new float2(Viewport.LastMousePos.X + 30' Viewport.LastMousePos.Y + 30)' Color.White);
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: Game.Renderer.Fonts["Regular"].DrawText(ownerText'  					new float2(Viewport.LastMousePos.X + 65' Viewport.LastMousePos.Y + 50)' actor.Owner.ColorRamp.GetColor(0));
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: Game.Renderer.Fonts["Regular"].DrawText(ownerText'  					new float2(Viewport.LastMousePos.X + 65' Viewport.LastMousePos.Y + 50)' actor.Owner.ColorRamp.GetColor(0));
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: Game.Renderer.Fonts["Regular"].DrawText(stanceText'  					new float2(Viewport.LastMousePos.X + 65 + ownerSize.X' Viewport.LastMousePos.Y + 50)' Color.White);
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: Game.Renderer.Fonts["Regular"].DrawText(stanceText'  					new float2(Viewport.LastMousePos.X + 65 + ownerSize.X' Viewport.LastMousePos.Y + 50)' Color.White);
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: WidgetUtils.DrawRGBA(  					ChromeProvider.GetImage("flags"' actor.Owner.Country.Race)'  					new float2(Viewport.LastMousePos.X + 30' Viewport.LastMousePos.Y + 50));
Magic Number,OpenRA.Mods.RA.Widgets,WorldTooltipWidget,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\WorldTooltipWidget.cs,Draw,The following statement contains a magic number: WidgetUtils.DrawRGBA(  					ChromeProvider.GetImage("flags"' actor.Owner.Country.Race)'  					new float2(Viewport.LastMousePos.X + 30' Viewport.LastMousePos.Y + 50));
Magic Number,OpenRA.Mods.RA.Widgets.Logic,ColorPickerLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ColorPickerLogic.cs,ColorPickerLogic,The following statement contains a magic number: Action sliderChanged = () =>  			{  				ramp = new ColorRamp((byte)(255*hueSlider.Value)'  									 (byte)(255*satSlider.Value)'  									 (byte)(255*lumSlider.Value)'  									 10);  				onChange(ramp);  			};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,ColorPickerLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ColorPickerLogic.cs,ColorPickerLogic,The following statement contains a magic number: Action sliderChanged = () =>  			{  				ramp = new ColorRamp((byte)(255*hueSlider.Value)'  									 (byte)(255*satSlider.Value)'  									 (byte)(255*lumSlider.Value)'  									 10);  				onChange(ramp);  			};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,ColorPickerLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ColorPickerLogic.cs,ColorPickerLogic,The following statement contains a magic number: Action sliderChanged = () =>  			{  				ramp = new ColorRamp((byte)(255*hueSlider.Value)'  									 (byte)(255*satSlider.Value)'  									 (byte)(255*lumSlider.Value)'  									 10);  				onChange(ramp);  			};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,ColorPickerLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ColorPickerLogic.cs,ColorPickerLogic,The following statement contains a magic number: Action sliderChanged = () =>  			{  				ramp = new ColorRamp((byte)(255*hueSlider.Value)'  									 (byte)(255*satSlider.Value)'  									 (byte)(255*lumSlider.Value)'  									 10);  				onChange(ramp);  			};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,ColorPickerLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ColorPickerLogic.cs,ColorPickerLogic,The following statement contains a magic number: Action updateSliders = () =>  			{  				hueSlider.Value = ramp.H / 255f;  				satSlider.Value = ramp.S / 255f;  				lumSlider.Value = ramp.L / 255f;  			};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,ColorPickerLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ColorPickerLogic.cs,ColorPickerLogic,The following statement contains a magic number: Action updateSliders = () =>  			{  				hueSlider.Value = ramp.H / 255f;  				satSlider.Value = ramp.S / 255f;  				lumSlider.Value = ramp.L / 255f;  			};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,ColorPickerLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ColorPickerLogic.cs,ColorPickerLogic,The following statement contains a magic number: Action updateSliders = () =>  			{  				hueSlider.Value = ramp.H / 255f;  				satSlider.Value = ramp.S / 255f;  				lumSlider.Value = ramp.L / 255f;  			};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,ColorPickerLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ColorPickerLogic.cs,ColorPickerLogic,The following statement contains a magic number: randomButton.OnClick = () =>  				{  					var hue = (byte)Game.CosmeticRandom.Next(255);  					var sat = (byte)Game.CosmeticRandom.Next(255);  					var lum = (byte)Game.CosmeticRandom.Next(51'255);    					ramp = new ColorRamp(hue' sat' lum' 10);  					updateSliders();  					sliderChanged();  				};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,ColorPickerLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ColorPickerLogic.cs,ColorPickerLogic,The following statement contains a magic number: randomButton.OnClick = () =>  				{  					var hue = (byte)Game.CosmeticRandom.Next(255);  					var sat = (byte)Game.CosmeticRandom.Next(255);  					var lum = (byte)Game.CosmeticRandom.Next(51'255);    					ramp = new ColorRamp(hue' sat' lum' 10);  					updateSliders();  					sliderChanged();  				};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,ColorPickerLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ColorPickerLogic.cs,ColorPickerLogic,The following statement contains a magic number: randomButton.OnClick = () =>  				{  					var hue = (byte)Game.CosmeticRandom.Next(255);  					var sat = (byte)Game.CosmeticRandom.Next(255);  					var lum = (byte)Game.CosmeticRandom.Next(51'255);    					ramp = new ColorRamp(hue' sat' lum' 10);  					updateSliders();  					sliderChanged();  				};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,ColorPickerLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ColorPickerLogic.cs,ColorPickerLogic,The following statement contains a magic number: randomButton.OnClick = () =>  				{  					var hue = (byte)Game.CosmeticRandom.Next(255);  					var sat = (byte)Game.CosmeticRandom.Next(255);  					var lum = (byte)Game.CosmeticRandom.Next(51'255);    					ramp = new ColorRamp(hue' sat' lum' 10);  					updateSliders();  					sliderChanged();  				};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,ColorPickerLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ColorPickerLogic.cs,ColorPickerLogic,The following statement contains a magic number: randomButton.OnClick = () =>  				{  					var hue = (byte)Game.CosmeticRandom.Next(255);  					var sat = (byte)Game.CosmeticRandom.Next(255);  					var lum = (byte)Game.CosmeticRandom.Next(51'255);    					ramp = new ColorRamp(hue' sat' lum' 10);  					updateSliders();  					sliderChanged();  				};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DiplomacyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DiplomacyLogic.cs,LayoutDialog,The following statement contains a magic number: var y = 50;
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DiplomacyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DiplomacyLogic.cs,LayoutDialog,The following statement contains a magic number: var margin = 20;
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DiplomacyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DiplomacyLogic.cs,LayoutDialog,The following statement contains a magic number: var labelWidth = (bg.Bounds.Width - 3 * margin) / 3;
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DiplomacyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DiplomacyLogic.cs,LayoutDialog,The following statement contains a magic number: var labelWidth = (bg.Bounds.Width - 3 * margin) / 3;
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DiplomacyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DiplomacyLogic.cs,LayoutDialog,The following statement contains a magic number: var ts = new LabelWidget  			{  				Font = "Bold"'  				Bounds = new Rectangle(margin + labelWidth + 10' y' labelWidth' 25)'  				Text = "Their Stance"'  				Align = TextAlign.Left'  			};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DiplomacyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DiplomacyLogic.cs,LayoutDialog,The following statement contains a magic number: var ts = new LabelWidget  			{  				Font = "Bold"'  				Bounds = new Rectangle(margin + labelWidth + 10' y' labelWidth' 25)'  				Text = "Their Stance"'  				Align = TextAlign.Left'  			};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DiplomacyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DiplomacyLogic.cs,LayoutDialog,The following statement contains a magic number: var ms = new LabelWidget  			{  				Font = "Bold"'  				Bounds = new Rectangle(margin + 2 * labelWidth + 20' y' labelWidth' 25)'  				Text = "My Stance"'  				Align = TextAlign.Left'  			};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DiplomacyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DiplomacyLogic.cs,LayoutDialog,The following statement contains a magic number: var ms = new LabelWidget  			{  				Font = "Bold"'  				Bounds = new Rectangle(margin + 2 * labelWidth + 20' y' labelWidth' 25)'  				Text = "My Stance"'  				Align = TextAlign.Left'  			};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DiplomacyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DiplomacyLogic.cs,LayoutDialog,The following statement contains a magic number: var ms = new LabelWidget  			{  				Font = "Bold"'  				Bounds = new Rectangle(margin + 2 * labelWidth + 20' y' labelWidth' 25)'  				Text = "My Stance"'  				Align = TextAlign.Left'  			};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DiplomacyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DiplomacyLogic.cs,LayoutDialog,The following statement contains a magic number: y += 35;
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DiplomacyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DiplomacyLogic.cs,LayoutDialog,The following statement contains a magic number: var label = new LabelWidget  				{  					Bounds = new Rectangle(margin' y' labelWidth' 25)'  					Text = p.PlayerName'  					Align = TextAlign.Left'  					Font = "Bold"'  					Color = p.ColorRamp.GetColor(0)'  				};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DiplomacyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DiplomacyLogic.cs,LayoutDialog,The following statement contains a magic number: var theirStance = new LabelWidget  				{  					Bounds = new Rectangle( margin + labelWidth + 10' y' labelWidth' 25)'  					Text = p.PlayerName'  					Align = TextAlign.Left'    					GetText = () => pp.Stances[ world.LocalPlayer ].ToString()'  				};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DiplomacyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DiplomacyLogic.cs,LayoutDialog,The following statement contains a magic number: var theirStance = new LabelWidget  				{  					Bounds = new Rectangle( margin + labelWidth + 10' y' labelWidth' 25)'  					Text = p.PlayerName'  					Align = TextAlign.Left'    					GetText = () => pp.Stances[ world.LocalPlayer ].ToString()'  				};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DiplomacyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DiplomacyLogic.cs,LayoutDialog,The following statement contains a magic number: var myStance = new DropDownButtonWidget  				{  					Bounds = new Rectangle( margin + 2 * labelWidth + 20'  y' labelWidth' 25)'  					GetText = () => world.LocalPlayer.Stances[ pp ].ToString()'  				};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DiplomacyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DiplomacyLogic.cs,LayoutDialog,The following statement contains a magic number: var myStance = new DropDownButtonWidget  				{  					Bounds = new Rectangle( margin + 2 * labelWidth + 20'  y' labelWidth' 25)'  					GetText = () => world.LocalPlayer.Stances[ pp ].ToString()'  				};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DiplomacyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DiplomacyLogic.cs,LayoutDialog,The following statement contains a magic number: var myStance = new DropDownButtonWidget  				{  					Bounds = new Rectangle( margin + 2 * labelWidth + 20'  y' labelWidth' 25)'  					GetText = () => world.LocalPlayer.Stances[ pp ].ToString()'  				};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DiplomacyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DiplomacyLogic.cs,LayoutDialog,The following statement contains a magic number: y += 35;
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DiplomacyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DiplomacyLogic.cs,ShowDropDown,The following statement contains a magic number: dropdown.ShowDropDown("LABEL_DROPDOWN_TEMPLATE"' 150' stances' setupItem);
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DirectConnectLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DirectConnectLogic.cs,DirectConnectLogic,The following statement contains a magic number: portField.Text = last.Length == 2 ? last[1] : "1234";
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DirectConnectLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DirectConnectLogic.cs,DirectConnectLogic,The following statement contains a magic number: panel.Get<ButtonWidget>("JOIN_BUTTON").OnClick = () =>  			{  				var port = Exts.WithDefault(1234' () => int.Parse(portField.Text));    				Game.Settings.Player.LastServer = "{0}:{1}".F(ipField.Text' port);  				Game.Settings.Save();    				Ui.CloseWindow();  				ConnectionLogic.Connect(ipField.Text' port' openLobby' onExit);  			};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DownloadPackagesLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DownloadPackagesLogic.cs,ShowDownloadDialog,The following statement contains a magic number: Action<DownloadProgressChangedEventArgs> onDownloadProgress = i =>  			{  				if (progressBar.Indeterminate)  					progressBar.SetIndeterminate(false);    				progressBar.Percentage = i.ProgressPercentage;  				statusLabel.GetText = () => "Downloading {1}/{2} kB ({0}%)".F(i.ProgressPercentage' i.BytesReceived / 1024' i.TotalBytesToReceive / 1024);  			};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,DownloadPackagesLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\DownloadPackagesLogic.cs,ShowDownloadDialog,The following statement contains a magic number: Action<DownloadProgressChangedEventArgs> onDownloadProgress = i =>  			{  				if (progressBar.Indeterminate)  					progressBar.SetIndeterminate(false);    				progressBar.Percentage = i.ProgressPercentage;  				statusLabel.GetText = () => "Downloading {1}/{2} kB ({0}%)".F(i.ProgressPercentage' i.BytesReceived / 1024' i.TotalBytesToReceive / 1024);  			};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,LobbyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\LobbyLogic.cs,LobbyLogic,The following statement contains a magic number: assignTeams.IsDisabled = () => gameStarting || orderManager.LobbyInfo.Clients.Count(c => c.Slot != null) < 2  					|| orderManager.LocalClient == null || orderManager.LocalClient.IsReady;
Magic Number,OpenRA.Mods.RA.Widgets.Logic,LobbyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\LobbyLogic.cs,LobbyLogic,The following statement contains a magic number: assignTeams.OnMouseDown = _ =>  				{  					var options = Enumerable.Range(2' orderManager.LobbyInfo.Clients.Count(c => c.Slot != null).Clamp(2' 8) - 1).Select(d => new DropDownOption  					{  						Title = "{0} Teams".F(d)'  						IsSelected = () => false'  						OnClick = () => orderManager.IssueOrder(Order.Command("assignteams {0}".F(d.ToString())))  					});  					Func<DropDownOption' ScrollItemWidget' ScrollItemWidget> setupItem = (option' template) =>  					{  						var item = ScrollItemWidget.Setup(template' option.IsSelected' option.OnClick);  						item.Get<LabelWidget>("LABEL").GetText = () => option.Title;  						return item;  					};  					assignTeams.ShowDropDown("LABEL_DROPDOWN_TEMPLATE"' options.Count() * 30' options' setupItem);  				};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,LobbyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\LobbyLogic.cs,LobbyLogic,The following statement contains a magic number: assignTeams.OnMouseDown = _ =>  				{  					var options = Enumerable.Range(2' orderManager.LobbyInfo.Clients.Count(c => c.Slot != null).Clamp(2' 8) - 1).Select(d => new DropDownOption  					{  						Title = "{0} Teams".F(d)'  						IsSelected = () => false'  						OnClick = () => orderManager.IssueOrder(Order.Command("assignteams {0}".F(d.ToString())))  					});  					Func<DropDownOption' ScrollItemWidget' ScrollItemWidget> setupItem = (option' template) =>  					{  						var item = ScrollItemWidget.Setup(template' option.IsSelected' option.OnClick);  						item.Get<LabelWidget>("LABEL").GetText = () => option.Title;  						return item;  					};  					assignTeams.ShowDropDown("LABEL_DROPDOWN_TEMPLATE"' options.Count() * 30' options' setupItem);  				};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,LobbyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\LobbyLogic.cs,LobbyLogic,The following statement contains a magic number: assignTeams.OnMouseDown = _ =>  				{  					var options = Enumerable.Range(2' orderManager.LobbyInfo.Clients.Count(c => c.Slot != null).Clamp(2' 8) - 1).Select(d => new DropDownOption  					{  						Title = "{0} Teams".F(d)'  						IsSelected = () => false'  						OnClick = () => orderManager.IssueOrder(Order.Command("assignteams {0}".F(d.ToString())))  					});  					Func<DropDownOption' ScrollItemWidget' ScrollItemWidget> setupItem = (option' template) =>  					{  						var item = ScrollItemWidget.Setup(template' option.IsSelected' option.OnClick);  						item.Get<LabelWidget>("LABEL").GetText = () => option.Title;  						return item;  					};  					assignTeams.ShowDropDown("LABEL_DROPDOWN_TEMPLATE"' options.Count() * 30' options' setupItem);  				};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,LobbyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\LobbyLogic.cs,LobbyLogic,The following statement contains a magic number: assignTeams.OnMouseDown = _ =>  				{  					var options = Enumerable.Range(2' orderManager.LobbyInfo.Clients.Count(c => c.Slot != null).Clamp(2' 8) - 1).Select(d => new DropDownOption  					{  						Title = "{0} Teams".F(d)'  						IsSelected = () => false'  						OnClick = () => orderManager.IssueOrder(Order.Command("assignteams {0}".F(d.ToString())))  					});  					Func<DropDownOption' ScrollItemWidget' ScrollItemWidget> setupItem = (option' template) =>  					{  						var item = ScrollItemWidget.Setup(template' option.IsSelected' option.OnClick);  						item.Get<LabelWidget>("LABEL").GetText = () => option.Title;  						return item;  					};  					assignTeams.ShowDropDown("LABEL_DROPDOWN_TEMPLATE"' options.Count() * 30' options' setupItem);  				};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,LobbyLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\LobbyLogic.cs,LobbyLogic,The following statement contains a magic number: difficulty.OnMouseDown = _ =>  				{  					var options = Map.Difficulties.Select(d => new DropDownOption  					{  						Title = d'  						IsSelected = () => orderManager.LobbyInfo.GlobalSettings.Difficulty == d'  						OnClick = () => orderManager.IssueOrder(Order.Command("difficulty {0}".F(d)))  					});  					Func<DropDownOption' ScrollItemWidget' ScrollItemWidget> setupItem = (option' template) =>  					{  						var item = ScrollItemWidget.Setup(template' option.IsSelected' option.OnClick);  						item.Get<LabelWidget>("LABEL").GetText = () => option.Title;  						return item;  					};  					difficulty.ShowDropDown("LABEL_DROPDOWN_TEMPLATE"' options.Count() * 30' options' setupItem);  				};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,LobbyUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\LobbyUtils.cs,ShowSlotDropDown,The following statement contains a magic number: dropdown.ShowDropDown("LABEL_DROPDOWN_TEMPLATE"' 150' options' setupItem);
Magic Number,OpenRA.Mods.RA.Widgets.Logic,LobbyUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\LobbyUtils.cs,ShowTeamDropDown,The following statement contains a magic number: dropdown.ShowDropDown("TEAM_DROPDOWN_TEMPLATE"' 150' options' setupItem);
Magic Number,OpenRA.Mods.RA.Widgets.Logic,LobbyUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\LobbyUtils.cs,ShowRaceDropDown,The following statement contains a magic number: dropdown.ShowDropDown("RACE_DROPDOWN_TEMPLATE"' 150' countryNames.Keys' setupItem);
Magic Number,OpenRA.Mods.RA.Widgets.Logic,LobbyUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\LobbyUtils.cs,SelectSpawnPoint,The following statement contains a magic number: var selectedSpawn = map.GetSpawnPoints()  				.Select((sp' i) => Pair.New(mapPreview.ConvertToPreview(sp)' i))  				.Where(a => (a.First - mi.Location).LengthSquared < 64)  				.Select(a => a.Second + 1)  				.FirstOrDefault();
Magic Number,OpenRA.Mods.RA.Widgets.Logic,LobbyUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\LobbyUtils.cs,ShowSpawnPointTooltip,The following statement contains a magic number: Game.Renderer.Fonts["Bold"].DrawTextWithContrast(client.Name' position + new int2(5' 5)' Color.White' Color.Black' 1);
Magic Number,OpenRA.Mods.RA.Widgets.Logic,LobbyUtils,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\LobbyUtils.cs,ShowSpawnPointTooltip,The following statement contains a magic number: Game.Renderer.Fonts["Bold"].DrawTextWithContrast(client.Name' position + new int2(5' 5)' Color.White' Color.Black' 1);
Magic Number,OpenRA.Mods.RA.Widgets.Logic,MapChooserLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\MapChooserLogic.cs,MapChooserLogic,The following statement contains a magic number: scrollpanel.ScrollVelocity = 40f;
Magic Number,OpenRA.Mods.RA.Widgets.Logic,MapChooserLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\MapChooserLogic.cs,MapChooserLogic,The following statement contains a magic number: gameModeDropdown.OnClick = () =>  					gameModeDropdown.ShowDropDown("LABEL_DROPDOWN_TEMPLATE"' 210' gameModes' setupItem);
Magic Number,OpenRA.Mods.RA.Widgets.Logic,MapChooserLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\MapChooserLogic.cs,EnumerateMaps,The following statement contains a magic number: numberPlayableCells >= 120 * 120
Magic Number,OpenRA.Mods.RA.Widgets.Logic,MapChooserLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\MapChooserLogic.cs,EnumerateMaps,The following statement contains a magic number: numberPlayableCells >= 120 * 120
Magic Number,OpenRA.Mods.RA.Widgets.Logic,MissionObjectivesLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\MissionObjectivesLogic.cs,MissionObjectivesLogic,The following statement contains a magic number: objectivesButton.IsHighlighted = () => Game.LocalTick % 50 < 25 && objectivesButton.Highlighted;
Magic Number,OpenRA.Mods.RA.Widgets.Logic,MissionObjectivesLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\MissionObjectivesLogic.cs,MissionObjectivesLogic,The following statement contains a magic number: objectivesButton.IsHighlighted = () => Game.LocalTick % 50 < 25 && objectivesButton.Highlighted;
Magic Number,OpenRA.Mods.RA.Widgets.Logic,ObserverStatsLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ObserverStatsLogic.cs,ObserverStatsLogic,The following statement contains a magic number: statsDropDown.OnMouseDown = _ =>  			{  				var options = new List<StatsDropDownOption>  				{  					new StatsDropDownOption   					{  						Title = "Basic"'  						IsSelected = () => basicStatsHeaders.Visible'  						OnClick = () =>  						{  							ClearStats();  							statsDropDown.GetText = () => "Basic";  							DisplayStats(BasicStats);  						}  					}'  					new StatsDropDownOption   					{  						Title = "Economy"'  						IsSelected = () => economyStatsHeaders.Visible'  						OnClick = () =>   						{  							ClearStats();  							statsDropDown.GetText = () => "Economy";  							DisplayStats(EconomyStats);  						}  					}'  					new StatsDropDownOption   					{  						Title = "Production"'  						IsSelected = () => productionStatsHeaders.Visible'  						OnClick = () =>   						{  							ClearStats();  							statsDropDown.GetText = () => "Production";  							DisplayStats(ProductionStats);  						}  					}'  					new StatsDropDownOption   					{  						Title = "Combat"'  						IsSelected = () => combatStatsHeaders.Visible'  						OnClick = () =>   						{  							ClearStats();  							statsDropDown.GetText = () => "Combat";  							DisplayStats(CombatStats);  						}  					}'  					new StatsDropDownOption  					{  						Title = "Earnings (graph)"'  						IsSelected = () => earnedThisMinuteGraphHeaders.Visible'  						OnClick = () =>   						{  							ClearStats();  							statsDropDown.GetText = () => "Earnings (graph)";  							EarnedThisMinuteGraph();  						}  					}  				};  				Func<StatsDropDownOption' ScrollItemWidget' ScrollItemWidget> setupItem = (option' template) =>  				{  					var item = ScrollItemWidget.Setup(template' option.IsSelected' option.OnClick);  					item.Get<LabelWidget>("LABEL").GetText = () => option.Title;  					return item;  				};  				statsDropDown.ShowDropDown("LABEL_DROPDOWN_TEMPLATE"' 150' options' setupItem);  			};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,ObserverStatsLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ObserverStatsLogic.cs,MapControl,The following statement contains a magic number: return (control * 100).ToString("F1") + "%";
Magic Number,OpenRA.Mods.RA.Widgets.Logic,ObserverStatsLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ObserverStatsLogic.cs,AverageOrdersPerMinute,The following statement contains a magic number: return (world.FrameNumber == 0 ? 0 : orders / (world.FrameNumber / 1500.0)).ToString("F1");
Magic Number,OpenRA.Mods.RA.Widgets.Logic,ObserverStatsLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ObserverStatsLogic.cs,AverageEarnedPerMinute,The following statement contains a magic number: return "$" + (world.FrameNumber == 0 ? 0 : earned / (world.FrameNumber / 1500.0)).ToString("F2");
Magic Number,OpenRA.Mods.RA.Widgets.Logic,RAInstallFromCDLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\RAInstallFromCDLogic.cs,Install,The following statement contains a magic number: var onProgress = (Action<string>)(s => Game.RunAfterTick(() =>  			{  				progressBar.Percentage = installCounter*100/installTotal;  				installCounter++;    				statusLabel.GetText = () => s;  			}));
Magic Number,OpenRA.Mods.RA.Widgets.Logic,ReplayBrowserLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ReplayBrowserLogic.cs,SelectReplay,The following statement contains a magic number: panel.Get<LabelWidget>("DURATION").GetText =  					() => WidgetUtils.FormatTime(currentReplay.Duration * 3	/* todo: 3:1 ratio isnt always true. */);
Magic Number,OpenRA.Mods.RA.Widgets.Logic,ServerBrowserLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ServerBrowserLogic.cs,GetStateLabel,The following statement contains a magic number: game.State == 2
Magic Number,OpenRA.Mods.RA.Widgets.Logic,ServerCreationLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ServerCreationLogic.cs,CreateAndJoin,The following statement contains a magic number: listenPort = 1234;
Magic Number,OpenRA.Mods.RA.Widgets.Logic,ServerCreationLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\ServerCreationLogic.cs,CreateAndJoin,The following statement contains a magic number: externalPort = 1234;
Magic Number,OpenRA.Mods.RA.Widgets.Logic,SettingsMenuLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\SettingsMenuLogic.cs,SettingsMenuLogic,The following statement contains a magic number: pixelDoubleCheckbox.OnClick = () =>  			{  				gs.PixelDouble ^= true;  				Game.viewport.Zoom = gs.PixelDouble ? 2 : 1;  			};
Magic Number,OpenRA.Mods.RA.Widgets.Logic,SettingsMenuLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\SettingsMenuLogic.cs,ShowSoundTickDropdown,The following statement contains a magic number: dropdown.ShowDropDown("LABEL_DROPDOWN_TEMPLATE"' 500' options.Keys' setupItem);
Magic Number,OpenRA.Mods.RA.Widgets.Logic,SettingsMenuLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\SettingsMenuLogic.cs,ShowWindowModeDropdown,The following statement contains a magic number: dropdown.ShowDropDown("LABEL_DROPDOWN_TEMPLATE"' 500' options.Keys' setupItem);
Magic Number,OpenRA.Mods.RA.Widgets.Logic,SettingsMenuLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\SettingsMenuLogic.cs,ShowRendererDropdown,The following statement contains a magic number: dropdown.ShowDropDown("LABEL_DROPDOWN_TEMPLATE"' 500' options.Keys' setupItem);
Magic Number,OpenRA.Mods.RA.Widgets.Logic,SettingsMenuLogic,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Widgets\Logic\SettingsMenuLogic.cs,ShowSoundEngineDropdown,The following statement contains a magic number: dropdown.ShowDropDown("LABEL_DROPDOWN_TEMPLATE"' 500' options.Keys' setupItem);
Missing Default,OpenRA.Mods.RA.AI,BaseBuilder,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\BaseBuilder.cs,Tick,The following switch statement is missing a default case: switch (state)  			{  				case BuildState.ChooseItem:  					{  						var item = chooseItem(queue);  						if (item == null)  						{  							state = BuildState.WaitForFeedback;  							lastThinkTick = ai.ticks;  						}  						else  						{  							HackyAI.BotDebug("AI: Starting production of {0}".F(item.Name));  							state = BuildState.WaitForProduction;  							ai.world.IssueOrder(Order.StartProduction(queue.self' item.Name' 1));  						}  					}  					break;    				case BuildState.WaitForProduction:  					if (currentBuilding == null) return;	/* let it happen.. */    					else if (currentBuilding.Paused)  						ai.world.IssueOrder(Order.PauseProduction(queue.self' currentBuilding.Item' false));  					else if (currentBuilding.Done)  					{  						state = BuildState.WaitForFeedback;  						lastThinkTick = ai.ticks;    						/* place the building */  						BuildingType type = BuildingType.Building;  						if(Rules.Info[currentBuilding.Item].Traits.Contains<AttackBaseInfo>())  							type = BuildingType.Defense;  						else if(Rules.Info[currentBuilding.Item].Traits.Contains<OreRefineryInfo>())  							type = BuildingType.Refinery;    						var location = ai.ChooseBuildLocation(currentBuilding.Item' type);  						if (location == null)  						{  							HackyAI.BotDebug("AI: Nowhere to place {0}".F(currentBuilding.Item));  							ai.world.IssueOrder(Order.CancelProduction(queue.self' currentBuilding.Item' 1));  						}  						else  						{  							ai.world.IssueOrder(new Order("PlaceBuilding"' ai.p.PlayerActor' false)  								{  									TargetLocation = location.Value'  									TargetString = currentBuilding.Item  								});  						}  					}  					break;    				case BuildState.WaitForFeedback:  					if (ai.ticks - lastThinkTick > HackyAI.feedbackTime)  						state = BuildState.ChooseItem;  					break;  			}
Missing Default,OpenRA.Mods.RA.AI,Squad,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,Squad,The following switch statement is missing a default case: switch (type)  			{  				case SquadType.Assault:  				case SquadType.Rush:  					fsm.ChangeState(new GroundUnitsIdleState()' true);  					break;  				case SquadType.Air:  					fsm.ChangeState(new AirIdleState()' true);  					break;  				case SquadType.Protection:  					fsm.ChangeState(new UnitsForProtectionIdleState()' true);  					break;  			}
Missing Default,OpenRA.Mods.RA.AI,HackyAI,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\AI\HackyAI.cs,ChooseBuildLocation,The following switch statement is missing a default case: switch(type)  			{  				case BuildingType.Defense:  					Actor enemyBase = FindEnemyBuildingClosestToPos(baseCenter.ToPPos());  					return enemyBase != null ? findPos(enemyBase.CenterLocation' defenseCenter) : null;    				case BuildingType.Refinery:  					var tilesPos = world.FindTilesInCircle(baseCenter' MaxBaseDistance)  						.Where(a => resourceTypes.Contains(world.GetTerrainType(new CPos(a.X' a.Y))))  						.OrderBy(a => (new PPos(a.ToPPos().X' a.ToPPos().Y) - baseCenter.ToPPos()).LengthSquared);  					return tilesPos.Any() ? findPos(tilesPos.First().ToPPos()' baseCenter) : null;    				case BuildingType.Building:  					for (var k = 0; k < maxBaseDistance; k++)  						foreach (var t in world.FindTilesInCircle(baseCenter' k))  							if (world.CanPlaceBuilding(actorType' bi' t' null))  							{  								if (distanceToBaseIsImportant)  									if (!bi.IsCloseEnoughToBase(world' p' actorType' t))  										return null;  								if (NoBuildingsUnder(Util.ExpandFootprint(FootprintUtils.Tiles(actorType' bi' t)' false)))  									return t;  							}  					break;  			}
Missing Default,OpenRA.Mods.RA,RAHarvesterDockSequence,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Activities\RAHarvesterDockSequence.cs,Tick,The following switch statement is missing a default case: switch (state)  			{  				case State.Wait:  					return this;  				case State.Turn:  					state = State.Dock;  					return Util.SequenceActivities(new Turn(angle)' this);  				case State.Dock:  					ru.PlayCustomAnimation(self' "dock"' () => {ru.PlayCustomAnimRepeating(self' "dock-loop"); state = State.Loop;});  					state = State.Wait;  					return this;  				case State.Loop:  					if (harv.TickUnload(self' proc))  						state = State.Undock;  					return this;  				case State.Undock:  					ru.PlayCustomAnimBackwards(self' "dock"' () => state = State.Complete);  					state = State.Wait;  					return this;  				case State.Complete:  					harv.LastLinkedProc = harv.LinkedProc;  					harv.LinkProc(self' null);  					return NextActivity;  			}
Missing Default,OpenRA.Mods.RA,Combat,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Combat.cs,DoImpact,The following switch statement is missing a default case: switch (warhead.DamageModel)  			{  				case DamageModel.Normal:  					{  						var maxSpread = warhead.Spread * (float)Math.Log(Math.Abs(warhead.Damage)' 2);  						var hitActors = world.FindUnitsInCircle(args.dest' (int)maxSpread);    						foreach (var victim in hitActors)  						{  							var damage = (int)GetDamageToInflict(victim' args' warhead' args.firepowerModifier);  							victim.InflictDamage(args.firedBy' damage' warhead);  						}  					} break;    				case DamageModel.PerCell:  					{  						foreach (var t in world.FindTilesInCircle(targetTile' warhead.Size[0]))  							foreach (var unit in world.FindUnits(t.ToPPos()' (t + new CVec(1'1)).ToPPos()))  								unit.InflictDamage(args.firedBy'  									(int)(warhead.Damage * warhead.EffectivenessAgainst(unit))' warhead);  					} break;  			}
Missing Default,OpenRA.Mods.RA,PlayerStatistics,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Player\PlayerStatistics.cs,ResolveOrder,The following switch statement is missing a default case: switch (order.OrderString)  			{  				case "Chat":  				case "TeamChat":  				case "HandshakeResponse":  				case "PauseRequest":  				case "PauseGame":  				case "StartGame":  				case "Disconnected":  				case "ServerError":  				case "SyncInfo":  					return;  			}
Missing Default,OpenRA.Mods.RA,ProductionQueue,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Player\ProductionQueue.cs,ResolveOrder,The following switch statement is missing a default case: switch( order.OrderString )  			{  			case "StartProduction":  				{  					var unit = Rules.Info[order.TargetString];  					var bi = unit.Traits.Get<BuildableInfo>();  					if (bi.Queue != Info.Type)  						return; /* Not built by this queue */    					var cost = unit.Traits.Contains<ValuedInfo>() ? unit.Traits.Get<ValuedInfo>().Cost : 0;  					var time = GetBuildTime(order.TargetString);    					if (BuildableItems().All(b => b.Name != order.TargetString))  						return;	/* you can't build that!! */    					// Check if the player is trying to build more units that they are allowed  					if (bi.BuildLimit > 0)  					{  						var inQueue = Queue.Count(pi => pi.Item == order.TargetString);  						var owned = self.Owner.World.ActorsWithTrait<Buildable>().Count(a => a.Actor.Info.Name == order.TargetString && a.Actor.Owner == self.Owner);  						if (inQueue + owned >= bi.BuildLimit)  						{  							Sound.PlayNotification(self.Owner' "Speech"' Info.BlockedAudio' self.Owner.Country.Race);  							return;  						}  					}    					for (var n = 0; n < order.TargetLocation.X; n++)	// repeat count  					{  						bool hasPlayedSound = false;  						BeginProduction(new ProductionItem(this' order.TargetString' time' cost' PlayerPower'  								() => self.World.AddFrameEndTask(  									_ =>  									{  										var isBuilding = unit.Traits.Contains<BuildingInfo>();    										if (isBuilding && !hasPlayedSound)  										{  											hasPlayedSound = Sound.PlayNotification(self.Owner' "Speech"' Info.ReadyAudio' self.Owner.Country.Race);  										}  										else if (!isBuilding)  										{  											if (BuildUnit(order.TargetString))  												Sound.PlayNotification(self.Owner' "Speech"' Info.ReadyAudio' self.Owner.Country.Race);  											else if (!hasPlayedSound && time > 0)  											{  												hasPlayedSound = Sound.PlayNotification(self.Owner' "Speech"' Info.BlockedAudio' self.Owner.Country.Race);  											}  										}  									})));  					}  					break;  				}  			case "PauseProduction":  				{  					if( Queue.Count > 0 && Queue[0].Item == order.TargetString )  						Queue[0].Paused = ( order.TargetLocation.X != 0 );  					break;  				}  			case "CancelProduction":  				{  					CancelProduction(order.TargetString'order.TargetLocation.X);  					break;  				}  			}
Missing Default,OpenRA.Mods.RA.Missions,CountdownTimer,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\CountdownTimer.cs,Tick,The following switch statement is missing a default case: switch (TicksLeft)  			{  				case 1500 * 00: OnExpired(this); break;  				case 1500 * 01: OnOneMinuteRemaining(this); break;  				case 1500 * 02: OnTwoMinutesRemaining(this); break;  				case 1500 * 03: OnThreeMinutesRemaining(this); break;  				case 1500 * 04: OnFourMinutesRemaining(this); break;  				case 1500 * 05: OnFiveMinutesRemaining(this); break;  				case 1500 * 10: OnTenMinutesRemaining(this); break;  				case 1500 * 20: OnTwentyMinutesRemaining(this); break;  				case 1500 * 30: OnThirtyMinutesRemaining(this); break;  				case 1500 * 40: OnFortyMinutesRemaining(this); break;  			}
Missing Default,OpenRA.Mods.RA.Missions,Survival01Script,D:\research\architectureSmells\repos\chrisforbes_OpenRA\OpenRA.Mods.RA\Missions\Survival01Script.cs,WorldLoaded,The following switch statement is missing a default case: switch (difficulty)  			{  			case "Hard":  				attackAtFrameIncrement = 350;  				attackAtFrameIncrementInf = 200;  				break;  			case "Normal":  				attackAtFrameIncrement = 450;  				attackAtFrameIncrementInf = 300;  				break;  			case "Easy":  				attackAtFrameIncrement = 550;  				attackAtFrameIncrementInf = 400;  				break;  			}
