Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ReactGraph.Tests,ExpressionStringBuilderTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ExpressionStringBuilderTests.cs,VerifyProperties,The length of the statement  "            VerifyExpression(() => mortgateCalculatorViewModel.PaymentSchedule.HasValidationError' "mortgateCalculatorViewModel.PaymentSchedule.HasValidationError"); " is 153.
Long Statement,ReactGraph.Tests,ExpressionStringBuilderTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ExpressionStringBuilderTests.cs,VerifyFormulas,The length of the statement  "            VerifyExpression(() => (int)(notifies.SubTotal * (1m + (notifies.TaxPercentage / 100m)))' "(notifies.SubTotal * (1 + (notifies.TaxPercentage / 100)))"); " is 152.
Long Statement,ReactGraph.Tests,ExpressionStringBuilderTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ExpressionStringBuilderTests.cs,VerifyFormulas,The length of the statement  "            VerifyExpression(() => mortgateCalculatorViewModel.RegeneratePaymentSchedule(true)' "mortgateCalculatorViewModel.RegeneratePaymentSchedule(true)"); " is 147.
Long Statement,ReactGraph.Tests,ExpressionStringBuilderTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ExpressionStringBuilderTests.cs,VerifyFormulas,The length of the statement  "            VerifyExpression(() => StaticMethodLotsOfArguments(notifies.TaxPercentage' notifies.TaxPercentage' notifies.TaxPercentage' notifies.TaxPercentage)' "StaticMethodLotsOfArguments(...)"); " is 184.
Long Statement,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,CalculatePayments,The length of the statement  "            var monthlyPayment = -((-loanAmount * Math.Pow(1 + interestRate' numberPayments)) / (((Math.Pow((1 + interestRate)' numberPayments) - 1) / interestRate))) * 12 / (int)paymentFrequency; " is 184.
Magic Number,ReactGraph.Tests,ActionTarget,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ActionTarget.cs,ExpressionCanTriggerAction2,The following statement contains a magic number: simple.Value = 2;
Magic Number,ReactGraph.Tests,ApiTest,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ApiTest.cs,FluentApiTest,The following statement contains a magic number: vertex0.Value = 2;
Magic Number,ReactGraph.Tests,ApiTest,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ApiTest.cs,FluentApiTest,The following statement contains a magic number: vertex1.Value.ShouldBe(2);
Magic Number,ReactGraph.Tests,ApiTest,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ApiTest.cs,FluentApiTest,The following statement contains a magic number: vertex2.Value.ShouldBe(4);
Magic Number,ReactGraph.Tests,ApiTest,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ApiTest.cs,FluentApiTest,The following statement contains a magic number: vertex3.Value.ShouldBe(6);
Magic Number,ReactGraph.Tests,ApiTest,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ApiTest.cs,ExceptionsArePassedToHandlers,The following statement contains a magic number: a.Value = 2;
Magic Number,ReactGraph.Tests,ApiTest,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ApiTest.cs,NodeWhichThrowsExceptionHasSubgraphRemovedFromCurrentExecution,The following statement contains a magic number: a.Value = 2;
Magic Number,ReactGraph.Tests,ApiTest,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ApiTest.cs,NodeWhichThrowsExceptionHasSubgraphRemovedFromCurrentExecution,The following statement contains a magic number: c.Value.ShouldBe(2);
Magic Number,ReactGraph.Tests,ApiTest,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ApiTest.cs,NodeWhichThrowsExceptionHasSubgraphRemovedFromCurrentExecution,The following statement contains a magic number: e.Value.ShouldBe(2);
Magic Number,ReactGraph.Tests,ApiTest,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ApiTest.cs,Instrumentation,The following statement contains a magic number: a.Value = 2;
Magic Number,ReactGraph.Tests,ApiTest,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ApiTest.cs,Instrumentation,The following statement contains a magic number: instrumentation.NodeEvaluations.Count.ShouldBe(8);
Magic Number,ReactGraph.Tests,ApiTest,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ApiTest.cs,CheckCyclesShouldThrowWhenThereIsACycle,The following statement contains a magic number: engine.Assign(() => b.Value).From(() => a.Value * 2' ex => { });
Magic Number,ReactGraph.Tests,ApiTest,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ApiTest.cs,CheckCyclesShouldThrowWhenThereIsACycle,The following statement contains a magic number: engine.Assign(() => a.Value).From(() => b.Value - 2' ex => { });
Magic Number,ReactGraph.Tests,ApiTest,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ApiTest.cs,CheckCyclesShouldThrowWhenThereAreTwoCycles,The following statement contains a magic number: engine.Assign(() => b.Value).From(() => a.Value * 2' ex => { });
Magic Number,ReactGraph.Tests,ApiTest,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ApiTest.cs,CheckCyclesShouldThrowWhenThereAreTwoCycles,The following statement contains a magic number: engine.Assign(() => a.Value).From(() => b.Value - 2' ex => { });
Magic Number,ReactGraph.Tests,ApiTest,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ApiTest.cs,CheckCyclesShouldThrowWhenThereAreTwoCycles,The following statement contains a magic number: engine.Assign(() => d.Value).From(() => c.Value * 2' ex => { });
Magic Number,ReactGraph.Tests,ApiTest,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ApiTest.cs,CheckCyclesShouldThrowWhenThereAreTwoCycles,The following statement contains a magic number: engine.Assign(() => c.Value).From(() => d.Value - 2' ex => { });
Magic Number,ReactGraph.Tests,ApiTest,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ApiTest.cs,CheckCyclesShouldNotThrowWhenNoCycleExists,The following statement contains a magic number: engine.Assign(() => b.Value).From(() => a.Value * 2' ex => { });
Magic Number,ReactGraph.Tests,DependencyEngineTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\DependencyEngineTests.cs,LocalPropertiesCanBeUsed,The following statement contains a magic number: C.ShouldBe(2);
Magic Number,ReactGraph.Tests,ExpressionStringBuilderTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ExpressionStringBuilderTests.cs,VerifyFormulas,The following statement contains a magic number: var notifies = new Totals              {                  TaxPercentage = 20              };
Magic Number,ReactGraph.Tests,ExpressionStringBuilderTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ExpressionStringBuilderTests.cs,VerifyFormulas,The following statement contains a magic number: VerifyExpression(() => (int)(notifies.SubTotal * (1m + (notifies.TaxPercentage / 100m)))' "(notifies.SubTotal * (1 + (notifies.TaxPercentage / 100)))");
Magic Number,ReactGraph.Tests,ExpressionParserTest,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\ExpressionParserTest.cs,SimpleParamsMethod,The following statement contains a magic number: node.Count.ShouldBe(2);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,PopulateGraph,The following statement contains a magic number: AddEdge(1' 2);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,PopulateGraph,The following statement contains a magic number: AddEdge(1' 3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,PopulateGraph,The following statement contains a magic number: AddEdge(2' 3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,PopulateGraph,The following statement contains a magic number: AddEdge(2' 3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,PopulateGraph,The following statement contains a magic number: sut.VerticiesCount.ShouldBe(3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,PopulateGraph,The following statement contains a magic number: sut.EdgesCount.ShouldBe(3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,DeapthFirstSeach,The following statement contains a magic number: AddEdge(1' 2);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,DeapthFirstSeach,The following statement contains a magic number: AddEdge(1' 3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,DeapthFirstSeach,The following statement contains a magic number: AddEdge(2' 3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,DeapthFirstSeach,The following statement contains a magic number: AddEdge(2' 3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,DeapthFirstSeach,The following statement contains a magic number: AddEdge(3' 4);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,DeapthFirstSeach,The following statement contains a magic number: AddEdge(3' 4);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,DeapthFirstSeach,The following statement contains a magic number: var result = sut.DepthFirstSearch(2).Select(v => v.Data);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,DeapthFirstSeach,The following statement contains a magic number: result.ShouldBe(new[] { 2' 3' 4 });
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,DeapthFirstSeach,The following statement contains a magic number: result.ShouldBe(new[] { 2' 3' 4 });
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,DeapthFirstSeach,The following statement contains a magic number: result.ShouldBe(new[] { 2' 3' 4 });
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,Subgraph,The following statement contains a magic number: AddEdge(1' 2);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,Subgraph,The following statement contains a magic number: AddEdge(1' 3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,Subgraph,The following statement contains a magic number: AddEdge(2' 3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,Subgraph,The following statement contains a magic number: AddEdge(2' 3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,Subgraph,The following statement contains a magic number: AddEdge(3' 4);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,Subgraph,The following statement contains a magic number: AddEdge(3' 4);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,Subgraph,The following statement contains a magic number: var result = sut.SubGraph(2);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,Subgraph,The following statement contains a magic number: result.VerticiesCount.ShouldBe(3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,Subgraph,The following statement contains a magic number: result.EdgesCount.ShouldBe(2);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,Sources,The following statement contains a magic number: AddEdge(1' 2);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,Sources,The following statement contains a magic number: AddEdge(1' 3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,Sources,The following statement contains a magic number: AddEdge(2' 3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,Sources,The following statement contains a magic number: AddEdge(2' 3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,Sources,The following statement contains a magic number: AddEdge(3' 4);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,Sources,The following statement contains a magic number: AddEdge(3' 4);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,Sources,The following statement contains a magic number: AddEdge(5' 4);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,Sources,The following statement contains a magic number: AddEdge(5' 4);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,Sources,The following statement contains a magic number: result.Select(v => v.Data).ShouldBe(new[] { 1' 5 });
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort,The following statement contains a magic number: AddEdge(1' 2);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort,The following statement contains a magic number: AddEdge(1' 3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort,The following statement contains a magic number: AddEdge(2' 3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort,The following statement contains a magic number: AddEdge(2' 3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort,The following statement contains a magic number: AddEdge(3' 4);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort,The following statement contains a magic number: AddEdge(3' 4);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort,The following statement contains a magic number: AddEdge(5' 4);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort,The following statement contains a magic number: AddEdge(5' 4);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort,The following statement contains a magic number: AddEdge(5' 4);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort,The following statement contains a magic number: AddEdge(5' 4);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort,The following statement contains a magic number: result.Select(v => v.Data).ShouldBe(new[] { 1' 2' 3' 4 });
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort,The following statement contains a magic number: result.Select(v => v.Data).ShouldBe(new[] { 1' 2' 3' 4 });
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort,The following statement contains a magic number: result.Select(v => v.Data).ShouldBe(new[] { 1' 2' 3' 4 });
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort2,The following statement contains a magic number: AddEdge(0' 3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort2,The following statement contains a magic number: AddEdge(0' 4);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort2,The following statement contains a magic number: AddEdge(1' 2);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort2,The following statement contains a magic number: AddEdge(1' 3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort2,The following statement contains a magic number: AddEdge(3' 2);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort2,The following statement contains a magic number: AddEdge(3' 2);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort2,The following statement contains a magic number: AddEdge(3' 4);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort2,The following statement contains a magic number: AddEdge(3' 4);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort2,The following statement contains a magic number: AddEdge(2' 4);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort2,The following statement contains a magic number: AddEdge(2' 4);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort2,The following statement contains a magic number: AddEdge(2' 5);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort2,The following statement contains a magic number: AddEdge(2' 5);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort2,The following statement contains a magic number: AddEdge(4' 5);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort2,The following statement contains a magic number: AddEdge(4' 5);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort2,The following statement contains a magic number: result.Select(v => v.Data).ShouldBe(new[] { 1' 3' 2' 4' 5 });
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort2,The following statement contains a magic number: result.Select(v => v.Data).ShouldBe(new[] { 1' 3' 2' 4' 5 });
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort2,The following statement contains a magic number: result.Select(v => v.Data).ShouldBe(new[] { 1' 3' 2' 4' 5 });
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,TopologicalSort2,The following statement contains a magic number: result.Select(v => v.Data).ShouldBe(new[] { 1' 3' 2' 4' 5 });
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,CyclicGraph,The following statement contains a magic number: var mortgage = new Mortgate                                 {                                     InterestRate = 5.5'                                     LoanAmount = 150000'                                     LoanLength = 15'                                     PaymentFrequency = PaymentFrequency.Monthly                                 };
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,CyclicGraph,The following statement contains a magic number: var mortgage = new Mortgate                                 {                                     InterestRate = 5.5'                                     LoanAmount = 150000'                                     LoanLength = 15'                                     PaymentFrequency = PaymentFrequency.Monthly                                 };
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,CyclicGraph,The following statement contains a magic number: var mortgage = new Mortgate                                 {                                     InterestRate = 5.5'                                     LoanAmount = 150000'                                     LoanLength = 15'                                     PaymentFrequency = PaymentFrequency.Monthly                                 };
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,CyclicGraph,The following statement contains a magic number: mortgage.PaymentAmount.ShouldBe(1225' 1);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,CalculatePayments,The following statement contains a magic number: var numberPayments = loanLength * 12;
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,CalculatePayments,The following statement contains a magic number: interestRate /= 1200.00;
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,CalculatePayments,The following statement contains a magic number: var monthlyPayment = -((-loanAmount * Math.Pow(1 + interestRate' numberPayments)) / (((Math.Pow((1 + interestRate)' numberPayments) - 1) / interestRate))) * 12 / (int)paymentFrequency;
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,CalculateLength,The following statement contains a magic number: interestRate /= 1200.00;
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,CalculateLength,The following statement contains a magic number: var monthlyPayment = paymentAmount / 12 * (int)paymentFrequency;
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,CalculateLength,The following statement contains a magic number: return Math.Log(monthlyPayment / (loanAmount * interestRate + monthlyPayment)) / Math.Log(1 + interestRate) / 12;
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,CycleDetection,The following statement contains a magic number: AddEdge(1' 2);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,CycleDetection,The following statement contains a magic number: AddEdge(2' 0);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,CycleDetection,The following statement contains a magic number: AddEdge(2' 3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,CycleDetection,The following statement contains a magic number: AddEdge(2' 3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,CycleDetection,The following statement contains a magic number: AddEdge(3' 4);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,CycleDetection,The following statement contains a magic number: AddEdge(3' 4);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,CycleDetection,The following statement contains a magic number: AddEdge(4' 3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,CycleDetection,The following statement contains a magic number: AddEdge(4' 3);
Magic Number,ReactGraph.Tests,GraphTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\GraphTests.cs,CycleDetection,The following statement contains a magic number: detectedCyles.Count().ShouldBe(2);
Magic Number,ReactGraph.Tests,NotifyPropertyChangedTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\NotifyPropertyChangedTests.cs,TriggersOnPropertyChanged,The following statement contains a magic number: var notifies = new Totals              {                  TaxPercentage = 20              };
Magic Number,ReactGraph.Tests,NotifyPropertyChangedTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\NotifyPropertyChangedTests.cs,TriggersOnPropertyChanged,The following statement contains a magic number: engine.Assign(() => notifies.Total)                    .From(() => (int)(notifies.SubTotal * (1m + (notifies.TaxPercentage / 100m)))' e => { });
Magic Number,ReactGraph.Tests,NotifyPropertyChangedTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\NotifyPropertyChangedTests.cs,TriggersOnPropertyChanged,The following statement contains a magic number: notifies.SubTotal = 100;
Magic Number,ReactGraph.Tests,NotifyPropertyChangedTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\NotifyPropertyChangedTests.cs,TriggersOnPropertyChanged,The following statement contains a magic number: notifies.Total.ShouldBe(120);
Magic Number,ReactGraph.Tests,NotifyPropertyChangedTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\NotifyPropertyChangedTests.cs,ListensToNestedProperties,The following statement contains a magic number: engineInstrumentation.AssertSetCount("viewModel.CanApply"' 2);
Magic Number,ReactGraph.Tests,NotifyPropertyChangedTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\NotifyPropertyChangedTests.cs,ListensToNestedProperties,The following statement contains a magic number: engineInstrumentation.AssertSetCount("viewModel.CanApply"' 3);
Magic Number,ReactGraph.Tests,NotifyPropertyChangedTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\NotifyPropertyChangedTests.cs,PreventsReentrancy,The following statement contains a magic number: four.Value.ShouldBe(2);
Magic Number,ReactGraph.Tests,NotifyPropertyChangedTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\NotifyPropertyChangedTests.cs,LeafPropertiesShouldBeListenedTo,The following statement contains a magic number: Foo.ShouldNotBe(42);
Magic Number,ReactGraph.Tests,NotifyPropertyChangedTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\NotifyPropertyChangedTests.cs,LeafPropertiesShouldBeListenedTo,The following statement contains a magic number: Foo.ShouldBe(42);
Magic Number,ReactGraph.Tests,NotifyPropertyChangedTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\NotifyPropertyChangedTests.cs,CalcSomethingToDoWithSchedule,The following statement contains a magic number: return 42;
Magic Number,ReactGraph.Tests,VisualisationTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\VisualisationTests.cs,AddMetadataToNodesTest,The following statement contains a magic number: b.Value = 3;
Magic Number,ReactGraph.Tests,VisualisationTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\VisualisationTests.cs,AddMetadataToNodesTest,The following statement contains a magic number: a.Value = 2;
Magic Number,ReactGraph.Tests,VisualisationTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\VisualisationTests.cs,AddMetadataToNodesTest,The following statement contains a magic number: c.Value.ShouldBe(5);
Magic Number,ReactGraph.Tests,VisualisationTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\VisualisationTests.cs,DefaultColoursForDifferentNodes,The following statement contains a magic number: var notifies = new Totals              {                  TaxPercentage = 20              };
Magic Number,ReactGraph.Tests,VisualisationTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\VisualisationTests.cs,DefaultColoursForDifferentNodes,The following statement contains a magic number: engine.Assign(() => notifies.Total)                    .From(() => (int)(notifies.SubTotal * (1m + (notifies.TaxPercentage / 100m)))' e => { });
Magic Number,ReactGraph.Tests,VisualisationTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\VisualisationTests.cs,LogAllTransitionsAsDot,The following statement contains a magic number: foo.C = 4;
Magic Number,ReactGraph.Tests,VisualisationTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\VisualisationTests.cs,LogAllTransitionsAsDot,The following statement contains a magic number: foo.C = 5;
Magic Number,ReactGraph.Tests,VisualisationTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\VisualisationTests.cs,LogTransitionsInDotFormat,The following statement contains a magic number: foo.C = 4;
Magic Number,ReactGraph.Tests,VisualisationTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\VisualisationTests.cs,LogTransitionsInDotFormat,The following statement contains a magic number: foo.A = 2;
Missing Default,ReactGraph.Tests,VisualisationTests,D:\research\architectureSmells\repos\AdaptiveConsulting_ReactGraph\src\ReactGraph.Tests\VisualisationTests.cs,AddMetadataToNodesTest,The following switch statement is missing a default case: switch (prop.Id)                      {                          case additionId:                              prop.Color = ".7 .3 1.0";                              prop.Label = "+";                              break;                          case propertyId:                              prop.Color = ".7 .3 .5";                              break;                      }
