Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ReactGraph.Visualisation,DotVisualisation,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph.Visualisation\DotVisualisation.cs,Generate,Cyclomatic complexity of the method is 24
Long Statement,ReactGraph.Visualisation,DotVisualisation,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph.Visualisation\DotVisualisation.cs,Generate,The length of the statement  "		if (!visualisationOptions.ShowRoot && (edge.Source.Data.VisualisationInfo.IsRoot || edge.Target.Data.VisualisationInfo.IsRoot)) " is 127.
Long Statement,ReactGraph.Visualisation,DependencyEngineVisualisationExtensions,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph.Visualisation\DependencyEngineVisualisationExtensions.cs,ToDotFormat,The length of the statement  "	return visualsaition.Generate (title' overrideVisualProperties ?? (v => v)' true' options ?? new VisualisationOptions ()); " is 122.
Magic Number,ReactGraph.Visualisation,DependencyEngineListener,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph.Visualisation\DependencyEngineListener.cs,OnDependencyWalkStart,The following statement contains a magic number: nodeIndex = 2;  
Missing Default,ReactGraph.Visualisation,DotVisualisation,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph.Visualisation\DotVisualisation.cs,Generate,The following switch statement is missing a default case: switch (vertex.Data.VisualisationInfo.NodeType) {  case NodeType.Formula:  	properties.Color = "lightblue";  	properties.AddCustomProperty ("style"' "filled");  	properties.AddCustomProperty ("shape"' "octagon");  	break;  case NodeType.Member:  	properties.AddCustomProperty ("shape"' "box");  	properties.AddCustomProperty ("style"' "filled");  	properties.AddCustomProperty ("style"' "rounded");  	break;  case NodeType.Action:  	properties.AddCustomProperty ("style"' "filled");  	properties.Color = "green";  	break;  }  
