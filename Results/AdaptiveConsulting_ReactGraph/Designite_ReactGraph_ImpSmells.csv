Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ReactGraph,DependencyEngine,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\DependencyEngine.cs,ValueHasChanged,Cyclomatic complexity of the method is 16
Complex Method,ReactGraph,ExpressionAdder,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\ExpressionAdder.cs,CreateTargetNode,Cyclomatic complexity of the method is 13
Complex Method,ReactGraph,ExpressionAdder,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\ExpressionAdder.cs,CreateSourceNode,Cyclomatic complexity of the method is 11
Complex Method,ReactGraph.Construction,ExpressionStringBuilder,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\Construction\ExpressionStringBuilder.cs,ToString,Cyclomatic complexity of the method is 19
Long Parameter List,ReactGraph,BuilderBase,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\BuilderBase.cs,CreateMemberDefinition,The method has 5 parameters.
Long Parameter List,ReactGraph,BuilderBase,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\BuilderBase.cs,CreateMemberDefinition,The method has 5 parameters.
Long Parameter List,ReactGraph,MemberDefinition,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\MemberDefinition.cs,MemberDefinition,The method has 5 parameters.
Long Parameter List,ReactGraph.Graph,DirectedGraph,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\Graph\DirectedGraph.cs,StrongConnect,The method has 6 parameters.
Long Parameter List,ReactGraph.NodeInfo,ReadWriteNode,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\NodeInfo\ReadWriteNode.cs,ReadWriteNode,The method has 8 parameters.
Long Parameter List,ReactGraph.NodeInfo,ReadOnlyNodeInfo,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\NodeInfo\ReadOnlyNodeInfo.cs,ReadOnlyNodeInfo,The method has 7 parameters.
Long Statement,ReactGraph,BuilderBase,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\BuilderBase.cs,CreateMemberDefinition,The length of the statement  "	var targetAssignmentLambda = isWritable ? Expression.Lambda<Action<T>> (Expression.Assign (expression.Body' parameterExpression)' parameterExpression) : null; " is 158.
Long Statement,ReactGraph,DependencyEngine,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\DependencyEngine.cs,GetGraphSnapshot,The length of the statement  "	return graph.Clone (vertex => (INodeMetadata)new NodeMetadata (vertex.Data.VisualisationInfo' vertex.Data.ToString ()' vertex.Id)); " is 131.
Long Statement,ReactGraph,DependencyEngine,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\DependencyEngine.cs,ValueHasChanged,The length of the statement  "		// TODO we may want to add another instrumentation call before the topo sort' so we can instrument the time it takes to calculate it and compare it with the time it takes to actually propagate (so we can optimize the costly part) " is 229.
Long Statement,ReactGraph,DependencyEngine,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\DependencyEngine.cs,ValueHasChanged,The length of the statement  "			// I have the feeling that trying to make all this very generic is making the whole thing more confusing and complex than it actually is " is 136.
Long Statement,ReactGraph,DependencyEngine,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\DependencyEngine.cs,FindChangedNode,The length of the statement  "	var successors = graph.SuccessorsOf (changedInstance).Where (v => v.Target.Data.PathMatches (pathToChangedValue)).ToArray (); " is 125.
Long Statement,ReactGraph,ExpressionAdder,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\ExpressionAdder.cs,CreateTargetNode,The length of the statement  "	// TODO this smells: generally when you switch on a type like that it's that you should be doing a polymorphic call somewhere else.  " is 131.
Long Statement,ReactGraph,ExpressionAdder,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\ExpressionAdder.cs,CreateTargetNode,The length of the statement  "	// Jake: If we do that the internals need to be opened up and the public API will start bleeding implementation details. " is 120.
Long Statement,ReactGraph,ExpressionAdder,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\ExpressionAdder.cs,CreateTargetNode,The length of the statement  "		return new ReadWriteNode<T> (getValueDelegate' setValueDelegate' target.FullPath' memberDefinition.PathFromParent' visualisationInfo' nodeRepository' shouldTrackChanges' onError); " is 179.
Long Statement,ReactGraph,ExpressionAdder,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\ExpressionAdder.cs,CreateSourceNode,The length of the statement  "		return new ReadOnlyNodeInfo<T> (getValue' source.FullPath' source.PathFromParent' nodeRepository' false' onError' new VisualisationInfo (NodeType.Formula' false)); " is 163.
Long Statement,ReactGraph,ExpressionAdder,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\ExpressionAdder.cs,CreateSourceNode,The length of the statement  "			return new ReadWriteNode<T> (getValueDelegate' memberDefinition.CreateSetValueDelegate ()' source.FullPath' memberDefinition.PathFromParent' visualisationInfo' nodeRepository' shouldTrackChanges' onError); " is 205.
Long Statement,ReactGraph,ExpressionAdder,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\ExpressionAdder.cs,CreateSourceNode,The length of the statement  "		return new ReadOnlyNodeInfo<T> (_ => getValueDelegate ()' memberDefinition.FullPath' memberDefinition.PathFromParent' nodeRepository' shouldTrackChanges' onError' visualisationInfo); " is 182.
Long Statement,ReactGraph.Graph,DirectedGraph,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\Graph\DirectedGraph.cs,FindSources,The length of the statement  "	// TODO isn't that better? Can't remember why I wrote it like that in the first place..I think not had predecessors at this point " is 129.
Long Statement,ReactGraph.Graph,DirectedGraph,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\Graph\DirectedGraph.cs,TopologicalSort,The length of the statement  "	// TODO Olivier: another problem is memory allocation' here the subgraph is a new datastructure. We probably want to profile before trying to make that allocation free.. " is 169.
Long Statement,ReactGraph.Graph,DirectedGraph,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\Graph\DirectedGraph.cs,TopologicalSort,The length of the statement  "	// TODO Olivier: the normal topological sort needs to start from sources but here we know that the only source is origin' since we build the subgraph from there... " is 163.
Long Statement,ReactGraph.Construction,ExpressionStringBuilder,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\Construction\ExpressionStringBuilder.cs,CheckIfAnonymousType,The length of the statement  "	return isDefined && (type.IsGenericType && type.Name.Contains ("AnonymousType") || type.Name.Contains ("DisplayClass")) && (type.Name.StartsWith ("<>") || type.Name.StartsWith ("VB$")); " is 185.
Long Statement,ReactGraph.NodeInfo,Maybe,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\NodeInfo\Maybe.cs,PreserveStackTrace,The length of the statement  "	MethodInfo preserveStackTrace = typeof(Exception).GetMethod ("InternalPreserveStackTrace"' BindingFlags.Instance | BindingFlags.NonPublic); " is 139.
Magic Number,ReactGraph.Construction,ExpressionStringBuilder,F:\newReposMay17\AdaptiveConsulting_ReactGraph\src\ReactGraph\Construction\ExpressionStringBuilder.cs,VisitMethodCall,The following statement contains a magic number: if (args.Length > 3) {  	Out ("...");  } else {  	VisitArguments (args);  }  
