Implementation smell,Namespace,Class,File,Method,Description
Long Method,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetdatosUSxFact,The method has 154 lines of code.
Long Method,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The method has 114 lines of code.
Complex Method,DataManagement,DM_Afiliados,C:\repos\carlosyy_SIISAConc\DataManagement\DM_Afiliados.cs,getAfiliados,Cyclomatic complexity of the method is 8
Complex Method,DataManagement,DM_AtencClinicasXAfiliados,C:\repos\carlosyy_SIISAConc\DataManagement\DM_AtencClinicasXAfiliados.cs,contarAtenciones,Cyclomatic complexity of the method is 10
Complex Method,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,getDatosUSxFactListaCtas1Vez,Cyclomatic complexity of the method is 18
Complex Method,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,getDatosUSxFactListaCtas2Vez,Cyclomatic complexity of the method is 17
Complex Method,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,Cyclomatic complexity of the method is 14
Complex Method,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetPrefix,Cyclomatic complexity of the method is 9
Complex Method,DataManagement,DM_DatosUSXProceso,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DatosUSXProceso.cs,DeleteDatosUSXProceso,Cyclomatic complexity of the method is 19
Complex Method,DataManagement,DM_Usuarios,C:\repos\carlosyy_SIISAConc\DataManagement\DM_Usuarios.cs,GetUsuarios,Cyclomatic complexity of the method is 8
Long Parameter List,DataManagement,DM_AtencClinicasXAfiliados,C:\repos\carlosyy_SIISAConc\DataManagement\DM_AtencClinicasXAfiliados.cs,buscar,The method has 11 parameters.
Long Parameter List,DataManagement,DM_AtencClinicasXAfiliados,C:\repos\carlosyy_SIISAConc\DataManagement\DM_AtencClinicasXAfiliados.cs,contarAtenciones,The method has 7 parameters.
Long Parameter List,DataManagement,DM_Usuarios,C:\repos\carlosyy_SIISAConc\DataManagement\DM_Usuarios.cs,GetUsuarios,The method has 5 parameters.
Long Statement,DataManagement,DM_Afiliados,C:\repos\carlosyy_SIISAConc\DataManagement\DM_Afiliados.cs,AddAfiliado,The length of the statement  "	String sQuery = string.Format ("EXEC SPI_Afiliado @docIden='{0}'' @tipodoc='{1}'' @apellido_a='{2}'' @apellido_b='{3}'' @nombre_a='{4}'' @nombre_b='{5}'' @sexo='{6}'"' oAfiliados.documento' oAfiliados.tipoDocumento' oAfiliados.apellido1' oAfiliados.apellido2' oAfiliados.nombre1' oAfiliados.nombre2' oAfiliados.sexo); " is 317.
Long Statement,DataManagement,DM_AutoCompletar,C:\repos\carlosyy_SIISAConc\DataManagement\DM_AutoCompletar.cs,addAutoCompletar,The length of the statement  "	String sQuery = String.Format ("EXEC SPIU_AutoCompletar @proc={0}' @textoAutoCompletar='{1}'' @indexSeleccion={2}"' oAutoCompletar.proceso' oAutoCompletar.textoAutoCompletar' oAutoCompletar.indexSeleccion); " is 206.
Long Statement,DataManagement,DM_AtencClinicasXAfiliados,C:\repos\carlosyy_SIISAConc\DataManagement\DM_AtencClinicasXAfiliados.cs,buscar,The length of the statement  "	String sQuery = String.Format ("EXEC SP_BuscarAtencClinicas @docIden='{0}'' @programa={1}' @nit='{2}'' @codDx='{3}'' @fecDesde='{4}'' @fecHasta='{5}'' @filtroNombre='{6}'' @limitInf={7}' @limitSup={8}' @orden={9}' @idEstadoAtenc={10}"' docIden' programa' nit' codDx' fecDesde' fecHasta' filtroNombre' limitInf' limitSup' orden' idEstadoAtenc); " is 343.
Long Statement,DataManagement,DM_AtencClinicasXAfiliados,C:\repos\carlosyy_SIISAConc\DataManagement\DM_AtencClinicasXAfiliados.cs,buscar,The length of the statement  "			ac.nombreCompleto = reader ["apellido_a"] + " " + reader ["apellido_b"] + " " + reader ["nombre_a"] + " " + reader ["nombre_b"]; " is 128.
Long Statement,DataManagement,DM_AtencClinicasXAfiliados,C:\repos\carlosyy_SIISAConc\DataManagement\DM_AtencClinicasXAfiliados.cs,getAuditorias,The length of the statement  "	String sQuery = String.Format ("EXEC SPS_Auditorias @idUserEstablece={0}' @fecAuditoria='{1}'' @mesAuditoria='{2}'"' idUserEstablece' fecAuditoria' mesAuditoria); " is 162.
Long Statement,DataManagement,DM_AtencClinicasXAfiliados,C:\repos\carlosyy_SIISAConc\DataManagement\DM_AtencClinicasXAfiliados.cs,getAuditorias,The length of the statement  "			ac.nombreCompleto = reader ["apellido_a"] + " " + reader ["apellido_b"] + " " + reader ["nombre_a"] + " " + reader ["nombre_b"]; " is 128.
Long Statement,DataManagement,DM_AtencClinicasXAfiliados,C:\repos\carlosyy_SIISAConc\DataManagement\DM_AtencClinicasXAfiliados.cs,getDatosAuditoria,The length of the statement  "			ac.nombreCompleto = (reader ["apellido_a"].ToString () + " " + reader ["apellido_b"].ToString () + " " + reader ["nombre_a"].ToString () + " " + reader ["nombre_b"].ToString ()).Replace (@"\s+"' " "); " is 200.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetdatosUSxFact,The length of the statement  "		sbdatosUSxFact.Append ("' (SELECT sa.sitioAtencion FROM sitioAtencion AS sa WHERE sa.idSitioAtencion = A.idSitioAtencion) AS sitioAtencion"); " is 141.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetdatosUSxFact,The length of the statement  "		sbdatosUSxFact.Append ("' (SELECT municipio + '-' + departamento from dane as d where(d.codDane=A.codDane)) as munDepto"); " is 122.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetdatosUSxFact,The length of the statement  "				dd = (reader ["fecNac"].ToString () != "" && reader ["fecNac"].ToString () != "NULL") ? DateTime.Parse (reader ["fecNac"].ToString ()) : DateTime.Parse ("01/01/1900"); " is 167.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetdatosUSxFact,The length of the statement  "				dd = (reader ["fecAfil"].ToString () != "" && reader ["fecAfil"].ToString () != "NULL") ? DateTime.Parse (reader ["fecAfil"].ToString ()) : DateTime.Parse ("01/01/1900"); " is 170.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetdatosUSxFact,The length of the statement  "				odatosUSxFact.patologia = Int32.Parse (reader ["patologia"].ToString () == "" ? "0" : reader ["patologia"].ToString ()); " is 120.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,getTipoCuentaRadicado,The length of the statement  "		reader = oDataAccess.executeReader (CommandType.Text' "SELECT tc.tipoCuenta FROM radicacion as rad INNER JOIN tipoComprob as tc ON tc.id=rad.tipoComprobante WHERE radicado='" + radicado + "'"); " is 193.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetDatosUsxFactLista,The length of the statement  "	String sQuery = string.Format ("EXEC SPS_DatosUSxFact @radicado='{0}'' @IdDatosUS={1}' @LIMITINF={2}' @LIMITSUP={3}"' radicado' IdDatosUS' limitInf' limitSup); " is 159.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetDatosUsxFactLista,The length of the statement  "			oDatosUsxFact.apellido_a = reader ["apellido_a"].ToString () + " " + reader ["apellido_b"].ToString () + " " + reader ["nombre_a"].ToString () + " " + reader ["nombre_b"].ToString (); " is 183.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,getDatosUSxFactListaCtas1Vez,The length of the statement  "		sbdatosUSxFact.Append ("' (SELECT COUNT(serviciosFactura.IdReg) FROM serviciosFactura WHERE serviciosFactura.idDatosUS = A.idDatosUS AND serviciosFactura.eliminar=0) as cantServs"); " is 181.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,getDatosUSxFactListaCtas1Vez,The length of the statement  "		sbdatosUSxFact.Append ("' (SELECT ISNULL(SUM(serviciosFactura.vrTotal)'0) FROM serviciosFactura WHERE serviciosFactura.idDatosUS = A.idDatosUS AND serviciosFactura.eliminar=0) as totServs"); " is 190.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,getDatosUSxFactListaCtas1Vez,The length of the statement  "	sbdatosUSxFact.Append ("' (SELECT programas.programa FROM programas WHERE programas.idPrograma = A.programa) as nPrograma"); " is 124.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,getDatosUSxFactListaCtas1Vez,The length of the statement  "			odatosUSxFact.apellido_a = reader ["apellido_a"].ToString () + " " + reader ["apellido_b"].ToString () + " " + reader ["nombre_a"].ToString () + " " + reader ["nombre_b"].ToString (); " is 183.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,getDatosUSxFactListaCtas2Vez,The length of the statement  "	sbdatosUSxFact.Append ("' (SELECT radicacion.noFactura FROM radicacion WHERE radicacion.radicado = (SELECT MIN(radicado) AS EXPR2 FROM datosUSxProceso WHERE (datosUSxProceso.idDatosUS = B.idDatosUS))) AS noFacturaMinRadicado"); " is 227.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,getDatosUSxFactListaCtas2Vez,The length of the statement  "			odatosUSxFact.apellido_a = reader ["apellido_a"].ToString () + " " + reader ["apellido_b"].ToString () + " " + reader ["nombre_a"].ToString () + " " + reader ["nombre_b"].ToString (); " is 183.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The length of the statement  "		sbDatosUSxFact.Append ("' (SELECT radicacion.noFactura FROM radicacion WHERE radicacion.radicado = (SELECT MIN(radicado) AS EXPR2 FROM datosUSxProceso WHERE (datosUSxProceso.idDatosUS = glo.idDatosUS))) AS noFacturaMinRadicado' CASE WHEN ISNULL((SELECT TOP(1) glop.factura FROM glosasxProceso as glop Inner join glosas as gl on gl.idGLosa=glop.idGlosa WHERE glop.radicado=gp.radicado and gl.idDatosUs=glo.idDatosUS and gl.eliminar=0)''')='' THEN ((SELECT  CONVERT(varchar(20)' radicacion.noFactura)FROM radicacion WHERE radicacion.radicado = (SELECT MIN(radicado) AS EXPR2 FROM datosUSxProceso WHERE (datosUSxProceso.idDatosUS = glo.idDatosUS)))) ELSE (SELECT TOP(1) glop.factura	FROM glosasxProceso as glop inner join glosas as gl on gl.idGLosa=glop.idGlosa where glop.radicado=gp.radicado and gl.idDatosUs=glo.idDatosUS and gl.eliminar=0) END As noFactura"); " is 860.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The length of the statement  "	sbDatosUSxFact.Append (" FROM glosas AS glo INNER JOIN glosasxProceso AS gp ON glo.idGLosa = gp.idGlosa INNER JOIN datosUSxFact AS df ON glo.idDatosUs = df.idDatosUS INNER JOIN afiliados AS af ON df.docIden = af.docIden"); " is 222.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The length of the statement  "				oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString () + " " + reader ["apellido_b"].ToString () + " " + reader ["nombre_a"].ToString () + " " + reader ["nombre_b"].ToString (); " is 183.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The length of the statement  "				//Se cambia el valor total glosa por el reitera glosa' pues siempre se debe trabajar con el valor reiterado para las respuestas de glosa " is 136.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,getidRips1,The length of the statement  "		reader = oDataAccess.executeReader (CommandType.Text' "SELECT idRIPS' docIden FROM datosUSxFact WHERE idDatosUs =" + idDatosUs + ""); " is 133.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetDatosListados,The length of the statement  "	String sbdatosUSxFact = String.Format ("EXEC SPS_getDatosListados @docIden='{0}'' @mesListado='{1}'"' docIden' mesListado); " is 123.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,AdddatosUSxProceso,The length of the statement  "	String sQuery = string.Format ("SPI_DatosUSxProceso @radicado='{0}'' @idDatosUS={1}' @idTipoDigit={2}' @idUser={3}"' odatosUSxProceso.radicado' odatosUSxProceso.idDatosUS' odatosUSxProceso.idTipoDigit' odatosUSxProceso.idUser); " is 227.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,UpdatedatosUSxFact,The length of the statement  "			oDataAccess.executeNonQuery (CommandType.Text' "UPDATE datosUSxProceso SET observAnalista='" + odatosUSxFact.observAnalista + "' WHERE idDatosUS='" + odatosUSxFact.idDatosUS + "' and radicado='" + odatosUSxFact.radicado + "'"); " is 227.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,UpdateDatosUSxFactValidacionUsuarios,The length of the statement  "	String sQuery = string.Format ("SPU_ValidacionUS @idDatosUS={0}' @fechaIng='{1}'' @idTipoDoc={2}' @docIden='{3}'' @apellido_a='{4}'' @apellido_b='{5}'' @nombre_a='{6}'' @nombre_b='{7}'' @sexo='{8}'' @codDane='{9}'' @programa={10}' @idSitioAtenc={11}' @listado={12}' @fecNac='{13}'' @fecAfil='{14}'' @idUserValida={15}"' odatosUSxFact.idDatosUS' odatosUSxFact.fechaIng' odatosUSxFact.idTipoDoc' odatosUSxFact.docIden' odatosUSxFact.apellido_a' odatosUSxFact.apellido_b' odatosUSxFact.nombre_a' odatosUSxFact.nombre_b' odatosUSxFact.sexo' odatosUSxFact.codDane' odatosUSxFact.programa' odatosUSxFact.idSitioAtenc' odatosUSxFact.listado' odatosUSxFact.fecNac' odatosUSxFact.fecAfil' odatosUSxFact.idUser); " is 702.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,UpdateDeleteRecsGlosDetAgrup,The length of the statement  "	String sQuery = string.Format ("SPD_RecsGlosDetAgrup @idDatosUS={0}' @radicado='{1}'' @idUser={2}"' idDatosUS' radicado' idUser); " is 129.
Long Statement,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,updateGuia,The length of the statement  "		retorno = oDataAccess.executeNonQuery (CommandType.Text' "UPDATE datosUSxFact SET idGuia='" + idGuia + "' WHERE idDatosUS='" + idDatosUS + "'"); " is 144.
Long Statement,DataManagement,DM_entidad,C:\repos\carlosyy_SIISAConc\DataManagement\DM_entidad.cs,Getentidad,The length of the statement  "	String sQuery = String.Format ("EXEC SPS_Entidades @nit='{0}'' @nombEntidad='{1}'' @limitInf={2}' @limitSup={3}"' nit' nombreEntidad' limitInf' limitSup); " is 154.
Long Statement,DataManagement,DM_entidad,C:\repos\carlosyy_SIISAConc\DataManagement\DM_entidad.cs,Addentidad,The length of the statement  "	String sQuery = (string.Format ("SPI_Entidad '{0}'' {1}' {2}' {3}' {4}' '{5}'' '{6}'' '{7}'' '{8}'' {9}' '{10}'' '{11}'' '{12}'' {13}' {14}"' oentidad.nit' oentidad.idTipoDoc' oentidad.digitoVerif' oentidad.capitado' oentidad.revision' oentidad.entidad' oentidad.codDane' oentidad.direccion' oentidad.telefono' oentidad.idZona' oentidad.nombreReg' oentidad.correoElectronico' oentidad.represLegal' oentidad.codTipoPrestador' oentidad.codTipoContrato)); " is 452.
Long Statement,DataManagement,DM_EventosAdversosAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_EventosAdversosAtencion.cs,UpdateEventosAdversosAtencion,The length of the statement  "		sbEventosAdversosAtencion.Append (" idEventosAdversosAtencion='" + oEventosAdversosAtencion.idEventosAdversosAtencion + "'"); " is 125.
Long Statement,DataManagement,DM_EventosAdversosAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_EventosAdversosAtencion.cs,UpdateEventosAdversosAtencion,The length of the statement  "		sbEventosAdversosAtencion.Append (" 'EventosAdversosAtencion='" + oEventosAdversosAtencion.eventosAdversosAtencion + "'"); " is 122.
Long Statement,DataManagement,DM_EventosAdversosAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_EventosAdversosAtencion.cs,UpdateEventosAdversosAtencion,The length of the statement  "		sbEventosAdversosAtencion.Append (" WHERE EventosAdversosAtencion='" + oEventosAdversosAtencion.idEventosAdversosAtencion + "'"); " is 129.
Long Statement,DataManagement,DM_HallazgoAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_HallazgoAtencion.cs,GetHallazgoAtencionXRadicado,The length of the statement  "	sbHallazgoAtencion.Append (" pertinenciaAtencion AS pa ON ha.idPertinenciaAtencion = pa.idPertinenciaAtencion LEFT OUTER JOIN"); " is 128.
Long Statement,DataManagement,DM_HallazgoAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_HallazgoAtencion.cs,GetHallazgoAtencionXRadicado,The length of the statement  "	sbHallazgoAtencion.Append (" eventosAdversosAtencion AS ea ON ha.idEventosAdversosAtencion = ea.idEventosAdversosAtencion LEFT OUTER JOIN"); " is 140.
Long Statement,DataManagement,DM_HallazgoAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_HallazgoAtencion.cs,GetHallazgoAtencionXRadicado,The length of the statement  "	sbHallazgoAtencion.Append (" inoportunidadAtencion AS ia ON ha.idInoportunidadAtencion = ia.idInoportunidadAtencion LEFT OUTER JOIN"); " is 134.
Long Statement,DataManagement,DM_HallazgoAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_HallazgoAtencion.cs,GetHallazgoAtencionXRadicado,The length of the statement  "	sbHallazgoAtencion.Append (" noCalidadAtencion AS noca ON ha.idNoCalidadAtencion = noca.idNoCalidadAtencion LEFT OUTER JOIN"); " is 126.
Long Statement,DataManagement,DM_InoportunidadAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_InoportunidadAtencion.cs,UpdateInoportunidadAtencion,The length of the statement  "		sbInoportunidadAtencion.Append (" WHERE InoportunidadAtencion='" + oInoportunidadAtencion.idInoportunidadAtencion + "'"); " is 121.
Long Statement,DataManagement,DM_Listados,C:\repos\carlosyy_SIISAConc\DataManagement\DM_Listados.cs,GetListados,The length of the statement  "	sbListados.Append (" CAST(MONTH(l.mesListado) AS NVARCHAR(2)) +'-' + CAST(YEAR(l.mesListado) AS NVARCHAR(4)) AS mesListado"); " is 125.
Long Statement,DataManagement,DM_Listados,C:\repos\carlosyy_SIISAConc\DataManagement\DM_Listados.cs,addListadosArchivo,The length of the statement  "		reader = oDataAccess.executeReader (CommandType.Text' "EXEC SPI_Listados '" + ruta + "'' '" + mesListado + "'' '" + activos + "'' '" + ente + "'"); " is 147.
Long Statement,DataManagement,DM_Programas,C:\repos\carlosyy_SIISAConc\DataManagement\DM_Programas.cs,updateProgramaValidRadVsAud,The length of the statement  "	String sbProgramas = String.Format ("EXEC SPU_ActValidaProg @radicado='{0}'' @programa={1}' @programaRad={2}' @actualizaEn='{3}'"' radicado' programa' programaRad' actualizaEn); " is 177.
Long Statement,DataManagement,DM_Servicios,C:\repos\carlosyy_SIISAConc\DataManagement\DM_Servicios.cs,getServiciosXBusq,The length of the statement  "				descripcion = (reader ["codDesc"].ToString ().Length > 60 ? reader ["codDesc"].ToString ().Substring (0' 60) : reader ["codDesc"].ToString ())' " is 143.
Long Statement,DataManagement,DM_DxAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DxAtencion.cs,getDxAtencion,The length of the statement  "			ODxEntidad.descripDx = ((reader ["dx"].ToString ().Length > 60) ? reader ["dx"].ToString ().Substring (0' 60) : reader ["dx"].ToString ()); " is 139.
Long Statement,DataManagement,DM_DxAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DxAtencion.cs,getDxAtencionInic,The length of the statement  "			ODxEntidad.descripDx = ((reader ["dx"].ToString ().Length > 60) ? reader ["dx"].ToString ().Substring (0' 60) : reader ["dx"].ToString ()); " is 139.
Long Statement,DataManagement,DM_DxAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DxAtencion.cs,addDxAtencion,The length of the statement  "	String sQuery = String.Format ("EXEC SPI_DxAtencion @codDx='{0}'' @radicado='{1}'' @idUser={2}' @dxPpal={3}"' oDxAtencion.codDx' oDxAtencion.radicado' oDxAtencion.idUser' oDxAtencion.dxPpal); " is 191.
Long Statement,DataManagement,DM_DxAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DxAtencion.cs,setDxPpal,The length of the statement  "	String sQuery = String.Format ("EXEC SPU_DxPpalAtencion @radicado='{0}'' @idDx={1}"' oDxAtencion.radicado' oDxAtencion.idDx); " is 125.
Long Statement,DataManagement,DM_ServiciosAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_ServiciosAtencion.cs,getServiciosAtencion,The length of the statement  "			OserviEntidad.descripServ = ((reader ["servicio"].ToString ().Length > 60) ? reader ["servicio"].ToString ().Substring (0' 60) : reader ["servicio"].ToString ()); " is 162.
Long Statement,DataManagement,DM_ServiciosAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_ServiciosAtencion.cs,AddServiciosAtencion,The length of the statement  "	String sQuery = String.Format ("EXEC SPI_ServiciosAtencion @tipoAutorizacion={0}' @noAutorizacion='{1}'' @codServ='{2}'' @radicado='{3}'' @idUser={4}' @indSeleccion={5}' @txtAutoCompletar='{6}'' @cantServ={7}' @vrTotal={8}"' oServiciosAtencion.tipoAutorizacion' oServiciosAtencion.noAutorizacion' oServiciosAtencion.codServ' oServiciosAtencion.radicado' oServiciosAtencion.idUser' oServiciosAtencion.indexSeleccion' oServiciosAtencion.txtBuscado' oServiciosAtencion.cantServ' oServiciosAtencion.vrTotal); " is 504.
Long Statement,DataManagement,DM_ServiciosAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_ServiciosAtencion.cs,setServPpal,The length of the statement  "	String sQuery = String.Format ("EXEC SPU_ServPpalAtencion @radicado='{0}'' @idServ={1}"' oServAtencion.radicado' oServAtencion.idServ); " is 135.
Long Statement,DataManagement,DM_Usuarios,C:\repos\carlosyy_SIISAConc\DataManagement\DM_Usuarios.cs,GetUsuarios,The length of the statement  "		sbLogin.Append (" WHERE (a.docUsuario + a.nombreUsuario + a.sucursal + a.email + b.perfil + c.nick) LIKE '%" + busqUsuario + "%'"); " is 131.
Long Statement,DataManagement,DM_Usuarios,C:\repos\carlosyy_SIISAConc\DataManagement\DM_Usuarios.cs,UpdateUsuario,The length of the statement  "			sbUsuarios.Append ("UPDATE login SET nick='" + oUsuario.Nick + "'' claveUsuario='" + oUsuario.claveUsuario + "' WHERE idUser='" + oUsuario.UsuarioID + "'"); " is 156.
Magic Number,DataManagement,DM_AtencClinicasXAfiliados,C:\repos\carlosyy_SIISAConc\DataManagement\DM_AtencClinicasXAfiliados.cs,establecerAuditar,The following statement contains a magic number: try {  	oDataAccess.open ();  	oDataAccess.executeNonQuery (CommandType.StoredProcedure' "SPUI_Auditoria"' true);  	String radicado = oDataAccess.commando.Parameters ["@RETURN_VALUE"].Value.ToString ();  	while (radicado.Length < 8) {  		radicado = "0" + radicado;  	}  	oDataAccess.commando.Parameters.Clear ();  	oDataAccess.close ();  	return radicado;  }  catch (Exception) {  	throw;  }  
Magic Number,DataManagement,DM_AtencClinicasXAfiliados,C:\repos\carlosyy_SIISAConc\DataManagement\DM_AtencClinicasXAfiliados.cs,establecerAuditar,The following statement contains a magic number: while (radicado.Length < 8) {  	radicado = "0" + radicado;  }  
Magic Number,DataManagement,DM_AtencClinicasXAfiliados,C:\repos\carlosyy_SIISAConc\DataManagement\DM_AtencClinicasXAfiliados.cs,addAtencClinicasXAfiliados,The following statement contains a magic number: try {  	oDataAccess.open ();  	oDataAccess.executeNonQuery (CommandType.StoredProcedure' "SPI_Atencion"' true);  	String radicado = oDataAccess.commando.Parameters ["@RETURN_VALUE"].Value.ToString ();  	while (radicado.Length < 8) {  		radicado = "0" + radicado;  	}  	oDataAccess.commando.Parameters.Clear ();  	oDataAccess.close ();  	return radicado;  }  catch (Exception) {  	throw;  }  
Magic Number,DataManagement,DM_AtencClinicasXAfiliados,C:\repos\carlosyy_SIISAConc\DataManagement\DM_AtencClinicasXAfiliados.cs,addAtencClinicasXAfiliados,The following statement contains a magic number: while (radicado.Length < 8) {  	radicado = "0" + radicado;  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,getDatosUSxFactListaCtas1Vez,The following statement contains a magic number: switch (Origen) {  case 0:  	break;  case 1:  	sbdatosUSxFact.Append (" ORDER BY B.apellido_a asc ");  	break;  case 2:  	sbdatosUSxFact.Append (" ORDER BY B.apellido_a desc ");  	break;  case 3:  	sbdatosUSxFact.Append (" ORDER BY programa");  	break;  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,getDatosUSxFactListaCtas1Vez,The following statement contains a magic number: switch (Origen) {  case 0:  	break;  case 1:  	sbdatosUSxFact.Append (" ORDER BY B.apellido_a asc ");  	break;  case 2:  	sbdatosUSxFact.Append (" ORDER BY B.apellido_a desc ");  	break;  case 3:  	sbdatosUSxFact.Append (" ORDER BY programa");  	break;  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,getDatosUSxFactListaCtas2Vez,The following statement contains a magic number: switch (Origen) {  case 0:  	break;  case 1:  	sbdatosUSxFact.Append (" ORDER BY D.apellido_a asc ");  	break;  case 2:  	sbdatosUSxFact.Append (" ORDER BY D.apellido_a desc ");  	break;  case 3:  	sbdatosUSxFact.Append (" ORDER BY programa");  	break;  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,getDatosUSxFactListaCtas2Vez,The following statement contains a magic number: switch (Origen) {  case 0:  	break;  case 1:  	sbdatosUSxFact.Append (" ORDER BY D.apellido_a asc ");  	break;  case 2:  	sbdatosUSxFact.Append (" ORDER BY D.apellido_a desc ");  	break;  case 3:  	sbdatosUSxFact.Append (" ORDER BY programa");  	break;  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The following statement contains a magic number: if (tipo == 0 || tipo == 1 || tipo == 3) {  	sbDatosUSxFact.Append ("' (SELECT radicacion.noFactura FROM radicacion WHERE radicacion.radicado = (SELECT MIN(radicado) AS EXPR2 FROM datosUSxProceso WHERE (datosUSxProceso.idDatosUS = glo.idDatosUS))) AS noFacturaMinRadicado' CASE WHEN ISNULL((SELECT TOP(1) glop.factura FROM glosasxProceso as glop Inner join glosas as gl on gl.idGLosa=glop.idGlosa WHERE glop.radicado=gp.radicado and gl.idDatosUs=glo.idDatosUS and gl.eliminar=0)''')='' THEN ((SELECT  CONVERT(varchar(20)' radicacion.noFactura)FROM radicacion WHERE radicacion.radicado = (SELECT MIN(radicado) AS EXPR2 FROM datosUSxProceso WHERE (datosUSxProceso.idDatosUS = glo.idDatosUS)))) ELSE (SELECT TOP(1) glop.factura	FROM glosasxProceso as glop inner join glosas as gl on gl.idGLosa=glop.idGlosa where glop.radicado=gp.radicado and gl.idDatosUs=glo.idDatosUS and gl.eliminar=0) END As noFactura");  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The following statement contains a magic number: if (tipo == 2) {  	sbDatosUSxFact.Append ("' gu.guia");  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The following statement contains a magic number: if (tipo == 2) {  	sbDatosUSxFact.Append (" INNER JOIN guia AS gu ON gu.idGuia = df.idGuia");  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The following statement contains a magic number: if (tipo == 3) {  	sbDatosUSxFact.Append (" AND gp.vrReiteraGlosa>0");  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The following statement contains a magic number: try {  	oDataAccess.open ();  	reader = oDataAccess.executeReader (CommandType.Text' sbDatosUSxFact.ToString ());  	while (reader.Read ()) {  		oDatosUSxFact = new DatosUSxFactEntidad ();  		oDatosUSxFact.idGlosa = Int32.Parse (reader ["idGlosa"].ToString ());  		oDatosUSxFact.idDatosUS = Int32.Parse (reader ["idDatosUs"].ToString ());  		oDatosUSxFact.docIden = reader ["docIden"].ToString ();  		oDatosUSxFact.prefFactura = reader ["factura"].ToString ();  		DateTime dd = DateTime.Parse (reader ["fechaIng"].ToString ());  		oDatosUSxFact.fechaIng = Convert.ToString (dd.ToShortDateString ());  		oDatosUSxFact.codGlosaResp = reader ["codGlosaReitera"].ToString ();  		oDatosUSxFact.codGlosaEfec = reader ["codGlosa"].ToString ();  		if (tipo == 0) {  			oDatosUSxFact.vrAceptaIPS = Decimal.Parse (reader ["vrAsumeIPS"].ToString ());  			//oDatosUSxFact.noFactura = Int32.Parse((reader["noFactura"].ToString()));  		}  		if (tipo == 2) {  			oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString ();  			oDatosUSxFact.apellido_b = reader ["apellido_b"].ToString ();  			oDatosUSxFact.nombre_a = reader ["nombre_a"].ToString ();  			oDatosUSxFact.nombre_b = reader ["nombre_b"].ToString ();  		}  		else if (tipo == 0 || tipo == 1 || tipo == 3) {  			oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString () + " " + reader ["apellido_b"].ToString () + " " + reader ["nombre_a"].ToString () + " " + reader ["nombre_b"].ToString ();  			oDatosUSxFact.nombre_a = reader ["noFacturaMinRadicado"].ToString ();  			//oDatosUSxFact.noFactura = Int32.Parse((reader["noFactura"].ToString()));  		}  		if (tipo == 2) {  			oDatosUSxFact.guia = reader ["guia"].ToString ();  			oDatosUSxFact.cantServs = 1;  			oDatosUSxFact.vrTotNetoDet = Decimal.Parse (reader ["vrGlosa"].ToString ());  			oDatosUSxFact.vrGlosa = Decimal.Parse (reader ["vrGlosa"].ToString ());  		}  		if (tipo == 3) {  			//Se cambia el valor total glosa por el reitera glosa' pues siempre se debe trabajar con el valor reiterado para las respuestas de glosa  			oDatosUSxFact.vrTotNetoDet = Decimal.Parse (reader ["vrReiteraGlosa"].ToString ());  			oDatosUSxFact.vrGlosa = Decimal.Parse (reader ["vrReiteraGlosa"].ToString ());  			oDatosUSxFact.vrTotBrutoDet = Double.Parse (reader ["vrReiteraGlosa"].ToString ());  			oDatosUSxFact.totServs = Double.Parse (reader ["vrReiteraGlosa"].ToString ());  		}  		else {  			oDatosUSxFact.vrTotBrutoDet = Double.Parse (reader ["vrGlosa"].ToString ());  			oDatosUSxFact.totServs = Double.Parse (reader ["vrGlosa"].ToString ());  		}  		oDatosUSxFact.codDx1 = reader ["codDx1"].ToString ();  		oDatosUSxFact.radicado = reader ["radicado"].ToString ();  		oDatosUSxFact.cantServs = 1;  		lista.Add (oDatosUSxFact);  	}  	reader.Close ();  	return lista;  }  catch (Exception) {  	throw;  }  finally {  	oDataAccess.close ();  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The following statement contains a magic number: try {  	oDataAccess.open ();  	reader = oDataAccess.executeReader (CommandType.Text' sbDatosUSxFact.ToString ());  	while (reader.Read ()) {  		oDatosUSxFact = new DatosUSxFactEntidad ();  		oDatosUSxFact.idGlosa = Int32.Parse (reader ["idGlosa"].ToString ());  		oDatosUSxFact.idDatosUS = Int32.Parse (reader ["idDatosUs"].ToString ());  		oDatosUSxFact.docIden = reader ["docIden"].ToString ();  		oDatosUSxFact.prefFactura = reader ["factura"].ToString ();  		DateTime dd = DateTime.Parse (reader ["fechaIng"].ToString ());  		oDatosUSxFact.fechaIng = Convert.ToString (dd.ToShortDateString ());  		oDatosUSxFact.codGlosaResp = reader ["codGlosaReitera"].ToString ();  		oDatosUSxFact.codGlosaEfec = reader ["codGlosa"].ToString ();  		if (tipo == 0) {  			oDatosUSxFact.vrAceptaIPS = Decimal.Parse (reader ["vrAsumeIPS"].ToString ());  			//oDatosUSxFact.noFactura = Int32.Parse((reader["noFactura"].ToString()));  		}  		if (tipo == 2) {  			oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString ();  			oDatosUSxFact.apellido_b = reader ["apellido_b"].ToString ();  			oDatosUSxFact.nombre_a = reader ["nombre_a"].ToString ();  			oDatosUSxFact.nombre_b = reader ["nombre_b"].ToString ();  		}  		else if (tipo == 0 || tipo == 1 || tipo == 3) {  			oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString () + " " + reader ["apellido_b"].ToString () + " " + reader ["nombre_a"].ToString () + " " + reader ["nombre_b"].ToString ();  			oDatosUSxFact.nombre_a = reader ["noFacturaMinRadicado"].ToString ();  			//oDatosUSxFact.noFactura = Int32.Parse((reader["noFactura"].ToString()));  		}  		if (tipo == 2) {  			oDatosUSxFact.guia = reader ["guia"].ToString ();  			oDatosUSxFact.cantServs = 1;  			oDatosUSxFact.vrTotNetoDet = Decimal.Parse (reader ["vrGlosa"].ToString ());  			oDatosUSxFact.vrGlosa = Decimal.Parse (reader ["vrGlosa"].ToString ());  		}  		if (tipo == 3) {  			//Se cambia el valor total glosa por el reitera glosa' pues siempre se debe trabajar con el valor reiterado para las respuestas de glosa  			oDatosUSxFact.vrTotNetoDet = Decimal.Parse (reader ["vrReiteraGlosa"].ToString ());  			oDatosUSxFact.vrGlosa = Decimal.Parse (reader ["vrReiteraGlosa"].ToString ());  			oDatosUSxFact.vrTotBrutoDet = Double.Parse (reader ["vrReiteraGlosa"].ToString ());  			oDatosUSxFact.totServs = Double.Parse (reader ["vrReiteraGlosa"].ToString ());  		}  		else {  			oDatosUSxFact.vrTotBrutoDet = Double.Parse (reader ["vrGlosa"].ToString ());  			oDatosUSxFact.totServs = Double.Parse (reader ["vrGlosa"].ToString ());  		}  		oDatosUSxFact.codDx1 = reader ["codDx1"].ToString ();  		oDatosUSxFact.radicado = reader ["radicado"].ToString ();  		oDatosUSxFact.cantServs = 1;  		lista.Add (oDatosUSxFact);  	}  	reader.Close ();  	return lista;  }  catch (Exception) {  	throw;  }  finally {  	oDataAccess.close ();  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The following statement contains a magic number: try {  	oDataAccess.open ();  	reader = oDataAccess.executeReader (CommandType.Text' sbDatosUSxFact.ToString ());  	while (reader.Read ()) {  		oDatosUSxFact = new DatosUSxFactEntidad ();  		oDatosUSxFact.idGlosa = Int32.Parse (reader ["idGlosa"].ToString ());  		oDatosUSxFact.idDatosUS = Int32.Parse (reader ["idDatosUs"].ToString ());  		oDatosUSxFact.docIden = reader ["docIden"].ToString ();  		oDatosUSxFact.prefFactura = reader ["factura"].ToString ();  		DateTime dd = DateTime.Parse (reader ["fechaIng"].ToString ());  		oDatosUSxFact.fechaIng = Convert.ToString (dd.ToShortDateString ());  		oDatosUSxFact.codGlosaResp = reader ["codGlosaReitera"].ToString ();  		oDatosUSxFact.codGlosaEfec = reader ["codGlosa"].ToString ();  		if (tipo == 0) {  			oDatosUSxFact.vrAceptaIPS = Decimal.Parse (reader ["vrAsumeIPS"].ToString ());  			//oDatosUSxFact.noFactura = Int32.Parse((reader["noFactura"].ToString()));  		}  		if (tipo == 2) {  			oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString ();  			oDatosUSxFact.apellido_b = reader ["apellido_b"].ToString ();  			oDatosUSxFact.nombre_a = reader ["nombre_a"].ToString ();  			oDatosUSxFact.nombre_b = reader ["nombre_b"].ToString ();  		}  		else if (tipo == 0 || tipo == 1 || tipo == 3) {  			oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString () + " " + reader ["apellido_b"].ToString () + " " + reader ["nombre_a"].ToString () + " " + reader ["nombre_b"].ToString ();  			oDatosUSxFact.nombre_a = reader ["noFacturaMinRadicado"].ToString ();  			//oDatosUSxFact.noFactura = Int32.Parse((reader["noFactura"].ToString()));  		}  		if (tipo == 2) {  			oDatosUSxFact.guia = reader ["guia"].ToString ();  			oDatosUSxFact.cantServs = 1;  			oDatosUSxFact.vrTotNetoDet = Decimal.Parse (reader ["vrGlosa"].ToString ());  			oDatosUSxFact.vrGlosa = Decimal.Parse (reader ["vrGlosa"].ToString ());  		}  		if (tipo == 3) {  			//Se cambia el valor total glosa por el reitera glosa' pues siempre se debe trabajar con el valor reiterado para las respuestas de glosa  			oDatosUSxFact.vrTotNetoDet = Decimal.Parse (reader ["vrReiteraGlosa"].ToString ());  			oDatosUSxFact.vrGlosa = Decimal.Parse (reader ["vrReiteraGlosa"].ToString ());  			oDatosUSxFact.vrTotBrutoDet = Double.Parse (reader ["vrReiteraGlosa"].ToString ());  			oDatosUSxFact.totServs = Double.Parse (reader ["vrReiteraGlosa"].ToString ());  		}  		else {  			oDatosUSxFact.vrTotBrutoDet = Double.Parse (reader ["vrGlosa"].ToString ());  			oDatosUSxFact.totServs = Double.Parse (reader ["vrGlosa"].ToString ());  		}  		oDatosUSxFact.codDx1 = reader ["codDx1"].ToString ();  		oDatosUSxFact.radicado = reader ["radicado"].ToString ();  		oDatosUSxFact.cantServs = 1;  		lista.Add (oDatosUSxFact);  	}  	reader.Close ();  	return lista;  }  catch (Exception) {  	throw;  }  finally {  	oDataAccess.close ();  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The following statement contains a magic number: try {  	oDataAccess.open ();  	reader = oDataAccess.executeReader (CommandType.Text' sbDatosUSxFact.ToString ());  	while (reader.Read ()) {  		oDatosUSxFact = new DatosUSxFactEntidad ();  		oDatosUSxFact.idGlosa = Int32.Parse (reader ["idGlosa"].ToString ());  		oDatosUSxFact.idDatosUS = Int32.Parse (reader ["idDatosUs"].ToString ());  		oDatosUSxFact.docIden = reader ["docIden"].ToString ();  		oDatosUSxFact.prefFactura = reader ["factura"].ToString ();  		DateTime dd = DateTime.Parse (reader ["fechaIng"].ToString ());  		oDatosUSxFact.fechaIng = Convert.ToString (dd.ToShortDateString ());  		oDatosUSxFact.codGlosaResp = reader ["codGlosaReitera"].ToString ();  		oDatosUSxFact.codGlosaEfec = reader ["codGlosa"].ToString ();  		if (tipo == 0) {  			oDatosUSxFact.vrAceptaIPS = Decimal.Parse (reader ["vrAsumeIPS"].ToString ());  			//oDatosUSxFact.noFactura = Int32.Parse((reader["noFactura"].ToString()));  		}  		if (tipo == 2) {  			oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString ();  			oDatosUSxFact.apellido_b = reader ["apellido_b"].ToString ();  			oDatosUSxFact.nombre_a = reader ["nombre_a"].ToString ();  			oDatosUSxFact.nombre_b = reader ["nombre_b"].ToString ();  		}  		else if (tipo == 0 || tipo == 1 || tipo == 3) {  			oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString () + " " + reader ["apellido_b"].ToString () + " " + reader ["nombre_a"].ToString () + " " + reader ["nombre_b"].ToString ();  			oDatosUSxFact.nombre_a = reader ["noFacturaMinRadicado"].ToString ();  			//oDatosUSxFact.noFactura = Int32.Parse((reader["noFactura"].ToString()));  		}  		if (tipo == 2) {  			oDatosUSxFact.guia = reader ["guia"].ToString ();  			oDatosUSxFact.cantServs = 1;  			oDatosUSxFact.vrTotNetoDet = Decimal.Parse (reader ["vrGlosa"].ToString ());  			oDatosUSxFact.vrGlosa = Decimal.Parse (reader ["vrGlosa"].ToString ());  		}  		if (tipo == 3) {  			//Se cambia el valor total glosa por el reitera glosa' pues siempre se debe trabajar con el valor reiterado para las respuestas de glosa  			oDatosUSxFact.vrTotNetoDet = Decimal.Parse (reader ["vrReiteraGlosa"].ToString ());  			oDatosUSxFact.vrGlosa = Decimal.Parse (reader ["vrReiteraGlosa"].ToString ());  			oDatosUSxFact.vrTotBrutoDet = Double.Parse (reader ["vrReiteraGlosa"].ToString ());  			oDatosUSxFact.totServs = Double.Parse (reader ["vrReiteraGlosa"].ToString ());  		}  		else {  			oDatosUSxFact.vrTotBrutoDet = Double.Parse (reader ["vrGlosa"].ToString ());  			oDatosUSxFact.totServs = Double.Parse (reader ["vrGlosa"].ToString ());  		}  		oDatosUSxFact.codDx1 = reader ["codDx1"].ToString ();  		oDatosUSxFact.radicado = reader ["radicado"].ToString ();  		oDatosUSxFact.cantServs = 1;  		lista.Add (oDatosUSxFact);  	}  	reader.Close ();  	return lista;  }  catch (Exception) {  	throw;  }  finally {  	oDataAccess.close ();  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The following statement contains a magic number: while (reader.Read ()) {  	oDatosUSxFact = new DatosUSxFactEntidad ();  	oDatosUSxFact.idGlosa = Int32.Parse (reader ["idGlosa"].ToString ());  	oDatosUSxFact.idDatosUS = Int32.Parse (reader ["idDatosUs"].ToString ());  	oDatosUSxFact.docIden = reader ["docIden"].ToString ();  	oDatosUSxFact.prefFactura = reader ["factura"].ToString ();  	DateTime dd = DateTime.Parse (reader ["fechaIng"].ToString ());  	oDatosUSxFact.fechaIng = Convert.ToString (dd.ToShortDateString ());  	oDatosUSxFact.codGlosaResp = reader ["codGlosaReitera"].ToString ();  	oDatosUSxFact.codGlosaEfec = reader ["codGlosa"].ToString ();  	if (tipo == 0) {  		oDatosUSxFact.vrAceptaIPS = Decimal.Parse (reader ["vrAsumeIPS"].ToString ());  		//oDatosUSxFact.noFactura = Int32.Parse((reader["noFactura"].ToString()));  	}  	if (tipo == 2) {  		oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString ();  		oDatosUSxFact.apellido_b = reader ["apellido_b"].ToString ();  		oDatosUSxFact.nombre_a = reader ["nombre_a"].ToString ();  		oDatosUSxFact.nombre_b = reader ["nombre_b"].ToString ();  	}  	else if (tipo == 0 || tipo == 1 || tipo == 3) {  		oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString () + " " + reader ["apellido_b"].ToString () + " " + reader ["nombre_a"].ToString () + " " + reader ["nombre_b"].ToString ();  		oDatosUSxFact.nombre_a = reader ["noFacturaMinRadicado"].ToString ();  		//oDatosUSxFact.noFactura = Int32.Parse((reader["noFactura"].ToString()));  	}  	if (tipo == 2) {  		oDatosUSxFact.guia = reader ["guia"].ToString ();  		oDatosUSxFact.cantServs = 1;  		oDatosUSxFact.vrTotNetoDet = Decimal.Parse (reader ["vrGlosa"].ToString ());  		oDatosUSxFact.vrGlosa = Decimal.Parse (reader ["vrGlosa"].ToString ());  	}  	if (tipo == 3) {  		//Se cambia el valor total glosa por el reitera glosa' pues siempre se debe trabajar con el valor reiterado para las respuestas de glosa  		oDatosUSxFact.vrTotNetoDet = Decimal.Parse (reader ["vrReiteraGlosa"].ToString ());  		oDatosUSxFact.vrGlosa = Decimal.Parse (reader ["vrReiteraGlosa"].ToString ());  		oDatosUSxFact.vrTotBrutoDet = Double.Parse (reader ["vrReiteraGlosa"].ToString ());  		oDatosUSxFact.totServs = Double.Parse (reader ["vrReiteraGlosa"].ToString ());  	}  	else {  		oDatosUSxFact.vrTotBrutoDet = Double.Parse (reader ["vrGlosa"].ToString ());  		oDatosUSxFact.totServs = Double.Parse (reader ["vrGlosa"].ToString ());  	}  	oDatosUSxFact.codDx1 = reader ["codDx1"].ToString ();  	oDatosUSxFact.radicado = reader ["radicado"].ToString ();  	oDatosUSxFact.cantServs = 1;  	lista.Add (oDatosUSxFact);  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The following statement contains a magic number: while (reader.Read ()) {  	oDatosUSxFact = new DatosUSxFactEntidad ();  	oDatosUSxFact.idGlosa = Int32.Parse (reader ["idGlosa"].ToString ());  	oDatosUSxFact.idDatosUS = Int32.Parse (reader ["idDatosUs"].ToString ());  	oDatosUSxFact.docIden = reader ["docIden"].ToString ();  	oDatosUSxFact.prefFactura = reader ["factura"].ToString ();  	DateTime dd = DateTime.Parse (reader ["fechaIng"].ToString ());  	oDatosUSxFact.fechaIng = Convert.ToString (dd.ToShortDateString ());  	oDatosUSxFact.codGlosaResp = reader ["codGlosaReitera"].ToString ();  	oDatosUSxFact.codGlosaEfec = reader ["codGlosa"].ToString ();  	if (tipo == 0) {  		oDatosUSxFact.vrAceptaIPS = Decimal.Parse (reader ["vrAsumeIPS"].ToString ());  		//oDatosUSxFact.noFactura = Int32.Parse((reader["noFactura"].ToString()));  	}  	if (tipo == 2) {  		oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString ();  		oDatosUSxFact.apellido_b = reader ["apellido_b"].ToString ();  		oDatosUSxFact.nombre_a = reader ["nombre_a"].ToString ();  		oDatosUSxFact.nombre_b = reader ["nombre_b"].ToString ();  	}  	else if (tipo == 0 || tipo == 1 || tipo == 3) {  		oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString () + " " + reader ["apellido_b"].ToString () + " " + reader ["nombre_a"].ToString () + " " + reader ["nombre_b"].ToString ();  		oDatosUSxFact.nombre_a = reader ["noFacturaMinRadicado"].ToString ();  		//oDatosUSxFact.noFactura = Int32.Parse((reader["noFactura"].ToString()));  	}  	if (tipo == 2) {  		oDatosUSxFact.guia = reader ["guia"].ToString ();  		oDatosUSxFact.cantServs = 1;  		oDatosUSxFact.vrTotNetoDet = Decimal.Parse (reader ["vrGlosa"].ToString ());  		oDatosUSxFact.vrGlosa = Decimal.Parse (reader ["vrGlosa"].ToString ());  	}  	if (tipo == 3) {  		//Se cambia el valor total glosa por el reitera glosa' pues siempre se debe trabajar con el valor reiterado para las respuestas de glosa  		oDatosUSxFact.vrTotNetoDet = Decimal.Parse (reader ["vrReiteraGlosa"].ToString ());  		oDatosUSxFact.vrGlosa = Decimal.Parse (reader ["vrReiteraGlosa"].ToString ());  		oDatosUSxFact.vrTotBrutoDet = Double.Parse (reader ["vrReiteraGlosa"].ToString ());  		oDatosUSxFact.totServs = Double.Parse (reader ["vrReiteraGlosa"].ToString ());  	}  	else {  		oDatosUSxFact.vrTotBrutoDet = Double.Parse (reader ["vrGlosa"].ToString ());  		oDatosUSxFact.totServs = Double.Parse (reader ["vrGlosa"].ToString ());  	}  	oDatosUSxFact.codDx1 = reader ["codDx1"].ToString ();  	oDatosUSxFact.radicado = reader ["radicado"].ToString ();  	oDatosUSxFact.cantServs = 1;  	lista.Add (oDatosUSxFact);  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The following statement contains a magic number: while (reader.Read ()) {  	oDatosUSxFact = new DatosUSxFactEntidad ();  	oDatosUSxFact.idGlosa = Int32.Parse (reader ["idGlosa"].ToString ());  	oDatosUSxFact.idDatosUS = Int32.Parse (reader ["idDatosUs"].ToString ());  	oDatosUSxFact.docIden = reader ["docIden"].ToString ();  	oDatosUSxFact.prefFactura = reader ["factura"].ToString ();  	DateTime dd = DateTime.Parse (reader ["fechaIng"].ToString ());  	oDatosUSxFact.fechaIng = Convert.ToString (dd.ToShortDateString ());  	oDatosUSxFact.codGlosaResp = reader ["codGlosaReitera"].ToString ();  	oDatosUSxFact.codGlosaEfec = reader ["codGlosa"].ToString ();  	if (tipo == 0) {  		oDatosUSxFact.vrAceptaIPS = Decimal.Parse (reader ["vrAsumeIPS"].ToString ());  		//oDatosUSxFact.noFactura = Int32.Parse((reader["noFactura"].ToString()));  	}  	if (tipo == 2) {  		oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString ();  		oDatosUSxFact.apellido_b = reader ["apellido_b"].ToString ();  		oDatosUSxFact.nombre_a = reader ["nombre_a"].ToString ();  		oDatosUSxFact.nombre_b = reader ["nombre_b"].ToString ();  	}  	else if (tipo == 0 || tipo == 1 || tipo == 3) {  		oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString () + " " + reader ["apellido_b"].ToString () + " " + reader ["nombre_a"].ToString () + " " + reader ["nombre_b"].ToString ();  		oDatosUSxFact.nombre_a = reader ["noFacturaMinRadicado"].ToString ();  		//oDatosUSxFact.noFactura = Int32.Parse((reader["noFactura"].ToString()));  	}  	if (tipo == 2) {  		oDatosUSxFact.guia = reader ["guia"].ToString ();  		oDatosUSxFact.cantServs = 1;  		oDatosUSxFact.vrTotNetoDet = Decimal.Parse (reader ["vrGlosa"].ToString ());  		oDatosUSxFact.vrGlosa = Decimal.Parse (reader ["vrGlosa"].ToString ());  	}  	if (tipo == 3) {  		//Se cambia el valor total glosa por el reitera glosa' pues siempre se debe trabajar con el valor reiterado para las respuestas de glosa  		oDatosUSxFact.vrTotNetoDet = Decimal.Parse (reader ["vrReiteraGlosa"].ToString ());  		oDatosUSxFact.vrGlosa = Decimal.Parse (reader ["vrReiteraGlosa"].ToString ());  		oDatosUSxFact.vrTotBrutoDet = Double.Parse (reader ["vrReiteraGlosa"].ToString ());  		oDatosUSxFact.totServs = Double.Parse (reader ["vrReiteraGlosa"].ToString ());  	}  	else {  		oDatosUSxFact.vrTotBrutoDet = Double.Parse (reader ["vrGlosa"].ToString ());  		oDatosUSxFact.totServs = Double.Parse (reader ["vrGlosa"].ToString ());  	}  	oDatosUSxFact.codDx1 = reader ["codDx1"].ToString ();  	oDatosUSxFact.radicado = reader ["radicado"].ToString ();  	oDatosUSxFact.cantServs = 1;  	lista.Add (oDatosUSxFact);  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The following statement contains a magic number: while (reader.Read ()) {  	oDatosUSxFact = new DatosUSxFactEntidad ();  	oDatosUSxFact.idGlosa = Int32.Parse (reader ["idGlosa"].ToString ());  	oDatosUSxFact.idDatosUS = Int32.Parse (reader ["idDatosUs"].ToString ());  	oDatosUSxFact.docIden = reader ["docIden"].ToString ();  	oDatosUSxFact.prefFactura = reader ["factura"].ToString ();  	DateTime dd = DateTime.Parse (reader ["fechaIng"].ToString ());  	oDatosUSxFact.fechaIng = Convert.ToString (dd.ToShortDateString ());  	oDatosUSxFact.codGlosaResp = reader ["codGlosaReitera"].ToString ();  	oDatosUSxFact.codGlosaEfec = reader ["codGlosa"].ToString ();  	if (tipo == 0) {  		oDatosUSxFact.vrAceptaIPS = Decimal.Parse (reader ["vrAsumeIPS"].ToString ());  		//oDatosUSxFact.noFactura = Int32.Parse((reader["noFactura"].ToString()));  	}  	if (tipo == 2) {  		oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString ();  		oDatosUSxFact.apellido_b = reader ["apellido_b"].ToString ();  		oDatosUSxFact.nombre_a = reader ["nombre_a"].ToString ();  		oDatosUSxFact.nombre_b = reader ["nombre_b"].ToString ();  	}  	else if (tipo == 0 || tipo == 1 || tipo == 3) {  		oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString () + " " + reader ["apellido_b"].ToString () + " " + reader ["nombre_a"].ToString () + " " + reader ["nombre_b"].ToString ();  		oDatosUSxFact.nombre_a = reader ["noFacturaMinRadicado"].ToString ();  		//oDatosUSxFact.noFactura = Int32.Parse((reader["noFactura"].ToString()));  	}  	if (tipo == 2) {  		oDatosUSxFact.guia = reader ["guia"].ToString ();  		oDatosUSxFact.cantServs = 1;  		oDatosUSxFact.vrTotNetoDet = Decimal.Parse (reader ["vrGlosa"].ToString ());  		oDatosUSxFact.vrGlosa = Decimal.Parse (reader ["vrGlosa"].ToString ());  	}  	if (tipo == 3) {  		//Se cambia el valor total glosa por el reitera glosa' pues siempre se debe trabajar con el valor reiterado para las respuestas de glosa  		oDatosUSxFact.vrTotNetoDet = Decimal.Parse (reader ["vrReiteraGlosa"].ToString ());  		oDatosUSxFact.vrGlosa = Decimal.Parse (reader ["vrReiteraGlosa"].ToString ());  		oDatosUSxFact.vrTotBrutoDet = Double.Parse (reader ["vrReiteraGlosa"].ToString ());  		oDatosUSxFact.totServs = Double.Parse (reader ["vrReiteraGlosa"].ToString ());  	}  	else {  		oDatosUSxFact.vrTotBrutoDet = Double.Parse (reader ["vrGlosa"].ToString ());  		oDatosUSxFact.totServs = Double.Parse (reader ["vrGlosa"].ToString ());  	}  	oDatosUSxFact.codDx1 = reader ["codDx1"].ToString ();  	oDatosUSxFact.radicado = reader ["radicado"].ToString ();  	oDatosUSxFact.cantServs = 1;  	lista.Add (oDatosUSxFact);  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The following statement contains a magic number: if (tipo == 2) {  	oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString ();  	oDatosUSxFact.apellido_b = reader ["apellido_b"].ToString ();  	oDatosUSxFact.nombre_a = reader ["nombre_a"].ToString ();  	oDatosUSxFact.nombre_b = reader ["nombre_b"].ToString ();  }  else if (tipo == 0 || tipo == 1 || tipo == 3) {  	oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString () + " " + reader ["apellido_b"].ToString () + " " + reader ["nombre_a"].ToString () + " " + reader ["nombre_b"].ToString ();  	oDatosUSxFact.nombre_a = reader ["noFacturaMinRadicado"].ToString ();  	//oDatosUSxFact.noFactura = Int32.Parse((reader["noFactura"].ToString()));  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The following statement contains a magic number: if (tipo == 2) {  	oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString ();  	oDatosUSxFact.apellido_b = reader ["apellido_b"].ToString ();  	oDatosUSxFact.nombre_a = reader ["nombre_a"].ToString ();  	oDatosUSxFact.nombre_b = reader ["nombre_b"].ToString ();  }  else if (tipo == 0 || tipo == 1 || tipo == 3) {  	oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString () + " " + reader ["apellido_b"].ToString () + " " + reader ["nombre_a"].ToString () + " " + reader ["nombre_b"].ToString ();  	oDatosUSxFact.nombre_a = reader ["noFacturaMinRadicado"].ToString ();  	//oDatosUSxFact.noFactura = Int32.Parse((reader["noFactura"].ToString()));  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The following statement contains a magic number: if (tipo == 0 || tipo == 1 || tipo == 3) {  	oDatosUSxFact.apellido_a = reader ["apellido_a"].ToString () + " " + reader ["apellido_b"].ToString () + " " + reader ["nombre_a"].ToString () + " " + reader ["nombre_b"].ToString ();  	oDatosUSxFact.nombre_a = reader ["noFacturaMinRadicado"].ToString ();  	//oDatosUSxFact.noFactura = Int32.Parse((reader["noFactura"].ToString()));  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The following statement contains a magic number: if (tipo == 2) {  	oDatosUSxFact.guia = reader ["guia"].ToString ();  	oDatosUSxFact.cantServs = 1;  	oDatosUSxFact.vrTotNetoDet = Decimal.Parse (reader ["vrGlosa"].ToString ());  	oDatosUSxFact.vrGlosa = Decimal.Parse (reader ["vrGlosa"].ToString ());  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetGlosasEncabezado,The following statement contains a magic number: if (tipo == 3) {  	//Se cambia el valor total glosa por el reitera glosa' pues siempre se debe trabajar con el valor reiterado para las respuestas de glosa  	oDatosUSxFact.vrTotNetoDet = Decimal.Parse (reader ["vrReiteraGlosa"].ToString ());  	oDatosUSxFact.vrGlosa = Decimal.Parse (reader ["vrReiteraGlosa"].ToString ());  	oDatosUSxFact.vrTotBrutoDet = Double.Parse (reader ["vrReiteraGlosa"].ToString ());  	oDatosUSxFact.totServs = Double.Parse (reader ["vrReiteraGlosa"].ToString ());  }  else {  	oDatosUSxFact.vrTotBrutoDet = Double.Parse (reader ["vrGlosa"].ToString ());  	oDatosUSxFact.totServs = Double.Parse (reader ["vrGlosa"].ToString ());  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetNumFactura,The following statement contains a magic number: for (Int32 i = factura.Length - 1; i >= 0; i--) {  	char c = char.Parse (factura.Substring (i' 1));  	if ((((Int64)c) >= 48) && (((Int64)c) <= 57)) {  		f = c + f;  	}  	else {  		i = 0;  	}  	if (((Int64)c) == 48) {  		cantCero++;  	}  	if (cantCero > 3) {  		i = 0;  	}  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetNumFactura,The following statement contains a magic number: for (Int32 i = factura.Length - 1; i >= 0; i--) {  	char c = char.Parse (factura.Substring (i' 1));  	if ((((Int64)c) >= 48) && (((Int64)c) <= 57)) {  		f = c + f;  	}  	else {  		i = 0;  	}  	if (((Int64)c) == 48) {  		cantCero++;  	}  	if (cantCero > 3) {  		i = 0;  	}  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetNumFactura,The following statement contains a magic number: for (Int32 i = factura.Length - 1; i >= 0; i--) {  	char c = char.Parse (factura.Substring (i' 1));  	if ((((Int64)c) >= 48) && (((Int64)c) <= 57)) {  		f = c + f;  	}  	else {  		i = 0;  	}  	if (((Int64)c) == 48) {  		cantCero++;  	}  	if (cantCero > 3) {  		i = 0;  	}  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetNumFactura,The following statement contains a magic number: for (Int32 i = factura.Length - 1; i >= 0; i--) {  	char c = char.Parse (factura.Substring (i' 1));  	if ((((Int64)c) >= 48) && (((Int64)c) <= 57)) {  		f = c + f;  	}  	else {  		i = 0;  	}  	if (((Int64)c) == 48) {  		cantCero++;  	}  	if (cantCero > 3) {  		i = 0;  	}  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetNumFactura,The following statement contains a magic number: if ((((Int64)c) >= 48) && (((Int64)c) <= 57)) {  	f = c + f;  }  else {  	i = 0;  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetNumFactura,The following statement contains a magic number: if ((((Int64)c) >= 48) && (((Int64)c) <= 57)) {  	f = c + f;  }  else {  	i = 0;  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetNumFactura,The following statement contains a magic number: if (((Int64)c) == 48) {  	cantCero++;  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetNumFactura,The following statement contains a magic number: if (cantCero > 3) {  	i = 0;  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetPrefix,The following statement contains a magic number: for (Int32 i = 0; i < factura.Length; i++) {  	char c = char.Parse (factura.Substring (i' 1));  	if ((((Int32)c) < 48) || (((Int32)c) > 57)) {  		ind = i;  	}  	if (((Int32)c) == 48) {  		cantCero++;  	}  	else {  		cantCero = 0;  	}  	if (cantCero > 3) {  		ind = i;  	}  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetPrefix,The following statement contains a magic number: for (Int32 i = 0; i < factura.Length; i++) {  	char c = char.Parse (factura.Substring (i' 1));  	if ((((Int32)c) < 48) || (((Int32)c) > 57)) {  		ind = i;  	}  	if (((Int32)c) == 48) {  		cantCero++;  	}  	else {  		cantCero = 0;  	}  	if (cantCero > 3) {  		ind = i;  	}  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetPrefix,The following statement contains a magic number: for (Int32 i = 0; i < factura.Length; i++) {  	char c = char.Parse (factura.Substring (i' 1));  	if ((((Int32)c) < 48) || (((Int32)c) > 57)) {  		ind = i;  	}  	if (((Int32)c) == 48) {  		cantCero++;  	}  	else {  		cantCero = 0;  	}  	if (cantCero > 3) {  		ind = i;  	}  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetPrefix,The following statement contains a magic number: for (Int32 i = 0; i < factura.Length; i++) {  	char c = char.Parse (factura.Substring (i' 1));  	if ((((Int32)c) < 48) || (((Int32)c) > 57)) {  		ind = i;  	}  	if (((Int32)c) == 48) {  		cantCero++;  	}  	else {  		cantCero = 0;  	}  	if (cantCero > 3) {  		ind = i;  	}  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetPrefix,The following statement contains a magic number: if ((((Int32)c) < 48) || (((Int32)c) > 57)) {  	ind = i;  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetPrefix,The following statement contains a magic number: if ((((Int32)c) < 48) || (((Int32)c) > 57)) {  	ind = i;  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetPrefix,The following statement contains a magic number: if (((Int32)c) == 48) {  	cantCero++;  }  else {  	cantCero = 0;  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetPrefix,The following statement contains a magic number: if (cantCero > 3) {  	ind = i;  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetPrefix,The following statement contains a magic number: if (ind == 0) {  	for (Int32 i = 0; i < factura.Length; i++) {  		char c = char.Parse (factura.Substring (i' 1));  		if (((Int32)c) == 48) {  			ind = i;  		}  		else {  			i = factura.Length;  		}  	}  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetPrefix,The following statement contains a magic number: for (Int32 i = 0; i < factura.Length; i++) {  	char c = char.Parse (factura.Substring (i' 1));  	if (((Int32)c) == 48) {  		ind = i;  	}  	else {  		i = factura.Length;  	}  }  
Magic Number,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,GetPrefix,The following statement contains a magic number: if (((Int32)c) == 48) {  	ind = i;  }  else {  	i = factura.Length;  }  
Magic Number,DataManagement,DM_DatosUSXProceso,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DatosUSXProceso.cs,DeleteDatosUSXProceso,The following statement contains a magic number: switch (proceso) {  case 1:  	sbDatosUSXProceso.Append (" DatosUSXProceso");  	break;  case 2:  	sbDatosUSXProceso.Append (" glosasxProceso");  	break;  case 3:  	sbDatosUSXProceso.Append (" recobrosXProceso");  	break;  }  
Magic Number,DataManagement,DM_DatosUSXProceso,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DatosUSXProceso.cs,DeleteDatosUSXProceso,The following statement contains a magic number: switch (proceso) {  case 1:  	sbDatosUSXProceso.Append (" DatosUSXProceso");  	break;  case 2:  	sbDatosUSXProceso.Append (" glosasxProceso");  	break;  case 3:  	sbDatosUSXProceso.Append (" recobrosXProceso");  	break;  }  
Magic Number,DataManagement,DM_DatosUSXProceso,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DatosUSXProceso.cs,DeleteDatosUSXProceso,The following statement contains a magic number: switch (proceso) {  case 1:  	sbDatosUSXProceso.Append (" AND idDatosUS='" + idDatosUS + "'");  	break;  case 2:  	sbDatosUSXProceso.Append (" AND idGlosa='" + idDatosUS + "'");  	break;  case 3:  	sbDatosUSXProceso.Append (" AND idRecobro='" + idDatosUS + "'");  	break;  }  
Magic Number,DataManagement,DM_DatosUSXProceso,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DatosUSXProceso.cs,DeleteDatosUSXProceso,The following statement contains a magic number: switch (proceso) {  case 1:  	sbDatosUSXProceso.Append (" AND idDatosUS='" + idDatosUS + "'");  	break;  case 2:  	sbDatosUSXProceso.Append (" AND idGlosa='" + idDatosUS + "'");  	break;  case 3:  	sbDatosUSXProceso.Append (" AND idRecobro='" + idDatosUS + "'");  	break;  }  
Magic Number,DataManagement,DM_Servicios,C:\repos\carlosyy_SIISAConc\DataManagement\DM_Servicios.cs,getServiciosXBusq,The following statement contains a magic number: try {  	oDataAccess.open ();  	IDataReader reader = oDataAccess.executeReader (CommandType.Text' sQuery);  	while (reader.Read ()) {  		lServicios.Add (new ServiciosEntidad () {  			codServ = reader ["codServ"].ToString ()'  			descripcion = (reader ["codDesc"].ToString ().Length > 60 ? reader ["codDesc"].ToString ().Substring (0' 60) : reader ["codDesc"].ToString ())'  			nombreConcepto = reader ["nombreConcepto"].ToString ()  		});  	}  	reader.Close ();  }  catch (DbException ex) {  	throw new Exception ("Se ha generado el siguiente error : " + ex.Message);  }  finally {  	oDataAccess.close ();  }  
Magic Number,DataManagement,DM_Servicios,C:\repos\carlosyy_SIISAConc\DataManagement\DM_Servicios.cs,getServiciosXBusq,The following statement contains a magic number: try {  	oDataAccess.open ();  	IDataReader reader = oDataAccess.executeReader (CommandType.Text' sQuery);  	while (reader.Read ()) {  		lServicios.Add (new ServiciosEntidad () {  			codServ = reader ["codServ"].ToString ()'  			descripcion = (reader ["codDesc"].ToString ().Length > 60 ? reader ["codDesc"].ToString ().Substring (0' 60) : reader ["codDesc"].ToString ())'  			nombreConcepto = reader ["nombreConcepto"].ToString ()  		});  	}  	reader.Close ();  }  catch (DbException ex) {  	throw new Exception ("Se ha generado el siguiente error : " + ex.Message);  }  finally {  	oDataAccess.close ();  }  
Magic Number,DataManagement,DM_Servicios,C:\repos\carlosyy_SIISAConc\DataManagement\DM_Servicios.cs,getServiciosXBusq,The following statement contains a magic number: while (reader.Read ()) {  	lServicios.Add (new ServiciosEntidad () {  		codServ = reader ["codServ"].ToString ()'  		descripcion = (reader ["codDesc"].ToString ().Length > 60 ? reader ["codDesc"].ToString ().Substring (0' 60) : reader ["codDesc"].ToString ())'  		nombreConcepto = reader ["nombreConcepto"].ToString ()  	});  }  
Magic Number,DataManagement,DM_Servicios,C:\repos\carlosyy_SIISAConc\DataManagement\DM_Servicios.cs,getServiciosXBusq,The following statement contains a magic number: while (reader.Read ()) {  	lServicios.Add (new ServiciosEntidad () {  		codServ = reader ["codServ"].ToString ()'  		descripcion = (reader ["codDesc"].ToString ().Length > 60 ? reader ["codDesc"].ToString ().Substring (0' 60) : reader ["codDesc"].ToString ())'  		nombreConcepto = reader ["nombreConcepto"].ToString ()  	});  }  
Magic Number,DataManagement,DM_Servicios,C:\repos\carlosyy_SIISAConc\DataManagement\DM_Servicios.cs,getServiciosXBusq,The following statement contains a magic number: lServicios.Add (new ServiciosEntidad () {  	codServ = reader ["codServ"].ToString ()'  	descripcion = (reader ["codDesc"].ToString ().Length > 60 ? reader ["codDesc"].ToString ().Substring (0' 60) : reader ["codDesc"].ToString ())'  	nombreConcepto = reader ["nombreConcepto"].ToString ()  });  
Magic Number,DataManagement,DM_Servicios,C:\repos\carlosyy_SIISAConc\DataManagement\DM_Servicios.cs,getServiciosXBusq,The following statement contains a magic number: lServicios.Add (new ServiciosEntidad () {  	codServ = reader ["codServ"].ToString ()'  	descripcion = (reader ["codDesc"].ToString ().Length > 60 ? reader ["codDesc"].ToString ().Substring (0' 60) : reader ["codDesc"].ToString ())'  	nombreConcepto = reader ["nombreConcepto"].ToString ()  });  
Magic Number,DataManagement,DM_DxAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DxAtencion.cs,getDxAtencion,The following statement contains a magic number: try {  	oDataAccess.open ();  	reader = oDataAccess.executeReader (CommandType.Text' sbDxAtencion.ToString ());  	while (reader.Read ()) {  		ODxEntidad = new DxAtencionEntidad ();  		ODxEntidad.idDx = Int32.Parse (reader ["idDx"].ToString ());  		ODxEntidad.codDx = reader ["codDx"].ToString ();  		ODxEntidad.descripDx = ((reader ["dx"].ToString ().Length > 60) ? reader ["dx"].ToString ().Substring (0' 60) : reader ["dx"].ToString ());  		ODxEntidad.dxPpal = Boolean.Parse (reader ["dxPpal"].ToString ());  		eDxAtencion.Add (ODxEntidad);  	}  	reader.Close ();  	return eDxAtencion;  }  catch (Exception) {  	throw;  }  finally {  	oDataAccess.close ();  }  
Magic Number,DataManagement,DM_DxAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DxAtencion.cs,getDxAtencion,The following statement contains a magic number: try {  	oDataAccess.open ();  	reader = oDataAccess.executeReader (CommandType.Text' sbDxAtencion.ToString ());  	while (reader.Read ()) {  		ODxEntidad = new DxAtencionEntidad ();  		ODxEntidad.idDx = Int32.Parse (reader ["idDx"].ToString ());  		ODxEntidad.codDx = reader ["codDx"].ToString ();  		ODxEntidad.descripDx = ((reader ["dx"].ToString ().Length > 60) ? reader ["dx"].ToString ().Substring (0' 60) : reader ["dx"].ToString ());  		ODxEntidad.dxPpal = Boolean.Parse (reader ["dxPpal"].ToString ());  		eDxAtencion.Add (ODxEntidad);  	}  	reader.Close ();  	return eDxAtencion;  }  catch (Exception) {  	throw;  }  finally {  	oDataAccess.close ();  }  
Magic Number,DataManagement,DM_DxAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DxAtencion.cs,getDxAtencion,The following statement contains a magic number: while (reader.Read ()) {  	ODxEntidad = new DxAtencionEntidad ();  	ODxEntidad.idDx = Int32.Parse (reader ["idDx"].ToString ());  	ODxEntidad.codDx = reader ["codDx"].ToString ();  	ODxEntidad.descripDx = ((reader ["dx"].ToString ().Length > 60) ? reader ["dx"].ToString ().Substring (0' 60) : reader ["dx"].ToString ());  	ODxEntidad.dxPpal = Boolean.Parse (reader ["dxPpal"].ToString ());  	eDxAtencion.Add (ODxEntidad);  }  
Magic Number,DataManagement,DM_DxAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DxAtencion.cs,getDxAtencion,The following statement contains a magic number: while (reader.Read ()) {  	ODxEntidad = new DxAtencionEntidad ();  	ODxEntidad.idDx = Int32.Parse (reader ["idDx"].ToString ());  	ODxEntidad.codDx = reader ["codDx"].ToString ();  	ODxEntidad.descripDx = ((reader ["dx"].ToString ().Length > 60) ? reader ["dx"].ToString ().Substring (0' 60) : reader ["dx"].ToString ());  	ODxEntidad.dxPpal = Boolean.Parse (reader ["dxPpal"].ToString ());  	eDxAtencion.Add (ODxEntidad);  }  
Magic Number,DataManagement,DM_DxAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DxAtencion.cs,getDxAtencion,The following statement contains a magic number: ODxEntidad.descripDx = ((reader ["dx"].ToString ().Length > 60) ? reader ["dx"].ToString ().Substring (0' 60) : reader ["dx"].ToString ());  
Magic Number,DataManagement,DM_DxAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DxAtencion.cs,getDxAtencion,The following statement contains a magic number: ODxEntidad.descripDx = ((reader ["dx"].ToString ().Length > 60) ? reader ["dx"].ToString ().Substring (0' 60) : reader ["dx"].ToString ());  
Magic Number,DataManagement,DM_DxAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DxAtencion.cs,getDxAtencionInic,The following statement contains a magic number: try {  	oDataAccess.open ();  	reader = oDataAccess.executeReader (CommandType.Text' sbDxAtencion.ToString ());  	while (reader.Read ()) {  		ODxEntidad = new DxAtencionEntidad ();  		ODxEntidad.codDx = reader ["codDx"].ToString ();  		ODxEntidad.descripDx = ((reader ["dx"].ToString ().Length > 60) ? reader ["dx"].ToString ().Substring (0' 60) : reader ["dx"].ToString ());  		eDxAtencion.Add (ODxEntidad);  	}  	reader.Close ();  	return eDxAtencion;  }  catch (Exception) {  	throw;  }  finally {  	oDataAccess.close ();  }  
Magic Number,DataManagement,DM_DxAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DxAtencion.cs,getDxAtencionInic,The following statement contains a magic number: try {  	oDataAccess.open ();  	reader = oDataAccess.executeReader (CommandType.Text' sbDxAtencion.ToString ());  	while (reader.Read ()) {  		ODxEntidad = new DxAtencionEntidad ();  		ODxEntidad.codDx = reader ["codDx"].ToString ();  		ODxEntidad.descripDx = ((reader ["dx"].ToString ().Length > 60) ? reader ["dx"].ToString ().Substring (0' 60) : reader ["dx"].ToString ());  		eDxAtencion.Add (ODxEntidad);  	}  	reader.Close ();  	return eDxAtencion;  }  catch (Exception) {  	throw;  }  finally {  	oDataAccess.close ();  }  
Magic Number,DataManagement,DM_DxAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DxAtencion.cs,getDxAtencionInic,The following statement contains a magic number: while (reader.Read ()) {  	ODxEntidad = new DxAtencionEntidad ();  	ODxEntidad.codDx = reader ["codDx"].ToString ();  	ODxEntidad.descripDx = ((reader ["dx"].ToString ().Length > 60) ? reader ["dx"].ToString ().Substring (0' 60) : reader ["dx"].ToString ());  	eDxAtencion.Add (ODxEntidad);  }  
Magic Number,DataManagement,DM_DxAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DxAtencion.cs,getDxAtencionInic,The following statement contains a magic number: while (reader.Read ()) {  	ODxEntidad = new DxAtencionEntidad ();  	ODxEntidad.codDx = reader ["codDx"].ToString ();  	ODxEntidad.descripDx = ((reader ["dx"].ToString ().Length > 60) ? reader ["dx"].ToString ().Substring (0' 60) : reader ["dx"].ToString ());  	eDxAtencion.Add (ODxEntidad);  }  
Magic Number,DataManagement,DM_DxAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DxAtencion.cs,getDxAtencionInic,The following statement contains a magic number: ODxEntidad.descripDx = ((reader ["dx"].ToString ().Length > 60) ? reader ["dx"].ToString ().Substring (0' 60) : reader ["dx"].ToString ());  
Magic Number,DataManagement,DM_DxAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DxAtencion.cs,getDxAtencionInic,The following statement contains a magic number: ODxEntidad.descripDx = ((reader ["dx"].ToString ().Length > 60) ? reader ["dx"].ToString ().Substring (0' 60) : reader ["dx"].ToString ());  
Magic Number,DataManagement,DM_ServiciosAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_ServiciosAtencion.cs,getServiciosAtencion,The following statement contains a magic number: try {  	oDataAccess.open ();  	reader = oDataAccess.executeReader (CommandType.Text' sbServiciosAtencion.ToString ());  	while (reader.Read ()) {  		OserviEntidad = new ServiciosAtencionEntidad ();  		OserviEntidad.idServ = Int32.Parse (reader ["idServ"].ToString ());  		OserviEntidad.codServ = reader ["codServ"].ToString ();  		OserviEntidad.noAutorizacion = reader ["noAutorizacion"].ToString ();  		OserviEntidad.descripServ = ((reader ["servicio"].ToString ().Length > 60) ? reader ["servicio"].ToString ().Substring (0' 60) : reader ["servicio"].ToString ());  		OserviEntidad.concepto = reader ["nombreconcepto"].ToString ();  		OserviEntidad.servPpal = Boolean.Parse (reader ["servPpal"].ToString ());  		ServiFactUsu.Add (OserviEntidad);  	}  	reader.Close ();  	return ServiFactUsu;  }  catch (Exception) {  	throw;  }  finally {  	oDataAccess.close ();  }  
Magic Number,DataManagement,DM_ServiciosAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_ServiciosAtencion.cs,getServiciosAtencion,The following statement contains a magic number: try {  	oDataAccess.open ();  	reader = oDataAccess.executeReader (CommandType.Text' sbServiciosAtencion.ToString ());  	while (reader.Read ()) {  		OserviEntidad = new ServiciosAtencionEntidad ();  		OserviEntidad.idServ = Int32.Parse (reader ["idServ"].ToString ());  		OserviEntidad.codServ = reader ["codServ"].ToString ();  		OserviEntidad.noAutorizacion = reader ["noAutorizacion"].ToString ();  		OserviEntidad.descripServ = ((reader ["servicio"].ToString ().Length > 60) ? reader ["servicio"].ToString ().Substring (0' 60) : reader ["servicio"].ToString ());  		OserviEntidad.concepto = reader ["nombreconcepto"].ToString ();  		OserviEntidad.servPpal = Boolean.Parse (reader ["servPpal"].ToString ());  		ServiFactUsu.Add (OserviEntidad);  	}  	reader.Close ();  	return ServiFactUsu;  }  catch (Exception) {  	throw;  }  finally {  	oDataAccess.close ();  }  
Magic Number,DataManagement,DM_ServiciosAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_ServiciosAtencion.cs,getServiciosAtencion,The following statement contains a magic number: while (reader.Read ()) {  	OserviEntidad = new ServiciosAtencionEntidad ();  	OserviEntidad.idServ = Int32.Parse (reader ["idServ"].ToString ());  	OserviEntidad.codServ = reader ["codServ"].ToString ();  	OserviEntidad.noAutorizacion = reader ["noAutorizacion"].ToString ();  	OserviEntidad.descripServ = ((reader ["servicio"].ToString ().Length > 60) ? reader ["servicio"].ToString ().Substring (0' 60) : reader ["servicio"].ToString ());  	OserviEntidad.concepto = reader ["nombreconcepto"].ToString ();  	OserviEntidad.servPpal = Boolean.Parse (reader ["servPpal"].ToString ());  	ServiFactUsu.Add (OserviEntidad);  }  
Magic Number,DataManagement,DM_ServiciosAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_ServiciosAtencion.cs,getServiciosAtencion,The following statement contains a magic number: while (reader.Read ()) {  	OserviEntidad = new ServiciosAtencionEntidad ();  	OserviEntidad.idServ = Int32.Parse (reader ["idServ"].ToString ());  	OserviEntidad.codServ = reader ["codServ"].ToString ();  	OserviEntidad.noAutorizacion = reader ["noAutorizacion"].ToString ();  	OserviEntidad.descripServ = ((reader ["servicio"].ToString ().Length > 60) ? reader ["servicio"].ToString ().Substring (0' 60) : reader ["servicio"].ToString ());  	OserviEntidad.concepto = reader ["nombreconcepto"].ToString ();  	OserviEntidad.servPpal = Boolean.Parse (reader ["servPpal"].ToString ());  	ServiFactUsu.Add (OserviEntidad);  }  
Magic Number,DataManagement,DM_ServiciosAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_ServiciosAtencion.cs,getServiciosAtencion,The following statement contains a magic number: OserviEntidad.descripServ = ((reader ["servicio"].ToString ().Length > 60) ? reader ["servicio"].ToString ().Substring (0' 60) : reader ["servicio"].ToString ());  
Magic Number,DataManagement,DM_ServiciosAtencion,C:\repos\carlosyy_SIISAConc\DataManagement\DM_ServiciosAtencion.cs,getServiciosAtencion,The following statement contains a magic number: OserviEntidad.descripServ = ((reader ["servicio"].ToString ().Length > 60) ? reader ["servicio"].ToString ().Substring (0' 60) : reader ["servicio"].ToString ());  
Missing Default,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,getDatosUSxFactListaCtas1Vez,The following switch statement is missing a default case: switch (Origen) {  case 0:  	break;  case 1:  	sbdatosUSxFact.Append (" ORDER BY B.apellido_a asc ");  	break;  case 2:  	sbdatosUSxFact.Append (" ORDER BY B.apellido_a desc ");  	break;  case 3:  	sbdatosUSxFact.Append (" ORDER BY programa");  	break;  }  
Missing Default,DataManagement,DM_datosUSxFact,C:\repos\carlosyy_SIISAConc\DataManagement\DM_datosUSxFact.cs,getDatosUSxFactListaCtas2Vez,The following switch statement is missing a default case: switch (Origen) {  case 0:  	break;  case 1:  	sbdatosUSxFact.Append (" ORDER BY D.apellido_a asc ");  	break;  case 2:  	sbdatosUSxFact.Append (" ORDER BY D.apellido_a desc ");  	break;  case 3:  	sbdatosUSxFact.Append (" ORDER BY programa");  	break;  }  
Missing Default,DataManagement,DM_DatosUSXProceso,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DatosUSXProceso.cs,DeleteDatosUSXProceso,The following switch statement is missing a default case: switch (proceso) {  case 1:  	sbDatosUSXProceso.Append (" DatosUSXProceso");  	break;  case 2:  	sbDatosUSXProceso.Append (" glosasxProceso");  	break;  case 3:  	sbDatosUSXProceso.Append (" recobrosXProceso");  	break;  }  
Missing Default,DataManagement,DM_DatosUSXProceso,C:\repos\carlosyy_SIISAConc\DataManagement\DM_DatosUSXProceso.cs,DeleteDatosUSXProceso,The following switch statement is missing a default case: switch (proceso) {  case 1:  	sbDatosUSXProceso.Append (" AND idDatosUS='" + idDatosUS + "'");  	break;  case 2:  	sbDatosUSXProceso.Append (" AND idGlosa='" + idDatosUS + "'");  	break;  case 3:  	sbDatosUSXProceso.Append (" AND idRecobro='" + idDatosUS + "'");  	break;  }  
