Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Rasterizr.Platform.Wpf,TextureLoader,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\TextureLoader.cs,CreateBitmapFromTexture,The length of the statement  "	var bitmapSouce = BitmapSource.Create (width' height' 96' 96' PixelFormats.Bgra32' null' pixelData' width * PixelFormats.Bgra32.BitsPerPixel / 8); " is 146.
Long Statement,Rasterizr.Platform.Wpf,WpfSwapChainPresenter,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\WpfSwapChainPresenter.cs,Present,The length of the statement  "		_bitmap.WritePixels (new Int32Rect (0' 0' _bitmap.PixelWidth' _bitmap.PixelHeight)' _outputBytes' _width * _bitmap.Format.BitsPerPixel / 8' 0); " is 143.
Magic Number,Rasterizr.Platform.Wpf,TextureLoader,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\TextureLoader.cs,CreateTextureFromStream,The following statement contains a magic number: bitmap.CopyPixels (pixelData' bitmap.PixelWidth * bitmap.Format.BitsPerPixel / 8' 0);  
Magic Number,Rasterizr.Platform.Wpf,TextureLoader,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\TextureLoader.cs,CreateTextureFromStream,The following statement contains a magic number: for (int i = 0; i < colors.Length; i++) {  	var b = pixelData [(i * 4) + 0];  	var g = pixelData [(i * 4) + 1];  	var r = pixelData [(i * 4) + 2];  	var a = pixelData [(i * 4) + 3];  	colors [i] = new Color4 (r / 255.0f' g / 255.0f' b / 255.0f' a / 255.0f);  }  
Magic Number,Rasterizr.Platform.Wpf,TextureLoader,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\TextureLoader.cs,CreateTextureFromStream,The following statement contains a magic number: for (int i = 0; i < colors.Length; i++) {  	var b = pixelData [(i * 4) + 0];  	var g = pixelData [(i * 4) + 1];  	var r = pixelData [(i * 4) + 2];  	var a = pixelData [(i * 4) + 3];  	colors [i] = new Color4 (r / 255.0f' g / 255.0f' b / 255.0f' a / 255.0f);  }  
Magic Number,Rasterizr.Platform.Wpf,TextureLoader,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\TextureLoader.cs,CreateTextureFromStream,The following statement contains a magic number: for (int i = 0; i < colors.Length; i++) {  	var b = pixelData [(i * 4) + 0];  	var g = pixelData [(i * 4) + 1];  	var r = pixelData [(i * 4) + 2];  	var a = pixelData [(i * 4) + 3];  	colors [i] = new Color4 (r / 255.0f' g / 255.0f' b / 255.0f' a / 255.0f);  }  
Magic Number,Rasterizr.Platform.Wpf,TextureLoader,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\TextureLoader.cs,CreateTextureFromStream,The following statement contains a magic number: for (int i = 0; i < colors.Length; i++) {  	var b = pixelData [(i * 4) + 0];  	var g = pixelData [(i * 4) + 1];  	var r = pixelData [(i * 4) + 2];  	var a = pixelData [(i * 4) + 3];  	colors [i] = new Color4 (r / 255.0f' g / 255.0f' b / 255.0f' a / 255.0f);  }  
Magic Number,Rasterizr.Platform.Wpf,TextureLoader,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\TextureLoader.cs,CreateTextureFromStream,The following statement contains a magic number: for (int i = 0; i < colors.Length; i++) {  	var b = pixelData [(i * 4) + 0];  	var g = pixelData [(i * 4) + 1];  	var r = pixelData [(i * 4) + 2];  	var a = pixelData [(i * 4) + 3];  	colors [i] = new Color4 (r / 255.0f' g / 255.0f' b / 255.0f' a / 255.0f);  }  
Magic Number,Rasterizr.Platform.Wpf,TextureLoader,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\TextureLoader.cs,CreateTextureFromStream,The following statement contains a magic number: for (int i = 0; i < colors.Length; i++) {  	var b = pixelData [(i * 4) + 0];  	var g = pixelData [(i * 4) + 1];  	var r = pixelData [(i * 4) + 2];  	var a = pixelData [(i * 4) + 3];  	colors [i] = new Color4 (r / 255.0f' g / 255.0f' b / 255.0f' a / 255.0f);  }  
Magic Number,Rasterizr.Platform.Wpf,TextureLoader,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\TextureLoader.cs,CreateBitmapFromTexture,The following statement contains a magic number: for (int i = 0; i < colors.Length; i++) {  	pixelData [(i * 4) + 0] = (byte)(colors [i].B * 255.0f);  	pixelData [(i * 4) + 1] = (byte)(colors [i].G * 255.0f);  	pixelData [(i * 4) + 2] = (byte)(colors [i].R * 255.0f);  	pixelData [(i * 4) + 3] = (byte)(colors [i].A * 255.0f);  }  
Magic Number,Rasterizr.Platform.Wpf,TextureLoader,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\TextureLoader.cs,CreateBitmapFromTexture,The following statement contains a magic number: for (int i = 0; i < colors.Length; i++) {  	pixelData [(i * 4) + 0] = (byte)(colors [i].B * 255.0f);  	pixelData [(i * 4) + 1] = (byte)(colors [i].G * 255.0f);  	pixelData [(i * 4) + 2] = (byte)(colors [i].R * 255.0f);  	pixelData [(i * 4) + 3] = (byte)(colors [i].A * 255.0f);  }  
Magic Number,Rasterizr.Platform.Wpf,TextureLoader,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\TextureLoader.cs,CreateBitmapFromTexture,The following statement contains a magic number: for (int i = 0; i < colors.Length; i++) {  	pixelData [(i * 4) + 0] = (byte)(colors [i].B * 255.0f);  	pixelData [(i * 4) + 1] = (byte)(colors [i].G * 255.0f);  	pixelData [(i * 4) + 2] = (byte)(colors [i].R * 255.0f);  	pixelData [(i * 4) + 3] = (byte)(colors [i].A * 255.0f);  }  
Magic Number,Rasterizr.Platform.Wpf,TextureLoader,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\TextureLoader.cs,CreateBitmapFromTexture,The following statement contains a magic number: for (int i = 0; i < colors.Length; i++) {  	pixelData [(i * 4) + 0] = (byte)(colors [i].B * 255.0f);  	pixelData [(i * 4) + 1] = (byte)(colors [i].G * 255.0f);  	pixelData [(i * 4) + 2] = (byte)(colors [i].R * 255.0f);  	pixelData [(i * 4) + 3] = (byte)(colors [i].A * 255.0f);  }  
Magic Number,Rasterizr.Platform.Wpf,TextureLoader,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\TextureLoader.cs,CreateBitmapFromTexture,The following statement contains a magic number: for (int i = 0; i < colors.Length; i++) {  	pixelData [(i * 4) + 0] = (byte)(colors [i].B * 255.0f);  	pixelData [(i * 4) + 1] = (byte)(colors [i].G * 255.0f);  	pixelData [(i * 4) + 2] = (byte)(colors [i].R * 255.0f);  	pixelData [(i * 4) + 3] = (byte)(colors [i].A * 255.0f);  }  
Magic Number,Rasterizr.Platform.Wpf,TextureLoader,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\TextureLoader.cs,CreateBitmapFromTexture,The following statement contains a magic number: for (int i = 0; i < colors.Length; i++) {  	pixelData [(i * 4) + 0] = (byte)(colors [i].B * 255.0f);  	pixelData [(i * 4) + 1] = (byte)(colors [i].G * 255.0f);  	pixelData [(i * 4) + 2] = (byte)(colors [i].R * 255.0f);  	pixelData [(i * 4) + 3] = (byte)(colors [i].A * 255.0f);  }  
Magic Number,Rasterizr.Platform.Wpf,TextureLoader,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\TextureLoader.cs,CreateBitmapFromTexture,The following statement contains a magic number: pixelData [(i * 4) + 0] = (byte)(colors [i].B * 255.0f);  
Magic Number,Rasterizr.Platform.Wpf,TextureLoader,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\TextureLoader.cs,CreateBitmapFromTexture,The following statement contains a magic number: pixelData [(i * 4) + 1] = (byte)(colors [i].G * 255.0f);  
Magic Number,Rasterizr.Platform.Wpf,TextureLoader,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\TextureLoader.cs,CreateBitmapFromTexture,The following statement contains a magic number: pixelData [(i * 4) + 2] = (byte)(colors [i].R * 255.0f);  
Magic Number,Rasterizr.Platform.Wpf,TextureLoader,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\TextureLoader.cs,CreateBitmapFromTexture,The following statement contains a magic number: pixelData [(i * 4) + 2] = (byte)(colors [i].R * 255.0f);  
Magic Number,Rasterizr.Platform.Wpf,TextureLoader,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\TextureLoader.cs,CreateBitmapFromTexture,The following statement contains a magic number: pixelData [(i * 4) + 3] = (byte)(colors [i].A * 255.0f);  
Magic Number,Rasterizr.Platform.Wpf,TextureLoader,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\TextureLoader.cs,CreateBitmapFromTexture,The following statement contains a magic number: pixelData [(i * 4) + 3] = (byte)(colors [i].A * 255.0f);  
Magic Number,Rasterizr.Platform.Wpf,WpfSwapChainPresenter,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\WpfSwapChainPresenter.cs,Initialize,The following statement contains a magic number: _outputBytes = new byte[width * height * 4];  
Magic Number,Rasterizr.Platform.Wpf,WpfSwapChainPresenter,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\WpfSwapChainPresenter.cs,Present,The following statement contains a magic number: for (var i = 0; i < colors.Length; i++) {  	_outputBytes [(i * 4) + 0] = (byte)(colors [i].B * 255.0f);  	_outputBytes [(i * 4) + 1] = (byte)(colors [i].G * 255.0f);  	_outputBytes [(i * 4) + 2] = (byte)(colors [i].R * 255.0f);  	_outputBytes [(i * 4) + 3] = (byte)(colors [i].A * 255.0f);  }  
Magic Number,Rasterizr.Platform.Wpf,WpfSwapChainPresenter,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\WpfSwapChainPresenter.cs,Present,The following statement contains a magic number: for (var i = 0; i < colors.Length; i++) {  	_outputBytes [(i * 4) + 0] = (byte)(colors [i].B * 255.0f);  	_outputBytes [(i * 4) + 1] = (byte)(colors [i].G * 255.0f);  	_outputBytes [(i * 4) + 2] = (byte)(colors [i].R * 255.0f);  	_outputBytes [(i * 4) + 3] = (byte)(colors [i].A * 255.0f);  }  
Magic Number,Rasterizr.Platform.Wpf,WpfSwapChainPresenter,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\WpfSwapChainPresenter.cs,Present,The following statement contains a magic number: for (var i = 0; i < colors.Length; i++) {  	_outputBytes [(i * 4) + 0] = (byte)(colors [i].B * 255.0f);  	_outputBytes [(i * 4) + 1] = (byte)(colors [i].G * 255.0f);  	_outputBytes [(i * 4) + 2] = (byte)(colors [i].R * 255.0f);  	_outputBytes [(i * 4) + 3] = (byte)(colors [i].A * 255.0f);  }  
Magic Number,Rasterizr.Platform.Wpf,WpfSwapChainPresenter,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\WpfSwapChainPresenter.cs,Present,The following statement contains a magic number: for (var i = 0; i < colors.Length; i++) {  	_outputBytes [(i * 4) + 0] = (byte)(colors [i].B * 255.0f);  	_outputBytes [(i * 4) + 1] = (byte)(colors [i].G * 255.0f);  	_outputBytes [(i * 4) + 2] = (byte)(colors [i].R * 255.0f);  	_outputBytes [(i * 4) + 3] = (byte)(colors [i].A * 255.0f);  }  
Magic Number,Rasterizr.Platform.Wpf,WpfSwapChainPresenter,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\WpfSwapChainPresenter.cs,Present,The following statement contains a magic number: for (var i = 0; i < colors.Length; i++) {  	_outputBytes [(i * 4) + 0] = (byte)(colors [i].B * 255.0f);  	_outputBytes [(i * 4) + 1] = (byte)(colors [i].G * 255.0f);  	_outputBytes [(i * 4) + 2] = (byte)(colors [i].R * 255.0f);  	_outputBytes [(i * 4) + 3] = (byte)(colors [i].A * 255.0f);  }  
Magic Number,Rasterizr.Platform.Wpf,WpfSwapChainPresenter,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\WpfSwapChainPresenter.cs,Present,The following statement contains a magic number: for (var i = 0; i < colors.Length; i++) {  	_outputBytes [(i * 4) + 0] = (byte)(colors [i].B * 255.0f);  	_outputBytes [(i * 4) + 1] = (byte)(colors [i].G * 255.0f);  	_outputBytes [(i * 4) + 2] = (byte)(colors [i].R * 255.0f);  	_outputBytes [(i * 4) + 3] = (byte)(colors [i].A * 255.0f);  }  
Magic Number,Rasterizr.Platform.Wpf,WpfSwapChainPresenter,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\WpfSwapChainPresenter.cs,Present,The following statement contains a magic number: _outputBytes [(i * 4) + 0] = (byte)(colors [i].B * 255.0f);  
Magic Number,Rasterizr.Platform.Wpf,WpfSwapChainPresenter,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\WpfSwapChainPresenter.cs,Present,The following statement contains a magic number: _outputBytes [(i * 4) + 1] = (byte)(colors [i].G * 255.0f);  
Magic Number,Rasterizr.Platform.Wpf,WpfSwapChainPresenter,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\WpfSwapChainPresenter.cs,Present,The following statement contains a magic number: _outputBytes [(i * 4) + 2] = (byte)(colors [i].R * 255.0f);  
Magic Number,Rasterizr.Platform.Wpf,WpfSwapChainPresenter,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\WpfSwapChainPresenter.cs,Present,The following statement contains a magic number: _outputBytes [(i * 4) + 2] = (byte)(colors [i].R * 255.0f);  
Magic Number,Rasterizr.Platform.Wpf,WpfSwapChainPresenter,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\WpfSwapChainPresenter.cs,Present,The following statement contains a magic number: _outputBytes [(i * 4) + 3] = (byte)(colors [i].A * 255.0f);  
Magic Number,Rasterizr.Platform.Wpf,WpfSwapChainPresenter,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\WpfSwapChainPresenter.cs,Present,The following statement contains a magic number: _outputBytes [(i * 4) + 3] = (byte)(colors [i].A * 255.0f);  
Magic Number,Rasterizr.Platform.Wpf,WpfSwapChainPresenter,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\WpfSwapChainPresenter.cs,Present,The following statement contains a magic number: _bitmap.Dispatcher.Invoke ((Action)(() => {  	_bitmap.Lock ();  	_bitmap.WritePixels (new Int32Rect (0' 0' _bitmap.PixelWidth' _bitmap.PixelHeight)' _outputBytes' _width * _bitmap.Format.BitsPerPixel / 8' 0);  	_bitmap.Unlock ();  }));  
Magic Number,Rasterizr.Platform.Wpf,WpfSwapChainPresenter,D:\newReposJune17\tgjones_rasterizr\src\Rasterizr.Platform.Wpf\WpfSwapChainPresenter.cs,Present,The following statement contains a magic number: _bitmap.WritePixels (new Int32Rect (0' 0' _bitmap.PixelWidth' _bitmap.PixelHeight)' _outputBytes' _width * _bitmap.Format.BitsPerPixel / 8' 0);  
