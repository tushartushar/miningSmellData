Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Weavers,ModuleWeaver,D:\newReposJune17\tgjones_rasterizr\src\Weavers\ModuleWeaver.cs,Execute,Cyclomatic complexity of the method is 13
Complex Method,Weavers,ModuleWeaver,D:\newReposJune17\tgjones_rasterizr\src\Weavers\ModuleWeaver.cs,PatchMethod,Cyclomatic complexity of the method is 10
Long Statement,Weavers,ModuleWeaver,D:\newReposJune17\tgjones_rasterizr\src\Weavers\ModuleWeaver.cs,Execute,The length of the statement  "				((BaseAssemblyResolver)ModuleDefinition.AssemblyResolver).AddSearchDirectory (Path.Combine (ProgramFilesx86 ()' @"Reference Assemblies\Microsoft\Framework\.NETCore\v4.5")); " is 172.
Magic Number,Weavers,ModuleWeaver,D:\newReposJune17\tgjones_rasterizr\src\Weavers\ModuleWeaver.cs,PatchMethod,The following statement contains a magic number: if (method.DeclaringType.Name == "Interop") {  	if (method.Name == "Read") {  		CreateReadRangeMethod (method);  	} else if (method.Name == "Write") {  		if (method.Parameters.Count == 2)  			CreateWriteMethod (method);  		else  			CreateWriteRangeMethod (method);  	}  } else if (method.HasBody) {  	var ilProcessor = method.Body.GetILProcessor ();  	var instructions = method.Body.Instructions;  	for (int i = 0; i < instructions.Count; i++) {  		var instruction = instructions [i];  		if (instruction.OpCode == OpCodes.Call && instruction.Operand is MethodReference) {  			var methodDescription = (MethodReference)instruction.Operand;  			if (methodDescription.DeclaringType.Name == "Interop")  				if (methodDescription.Name.StartsWith ("SizeOf"))  					ReplaceSizeOfStructGeneric (ilProcessor' instruction);  		}  	}  }  
Magic Number,Weavers,ModuleWeaver,D:\newReposJune17\tgjones_rasterizr\src\Weavers\ModuleWeaver.cs,PatchMethod,The following statement contains a magic number: if (method.Name == "Read") {  	CreateReadRangeMethod (method);  } else if (method.Name == "Write") {  	if (method.Parameters.Count == 2)  		CreateWriteMethod (method);  	else  		CreateWriteRangeMethod (method);  }  
Magic Number,Weavers,ModuleWeaver,D:\newReposJune17\tgjones_rasterizr\src\Weavers\ModuleWeaver.cs,PatchMethod,The following statement contains a magic number: if (method.Name == "Write") {  	if (method.Parameters.Count == 2)  		CreateWriteMethod (method);  	else  		CreateWriteRangeMethod (method);  }  
Magic Number,Weavers,ModuleWeaver,D:\newReposJune17\tgjones_rasterizr\src\Weavers\ModuleWeaver.cs,PatchMethod,The following statement contains a magic number: if (method.Parameters.Count == 2)  	CreateWriteMethod (method);  else  	CreateWriteRangeMethod (method);  
Magic Number,Weavers,ModuleWeaver,D:\newReposJune17\tgjones_rasterizr\src\Weavers\ModuleWeaver.cs,ProgramFilesx86,The following statement contains a magic number: if (8 == IntPtr.Size || (!String.IsNullOrEmpty (Environment.GetEnvironmentVariable ("PROCESSOR_ARCHITEW6432")))) {  	return Environment.GetEnvironmentVariable ("ProgramFiles(x86)");  }  
