Implementation smell,Namespace,Class,File,Method,Description
Long Method,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,GetTrigger,The method has 64 lines of code.
Complex Method,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,ViewTriggers,Cyclomatic complexity of the method is 8
Complex Method,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,ViewTrigger,Cyclomatic complexity of the method is 8
Complex Method,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,GetTrigger,Cyclomatic complexity of the method is 15
Complex Method,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,ExecuteCommand,Cyclomatic complexity of the method is 9
Long Parameter List,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,AddCommand,The method has 7 parameters.
Long Parameter List,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,EditCommand,The method has 7 parameters.
Long Parameter List,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,GetTrigger,The method has 6 parameters.
Long Parameter List,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,ExecuteCommand,The method has 4 parameters.
Long Statement,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,HandleChannelMessage,The length of the statement  "			List<Dictionary<string' object>> foundTriggers = GetTrigger (message.Sender' null' message.Channel' message.Sender.Nickname' command); " is 134.
Long Statement,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,HandlePrivateMessage,The length of the statement  "			List<Dictionary<string' object>> foundTriggers = GetTrigger (message.Sender' null' null' message.Sender.Nickname' command); " is 123.
Long Statement,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,HandlePrivateNotice,The length of the statement  "			List<Dictionary<string' object>> foundTriggers = GetTrigger (message.Sender' null' null' message.Sender.Nickname' command); " is 123.
Long Statement,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,HasValidCommandID,The length of the statement  "	List<Dictionary<string' object>> foundTriggers = GetTrigger (command.Nick' "Self"' string.Empty' string.Empty' null' true); " is 123.
Long Statement,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,AddCommand,The length of the statement  "		List<Dictionary<string' object>> currentCommands = GetTrigger (command.Nick' "Self"' string.Empty' string.Empty' null' true); " is 125.
Long Statement,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,AddCommand,The length of the statement  "				string query = "INSERT INTO `customcommands` SET " + "`server_id` = (SELECT `id` FROM `servers` WHERE `name` = {0})' " + "`nick_id` = (SELECT `nicks`.`id` FROM `nicks` INNER JOIN `servers` ON `servers`.`id` = `nicks`.`server_id` WHERE `servers`.`name` = {1} && `nicks`.`nickname` = {2})' " + "`type` = {3}' " + "`permission` = {4}' " + "`channels` = {5}' " + "`nicknames` = {6}' " + "`trigger` = {7}' " + "`response` = {8}' " + "`date_added` = {9}"; " is 449.
Long Statement,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,AddCommand,The length of the statement  "			string errorMessage = string.Format ("You can not have more than \u0002{0}\u0002 custom commands set.  Please delete one before adding another."' maxTriggers); " is 159.
Long Statement,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,DeleteCommand,The length of the statement  "	List<Dictionary<string' object>> foundTriggers = GetTrigger (command.Nick' "Self"' string.Empty' string.Empty' null' true); " is 123.
Long Statement,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,EditCommand,The length of the statement  "	List<Dictionary<string' object>> foundTriggers = GetTrigger (command.Nick' "Self"' string.Empty' string.Empty' null' true); " is 123.
Long Statement,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,EditCommand,The length of the statement  "		string query = "UPDATE `customcommands` SET " + "`type` = {0}' " + "`permission` = {1}' " + "`channels` = {2}' " + "`nicknames` = {3}' " + "`trigger` = {4}' " + "`response` = {5} " + "WHERE `id` = {6}"; " is 202.
Long Statement,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,ViewTriggers,The length of the statement  "	List<Dictionary<string' object>> foundTriggers = GetTrigger (command.Nick' "Self"' string.Empty' string.Empty' null' true); " is 123.
Long Statement,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,ViewTriggers,The length of the statement  "			string response = string.Format ("Command #{0} [{1}{2}] \u0002{3}{4}\u0002: {5}"' index' foundTrigger ["permission"]' allowed' Bot.ServerConfig.CommandPrefix' foundTrigger ["trigger"]' foundTrigger ["response"]); " is 212.
Long Statement,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,ViewTrigger,The length of the statement  "	List<Dictionary<string' object>> foundTriggers = GetTrigger (command.Nick' null' command.Location' command.Nick.Nickname' trigger); " is 131.
Long Statement,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,ViewTrigger,The length of the statement  "			string response = string.Format ("[{0}{1}] \u0002{2}{3}\u0002: {4}"' foundTrigger ["permission"]' allowed' Bot.ServerConfig.CommandPrefix' foundTrigger ["trigger"]' foundTrigger ["response"]); " is 192.
Long Statement,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,GetTrigger,The length of the statement  "	string search = "SELECT * FROM `customcommands`" + " WHERE" + " `server_id` = (SELECT `id` FROM `servers` WHERE `name` = {0})"; " is 127.
Long Statement,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,GetTrigger,The length of the statement  "					arguments.Add (string.Format (@"{0}[[:<:]]{1}[[:>:]]"' string.Join (@"\\"' match.Groups ["Prefix"].ToString ().ToCharArray ())' match.Groups ["Channel"])); " is 155.
Long Statement,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,GetTrigger,The length of the statement  "			search += "`nick_id` = (SELECT `nicks`.`id` FROM `nicks` INNER JOIN `servers` ON `servers`.`id` = `nicks`.`server_id` WHERE `servers`.`name` = {" + argCount++ + "} && `nickname` = {" + argCount++ + "})"; " is 203.
Long Statement,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,GetTrigger,The length of the statement  "			search += "`nick_id` = (SELECT `nicks`.`id` FROM `nicks` INNER JOIN `servers` ON `servers`.`id` = `nicks`.`server_id` WHERE `servers`.`name` = {" + argCount++ + "} && `nickname` = {" + argCount++ + "})"; " is 203.
Long Statement,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,GetTrigger,The length of the statement  "		search += "(`nick_id` = (SELECT `nicks`.`id` FROM `nicks` INNER JOIN `servers` ON `servers`.`id` = `nicks`.`server_id` WHERE `servers`.`name` = {" + argCount++ + "} && `nickname` = {" + argCount++ + "})"; " is 204.
Missing Default,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,ParseCommand,The following switch statement is missing a default case: switch (foundCommand.Name) {  case "Custom Command":  	string action = command.Arguments ["Action"];  	switch (action.ToLower ()) {  	case "add":  		string addType = command.Arguments ["Type"];  		string addPermission = command.Arguments ["Permission"];  		string addChannels = (command.Arguments.ContainsKey ("Channels")) ? command.Arguments ["Channels"] : string.Empty;  		string addNicknames = (command.Arguments.ContainsKey ("Nicknames")) ? command.Arguments ["Nicknames"] : string.Empty;  		string addTrigger = command.Arguments ["Trigger"];  		string addResponse = command.Arguments ["Response"];  		AddCommand (command' addType' addPermission' addChannels' addNicknames' addTrigger' addResponse);  		break;  	case "del":  		DeleteCommand (command);  		break;  	case "edit":  		string editType = command.Arguments ["Type"];  		string editPermission = command.Arguments ["Permission"];  		string editChannels = (command.Arguments.ContainsKey ("Channels")) ? command.Arguments ["Channels"] : string.Empty;  		string editNicknames = (command.Arguments.ContainsKey ("Nicknames")) ? command.Arguments ["Nicknames"] : string.Empty;  		string editTrigger = command.Arguments ["Trigger"];  		string editResponse = command.Arguments ["Response"];  		EditCommand (command' editType' editPermission' editChannels' editNicknames' editTrigger' editResponse);  		break;  	case "view":  		if (command.Arguments.ContainsKey ("Trigger")) {  			ViewTrigger (command' command.Arguments ["Trigger"]);  		} else {  			ViewTriggers (command);  		}  		break;  	}  	break;  }  
Missing Default,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,ParseCommand,The following switch statement is missing a default case: switch (action.ToLower ()) {  case "add":  	string addType = command.Arguments ["Type"];  	string addPermission = command.Arguments ["Permission"];  	string addChannels = (command.Arguments.ContainsKey ("Channels")) ? command.Arguments ["Channels"] : string.Empty;  	string addNicknames = (command.Arguments.ContainsKey ("Nicknames")) ? command.Arguments ["Nicknames"] : string.Empty;  	string addTrigger = command.Arguments ["Trigger"];  	string addResponse = command.Arguments ["Response"];  	AddCommand (command' addType' addPermission' addChannels' addNicknames' addTrigger' addResponse);  	break;  case "del":  	DeleteCommand (command);  	break;  case "edit":  	string editType = command.Arguments ["Type"];  	string editPermission = command.Arguments ["Permission"];  	string editChannels = (command.Arguments.ContainsKey ("Channels")) ? command.Arguments ["Channels"] : string.Empty;  	string editNicknames = (command.Arguments.ContainsKey ("Nicknames")) ? command.Arguments ["Nicknames"] : string.Empty;  	string editTrigger = command.Arguments ["Trigger"];  	string editResponse = command.Arguments ["Response"];  	EditCommand (command' editType' editPermission' editChannels' editNicknames' editTrigger' editResponse);  	break;  case "view":  	if (command.Arguments.ContainsKey ("Trigger")) {  		ViewTrigger (command' command.Arguments ["Trigger"]);  	} else {  		ViewTriggers (command);  	}  	break;  }  
Missing Default,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,ViewTriggers,The following switch statement is missing a default case: switch (foundTrigger ["permission"].ToString ().ToLower ()) {  case "channels":  	allowed = " " + foundTrigger ["channels"];  	break;  case "nicks":  	allowed = " " + foundTrigger ["nicknames"];  	break;  }  
Missing Default,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,ViewTrigger,The following switch statement is missing a default case: switch (foundTrigger ["permission"].ToString ().ToLower ()) {  case "channels":  	allowed = " " + foundTrigger ["channels"];  	break;  case "nicks":  	allowed = " " + foundTrigger ["nicknames"];  	break;  }  
Missing Default,Combot.Modules.Plugins,Custom_Commands,D:\newReposJune17\uncled1023_Combot\Modules\Custom Commands\Custom_Commands.cs,ExecuteCommand,The following switch statement is missing a default case: switch (type.ToLower ()) {  case "response":  	message = "\u200B" + message;  	SendResponse (messageType' location' nick.Nickname' message);  	break;  case "command":  	Bot.ExecuteCommand (Bot.ServerConfig.CommandPrefix + message' location' messageType' nick);  	break;  case "list":  	// todo handle list commands  	break;  }  
