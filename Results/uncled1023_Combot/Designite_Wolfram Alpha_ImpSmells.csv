Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Combot.Modules.Plugins,Wolfram_Alpha,D:\newReposJune17\uncled1023_Combot\Modules\Wolfram Alpha\Wolfram_Alpha.cs,GetResults,The length of the statement  "	string URL = "http://api.wolframalpha.com/v2/query?input=" + HttpUtility.UrlEncode (command.Arguments ["Query"]) + "&appid=" + GetOptionValue ("API") + "&format=plaintext"; " is 172.
Long Statement,Combot.Modules.Plugins,Wolfram_Alpha,D:\newReposJune17\uncled1023_Combot\Modules\Wolfram Alpha\Wolfram_Alpha.cs,GetResults,The length of the statement  "		resultMessage = resultMessage.Replace ("\r\n"' "; ").Replace ("\n"' "; ").Replace ("  |  "' "' ").Replace (" | "' ": ").TrimEnd (tails); " is 136.
Magic Number,Combot.Modules.Plugins,Wolfram_Alpha,D:\newReposJune17\uncled1023_Combot\Modules\Wolfram Alpha\Wolfram_Alpha.cs,GetResults,The following statement contains a magic number: if (xnList != null && xnList.Count > 1) {  	string queryMessage = string.Format ("Result for: {0}"' xnList [0] ["subpod"] ["plaintext"].InnerText);  	string resultMessage = xnList [1] ["subpod"] ["plaintext"].InnerText;  	int maxResults = Convert.ToInt32 (GetOptionValue ("Max Response Length"));  	if (resultMessage.Length > (int)maxResults) {  		resultMessage = string.Format ("{0}..."' resultMessage.Substring (0' (int)maxResults - 3));  	}  	char[] tails =  {  		';''  		' '  	};  	resultMessage = resultMessage.Replace ("\r\n"' "; ").Replace ("\n"' "; ").Replace ("  |  "' "' ").Replace (" | "' ": ").TrimEnd (tails);  	SendResponse (command.MessageType' command.Location' command.Nick.Nickname' queryMessage);  	SendResponse (command.MessageType' command.Location' command.Nick.Nickname' resultMessage);  } else {  	string errorMessage = string.Format ("No results found for \u0002{0}\u000F."' command.Arguments ["Query"]);  	SendResponse (command.MessageType' command.Location' command.Nick.Nickname' errorMessage);  }  
Magic Number,Combot.Modules.Plugins,Wolfram_Alpha,D:\newReposJune17\uncled1023_Combot\Modules\Wolfram Alpha\Wolfram_Alpha.cs,GetResults,The following statement contains a magic number: if (resultMessage.Length > (int)maxResults) {  	resultMessage = string.Format ("{0}..."' resultMessage.Substring (0' (int)maxResults - 3));  }  
Magic Number,Combot.Modules.Plugins,Wolfram_Alpha,D:\newReposJune17\uncled1023_Combot\Modules\Wolfram Alpha\Wolfram_Alpha.cs,GetResults,The following statement contains a magic number: resultMessage = string.Format ("{0}..."' resultMessage.Substring (0' (int)maxResults - 3));  
Missing Default,Combot.Modules.Plugins,Wolfram_Alpha,D:\newReposJune17\uncled1023_Combot\Modules\Wolfram Alpha\Wolfram_Alpha.cs,ParseCommand,The following switch statement is missing a default case: switch (foundCommand.Name) {  case "Wolfram Alpha Search":  	GetResults (command);  	break;  }  
