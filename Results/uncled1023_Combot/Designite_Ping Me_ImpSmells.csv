Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Combot.Modules.Plugins,Ping_Me,C:\repos\uncled1023_Combot\Modules\Ping Me\Ping_Me.cs,HandlePingResponse,Cyclomatic complexity of the method is 9
Long Statement,Combot.Modules.Plugins,Ping_Me,C:\repos\uncled1023_Combot\Modules\Ping Me\Ping_Me.cs,HandlePingResponse,The length of the statement  "                            Bot.IRC.Command.SendPrivateMessage(pingItem.Location' string.Format("{0}' your ping is {1}"' pingItem.Nick' timeString)); " is 121.
Magic Number,Combot.Modules.Plugins,Ping_Me,C:\repos\uncled1023_Combot\Modules\Ping Me\Ping_Me.cs,ParseCommand,The following statement contains a magic number: if (foundCommand.Name == "Ping Me")              {                  int epoch = (int)(DateTime.UtcNow - new DateTime(1970' 1' 1)).TotalSeconds;                  PingItem tmpItem = new PingItem();                  tmpItem.Nick = command.Nick.Nickname;                  tmpItem.Location = command.Location;                  tmpItem.MessageType = command.MessageType;                  tmpItem.Timestamp = DateTime.Now;                  listLock.EnterWriteLock();                  if (pingList.Exists(item => item.Nick == command.Nick.Nickname))                  {                      pingList.RemoveAll(item => item.Nick == command.Nick.Nickname);                  }                  pingList.Add(tmpItem);                  listLock.ExitWriteLock();                  Bot.IRC.Command.SendCTCPMessage(command.Nick.Nickname' "PING"' epoch.ToString());              }
Missing Default,Combot.Modules.Plugins,Ping_Me,C:\repos\uncled1023_Combot\Modules\Ping Me\Ping_Me.cs,HandlePingResponse,The following switch statement is missing a default case: switch (pingItem.MessageType)                      {                          case MessageType.Channel:                              Bot.IRC.Command.SendPrivateMessage(pingItem.Location' string.Format("{0}' your ping is {1}"' pingItem.Nick' timeString));                              break;                          case MessageType.Notice:                              Bot.IRC.Command.SendNotice(pingItem.Nick' string.Format("Your ping is {0}"' timeString));                              break;                          case MessageType.Query:                              Bot.IRC.Command.SendPrivateMessage(pingItem.Nick' string.Format("Your ping is {0}"' timeString));                              break;                      }
