Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Combot.Modules.Plugins,Channel_Rules,C:\repos\uncled1023_Combot\Modules\Channel Rules\Channel_Rules.cs,ParseCommand,The length of the statement  "                            SendResponse(command.MessageType' command.Location' command.Nick.Nickname' string.Format("Rule \u0002#{0}\u0002: {1}"' index' rule["rule"])' true); " is 147.
Long Statement,Combot.Modules.Plugins,Channel_Rules,C:\repos\uncled1023_Combot\Modules\Channel Rules\Channel_Rules.cs,ParseCommand,The length of the statement  "                        SendResponse(command.MessageType' command.Location' command.Nick.Nickname' string.Format("There are no rules for \u0002{0}\u0002"' channel)' true); " is 147.
Long Statement,Combot.Modules.Plugins,Channel_Rules,C:\repos\uncled1023_Combot\Modules\Channel Rules\Channel_Rules.cs,ParseCommand,The length of the statement  "                        string noAccessMessage = string.Format("You do not have access to \u0002{0}\u000F on \u0002{1}\u000F."' command.Command' channel); " is 130.
Long Statement,Combot.Modules.Plugins,Channel_Rules,C:\repos\uncled1023_Combot\Modules\Channel Rules\Channel_Rules.cs,AddRule,The length of the statement  "                            "`channel_id` = (SELECT `channels`.`id` FROM `channels` INNER JOIN `servers` ON `servers`.`id` = `channels`.`server_id` WHERE `servers`.`name` = {1} && `channels`.`name` = {2})' " + " is 181.
Long Statement,Combot.Modules.Plugins,Channel_Rules,C:\repos\uncled1023_Combot\Modules\Channel Rules\Channel_Rules.cs,AddRule,The length of the statement  "            Bot.Database.Execute(query' new object[] { Bot.ServerConfig.Name' Bot.ServerConfig.Name' channel' command.Arguments["Rule"]' command.TimeStamp }); " is 146.
Long Statement,Combot.Modules.Plugins,Channel_Rules,C:\repos\uncled1023_Combot\Modules\Channel Rules\Channel_Rules.cs,AddRule,The length of the statement  "            string ruleMessage = string.Format("Rule Added. \u0002{0}\u0002 now has \u0002{1}\u0002 rules."' channel' results.Count + 1); " is 125.
Long Statement,Combot.Modules.Plugins,Channel_Rules,C:\repos\uncled1023_Combot\Modules\Channel Rules\Channel_Rules.cs,EditRule,The length of the statement  "                    string ruleMessage = string.Format("Rule \u0002#{0}\u0002 for \u0002{1}\u0002 is now: {2}"' num' channel' command.Arguments["Rule"]); " is 133.
Missing Default,Combot.Modules.Plugins,Channel_Rules,C:\repos\uncled1023_Combot\Modules\Channel Rules\Channel_Rules.cs,ParseCommand,The following switch statement is missing a default case: switch (foundCommand.Name)              {                  case "Rules Display":                      List<Dictionary<string' object>> foundRules = GetRuleList(channel);                      if (foundRules.Any())                      {                          int index = 1;                          foundRules.ForEach(rule =>                          {                              SendResponse(command.MessageType' command.Location' command.Nick.Nickname' string.Format("Rule \u0002#{0}\u0002: {1}"' index' rule["rule"])' true);                              index++;                          });                      }                      else                      {                          SendResponse(command.MessageType' command.Location' command.Nick.Nickname' string.Format("There are no rules for \u0002{0}\u0002"' channel)' true);                      }                      break;                  case "Rules Modification":                      if (Bot.CheckChannelAccess(channel' command.Nick.Nickname' command.Access))                      {                          string action = command.Arguments["Action"].ToString();                          switch (action.ToLower())                          {                              case "add":                                  AddRule(command);                                  break;                              case "edit":                                  EditRule(command);                                  break;                              case "del":                                  DeleteRule(command);                                  break;                          }                      }                      else                      {                          string noAccessMessage = string.Format("You do not have access to \u0002{0}\u000F on \u0002{1}\u000F."' command.Command' channel);                          SendResponse(command.MessageType' command.Location' command.Nick.Nickname' noAccessMessage' true);                      }                      break;              }
Missing Default,Combot.Modules.Plugins,Channel_Rules,C:\repos\uncled1023_Combot\Modules\Channel Rules\Channel_Rules.cs,ParseCommand,The following switch statement is missing a default case: switch (action.ToLower())                          {                              case "add":                                  AddRule(command);                                  break;                              case "edit":                                  EditRule(command);                                  break;                              case "del":                                  DeleteRule(command);                                  break;                          }
