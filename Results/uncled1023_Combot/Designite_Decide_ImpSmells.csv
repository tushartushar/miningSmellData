Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Combot.Modules.Plugins,Decide,D:\newReposJune17\uncled1023_Combot\Modules\Decide\Decide.cs,ParseCommand,The length of the statement  "			SendResponse (command.MessageType' command.Location' command.Nick.Nickname' string.Format ("{0} {1}"' prefixes [prefixIndex]' optionList [choiceIndex])); " is 153.
Long Statement,Combot.Modules.Plugins,Decide,D:\newReposJune17\uncled1023_Combot\Modules\Decide\Decide.cs,ParseCommand,The length of the statement  "			SendResponse (command.MessageType' command.Location' command.Nick.Nickname' string.Format ("{0}"' answers [answerIndex])); " is 122.
Missing Default,Combot.Modules.Plugins,Decide,D:\newReposJune17\uncled1023_Combot\Modules\Decide\Decide.cs,ParseCommand,The following switch statement is missing a default case: switch (foundCommand.Name) {  case "Decide":  	string options = command.Arguments ["Options"].ToString ();  	List<string> optionList = options.Split (new[] {  		" or "  	}' StringSplitOptions.RemoveEmptyEntries).ToList ();  	if (optionList.Count > 1) {  		Random rand = new Random ();  		int choiceIndex = rand.Next (0' optionList.Count);  		JArray prefixes = (JArray)GetOptionValue ("Choice Prefixes");  		int prefixIndex = rand.Next (0' prefixes.Count);  		SendResponse (command.MessageType' command.Location' command.Nick.Nickname' string.Format ("{0} {1}"' prefixes [prefixIndex]' optionList [choiceIndex]));  	} else {  		Random rand = new Random ();  		JArray answers = (JArray)GetOptionValue ("Choice Answers");  		int answerIndex = rand.Next (0' answers.Count);  		SendResponse (command.MessageType' command.Location' command.Nick.Nickname' string.Format ("{0}"' answers [answerIndex]));  	}  	break;  }  
