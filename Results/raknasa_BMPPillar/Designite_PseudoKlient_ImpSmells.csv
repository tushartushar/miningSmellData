Implementation smell,Namespace,Class,File,Method,Description
Long Method,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The method has 196 lines of code.
Complex Method,PseudoKlient,HttpServer,C:\repos\raknasa_BMPPillar\PseudoKlient\HttpServer.cs,HttpStart,Cyclomatic complexity of the method is 15
Complex Method,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,Cyclomatic complexity of the method is 76
Long Parameter List,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,MakeGetAuditTrailsRequest,The method has 5 parameters.
Long Parameter List,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,MakeIdentifyPillarsForReplaceFileRequest,The method has 5 parameters.
Long Parameter List,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,MakeIdentifyPillarsForPutFileRequest,The method has 5 parameters.
Long Parameter List,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,MakeIdentifyPillarsForGetFileRequest,The method has 5 parameters.
Long Parameter List,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,MakeIdentifyPillarsForDeleteFileRequest,The method has 5 parameters.
Long Parameter List,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,MakeGetFileIDsRequest,The method has 5 parameters.
Long Parameter List,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,MakeDeleteFileRequest,The method has 5 parameters.
Long Parameter List,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,MakeGetFileRequest,The method has 5 parameters.
Long Parameter List,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,MakePutFileRequest,The method has 5 parameters.
Long Parameter List,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,MakeReplaceFileRequest,The method has 5 parameters.
Long Statement,PseudoKlient,HttpServer,C:\repos\raknasa_BMPPillar\PseudoKlient\HttpServer.cs,HttpStart,The length of the statement  "		Console.WriteLine ("Der er allerede en proces der lytter til denne port.\n" + httpEx + "\nTryk p� en tast for at forts�tte."); " is 126.
Long Statement,PseudoKlient,HttpServer,C:\repos\raknasa_BMPPillar\PseudoKlient\HttpServer.cs,HttpStart,The length of the statement  "		// blokerer mens den venter' det sutter jo helt vildt!!! BeginGetContext er asynkron og skal bruges i stedet. http://msdn.microsoft.com/en-us/library/system.net.httplistener.begingetcontext.aspx " is 194.
Long Statement,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The length of the statement  "	var pillarApiSettings = (PillarApiSettings)SerializationUtilities.DeserializeObject (File.ReadAllText (Path2Settings)' typeof(PillarApiSettings)); " is 146.
Long Statement,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The length of the statement  "	//            IConnectionFactory connectionFactory = new ConnectionFactory(BROKER + "?transport.clientcertfilename=C:/Downloads/Apache/apache-activemq-5.5.1/conf/broker2.cer"' CLIENT_ID); " is 187.
Long Statement,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The length of the statement  "	IConnectionFactory connectionFactory = new ConnectionFactory (pillarApiSettings.MESSAGE_BUS_CONFIGURATION_URL' CLIENT_ID); " is 122.
Long Statement,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The length of the statement  "					topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE)); " is 163.
Long Statement,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The length of the statement  "					saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID)); " is 136.
Long Statement,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The length of the statement  "					topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE)); " is 163.
Long Statement,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The length of the statement  "					saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID)); " is 136.
Long Statement,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The length of the statement  "					topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE)); " is 166.
Long Statement,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The length of the statement  "					saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID)); " is 139.
Long Statement,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The length of the statement  "					topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION)); " is 131.
Long Statement,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The length of the statement  "					topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION)); " is 139.
Long Statement,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The length of the statement  "					saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID)); " is 139.
Long Statement,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The length of the statement  "					saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID)); " is 147.
Long Statement,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The length of the statement  "					topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION)); " is 133.
Long Statement,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The length of the statement  "					topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION)); " is 141.
Long Statement,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The length of the statement  "					topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE)); " is 167.
Long Statement,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The length of the statement  "					saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID)); " is 140.
Long Statement,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The length of the statement  "					topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE)); " is 169.
Long Statement,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The length of the statement  "					saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE)); " is 149.
Long Statement,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The length of the statement  "					saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE)); " is 138.
Long Statement,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,MakeITMessage,The length of the statement  "	itMessage.Properties ["org.bitrepository.messages.type"] = messageObject.GetType ().Name.ToString (CultureInfo.InvariantCulture); " is 129.
Magic Number,PseudoKlient,HttpServer,C:\repos\raknasa_BMPPillar\PseudoKlient\HttpServer.cs,HttpStart,The following statement contains a magic number: do {  	Console.WriteLine ("er i while");  	HttpListenerContext context = listener.GetContext ();  	// blokerer mens den venter' det sutter jo helt vildt!!! BeginGetContext er asynkron og skal bruges i stedet. http://msdn.microsoft.com/en-us/library/system.net.httplistener.begingetcontext.aspx  	HttpListenerRequest request = context.Request;  	HttpListenerResponse response = context.Response;  	response.SendChunked = true;  	string requestType = context.Request.HttpMethod.ToString (CultureInfo.InvariantCulture);  	Console.WriteLine ("requestType: " + requestType);  	bool breakWhile = false;  	switch (requestType) {  	case "POST":  		try {  			Console.WriteLine ("Er i case : POST");  			response.StatusCode = 200;  			var writer = new StreamWriter (response.OutputStream);  			Stream output = File.OpenWrite (@"C:\" + request.QueryString ["FileName"]);  			Stream input = request.InputStream;  			{  				input.CopyTo (output);  			}  			writer.WriteLine ("HTTP/1.1 200 OK");  			writer.Close ();  			output.Close ();  			input.Close ();  			response.Close ();  			breakWhile = true;  			break;  		}  		catch (Exception e) {  			Console.WriteLine ("exception: " + e);  			breakWhile = true;  			break;  		}  	case "GET":  		try {  			Console.WriteLine ("Er i case: GET");  			//response.ContentLength64 = File.ReadAllBytes(@"D:\testFiler\" + FileName).Length;  			response.ContentLength64 = File.ReadAllBytes (@"c:\testFiler\" + fileName).Length;  			Console.WriteLine ("1");  			//FileStream filestream = new FileStream(@"D:\testFiler\" + FileName' FileMode.Open);  			var filestream = new FileStream (@"C:\testFiler\" + fileName' FileMode.Open);  			Console.WriteLine ("2");  			filestream.CopyTo (response.OutputStream);  			filestream.Dispose ();  			Console.WriteLine ("3");  			Console.WriteLine ("Er p� vej ud af case: GET");  			//listener.Stop();  			breakWhile = true;  			break;  		}  		catch (Exception e) {  			Console.WriteLine ("exception: " + e);  			breakWhile = true;  			break;  		}  	default:  		Console.WriteLine ("Er i default)");  		breakWhile = true;  		break;  	}  	dateBreak = DateTime.Compare (DateTime.Now' timeout);  	if (breakWhile)  		break;  }  while (dateBreak <= 0);  
Magic Number,PseudoKlient,HttpServer,C:\repos\raknasa_BMPPillar\PseudoKlient\HttpServer.cs,HttpStart,The following statement contains a magic number: switch (requestType) {  case "POST":  	try {  		Console.WriteLine ("Er i case : POST");  		response.StatusCode = 200;  		var writer = new StreamWriter (response.OutputStream);  		Stream output = File.OpenWrite (@"C:\" + request.QueryString ["FileName"]);  		Stream input = request.InputStream;  		{  			input.CopyTo (output);  		}  		writer.WriteLine ("HTTP/1.1 200 OK");  		writer.Close ();  		output.Close ();  		input.Close ();  		response.Close ();  		breakWhile = true;  		break;  	}  	catch (Exception e) {  		Console.WriteLine ("exception: " + e);  		breakWhile = true;  		break;  	}  case "GET":  	try {  		Console.WriteLine ("Er i case: GET");  		//response.ContentLength64 = File.ReadAllBytes(@"D:\testFiler\" + FileName).Length;  		response.ContentLength64 = File.ReadAllBytes (@"c:\testFiler\" + fileName).Length;  		Console.WriteLine ("1");  		//FileStream filestream = new FileStream(@"D:\testFiler\" + FileName' FileMode.Open);  		var filestream = new FileStream (@"C:\testFiler\" + fileName' FileMode.Open);  		Console.WriteLine ("2");  		filestream.CopyTo (response.OutputStream);  		filestream.Dispose ();  		Console.WriteLine ("3");  		Console.WriteLine ("Er p� vej ud af case: GET");  		//listener.Stop();  		breakWhile = true;  		break;  	}  	catch (Exception e) {  		Console.WriteLine ("exception: " + e);  		breakWhile = true;  		break;  	}  default:  	Console.WriteLine ("Er i default)");  	breakWhile = true;  	break;  }  
Magic Number,PseudoKlient,HttpServer,C:\repos\raknasa_BMPPillar\PseudoKlient\HttpServer.cs,HttpStart,The following statement contains a magic number: try {  	Console.WriteLine ("Er i case : POST");  	response.StatusCode = 200;  	var writer = new StreamWriter (response.OutputStream);  	Stream output = File.OpenWrite (@"C:\" + request.QueryString ["FileName"]);  	Stream input = request.InputStream;  	{  		input.CopyTo (output);  	}  	writer.WriteLine ("HTTP/1.1 200 OK");  	writer.Close ();  	output.Close ();  	input.Close ();  	response.Close ();  	breakWhile = true;  	break;  }  catch (Exception e) {  	Console.WriteLine ("exception: " + e);  	breakWhile = true;  	break;  }  
Magic Number,PseudoKlient,HttpServer,C:\repos\raknasa_BMPPillar\PseudoKlient\HttpServer.cs,HttpStart,The following statement contains a magic number: response.StatusCode = 200;  
Magic Number,PseudoKlient,HttpServer,C:\repos\raknasa_BMPPillar\PseudoKlient\HttpServer.cs,HttpStart,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: try {  	ConsoleKeyInfo esckey;  	int flNum = -1;  	do {  		do {  			// User/collection is choosen  			Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  			usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			string colId = usrLst [flNum - 1];  			Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  			flNum = -1;  			// File i choosen  			Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  			int fileCount = 1;  			foreach (string name in files) {  				var fInfo = new FileInfo (name);  				Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  				fileCount++;  			}  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			var fInfo2 = new FileInfo (files [flNum - 1]);  			string file = fInfo2.Name;  			Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  			flNum = -1;  			// Messagetype is choosen  			Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  			flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > flLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  					flNum = -1;  				}  			}  			while (flNum < 0);  			Console.WriteLine ("Du vil sende: " + flNum + "\n");  			switch (flNum) {  			case 1:  				topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 2:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 3:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 4:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 5:  				topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 6:  				saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 7:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 8:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 9:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 10:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 11:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 12:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 13:  				saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 14:  				saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 15:  				topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 16:  				saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 17:  				topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 18:  				saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 19:  				saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			default:  				Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  				break;  			}  			Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  			esckey = Console.ReadKey ();  			Console.WriteLine ("\n");  		}  		while (esckey.Key != ConsoleKey.Escape);  	}  	while (esckey.Key != ConsoleKey.Escape);  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: try {  	ConsoleKeyInfo esckey;  	int flNum = -1;  	do {  		do {  			// User/collection is choosen  			Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  			usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			string colId = usrLst [flNum - 1];  			Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  			flNum = -1;  			// File i choosen  			Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  			int fileCount = 1;  			foreach (string name in files) {  				var fInfo = new FileInfo (name);  				Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  				fileCount++;  			}  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			var fInfo2 = new FileInfo (files [flNum - 1]);  			string file = fInfo2.Name;  			Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  			flNum = -1;  			// Messagetype is choosen  			Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  			flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > flLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  					flNum = -1;  				}  			}  			while (flNum < 0);  			Console.WriteLine ("Du vil sende: " + flNum + "\n");  			switch (flNum) {  			case 1:  				topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 2:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 3:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 4:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 5:  				topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 6:  				saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 7:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 8:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 9:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 10:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 11:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 12:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 13:  				saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 14:  				saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 15:  				topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 16:  				saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 17:  				topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 18:  				saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 19:  				saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			default:  				Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  				break;  			}  			Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  			esckey = Console.ReadKey ();  			Console.WriteLine ("\n");  		}  		while (esckey.Key != ConsoleKey.Escape);  	}  	while (esckey.Key != ConsoleKey.Escape);  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: try {  	ConsoleKeyInfo esckey;  	int flNum = -1;  	do {  		do {  			// User/collection is choosen  			Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  			usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			string colId = usrLst [flNum - 1];  			Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  			flNum = -1;  			// File i choosen  			Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  			int fileCount = 1;  			foreach (string name in files) {  				var fInfo = new FileInfo (name);  				Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  				fileCount++;  			}  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			var fInfo2 = new FileInfo (files [flNum - 1]);  			string file = fInfo2.Name;  			Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  			flNum = -1;  			// Messagetype is choosen  			Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  			flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > flLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  					flNum = -1;  				}  			}  			while (flNum < 0);  			Console.WriteLine ("Du vil sende: " + flNum + "\n");  			switch (flNum) {  			case 1:  				topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 2:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 3:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 4:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 5:  				topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 6:  				saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 7:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 8:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 9:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 10:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 11:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 12:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 13:  				saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 14:  				saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 15:  				topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 16:  				saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 17:  				topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 18:  				saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 19:  				saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			default:  				Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  				break;  			}  			Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  			esckey = Console.ReadKey ();  			Console.WriteLine ("\n");  		}  		while (esckey.Key != ConsoleKey.Escape);  	}  	while (esckey.Key != ConsoleKey.Escape);  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: try {  	ConsoleKeyInfo esckey;  	int flNum = -1;  	do {  		do {  			// User/collection is choosen  			Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  			usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			string colId = usrLst [flNum - 1];  			Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  			flNum = -1;  			// File i choosen  			Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  			int fileCount = 1;  			foreach (string name in files) {  				var fInfo = new FileInfo (name);  				Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  				fileCount++;  			}  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			var fInfo2 = new FileInfo (files [flNum - 1]);  			string file = fInfo2.Name;  			Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  			flNum = -1;  			// Messagetype is choosen  			Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  			flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > flLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  					flNum = -1;  				}  			}  			while (flNum < 0);  			Console.WriteLine ("Du vil sende: " + flNum + "\n");  			switch (flNum) {  			case 1:  				topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 2:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 3:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 4:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 5:  				topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 6:  				saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 7:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 8:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 9:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 10:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 11:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 12:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 13:  				saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 14:  				saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 15:  				topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 16:  				saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 17:  				topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 18:  				saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 19:  				saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			default:  				Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  				break;  			}  			Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  			esckey = Console.ReadKey ();  			Console.WriteLine ("\n");  		}  		while (esckey.Key != ConsoleKey.Escape);  	}  	while (esckey.Key != ConsoleKey.Escape);  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: try {  	ConsoleKeyInfo esckey;  	int flNum = -1;  	do {  		do {  			// User/collection is choosen  			Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  			usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			string colId = usrLst [flNum - 1];  			Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  			flNum = -1;  			// File i choosen  			Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  			int fileCount = 1;  			foreach (string name in files) {  				var fInfo = new FileInfo (name);  				Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  				fileCount++;  			}  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			var fInfo2 = new FileInfo (files [flNum - 1]);  			string file = fInfo2.Name;  			Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  			flNum = -1;  			// Messagetype is choosen  			Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  			flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > flLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  					flNum = -1;  				}  			}  			while (flNum < 0);  			Console.WriteLine ("Du vil sende: " + flNum + "\n");  			switch (flNum) {  			case 1:  				topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 2:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 3:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 4:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 5:  				topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 6:  				saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 7:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 8:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 9:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 10:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 11:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 12:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 13:  				saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 14:  				saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 15:  				topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 16:  				saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 17:  				topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 18:  				saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 19:  				saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			default:  				Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  				break;  			}  			Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  			esckey = Console.ReadKey ();  			Console.WriteLine ("\n");  		}  		while (esckey.Key != ConsoleKey.Escape);  	}  	while (esckey.Key != ConsoleKey.Escape);  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: try {  	ConsoleKeyInfo esckey;  	int flNum = -1;  	do {  		do {  			// User/collection is choosen  			Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  			usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			string colId = usrLst [flNum - 1];  			Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  			flNum = -1;  			// File i choosen  			Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  			int fileCount = 1;  			foreach (string name in files) {  				var fInfo = new FileInfo (name);  				Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  				fileCount++;  			}  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			var fInfo2 = new FileInfo (files [flNum - 1]);  			string file = fInfo2.Name;  			Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  			flNum = -1;  			// Messagetype is choosen  			Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  			flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > flLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  					flNum = -1;  				}  			}  			while (flNum < 0);  			Console.WriteLine ("Du vil sende: " + flNum + "\n");  			switch (flNum) {  			case 1:  				topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 2:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 3:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 4:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 5:  				topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 6:  				saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 7:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 8:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 9:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 10:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 11:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 12:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 13:  				saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 14:  				saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 15:  				topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 16:  				saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 17:  				topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 18:  				saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 19:  				saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			default:  				Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  				break;  			}  			Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  			esckey = Console.ReadKey ();  			Console.WriteLine ("\n");  		}  		while (esckey.Key != ConsoleKey.Escape);  	}  	while (esckey.Key != ConsoleKey.Escape);  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: try {  	ConsoleKeyInfo esckey;  	int flNum = -1;  	do {  		do {  			// User/collection is choosen  			Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  			usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			string colId = usrLst [flNum - 1];  			Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  			flNum = -1;  			// File i choosen  			Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  			int fileCount = 1;  			foreach (string name in files) {  				var fInfo = new FileInfo (name);  				Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  				fileCount++;  			}  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			var fInfo2 = new FileInfo (files [flNum - 1]);  			string file = fInfo2.Name;  			Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  			flNum = -1;  			// Messagetype is choosen  			Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  			flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > flLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  					flNum = -1;  				}  			}  			while (flNum < 0);  			Console.WriteLine ("Du vil sende: " + flNum + "\n");  			switch (flNum) {  			case 1:  				topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 2:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 3:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 4:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 5:  				topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 6:  				saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 7:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 8:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 9:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 10:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 11:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 12:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 13:  				saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 14:  				saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 15:  				topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 16:  				saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 17:  				topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 18:  				saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 19:  				saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			default:  				Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  				break;  			}  			Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  			esckey = Console.ReadKey ();  			Console.WriteLine ("\n");  		}  		while (esckey.Key != ConsoleKey.Escape);  	}  	while (esckey.Key != ConsoleKey.Escape);  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: try {  	ConsoleKeyInfo esckey;  	int flNum = -1;  	do {  		do {  			// User/collection is choosen  			Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  			usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			string colId = usrLst [flNum - 1];  			Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  			flNum = -1;  			// File i choosen  			Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  			int fileCount = 1;  			foreach (string name in files) {  				var fInfo = new FileInfo (name);  				Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  				fileCount++;  			}  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			var fInfo2 = new FileInfo (files [flNum - 1]);  			string file = fInfo2.Name;  			Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  			flNum = -1;  			// Messagetype is choosen  			Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  			flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > flLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  					flNum = -1;  				}  			}  			while (flNum < 0);  			Console.WriteLine ("Du vil sende: " + flNum + "\n");  			switch (flNum) {  			case 1:  				topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 2:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 3:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 4:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 5:  				topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 6:  				saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 7:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 8:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 9:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 10:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 11:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 12:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 13:  				saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 14:  				saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 15:  				topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 16:  				saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 17:  				topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 18:  				saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 19:  				saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			default:  				Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  				break;  			}  			Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  			esckey = Console.ReadKey ();  			Console.WriteLine ("\n");  		}  		while (esckey.Key != ConsoleKey.Escape);  	}  	while (esckey.Key != ConsoleKey.Escape);  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: try {  	ConsoleKeyInfo esckey;  	int flNum = -1;  	do {  		do {  			// User/collection is choosen  			Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  			usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			string colId = usrLst [flNum - 1];  			Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  			flNum = -1;  			// File i choosen  			Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  			int fileCount = 1;  			foreach (string name in files) {  				var fInfo = new FileInfo (name);  				Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  				fileCount++;  			}  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			var fInfo2 = new FileInfo (files [flNum - 1]);  			string file = fInfo2.Name;  			Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  			flNum = -1;  			// Messagetype is choosen  			Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  			flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > flLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  					flNum = -1;  				}  			}  			while (flNum < 0);  			Console.WriteLine ("Du vil sende: " + flNum + "\n");  			switch (flNum) {  			case 1:  				topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 2:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 3:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 4:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 5:  				topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 6:  				saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 7:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 8:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 9:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 10:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 11:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 12:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 13:  				saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 14:  				saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 15:  				topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 16:  				saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 17:  				topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 18:  				saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 19:  				saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			default:  				Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  				break;  			}  			Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  			esckey = Console.ReadKey ();  			Console.WriteLine ("\n");  		}  		while (esckey.Key != ConsoleKey.Escape);  	}  	while (esckey.Key != ConsoleKey.Escape);  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: try {  	ConsoleKeyInfo esckey;  	int flNum = -1;  	do {  		do {  			// User/collection is choosen  			Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  			usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			string colId = usrLst [flNum - 1];  			Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  			flNum = -1;  			// File i choosen  			Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  			int fileCount = 1;  			foreach (string name in files) {  				var fInfo = new FileInfo (name);  				Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  				fileCount++;  			}  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			var fInfo2 = new FileInfo (files [flNum - 1]);  			string file = fInfo2.Name;  			Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  			flNum = -1;  			// Messagetype is choosen  			Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  			flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > flLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  					flNum = -1;  				}  			}  			while (flNum < 0);  			Console.WriteLine ("Du vil sende: " + flNum + "\n");  			switch (flNum) {  			case 1:  				topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 2:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 3:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 4:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 5:  				topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 6:  				saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 7:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 8:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 9:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 10:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 11:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 12:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 13:  				saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 14:  				saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 15:  				topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 16:  				saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 17:  				topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 18:  				saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 19:  				saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			default:  				Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  				break;  			}  			Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  			esckey = Console.ReadKey ();  			Console.WriteLine ("\n");  		}  		while (esckey.Key != ConsoleKey.Escape);  	}  	while (esckey.Key != ConsoleKey.Escape);  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: try {  	ConsoleKeyInfo esckey;  	int flNum = -1;  	do {  		do {  			// User/collection is choosen  			Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  			usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			string colId = usrLst [flNum - 1];  			Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  			flNum = -1;  			// File i choosen  			Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  			int fileCount = 1;  			foreach (string name in files) {  				var fInfo = new FileInfo (name);  				Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  				fileCount++;  			}  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			var fInfo2 = new FileInfo (files [flNum - 1]);  			string file = fInfo2.Name;  			Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  			flNum = -1;  			// Messagetype is choosen  			Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  			flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > flLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  					flNum = -1;  				}  			}  			while (flNum < 0);  			Console.WriteLine ("Du vil sende: " + flNum + "\n");  			switch (flNum) {  			case 1:  				topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 2:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 3:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 4:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 5:  				topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 6:  				saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 7:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 8:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 9:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 10:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 11:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 12:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 13:  				saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 14:  				saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 15:  				topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 16:  				saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 17:  				topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 18:  				saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 19:  				saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			default:  				Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  				break;  			}  			Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  			esckey = Console.ReadKey ();  			Console.WriteLine ("\n");  		}  		while (esckey.Key != ConsoleKey.Escape);  	}  	while (esckey.Key != ConsoleKey.Escape);  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: try {  	ConsoleKeyInfo esckey;  	int flNum = -1;  	do {  		do {  			// User/collection is choosen  			Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  			usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			string colId = usrLst [flNum - 1];  			Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  			flNum = -1;  			// File i choosen  			Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  			int fileCount = 1;  			foreach (string name in files) {  				var fInfo = new FileInfo (name);  				Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  				fileCount++;  			}  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			var fInfo2 = new FileInfo (files [flNum - 1]);  			string file = fInfo2.Name;  			Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  			flNum = -1;  			// Messagetype is choosen  			Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  			flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > flLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  					flNum = -1;  				}  			}  			while (flNum < 0);  			Console.WriteLine ("Du vil sende: " + flNum + "\n");  			switch (flNum) {  			case 1:  				topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 2:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 3:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 4:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 5:  				topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 6:  				saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 7:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 8:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 9:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 10:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 11:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 12:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 13:  				saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 14:  				saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 15:  				topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 16:  				saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 17:  				topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 18:  				saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 19:  				saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			default:  				Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  				break;  			}  			Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  			esckey = Console.ReadKey ();  			Console.WriteLine ("\n");  		}  		while (esckey.Key != ConsoleKey.Escape);  	}  	while (esckey.Key != ConsoleKey.Escape);  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: try {  	ConsoleKeyInfo esckey;  	int flNum = -1;  	do {  		do {  			// User/collection is choosen  			Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  			usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			string colId = usrLst [flNum - 1];  			Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  			flNum = -1;  			// File i choosen  			Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  			int fileCount = 1;  			foreach (string name in files) {  				var fInfo = new FileInfo (name);  				Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  				fileCount++;  			}  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			var fInfo2 = new FileInfo (files [flNum - 1]);  			string file = fInfo2.Name;  			Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  			flNum = -1;  			// Messagetype is choosen  			Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  			flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > flLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  					flNum = -1;  				}  			}  			while (flNum < 0);  			Console.WriteLine ("Du vil sende: " + flNum + "\n");  			switch (flNum) {  			case 1:  				topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 2:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 3:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 4:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 5:  				topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 6:  				saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 7:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 8:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 9:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 10:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 11:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 12:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 13:  				saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 14:  				saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 15:  				topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 16:  				saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 17:  				topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 18:  				saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 19:  				saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			default:  				Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  				break;  			}  			Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  			esckey = Console.ReadKey ();  			Console.WriteLine ("\n");  		}  		while (esckey.Key != ConsoleKey.Escape);  	}  	while (esckey.Key != ConsoleKey.Escape);  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: try {  	ConsoleKeyInfo esckey;  	int flNum = -1;  	do {  		do {  			// User/collection is choosen  			Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  			usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			string colId = usrLst [flNum - 1];  			Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  			flNum = -1;  			// File i choosen  			Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  			int fileCount = 1;  			foreach (string name in files) {  				var fInfo = new FileInfo (name);  				Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  				fileCount++;  			}  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			var fInfo2 = new FileInfo (files [flNum - 1]);  			string file = fInfo2.Name;  			Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  			flNum = -1;  			// Messagetype is choosen  			Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  			flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > flLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  					flNum = -1;  				}  			}  			while (flNum < 0);  			Console.WriteLine ("Du vil sende: " + flNum + "\n");  			switch (flNum) {  			case 1:  				topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 2:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 3:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 4:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 5:  				topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 6:  				saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 7:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 8:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 9:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 10:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 11:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 12:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 13:  				saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 14:  				saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 15:  				topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 16:  				saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 17:  				topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 18:  				saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 19:  				saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			default:  				Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  				break;  			}  			Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  			esckey = Console.ReadKey ();  			Console.WriteLine ("\n");  		}  		while (esckey.Key != ConsoleKey.Escape);  	}  	while (esckey.Key != ConsoleKey.Escape);  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: try {  	ConsoleKeyInfo esckey;  	int flNum = -1;  	do {  		do {  			// User/collection is choosen  			Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  			usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			string colId = usrLst [flNum - 1];  			Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  			flNum = -1;  			// File i choosen  			Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  			int fileCount = 1;  			foreach (string name in files) {  				var fInfo = new FileInfo (name);  				Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  				fileCount++;  			}  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			var fInfo2 = new FileInfo (files [flNum - 1]);  			string file = fInfo2.Name;  			Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  			flNum = -1;  			// Messagetype is choosen  			Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  			flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > flLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  					flNum = -1;  				}  			}  			while (flNum < 0);  			Console.WriteLine ("Du vil sende: " + flNum + "\n");  			switch (flNum) {  			case 1:  				topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 2:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 3:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 4:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 5:  				topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 6:  				saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 7:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 8:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 9:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 10:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 11:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 12:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 13:  				saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 14:  				saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 15:  				topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 16:  				saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 17:  				topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 18:  				saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 19:  				saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			default:  				Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  				break;  			}  			Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  			esckey = Console.ReadKey ();  			Console.WriteLine ("\n");  		}  		while (esckey.Key != ConsoleKey.Escape);  	}  	while (esckey.Key != ConsoleKey.Escape);  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: try {  	ConsoleKeyInfo esckey;  	int flNum = -1;  	do {  		do {  			// User/collection is choosen  			Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  			usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			string colId = usrLst [flNum - 1];  			Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  			flNum = -1;  			// File i choosen  			Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  			int fileCount = 1;  			foreach (string name in files) {  				var fInfo = new FileInfo (name);  				Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  				fileCount++;  			}  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			var fInfo2 = new FileInfo (files [flNum - 1]);  			string file = fInfo2.Name;  			Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  			flNum = -1;  			// Messagetype is choosen  			Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  			flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > flLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  					flNum = -1;  				}  			}  			while (flNum < 0);  			Console.WriteLine ("Du vil sende: " + flNum + "\n");  			switch (flNum) {  			case 1:  				topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 2:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 3:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 4:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 5:  				topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 6:  				saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 7:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 8:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 9:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 10:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 11:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 12:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 13:  				saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 14:  				saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 15:  				topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 16:  				saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 17:  				topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 18:  				saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 19:  				saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			default:  				Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  				break;  			}  			Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  			esckey = Console.ReadKey ();  			Console.WriteLine ("\n");  		}  		while (esckey.Key != ConsoleKey.Escape);  	}  	while (esckey.Key != ConsoleKey.Escape);  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: try {  	ConsoleKeyInfo esckey;  	int flNum = -1;  	do {  		do {  			// User/collection is choosen  			Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  			usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			string colId = usrLst [flNum - 1];  			Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  			flNum = -1;  			// File i choosen  			Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  			int fileCount = 1;  			foreach (string name in files) {  				var fInfo = new FileInfo (name);  				Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  				fileCount++;  			}  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			var fInfo2 = new FileInfo (files [flNum - 1]);  			string file = fInfo2.Name;  			Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  			flNum = -1;  			// Messagetype is choosen  			Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  			flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > flLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  					flNum = -1;  				}  			}  			while (flNum < 0);  			Console.WriteLine ("Du vil sende: " + flNum + "\n");  			switch (flNum) {  			case 1:  				topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 2:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 3:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 4:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 5:  				topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 6:  				saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 7:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 8:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 9:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 10:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 11:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 12:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 13:  				saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 14:  				saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 15:  				topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 16:  				saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 17:  				topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 18:  				saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 19:  				saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			default:  				Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  				break;  			}  			Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  			esckey = Console.ReadKey ();  			Console.WriteLine ("\n");  		}  		while (esckey.Key != ConsoleKey.Escape);  	}  	while (esckey.Key != ConsoleKey.Escape);  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: try {  	ConsoleKeyInfo esckey;  	int flNum = -1;  	do {  		do {  			// User/collection is choosen  			Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  			usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			string colId = usrLst [flNum - 1];  			Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  			flNum = -1;  			// File i choosen  			Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  			int fileCount = 1;  			foreach (string name in files) {  				var fInfo = new FileInfo (name);  				Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  				fileCount++;  			}  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > usrLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  				}  			}  			while (flNum < 0);  			var fInfo2 = new FileInfo (files [flNum - 1]);  			string file = fInfo2.Name;  			Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  			flNum = -1;  			// Messagetype is choosen  			Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  			flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  			do {  				try {  					flNum = Convert.ToInt16 (Console.ReadLine ());  					if (flNum > flLst.Count || flNum < 1) {  						throw new FormatException ();  					}  				}  				catch (FormatException) {  					Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  					flNum = -1;  				}  			}  			while (flNum < 0);  			Console.WriteLine ("Du vil sende: " + flNum + "\n");  			switch (flNum) {  			case 1:  				topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 2:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 3:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 4:  				// ---------  Har fjernet httpsTingen  				saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 5:  				topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 6:  				saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 7:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 8:  				topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 9:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 10:  				saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				break;  			case 11:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 12:  				topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 13:  				saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 14:  				saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  				break;  			case 15:  				topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 16:  				saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  				Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  				break;  			case 17:  				topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 18:  				saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			case 19:  				saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  				break;  			default:  				Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  				break;  			}  			Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  			esckey = Console.ReadKey ();  			Console.WriteLine ("\n");  		}  		while (esckey.Key != ConsoleKey.Escape);  	}  	while (esckey.Key != ConsoleKey.Escape);  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	do {  		// User/collection is choosen  		Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  		usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		string colId = usrLst [flNum - 1];  		Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  		flNum = -1;  		// File i choosen  		Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  		int fileCount = 1;  		foreach (string name in files) {  			var fInfo = new FileInfo (name);  			Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  			fileCount++;  		}  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		var fInfo2 = new FileInfo (files [flNum - 1]);  		string file = fInfo2.Name;  		Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  		flNum = -1;  		// Messagetype is choosen  		Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  		flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > flLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  				flNum = -1;  			}  		}  		while (flNum < 0);  		Console.WriteLine ("Du vil sende: " + flNum + "\n");  		switch (flNum) {  		case 1:  			topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 2:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 3:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 4:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 5:  			topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 6:  			saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 7:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 8:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 9:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 10:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 11:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 12:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 13:  			saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 14:  			saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 15:  			topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 16:  			saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 17:  			topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 18:  			saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 19:  			saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		default:  			Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  			break;  		}  		Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  		esckey = Console.ReadKey ();  		Console.WriteLine ("\n");  	}  	while (esckey.Key != ConsoleKey.Escape);  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	do {  		// User/collection is choosen  		Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  		usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		string colId = usrLst [flNum - 1];  		Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  		flNum = -1;  		// File i choosen  		Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  		int fileCount = 1;  		foreach (string name in files) {  			var fInfo = new FileInfo (name);  			Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  			fileCount++;  		}  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		var fInfo2 = new FileInfo (files [flNum - 1]);  		string file = fInfo2.Name;  		Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  		flNum = -1;  		// Messagetype is choosen  		Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  		flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > flLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  				flNum = -1;  			}  		}  		while (flNum < 0);  		Console.WriteLine ("Du vil sende: " + flNum + "\n");  		switch (flNum) {  		case 1:  			topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 2:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 3:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 4:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 5:  			topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 6:  			saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 7:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 8:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 9:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 10:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 11:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 12:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 13:  			saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 14:  			saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 15:  			topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 16:  			saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 17:  			topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 18:  			saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 19:  			saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		default:  			Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  			break;  		}  		Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  		esckey = Console.ReadKey ();  		Console.WriteLine ("\n");  	}  	while (esckey.Key != ConsoleKey.Escape);  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	do {  		// User/collection is choosen  		Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  		usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		string colId = usrLst [flNum - 1];  		Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  		flNum = -1;  		// File i choosen  		Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  		int fileCount = 1;  		foreach (string name in files) {  			var fInfo = new FileInfo (name);  			Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  			fileCount++;  		}  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		var fInfo2 = new FileInfo (files [flNum - 1]);  		string file = fInfo2.Name;  		Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  		flNum = -1;  		// Messagetype is choosen  		Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  		flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > flLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  				flNum = -1;  			}  		}  		while (flNum < 0);  		Console.WriteLine ("Du vil sende: " + flNum + "\n");  		switch (flNum) {  		case 1:  			topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 2:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 3:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 4:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 5:  			topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 6:  			saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 7:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 8:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 9:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 10:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 11:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 12:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 13:  			saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 14:  			saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 15:  			topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 16:  			saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 17:  			topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 18:  			saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 19:  			saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		default:  			Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  			break;  		}  		Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  		esckey = Console.ReadKey ();  		Console.WriteLine ("\n");  	}  	while (esckey.Key != ConsoleKey.Escape);  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	do {  		// User/collection is choosen  		Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  		usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		string colId = usrLst [flNum - 1];  		Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  		flNum = -1;  		// File i choosen  		Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  		int fileCount = 1;  		foreach (string name in files) {  			var fInfo = new FileInfo (name);  			Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  			fileCount++;  		}  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		var fInfo2 = new FileInfo (files [flNum - 1]);  		string file = fInfo2.Name;  		Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  		flNum = -1;  		// Messagetype is choosen  		Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  		flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > flLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  				flNum = -1;  			}  		}  		while (flNum < 0);  		Console.WriteLine ("Du vil sende: " + flNum + "\n");  		switch (flNum) {  		case 1:  			topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 2:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 3:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 4:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 5:  			topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 6:  			saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 7:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 8:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 9:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 10:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 11:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 12:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 13:  			saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 14:  			saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 15:  			topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 16:  			saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 17:  			topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 18:  			saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 19:  			saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		default:  			Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  			break;  		}  		Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  		esckey = Console.ReadKey ();  		Console.WriteLine ("\n");  	}  	while (esckey.Key != ConsoleKey.Escape);  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	do {  		// User/collection is choosen  		Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  		usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		string colId = usrLst [flNum - 1];  		Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  		flNum = -1;  		// File i choosen  		Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  		int fileCount = 1;  		foreach (string name in files) {  			var fInfo = new FileInfo (name);  			Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  			fileCount++;  		}  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		var fInfo2 = new FileInfo (files [flNum - 1]);  		string file = fInfo2.Name;  		Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  		flNum = -1;  		// Messagetype is choosen  		Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  		flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > flLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  				flNum = -1;  			}  		}  		while (flNum < 0);  		Console.WriteLine ("Du vil sende: " + flNum + "\n");  		switch (flNum) {  		case 1:  			topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 2:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 3:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 4:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 5:  			topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 6:  			saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 7:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 8:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 9:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 10:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 11:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 12:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 13:  			saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 14:  			saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 15:  			topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 16:  			saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 17:  			topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 18:  			saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 19:  			saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		default:  			Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  			break;  		}  		Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  		esckey = Console.ReadKey ();  		Console.WriteLine ("\n");  	}  	while (esckey.Key != ConsoleKey.Escape);  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	do {  		// User/collection is choosen  		Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  		usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		string colId = usrLst [flNum - 1];  		Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  		flNum = -1;  		// File i choosen  		Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  		int fileCount = 1;  		foreach (string name in files) {  			var fInfo = new FileInfo (name);  			Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  			fileCount++;  		}  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		var fInfo2 = new FileInfo (files [flNum - 1]);  		string file = fInfo2.Name;  		Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  		flNum = -1;  		// Messagetype is choosen  		Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  		flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > flLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  				flNum = -1;  			}  		}  		while (flNum < 0);  		Console.WriteLine ("Du vil sende: " + flNum + "\n");  		switch (flNum) {  		case 1:  			topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 2:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 3:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 4:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 5:  			topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 6:  			saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 7:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 8:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 9:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 10:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 11:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 12:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 13:  			saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 14:  			saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 15:  			topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 16:  			saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 17:  			topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 18:  			saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 19:  			saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		default:  			Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  			break;  		}  		Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  		esckey = Console.ReadKey ();  		Console.WriteLine ("\n");  	}  	while (esckey.Key != ConsoleKey.Escape);  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	do {  		// User/collection is choosen  		Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  		usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		string colId = usrLst [flNum - 1];  		Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  		flNum = -1;  		// File i choosen  		Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  		int fileCount = 1;  		foreach (string name in files) {  			var fInfo = new FileInfo (name);  			Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  			fileCount++;  		}  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		var fInfo2 = new FileInfo (files [flNum - 1]);  		string file = fInfo2.Name;  		Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  		flNum = -1;  		// Messagetype is choosen  		Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  		flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > flLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  				flNum = -1;  			}  		}  		while (flNum < 0);  		Console.WriteLine ("Du vil sende: " + flNum + "\n");  		switch (flNum) {  		case 1:  			topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 2:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 3:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 4:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 5:  			topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 6:  			saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 7:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 8:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 9:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 10:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 11:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 12:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 13:  			saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 14:  			saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 15:  			topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 16:  			saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 17:  			topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 18:  			saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 19:  			saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		default:  			Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  			break;  		}  		Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  		esckey = Console.ReadKey ();  		Console.WriteLine ("\n");  	}  	while (esckey.Key != ConsoleKey.Escape);  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	do {  		// User/collection is choosen  		Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  		usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		string colId = usrLst [flNum - 1];  		Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  		flNum = -1;  		// File i choosen  		Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  		int fileCount = 1;  		foreach (string name in files) {  			var fInfo = new FileInfo (name);  			Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  			fileCount++;  		}  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		var fInfo2 = new FileInfo (files [flNum - 1]);  		string file = fInfo2.Name;  		Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  		flNum = -1;  		// Messagetype is choosen  		Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  		flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > flLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  				flNum = -1;  			}  		}  		while (flNum < 0);  		Console.WriteLine ("Du vil sende: " + flNum + "\n");  		switch (flNum) {  		case 1:  			topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 2:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 3:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 4:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 5:  			topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 6:  			saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 7:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 8:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 9:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 10:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 11:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 12:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 13:  			saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 14:  			saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 15:  			topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 16:  			saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 17:  			topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 18:  			saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 19:  			saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		default:  			Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  			break;  		}  		Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  		esckey = Console.ReadKey ();  		Console.WriteLine ("\n");  	}  	while (esckey.Key != ConsoleKey.Escape);  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	do {  		// User/collection is choosen  		Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  		usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		string colId = usrLst [flNum - 1];  		Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  		flNum = -1;  		// File i choosen  		Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  		int fileCount = 1;  		foreach (string name in files) {  			var fInfo = new FileInfo (name);  			Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  			fileCount++;  		}  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		var fInfo2 = new FileInfo (files [flNum - 1]);  		string file = fInfo2.Name;  		Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  		flNum = -1;  		// Messagetype is choosen  		Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  		flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > flLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  				flNum = -1;  			}  		}  		while (flNum < 0);  		Console.WriteLine ("Du vil sende: " + flNum + "\n");  		switch (flNum) {  		case 1:  			topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 2:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 3:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 4:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 5:  			topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 6:  			saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 7:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 8:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 9:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 10:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 11:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 12:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 13:  			saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 14:  			saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 15:  			topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 16:  			saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 17:  			topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 18:  			saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 19:  			saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		default:  			Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  			break;  		}  		Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  		esckey = Console.ReadKey ();  		Console.WriteLine ("\n");  	}  	while (esckey.Key != ConsoleKey.Escape);  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	do {  		// User/collection is choosen  		Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  		usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		string colId = usrLst [flNum - 1];  		Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  		flNum = -1;  		// File i choosen  		Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  		int fileCount = 1;  		foreach (string name in files) {  			var fInfo = new FileInfo (name);  			Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  			fileCount++;  		}  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		var fInfo2 = new FileInfo (files [flNum - 1]);  		string file = fInfo2.Name;  		Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  		flNum = -1;  		// Messagetype is choosen  		Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  		flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > flLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  				flNum = -1;  			}  		}  		while (flNum < 0);  		Console.WriteLine ("Du vil sende: " + flNum + "\n");  		switch (flNum) {  		case 1:  			topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 2:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 3:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 4:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 5:  			topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 6:  			saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 7:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 8:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 9:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 10:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 11:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 12:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 13:  			saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 14:  			saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 15:  			topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 16:  			saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 17:  			topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 18:  			saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 19:  			saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		default:  			Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  			break;  		}  		Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  		esckey = Console.ReadKey ();  		Console.WriteLine ("\n");  	}  	while (esckey.Key != ConsoleKey.Escape);  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	do {  		// User/collection is choosen  		Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  		usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		string colId = usrLst [flNum - 1];  		Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  		flNum = -1;  		// File i choosen  		Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  		int fileCount = 1;  		foreach (string name in files) {  			var fInfo = new FileInfo (name);  			Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  			fileCount++;  		}  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		var fInfo2 = new FileInfo (files [flNum - 1]);  		string file = fInfo2.Name;  		Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  		flNum = -1;  		// Messagetype is choosen  		Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  		flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > flLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  				flNum = -1;  			}  		}  		while (flNum < 0);  		Console.WriteLine ("Du vil sende: " + flNum + "\n");  		switch (flNum) {  		case 1:  			topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 2:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 3:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 4:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 5:  			topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 6:  			saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 7:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 8:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 9:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 10:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 11:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 12:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 13:  			saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 14:  			saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 15:  			topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 16:  			saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 17:  			topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 18:  			saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 19:  			saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		default:  			Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  			break;  		}  		Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  		esckey = Console.ReadKey ();  		Console.WriteLine ("\n");  	}  	while (esckey.Key != ConsoleKey.Escape);  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	do {  		// User/collection is choosen  		Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  		usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		string colId = usrLst [flNum - 1];  		Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  		flNum = -1;  		// File i choosen  		Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  		int fileCount = 1;  		foreach (string name in files) {  			var fInfo = new FileInfo (name);  			Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  			fileCount++;  		}  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		var fInfo2 = new FileInfo (files [flNum - 1]);  		string file = fInfo2.Name;  		Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  		flNum = -1;  		// Messagetype is choosen  		Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  		flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > flLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  				flNum = -1;  			}  		}  		while (flNum < 0);  		Console.WriteLine ("Du vil sende: " + flNum + "\n");  		switch (flNum) {  		case 1:  			topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 2:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 3:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 4:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 5:  			topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 6:  			saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 7:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 8:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 9:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 10:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 11:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 12:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 13:  			saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 14:  			saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 15:  			topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 16:  			saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 17:  			topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 18:  			saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 19:  			saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		default:  			Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  			break;  		}  		Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  		esckey = Console.ReadKey ();  		Console.WriteLine ("\n");  	}  	while (esckey.Key != ConsoleKey.Escape);  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	do {  		// User/collection is choosen  		Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  		usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		string colId = usrLst [flNum - 1];  		Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  		flNum = -1;  		// File i choosen  		Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  		int fileCount = 1;  		foreach (string name in files) {  			var fInfo = new FileInfo (name);  			Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  			fileCount++;  		}  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		var fInfo2 = new FileInfo (files [flNum - 1]);  		string file = fInfo2.Name;  		Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  		flNum = -1;  		// Messagetype is choosen  		Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  		flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > flLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  				flNum = -1;  			}  		}  		while (flNum < 0);  		Console.WriteLine ("Du vil sende: " + flNum + "\n");  		switch (flNum) {  		case 1:  			topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 2:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 3:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 4:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 5:  			topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 6:  			saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 7:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 8:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 9:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 10:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 11:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 12:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 13:  			saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 14:  			saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 15:  			topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 16:  			saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 17:  			topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 18:  			saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 19:  			saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		default:  			Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  			break;  		}  		Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  		esckey = Console.ReadKey ();  		Console.WriteLine ("\n");  	}  	while (esckey.Key != ConsoleKey.Escape);  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	do {  		// User/collection is choosen  		Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  		usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		string colId = usrLst [flNum - 1];  		Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  		flNum = -1;  		// File i choosen  		Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  		int fileCount = 1;  		foreach (string name in files) {  			var fInfo = new FileInfo (name);  			Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  			fileCount++;  		}  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		var fInfo2 = new FileInfo (files [flNum - 1]);  		string file = fInfo2.Name;  		Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  		flNum = -1;  		// Messagetype is choosen  		Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  		flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > flLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  				flNum = -1;  			}  		}  		while (flNum < 0);  		Console.WriteLine ("Du vil sende: " + flNum + "\n");  		switch (flNum) {  		case 1:  			topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 2:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 3:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 4:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 5:  			topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 6:  			saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 7:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 8:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 9:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 10:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 11:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 12:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 13:  			saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 14:  			saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 15:  			topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 16:  			saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 17:  			topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 18:  			saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 19:  			saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		default:  			Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  			break;  		}  		Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  		esckey = Console.ReadKey ();  		Console.WriteLine ("\n");  	}  	while (esckey.Key != ConsoleKey.Escape);  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	do {  		// User/collection is choosen  		Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  		usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		string colId = usrLst [flNum - 1];  		Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  		flNum = -1;  		// File i choosen  		Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  		int fileCount = 1;  		foreach (string name in files) {  			var fInfo = new FileInfo (name);  			Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  			fileCount++;  		}  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		var fInfo2 = new FileInfo (files [flNum - 1]);  		string file = fInfo2.Name;  		Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  		flNum = -1;  		// Messagetype is choosen  		Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  		flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > flLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  				flNum = -1;  			}  		}  		while (flNum < 0);  		Console.WriteLine ("Du vil sende: " + flNum + "\n");  		switch (flNum) {  		case 1:  			topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 2:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 3:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 4:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 5:  			topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 6:  			saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 7:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 8:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 9:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 10:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 11:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 12:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 13:  			saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 14:  			saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 15:  			topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 16:  			saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 17:  			topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 18:  			saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 19:  			saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		default:  			Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  			break;  		}  		Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  		esckey = Console.ReadKey ();  		Console.WriteLine ("\n");  	}  	while (esckey.Key != ConsoleKey.Escape);  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	do {  		// User/collection is choosen  		Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  		usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		string colId = usrLst [flNum - 1];  		Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  		flNum = -1;  		// File i choosen  		Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  		int fileCount = 1;  		foreach (string name in files) {  			var fInfo = new FileInfo (name);  			Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  			fileCount++;  		}  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		var fInfo2 = new FileInfo (files [flNum - 1]);  		string file = fInfo2.Name;  		Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  		flNum = -1;  		// Messagetype is choosen  		Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  		flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > flLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  				flNum = -1;  			}  		}  		while (flNum < 0);  		Console.WriteLine ("Du vil sende: " + flNum + "\n");  		switch (flNum) {  		case 1:  			topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 2:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 3:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 4:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 5:  			topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 6:  			saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 7:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 8:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 9:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 10:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 11:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 12:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 13:  			saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 14:  			saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 15:  			topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 16:  			saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 17:  			topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 18:  			saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 19:  			saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		default:  			Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  			break;  		}  		Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  		esckey = Console.ReadKey ();  		Console.WriteLine ("\n");  	}  	while (esckey.Key != ConsoleKey.Escape);  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	do {  		// User/collection is choosen  		Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  		usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		string colId = usrLst [flNum - 1];  		Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  		flNum = -1;  		// File i choosen  		Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  		int fileCount = 1;  		foreach (string name in files) {  			var fInfo = new FileInfo (name);  			Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  			fileCount++;  		}  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		var fInfo2 = new FileInfo (files [flNum - 1]);  		string file = fInfo2.Name;  		Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  		flNum = -1;  		// Messagetype is choosen  		Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  		flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > flLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  				flNum = -1;  			}  		}  		while (flNum < 0);  		Console.WriteLine ("Du vil sende: " + flNum + "\n");  		switch (flNum) {  		case 1:  			topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 2:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 3:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 4:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 5:  			topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 6:  			saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 7:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 8:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 9:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 10:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 11:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 12:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 13:  			saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 14:  			saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 15:  			topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 16:  			saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 17:  			topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 18:  			saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 19:  			saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		default:  			Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  			break;  		}  		Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  		esckey = Console.ReadKey ();  		Console.WriteLine ("\n");  	}  	while (esckey.Key != ConsoleKey.Escape);  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	do {  		// User/collection is choosen  		Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  		usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		string colId = usrLst [flNum - 1];  		Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  		flNum = -1;  		// File i choosen  		Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  		int fileCount = 1;  		foreach (string name in files) {  			var fInfo = new FileInfo (name);  			Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  			fileCount++;  		}  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > usrLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  			}  		}  		while (flNum < 0);  		var fInfo2 = new FileInfo (files [flNum - 1]);  		string file = fInfo2.Name;  		Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  		flNum = -1;  		// Messagetype is choosen  		Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  		flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  		do {  			try {  				flNum = Convert.ToInt16 (Console.ReadLine ());  				if (flNum > flLst.Count || flNum < 1) {  					throw new FormatException ();  				}  			}  			catch (FormatException) {  				Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  				flNum = -1;  			}  		}  		while (flNum < 0);  		Console.WriteLine ("Du vil sende: " + flNum + "\n");  		switch (flNum) {  		case 1:  			topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 2:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 3:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 4:  			// ---------  Har fjernet httpsTingen  			saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 5:  			topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 6:  			saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 7:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 8:  			topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 9:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 10:  			saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			break;  		case 11:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 12:  			topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 13:  			saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 14:  			saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  			break;  		case 15:  			topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 16:  			saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  			Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  			break;  		case 17:  			topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 18:  			saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		case 19:  			saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  			break;  		default:  			Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  			break;  		}  		Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  		esckey = Console.ReadKey ();  		Console.WriteLine ("\n");  	}  	while (esckey.Key != ConsoleKey.Escape);  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	// User/collection is choosen  	Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  	usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	string colId = usrLst [flNum - 1];  	Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  	flNum = -1;  	// File i choosen  	Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  	int fileCount = 1;  	foreach (string name in files) {  		var fInfo = new FileInfo (name);  		Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  		fileCount++;  	}  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	var fInfo2 = new FileInfo (files [flNum - 1]);  	string file = fInfo2.Name;  	Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  	flNum = -1;  	// Messagetype is choosen  	Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  	flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > flLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  			flNum = -1;  		}  	}  	while (flNum < 0);  	Console.WriteLine ("Du vil sende: " + flNum + "\n");  	switch (flNum) {  	case 1:  		topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 2:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 3:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 4:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 5:  		topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 6:  		saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 7:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 8:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 9:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 10:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 11:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 12:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 13:  		saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 14:  		saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 15:  		topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 16:  		saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 17:  		topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 18:  		saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 19:  		saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	default:  		Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  		break;  	}  	Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  	esckey = Console.ReadKey ();  	Console.WriteLine ("\n");  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	// User/collection is choosen  	Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  	usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	string colId = usrLst [flNum - 1];  	Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  	flNum = -1;  	// File i choosen  	Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  	int fileCount = 1;  	foreach (string name in files) {  		var fInfo = new FileInfo (name);  		Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  		fileCount++;  	}  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	var fInfo2 = new FileInfo (files [flNum - 1]);  	string file = fInfo2.Name;  	Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  	flNum = -1;  	// Messagetype is choosen  	Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  	flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > flLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  			flNum = -1;  		}  	}  	while (flNum < 0);  	Console.WriteLine ("Du vil sende: " + flNum + "\n");  	switch (flNum) {  	case 1:  		topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 2:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 3:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 4:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 5:  		topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 6:  		saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 7:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 8:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 9:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 10:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 11:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 12:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 13:  		saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 14:  		saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 15:  		topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 16:  		saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 17:  		topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 18:  		saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 19:  		saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	default:  		Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  		break;  	}  	Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  	esckey = Console.ReadKey ();  	Console.WriteLine ("\n");  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	// User/collection is choosen  	Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  	usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	string colId = usrLst [flNum - 1];  	Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  	flNum = -1;  	// File i choosen  	Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  	int fileCount = 1;  	foreach (string name in files) {  		var fInfo = new FileInfo (name);  		Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  		fileCount++;  	}  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	var fInfo2 = new FileInfo (files [flNum - 1]);  	string file = fInfo2.Name;  	Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  	flNum = -1;  	// Messagetype is choosen  	Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  	flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > flLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  			flNum = -1;  		}  	}  	while (flNum < 0);  	Console.WriteLine ("Du vil sende: " + flNum + "\n");  	switch (flNum) {  	case 1:  		topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 2:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 3:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 4:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 5:  		topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 6:  		saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 7:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 8:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 9:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 10:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 11:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 12:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 13:  		saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 14:  		saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 15:  		topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 16:  		saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 17:  		topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 18:  		saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 19:  		saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	default:  		Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  		break;  	}  	Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  	esckey = Console.ReadKey ();  	Console.WriteLine ("\n");  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	// User/collection is choosen  	Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  	usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	string colId = usrLst [flNum - 1];  	Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  	flNum = -1;  	// File i choosen  	Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  	int fileCount = 1;  	foreach (string name in files) {  		var fInfo = new FileInfo (name);  		Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  		fileCount++;  	}  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	var fInfo2 = new FileInfo (files [flNum - 1]);  	string file = fInfo2.Name;  	Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  	flNum = -1;  	// Messagetype is choosen  	Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  	flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > flLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  			flNum = -1;  		}  	}  	while (flNum < 0);  	Console.WriteLine ("Du vil sende: " + flNum + "\n");  	switch (flNum) {  	case 1:  		topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 2:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 3:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 4:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 5:  		topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 6:  		saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 7:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 8:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 9:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 10:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 11:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 12:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 13:  		saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 14:  		saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 15:  		topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 16:  		saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 17:  		topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 18:  		saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 19:  		saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	default:  		Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  		break;  	}  	Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  	esckey = Console.ReadKey ();  	Console.WriteLine ("\n");  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	// User/collection is choosen  	Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  	usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	string colId = usrLst [flNum - 1];  	Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  	flNum = -1;  	// File i choosen  	Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  	int fileCount = 1;  	foreach (string name in files) {  		var fInfo = new FileInfo (name);  		Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  		fileCount++;  	}  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	var fInfo2 = new FileInfo (files [flNum - 1]);  	string file = fInfo2.Name;  	Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  	flNum = -1;  	// Messagetype is choosen  	Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  	flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > flLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  			flNum = -1;  		}  	}  	while (flNum < 0);  	Console.WriteLine ("Du vil sende: " + flNum + "\n");  	switch (flNum) {  	case 1:  		topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 2:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 3:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 4:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 5:  		topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 6:  		saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 7:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 8:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 9:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 10:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 11:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 12:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 13:  		saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 14:  		saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 15:  		topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 16:  		saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 17:  		topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 18:  		saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 19:  		saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	default:  		Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  		break;  	}  	Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  	esckey = Console.ReadKey ();  	Console.WriteLine ("\n");  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	// User/collection is choosen  	Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  	usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	string colId = usrLst [flNum - 1];  	Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  	flNum = -1;  	// File i choosen  	Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  	int fileCount = 1;  	foreach (string name in files) {  		var fInfo = new FileInfo (name);  		Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  		fileCount++;  	}  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	var fInfo2 = new FileInfo (files [flNum - 1]);  	string file = fInfo2.Name;  	Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  	flNum = -1;  	// Messagetype is choosen  	Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  	flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > flLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  			flNum = -1;  		}  	}  	while (flNum < 0);  	Console.WriteLine ("Du vil sende: " + flNum + "\n");  	switch (flNum) {  	case 1:  		topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 2:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 3:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 4:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 5:  		topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 6:  		saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 7:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 8:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 9:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 10:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 11:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 12:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 13:  		saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 14:  		saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 15:  		topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 16:  		saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 17:  		topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 18:  		saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 19:  		saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	default:  		Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  		break;  	}  	Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  	esckey = Console.ReadKey ();  	Console.WriteLine ("\n");  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	// User/collection is choosen  	Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  	usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	string colId = usrLst [flNum - 1];  	Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  	flNum = -1;  	// File i choosen  	Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  	int fileCount = 1;  	foreach (string name in files) {  		var fInfo = new FileInfo (name);  		Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  		fileCount++;  	}  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	var fInfo2 = new FileInfo (files [flNum - 1]);  	string file = fInfo2.Name;  	Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  	flNum = -1;  	// Messagetype is choosen  	Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  	flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > flLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  			flNum = -1;  		}  	}  	while (flNum < 0);  	Console.WriteLine ("Du vil sende: " + flNum + "\n");  	switch (flNum) {  	case 1:  		topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 2:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 3:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 4:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 5:  		topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 6:  		saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 7:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 8:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 9:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 10:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 11:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 12:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 13:  		saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 14:  		saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 15:  		topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 16:  		saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 17:  		topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 18:  		saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 19:  		saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	default:  		Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  		break;  	}  	Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  	esckey = Console.ReadKey ();  	Console.WriteLine ("\n");  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	// User/collection is choosen  	Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  	usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	string colId = usrLst [flNum - 1];  	Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  	flNum = -1;  	// File i choosen  	Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  	int fileCount = 1;  	foreach (string name in files) {  		var fInfo = new FileInfo (name);  		Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  		fileCount++;  	}  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	var fInfo2 = new FileInfo (files [flNum - 1]);  	string file = fInfo2.Name;  	Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  	flNum = -1;  	// Messagetype is choosen  	Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  	flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > flLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  			flNum = -1;  		}  	}  	while (flNum < 0);  	Console.WriteLine ("Du vil sende: " + flNum + "\n");  	switch (flNum) {  	case 1:  		topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 2:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 3:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 4:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 5:  		topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 6:  		saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 7:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 8:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 9:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 10:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 11:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 12:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 13:  		saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 14:  		saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 15:  		topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 16:  		saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 17:  		topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 18:  		saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 19:  		saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	default:  		Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  		break;  	}  	Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  	esckey = Console.ReadKey ();  	Console.WriteLine ("\n");  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	// User/collection is choosen  	Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  	usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	string colId = usrLst [flNum - 1];  	Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  	flNum = -1;  	// File i choosen  	Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  	int fileCount = 1;  	foreach (string name in files) {  		var fInfo = new FileInfo (name);  		Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  		fileCount++;  	}  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	var fInfo2 = new FileInfo (files [flNum - 1]);  	string file = fInfo2.Name;  	Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  	flNum = -1;  	// Messagetype is choosen  	Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  	flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > flLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  			flNum = -1;  		}  	}  	while (flNum < 0);  	Console.WriteLine ("Du vil sende: " + flNum + "\n");  	switch (flNum) {  	case 1:  		topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 2:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 3:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 4:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 5:  		topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 6:  		saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 7:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 8:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 9:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 10:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 11:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 12:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 13:  		saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 14:  		saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 15:  		topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 16:  		saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 17:  		topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 18:  		saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 19:  		saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	default:  		Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  		break;  	}  	Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  	esckey = Console.ReadKey ();  	Console.WriteLine ("\n");  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	// User/collection is choosen  	Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  	usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	string colId = usrLst [flNum - 1];  	Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  	flNum = -1;  	// File i choosen  	Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  	int fileCount = 1;  	foreach (string name in files) {  		var fInfo = new FileInfo (name);  		Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  		fileCount++;  	}  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	var fInfo2 = new FileInfo (files [flNum - 1]);  	string file = fInfo2.Name;  	Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  	flNum = -1;  	// Messagetype is choosen  	Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  	flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > flLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  			flNum = -1;  		}  	}  	while (flNum < 0);  	Console.WriteLine ("Du vil sende: " + flNum + "\n");  	switch (flNum) {  	case 1:  		topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 2:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 3:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 4:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 5:  		topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 6:  		saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 7:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 8:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 9:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 10:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 11:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 12:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 13:  		saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 14:  		saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 15:  		topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 16:  		saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 17:  		topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 18:  		saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 19:  		saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	default:  		Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  		break;  	}  	Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  	esckey = Console.ReadKey ();  	Console.WriteLine ("\n");  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	// User/collection is choosen  	Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  	usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	string colId = usrLst [flNum - 1];  	Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  	flNum = -1;  	// File i choosen  	Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  	int fileCount = 1;  	foreach (string name in files) {  		var fInfo = new FileInfo (name);  		Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  		fileCount++;  	}  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	var fInfo2 = new FileInfo (files [flNum - 1]);  	string file = fInfo2.Name;  	Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  	flNum = -1;  	// Messagetype is choosen  	Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  	flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > flLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  			flNum = -1;  		}  	}  	while (flNum < 0);  	Console.WriteLine ("Du vil sende: " + flNum + "\n");  	switch (flNum) {  	case 1:  		topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 2:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 3:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 4:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 5:  		topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 6:  		saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 7:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 8:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 9:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 10:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 11:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 12:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 13:  		saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 14:  		saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 15:  		topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 16:  		saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 17:  		topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 18:  		saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 19:  		saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	default:  		Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  		break;  	}  	Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  	esckey = Console.ReadKey ();  	Console.WriteLine ("\n");  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	// User/collection is choosen  	Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  	usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	string colId = usrLst [flNum - 1];  	Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  	flNum = -1;  	// File i choosen  	Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  	int fileCount = 1;  	foreach (string name in files) {  		var fInfo = new FileInfo (name);  		Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  		fileCount++;  	}  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	var fInfo2 = new FileInfo (files [flNum - 1]);  	string file = fInfo2.Name;  	Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  	flNum = -1;  	// Messagetype is choosen  	Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  	flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > flLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  			flNum = -1;  		}  	}  	while (flNum < 0);  	Console.WriteLine ("Du vil sende: " + flNum + "\n");  	switch (flNum) {  	case 1:  		topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 2:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 3:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 4:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 5:  		topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 6:  		saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 7:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 8:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 9:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 10:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 11:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 12:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 13:  		saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 14:  		saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 15:  		topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 16:  		saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 17:  		topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 18:  		saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 19:  		saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	default:  		Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  		break;  	}  	Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  	esckey = Console.ReadKey ();  	Console.WriteLine ("\n");  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	// User/collection is choosen  	Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  	usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	string colId = usrLst [flNum - 1];  	Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  	flNum = -1;  	// File i choosen  	Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  	int fileCount = 1;  	foreach (string name in files) {  		var fInfo = new FileInfo (name);  		Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  		fileCount++;  	}  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	var fInfo2 = new FileInfo (files [flNum - 1]);  	string file = fInfo2.Name;  	Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  	flNum = -1;  	// Messagetype is choosen  	Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  	flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > flLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  			flNum = -1;  		}  	}  	while (flNum < 0);  	Console.WriteLine ("Du vil sende: " + flNum + "\n");  	switch (flNum) {  	case 1:  		topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 2:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 3:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 4:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 5:  		topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 6:  		saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 7:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 8:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 9:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 10:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 11:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 12:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 13:  		saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 14:  		saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 15:  		topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 16:  		saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 17:  		topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 18:  		saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 19:  		saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	default:  		Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  		break;  	}  	Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  	esckey = Console.ReadKey ();  	Console.WriteLine ("\n");  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	// User/collection is choosen  	Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  	usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	string colId = usrLst [flNum - 1];  	Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  	flNum = -1;  	// File i choosen  	Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  	int fileCount = 1;  	foreach (string name in files) {  		var fInfo = new FileInfo (name);  		Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  		fileCount++;  	}  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	var fInfo2 = new FileInfo (files [flNum - 1]);  	string file = fInfo2.Name;  	Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  	flNum = -1;  	// Messagetype is choosen  	Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  	flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > flLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  			flNum = -1;  		}  	}  	while (flNum < 0);  	Console.WriteLine ("Du vil sende: " + flNum + "\n");  	switch (flNum) {  	case 1:  		topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 2:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 3:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 4:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 5:  		topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 6:  		saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 7:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 8:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 9:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 10:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 11:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 12:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 13:  		saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 14:  		saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 15:  		topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 16:  		saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 17:  		topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 18:  		saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 19:  		saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	default:  		Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  		break;  	}  	Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  	esckey = Console.ReadKey ();  	Console.WriteLine ("\n");  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	// User/collection is choosen  	Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  	usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	string colId = usrLst [flNum - 1];  	Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  	flNum = -1;  	// File i choosen  	Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  	int fileCount = 1;  	foreach (string name in files) {  		var fInfo = new FileInfo (name);  		Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  		fileCount++;  	}  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	var fInfo2 = new FileInfo (files [flNum - 1]);  	string file = fInfo2.Name;  	Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  	flNum = -1;  	// Messagetype is choosen  	Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  	flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > flLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  			flNum = -1;  		}  	}  	while (flNum < 0);  	Console.WriteLine ("Du vil sende: " + flNum + "\n");  	switch (flNum) {  	case 1:  		topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 2:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 3:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 4:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 5:  		topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 6:  		saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 7:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 8:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 9:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 10:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 11:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 12:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 13:  		saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 14:  		saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 15:  		topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 16:  		saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 17:  		topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 18:  		saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 19:  		saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	default:  		Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  		break;  	}  	Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  	esckey = Console.ReadKey ();  	Console.WriteLine ("\n");  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	// User/collection is choosen  	Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  	usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	string colId = usrLst [flNum - 1];  	Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  	flNum = -1;  	// File i choosen  	Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  	int fileCount = 1;  	foreach (string name in files) {  		var fInfo = new FileInfo (name);  		Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  		fileCount++;  	}  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	var fInfo2 = new FileInfo (files [flNum - 1]);  	string file = fInfo2.Name;  	Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  	flNum = -1;  	// Messagetype is choosen  	Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  	flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > flLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  			flNum = -1;  		}  	}  	while (flNum < 0);  	Console.WriteLine ("Du vil sende: " + flNum + "\n");  	switch (flNum) {  	case 1:  		topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 2:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 3:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 4:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 5:  		topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 6:  		saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 7:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 8:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 9:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 10:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 11:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 12:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 13:  		saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 14:  		saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 15:  		topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 16:  		saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 17:  		topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 18:  		saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 19:  		saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	default:  		Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  		break;  	}  	Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  	esckey = Console.ReadKey ();  	Console.WriteLine ("\n");  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	// User/collection is choosen  	Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  	usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	string colId = usrLst [flNum - 1];  	Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  	flNum = -1;  	// File i choosen  	Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  	int fileCount = 1;  	foreach (string name in files) {  		var fInfo = new FileInfo (name);  		Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  		fileCount++;  	}  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	var fInfo2 = new FileInfo (files [flNum - 1]);  	string file = fInfo2.Name;  	Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  	flNum = -1;  	// Messagetype is choosen  	Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  	flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > flLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  			flNum = -1;  		}  	}  	while (flNum < 0);  	Console.WriteLine ("Du vil sende: " + flNum + "\n");  	switch (flNum) {  	case 1:  		topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 2:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 3:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 4:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 5:  		topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 6:  		saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 7:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 8:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 9:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 10:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 11:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 12:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 13:  		saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 14:  		saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 15:  		topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 16:  		saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 17:  		topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 18:  		saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 19:  		saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	default:  		Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  		break;  	}  	Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  	esckey = Console.ReadKey ();  	Console.WriteLine ("\n");  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: do {  	// User/collection is choosen  	Console.WriteLine ("\nHvilken af følgende users/collections vil du anvende?\n");  	usrLst.ForEach (name => Console.WriteLine (usrLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	string colId = usrLst [flNum - 1];  	Console.WriteLine ("Du vil anvende: " + flNum + ". " + colId + "\n");  	flNum = -1;  	// File i choosen  	Console.WriteLine ("Hvilken af følgende filer vil du arbejde med?");  	int fileCount = 1;  	foreach (string name in files) {  		var fInfo = new FileInfo (name);  		Console.WriteLine (fileCount + ". " + fInfo.Name + "' størrelse i bytes: " + fInfo.Length);  		fileCount++;  	}  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > usrLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + (flLst.Count - 1));  		}  	}  	while (flNum < 0);  	var fInfo2 = new FileInfo (files [flNum - 1]);  	string file = fInfo2.Name;  	Console.WriteLine ("Du vil anvende følgende fil: " + flNum + ". " + file + "\n");  	flNum = -1;  	// Messagetype is choosen  	Console.WriteLine ("Hvilken af følgende beskeder vil du sende?\n");  	flLst.ForEach (name => Console.WriteLine (flLst.IndexOf (name) + 1 + ". " + name));  	do {  		try {  			flNum = Convert.ToInt16 (Console.ReadLine ());  			if (flNum > flLst.Count || flNum < 1) {  				throw new FormatException ();  			}  		}  		catch (FormatException) {  			Console.WriteLine ("Den indtastede værdi skal være et tal mellem 1 og " + flLst.Count);  			flNum = -1;  		}  	}  	while (flNum < 0);  	Console.WriteLine ("Du vil sende: " + flNum + "\n");  	switch (flNum) {  	case 1:  		topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 2:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 3:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 4:  		// ---------  Har fjernet httpsTingen  		saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 5:  		topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 6:  		saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 7:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 8:  		topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 9:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 10:  		saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		break;  	case 11:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 12:  		topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 13:  		saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 14:  		saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  		break;  	case 15:  		topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 16:  		saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  		Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  		break;  	case 17:  		topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 18:  		saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	case 19:  		saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  		break;  	default:  		Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  		break;  	}  	Console.WriteLine ("Tryk på en vilkårlig tast for at fortsætte' tryk på 'Esc' for at afsluttet.");  	esckey = Console.ReadKey ();  	Console.WriteLine ("\n");  }  while (esckey.Key != ConsoleKey.Escape);  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: switch (flNum) {  case 1:  	topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 2:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 3:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 4:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 5:  	topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 6:  	saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 7:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 8:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 9:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 10:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 11:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 12:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 13:  	saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 14:  	saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 15:  	topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 16:  	saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 17:  	topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 18:  	saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 19:  	saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  default:  	Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  	break;  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: switch (flNum) {  case 1:  	topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 2:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 3:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 4:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 5:  	topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 6:  	saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 7:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 8:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 9:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 10:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 11:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 12:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 13:  	saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 14:  	saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 15:  	topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 16:  	saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 17:  	topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 18:  	saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 19:  	saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  default:  	Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  	break;  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: switch (flNum) {  case 1:  	topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 2:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 3:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 4:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 5:  	topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 6:  	saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 7:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 8:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 9:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 10:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 11:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 12:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 13:  	saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 14:  	saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 15:  	topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 16:  	saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 17:  	topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 18:  	saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 19:  	saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  default:  	Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  	break;  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: switch (flNum) {  case 1:  	topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 2:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 3:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 4:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 5:  	topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 6:  	saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 7:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 8:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 9:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 10:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 11:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 12:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 13:  	saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 14:  	saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 15:  	topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 16:  	saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 17:  	topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 18:  	saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 19:  	saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  default:  	Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  	break;  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: switch (flNum) {  case 1:  	topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 2:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 3:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 4:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 5:  	topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 6:  	saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 7:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 8:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 9:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 10:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 11:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 12:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 13:  	saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 14:  	saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 15:  	topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 16:  	saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 17:  	topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 18:  	saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 19:  	saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  default:  	Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  	break;  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: switch (flNum) {  case 1:  	topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 2:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 3:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 4:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 5:  	topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 6:  	saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 7:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 8:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 9:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 10:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 11:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 12:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 13:  	saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 14:  	saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 15:  	topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 16:  	saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 17:  	topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 18:  	saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 19:  	saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  default:  	Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  	break;  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: switch (flNum) {  case 1:  	topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 2:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 3:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 4:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 5:  	topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 6:  	saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 7:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 8:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 9:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 10:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 11:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 12:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 13:  	saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 14:  	saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 15:  	topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 16:  	saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 17:  	topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 18:  	saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 19:  	saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  default:  	Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  	break;  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: switch (flNum) {  case 1:  	topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 2:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 3:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 4:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 5:  	topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 6:  	saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 7:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 8:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 9:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 10:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 11:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 12:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 13:  	saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 14:  	saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 15:  	topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 16:  	saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 17:  	topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 18:  	saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 19:  	saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  default:  	Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  	break;  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: switch (flNum) {  case 1:  	topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 2:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 3:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 4:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 5:  	topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 6:  	saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 7:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 8:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 9:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 10:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 11:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 12:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 13:  	saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 14:  	saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 15:  	topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 16:  	saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 17:  	topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 18:  	saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 19:  	saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  default:  	Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  	break;  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: switch (flNum) {  case 1:  	topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 2:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 3:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 4:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 5:  	topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 6:  	saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 7:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 8:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 9:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 10:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 11:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 12:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 13:  	saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 14:  	saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 15:  	topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 16:  	saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 17:  	topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 18:  	saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 19:  	saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  default:  	Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  	break;  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: switch (flNum) {  case 1:  	topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 2:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 3:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 4:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 5:  	topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 6:  	saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 7:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 8:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 9:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 10:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 11:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 12:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 13:  	saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 14:  	saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 15:  	topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 16:  	saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 17:  	topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 18:  	saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 19:  	saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  default:  	Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  	break;  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: switch (flNum) {  case 1:  	topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 2:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 3:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 4:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 5:  	topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 6:  	saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 7:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 8:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 9:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 10:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 11:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 12:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 13:  	saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 14:  	saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 15:  	topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 16:  	saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 17:  	topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 18:  	saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 19:  	saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  default:  	Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  	break;  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: switch (flNum) {  case 1:  	topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 2:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 3:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 4:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 5:  	topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 6:  	saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 7:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 8:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 9:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 10:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 11:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 12:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 13:  	saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 14:  	saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 15:  	topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 16:  	saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 17:  	topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 18:  	saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 19:  	saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  default:  	Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  	break;  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: switch (flNum) {  case 1:  	topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 2:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 3:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 4:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 5:  	topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 6:  	saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 7:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 8:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 9:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 10:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 11:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 12:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 13:  	saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 14:  	saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 15:  	topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 16:  	saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 17:  	topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 18:  	saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 19:  	saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  default:  	Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  	break;  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: switch (flNum) {  case 1:  	topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 2:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 3:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 4:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 5:  	topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 6:  	saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 7:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 8:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 9:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 10:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 11:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 12:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 13:  	saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 14:  	saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 15:  	topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 16:  	saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 17:  	topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 18:  	saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 19:  	saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  default:  	Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  	break;  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: switch (flNum) {  case 1:  	topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 2:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 3:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 4:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 5:  	topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 6:  	saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 7:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 8:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 9:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 10:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 11:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 12:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 13:  	saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 14:  	saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 15:  	topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 16:  	saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 17:  	topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 18:  	saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 19:  	saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  default:  	Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  	break;  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: switch (flNum) {  case 1:  	topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 2:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 3:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 4:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 5:  	topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 6:  	saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 7:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 8:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 9:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 10:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 11:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 12:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 13:  	saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 14:  	saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 15:  	topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 16:  	saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 17:  	topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 18:  	saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 19:  	saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  default:  	Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  	break;  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: switch (flNum) {  case 1:  	topicSender.SendMessage (MakeIdentifyPillarsForPutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 2:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakePutFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 3:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 4:  	// ---------  Har fjernet httpsTingen  	saSender.SendMessage (MakeGetFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 5:  	topicSender.SendMessage (MakeIdentifyPillarsForDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 6:  	saSender.SendMessage (MakeDeleteFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 7:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 8:  	topicSender.SendMessage (MakeIdentifyPillarsForGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 9:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 10:  	saSender.SendMessage (MakeGetFileIDsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	break;  case 11:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 12:  	topicSender.SendMessage (MakeIdentifyPillarsForGetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 13:  	saSender.SendMessage (GetChecksumsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 14:  	saSender.SendMessage (GetChecksumsRequest (session' colId' "AllFileIDs"' pillarApiSettings.COLLECTION_DESTINATION));  	break;  case 15:  	topicSender.SendMessage (MakeIdentifyPillarsForReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 16:  	saSender.SendMessage (MakeReplaceFileRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.PILLAR_ID));  	Console.WriteLine ("HTTP er overstået: " + HttpServer.HttpStart (@"http://127.0.0.1:443/"' file));  	break;  case 17:  	topicSender.SendMessage (MakeIdentifyContributorsForGetAuditTrailsRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 18:  	saSender.SendMessage (MakeGetAuditTrailsRequest (session' colId' file' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  case 19:  	saSender.SendMessage (MakeGetStatusRequest (session' colId' pillarApiSettings.COLLECTION_DESTINATION' pillarApiSettings.SA_PILLAR_QUEUE));  	break;  default:  	Console.WriteLine ("Beskedtypen er ikke oprettet if systemet endnu");  	break;  }  
Magic Number,PseudoKlient,PseudoKlient,C:\repos\raknasa_BMPPillar\PseudoKlient\PseudoKlient.cs,Main,The following statement contains a magic number: Thread.Sleep (1000);  
