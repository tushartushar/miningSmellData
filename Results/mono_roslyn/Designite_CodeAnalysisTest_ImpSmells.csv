Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityComparerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityComparerTests.cs,IgnoreOrFwUnifyVersion,The method has 105 lines of code.
Long Method,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TryParseDisplayName_QuotingAndEscaping,The method has 151 lines of code.
Complex Method,Microsoft.CodeAnalysis,FusionAssemblyIdentity,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Helpers\GlobalAssemblyCacheHelpers\FusionAssemblyIdentity.cs,ToAssemblyNameObject,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.CodeAnalysis,FusionAssemblyIdentity,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Helpers\GlobalAssemblyCacheHelpers\FusionAssemblyIdentity.cs,GetBestMatch,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.CodeAnalysis.UnitTests,MetadataHelpersTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataHelpersTests.cs,GenerateTypeNamesToDecode,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,BasicResources,Cyclomatic complexity of the method is 8
Long Parameter List,Microsoft.CodeAnalysis.UnitTests,FileUtilitiesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileUtilitiesTests.cs,TestPath,The method has 5 parameters. Parameters: path' basePath' baseDirectory' searchPaths' expected
Long Parameter List,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityComparerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityComparerTests.cs,TestMatch,The method has 9 parameters. Parameters: displayName1' displayName2' match' fusionMatch' ignoreVersion' partial' unificationApplied' fusionUnificationApplied' policyPath
Long Parameter List,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion,The method has 6 parameters. Parameters: value' major' minor' build' revision' expectedParts
Long Parameter List,Microsoft.CodeAnalysis.UnitTests,FusionAssemblyIdentityComparer,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityComparer.cs,CompareAssemblyIdentity,The method has 5 parameters. Parameters: fullName1' fullName2' ignoreVersion' policy' unificationApplied
Long Parameter List,Microsoft.CodeAnalysis.UnitTests,FusionAssemblyIdentityComparer,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityComparer.cs,DefaultModelCompareAssemblyIdentity,The method has 7 parameters. Parameters: identity1' isUnified1' identity2' isUnified2' areEquivalent' result' asmConfigCookie
Long Parameter List,Microsoft.CodeAnalysis.UnitTests,FusionAssemblyIdentityComparer,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityComparer.cs,CompareAssemblyIdentityWithConfig,The method has 7 parameters. Parameters: identity1' isUnified1' identity2' isUnified2' asmConfigCookie' areEquivalent' result
Long Parameter List,Microsoft.CodeAnalysis.UnitTests,MetadataHelpersTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataHelpersTests.cs,VerifyDecodedTypeName,The method has 6 parameters. Parameters: decodedName' expectedTopLevelType' expectedAssemblyName' expectedNestedTypes' expectedTypeArguments' expectedArrayRanks
Long Parameter List,Microsoft.CodeAnalysis.UnitTests,MetadataHelpersTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataHelpersTests.cs,DecodeTypeNameAndVerify,The method has 6 parameters. Parameters: nameToDecode' expectedTopLevelType' expectedAssemblyName' expectedNestedTypes' expectedTypeArguments' expectedArrayRanks
Long Parameter List,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,CheckLine,The method has 6 parameters. Parameters: text' lineNumber' start' length' newlineLength' lineText
Long Parameter List,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,Verify,The method has 6 parameters. Parameters: source' language' analyzers' diagnostics' continueOnAnalyzerException' rootNamespace
Long Parameter List,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageTargetSymbolResolverTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageTargetSymbolResolverTests.cs,VerifyResolution,The method has 5 parameters. Parameters: markup' fxCopFullyQualifiedNames' scope' language' rootNamespace
Long Parameter List,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageTargetSymbolResolverTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageTargetSymbolResolverTests.cs,VerifyNoResolution,The method has 5 parameters. Parameters: source' fxCopFullyQualifiedNames' scope' language' rootNamespace
Long Identifier,Microsoft.CodeAnalysis,FusionAssemblyIdentity,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Helpers\GlobalAssemblyCacheHelpers\FusionAssemblyIdentity.cs,GetDisplayName,The length of the parameter characterCountIncludingTerminator is 33.
Long Identifier,Microsoft.CodeAnalysis.UnitTests.Diagnostics,DiagnosticLocalizationTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\DiagnosticLocalizationTests.cs,TestDiagnosticLocalization,The length of the parameter enuLocalizedStringWithArguments is 31.
Long Identifier,Microsoft.CodeAnalysis.UnitTests.Diagnostics,DiagnosticLocalizationTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\DiagnosticLocalizationTests.cs,TestDiagnosticLocalization,The length of the parameter arLocalizedStringWithArguments is 30.
Long Statement,Microsoft.CodeAnalysis,FusionAssemblyIdentity,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Helpers\GlobalAssemblyCacheHelpers\FusionAssemblyIdentity.cs,ToAssemblyNameObject,The length of the statement  "                    throw new ArgumentException(Microsoft.CodeAnalysis.Scripting.ScriptingResources.InvalidCharactersInAssemblyName' "name"); " is 121.
Long Statement,Microsoft.CodeAnalysis,FusionAssemblyIdentity,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Helpers\GlobalAssemblyCacheHelpers\FusionAssemblyIdentity.cs,ToAssemblyNameObject,The length of the statement  "                    throw new ArgumentException(Microsoft.CodeAnalysis.Scripting.ScriptingResources.InvalidCharactersInAssemblyName' "name"); " is 121.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AnalyzerFileReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AnalyzerFileReferenceTests.cs,AssemblyLoading,The length of the statement  "            var alphaDll = directory.CreateFile("Alpha.dll").WriteAllBytes(TestResources.AssemblyLoadTests.AssemblyLoadTests.Alpha); " is 120.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AnalyzerFileReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AnalyzerFileReferenceTests.cs,AssemblyLoading,The length of the statement  "            var gammaDll = directory.CreateFile("Gamma.dll").WriteAllBytes(TestResources.AssemblyLoadTests.AssemblyLoadTests.Gamma); " is 120.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AnalyzerFileReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AnalyzerFileReferenceTests.cs,AssemblyLoading,The length of the statement  "            var deltaDll = directory.CreateFile("Delta.dll").WriteAllBytes(TestResources.AssemblyLoadTests.AssemblyLoadTests.Delta); " is 120.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AnalyzerFileReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AnalyzerFileReferenceTests.cs,TestMetadataParse,The length of the statement  "            Assert.Contains("Microsoft.CodeAnalysis.UnitTests.AnalyzerFileReferenceTests+TestAnalyzerCS"' analyzerTypeNameMap[LanguageNames.CSharp]); " is 137.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AnalyzerFileReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AnalyzerFileReferenceTests.cs,TestMetadataParse,The length of the statement  "            Assert.Contains("Microsoft.CodeAnalysis.UnitTests.AnalyzerFileReferenceTests+TestAnalyzer"' analyzerTypeNameMap[LanguageNames.CSharp]); " is 135.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AnalyzerFileReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AnalyzerFileReferenceTests.cs,TestMetadataParse,The length of the statement  "            Assert.Contains("Microsoft.CodeAnalysis.UnitTests.AnalyzerFileReferenceTests+SomeType+NestedAnalyzer"' analyzerTypeNameMap[LanguageNames.CSharp]); " is 146.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AnalyzerFileReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AnalyzerFileReferenceTests.cs,TestMetadataParse,The length of the statement  "            Assert.DoesNotContain("Microsoft.CodeAnalysis.UnitTests.Test.NotAnAnalyzer"' analyzerTypeNameMap[LanguageNames.CSharp]); " is 120.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AnalyzerFileReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AnalyzerFileReferenceTests.cs,TestMetadataParse,The length of the statement  "            Assert.Contains("Microsoft.CodeAnalysis.UnitTests.AnalyzerFileReferenceTests+TestAnalyzerVB"' analyzerTypeNameMap[LanguageNames.VisualBasic]); " is 142.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AnalyzerFileReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AnalyzerFileReferenceTests.cs,TestMetadataParse,The length of the statement  "            Assert.Contains("Microsoft.CodeAnalysis.UnitTests.AnalyzerFileReferenceTests+TestAnalyzer"' analyzerTypeNameMap[LanguageNames.VisualBasic]); " is 140.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AnalyzerFileReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AnalyzerFileReferenceTests.cs,TestMetadataParse,The length of the statement  "            Assert.Contains("Microsoft.CodeAnalysis.UnitTests.AnalyzerFileReferenceTests+SomeType+NestedAnalyzer"' analyzerTypeNameMap[LanguageNames.VisualBasic]); " is 151.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AnalyzerFileReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AnalyzerFileReferenceTests.cs,TestMetadataParse,The length of the statement  "            Assert.Contains("Microsoft.CodeAnalysis.UnitTests.OpenGenericAnalyzer`1"' analyzerTypeNameMap[LanguageNames.VisualBasic]); " is 122.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AnalyzerFileReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AnalyzerFileReferenceTests.cs,TestMetadataParse,The length of the statement  "            Assert.DoesNotContain("Microsoft.CodeAnalysis.UnitTests.Test.NotAnAnalyzer"' analyzerTypeNameMap[LanguageNames.VisualBasic]); " is 125.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AnalyzerFileReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AnalyzerFileReferenceTests.cs,TestLoadErrors1,The length of the statement  "            var failedTypes = errors.Where(e => e.ErrorCode == AnalyzerLoadFailureEventArgs.FailureErrorCode.UnableToCreateAnalyzer).Select(e => e.TypeName); " is 145.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AnalyzerFileReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AnalyzerFileReferenceTests.cs,TestLoadErrors3,The length of the statement  "            var alphaDll = directory.CreateFile("Alpha.dll").WriteAllBytes(TestResources.AssemblyLoadTests.AssemblyLoadTests.Alpha); " is 120.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AnalyzerFileReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AnalyzerFileReferenceTests.cs,TestFailedLoadDoesntCauseNoAnalyzersWarning,The length of the statement  "            var analyzerDll = directory.CreateFile("Alpha.dll").WriteAllBytes(TestResources.AnalyzerTests.AnalyzerTests.FaultyAnalyzer); " is 124.
Long Statement,Microsoft.CodeAnalysis.UnitTests,EmitOptionsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\EmitOptionsTests.cs,WithXxx,The length of the statement  "            TestProperty((old' value) => old.WithHighEntropyVirtualAddressSpace(value)' opt => opt.HighEntropyVirtualAddressSpace' true); " is 125.
Long Statement,Microsoft.CodeAnalysis.UnitTests,EmitOptionsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\EmitOptionsTests.cs,WithXxx,The length of the statement  "            TestProperty((old' value) => old.WithSubsystemVersion(value)' opt => opt.SubsystemVersion' SubsystemVersion.Windows2000); " is 121.
Long Statement,Microsoft.CodeAnalysis.UnitTests,EmitOptionsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\EmitOptionsTests.cs,WithXxx,The length of the statement  "            TestProperty((old' value) => old.WithDebugInformationFormat(value)' opt => opt.DebugInformationFormat' (DebugInformationFormat)2); " is 130.
Long Statement,Microsoft.CodeAnalysis.UnitTests,LargeEncodedTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\LargeEncodedTextTests.cs,CreateSourceText,The length of the statement  "            return LargeEncodedText.Decode(stream' encoding ?? Encoding.UTF8' SourceHashAlgorithm.Sha1' throwIfBinaryDetected: true); " is 121.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CachingLookupTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CachingLookupTests.cs,Values,The length of the statement  "                    where string.Equals(GetKey(n' ignoreCase)' key' ignoreCase ? StringComparison.OrdinalIgnoreCase : StringComparison.Ordinal) " is 123.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CommonCommandLineParserTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonCommandLineParserTests.cs,TestRuleSetParsingDuplicateRule,The length of the statement  "            VerifyRuleSetError(source' () => string.Format(CodeAnalysisResources.RuleSetSchemaViolation' "There is a duplicate key sequence 'CA1012' for the 'UniqueRuleName' key or unique identity constraint.")); " is 200.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CommonCommandLineParserTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonCommandLineParserTests.cs,TestRuleSetParsingDuplicateRule2,The length of the statement  "            VerifyRuleSetError(source' () => string.Format(CodeAnalysisResources.RuleSetHasDuplicateRules' "CA1012"' "Error"' "Warn")' locSpecific: false); " is 143.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CommonCommandLineParserTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonCommandLineParserTests.cs,TestRuleSetParsingIncludeAll3,The length of the statement  "            VerifyRuleSetError(source' () => string.Format(CodeAnalysisResources.RuleSetSchemaViolation' "The 'Action' attribute is invalid - The value 'Default' is invalid according to its datatype 'TIncludeAllAction' - The Enumeration constraint failed.")); " is 247.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CommonCommandLineParserTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonCommandLineParserTests.cs,TestRuleSetParsingRulesMissingAttribute1,The length of the statement  "            VerifyRuleSetError(source' () => string.Format(CodeAnalysisResources.RuleSetSchemaViolation' "The required attribute 'Id' is missing.")); " is 137.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CommonCommandLineParserTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonCommandLineParserTests.cs,TestRuleSetParsingRulesMissingAttribute2,The length of the statement  "            VerifyRuleSetError(source' () => string.Format(CodeAnalysisResources.RuleSetSchemaViolation' "The required attribute 'Action' is missing.")); " is 141.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CommonCommandLineParserTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonCommandLineParserTests.cs,TestRuleSetParsingRulesMissingAttribute3,The length of the statement  "            VerifyRuleSetError(source' () => string.Format(CodeAnalysisResources.RuleSetSchemaViolation' "The required attribute 'AnalyzerId' is missing.")); " is 145.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CommonCommandLineParserTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonCommandLineParserTests.cs,TestRuleSetParsingRulesMissingAttribute4,The length of the statement  "            VerifyRuleSetError(source' () => string.Format(CodeAnalysisResources.RuleSetSchemaViolation' "The required attribute 'RuleNamespace' is missing.")); " is 148.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CommonCommandLineParserTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonCommandLineParserTests.cs,TestRuleSetParsingRulesMissingAttribute5,The length of the statement  "            VerifyRuleSetError(source' () => string.Format(CodeAnalysisResources.RuleSetSchemaViolation' "The required attribute 'ToolsVersion' is missing.")); " is 147.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CommonCommandLineParserTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonCommandLineParserTests.cs,TestRuleSetParsingRulesMissingAttribute6,The length of the statement  "            VerifyRuleSetError(source' () => string.Format(CodeAnalysisResources.RuleSetSchemaViolation' "The required attribute 'Name' is missing.")); " is 139.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CommonCommandLineParserTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonCommandLineParserTests.cs,TestRuleSetParsingRules2,The length of the statement  "            VerifyRuleSetError(source' () => string.Format(CodeAnalysisResources.RuleSetSchemaViolation' "The 'Action' attribute is invalid - The value 'Default' is invalid according to its datatype 'TRuleAction' - The Enumeration constraint failed.")); " is 241.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CommonCommandLineParserTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonCommandLineParserTests.cs,TestRuleSetInclude1,The length of the statement  "            VerifyRuleSetError(source' () => string.Format(CodeAnalysisResources.InvalidRuleSetInclude' "foo.ruleset"' string.Format(CodeAnalysisResources.FailedToResolveRuleSetName' "foo.ruleset"))' otherSources: new string[] { "" }); " is 223.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CommonCommandLineParserTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonCommandLineParserTests.cs,TestRuleSetIncludeError,The length of the statement  "                    Assert.Contains(string.Format(CodeAnalysisResources.InvalidRuleSetInclude' newFile.Path' string.Format(CodeAnalysisResources.RuleSetSchemaViolation' ""))' e.Message); " is 166.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CommonSyntaxTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonSyntaxTests.cs,TestTrackNodes,The length of the statement  "            var exprB = expr.DescendantNodes().OfType<CSharp.Syntax.IdentifierNameSyntax>().First(n => n.Identifier.ToString() == "b"); " is 123.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CommonSyntaxTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonSyntaxTests.cs,TestTrackNodesWithDuplicateIdAnnotations,The length of the statement  "            var exprB = expr.DescendantNodes().OfType<CSharp.Syntax.IdentifierNameSyntax>().First(n => n.Identifier.ToString() == "b"); " is 123.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CommonSyntaxTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonSyntaxTests.cs,TestTrackNodesWithDuplicateIdAnnotations,The length of the statement  "                        computeReplacementNode: (node' rewritten) => CSharp.SyntaxFactory.ParenthesizedExpression(rewritten).WithAdditionalAnnotations(annotation)); " is 140.
Long Statement,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,TestToString,The length of the statement  "            Assert.Equal("C:\\foo.cs: (1'2)-(3'5)"' new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)).ToString()); " is 139.
Long Statement,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,TestToString,The length of the statement  "            Assert.Equal("\\server\foo.vb: (1'2)-(3'5)"' new FileLinePositionSpan("\\server\foo.vb"' new LinePosition(1' 2)' new LinePosition(3' 5)).ToString()); " is 149.
Long Statement,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,TestToString,The length of the statement  "            Assert.Equal("~\foo.huh: (1'2)-(3'5)"' new FileLinePositionSpan("~\foo.huh"' new LinePosition(1' 2)' new LinePosition(3' 5)).ToString()); " is 137.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataFileReferenceResolverTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataFileReferenceResolverTests.cs,ResolveMetadataFile1,The length of the statement  "            path = resolver.ResolveReference(fileName' baseFilePath: PathUtilities.CombineAbsoluteAndRelativePaths(dir' "foo.csx")); " is 120.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataFileReferenceResolverTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataFileReferenceResolverTests.cs,ResolveMetadataFile2,The length of the statement  "            var path = resolver.ResolveReference(fileName' baseFilePath: PathUtilities.CombineAbsoluteAndRelativePaths(dir' "foo.csx")); " is 124.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityComparerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityComparerTests.cs,TestMatch,The length of the statement  "                var fusionResult1 = FusionAssemblyIdentityComparer.CompareAssemblyIdentity(displayName1' displayName2' ignoreVersion' policy: fusionPolicy' unificationApplied: out fusionUnificationApplied1); " is 191.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityComparerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityComparerTests.cs,Retargetable_Reference,The length of the statement  "                "System.Windows.Forms.DataGrid' Version=1.0.5000.0' Culture=neutral' PublicKeyToken=969db8053d3322ac' Retargetable=Yes"' " is 120.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityComparerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityComparerTests.cs,Retargetable_Reference_Portable,The length of the statement  "                "System.ComponentModel.DataAnnotations' Version=2.0.5.0' Culture=neutral' PublicKeyToken=ddd0da4d3e678217' Retargetable=Yes"' " is 125.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityComparerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityComparerTests.cs,Retargetable_Reference_Portable,The length of the statement  "                "System.ComponentModel.DataAnnotations' Version=2.0.5.0' Culture=neutral' PublicKeyToken=ddd0da4d3e678217' Retargetable=Yes"' " is 125.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityComparerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityComparerTests.cs,Retargetable_Reference_Portable,The length of the statement  "                "System.ComponentModel.DataAnnotations' Version=2.0.5.0' Culture=neutral' PublicKeyToken=ddd0da4d3e678217' Retargetable=Yes"' " is 125.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityComparerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityComparerTests.cs,Retargetable_Reference_Portable,The length of the statement  "                "System.ComponentModel.DataAnnotations' Version=2.0.5.0' Culture=neutral' PublicKeyToken=ddd0da4d3e678217' Retargetable=Yes"' " is 125.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityComparerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityComparerTests.cs,Retargetable_RefAndDef,The length of the statement  "                "System.Windows.Forms.DataGrid' Version=1.0.5000.0' Culture=neutral' PublicKeyToken=969db8053d3322ac' Retargetable=Yes"' " is 120.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityComparerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityComparerTests.cs,Retargetable_RefAndDef,The length of the statement  "                "System.Windows.Forms.DataGrid' Version=1.0.5500.0' Culture=neutral' PublicKeyToken=969db8053d3322ac' Retargetable=Yes"' " is 120.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,GetDisplayName,The length of the statement  "            id = new AssemblyIdentity("foo"' publicKeyOrToken: new byte[] { 0x01' 0x23' 0x45' 0x67' 0x89' 0xAB' 0xCD' 0xEF }.AsImmutableOrNull()); " is 134.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,GetDisplayName,The length of the statement  "            Assert.Equal("foo' Version=0.0.0.0' Culture=neutral' PublicKeyToken=0123456789abcdef"' id.GetDisplayName()' StringComparer.OrdinalIgnoreCase); " is 142.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,GetDisplayName,The length of the statement  "            Assert.Equal("foo' Version=0.0.0.0' Culture=neutral' PublicKeyToken=null' ContentType=WindowsRuntime"' id.GetDisplayName()); " is 124.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TryParseDisplayName,The length of the statement  "            TestParseDisplayName("  \"fo'o\"  ' " + V + "ersion=1.0.0.0\t' \rCulture=zz-ZZ\n' PublicKeyToken=" + StrPublicKeyToken1' " is 120.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TryParseDisplayName,The length of the statement  "                new AssemblyIdentity("fo'o"' new Version(1' 0' 0' 0)' "zz-ZZ"' RoPublicKeyToken1' hasPublicKey: false' isRetargetable: false' contentType: AssemblyContentType.Default)' " is 168.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TryParseDisplayName,The length of the statement  "                AssemblyIdentity.TryParseDisplayName("foo' Version=1.0.0.0' Culture=en-US' Retargetable=Yes' ContentType=WindowsRuntime' PublicKeyToken=" + StrPublicKeyToken1' out id)); " is 169.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TryParseDisplayName,The length of the statement  "                new AssemblyIdentity("foo"' new Version(1' 0' 0' 0)' "en-US"' RoPublicKeyToken1' hasPublicKey: false' isRetargetable: true)' " is 124.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The length of the statement  "            TestParseVersion("1.2.3"' 1' 2' 3' 0' AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionBuild); " is 148.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The length of the statement  "            TestParseVersion("1.2.3."' 1' 2' 3' 0' AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionBuild); " is 149.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The length of the statement  "            TestParseVersion("1.2..4"' 1' 2' 0' 4' AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionRevision); " is 152.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The length of the statement  "            TestParseVersion("1.2.3.4"' 1' 2' 3' 4' AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionBuild | AssemblyIdentityParts.VersionRevision); " is 190.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The length of the statement  "                AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionBuild | AssemblyIdentityParts.VersionRevision); " is 150.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The length of the statement  "            TestParseVersion("1.2.*"' 1' 2' 0' 0' AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionBuild); " is 148.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TryParseDisplayName_Keys,The length of the statement  "            //    expected: new AssemblyIdentity("foo"' hasPublicKey: true' publicKeyOrToken: new byte[] { 0' 0' 0' 0' 0' 0' 0' 0' 4' 0' 0' 0' 0' 0' 0' 0 }.AsImmutable())); " is 160.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TryParseDisplayName_Keys,The length of the statement  "            TestParseDisplayName("foo' Culture=neutral' Version=1.0.0.0' PublicKey=" + StrPublicKey1 + "' PublicKeyToken=" + StrPublicKeyToken1' " is 132.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TryParseDisplayName_Keys,The length of the statement  "                new AssemblyIdentity("foo"' new Version(1' 0' 0' 0)' publicKeyOrToken: RoPublicKey1' hasPublicKey: true)' NVC | AssemblyIdentityParts.PublicKeyOrToken); " is 152.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TryParseDisplayName_Keys,The length of the statement  "            TestParseDisplayName("foo' Culture=neutral' Version=1.0.0.0' PublicKey=" + StrPublicKey1 + "' PublicKeyToken=1111111111111111"' null); " is 134.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TryParseDisplayName_ContentType,The length of the statement  "                new AssemblyIdentity("foo"' new Version(1' 0' 0' 1)' contentType: AssemblyContentType.WindowsRuntime)' NV | AssemblyIdentityParts.ContentType); " is 143.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TryParseDisplayName_Retargetable,The length of the statement  "            TestParseDisplayName("foo' Version=1.0.0.0' Culture=neutral' PublicKeyToken=" + StrPublicKeyToken1 + "' Retargetable=yEs"' " is 122.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TryParseDisplayName_Retargetable,The length of the statement  "            TestParseDisplayName("foo' Version=1.0.0.0' Culture=neutral' PublicKeyToken=" + StrPublicKeyToken1 + "' Retargetable=*"' " is 120.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TryParseDisplayName_Retargetable,The length of the statement  "            TestParseDisplayName("foo' Version=1.0.0.0' Culture=neutral' PublicKeyToken=" + StrPublicKeyToken1 + "' retargetable=NO"' " is 121.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TryParseDisplayName_Retargetable,The length of the statement  "            TestParseDisplayName("foo' Version=1.0.0.0' Culture=neutral' PublicKeyToken=" + StrPublicKeyToken1 + "' Retargetable=Bar"' " is 122.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,Equality,The length of the statement  "            var id1 = new AssemblyIdentity("Foo"' new Version(1' 0' 0' 0)' ""' RoPublicKey1' hasPublicKey: true' isRetargetable: false); " is 124.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,Equality,The length of the statement  "            var id11 = new AssemblyIdentity("Foo"' new Version(1' 0' 0' 0)' ""' RoPublicKey1' hasPublicKey: true' isRetargetable: false); " is 125.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,Equality,The length of the statement  "            var id2 = new AssemblyIdentity("Foo"' new Version(1' 0' 0' 0)' ""' RoPublicKeyToken1' hasPublicKey: false' isRetargetable: false); " is 130.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,Equality,The length of the statement  "            var id22 = new AssemblyIdentity("Foo"' new Version(1' 0' 0' 0)' ""' RoPublicKeyToken1' hasPublicKey: false' isRetargetable: false); " is 131.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,Equality,The length of the statement  "            var id3 = new AssemblyIdentity("Foo!"' new Version(1' 0' 0' 0)' ""' RoPublicKeyToken1' hasPublicKey: false' isRetargetable: false); " is 131.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,Equality,The length of the statement  "            var id4 = new AssemblyIdentity("Foo"' new Version(1' 0' 1' 0)' ""' RoPublicKeyToken1' hasPublicKey: false' isRetargetable: false); " is 130.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,Equality,The length of the statement  "            var id5 = new AssemblyIdentity("Foo"' new Version(1' 0' 0' 0)' "en-US"' RoPublicKeyToken1' hasPublicKey: false' isRetargetable: false); " is 135.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,Equality,The length of the statement  "            var id6 = new AssemblyIdentity("Foo"' new Version(1' 0' 0' 0)' ""' default(ImmutableArray<byte>)' hasPublicKey: false' isRetargetable: false); " is 142.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,Equality,The length of the statement  "            var id7 = new AssemblyIdentity("Foo"' new Version(1' 0' 0' 0)' ""' RoPublicKey1' hasPublicKey: true' isRetargetable: true); " is 123.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,Equality,The length of the statement  "            var win1 = new AssemblyIdentity("Foo"' new Version(1' 0' 0' 0)' ""' RoPublicKey1' hasPublicKey: true' isRetargetable: false' contentType: AssemblyContentType.WindowsRuntime); " is 174.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,Equality,The length of the statement  "            var win2 = new AssemblyIdentity("Bar"' new Version(1' 0' 0' 0)' ""' RoPublicKey1' hasPublicKey: true' isRetargetable: false' contentType: AssemblyContentType.WindowsRuntime); " is 174.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,Equality,The length of the statement  "            var win3 = new AssemblyIdentity("Foo"' new Version(1' 0' 0' 0)' ""' RoPublicKey1' hasPublicKey: true' isRetargetable: false' contentType: AssemblyContentType.WindowsRuntime); " is 174.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,FromAssemblyDefinition,The length of the statement  "            name.Flags = AssemblyNameFlags.Retargetable | AssemblyNameFlags.PublicKey | AssemblyNameFlags.EnableJITcompileOptimizer | AssemblyNameFlags.EnableJITcompileTracking; " is 165.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,Properties,The length of the statement  "            id = new AssemblyIdentity("Foo"' publicKeyOrToken: RoPublicKey1' hasPublicKey: true' contentType: AssemblyContentType.WindowsRuntime); " is 134.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,IsStrongName,The length of the statement  "            var id1 = new AssemblyIdentity("Foo"' new Version(1' 0' 0' 0)' ""' RoPublicKey1' hasPublicKey: true' isRetargetable: false); " is 124.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,IsStrongName,The length of the statement  "            var id2 = new AssemblyIdentity("Foo"' new Version(1' 0' 0' 0)' ""' RoPublicKeyToken1' hasPublicKey: false' isRetargetable: false); " is 130.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,IsStrongName,The length of the statement  "            var id3 = new AssemblyIdentity("Foo"' new Version(1' 0' 0' 0)' ""' ImmutableArray.Create<byte>()' hasPublicKey: false' isRetargetable: false); " is 142.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,IsStrongName,The length of the statement  "            var id4 = new AssemblyIdentity("Foo"' new Version(1' 0' 0' 0)' ""' ImmutableArray.Create<byte>()' hasPublicKey: false' isRetargetable: false' contentType: AssemblyContentType.WindowsRuntime); " is 191.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,IsStrongName,The length of the statement  "            var id5 = new AssemblyIdentity("Foo"' new Version(1' 0' 0' 0)' ""' RoPublicKeyToken1' hasPublicKey: false' isRetargetable: false' contentType: AssemblyContentType.WindowsRuntime); " is 179.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,InvalidConstructorArgs,The length of the statement  "                () => new AssemblyIdentity("Foo"' new Version(1' 0' 0' 0)' ""' ImmutableArray.Create<byte>()' hasPublicKey: true' isRetargetable: false)); " is 138.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,InvalidConstructorArgs,The length of the statement  "                () => new AssemblyIdentity("Foo"' new Version(1' 0' 0' 0)' ""' new byte[] { 1' 2' 3 }.AsImmutableOrNull()' hasPublicKey: false' isRetargetable: false)); " is 152.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,InvalidConstructorArgs,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => new AssemblyIdentity("Foo"' contentType: (AssemblyContentType)Int32.MaxValue)); " is 128.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,InvalidConstructorArgs,The length of the statement  "                new AssemblyIdentity("Foo"' publicKeyOrToken: RoPublicKey1' hasPublicKey: true' isRetargetable: true' contentType: AssemblyContentType.WindowsRuntime)); " is 152.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The length of the statement  "            var id = new AssemblyIdentity("Foo"' new Version(1' 2' 3' 4)' "en-US"' RoPublicKey1' hasPublicKey: true' isRetargetable: true' contentType: AssemblyContentType.Default' noThrow: true); " is 184.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The length of the statement  "            id = new AssemblyIdentity("Foo"' new Version(1' 2' 3' 4)' null' ImmutableArray.Create<byte>()' hasPublicKey: false' isRetargetable: false' contentType: (AssemblyContentType)2' noThrow: true); " is 191.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The length of the statement  "            id = new AssemblyIdentity("Foo"' new Version(1' 2' 3' 4)' null' ImmutableArray.Create<byte>()' hasPublicKey: false' isRetargetable: true' contentType: AssemblyContentType.WindowsRuntime' noThrow: true); " is 202.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The length of the statement  "            //EDMAURER the compiler doesn't enforce that the culture be anything in particular. AssemblyIdentity should preserve user input even if it " is 138.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The length of the statement  "            id = new AssemblyIdentity("Foo"' new Version(1' 2' 3' 4)' "blah'"' ImmutableArray.Create<byte>()' hasPublicKey: false' isRetargetable: false' contentType: AssemblyContentType.Default' noThrow: true); " is 199.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The length of the statement  "            id = new AssemblyIdentity("Foo"' new Version(1' 2' 3' 4)' "*"' ImmutableArray.Create<byte>()' hasPublicKey: false' isRetargetable: false' contentType: AssemblyContentType.Default' noThrow: true); " is 195.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,FullKeyAndToken,The length of the statement  "            int hr = FusionAssemblyIdentityComparer.DefaultModelCompareAssemblyIdentity(displayPkt' false' displayPk' false' out equivalent' out result' IntPtr.Zero); " is 154.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,FullKeyAndToken,The length of the statement  "            hr = FusionAssemblyIdentityComparer.DefaultModelCompareAssemblyIdentity(displayPk' false' displayPkt' false' out equivalent' out result' IntPtr.Zero); " is 150.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyMetadataTests.cs,Ctor_Errors,The length of the statement  "            Assert.Throws<ArgumentException>(() => AssemblyMetadata.Create(new List<ModuleMetadata>(new ModuleMetadata[] { m1.Copy()' m2.Copy()' m3.Copy() }))); " is 148.
Long Statement,Microsoft.CodeAnalysis.UnitTests,AssemblyMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyMetadataTests.cs,IncorrectCustomAssemblyTableSize_TooManyMethodSpecs,The length of the statement  "            var metadata = AssemblyMetadata.CreateFromImage(TestResources.MetadataTests.Invalid.IncorrectCustomAssemblyTableSize_TooManyMethodSpecs); " is 137.
Long Statement,Microsoft.CodeAnalysis.UnitTests,FusionAssemblyIdentityComparer,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityComparer.cs,CompareAssemblyIdentity,The length of the statement  "            int hr = DefaultModelCompareAssemblyIdentity(fullName1' ignoreVersion' fullName2' ignoreVersion' out equivalent' out result' asmConfigCookie); " is 142.
Long Statement,Microsoft.CodeAnalysis.UnitTests,FusionAssemblyIdentityComparer,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityComparer.cs,CompareAssemblyIdentity,The length of the statement  "                    return equivalent ? AssemblyIdentityComparer.ComparisonResult.Equivalent : AssemblyIdentityComparer.ComparisonResult.NotEquivalent; " is 131.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataHelpersTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataHelpersTests.cs,GenerateTypeNamesToDecode,The length of the statement  "                    string[] genericParamsToDecode = GenerateTypeNamesToDecode(typeNameConfig.genericParamsConfig' out expectedTypeArguments); " is 122.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataHelpersTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataHelpersTests.cs,GenerateTypeNamesToDecode,The length of the statement  "                expectedDecodeNames[index] = new MetadataHelpers.AssemblyQualifiedTypeName(expectedTopLevelTypeName' expectedNestedTypes' expectedTypeArguments' expectedArrayRanks' expectedAssemblyName); " is 187.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataHelpersTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataHelpersTests.cs,DecodeTypeNameAndVerify,The length of the statement  "            VerifyDecodedTypeName(decodedName' expectedTopLevelType' expectedAssemblyName' expectedNestedTypes' expectedTypeArguments' expectedArrayRanks); " is 143.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferencePropertiesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferencePropertiesTests.cs,Constructor,The length of the statement  "            m = new MetadataReferenceProperties(MetadataImageKind.Assembly' aliases: ImmutableArray.Create("\\/[.'\":_)??\t\n*#$@^%*&)"' "foo")' embedInteropTypes: true); " is 158.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferencePropertiesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferencePropertiesTests.cs,Constructor,The length of the statement  "            Assert.Equal(MetadataReferenceProperties.Module' new MetadataReferenceProperties(MetadataImageKind.Module' ImmutableArray<string>.Empty' false)); " is 145.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferencePropertiesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferencePropertiesTests.cs,Constructor,The length of the statement  "            Assert.Equal(MetadataReferenceProperties.Assembly' new MetadataReferenceProperties(MetadataImageKind.Assembly' ImmutableArray<string>.Empty' false)); " is 149.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferencePropertiesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferencePropertiesTests.cs,Constructor_Errors,The length of the statement  "            Assert.Throws<ArgumentException>(() => new MetadataReferenceProperties(MetadataImageKind.Module' ImmutableArray.Create("blah"))); " is 129.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferencePropertiesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferencePropertiesTests.cs,Constructor_Errors,The length of the statement  "            Assert.Throws<ArgumentException>(() => new MetadataReferenceProperties(MetadataImageKind.Module' embedInteropTypes: true)); " is 123.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferencePropertiesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferencePropertiesTests.cs,Constructor_Errors,The length of the statement  "            Assert.Throws<ArgumentException>(() => new MetadataReferenceProperties(MetadataImageKind.Module' ImmutableArray.Create(""))); " is 125.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferencePropertiesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferencePropertiesTests.cs,Constructor_Errors,The length of the statement  "            Assert.Throws<ArgumentException>(() => new MetadataReferenceProperties(MetadataImageKind.Module' ImmutableArray.Create("x\0x"))); " is 129.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferencePropertiesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferencePropertiesTests.cs,WithXxx,The length of the statement  "            var p = new MetadataReferenceProperties(MetadataImageKind.Assembly' ImmutableArray.Create("a")' embedInteropTypes: false); " is 122.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferencePropertiesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferencePropertiesTests.cs,WithXxx,The length of the statement  "            Assert.Equal(p.WithAliases(null)' new MetadataReferenceProperties(MetadataImageKind.Assembly' ImmutableArray<string>.Empty' embedInteropTypes: false)); " is 151.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferencePropertiesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferencePropertiesTests.cs,WithXxx,The length of the statement  "            Assert.Equal(p.WithAliases(default(ImmutableArray<string>))' new MetadataReferenceProperties(MetadataImageKind.Assembly' ImmutableArray<string>.Empty' embedInteropTypes: false)); " is 178.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferencePropertiesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferencePropertiesTests.cs,WithXxx,The length of the statement  "            Assert.Equal(p.WithAliases(ImmutableArray<string>.Empty)' new MetadataReferenceProperties(MetadataImageKind.Assembly' default(ImmutableArray<string>)' embedInteropTypes: false)); " is 178.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferencePropertiesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferencePropertiesTests.cs,WithXxx,The length of the statement  "            Assert.Equal(p.WithAliases(new string[0])' new MetadataReferenceProperties(MetadataImageKind.Assembly' default(ImmutableArray<string>)' embedInteropTypes: false)); " is 163.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferencePropertiesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferencePropertiesTests.cs,WithXxx,The length of the statement  "            Assert.Equal(p.WithAliases(new[] { "foo"' "aaa" })' new MetadataReferenceProperties(MetadataImageKind.Assembly' ImmutableArray.Create("foo"' "aaa")' embedInteropTypes: false)); " is 176.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferencePropertiesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferencePropertiesTests.cs,WithXxx,The length of the statement  "            Assert.Equal(p.WithEmbedInteropTypes(true)' new MetadataReferenceProperties(MetadataImageKind.Assembly' ImmutableArray.Create("a")' embedInteropTypes: true)); " is 158.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferencePropertiesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferencePropertiesTests.cs,WithXxx,The length of the statement  "            Assert.Equal(m.WithAliases(default(ImmutableArray<string>))' new MetadataReferenceProperties(MetadataImageKind.Module' default(ImmutableArray<string>)' embedInteropTypes: false)); " is 179.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferencePropertiesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferencePropertiesTests.cs,WithXxx,The length of the statement  "            Assert.Equal(m.WithEmbedInteropTypes(false)' new MetadataReferenceProperties(MetadataImageKind.Module' default(ImmutableArray<string>)' embedInteropTypes: false)); " is 163.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferenceTests.cs,CreateFrom_Errors,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => MetadataReference.CreateFromFile(null' default(MetadataReferenceProperties))); " is 121.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferenceTests.cs,CreateFrom_Errors,The length of the statement  "            Assert.Throws<ArgumentException>(() => MetadataReference.CreateFromAssembly(typeof(object).Assembly' new MetadataReferenceProperties(MetadataImageKind.Module))); " is 161.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferenceTests.cs,CreateFrom_Errors,The length of the statement  "            var dynamicAssembly = AppDomain.CurrentDomain.DefineDynamicAssembly(new AssemblyName { Name = "Foo" }' System.Reflection.Emit.AssemblyBuilderAccess.Run); " is 153.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferenceTests.cs,Assembly_WithXxx,The length of the statement  "            var r6 = r.WithProperties(new MetadataReferenceProperties(MetadataImageKind.Assembly' ImmutableArray.Create("x")' embedInteropTypes: true)); " is 140.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferenceTests.cs,CompilationReference_CSharp_WithXxx,The length of the statement  "            var r3 = r.WithProperties(new MetadataReferenceProperties(MetadataImageKind.Assembly' ImmutableArray.Create("x")' embedInteropTypes: true)); " is 140.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferenceTests.cs,CompilationReference_VB_WithXxx,The length of the statement  "            var r3 = r.WithProperties(new MetadataReferenceProperties(MetadataImageKind.Assembly' ImmutableArray.Create("x")' embedInteropTypes: true)); " is 140.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferenceTests.cs,Display,The length of the statement  "            r = AssemblyMetadata.CreateFromImage(TestResources.SymbolsTests.General.C1).GetReference(filePath: @"c:\blah"' display: @"dddd"); " is 129.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferenceTests.cs,Equivalence,The length of the statement  "            var comparer = CommonReferenceManager<CS.CSharpCompilation' IAssemblySymbol>.MetadataReferenceEqualityComparer.Instance; " is 120.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferenceTests.cs,Equivalence,The length of the statement  "            var i1 = AssemblyMetadata.CreateFromImage(ProprietaryTestResources.NetFX.v4_0_30319.mscorlib).GetReference(display: "i1"); " is 122.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferenceTests.cs,Equivalence,The length of the statement  "            var i2 = AssemblyMetadata.CreateFromImage(ProprietaryTestResources.NetFX.v4_0_30319.mscorlib).GetReference(display: "i2"); " is 122.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferenceTests.cs,PortableReference_Display,The length of the statement  "            var comparer = CommonReferenceManager<CS.CSharpCompilation' IAssemblySymbol>.MetadataReferenceEqualityComparer.Instance; " is 120.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferenceTests.cs,DocCommentProvider,The length of the statement  "            Assert.Equal("<member name='T:System.Collections.ArrayList'><summary>T:System.Collections.ArrayList</summary></member>"' summary); " is 130.
Long Statement,Microsoft.CodeAnalysis.UnitTests,MetadataReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferenceTests.cs,InvalidPublicKey,The length of the statement  "            var r = MetadataReference.CreateFromStream(new MemoryStream(TestResources.SymbolsTests.Metadata.InvalidPublicKey' writable: false)); " is 132.
Long Statement,Microsoft.CodeAnalysis.UnitTests,ModuleMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\ModuleMetadataTests.cs,CreateFromMetadata_Errors,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => { fixed (byte* ptr = new byte[] { 1' 2' 3 }) ModuleMetadata.CreateFromMetadata((IntPtr)ptr' 0); }); " is 148.
Long Statement,Microsoft.CodeAnalysis.UnitTests,ModuleMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\ModuleMetadataTests.cs,CreateFromMetadata_Errors,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => { fixed (byte* ptr = new byte[] { 1' 2' 3 }) ModuleMetadata.CreateFromMetadata((IntPtr)ptr' -1); }); " is 149.
Long Statement,Microsoft.CodeAnalysis.UnitTests,ModuleMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\ModuleMetadataTests.cs,CreateFromImage,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => { fixed (byte* ptr = new byte[] { 1' 2' 3 }) ModuleMetadata.CreateFromImage((IntPtr)ptr' 0); }); " is 145.
Long Statement,Microsoft.CodeAnalysis.UnitTests,ModuleMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\ModuleMetadataTests.cs,CreateFromImage,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => { fixed (byte* ptr = new byte[] { 1' 2' 3 }) ModuleMetadata.CreateFromImage((IntPtr)ptr' -1); }); " is 146.
Long Statement,Microsoft.CodeAnalysis.UnitTests,ModuleMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\ModuleMetadataTests.cs,CreateFromImage,The length of the statement  "            // It's not particularly important that this not throw. The parsing of the metadata is now lazy' and the result is that an exception " is 132.
Long Statement,Microsoft.CodeAnalysis.UnitTests,ModuleMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\ModuleMetadataTests.cs,CreateFromFile,The length of the statement  "            Assert.Throws<FileNotFoundException>(() => ModuleMetadata.CreateFromFile(_systemDrive + @":\file_that_does_not_exists.dll")); " is 125.
Long Statement,Microsoft.CodeAnalysis.UnitTests,ModuleMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\ModuleMetadataTests.cs,CreateFromFile,The length of the statement  "            Assert.Throws<FileNotFoundException>(() => ModuleMetadata.CreateFromFile(_systemDrive + @":\directory_that_does_not_exists\file_that_does_not_exists.dll")); " is 156.
Long Statement,Microsoft.CodeAnalysis.UnitTests,ModuleMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\ModuleMetadataTests.cs,CreateFromFile,The length of the statement  "            Assert.Throws<IOException>(() => ModuleMetadata.CreateFromFile(Environment.GetFolderPath(Environment.SpecialFolder.Windows))); " is 126.
Long Statement,Microsoft.CodeAnalysis.UnitTests,VirtualizedStrongNameProvider,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\StrongNameProviderTests.cs,FileExists,The length of the statement  "                return fullPath != null && _existingFullPaths != null && _existingFullPaths.Contains(FileUtilities.NormalizeAbsolutePath(fullPath)); " is 132.
Long Statement,Microsoft.CodeAnalysis.UnitTests,EncodedStringTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\EncodedStringTextTests.cs,CheckSum002,The length of the statement  "            var data = CreateMemoryStreamBasedEncodedText("The quick brown fox jumps over the lazy dog"' Encoding.ASCII' readEncodingOpt: null); " is 132.
Long Statement,Microsoft.CodeAnalysis.UnitTests,EncodedStringTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\EncodedStringTextTests.cs,CheckSum003,The length of the statement  "            var data = CreateMemoryStreamBasedEncodedText("The quick brown fox jumps over the lazy dog"' Encoding.Unicode' readEncodingOpt: null); " is 134.
Long Statement,Microsoft.CodeAnalysis.UnitTests,EncodedStringTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\EncodedStringTextTests.cs,CheckSum004,The length of the statement  "            var data = CreateMemoryStreamBasedEncodedText("The quick brown fox jumps over the lazy dog"' Encoding.BigEndianUnicode' readEncodingOpt: null); " is 143.
Long Statement,Microsoft.CodeAnalysis.UnitTests,EncodedStringTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\EncodedStringTextTests.cs,CheckSum_SHA256,The length of the statement  "            var data = CreateMemoryStreamBasedEncodedText(""' Encoding.UTF8' readEncodingOpt: null' algorithm: SourceHashAlgorithm.Sha256); " is 127.
Long Statement,Microsoft.CodeAnalysis.UnitTests,EncodedStringTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\EncodedStringTextTests.cs,CheckSum_SHA256,The length of the statement  "            Assert.Equal("f1945cd6 c19e56b3 c1c78943 ef5ec181 16907a4c a1efc40a 57d48ab1 db7adfc5"' StringTextTest.ChecksumToHexQuads(checksum)); " is 133.
Long Statement,Microsoft.CodeAnalysis.UnitTests,EncodedStringTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\EncodedStringTextTests.cs,TryReadByteOrderMark,The length of the statement  "            Assert.Equal(Encoding.BigEndianUnicode' EncodedStringText.TryReadByteOrderMark(new MemoryStream(new byte[] { 0xfe' 0xff }))); " is 125.
Long Statement,Microsoft.CodeAnalysis.UnitTests,EncodedStringTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\EncodedStringTextTests.cs,Decode_NonUtf8,The length of the statement  "            var text = "abc def baz aeiouy " + Encoding.Default.GetString(new byte[] { 0x80' 0x92' 0xA4' 0xB6' 0xC9' 0xDB' 0xED' 0xFF }); " is 125.
Long Statement,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Equality,The length of the statement  "                EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithEqualValues(new TextChangeRange(new TextSpan(42' 2)' 13))' " is 128.
Long Statement,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Equality,The length of the statement  "                EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 2)' 5))' " is 130.
Long Statement,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Equality,The length of the statement  "                EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 4)' 13))); " is 132.
Long Statement,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestGetTextChangesToChangedText,The length of the statement  "            var text = SourceText.From(new string('.'' 2048)' Encoding.UTF7' SourceHashAlgorithm.Sha256); // start bigger than GetText() copy buffer " is 136.
Long Statement,Microsoft.CodeAnalysis.UnitTests,TextLineCollectionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextLineCollectionTests.cs,Equality,The length of the statement  "            Assert.Throws<NotSupportedException>(() => default(TextLineCollection.Enumerator).Equals(default(TextLineCollection.Enumerator))); " is 130.
Long Statement,Microsoft.CodeAnalysis.UnitTests,VersionHelperTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\VersionHelperTests.cs,ParseBad,The length of the statement  "            Assert.False(VersionHelper.TryParseAssemblyVersion("65535.65535.65535.65535"' allowWildcard: true' version: out version)); " is 122.
Long Statement,Microsoft.CodeAnalysis.UnitTests,VersionHelperTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\VersionHelperTests.cs,ParseBad,The length of the statement  "            Assert.False(VersionHelper.TryParseAssemblyVersion("65535.65535.65535.65535"' allowWildcard: false' version: out version)); " is 123.
Long Statement,Microsoft.CodeAnalysis.UnitTests,VersionHelperTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\VersionHelperTests.cs,ParseBad,The length of the statement  "            Assert.False(VersionHelper.TryParseAssemblyVersion("\uFF11.\uFF10.\uFF10.\uFF10"' allowWildcard: true' version: out version)); " is 126.
Long Statement,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,BasicResources,The length of the statement  "  <VS_FIXEDFILEINFO FileVersionMS=""a104a105"" FileVersionLS=""a106a107"" ProductVersionMS=""a108a109"" ProductVersionLS=""a10aa10b"" /> " is 134.
Long Statement,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,BasicResources,The length of the statement  "            Win32ResourceConversions.AppendManifestToResourceStream(strm' new System.IO.MemoryStream((byte[])manifestContents)' false); " is 123.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,DiagnosticLocalizationTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\DiagnosticLocalizationTests.cs,TestDiagnosticLocalization,The length of the statement  "            var localizableMessageFormat = new LocalizableResourceString(nameOfResource2' resourceManager' typeof(CustomResourceManager)); " is 126.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,DiagnosticLocalizationTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\DiagnosticLocalizationTests.cs,TestDiagnosticLocalization,The length of the statement  "            var localizableDescription = new LocalizableResourceString(nameOfResource3' resourceManager' typeof(CustomResourceManager)); " is 124.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,DiagnosticLocalizationTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\DiagnosticLocalizationTests.cs,TestDiagnosticLocalization,The length of the statement  "            var localizableResource = new LocalizableResourceString(nameOfResourceWithArguments' resourceManager' typeof(CustomResourceManager)' argument); " is 143.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,GloballySuppressSyntaxDiagnosticsOnTargetCSharp,The length of the statement  "[module: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Comment""' Scope=""Member"" Target=""C.Foo():System.Void"")] " is 129.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,GloballySuppressSyntaxDiagnosticsOnTargetBasic,The length of the statement  "<Module: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Comment""' Scope:=""Member""' Target:=""C.Foo():System.Void"")> " is 132.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,VerifyBasic,The length of the statement  "            Verify(source' LanguageNames.VisualBasic' analyzers' diagnostics' continueOnAnalyzerException: null' rootNamespace: rootNamespace); " is 131.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,Verify,The length of the statement  "            Assert.True(analyzers != null && analyzers.Length > 0' "Must specify at least one diagnostic analyzer to test suppression"); " is 124.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,Verify,The length of the statement  "            compilation.VerifyAnalyzerDiagnostics(analyzers' continueOnAnalyzerException: continueOnAnalyzerException' expected: diagnostics); " is 130.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,WarningOnNamePrefixDeclarationAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.DiagnosticAnalyzers.cs,Initialize,The length of the statement  "                                context.ReportDiagnostic(CodeAnalysis.Diagnostic.Create(s_rule' context.Symbol.Locations.First()' messageArgs: context.Symbol.Name)); " is 133.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,WarningOnTypeDeclarationAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.DiagnosticAnalyzers.cs,Initialize,The length of the statement  "                            context.ReportDiagnostic(CodeAnalysis.Diagnostic.Create(s_rule' context.Symbol.Locations.First()' messageArgs: context.Symbol.Name)); " is 133.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,CSharpCodeBodyAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.DiagnosticAnalyzers.cs,Initialize,The length of the statement  "                                context.ReportDiagnostic(CodeAnalysis.Diagnostic.Create(s_rule' context.OwningSymbol.Locations.First()' messageArgs: context.OwningSymbol.Name + ":end")); " is 154.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,CSharpCodeBodyAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.DiagnosticAnalyzers.cs,Initialize,The length of the statement  "                                context.ReportDiagnostic(CodeAnalysis.Diagnostic.Create(s_rule' context.Node.GetLocation()' messageArgs: context.Node.ToFullString())); " is 135.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,BasicCodeBodyAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.DiagnosticAnalyzers.cs,Initialize,The length of the statement  "                                context.ReportDiagnostic(CodeAnalysis.Diagnostic.Create(s_rule' context.OwningSymbol.Locations.First()' messageArgs: context.OwningSymbol.Name + ":end")); " is 154.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,BasicCodeBodyAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.DiagnosticAnalyzers.cs,Initialize,The length of the statement  "                                context.ReportDiagnostic(CodeAnalysis.Diagnostic.Create(s_rule' context.Node.GetLocation()' messageArgs: context.Node.ToFullString())); " is 135.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,WarningOnCommentAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.DiagnosticAnalyzers.cs,Initialize,The length of the statement  "                                context.ReportDiagnostic(CodeAnalysis.Diagnostic.Create(s_rule' comment.GetLocation()' messageArgs: comment.ToFullString())); " is 125.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,WarningOnTokenAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.DiagnosticAnalyzers.cs,Initialize,The length of the statement  "                                    context.ReportDiagnostic(CodeAnalysis.Diagnostic.Create(s_rule' nodeOrToken.GetLocation()' messageArgs: nodeOrToken.ToString())); " is 129.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageTargetSymbolResolverTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageTargetSymbolResolverTests.cs,VerifyNamespaceResolution,The length of the statement  "            VerifyResolution(markup' fxCopFullyQualifiedNames' SuppressMessageAttributeState.TargetScope.Namespace' language' rootNamespaceName); " is 133.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageTargetSymbolResolverTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageTargetSymbolResolverTests.cs,VerifyNoNamespaceResolution,The length of the statement  "            VerifyNoResolution(markup' fxCopFullyQualifiedNames' SuppressMessageAttributeState.TargetScope.Namespace' language' rootNamespaceName); " is 135.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageTargetSymbolResolverTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageTargetSymbolResolverTests.cs,VerifyTypeResolution,The length of the statement  "            VerifyResolution(markup' fxCopFullyQualifiedNames' SuppressMessageAttributeState.TargetScope.Type' language' rootNamespaceName); " is 128.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageTargetSymbolResolverTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageTargetSymbolResolverTests.cs,VerifyNoTypeResolution,The length of the statement  "            VerifyNoResolution(markup' fxCopFullyQualifiedNames' SuppressMessageAttributeState.TargetScope.Type' language' rootNamespaceName); " is 130.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageTargetSymbolResolverTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageTargetSymbolResolverTests.cs,VerifyMemberResolution,The length of the statement  "            VerifyResolution(markup' fxCopFullyQualifiedNames' SuppressMessageAttributeState.TargetScope.Member' language' rootNamespaceName); " is 130.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageTargetSymbolResolverTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageTargetSymbolResolverTests.cs,VerifyNoMemberResolution,The length of the statement  "            VerifyNoResolution(markup' fxCopFullyQualifiedNames' SuppressMessageAttributeState.TargetScope.Member' language' rootNamespaceName); " is 132.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageTargetSymbolResolverTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageTargetSymbolResolverTests.cs,VerifyResolution,The length of the statement  "            Assert.True(pos != null || spans.Count > 0' "Must specify a position or spans marking expected symbols for resolution"); " is 120.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageTargetSymbolResolverTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageTargetSymbolResolverTests.cs,VerifyResolution,The length of the statement  "                            string.Format("Failed to resolve FxCop fully-qualified name '{0}' to symbols:\r\n{1}\r\nResolved to unexpected symbol '{2}'"' " is 125.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => CustomDebugInfoReader.TryGetCustomDebugInfoRecord(new byte[0]' CustomDebugInfoKind.EditAndContinueLocalSlotMap)); " is 160.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => CustomDebugInfoReader.TryGetCustomDebugInfoRecord(new byte[] { 1 }' CustomDebugInfoKind.EditAndContinueLocalSlotMap)); " is 165.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => CustomDebugInfoReader.TryGetCustomDebugInfoRecord(new byte[] { 1' 2 }' CustomDebugInfoKind.EditAndContinueLocalSlotMap)); " is 168.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "            Assert.True(CustomDebugInfoReader.TryGetCustomDebugInfoRecord(new byte[] { 5' 1' 0' 0 }' CustomDebugInfoKind.EditAndContinueLocalSlotMap).IsDefault); " is 149.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "            Assert.True(CustomDebugInfoReader.TryGetCustomDebugInfoRecord(cdi' CustomDebugInfoKind.EditAndContinueLocalSlotMap).IsDefault); " is 127.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => CustomDebugInfoReader.TryGetCustomDebugInfoRecord(cdi' CustomDebugInfoKind.EditAndContinueLocalSlotMap)); " is 152.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "                /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x00' 0x00' 0x00' 0x80' " is 127.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => CustomDebugInfoReader.TryGetCustomDebugInfoRecord(cdi' CustomDebugInfoKind.EditAndContinueLocalSlotMap)); " is 152.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "                /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x08' 0x00' 0x00' 0x00' " is 127.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "            Assert.True(CustomDebugInfoReader.TryGetCustomDebugInfoRecord(cdi' CustomDebugInfoKind.EditAndContinueLocalSlotMap).IsEmpty); " is 125.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "                /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x0a' 0x00' 0x00' 0x00' " is 127.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => CustomDebugInfoReader.TryGetCustomDebugInfoRecord(cdi' CustomDebugInfoKind.EditAndContinueLocalSlotMap)); " is 152.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "                /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00' " is 127.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "            AssertEx.Equal(new byte[] { 0xab }' CustomDebugInfoReader.TryGetCustomDebugInfoRecord(cdi' CustomDebugInfoKind.EditAndContinueLocalSlotMap)); " is 141.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "            Assert.True(CustomDebugInfoReader.TryGetCustomDebugInfoRecord(cdi' CustomDebugInfoKind.EditAndContinueLocalSlotMap).IsDefault); " is 127.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "            Assert.True(CustomDebugInfoReader.TryGetCustomDebugInfoRecord(cdi' CustomDebugInfoKind.EditAndContinueLocalSlotMap).IsDefault); " is 127.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "                /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00' " is 127.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "                /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00' " is 127.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "            AssertEx.Equal(new byte[] { 0xab }' CustomDebugInfoReader.TryGetCustomDebugInfoRecord(cdi' CustomDebugInfoKind.EditAndContinueLocalSlotMap)); " is 141.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "                /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00' " is 127.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "            AssertEx.Equal(new byte[] { 0xcd }' CustomDebugInfoReader.TryGetCustomDebugInfoRecord(cdi' CustomDebugInfoKind.EditAndContinueLocalSlotMap)); " is 141.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "                /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00' " is 127.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The length of the statement  "            AssertEx.Equal(new byte[] { 0xab }' CustomDebugInfoReader.TryGetCustomDebugInfoRecord(cdi' CustomDebugInfoKind.DynamicLocals)); " is 127.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,EditAndContinueLocalSlotMap_NegativeSyntaxOffsets,The length of the statement  "            AssertEx.Equal(new byte[] { 0xFF' 0xC0' 0x00' 0x4E' 0x20' 0x81' 0xC0' 0x00' 0x4E' 0x1F' 0x0A' 0x9A' 0x00' 0x0A }' bytes); " is 121.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,EditAndContinueLambdaAndClosureMap_NegativeSyntaxOffsets,The length of the statement  "            AssertEx.Equal(new byte[] { 0x7C' 0x80' 0xC8' 0x03' 0x64' 0x80' 0xD2' 0x00' 0x80' 0xDC' 0x02' 0x80' 0x96' 0x01' 0x14' 0x00 }' bytes); " is 133.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Emit,EmitBaselineTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\EmitBaselineTests.cs,CreateInitialBaseline,The length of the statement  "            var provider = new Func<MethodDefinitionHandle' EditAndContinueMethodDebugInformation>(_ => default(EditAndContinueMethodDebugInformation)); " is 140.
Long Statement,Microsoft.CodeAnalysis.UnitTests.PEWriter,InstructionOperandTypesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\PEWriter\InstructionOperandTypesTests.cs,OperandTypes,The length of the statement  "            foreach (FieldInfo fi in typeof(OpCodes).GetFields(BindingFlags.Public | BindingFlags.Static).Where(f => !reserved.Contains(f.Name))) " is 133.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,ToDictionary,The length of the statement  "            dict = System.Linq.ImmutableArrayExtensions.ToDictionary(roa' s => s.Split(':').First()' StringComparer.OrdinalIgnoreCase); " is 123.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,ToDictionary,The length of the statement  "            dict = System.Linq.ImmutableArrayExtensions.ToDictionary(roa' s => s.Split(':').First()' s => s.Split(':').Last()' StringComparer.OrdinalIgnoreCase); " is 149.
Long Statement,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The length of the statement  "            RoundTrip(new AssemblyIdentity("foo"' publicKeyOrToken: new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 }.AsImmutableOrNull()).ToAssemblyName()); " is 133.
Long Statement,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The length of the statement  "            RoundTrip(new AssemblyIdentity("foo"' version: new Version(1' 2' 3' 4)' cultureName: CultureInfo.CurrentCulture.Name' publicKeyOrToken: new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 }.AsImmutableOrNull()).ToAssemblyName()); " is 213.
Long Statement,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionToAssemblyName,The length of the statement  "            nameObject = FusionAssemblyIdentity.ToAssemblyNameObject("Windows' Version=255.255.255.255' ContentType=WindowsRuntime"); " is 121.
Long Statement,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionToAssemblyName,The length of the statement  "            Assert.Throws<ArgumentException>(() => FusionAssemblyIdentity.ToAssemblyNameObject(new AssemblyName { Name = "x\0x" })); " is 120.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Text,SourceTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\SourceTextTests.cs,ChecksumAlgorithm1,The length of the statement  "            Assert.Equal(SourceHashAlgorithm.Sha1' SourceText.From("foo"' checksumAlgorithm: SourceHashAlgorithm.Sha1).ChecksumAlgorithm); " is 126.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Text,SourceTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\SourceTextTests.cs,ChecksumAlgorithm1,The length of the statement  "            Assert.Equal(SourceHashAlgorithm.Sha256' SourceText.From("foo"' checksumAlgorithm: SourceHashAlgorithm.Sha256).ChecksumAlgorithm); " is 130.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Text,SourceTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\SourceTextTests.cs,ChecksumAlgorithm1,The length of the statement  "            Assert.Equal(SourceHashAlgorithm.Sha1' SourceText.From(stream' checksumAlgorithm: SourceHashAlgorithm.Sha1).ChecksumAlgorithm); " is 127.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Text,SourceTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\SourceTextTests.cs,ChecksumAlgorithm1,The length of the statement  "            Assert.Equal(SourceHashAlgorithm.Sha256' SourceText.From(stream' checksumAlgorithm: SourceHashAlgorithm.Sha256).ChecksumAlgorithm); " is 131.
Complex Conditional,Microsoft.CodeAnalysis.UnitTests,MetadataReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataReferenceTests.cs,Equivalence,The conditional expression  "ReferenceEquals(r' s) ||                          ReferenceEquals(r' c1a) && ReferenceEquals(s' c1b) ||                          ReferenceEquals(s' c1a) && ReferenceEquals(r' c1b)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,EnumeratorCompacts,The conditional expression  "a.Weak.IsAlive || c.Weak.IsAlive || d.Weak.IsAlive || e.Weak.IsAlive"  is complex.
Magic Number,Microsoft.CodeAnalysis,FusionAssemblyIdentity,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Helpers\GlobalAssemblyCacheHelpers\FusionAssemblyIdentity.cs,GetDisplayName,The following statement contains a magic number: byte[] data = new byte[(int)characterCountIncludingTerminator * 2];
Magic Number,Microsoft.CodeAnalysis,FusionAssemblyIdentity,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Helpers\GlobalAssemblyCacheHelpers\FusionAssemblyIdentity.cs,GetPropertyString,The following statement contains a magic number: return Marshal.PtrToStringUni((IntPtr)p' (data.Length / 2) - 1);
Magic Number,Microsoft.CodeAnalysis,FusionAssemblyIdentity,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Helpers\GlobalAssemblyCacheHelpers\FusionAssemblyIdentity.cs,GetVersion,The following statement contains a magic number: return new Version((int)(hi >> 16)' (int)(hi & 0xffff)' (int)(lo >> 16)' (int)(lo & 0xffff));
Magic Number,Microsoft.CodeAnalysis,FusionAssemblyIdentity,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Helpers\GlobalAssemblyCacheHelpers\FusionAssemblyIdentity.cs,GetVersion,The following statement contains a magic number: return new Version((int)(hi >> 16)' (int)(hi & 0xffff)' (int)(lo >> 16)' (int)(lo & 0xffff));
Magic Number,Microsoft.CodeAnalysis.UnitTests,AnalyzerFileReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AnalyzerFileReferenceTests.cs,TestMetadataParse,The following statement contains a magic number: Assert.Equal(2' analyzerTypeNameMap.Keys.Count());
Magic Number,Microsoft.CodeAnalysis.UnitTests,AnalyzerFileReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AnalyzerFileReferenceTests.cs,TestMetadataParse,The following statement contains a magic number: Assert.Equal(6' analyzerTypeNameMap[LanguageNames.CSharp].Count);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AnalyzerFileReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AnalyzerFileReferenceTests.cs,TestMetadataParse,The following statement contains a magic number: Assert.Equal(6' analyzerTypeNameMap[LanguageNames.VisualBasic].Count);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AnalyzerFileReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AnalyzerFileReferenceTests.cs,TestGetAnalyzersPerLanguage,The following statement contains a magic number: Assert.Equal(4' analyzers.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AnalyzerFileReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AnalyzerFileReferenceTests.cs,TestGetAnalyzersPerLanguage,The following statement contains a magic number: Assert.Equal(4' analyzers.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AnalyzerFileReferenceTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AnalyzerFileReferenceTests.cs,TestLoadErrors1,The following statement contains a magic number: Assert.Equal(2' errors.Count);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AsyncQueueTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AsyncQueueTests.cs,Enqueue,The following statement contains a magic number: queue.Enqueue(42);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AsyncQueueTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AsyncQueueTests.cs,Enqueue,The following statement contains a magic number: Assert.Equal(42' task.Result);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AsyncQueueTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AsyncQueueTests.cs,EnqueueAfterComplete,The following statement contains a magic number: Assert.Throws(typeof(InvalidOperationException)' () => queue.Enqueue(42));
Magic Number,Microsoft.CodeAnalysis.UnitTests,AsyncQueueTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AsyncQueueTests.cs,TryEnqueueAfterComplete,The following statement contains a magic number: Assert.True(queue.TryEnqueue(42));
Magic Number,Microsoft.CodeAnalysis.UnitTests,AsyncQueueTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AsyncQueueTests.cs,TryEnqueueAfterComplete,The following statement contains a magic number: Assert.False(queue.TryEnqueue(42));
Magic Number,Microsoft.CodeAnalysis.UnitTests,AsyncQueueTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AsyncQueueTests.cs,DequeueThenEnqueue,The following statement contains a magic number: queue.Enqueue(13);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AsyncQueueTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AsyncQueueTests.cs,DequeueThenEnqueue,The following statement contains a magic number: Assert.Equal(13' await task.ConfigureAwait(false));
Magic Number,Microsoft.CodeAnalysis.UnitTests,AsyncQueueTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AsyncQueueTests.cs,DequeueManyThenEnqueueMany,The following statement contains a magic number: var count = 4;
Magic Number,Microsoft.CodeAnalysis.UnitTests,AsyncQueueTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AsyncQueueTests.cs,DequeueManyThenComplete,The following statement contains a magic number: i < 4
Magic Number,Microsoft.CodeAnalysis.UnitTests,AsyncQueueTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AsyncQueueTests.cs,DequeueAfterCompleteWithData,The following statement contains a magic number: queue.Enqueue(42);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AsyncQueueTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AsyncQueueTests.cs,DequeueAfterCompleteWithData,The following statement contains a magic number: Assert.Equal(42' await queue.DequeueAsync().ConfigureAwait(false));
Magic Number,Microsoft.CodeAnalysis.UnitTests,AsyncQueueTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AsyncQueueTests.cs,DequeueAsyncWithCancellationAfterComplete,The following statement contains a magic number: queue.Enqueue(42);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AsyncQueueTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AsyncQueueTests.cs,TryDequeue,The following statement contains a magic number: queue.Enqueue(13);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AsyncQueueTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AsyncQueueTests.cs,TryDequeue,The following statement contains a magic number: Assert.Equal(13' value);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AsyncQueueTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AsyncQueueTests.cs,TryDequeueAfterComplete,The following statement contains a magic number: queue.Enqueue(13);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AsyncQueueTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\AsyncQueueTests.cs,TryDequeueAfterComplete,The following statement contains a magic number: Assert.Equal(13' value);
Magic Number,Microsoft.CodeAnalysis.UnitTests,EmitOptionsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\EmitOptionsTests.cs,WithXxx,The following statement contains a magic number: TestProperty((old' value) => old.WithFileAlignment(value)' opt => opt.FileAlignment' 2048);
Magic Number,Microsoft.CodeAnalysis.UnitTests,EmitOptionsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\EmitOptionsTests.cs,WithXxx,The following statement contains a magic number: TestProperty((old' value) => old.WithBaseAddress(value)' opt => opt.BaseAddress' 100UL);
Magic Number,Microsoft.CodeAnalysis.UnitTests,EmitOptionsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\EmitOptionsTests.cs,WithXxx,The following statement contains a magic number: TestProperty((old' value) => old.WithDebugInformationFormat(value)' opt => opt.DebugInformationFormat' (DebugInformationFormat)2);
Magic Number,Microsoft.CodeAnalysis.UnitTests,LargeEncodedTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\LargeEncodedTextTests.cs,CopyToTest,The following statement contains a magic number: const int destOffset = 10;
Magic Number,Microsoft.CodeAnalysis.UnitTests,LargeEncodedTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\LargeEncodedTextTests.cs,CopyToTest,The following statement contains a magic number: text.CopyTo(3' buffer' 0' 3);
Magic Number,Microsoft.CodeAnalysis.UnitTests,LargeEncodedTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\LargeEncodedTextTests.cs,CopyToTest,The following statement contains a magic number: text.CopyTo(3' buffer' 0' 3);
Magic Number,Microsoft.CodeAnalysis.UnitTests,LargeEncodedTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\LargeEncodedTextTests.cs,CopyToTest,The following statement contains a magic number: Assert.Equal(HelloWorld[3]' buffer[0]);
Magic Number,Microsoft.CodeAnalysis.UnitTests,LargeEncodedTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\LargeEncodedTextTests.cs,CopyToTest,The following statement contains a magic number: Assert.Equal(HelloWorld[4]' buffer[1]);
Magic Number,Microsoft.CodeAnalysis.UnitTests,LargeEncodedTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\LargeEncodedTextTests.cs,CopyToTest,The following statement contains a magic number: Assert.Equal(HelloWorld[5]' buffer[2]);
Magic Number,Microsoft.CodeAnalysis.UnitTests,LargeEncodedTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\LargeEncodedTextTests.cs,CopyToTest,The following statement contains a magic number: Assert.Equal(HelloWorld[5]' buffer[2]);
Magic Number,Microsoft.CodeAnalysis.UnitTests,LargeEncodedTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\LargeEncodedTextTests.cs,CopyToLargeTest,The following statement contains a magic number: int targetLength = LargeEncodedText.ChunkSize * 2;
Magic Number,Microsoft.CodeAnalysis.UnitTests,XmlDocumentationCommentTextReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\XmlDocumentationCommentTextReaderTests.cs,Reader,The following statement contains a magic number: char[] buffer = new char[200];
Magic Number,Microsoft.CodeAnalysis.UnitTests,XmlDocumentationCommentTextReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\XmlDocumentationCommentTextReaderTests.cs,Reader,The following statement contains a magic number: charsRead = s.Read(buffer' 0' 200);
Magic Number,Microsoft.CodeAnalysis.UnitTests,XmlDocumentationCommentTextReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\XmlDocumentationCommentTextReaderTests.cs,Reader,The following statement contains a magic number: Assert.Equal(109' charsRead);
Magic Number,Microsoft.CodeAnalysis.UnitTests,XmlDocumentationCommentTextReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\XmlDocumentationCommentTextReaderTests.cs,Reader,The following statement contains a magic number: charsRead = s.Read(buffer' 0' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,XmlDocumentationCommentTextReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\XmlDocumentationCommentTextReaderTests.cs,Reader,The following statement contains a magic number: charsRead = s.Read(buffer' 0' 200);
Magic Number,Microsoft.CodeAnalysis.UnitTests,XmlDocumentationCommentTextReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\XmlDocumentationCommentTextReaderTests.cs,Reader,The following statement contains a magic number: Assert.Equal(76' charsRead);
Magic Number,Microsoft.CodeAnalysis.UnitTests,XmlDocumentationCommentTextReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\XmlDocumentationCommentTextReaderTests.cs,Reader,The following statement contains a magic number: charsRead = s.Read(buffer' 0' 200);
Magic Number,Microsoft.CodeAnalysis.UnitTests,XmlDocumentationCommentTextReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\XmlDocumentationCommentTextReaderTests.cs,Reader,The following statement contains a magic number: Assert.Equal(71' charsRead);
Magic Number,Microsoft.CodeAnalysis.UnitTests,XmlDocumentationCommentTextReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\XmlDocumentationCommentTextReaderTests.cs,Reader,The following statement contains a magic number: charsRead = s.Read(buffer' 0' 200);
Magic Number,Microsoft.CodeAnalysis.UnitTests,XmlDocumentationCommentTextReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\XmlDocumentationCommentTextReaderTests.cs,Reader,The following statement contains a magic number: Assert.Equal(95' charsRead);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CachingLookupTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CachingLookupTests.cs,RandomNumbers,The following statement contains a magic number: result[i] = rand.Next(100' ((length / 10) + 4) * 100);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CachingLookupTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CachingLookupTests.cs,RandomNumbers,The following statement contains a magic number: result[i] = rand.Next(100' ((length / 10) + 4) * 100);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CachingLookupTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CachingLookupTests.cs,RandomNumbers,The following statement contains a magic number: result[i] = rand.Next(100' ((length / 10) + 4) * 100);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CachingLookupTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CachingLookupTests.cs,RandomNumbers,The following statement contains a magic number: result[i] = rand.Next(100' ((length / 10) + 4) * 100);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CachingLookupTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CachingLookupTests.cs,GetKey,The following statement contains a magic number: bool upper = _randomCaseGenerator.Next(2) == 0;
Magic Number,Microsoft.CodeAnalysis.UnitTests,CachingLookupTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CachingLookupTests.cs,Right2Chars,The following statement contains a magic number: return s.Substring(s.Length - 2);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CachingLookupTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CachingLookupTests.cs,CachingLookupCorrectResults,The following statement contains a magic number: int[] numbers = RandomNumbers(200' 11234);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CachingLookupTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CachingLookupTests.cs,CachingLookupCorrectResults,The following statement contains a magic number: int[] numbers = RandomNumbers(200' 11234);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CachingLookupTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CachingLookupTests.cs,CachingLookupCaseInsensitive,The following statement contains a magic number: int[] numbers = RandomNumbers(300' 719);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CachingLookupTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CachingLookupTests.cs,CachingLookupCaseInsensitive,The following statement contains a magic number: int[] numbers = RandomNumbers(300' 719);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CachingLookupTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CachingLookupTests.cs,CachingLookupCaseInsensitiveNoCacheMissingKeys,The following statement contains a magic number: int[] numbers = RandomNumbers(435' 19874);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CachingLookupTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CachingLookupTests.cs,CachingLookupCaseInsensitiveNoCacheMissingKeys,The following statement contains a magic number: int[] numbers = RandomNumbers(435' 19874);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CachingLookupTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CachingLookupTests.cs,CallExactlyOncePerKey,The following statement contains a magic number: int[] numbers = RandomNumbers(435' 19874);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CachingLookupTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CachingLookupTests.cs,CallExactlyOncePerKey,The following statement contains a magic number: int[] numbers = RandomNumbers(435' 19874);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CachingLookupTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CachingLookupTests.cs,CallExactlyOncePerKey,The following statement contains a magic number: string key3 = GetKey(numbers[2]' false);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CommonCommandLineParserTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonCommandLineParserTests.cs,TestRuleSetParsingWithMutualIncludes,The following statement contains a magic number: Assert.Equal(2' RuleSet.GetEffectiveIncludesFromFile(ruleSet.FilePath).Count());
Magic Number,Microsoft.CodeAnalysis.UnitTests,CommonCommandLineParserTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonCommandLineParserTests.cs,TestRuleSetParsingWithSiblingIncludes,The following statement contains a magic number: Assert.Equal(3' RuleSet.GetEffectiveIncludesFromFile(ruleSet.FilePath).Count());
Magic Number,Microsoft.CodeAnalysis.UnitTests,CommonCommandLineParserTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonCommandLineParserTests.cs,GetEffectiveIncludes_OneLevel,The following statement contains a magic number: Assert.Equal(expected: 2' actual: includePaths.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CommonCommandLineParserTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonCommandLineParserTests.cs,GetEffectiveIncludes_TwoLevels,The following statement contains a magic number: Assert.Equal(expected: 3' actual: includePaths.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CommonCommandLineParserTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonCommandLineParserTests.cs,GetEffectiveIncludes_TwoLevels,The following statement contains a magic number: Assert.Equal(expected: include2.Path' actual: includePaths[2]);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CommonSqmUtilitiesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonSqmUtilitiesTests.cs,TryGetCompilerDiagnosticCode_Valid,The following statement contains a magic number: Assert.Equal(expected: 1011U' actual: code);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CommonSyntaxTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonSyntaxTests.cs,CommonSyntaxTriviaSpan_CSharp,The following statement contains a magic number: Assert.Equal(2' csharpTriviaList.Count);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CommonSyntaxTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonSyntaxTests.cs,CommonSyntaxTriviaSpan_CSharp,The following statement contains a magic number: Assert.Equal(8' correctSpan.Start);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CommonSyntaxTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonSyntaxTests.cs,CommonSyntaxTriviaSpan_CSharp,The following statement contains a magic number: Assert.Equal(17' correctSpan.End);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CommonSyntaxTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonSyntaxTests.cs,CommonSyntaxTriviaSpan_VisualBasic,The following statement contains a magic number: Assert.Equal(2' vbTriviaList.Count);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CommonSyntaxTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonSyntaxTests.cs,CommonSyntaxTriviaSpan_VisualBasic,The following statement contains a magic number: Assert.Equal(8' correctSpan.Start);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CommonSyntaxTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CommonSyntaxTests.cs,CommonSyntaxTriviaSpan_VisualBasic,The following statement contains a magic number: Assert.Equal(14' correctSpan.End);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CorLibTypesAndConstantTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CorLibTypesTests.cs,ConstantValuePropertiesTest01,The following statement contains a magic number: var cv2 = ConstantValue.Create(-0.12345f);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CorLibTypesAndConstantTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CorLibTypesTests.cs,ConstantValuePropertiesTest01,The following statement contains a magic number: var cv3 = ConstantValue.Create((double)-1.234);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CorLibTypesAndConstantTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CorLibTypesTests.cs,ConstantValuePropertiesTest01,The following statement contains a magic number: var cv4 = ConstantValue.Create((decimal)-12345m);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CorLibTypesAndConstantTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CorLibTypesTests.cs,ConstantValueGetHashCodeTest01,The following statement contains a magic number: var cv21 = ConstantValue.Create((byte)255);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CorLibTypesAndConstantTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CorLibTypesTests.cs,ConstantValueGetHashCodeTest01,The following statement contains a magic number: var cv22 = ConstantValue.Create((byte)255);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CorLibTypesAndConstantTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CorLibTypesTests.cs,ConstantValueGetHashCodeTest01,The following statement contains a magic number: var cv31 = ConstantValue.Create((short)-32768);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CorLibTypesAndConstantTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CorLibTypesTests.cs,ConstantValueGetHashCodeTest01,The following statement contains a magic number: var cv32 = ConstantValue.Create((short)-32768);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CorLibTypesAndConstantTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CorLibTypesTests.cs,ConstantValueGetHashCodeTest01,The following statement contains a magic number: var cv41 = ConstantValue.Create((ushort)65535);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CorLibTypesAndConstantTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CorLibTypesTests.cs,ConstantValueGetHashCodeTest01,The following statement contains a magic number: var cv42 = ConstantValue.Create((ushort)65535);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CorLibTypesAndConstantTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CorLibTypesTests.cs,ConstantValueGetHashCodeTest01,The following statement contains a magic number: var cv51 = ConstantValue.Create(12345);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CorLibTypesAndConstantTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CorLibTypesTests.cs,ConstantValueGetHashCodeTest01,The following statement contains a magic number: var cv52 = ConstantValue.Create(12345);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CorLibTypesAndConstantTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CorLibTypesTests.cs,ConstantValueGetHashCodeTest01,The following statement contains a magic number: var cv81 = ConstantValue.Create((ulong)123456789);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CorLibTypesAndConstantTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CorLibTypesTests.cs,ConstantValueGetHashCodeTest01,The following statement contains a magic number: var cv82 = ConstantValue.Create((ulong)123456789);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CorLibTypesAndConstantTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CorLibTypesTests.cs,ConstantValueGetHashCodeTest01,The following statement contains a magic number: var cv91 = ConstantValue.Create(1.1m);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CorLibTypesAndConstantTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CorLibTypesTests.cs,ConstantValueGetHashCodeTest01,The following statement contains a magic number: var cv92 = ConstantValue.Create(1.1m);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CorLibTypesAndConstantTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CorLibTypesTests.cs,ConstantValueToStringTest01,The following statement contains a magic number: cv = ConstantValue.Create((sbyte)-128);
Magic Number,Microsoft.CodeAnalysis.UnitTests,CorLibTypesAndConstantTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\CorLibTypesTests.cs,ConstantValueToStringTest01,The following statement contains a magic number: cv = ConstantValue.Create((ulong)123456789);
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => object.Equals(left' right)'                  (left' right) => !object.Equals(left' right)'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\Foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\bar.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 4)' new LinePosition(3' 5)))'                  EqualityUnit.Create(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)))                  .WithNotEqualValues(new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(4' 5))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Ctor1,The following statement contains a magic number: Assert.Throws(                  typeof(ArgumentNullException)'                  () =>              {                  var notUsed = new FileLinePositionSpan(null' new LinePosition(1' 2)' new LinePosition(3' 5));              });
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Ctor1,The following statement contains a magic number: Assert.Throws(                  typeof(ArgumentNullException)'                  () =>              {                  var notUsed = new FileLinePositionSpan(null' new LinePosition(1' 2)' new LinePosition(3' 5));              });
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Ctor1,The following statement contains a magic number: Assert.Throws(                  typeof(ArgumentNullException)'                  () =>              {                  var notUsed = new FileLinePositionSpan(null' new LinePosition(1' 2)' new LinePosition(3' 5));              });
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Ctor1,The following statement contains a magic number: Assert.Throws(                  typeof(ArgumentException)'                  () =>              {                  var notUsed = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(3' 2)' new LinePosition(2' 4));              });
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Ctor1,The following statement contains a magic number: Assert.Throws(                  typeof(ArgumentException)'                  () =>              {                  var notUsed = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(3' 2)' new LinePosition(2' 4));              });
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Ctor1,The following statement contains a magic number: Assert.Throws(                  typeof(ArgumentException)'                  () =>              {                  var notUsed = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(3' 2)' new LinePosition(2' 4));              });
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Ctor1,The following statement contains a magic number: Assert.Throws(                  typeof(ArgumentException)'                  () =>              {                  var notUsed = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(3' 2)' new LinePosition(2' 4));              });
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,Ctor1,The following statement contains a magic number: Assert.Throws(                  typeof(ArgumentException)'                  () =>              {                  var notUsed = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(1' 1));              });
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,SaneHashCode,The following statement contains a magic number: var hash1 = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,SaneHashCode,The following statement contains a magic number: var hash1 = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,SaneHashCode,The following statement contains a magic number: var hash1 = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,SaneHashCode,The following statement contains a magic number: var hash2 = new FileLinePositionSpan("C:\\foo1.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,SaneHashCode,The following statement contains a magic number: var hash2 = new FileLinePositionSpan("C:\\foo1.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,SaneHashCode,The following statement contains a magic number: var hash2 = new FileLinePositionSpan("C:\\foo1.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,SaneHashCode,The following statement contains a magic number: var hash3 = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 3)' new LinePosition(3' 5)).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,SaneHashCode,The following statement contains a magic number: var hash3 = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 3)' new LinePosition(3' 5)).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,SaneHashCode,The following statement contains a magic number: var hash3 = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 3)' new LinePosition(3' 5)).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,SaneHashCode,The following statement contains a magic number: var hash4 = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(6' 5)).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,SaneHashCode,The following statement contains a magic number: var hash4 = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(6' 5)).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,SaneHashCode,The following statement contains a magic number: var hash4 = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(6' 5)).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,SaneHashCode,The following statement contains a magic number: var hash5 = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(2' 2)' new LinePosition(6' 5)).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,SaneHashCode,The following statement contains a magic number: var hash5 = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(2' 2)' new LinePosition(6' 5)).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,SaneHashCode,The following statement contains a magic number: var hash5 = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(2' 2)' new LinePosition(6' 5)).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,SaneHashCode,The following statement contains a magic number: var hash5 = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(2' 2)' new LinePosition(6' 5)).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,SaneHashCode,The following statement contains a magic number: var hash6 = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(2' 2)' new LinePosition(6' 8)).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,SaneHashCode,The following statement contains a magic number: var hash6 = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(2' 2)' new LinePosition(6' 8)).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,SaneHashCode,The following statement contains a magic number: var hash6 = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(2' 2)' new LinePosition(6' 8)).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,SaneHashCode,The following statement contains a magic number: var hash6 = new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(2' 2)' new LinePosition(6' 8)).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,TestToString,The following statement contains a magic number: Assert.Equal("C:\\foo.cs: (1'2)-(3'5)"' new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)).ToString());
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,TestToString,The following statement contains a magic number: Assert.Equal("C:\\foo.cs: (1'2)-(3'5)"' new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)).ToString());
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,TestToString,The following statement contains a magic number: Assert.Equal("C:\\foo.cs: (1'2)-(3'5)"' new FileLinePositionSpan("C:\\foo.cs"' new LinePosition(1' 2)' new LinePosition(3' 5)).ToString());
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,TestToString,The following statement contains a magic number: Assert.Equal("\\server\foo.vb: (1'2)-(3'5)"' new FileLinePositionSpan("\\server\foo.vb"' new LinePosition(1' 2)' new LinePosition(3' 5)).ToString());
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,TestToString,The following statement contains a magic number: Assert.Equal("\\server\foo.vb: (1'2)-(3'5)"' new FileLinePositionSpan("\\server\foo.vb"' new LinePosition(1' 2)' new LinePosition(3' 5)).ToString());
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,TestToString,The following statement contains a magic number: Assert.Equal("\\server\foo.vb: (1'2)-(3'5)"' new FileLinePositionSpan("\\server\foo.vb"' new LinePosition(1' 2)' new LinePosition(3' 5)).ToString());
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,TestToString,The following statement contains a magic number: Assert.Equal("~\foo.huh: (1'2)-(3'5)"' new FileLinePositionSpan("~\foo.huh"' new LinePosition(1' 2)' new LinePosition(3' 5)).ToString());
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,TestToString,The following statement contains a magic number: Assert.Equal("~\foo.huh: (1'2)-(3'5)"' new FileLinePositionSpan("~\foo.huh"' new LinePosition(1' 2)' new LinePosition(3' 5)).ToString());
Magic Number,Microsoft.CodeAnalysis.UnitTests,FileLinePositionSpanTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\FileLinePositionSpanTests.cs,TestToString,The following statement contains a magic number: Assert.Equal("~\foo.huh: (1'2)-(3'5)"' new FileLinePositionSpan("~\foo.huh"' new LinePosition(1' 2)' new LinePosition(3' 5)).ToString());
Magic Number,Microsoft.CodeAnalysis.UnitTests,MetadataFileReferenceResolverTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataFileReferenceResolverTests.cs,ResolveMetadataFile1,The following statement contains a magic number: string rooted = filePath.Substring(2);
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new LinePosition(1' 2)).WithEqualValues(new LinePosition(1' 2))'                  EqualityUnit.Create(new LinePosition()).WithEqualValues(new LinePosition())'                  EqualityUnit.Create(new LinePosition(1' 2)).WithNotEqualValues(new LinePosition(1' 3))'                  EqualityUnit.Create(new LinePosition(1' 2)).WithNotEqualValues(new LinePosition(2' 2)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new LinePosition(1' 2)).WithEqualValues(new LinePosition(1' 2))'                  EqualityUnit.Create(new LinePosition()).WithEqualValues(new LinePosition())'                  EqualityUnit.Create(new LinePosition(1' 2)).WithNotEqualValues(new LinePosition(1' 3))'                  EqualityUnit.Create(new LinePosition(1' 2)).WithNotEqualValues(new LinePosition(2' 2)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new LinePosition(1' 2)).WithEqualValues(new LinePosition(1' 2))'                  EqualityUnit.Create(new LinePosition()).WithEqualValues(new LinePosition())'                  EqualityUnit.Create(new LinePosition(1' 2)).WithNotEqualValues(new LinePosition(1' 3))'                  EqualityUnit.Create(new LinePosition(1' 2)).WithNotEqualValues(new LinePosition(2' 2)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new LinePosition(1' 2)).WithEqualValues(new LinePosition(1' 2))'                  EqualityUnit.Create(new LinePosition()).WithEqualValues(new LinePosition())'                  EqualityUnit.Create(new LinePosition(1' 2)).WithNotEqualValues(new LinePosition(1' 3))'                  EqualityUnit.Create(new LinePosition(1' 2)).WithNotEqualValues(new LinePosition(2' 2)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new LinePosition(1' 2)).WithEqualValues(new LinePosition(1' 2))'                  EqualityUnit.Create(new LinePosition()).WithEqualValues(new LinePosition())'                  EqualityUnit.Create(new LinePosition(1' 2)).WithNotEqualValues(new LinePosition(1' 3))'                  EqualityUnit.Create(new LinePosition(1' 2)).WithNotEqualValues(new LinePosition(2' 2)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new LinePosition(1' 2)).WithEqualValues(new LinePosition(1' 2))'                  EqualityUnit.Create(new LinePosition()).WithEqualValues(new LinePosition())'                  EqualityUnit.Create(new LinePosition(1' 2)).WithNotEqualValues(new LinePosition(1' 3))'                  EqualityUnit.Create(new LinePosition(1' 2)).WithNotEqualValues(new LinePosition(2' 2)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,Equality1,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new LinePosition(1' 2)).WithEqualValues(new LinePosition(1' 2))'                  EqualityUnit.Create(new LinePosition()).WithEqualValues(new LinePosition())'                  EqualityUnit.Create(new LinePosition(1' 2)).WithNotEqualValues(new LinePosition(1' 3))'                  EqualityUnit.Create(new LinePosition(1' 2)).WithNotEqualValues(new LinePosition(2' 2)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,Ctor1,The following statement contains a magic number: Assert.Throws(                  typeof(ArgumentOutOfRangeException)'                  () => { var notUsed = new LinePosition(-1' 42); });
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,Ctor2,The following statement contains a magic number: Assert.Throws(                  typeof(ArgumentOutOfRangeException)'                  () => { var notUsed = new LinePosition(42' -1); });
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,Ctor3,The following statement contains a magic number: var lp = new LinePosition(42' 13);
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,Ctor3,The following statement contains a magic number: var lp = new LinePosition(42' 13);
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,Ctor3,The following statement contains a magic number: Assert.Equal(42' lp.Line);
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,Ctor3,The following statement contains a magic number: Assert.Equal(13' lp.Character);
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,SaneHashCode,The following statement contains a magic number: var hash2 = new LinePosition(2' 2).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,SaneHashCode,The following statement contains a magic number: var hash2 = new LinePosition(2' 2).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,SaneHashCode,The following statement contains a magic number: var hash3 = new LinePosition(1' 2).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,SaneHashCode,The following statement contains a magic number: var hash4 = new LinePosition(2' 1).GetHashCode();
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,CompareTo,The following statement contains a magic number: Assert.Equal(-1' Math.Sign(new LinePosition(1' 1).CompareTo(new LinePosition(1' 2))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,CompareTo,The following statement contains a magic number: Assert.True(new LinePosition(1' 1) < new LinePosition(1' 2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,CompareTo,The following statement contains a magic number: Assert.Equal(-1' Math.Sign(new LinePosition(1' 2).CompareTo(new LinePosition(2' 1))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,CompareTo,The following statement contains a magic number: Assert.Equal(-1' Math.Sign(new LinePosition(1' 2).CompareTo(new LinePosition(2' 1))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,CompareTo,The following statement contains a magic number: Assert.True(new LinePosition(1' 2) < new LinePosition(2' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,CompareTo,The following statement contains a magic number: Assert.True(new LinePosition(1' 2) < new LinePosition(2' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,CompareTo,The following statement contains a magic number: Assert.True(new LinePosition(1' 2) <= new LinePosition(1' 2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,CompareTo,The following statement contains a magic number: Assert.True(new LinePosition(1' 2) <= new LinePosition(1' 2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,CompareTo,The following statement contains a magic number: Assert.True(new LinePosition(1' 2) <= new LinePosition(2' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,CompareTo,The following statement contains a magic number: Assert.True(new LinePosition(1' 2) <= new LinePosition(2' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,CompareTo,The following statement contains a magic number: Assert.Equal(+1' Math.Sign(new LinePosition(1' 2).CompareTo(new LinePosition(1' 1))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,CompareTo,The following statement contains a magic number: Assert.True(new LinePosition(1' 2) > new LinePosition(1' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,CompareTo,The following statement contains a magic number: Assert.Equal(+1' Math.Sign(new LinePosition(2' 1).CompareTo(new LinePosition(1' 2))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,CompareTo,The following statement contains a magic number: Assert.Equal(+1' Math.Sign(new LinePosition(2' 1).CompareTo(new LinePosition(1' 2))));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,CompareTo,The following statement contains a magic number: Assert.True(new LinePosition(2' 1) > new LinePosition(1' 2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,CompareTo,The following statement contains a magic number: Assert.True(new LinePosition(2' 1) > new LinePosition(1' 2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,CompareTo,The following statement contains a magic number: Assert.True(new LinePosition(2' 1) >= new LinePosition(2' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,CompareTo,The following statement contains a magic number: Assert.True(new LinePosition(2' 1) >= new LinePosition(2' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,CompareTo,The following statement contains a magic number: Assert.True(new LinePosition(2' 1) >= new LinePosition(1' 2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,LinePositionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\LinePositionTests.cs,CompareTo,The following statement contains a magic number: Assert.True(new LinePosition(2' 1) >= new LinePosition(1' 2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,GetDisplayName,The following statement contains a magic number: id = new AssemblyIdentity("foo"' new Version(1' 2' 3' 4));
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,GetDisplayName,The following statement contains a magic number: id = new AssemblyIdentity("foo"' new Version(1' 2' 3' 4));
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,GetDisplayName,The following statement contains a magic number: id = new AssemblyIdentity("foo"' new Version(1' 2' 3' 4));
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("65535"' 65535' 0' 0' 0' AssemblyIdentityParts.VersionMajor);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("1.2"' 1' 2' 0' 0' AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("1.2."' 1' 2' 0' 0' AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("1.2.3"' 1' 2' 3' 0' AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionBuild);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("1.2.3"' 1' 2' 3' 0' AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionBuild);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion(".2.3"' 0' 2' 3' 0' AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionBuild);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion(".2.3"' 0' 2' 3' 0' AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionBuild);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("1..3"' 1' 0' 3' 0' AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionBuild);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("1.2.3."' 1' 2' 3' 0' AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionBuild);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("1.2.3."' 1' 2' 3' 0' AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionBuild);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("1.2..4"' 1' 2' 0' 4' AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionRevision);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("1.2..4"' 1' 2' 0' 4' AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionRevision);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("1.2.."' 1' 2' 0' 0' AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("1.2.3.4"' 1' 2' 3' 4' AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionBuild | AssemblyIdentityParts.VersionRevision);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("1.2.3.4"' 1' 2' 3' 4' AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionBuild | AssemblyIdentityParts.VersionRevision);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("1.2.3.4"' 1' 2' 3' 4' AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionBuild | AssemblyIdentityParts.VersionRevision);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("65535.65535.65535.65535"' 65535' 65535' 65535' 65535'                  AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionBuild | AssemblyIdentityParts.VersionRevision);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("65535.65535.65535.65535"' 65535' 65535' 65535' 65535'                  AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionBuild | AssemblyIdentityParts.VersionRevision);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("65535.65535.65535.65535"' 65535' 65535' 65535' 65535'                  AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionBuild | AssemblyIdentityParts.VersionRevision);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("65535.65535.65535.65535"' 65535' 65535' 65535' 65535'                  AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionBuild | AssemblyIdentityParts.VersionRevision);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("1.2.*"' 1' 2' 0' 0' AssemblyIdentityParts.VersionMajor | AssemblyIdentityParts.VersionMinor | AssemblyIdentityParts.VersionBuild);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("1.2.3.*"' 1' 2' 3' 0' AssemblyIdentityParts.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("1.2.3.*"' 1' 2' 3' 0' AssemblyIdentityParts.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityDisplayNameTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityDisplayNameTests.cs,TestParseVersion_Parts,The following statement contains a magic number: TestParseVersion("1.*.2.*"' 1' 0' 2' 0' AssemblyIdentityParts.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,FromAssemblyDefinition,The following statement contains a magic number: name.Version = new Version(1' 2' 3' 4);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,FromAssemblyDefinition,The following statement contains a magic number: name.Version = new Version(1' 2' 3' 4);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,FromAssemblyDefinition,The following statement contains a magic number: name.Version = new Version(1' 2' 3' 4);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,FromAssemblyDefinition,The following statement contains a magic number: Assert.Equal(new Version(1' 2' 3' 4)' id.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,FromAssemblyDefinition,The following statement contains a magic number: Assert.Equal(new Version(1' 2' 3' 4)' id.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,FromAssemblyDefinition,The following statement contains a magic number: Assert.Equal(new Version(1' 2' 3' 4)' id.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,FromAssemblyDefinition,The following statement contains a magic number: name.Version = new Version(1' 2' 3' 4);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,FromAssemblyDefinition,The following statement contains a magic number: name.Version = new Version(1' 2' 3' 4);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,FromAssemblyDefinition,The following statement contains a magic number: name.Version = new Version(1' 2' 3' 4);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,FromAssemblyDefinition,The following statement contains a magic number: Assert.Equal(new Version(1' 2' 3' 4)' id.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,FromAssemblyDefinition,The following statement contains a magic number: Assert.Equal(new Version(1' 2' 3' 4)' id.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,FromAssemblyDefinition,The following statement contains a magic number: Assert.Equal(new Version(1' 2' 3' 4)' id.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,InvalidConstructorArgs,The following statement contains a magic number: Assert.Throws<ArgumentException>(                  () => new AssemblyIdentity("Foo"' new Version(1' 0' 0' 0)' ""' new byte[] { 1' 2' 3 }.AsImmutableOrNull()' hasPublicKey: false' isRetargetable: false));
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,InvalidConstructorArgs,The following statement contains a magic number: Assert.Throws<ArgumentException>(                  () => new AssemblyIdentity("Foo"' new Version(1' 0' 0' 0)' ""' new byte[] { 1' 2' 3 }.AsImmutableOrNull()' hasPublicKey: false' isRetargetable: false));
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: var id = new AssemblyIdentity("Foo"' new Version(1' 2' 3' 4)' "en-US"' RoPublicKey1' hasPublicKey: true' isRetargetable: true' contentType: AssemblyContentType.Default' noThrow: true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: var id = new AssemblyIdentity("Foo"' new Version(1' 2' 3' 4)' "en-US"' RoPublicKey1' hasPublicKey: true' isRetargetable: true' contentType: AssemblyContentType.Default' noThrow: true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: var id = new AssemblyIdentity("Foo"' new Version(1' 2' 3' 4)' "en-US"' RoPublicKey1' hasPublicKey: true' isRetargetable: true' contentType: AssemblyContentType.Default' noThrow: true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: Assert.Equal(new Version(1' 2' 3' 4)' id.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: Assert.Equal(new Version(1' 2' 3' 4)' id.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: Assert.Equal(new Version(1' 2' 3' 4)' id.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: id = new AssemblyIdentity("Foo"' new Version(1' 2' 3' 4)' null' ImmutableArray.Create<byte>()' hasPublicKey: false' isRetargetable: false' contentType: (AssemblyContentType)2' noThrow: true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: id = new AssemblyIdentity("Foo"' new Version(1' 2' 3' 4)' null' ImmutableArray.Create<byte>()' hasPublicKey: false' isRetargetable: false' contentType: (AssemblyContentType)2' noThrow: true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: id = new AssemblyIdentity("Foo"' new Version(1' 2' 3' 4)' null' ImmutableArray.Create<byte>()' hasPublicKey: false' isRetargetable: false' contentType: (AssemblyContentType)2' noThrow: true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: id = new AssemblyIdentity("Foo"' new Version(1' 2' 3' 4)' null' ImmutableArray.Create<byte>()' hasPublicKey: false' isRetargetable: false' contentType: (AssemblyContentType)2' noThrow: true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: id = new AssemblyIdentity("Foo"' new Version(1' 2' 3' 4)' null' ImmutableArray.Create<byte>()' hasPublicKey: false' isRetargetable: true' contentType: AssemblyContentType.WindowsRuntime' noThrow: true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: id = new AssemblyIdentity("Foo"' new Version(1' 2' 3' 4)' null' ImmutableArray.Create<byte>()' hasPublicKey: false' isRetargetable: true' contentType: AssemblyContentType.WindowsRuntime' noThrow: true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: id = new AssemblyIdentity("Foo"' new Version(1' 2' 3' 4)' null' ImmutableArray.Create<byte>()' hasPublicKey: false' isRetargetable: true' contentType: AssemblyContentType.WindowsRuntime' noThrow: true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: Assert.Equal(new Version(1' 2' 3' 4)' id.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: Assert.Equal(new Version(1' 2' 3' 4)' id.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: Assert.Equal(new Version(1' 2' 3' 4)' id.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: id = new AssemblyIdentity("Foo"' new Version(1' 2' 3' 4)' "blah'"' ImmutableArray.Create<byte>()' hasPublicKey: false' isRetargetable: false' contentType: AssemblyContentType.Default' noThrow: true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: id = new AssemblyIdentity("Foo"' new Version(1' 2' 3' 4)' "blah'"' ImmutableArray.Create<byte>()' hasPublicKey: false' isRetargetable: false' contentType: AssemblyContentType.Default' noThrow: true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: id = new AssemblyIdentity("Foo"' new Version(1' 2' 3' 4)' "blah'"' ImmutableArray.Create<byte>()' hasPublicKey: false' isRetargetable: false' contentType: AssemblyContentType.Default' noThrow: true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: id = new AssemblyIdentity("Foo"' new Version(1' 2' 3' 4)' "*"' ImmutableArray.Create<byte>()' hasPublicKey: false' isRetargetable: false' contentType: AssemblyContentType.Default' noThrow: true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: id = new AssemblyIdentity("Foo"' new Version(1' 2' 3' 4)' "*"' ImmutableArray.Create<byte>()' hasPublicKey: false' isRetargetable: false' contentType: AssemblyContentType.Default' noThrow: true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,MetadataConstructor,The following statement contains a magic number: id = new AssemblyIdentity("Foo"' new Version(1' 2' 3' 4)' "*"' ImmutableArray.Create<byte>()' hasPublicKey: false' isRetargetable: false' contentType: AssemblyContentType.Default' noThrow: true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,ToAssemblyName,The following statement contains a magic number: ai = new AssemblyIdentity("foo"' new Version(1' 2' 3' 4)' "en-US"' RoPublicKey1'                  hasPublicKey: true'                  isRetargetable: true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,ToAssemblyName,The following statement contains a magic number: ai = new AssemblyIdentity("foo"' new Version(1' 2' 3' 4)' "en-US"' RoPublicKey1'                  hasPublicKey: true'                  isRetargetable: true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,ToAssemblyName,The following statement contains a magic number: ai = new AssemblyIdentity("foo"' new Version(1' 2' 3' 4)' "en-US"' RoPublicKey1'                  hasPublicKey: true'                  isRetargetable: true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,ToAssemblyName,The following statement contains a magic number: Assert.Equal(new Version(1' 2' 3' 4)' an.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,ToAssemblyName,The following statement contains a magic number: Assert.Equal(new Version(1' 2' 3' 4)' an.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyIdentityTests.cs,ToAssemblyName,The following statement contains a magic number: Assert.Equal(new Version(1' 2' 3' 4)' an.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyMetadataTests.cs,CreateFromFile,The following statement contains a magic number: Assert.Equal(3' a.GetModules().Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyMetadataTests.cs,CreateFromFile,The following statement contains a magic number: Assert.Equal("mod3.netmodule"' a.GetModules()[2].Name);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyMetadataTests.cs,ImageOwnership,The following statement contains a magic number: Assert.False(copy1.GetModules()[2].IsImageOwner' "Module should not own the image");
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyMetadataTests.cs,ImageOwnership,The following statement contains a magic number: Assert.Equal(m3.Module' copy1.GetModules()[2].Module);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyMetadataTests.cs,ImageOwnership,The following statement contains a magic number: Assert.False(copy2.GetModules()[2].IsImageOwner' "Module should not own the image");
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyMetadataTests.cs,ImageOwnership,The following statement contains a magic number: Assert.Equal(m3.Module' copy2.GetModules()[2].Module);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyMetadataTests.cs,ImageOwnership,The following statement contains a magic number: Assert.Throws<ObjectDisposedException>(() => copy1.GetModules()[2].Module);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyMetadataTests.cs,ImageOwnership,The following statement contains a magic number: Assert.NotNull(a.GetModules()[2].Module);
Magic Number,Microsoft.CodeAnalysis.UnitTests,AssemblyMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\AssemblyMetadataTests.cs,ImageOwnership,The following statement contains a magic number: Assert.Throws<ObjectDisposedException>(() => a.GetModules()[2].Module);
Magic Number,Microsoft.CodeAnalysis.UnitTests,MetadataHelpersTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataHelpersTests.cs,GenerateTypeNameConfigs,The following statement contains a magic number: typeParamStackDepth < 2
Magic Number,Microsoft.CodeAnalysis.UnitTests,MetadataHelpersTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataHelpersTests.cs,GenerateTypeNameConfigs,The following statement contains a magic number: nestingLevel <= 2
Magic Number,Microsoft.CodeAnalysis.UnitTests,MetadataHelpersTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataHelpersTests.cs,GenerateTypeNamesToDecode,The following statement contains a magic number: switch (typeNameConfig.arrayKind)                  {                      case ArrayKind.SingleDimensional:                          typeNamebuilder.Append("[]");                          expectedArrayRanks = new[] { 1 };                          break;                        case ArrayKind.MultiDimensional:                          typeNamebuilder.Append("[']");                          expectedArrayRanks = new[] { 2 };                          break;                        case ArrayKind.Jagged:                          typeNamebuilder.Append("['][]");                          expectedArrayRanks = new[] { 1' 2 };                          break;                  }
Magic Number,Microsoft.CodeAnalysis.UnitTests,MetadataHelpersTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataHelpersTests.cs,GenerateTypeNamesToDecode,The following statement contains a magic number: switch (typeNameConfig.arrayKind)                  {                      case ArrayKind.SingleDimensional:                          typeNamebuilder.Append("[]");                          expectedArrayRanks = new[] { 1 };                          break;                        case ArrayKind.MultiDimensional:                          typeNamebuilder.Append("[']");                          expectedArrayRanks = new[] { 2 };                          break;                        case ArrayKind.Jagged:                          typeNamebuilder.Append("['][]");                          expectedArrayRanks = new[] { 1' 2 };                          break;                  }
Magic Number,Microsoft.CodeAnalysis.UnitTests,MetadataHelpersTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataHelpersTests.cs,TestDecodeArrayTypeName_Valid,The following statement contains a magic number: DecodeTypeNameAndVerify("W[']"'                  expectedTopLevelType: "W"'                  expectedArrayRanks: new[] { 2 });
Magic Number,Microsoft.CodeAnalysis.UnitTests,MetadataHelpersTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataHelpersTests.cs,TestDecodeArrayTypeName_Valid,The following statement contains a magic number: DecodeTypeNameAndVerify("W[][']"'                  expectedTopLevelType: "W"'                  expectedArrayRanks: new[] { 1' 2 });
Magic Number,Microsoft.CodeAnalysis.UnitTests,MetadataHelpersTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataHelpersTests.cs,TestDecodeArrayTypeName_Valid,The following statement contains a magic number: DecodeTypeNameAndVerify("Y`1[W][][']"'                  expectedTopLevelType: "Y`1"'                  expectedTypeArguments: new[] { new MetadataHelpers.AssemblyQualifiedTypeName("W"' null' null' null' null) }'                  expectedArrayRanks: new[] { 1' 2 });
Magic Number,Microsoft.CodeAnalysis.UnitTests,MetadataHelpersTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataHelpersTests.cs,TestDecodeArrayTypeName_Valid,The following statement contains a magic number: DecodeTypeNameAndVerify("Y`1+F[[System.Int32[]' mscorlib]][''][][']"'                  expectedTopLevelType: "Y`1"'                  expectedNestedTypes: new[] { "F" }'                  expectedTypeArguments: new[] { new MetadataHelpers.AssemblyQualifiedTypeName(                                                      "System.Int32"'                                                      nestedTypes: null'                                                      typeArguments: null'                                                      arrayRanks: new[] { 1 }'                                                      assemblyName: "mscorlib") }'                  expectedArrayRanks: new[] { 3' 1' 2 });
Magic Number,Microsoft.CodeAnalysis.UnitTests,MetadataHelpersTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataHelpersTests.cs,TestDecodeArrayTypeName_Valid,The following statement contains a magic number: DecodeTypeNameAndVerify("Y`1+F[[System.Int32[]' mscorlib]][''][][']"'                  expectedTopLevelType: "Y`1"'                  expectedNestedTypes: new[] { "F" }'                  expectedTypeArguments: new[] { new MetadataHelpers.AssemblyQualifiedTypeName(                                                      "System.Int32"'                                                      nestedTypes: null'                                                      typeArguments: null'                                                      arrayRanks: new[] { 1 }'                                                      assemblyName: "mscorlib") }'                  expectedArrayRanks: new[] { 3' 1' 2 });
Magic Number,Microsoft.CodeAnalysis.UnitTests,MetadataHelpersTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataHelpersTests.cs,TestDecodeArrayTypeName_Valid,The following statement contains a magic number: DecodeTypeNameAndVerify("Y`1+Z`1[[System.Int32[]' mscorlib]' W][][']"'                  expectedTopLevelType: "Y`1"'                  expectedNestedTypes: new[] { "Z`1" }'                  expectedTypeArguments: new[] { new MetadataHelpers.AssemblyQualifiedTypeName(                                                      "System.Int32"'                                                      nestedTypes: null'                                                      typeArguments: null'                                                      arrayRanks: new[] { 1 }'                                                      assemblyName: "mscorlib")'                                                 new MetadataHelpers.AssemblyQualifiedTypeName("W"' null' null' null' null) }'                  expectedArrayRanks: new[] { 1' 2 });
Magic Number,Microsoft.CodeAnalysis.UnitTests,MetadataNameLimitsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataNameLimitTests.cs,TestEmpty,The following statement contains a magic number: CheckIsTooLong(""' 5' true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,MetadataNameLimitsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataNameLimitTests.cs,TestSingleByte,The following statement contains a magic number: CheckIsTooLong("a"' 5' true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,MetadataNameLimitsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataNameLimitTests.cs,TestSingleByte,The following statement contains a magic number: CheckIsTooLong("abc"' 5' true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,MetadataNameLimitsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataNameLimitTests.cs,TestSingleByte,The following statement contains a magic number: CheckIsTooLong("abcdef"' 5' false);
Magic Number,Microsoft.CodeAnalysis.UnitTests,MetadataNameLimitsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataNameLimitTests.cs,TestDoubleByte,The following statement contains a magic number: CheckIsTooLong("\u070F"' 5' true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,MetadataNameLimitsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataNameLimitTests.cs,TestDoubleByte,The following statement contains a magic number: CheckIsTooLong("\u070Fxyz"' 5' true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,MetadataNameLimitsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataNameLimitTests.cs,TestDoubleByte,The following statement contains a magic number: CheckIsTooLong("abc\u070Fxyz"' 5' false);
Magic Number,Microsoft.CodeAnalysis.UnitTests,MetadataNameLimitsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataNameLimitTests.cs,TestTripleByte,The following statement contains a magic number: CheckIsTooLong("\uFFFF"' 5' true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,MetadataNameLimitsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataNameLimitTests.cs,TestTripleByte,The following statement contains a magic number: CheckIsTooLong("\uFFFFyz"' 5' true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,MetadataNameLimitsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataNameLimitTests.cs,TestTripleByte,The following statement contains a magic number: CheckIsTooLong("abc\uFFFFxyz"' 5' false);
Magic Number,Microsoft.CodeAnalysis.UnitTests,ModuleMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\ModuleMetadataTests.cs,CreateFromMetadata_Errors,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => { fixed (byte* ptr = new byte[] { 1' 2' 3 }) ModuleMetadata.CreateFromMetadata((IntPtr)ptr' 0); });
Magic Number,Microsoft.CodeAnalysis.UnitTests,ModuleMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\ModuleMetadataTests.cs,CreateFromMetadata_Errors,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => { fixed (byte* ptr = new byte[] { 1' 2' 3 }) ModuleMetadata.CreateFromMetadata((IntPtr)ptr' 0); });
Magic Number,Microsoft.CodeAnalysis.UnitTests,ModuleMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\ModuleMetadataTests.cs,CreateFromMetadata_Errors,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => { fixed (byte* ptr = new byte[] { 1' 2' 3 }) ModuleMetadata.CreateFromMetadata((IntPtr)ptr' -1); });
Magic Number,Microsoft.CodeAnalysis.UnitTests,ModuleMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\ModuleMetadataTests.cs,CreateFromMetadata_Errors,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => { fixed (byte* ptr = new byte[] { 1' 2' 3 }) ModuleMetadata.CreateFromMetadata((IntPtr)ptr' -1); });
Magic Number,Microsoft.CodeAnalysis.UnitTests,ModuleMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\ModuleMetadataTests.cs,CreateFromMetadata_Errors,The following statement contains a magic number: var metadata = ModuleMetadata.CreateFromMetadata((IntPtr)ptr' 3);
Magic Number,Microsoft.CodeAnalysis.UnitTests,ModuleMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\ModuleMetadataTests.cs,CreateFromImage,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => { fixed (byte* ptr = new byte[] { 1' 2' 3 }) ModuleMetadata.CreateFromImage((IntPtr)ptr' 0); });
Magic Number,Microsoft.CodeAnalysis.UnitTests,ModuleMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\ModuleMetadataTests.cs,CreateFromImage,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => { fixed (byte* ptr = new byte[] { 1' 2' 3 }) ModuleMetadata.CreateFromImage((IntPtr)ptr' 0); });
Magic Number,Microsoft.CodeAnalysis.UnitTests,ModuleMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\ModuleMetadataTests.cs,CreateFromImage,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => { fixed (byte* ptr = new byte[] { 1' 2' 3 }) ModuleMetadata.CreateFromImage((IntPtr)ptr' -1); });
Magic Number,Microsoft.CodeAnalysis.UnitTests,ModuleMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\ModuleMetadataTests.cs,CreateFromImage,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => { fixed (byte* ptr = new byte[] { 1' 2' 3 }) ModuleMetadata.CreateFromImage((IntPtr)ptr' -1); });
Magic Number,Microsoft.CodeAnalysis.UnitTests,ModuleMetadataTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\ModuleMetadataTests.cs,CreateFromFile,The following statement contains a magic number: Assert.Throws<PathTooLongException>(() => ModuleMetadata.CreateFromFile(_systemDrive + @":\" + new string('x'' 1000)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,ObjectSerializationTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\ObjectSerializationTests.cs,TestRoundTripPrimitives,The following statement contains a magic number: writer.WriteCompressedUInt(Byte.MaxValue >> 2);
Magic Number,Microsoft.CodeAnalysis.UnitTests,ObjectSerializationTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\ObjectSerializationTests.cs,TestRoundTripPrimitives,The following statement contains a magic number: writer.WriteCompressedUInt(UInt16.MaxValue >> 2);
Magic Number,Microsoft.CodeAnalysis.UnitTests,ObjectSerializationTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\ObjectSerializationTests.cs,TestRoundTripPrimitives,The following statement contains a magic number: writer.WriteCompressedUInt(UInt32.MaxValue >> 2);
Magic Number,Microsoft.CodeAnalysis.UnitTests,ObjectSerializationTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\ObjectSerializationTests.cs,TestRoundTripPrimitives,The following statement contains a magic number: Assert.Equal((UInt32)(Byte.MaxValue >> 2)' reader.ReadCompressedUInt());
Magic Number,Microsoft.CodeAnalysis.UnitTests,ObjectSerializationTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\ObjectSerializationTests.cs,TestRoundTripPrimitives,The following statement contains a magic number: Assert.Equal((UInt32)(UInt16.MaxValue >> 2)' reader.ReadCompressedUInt());
Magic Number,Microsoft.CodeAnalysis.UnitTests,ObjectSerializationTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\ObjectSerializationTests.cs,TestRoundTripPrimitives,The following statement contains a magic number: Assert.Equal(UInt32.MaxValue >> 2' reader.ReadCompressedUInt());
Magic Number,Microsoft.CodeAnalysis.UnitTests,ObjectSerializationTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\ObjectSerializationTests.cs,TestRoundTripArrays,The following statement contains a magic number: TestRoundTripArray(new object[] { "hello"' 123' 45m' 99.9' 'c' });
Magic Number,Microsoft.CodeAnalysis.UnitTests,ObjectSerializationTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\ObjectSerializationTests.cs,TestRoundTripArrays,The following statement contains a magic number: TestRoundTripArray(new object[] { "hello"' 123' 45m' 99.9' 'c' });
Magic Number,Microsoft.CodeAnalysis.UnitTests,ObjectSerializationTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\ObjectSerializationTests.cs,TestRoundTripArrays,The following statement contains a magic number: TestRoundTripArray(new object[] { "hello"' 123' 45m' 99.9' 'c' });
Magic Number,Microsoft.CodeAnalysis.UnitTests,ObjectSerializationTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\ObjectSerializationTests.cs,TestRoundTripWritableObject,The following statement contains a magic number: var instance = new WritableClass(123' "456");
Magic Number,Microsoft.CodeAnalysis.UnitTests,ObjectSerializationTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\ObjectSerializationTests.cs,TestObjectMapLimits,The following statement contains a magic number: pass < 2
Magic Number,Microsoft.CodeAnalysis.UnitTests,ObjectSerializationTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\ObjectSerializationTests.cs,TestObjectMapLimits,The following statement contains a magic number: pass < 2
Magic Number,Microsoft.CodeAnalysis.UnitTests,ResourceDescriptionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\ResourceDescriptionTests.cs,ResourceDescriptionCtors,The following statement contains a magic number: new ResourceDescription(new string('e'' 1024)' data' true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,ResourceDescriptionTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\ResourceDescriptionTests.cs,ResourceDescriptionCtors,The following statement contains a magic number: new ResourceDescription("x"' new string('e'' 260)' data' true);
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTableTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\StringTableTests.cs,TestAddSameWithVariousInputsProducesSameStringInstance,The following statement contains a magic number: var s5 = st.Add("ABC DEF"' 3' 1);
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTableTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\StringTableTests.cs,TestTextEqualsASCII,The following statement contains a magic number: var substrResult = StringTable.TextEquals(str' "xxx" + ascii + "yyy"' 3' ascii.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests,EncodedStringTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\EncodedStringTextTests.cs,CreateMemoryStreamBasedEncodedText,The following statement contains a magic number: byte[] buffer = new byte[bytes.Length + 10];
Magic Number,Microsoft.CodeAnalysis.UnitTests,EncodedStringTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\EncodedStringTextTests.cs,IsBinary,The following statement contains a magic number: var encoding = Encoding.GetEncoding(1252);
Magic Number,Microsoft.CodeAnalysis.UnitTests,EncodedStringTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\EncodedStringTextTests.cs,TestMultithreadedDecoding,The following statement contains a magic number: var parallelOptions = new ParallelOptions { MaxDegreeOfParallelism = Environment.ProcessorCount * 2 };
Magic Number,Microsoft.CodeAnalysis.UnitTests,EncodedStringTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\EncodedStringTextTests.cs,TestMultithreadedDecoding,The following statement contains a magic number: Parallel.For(0' 500' parallelOptions' i =>              {                  using (var stream = new FileStream(path' FileMode.Open' FileAccess.Read' FileShare.Read))                  {                      var sourceText = EncodedStringText.Create(stream);                      Assert.Equal(expectedText' sourceText.ToString());                  }              });
Magic Number,Microsoft.CodeAnalysis.UnitTests,EncodedStringTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\EncodedStringTextTests.cs,MemoryStreamBasedEncodedText1,The following statement contains a magic number: Assert.Equal(3' text.Lines[0].Span.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests,EncodedStringTextTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\EncodedStringTextTests.cs,MemoryStreamBasedEncodedText2,The following statement contains a magic number: Assert.Equal(3' text.Lines[0].Span.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringText_LineTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringText_LineTest.cs,FromSpanNotIncludingBreaks,The following statement contains a magic number: var span = new TextSpan(0' 3);
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringText_LineTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringText_LineTest.cs,FromSpanNotIncludingBreaks,The following statement contains a magic number: Assert.Equal(5' line.EndIncludingLineBreak);
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringText_LineTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringText_LineTest.cs,FromSpanIncludingBreaksAtEnd,The following statement contains a magic number: Assert.Equal(3' line.End);
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringText_LineTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringText_LineTest.cs,FromSpanIncludingBreaks,The following statement contains a magic number: var span = TextSpan.FromBounds(0' 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringText_LineTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringText_LineTest.cs,FromSpanIncludingBreaks,The following statement contains a magic number: Assert.Equal(3' line.End);
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringText_LineTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringText_LineTest.cs,FromSpanNoBreaksBeforeOrAfter,The following statement contains a magic number: var line = TextLine.FromSpan(text' new TextSpan(0' 3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringText_LineTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringText_LineTest.cs,FromSpanNotEndOfLineThrows,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => TextLine.FromSpan(text' new TextSpan(0' 3)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringText_LineTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringText_LineTest.cs,FromSpanNotStartOfLineThrows,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => TextLine.FromSpan(text' new TextSpan(1' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringText_LineTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringText_LineTest.cs,FromSpanLengthGreaterThanTextThrows,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => TextLine.FromSpan(text' new TextSpan(1' 10)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringText_LineTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringText_LineTest.cs,FromSpanStartsBeforeZeroThrows,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => TextLine.FromSpan(text' new TextSpan(-1' 2)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringText_LineTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringText_LineTest.cs,FromSpanZeroLengthBeyondEndThrows,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => TextLine.FromSpan(text' new TextSpan(7' 0)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringText_LineTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringText_LineTest.cs,FromSpanTextNullThrows,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => TextLine.FromSpan(null' new TextSpan(0' 2)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,ChecksumToHexQuads,The following statement contains a magic number: i > 0 && ((i % 4) == 0)
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,FromString,The following statement contains a magic number: Assert.Equal(3' data.Lines[0].Span.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines1,The following statement contains a magic number: Assert.Equal(2' data.Lines.Count);
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines1,The following statement contains a magic number: CheckLine(data' lineNumber: 0' start: 0' length: 3' newlineLength: 2' lineText: "foo");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines1,The following statement contains a magic number: CheckLine(data' lineNumber: 0' start: 0' length: 3' newlineLength: 2' lineText: "foo");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines1,The following statement contains a magic number: CheckLine(data' lineNumber: 1' start: 5' length: 4' newlineLength: 0' lineText: " bar");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines1,The following statement contains a magic number: CheckLine(data' lineNumber: 1' start: 5' length: 4' newlineLength: 0' lineText: " bar");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines2,The following statement contains a magic number: Assert.Equal(3' data.Lines.Count);
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines2,The following statement contains a magic number: CheckLine(data' lineNumber: 0' start: 0' length: 3' newlineLength: 2' lineText: "foo");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines2,The following statement contains a magic number: CheckLine(data' lineNumber: 0' start: 0' length: 3' newlineLength: 2' lineText: "foo");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines2,The following statement contains a magic number: CheckLine(data' lineNumber: 1' start: 5' length: 3' newlineLength: 2' lineText: "bar");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines2,The following statement contains a magic number: CheckLine(data' lineNumber: 1' start: 5' length: 3' newlineLength: 2' lineText: "bar");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines2,The following statement contains a magic number: CheckLine(data' lineNumber: 1' start: 5' length: 3' newlineLength: 2' lineText: "bar");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines2,The following statement contains a magic number: CheckLine(data' lineNumber: 2' start: 10' length: 3' newlineLength: 0' lineText: "baz");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines2,The following statement contains a magic number: CheckLine(data' lineNumber: 2' start: 10' length: 3' newlineLength: 0' lineText: "baz");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines2,The following statement contains a magic number: CheckLine(data' lineNumber: 2' start: 10' length: 3' newlineLength: 0' lineText: "baz");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines3,The following statement contains a magic number: Assert.Equal(2' data.Lines.Count);
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines3,The following statement contains a magic number: CheckLine(data' lineNumber: 0' start: 0' length: 3' newlineLength: 2' lineText: "foo");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines3,The following statement contains a magic number: CheckLine(data' lineNumber: 0' start: 0' length: 3' newlineLength: 2' lineText: "foo");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines3,The following statement contains a magic number: CheckLine(data' lineNumber: 1' start: 5' length: 3' newlineLength: 0' lineText: "bar");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines3,The following statement contains a magic number: CheckLine(data' lineNumber: 1' start: 5' length: 3' newlineLength: 0' lineText: "bar");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines4,The following statement contains a magic number: Assert.Equal(4' data.Lines.Count);
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines4,The following statement contains a magic number: CheckLine(data' lineNumber: 0' start: 0' length: 3' newlineLength: 1' lineText: "foo");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines4,The following statement contains a magic number: CheckLine(data' lineNumber: 1' start: 4' length: 0' newlineLength: 1' lineText: "");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines4,The following statement contains a magic number: CheckLine(data' lineNumber: 2' start: 5' length: 3' newlineLength: 1' lineText: "bar");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines4,The following statement contains a magic number: CheckLine(data' lineNumber: 2' start: 5' length: 3' newlineLength: 1' lineText: "bar");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines4,The following statement contains a magic number: CheckLine(data' lineNumber: 2' start: 5' length: 3' newlineLength: 1' lineText: "bar");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines4,The following statement contains a magic number: CheckLine(data' lineNumber: 3' start: 9' length: 0' newlineLength: 0' lineText: "");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,NewLines4,The following statement contains a magic number: CheckLine(data' lineNumber: 3' start: 9' length: 0' newlineLength: 0' lineText: "");
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,LinesGetText1,The following statement contains a magic number: Assert.Equal(2' data.Lines.Count);
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTest.cs,FromStream_CheckSum_SeekToBeginning,The following statement contains a magic number: stream.Seek(3' SeekOrigin.Begin);
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest_Default,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTests_Default.cs,NewLines1,The following statement contains a magic number: Assert.Equal(2' data.Lines.Count);
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest_Default,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTests_Default.cs,NewLines1,The following statement contains a magic number: Assert.Equal(3' data.Lines[0].Span.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest_Default,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTests_Default.cs,NewLines1,The following statement contains a magic number: Assert.Equal(5' data.Lines[1].Span.Start);
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest_Default,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTests_Default.cs,NewLines2,The following statement contains a magic number: Assert.Equal(3' data.Lines.Count);
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest_Default,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTests_Default.cs,NewLines2,The following statement contains a magic number: Assert.Equal("baz"' data.ToString(data.Lines[2].Span));
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest_Default,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTests_Default.cs,NewLines3,The following statement contains a magic number: Assert.Equal(2' data.Lines.Count);
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest_Default,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTests_Default.cs,NewLines4,The following statement contains a magic number: Assert.Equal(3' data.Lines.Count);
Magic Number,Microsoft.CodeAnalysis.UnitTests,StringTextTest_Default,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\StringTextTests_Default.cs,LinesGetText1,The following statement contains a magic number: Assert.Equal(2' data.Lines.Count);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Ctor2,The following statement contains a magic number: var span = new TextSpan(2' 50);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Ctor2,The following statement contains a magic number: var span = new TextSpan(2' 50);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Ctor2,The following statement contains a magic number: var range = new TextChangeRange(span' 42);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Ctor2,The following statement contains a magic number: Assert.Equal(42' range.NewLength);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Equality,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new TextChangeRange()).WithEqualValues(new TextChangeRange())'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithEqualValues(new TextChangeRange(new TextSpan(42' 2)' 13))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 2)' 5))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 4)' 13)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Equality,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new TextChangeRange()).WithEqualValues(new TextChangeRange())'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithEqualValues(new TextChangeRange(new TextSpan(42' 2)' 13))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 2)' 5))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 4)' 13)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Equality,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new TextChangeRange()).WithEqualValues(new TextChangeRange())'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithEqualValues(new TextChangeRange(new TextSpan(42' 2)' 13))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 2)' 5))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 4)' 13)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Equality,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new TextChangeRange()).WithEqualValues(new TextChangeRange())'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithEqualValues(new TextChangeRange(new TextSpan(42' 2)' 13))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 2)' 5))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 4)' 13)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Equality,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new TextChangeRange()).WithEqualValues(new TextChangeRange())'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithEqualValues(new TextChangeRange(new TextSpan(42' 2)' 13))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 2)' 5))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 4)' 13)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Equality,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new TextChangeRange()).WithEqualValues(new TextChangeRange())'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithEqualValues(new TextChangeRange(new TextSpan(42' 2)' 13))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 2)' 5))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 4)' 13)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Equality,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new TextChangeRange()).WithEqualValues(new TextChangeRange())'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithEqualValues(new TextChangeRange(new TextSpan(42' 2)' 13))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 2)' 5))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 4)' 13)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Equality,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new TextChangeRange()).WithEqualValues(new TextChangeRange())'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithEqualValues(new TextChangeRange(new TextSpan(42' 2)' 13))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 2)' 5))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 4)' 13)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Equality,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new TextChangeRange()).WithEqualValues(new TextChangeRange())'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithEqualValues(new TextChangeRange(new TextSpan(42' 2)' 13))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 2)' 5))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 4)' 13)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Equality,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new TextChangeRange()).WithEqualValues(new TextChangeRange())'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithEqualValues(new TextChangeRange(new TextSpan(42' 2)' 13))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 2)' 5))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 4)' 13)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Equality,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new TextChangeRange()).WithEqualValues(new TextChangeRange())'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithEqualValues(new TextChangeRange(new TextSpan(42' 2)' 13))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 2)' 5))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 4)' 13)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Equality,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new TextChangeRange()).WithEqualValues(new TextChangeRange())'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithEqualValues(new TextChangeRange(new TextSpan(42' 2)' 13))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 2)' 5))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 4)' 13)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Equality,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new TextChangeRange()).WithEqualValues(new TextChangeRange())'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithEqualValues(new TextChangeRange(new TextSpan(42' 2)' 13))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 2)' 5))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 4)' 13)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Equality,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new TextChangeRange()).WithEqualValues(new TextChangeRange())'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithEqualValues(new TextChangeRange(new TextSpan(42' 2)' 13))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 2)' 5))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 4)' 13)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Equality,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new TextChangeRange()).WithEqualValues(new TextChangeRange())'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithEqualValues(new TextChangeRange(new TextSpan(42' 2)' 13))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 2)' 5))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 4)' 13)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Equality,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new TextChangeRange()).WithEqualValues(new TextChangeRange())'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithEqualValues(new TextChangeRange(new TextSpan(42' 2)' 13))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 2)' 5))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 4)' 13)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Equality,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new TextChangeRange()).WithEqualValues(new TextChangeRange())'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithEqualValues(new TextChangeRange(new TextSpan(42' 2)' 13))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 2)' 5))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 4)' 13)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeRangeTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeRangeTest.cs,Equality,The following statement contains a magic number: EqualityUtil.RunAll(                  (left' right) => left == right'                  (left' right) => left != right'                  EqualityUnit.Create(new TextChangeRange()).WithEqualValues(new TextChangeRange())'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithEqualValues(new TextChangeRange(new TextSpan(42' 2)' 13))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 2)' 5))'                  EqualityUnit.Create(new TextChangeRange(new TextSpan(42' 2)' 13)).WithNotEqualValues(new TextChangeRange(new TextSpan(42' 4)' 13)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestSubTextStart,The following statement contains a magic number: var subText = text.GetSubText(6);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestSubTextSpanFirst,The following statement contains a magic number: var subText = text.GetSubText(new TextSpan(0' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestSubTextSpanLast,The following statement contains a magic number: var subText = text.GetSubText(new TextSpan(6' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestSubTextSpanLast,The following statement contains a magic number: var subText = text.GetSubText(new TextSpan(6' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestSubTextSpanMid,The following statement contains a magic number: var subText = text.GetSubText(new TextSpan(4' 3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestSubTextSpanMid,The following statement contains a magic number: var subText = text.GetSubText(new TextSpan(4' 3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedText,The following statement contains a magic number: var newText = text.Replace(6' 0' "Beautiful ");
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextChanges,The following statement contains a magic number: var newText = text.Replace(6' 0' "Beautiful ");
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextChanges,The following statement contains a magic number: Assert.Equal(6' changes[0].Span.Start);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextChanges,The following statement contains a magic number: Assert.Equal(10' changes[0].NewLength);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextWithMultipleChanges,The following statement contains a magic number: var newText = text.WithChanges(                  new TextChange(new TextSpan(0' 5)' "Halo")'                  new TextChange(new TextSpan(6' 5)' "Universe"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextWithMultipleChanges,The following statement contains a magic number: var newText = text.WithChanges(                  new TextChange(new TextSpan(0' 5)' "Halo")'                  new TextChange(new TextSpan(6' 5)' "Universe"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextWithMultipleChanges,The following statement contains a magic number: var newText = text.WithChanges(                  new TextChange(new TextSpan(0' 5)' "Halo")'                  new TextChange(new TextSpan(6' 5)' "Universe"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextWithMultipleOverlappingChanges,The following statement contains a magic number: var changes = new[]              {                  new TextChange(new TextSpan(0' 5)' "Halo")'                  new TextChange(new TextSpan(3' 5)' "Universe")              };
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextWithMultipleOverlappingChanges,The following statement contains a magic number: var changes = new[]              {                  new TextChange(new TextSpan(0' 5)' "Halo")'                  new TextChange(new TextSpan(3' 5)' "Universe")              };
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextWithMultipleOverlappingChanges,The following statement contains a magic number: var changes = new[]              {                  new TextChange(new TextSpan(0' 5)' "Halo")'                  new TextChange(new TextSpan(3' 5)' "Universe")              };
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextWithMultipleUnorderedChanges,The following statement contains a magic number: var changes = new[]              {                  new TextChange(new TextSpan(6' 7)' "Universe")'                  new TextChange(new TextSpan(0' 5)' "Halo")              };
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextWithMultipleUnorderedChanges,The following statement contains a magic number: var changes = new[]              {                  new TextChange(new TextSpan(6' 7)' "Universe")'                  new TextChange(new TextSpan(0' 5)' "Halo")              };
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextWithMultipleUnorderedChanges,The following statement contains a magic number: var changes = new[]              {                  new TextChange(new TextSpan(6' 7)' "Universe")'                  new TextChange(new TextSpan(0' 5)' "Halo")              };
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextWithMultipleConsequitiveInsertsSamePosition,The following statement contains a magic number: var newText = text.WithChanges(                  new TextChange(new TextSpan(6' 0)' "Super ")'                  new TextChange(new TextSpan(6' 0)' "Spectacular "));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextWithMultipleConsequitiveInsertsSamePosition,The following statement contains a magic number: var newText = text.WithChanges(                  new TextChange(new TextSpan(6' 0)' "Super ")'                  new TextChange(new TextSpan(6' 0)' "Spectacular "));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextWithReplaceAfterInsertSamePosition,The following statement contains a magic number: var newText = text.WithChanges(                  new TextChange(new TextSpan(6' 0)' "Super ")'                  new TextChange(new TextSpan(6' 2)' "Vu"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextWithReplaceAfterInsertSamePosition,The following statement contains a magic number: var newText = text.WithChanges(                  new TextChange(new TextSpan(6' 0)' "Super ")'                  new TextChange(new TextSpan(6' 2)' "Vu"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextWithReplaceAfterInsertSamePosition,The following statement contains a magic number: var newText = text.WithChanges(                  new TextChange(new TextSpan(6' 0)' "Super ")'                  new TextChange(new TextSpan(6' 2)' "Vu"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextWithReplaceBeforeInsertSamePosition,The following statement contains a magic number: var changes = new[]              {                  new TextChange(new TextSpan(6' 2)' "Vu")'                  new TextChange(new TextSpan(6' 0)' "Super ")              };
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextWithReplaceBeforeInsertSamePosition,The following statement contains a magic number: var changes = new[]              {                  new TextChange(new TextSpan(6' 2)' "Vu")'                  new TextChange(new TextSpan(6' 0)' "Super ")              };
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextWithReplaceBeforeInsertSamePosition,The following statement contains a magic number: var changes = new[]              {                  new TextChange(new TextSpan(6' 2)' "Vu")'                  new TextChange(new TextSpan(6' 0)' "Super ")              };
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextWithDeleteAfterDeleteAdjacent,The following statement contains a magic number: var newText = text.WithChanges(                  new TextChange(new TextSpan(4' 1)' string.Empty)'                  new TextChange(new TextSpan(5' 1)' string.Empty));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestChangedTextWithDeleteAfterDeleteAdjacent,The following statement contains a magic number: var newText = text.WithChanges(                  new TextChange(new TextSpan(4' 1)' string.Empty)'                  new TextChange(new TextSpan(5' 1)' string.Empty));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestSubTextAfterMultipleChanges,The following statement contains a magic number: var newText = text.WithChanges(                  new TextChange(new TextSpan(4' 1)' string.Empty)'                  new TextChange(new TextSpan(6' 5)' "Universe"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestSubTextAfterMultipleChanges,The following statement contains a magic number: var newText = text.WithChanges(                  new TextChange(new TextSpan(4' 1)' string.Empty)'                  new TextChange(new TextSpan(6' 5)' "Universe"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestSubTextAfterMultipleChanges,The following statement contains a magic number: var newText = text.WithChanges(                  new TextChange(new TextSpan(4' 1)' string.Empty)'                  new TextChange(new TextSpan(6' 5)' "Universe"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestSubTextAfterMultipleChanges,The following statement contains a magic number: var subText = newText.GetSubText(new TextSpan(3' 4));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestSubTextAfterMultipleChanges,The following statement contains a magic number: var subText = newText.GetSubText(new TextSpan(3' 4));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestLinesInChangedText,The following statement contains a magic number: var newText = text.WithChanges(                  new TextChange(new TextSpan(4' 1)' string.Empty));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestCopyTo,The following statement contains a magic number: var newText = text.WithChanges(                  new TextChange(new TextSpan(6' 5)' "Universe"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestCopyTo,The following statement contains a magic number: var newText = text.WithChanges(                  new TextChange(new TextSpan(6' 5)' "Universe"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestCopyTo,The following statement contains a magic number: var destination = new char[32];
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestCopyTo,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => newText.CopyTo(-1' destination' 0' 2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestCopyTo,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => newText.CopyTo(0' destination' -1' 2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestCopyTo,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => newText.CopyTo(0' null' 0' 2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestCopyTo,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => newText.CopyTo(newText.Length - 1' destination' 0' 2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestCopyTo,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => newText.CopyTo(0' destination' destination.Length - 1' 2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestGetTextChangesToChangedText,The following statement contains a magic number: var text = SourceText.From(new string('.'' 2048)' Encoding.UTF7' SourceHashAlgorithm.Sha256);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestGetTextChangesToChangedText,The following statement contains a magic number: var changes = new TextChange[] {                  new TextChange(new TextSpan(0' 1)' "[1]")'                  new TextChange(new TextSpan(1' 1)' "[2]")'                  new TextChange(new TextSpan(5' 0)' "[3]")'                  new TextChange(new TextSpan(25' 2)' "[4]")              };
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestGetTextChangesToChangedText,The following statement contains a magic number: var changes = new TextChange[] {                  new TextChange(new TextSpan(0' 1)' "[1]")'                  new TextChange(new TextSpan(1' 1)' "[2]")'                  new TextChange(new TextSpan(5' 0)' "[3]")'                  new TextChange(new TextSpan(25' 2)' "[4]")              };
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextChangeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextChangeTests.cs,TestGetTextChangesToChangedText,The following statement contains a magic number: var changes = new TextChange[] {                  new TextChange(new TextSpan(0' 1)' "[1]")'                  new TextChange(new TextSpan(1' 1)' "[2]")'                  new TextChange(new TextSpan(5' 0)' "[3]")'                  new TextChange(new TextSpan(25' 2)' "[4]")              };
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,Ctor1,The following statement contains a magic number: var span = new TextSpan(0' 42);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,Ctor1,The following statement contains a magic number: Assert.Equal(42' span.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,Ctor1,The following statement contains a magic number: Assert.Equal(42' span.End);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,Ctor2,The following statement contains a magic number: var span = new TextSpan(1' 40);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,Ctor2,The following statement contains a magic number: Assert.Equal(40' span.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,Ctor2,The following statement contains a magic number: Assert.Equal(41' span.End);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,Equals1,The following statement contains a magic number: var s1 = new TextSpan(1' 40);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,Equals1,The following statement contains a magic number: var s2 = new TextSpan(1' 40);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,Equals2,The following statement contains a magic number: var s1 = new TextSpan(1' 40);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,Equals2,The following statement contains a magic number: var s2 = new TextSpan(2' 40);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,Equals2,The following statement contains a magic number: var s2 = new TextSpan(2' 40);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,Equals3,The following statement contains a magic number: var s1 = new TextSpan(1' 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,Equals3,The following statement contains a magic number: var s2 = new TextSpan(1' 40);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpan02,The following statement contains a magic number: TextSpan span = new TextSpan(15' 1485);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpan02,The following statement contains a magic number: TextSpan span = new TextSpan(15' 1485);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpan02,The following statement contains a magic number: Assert.Equal(span.Start' 15);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpan02,The following statement contains a magic number: Assert.Equal(span.End' 1500);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpan02,The following statement contains a magic number: Assert.Equal(span.Length' 1485);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContains00,The following statement contains a magic number: TextSpan span = new TextSpan(0' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContains00,The following statement contains a magic number: Assert.True(span.Contains(3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContains00,The following statement contains a magic number: Assert.False(span.Contains(30));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContains00,The following statement contains a magic number: Assert.False(span.Contains(11));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContains01,The following statement contains a magic number: TextSpan span_05_15 = new TextSpan(5' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContains01,The following statement contains a magic number: TextSpan span_05_15 = new TextSpan(5' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContains01,The following statement contains a magic number: TextSpan span_03_10 = new TextSpan(3' 7);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContains01,The following statement contains a magic number: TextSpan span_03_10 = new TextSpan(3' 7);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContains01,The following statement contains a magic number: TextSpan span_10_11 = new TextSpan(10' 1);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContains01,The following statement contains a magic number: TextSpan span_00_03 = new TextSpan(0' 3);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContainsEmpty,The following statement contains a magic number: Assert.False(new TextSpan(2' 5).Contains(new TextSpan(0' 0)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContainsEmpty,The following statement contains a magic number: Assert.False(new TextSpan(2' 5).Contains(new TextSpan(0' 0)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContainsEmpty,The following statement contains a magic number: Assert.False(new TextSpan(2' 5).Contains(new TextSpan(10' 0)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContainsEmpty,The following statement contains a magic number: Assert.False(new TextSpan(2' 5).Contains(new TextSpan(10' 0)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContainsEmpty,The following statement contains a magic number: Assert.False(new TextSpan(2' 5).Contains(new TextSpan(10' 0)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContainsEmpty,The following statement contains a magic number: Assert.True(new TextSpan(2' 5).Contains(new TextSpan(3' 0)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContainsEmpty,The following statement contains a magic number: Assert.True(new TextSpan(2' 5).Contains(new TextSpan(3' 0)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContainsEmpty,The following statement contains a magic number: Assert.True(new TextSpan(2' 5).Contains(new TextSpan(3' 0)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContainsEmpty,The following statement contains a magic number: Assert.True(new TextSpan(2' 5).Contains(new TextSpan(2' 0)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContainsEmpty,The following statement contains a magic number: Assert.True(new TextSpan(2' 5).Contains(new TextSpan(2' 0)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContainsEmpty,The following statement contains a magic number: Assert.True(new TextSpan(2' 5).Contains(new TextSpan(2' 0)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContainsEmpty,The following statement contains a magic number: Assert.True(new TextSpan(2' 5).Contains(new TextSpan(7' 0)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContainsEmpty,The following statement contains a magic number: Assert.True(new TextSpan(2' 5).Contains(new TextSpan(7' 0)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContainsEmpty,The following statement contains a magic number: Assert.True(new TextSpan(2' 5).Contains(new TextSpan(7' 0)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContainsEmpty,The following statement contains a magic number: Assert.True(new TextSpan(2' 0).Contains(new TextSpan(2' 0)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanContainsEmpty,The following statement contains a magic number: Assert.True(new TextSpan(2' 0).Contains(new TextSpan(2' 0)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanEmptyContains,The following statement contains a magic number: Assert.False(new TextSpan(0' 0).Contains(new TextSpan(2' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanEmptyContains,The following statement contains a magic number: Assert.False(new TextSpan(0' 0).Contains(new TextSpan(2' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanEmptyContains,The following statement contains a magic number: Assert.False(new TextSpan(10' 0).Contains(new TextSpan(2' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanEmptyContains,The following statement contains a magic number: Assert.False(new TextSpan(10' 0).Contains(new TextSpan(2' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanEmptyContains,The following statement contains a magic number: Assert.False(new TextSpan(10' 0).Contains(new TextSpan(2' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanEmptyContains,The following statement contains a magic number: Assert.False(new TextSpan(3' 0).Contains(new TextSpan(2' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanEmptyContains,The following statement contains a magic number: Assert.False(new TextSpan(3' 0).Contains(new TextSpan(2' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanEmptyContains,The following statement contains a magic number: Assert.False(new TextSpan(3' 0).Contains(new TextSpan(2' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanEmptyContains,The following statement contains a magic number: Assert.False(new TextSpan(2' 0).Contains(new TextSpan(2' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanEmptyContains,The following statement contains a magic number: Assert.False(new TextSpan(2' 0).Contains(new TextSpan(2' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanEmptyContains,The following statement contains a magic number: Assert.False(new TextSpan(2' 0).Contains(new TextSpan(2' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanEmptyContains,The following statement contains a magic number: Assert.False(new TextSpan(7' 0).Contains(new TextSpan(2' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanEmptyContains,The following statement contains a magic number: Assert.False(new TextSpan(7' 0).Contains(new TextSpan(2' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanEmptyContains,The following statement contains a magic number: Assert.False(new TextSpan(7' 0).Contains(new TextSpan(2' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanEquality00,The following statement contains a magic number: TextSpan span1 = new TextSpan(0' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanEquality00,The following statement contains a magic number: TextSpan span2 = new TextSpan(0' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanEquality01,The following statement contains a magic number: TextSpan span1 = new TextSpan(0' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanEquality01,The following statement contains a magic number: TextSpan span2 = new TextSpan(0' 11);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanEquality01,The following statement contains a magic number: TextSpan span3 = new TextSpan(1' 11);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanEquality01,The following statement contains a magic number: Assert.NotEqual<object>(new string('a'' 3)' span1);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanOverlap00,The following statement contains a magic number: TextSpan span1 = new TextSpan(10' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanOverlap00,The following statement contains a magic number: TextSpan span1 = new TextSpan(10' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanOverlap00,The following statement contains a magic number: TextSpan span2 = new TextSpan(5' 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanOverlap00,The following statement contains a magic number: TextSpan span2 = new TextSpan(5' 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanOverlap01,The following statement contains a magic number: TextSpan span1 = new TextSpan(10' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanOverlap01,The following statement contains a magic number: TextSpan span1 = new TextSpan(10' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanOverlap01,The following statement contains a magic number: TextSpan span2 = new TextSpan(5' 2);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanOverlap01,The following statement contains a magic number: TextSpan span2 = new TextSpan(5' 2);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanOverlap02,The following statement contains a magic number: TextSpan span1 = new TextSpan(10' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanOverlap02,The following statement contains a magic number: TextSpan span1 = new TextSpan(10' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanOverlap02,The following statement contains a magic number: TextSpan span2 = new TextSpan(5' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanOverlap02,The following statement contains a magic number: TextSpan span2 = new TextSpan(5' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanOverlap02,The following statement contains a magic number: Assert.Equal(span1.Overlap(span2)' new TextSpan(10' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanOverlap02,The following statement contains a magic number: Assert.Equal(span1.Overlap(span2)' new TextSpan(10' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanOverlap02,The following statement contains a magic number: Assert.Equal(span2.Overlap(span1)' new TextSpan(10' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanOverlap02,The following statement contains a magic number: Assert.Equal(span2.Overlap(span1)' new TextSpan(10' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanOverlap03,The following statement contains a magic number: TextSpan span1 = new TextSpan(10' 0);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanOverlap03,The following statement contains a magic number: TextSpan span2 = new TextSpan(10' 0);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanOverlap04,The following statement contains a magic number: TextSpan span1 = new TextSpan(10' 0);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanOverlap04,The following statement contains a magic number: TextSpan span2 = new TextSpan(5' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanOverlap04,The following statement contains a magic number: TextSpan span2 = new TextSpan(5' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection00,The following statement contains a magic number: TextSpan span1 = new TextSpan(10' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection00,The following statement contains a magic number: TextSpan span1 = new TextSpan(10' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection00,The following statement contains a magic number: TextSpan span2 = new TextSpan(5' 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection00,The following statement contains a magic number: TextSpan span2 = new TextSpan(5' 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection00,The following statement contains a magic number: Assert.Equal(span1.Intersection(span2)' new TextSpan(10' 0));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection00,The following statement contains a magic number: Assert.Equal(span2.Intersection(span1)' new TextSpan(10' 0));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection01,The following statement contains a magic number: TextSpan span1 = new TextSpan(10' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection01,The following statement contains a magic number: TextSpan span1 = new TextSpan(10' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection01,The following statement contains a magic number: TextSpan span2 = new TextSpan(5' 2);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection01,The following statement contains a magic number: TextSpan span2 = new TextSpan(5' 2);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection02,The following statement contains a magic number: TextSpan span1 = new TextSpan(10' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection02,The following statement contains a magic number: TextSpan span1 = new TextSpan(10' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection02,The following statement contains a magic number: TextSpan span2 = new TextSpan(5' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection02,The following statement contains a magic number: TextSpan span2 = new TextSpan(5' 10);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection02,The following statement contains a magic number: Assert.Equal(span1.Intersection(span2)' new TextSpan(10' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection02,The following statement contains a magic number: Assert.Equal(span1.Intersection(span2)' new TextSpan(10' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection02,The following statement contains a magic number: Assert.Equal(span2.Intersection(span1)' new TextSpan(10' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection02,The following statement contains a magic number: Assert.Equal(span2.Intersection(span1)' new TextSpan(10' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection03,The following statement contains a magic number: TextSpan span1 = new TextSpan(10' 0);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection03,The following statement contains a magic number: TextSpan span2 = new TextSpan(10' 0);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection03,The following statement contains a magic number: Assert.Equal(span1.Intersection(span2)' new TextSpan(10' 0));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection03,The following statement contains a magic number: Assert.Equal(span2.Intersection(span1)' new TextSpan(10' 0));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection04,The following statement contains a magic number: TextSpan span1 = new TextSpan(2' 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection04,The following statement contains a magic number: TextSpan span1 = new TextSpan(2' 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection04,The following statement contains a magic number: TextSpan span2 = new TextSpan(7' 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection04,The following statement contains a magic number: TextSpan span2 = new TextSpan(7' 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection04,The following statement contains a magic number: Assert.Equal(span1.Intersection(span2)' new TextSpan(7' 0));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersection04,The following statement contains a magic number: Assert.Equal(span2.Intersection(span1)' new TextSpan(7' 0));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersectionEmpty01,The following statement contains a magic number: TextSpan span1 = new TextSpan(2' 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersectionEmpty01,The following statement contains a magic number: TextSpan span1 = new TextSpan(2' 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersectionEmpty01,The following statement contains a magic number: TextSpan span2 = new TextSpan(3' 0);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersectionEmpty01,The following statement contains a magic number: Assert.Equal(span1.Intersection(span2)' new TextSpan(3' 0));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersectionEmpty01,The following statement contains a magic number: Assert.Equal(span2.Intersection(span1)' new TextSpan(3' 0));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersectionEmpty02,The following statement contains a magic number: TextSpan span1 = new TextSpan(2' 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersectionEmpty02,The following statement contains a magic number: TextSpan span1 = new TextSpan(2' 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersectionEmpty02,The following statement contains a magic number: TextSpan span2 = new TextSpan(2' 0);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersectionEmpty02,The following statement contains a magic number: Assert.Equal(span1.Intersection(span2)' new TextSpan(2' 0));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersectionEmpty02,The following statement contains a magic number: Assert.Equal(span2.Intersection(span1)' new TextSpan(2' 0));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersectionEmpty03,The following statement contains a magic number: TextSpan span1 = new TextSpan(2' 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersectionEmpty03,The following statement contains a magic number: TextSpan span1 = new TextSpan(2' 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersectionEmpty03,The following statement contains a magic number: TextSpan span2 = new TextSpan(7' 0);
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersectionEmpty03,The following statement contains a magic number: Assert.Equal(span1.Intersection(span2)' new TextSpan(7' 0));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextSpanTest,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextSpanTest.cs,TextSpanIntersectionEmpty03,The following statement contains a magic number: Assert.Equal(span2.Intersection(span1)' new TextSpan(7' 0));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextUtilitiesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextUtilitiesTests.cs,GetLengthOfLineBreak1,The following statement contains a magic number: Assert.Equal(0' TextUtilities.GetLengthOfLineBreak(SourceText.From("aoeu")' 2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,TextUtilitiesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Text\TextUtilitiesTests.cs,GetLengthOfLineBreak3,The following statement contains a magic number: Assert.Equal(2' TextUtilities.GetLengthOfLineBreak(SourceText.From("\r\n")' 0));
Magic Number,Microsoft.CodeAnalysis.UnitTests,VersionHelperTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\VersionHelperTests.cs,ParseGood,The following statement contains a magic number: Assert.Equal(3' version.Major);
Magic Number,Microsoft.CodeAnalysis.UnitTests,VersionHelperTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\VersionHelperTests.cs,ParseGood,The following statement contains a magic number: Assert.Equal(2' version.Minor);
Magic Number,Microsoft.CodeAnalysis.UnitTests,VersionHelperTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\VersionHelperTests.cs,ParseGood,The following statement contains a magic number: Assert.Equal((int)(DateTime.Now - new DateTime(2000' 1' 1)).TotalDays' version.Build);
Magic Number,Microsoft.CodeAnalysis.UnitTests,VersionHelperTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\VersionHelperTests.cs,ParseGood,The following statement contains a magic number: int s = (int)DateTime.Now.TimeOfDay.TotalSeconds / 2;
Magic Number,Microsoft.CodeAnalysis.UnitTests,VersionHelperTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\VersionHelperTests.cs,ParseGood,The following statement contains a magic number: Assert.InRange(version.Revision' s - 2' s + 2);
Magic Number,Microsoft.CodeAnalysis.UnitTests,VersionHelperTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\VersionHelperTests.cs,ParseGood,The following statement contains a magic number: Assert.InRange(version.Revision' s - 2' s + 2);
Magic Number,Microsoft.CodeAnalysis.UnitTests,VersionHelperTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\VersionHelperTests.cs,ParseGood,The following statement contains a magic number: s = (int)DateTime.Now.TimeOfDay.TotalSeconds / 2;
Magic Number,Microsoft.CodeAnalysis.UnitTests,VersionHelperTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\VersionHelperTests.cs,ParseGood,The following statement contains a magic number: Assert.InRange(version.Revision' s - 2' s + 2);
Magic Number,Microsoft.CodeAnalysis.UnitTests,VersionHelperTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\VersionHelperTests.cs,ParseGood,The following statement contains a magic number: Assert.InRange(version.Revision' s - 2' s + 2);
Magic Number,Microsoft.CodeAnalysis.UnitTests,VersionHelperTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\VersionHelperTests.cs,ParseGood2,The following statement contains a magic number: Assert.Equal(3' version.Major);
Magic Number,Microsoft.CodeAnalysis.UnitTests,VersionHelperTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\VersionHelperTests.cs,ParseGood2,The following statement contains a magic number: Assert.Equal(2' version.Minor);
Magic Number,Microsoft.CodeAnalysis.UnitTests,VersionHelperTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\VersionHelperTests.cs,ParseGood2,The following statement contains a magic number: Assert.Equal(3' version.Major);
Magic Number,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,BasicResources2,The following statement contains a magic number: Assert.Equal(3' list.Count);
Magic Number,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,BasicResourcesWithStringTypes,The following statement contains a magic number: Assert.Equal(3' list.Count);
Magic Number,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,BasicResourcesWithStringTypes,The following statement contains a magic number: Assert.Equal(16' list[0].pstringType.Ordinal);
Magic Number,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,BasicResourcesWithStringTypes,The following statement contains a magic number: Assert.Equal("IMAGE"' list[2].pstringType.theString);
Magic Number,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,BasicResourcesWithStringTypes,The following statement contains a magic number: Assert.Equal(0xFFFF' list[2].pstringType.Ordinal);
Magic Number,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,BasicResourcesWithStringTypes,The following statement contains a magic number: Assert.Equal("INFO.PNG"' list[2].pstringName.theString);
Magic Number,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,BasicResourcesWithStringTypes,The following statement contains a magic number: Assert.Equal(0xFFFF' list[2].pstringName.Ordinal);
Magic Number,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,BuildResources,The following statement contains a magic number: yield return new Win32Resource(null' 0' 0' -1' "b"' 2' null);
Magic Number,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,EnsureResourceSorting,The following statement contains a magic number: elem = resources[2];
Magic Number,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,EnsureResourceSorting,The following statement contains a magic number: elem = resources[3];
Magic Number,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,EnsureResourceSorting,The following statement contains a magic number: elem = resources[4];
Magic Number,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,EnsureResourceSorting,The following statement contains a magic number: elem = resources[5];
Magic Number,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,EnsureResourceSorting,The following statement contains a magic number: elem = resources[6];
Magic Number,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,EnsureResourceSorting,The following statement contains a magic number: Assert.Equal(2' elem.TypeId);
Magic Number,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,BasicResources,The following statement contains a magic number: Win32ResourceConversions.AppendVersionToResourceStream(strm'                  true'                  "41220.41221.41222.41223"'                  "originalFilenameMuddy.dll"'                  "internalNameZep.dll"'                  "41224.41225.41226.41227"'  //4 ints                  new Version(41220' 41220' 41220' 41220)'                  "this is the file description"'   //the old compiler put blank here if nothing was user-supplied                  "this is the legal copyright"'    //the old compiler put blank here if nothing was user-supplied                  "this is the legal trademark"'                  "product name the testproduct"'                  "some comments"'                  "testcompany");
Magic Number,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,BasicResources,The following statement contains a magic number: Win32ResourceConversions.AppendVersionToResourceStream(strm'                  true'                  "41220.41221.41222.41223"'                  "originalFilenameMuddy.dll"'                  "internalNameZep.dll"'                  "41224.41225.41226.41227"'  //4 ints                  new Version(41220' 41220' 41220' 41220)'                  "this is the file description"'   //the old compiler put blank here if nothing was user-supplied                  "this is the legal copyright"'    //the old compiler put blank here if nothing was user-supplied                  "this is the legal trademark"'                  "product name the testproduct"'                  "some comments"'                  "testcompany");
Magic Number,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,BasicResources,The following statement contains a magic number: Win32ResourceConversions.AppendVersionToResourceStream(strm'                  true'                  "41220.41221.41222.41223"'                  "originalFilenameMuddy.dll"'                  "internalNameZep.dll"'                  "41224.41225.41226.41227"'  //4 ints                  new Version(41220' 41220' 41220' 41220)'                  "this is the file description"'   //the old compiler put blank here if nothing was user-supplied                  "this is the legal copyright"'    //the old compiler put blank here if nothing was user-supplied                  "this is the legal trademark"'                  "product name the testproduct"'                  "some comments"'                  "testcompany");
Magic Number,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,BasicResources,The following statement contains a magic number: Win32ResourceConversions.AppendVersionToResourceStream(strm'                  true'                  "41220.41221.41222.41223"'                  "originalFilenameMuddy.dll"'                  "internalNameZep.dll"'                  "41224.41225.41226.41227"'  //4 ints                  new Version(41220' 41220' 41220' 41220)'                  "this is the file description"'   //the old compiler put blank here if nothing was user-supplied                  "this is the legal copyright"'    //the old compiler put blank here if nothing was user-supplied                  "this is the legal trademark"'                  "product name the testproduct"'                  "some comments"'                  "testcompany");
Magic Number,Microsoft.CodeAnalysis.UnitTests,Win32ResTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Win32Res.cs,BasicResources,The following statement contains a magic number: r.pstringType.Ordinal == 16
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNamespaceDeclarationCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  [assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token""' Scope=""namespace""' Target=""A.B"")]  namespace A  [|{      namespace B      {          class C {}      }  }|]  "'                  Diagnostic("Token"' "{").WithLocation(4' 1)'                  Diagnostic("Token"' "class").WithLocation(7' 9)'                  Diagnostic("Token"' "C").WithLocation(7' 15)'                  Diagnostic("Token"' "{").WithLocation(7' 17)'                  Diagnostic("Token"' "}").WithLocation(7' 18)'                  Diagnostic("Token"' "}").WithLocation(9' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNamespaceDeclarationCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  [assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token""' Scope=""namespace""' Target=""A.B"")]  namespace A  [|{      namespace B      {          class C {}      }  }|]  "'                  Diagnostic("Token"' "{").WithLocation(4' 1)'                  Diagnostic("Token"' "class").WithLocation(7' 9)'                  Diagnostic("Token"' "C").WithLocation(7' 15)'                  Diagnostic("Token"' "{").WithLocation(7' 17)'                  Diagnostic("Token"' "}").WithLocation(7' 18)'                  Diagnostic("Token"' "}").WithLocation(9' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNamespaceDeclarationCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  [assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token""' Scope=""namespace""' Target=""A.B"")]  namespace A  [|{      namespace B      {          class C {}      }  }|]  "'                  Diagnostic("Token"' "{").WithLocation(4' 1)'                  Diagnostic("Token"' "class").WithLocation(7' 9)'                  Diagnostic("Token"' "C").WithLocation(7' 15)'                  Diagnostic("Token"' "{").WithLocation(7' 17)'                  Diagnostic("Token"' "}").WithLocation(7' 18)'                  Diagnostic("Token"' "}").WithLocation(9' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNamespaceDeclarationCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  [assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token""' Scope=""namespace""' Target=""A.B"")]  namespace A  [|{      namespace B      {          class C {}      }  }|]  "'                  Diagnostic("Token"' "{").WithLocation(4' 1)'                  Diagnostic("Token"' "class").WithLocation(7' 9)'                  Diagnostic("Token"' "C").WithLocation(7' 15)'                  Diagnostic("Token"' "{").WithLocation(7' 17)'                  Diagnostic("Token"' "}").WithLocation(7' 18)'                  Diagnostic("Token"' "}").WithLocation(9' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNamespaceDeclarationCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  [assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token""' Scope=""namespace""' Target=""A.B"")]  namespace A  [|{      namespace B      {          class C {}      }  }|]  "'                  Diagnostic("Token"' "{").WithLocation(4' 1)'                  Diagnostic("Token"' "class").WithLocation(7' 9)'                  Diagnostic("Token"' "C").WithLocation(7' 15)'                  Diagnostic("Token"' "{").WithLocation(7' 17)'                  Diagnostic("Token"' "}").WithLocation(7' 18)'                  Diagnostic("Token"' "}").WithLocation(9' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNamespaceDeclarationCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  [assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token""' Scope=""namespace""' Target=""A.B"")]  namespace A  [|{      namespace B      {          class C {}      }  }|]  "'                  Diagnostic("Token"' "{").WithLocation(4' 1)'                  Diagnostic("Token"' "class").WithLocation(7' 9)'                  Diagnostic("Token"' "C").WithLocation(7' 15)'                  Diagnostic("Token"' "{").WithLocation(7' 17)'                  Diagnostic("Token"' "}").WithLocation(7' 18)'                  Diagnostic("Token"' "}").WithLocation(9' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNamespaceDeclarationCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  [assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token""' Scope=""namespace""' Target=""A.B"")]  namespace A  [|{      namespace B      {          class C {}      }  }|]  "'                  Diagnostic("Token"' "{").WithLocation(4' 1)'                  Diagnostic("Token"' "class").WithLocation(7' 9)'                  Diagnostic("Token"' "C").WithLocation(7' 15)'                  Diagnostic("Token"' "{").WithLocation(7' 17)'                  Diagnostic("Token"' "}").WithLocation(7' 18)'                  Diagnostic("Token"' "}").WithLocation(9' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNamespaceDeclarationCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  [assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token""' Scope=""namespace""' Target=""A.B"")]  namespace A  [|{      namespace B      {          class C {}      }  }|]  "'                  Diagnostic("Token"' "{").WithLocation(4' 1)'                  Diagnostic("Token"' "class").WithLocation(7' 9)'                  Diagnostic("Token"' "C").WithLocation(7' 15)'                  Diagnostic("Token"' "{").WithLocation(7' 17)'                  Diagnostic("Token"' "}").WithLocation(7' 18)'                  Diagnostic("Token"' "}").WithLocation(9' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNamespaceDeclarationCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  [assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token""' Scope=""namespace""' Target=""A.B"")]  namespace A  [|{      namespace B      {          class C {}      }  }|]  "'                  Diagnostic("Token"' "{").WithLocation(4' 1)'                  Diagnostic("Token"' "class").WithLocation(7' 9)'                  Diagnostic("Token"' "C").WithLocation(7' 15)'                  Diagnostic("Token"' "{").WithLocation(7' 17)'                  Diagnostic("Token"' "}").WithLocation(7' 18)'                  Diagnostic("Token"' "}").WithLocation(9' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNamespaceDeclarationCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  [assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token""' Scope=""namespace""' Target=""A.B"")]  namespace A  [|{      namespace B      {          class C {}      }  }|]  "'                  Diagnostic("Token"' "{").WithLocation(4' 1)'                  Diagnostic("Token"' "class").WithLocation(7' 9)'                  Diagnostic("Token"' "C").WithLocation(7' 15)'                  Diagnostic("Token"' "{").WithLocation(7' 17)'                  Diagnostic("Token"' "}").WithLocation(7' 18)'                  Diagnostic("Token"' "}").WithLocation(9' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNamespaceDeclarationBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  <assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token""' Scope:=""Namespace""' Target:=""A.B"")>  Namespace [|A      Namespace B           Class C          End Class      End Namespace  End|] Namespace  "'                  Diagnostic("Token"' "A").WithLocation(3' 11)'                  Diagnostic("Token"' "Class").WithLocation(5' 9)'                  Diagnostic("Token"' "C").WithLocation(5' 15)'                  Diagnostic("Token"' "End").WithLocation(6' 9)'                  Diagnostic("Token"' "Class").WithLocation(6' 13)'                  Diagnostic("Token"' "End").WithLocation(8' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNamespaceDeclarationBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  <assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token""' Scope:=""Namespace""' Target:=""A.B"")>  Namespace [|A      Namespace B           Class C          End Class      End Namespace  End|] Namespace  "'                  Diagnostic("Token"' "A").WithLocation(3' 11)'                  Diagnostic("Token"' "Class").WithLocation(5' 9)'                  Diagnostic("Token"' "C").WithLocation(5' 15)'                  Diagnostic("Token"' "End").WithLocation(6' 9)'                  Diagnostic("Token"' "Class").WithLocation(6' 13)'                  Diagnostic("Token"' "End").WithLocation(8' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNamespaceDeclarationBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  <assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token""' Scope:=""Namespace""' Target:=""A.B"")>  Namespace [|A      Namespace B           Class C          End Class      End Namespace  End|] Namespace  "'                  Diagnostic("Token"' "A").WithLocation(3' 11)'                  Diagnostic("Token"' "Class").WithLocation(5' 9)'                  Diagnostic("Token"' "C").WithLocation(5' 15)'                  Diagnostic("Token"' "End").WithLocation(6' 9)'                  Diagnostic("Token"' "Class").WithLocation(6' 13)'                  Diagnostic("Token"' "End").WithLocation(8' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNamespaceDeclarationBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  <assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token""' Scope:=""Namespace""' Target:=""A.B"")>  Namespace [|A      Namespace B           Class C          End Class      End Namespace  End|] Namespace  "'                  Diagnostic("Token"' "A").WithLocation(3' 11)'                  Diagnostic("Token"' "Class").WithLocation(5' 9)'                  Diagnostic("Token"' "C").WithLocation(5' 15)'                  Diagnostic("Token"' "End").WithLocation(6' 9)'                  Diagnostic("Token"' "Class").WithLocation(6' 13)'                  Diagnostic("Token"' "End").WithLocation(8' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNamespaceDeclarationBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  <assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token""' Scope:=""Namespace""' Target:=""A.B"")>  Namespace [|A      Namespace B           Class C          End Class      End Namespace  End|] Namespace  "'                  Diagnostic("Token"' "A").WithLocation(3' 11)'                  Diagnostic("Token"' "Class").WithLocation(5' 9)'                  Diagnostic("Token"' "C").WithLocation(5' 15)'                  Diagnostic("Token"' "End").WithLocation(6' 9)'                  Diagnostic("Token"' "Class").WithLocation(6' 13)'                  Diagnostic("Token"' "End").WithLocation(8' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNamespaceDeclarationBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  <assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token""' Scope:=""Namespace""' Target:=""A.B"")>  Namespace [|A      Namespace B           Class C          End Class      End Namespace  End|] Namespace  "'                  Diagnostic("Token"' "A").WithLocation(3' 11)'                  Diagnostic("Token"' "Class").WithLocation(5' 9)'                  Diagnostic("Token"' "C").WithLocation(5' 15)'                  Diagnostic("Token"' "End").WithLocation(6' 9)'                  Diagnostic("Token"' "Class").WithLocation(6' 13)'                  Diagnostic("Token"' "End").WithLocation(8' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNamespaceDeclarationBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  <assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token""' Scope:=""Namespace""' Target:=""A.B"")>  Namespace [|A      Namespace B           Class C          End Class      End Namespace  End|] Namespace  "'                  Diagnostic("Token"' "A").WithLocation(3' 11)'                  Diagnostic("Token"' "Class").WithLocation(5' 9)'                  Diagnostic("Token"' "C").WithLocation(5' 15)'                  Diagnostic("Token"' "End").WithLocation(6' 9)'                  Diagnostic("Token"' "Class").WithLocation(6' 13)'                  Diagnostic("Token"' "End").WithLocation(8' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNamespaceDeclarationBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  <assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token""' Scope:=""Namespace""' Target:=""A.B"")>  Namespace [|A      Namespace B           Class C          End Class      End Namespace  End|] Namespace  "'                  Diagnostic("Token"' "A").WithLocation(3' 11)'                  Diagnostic("Token"' "Class").WithLocation(5' 9)'                  Diagnostic("Token"' "C").WithLocation(5' 15)'                  Diagnostic("Token"' "End").WithLocation(6' 9)'                  Diagnostic("Token"' "Class").WithLocation(6' 13)'                  Diagnostic("Token"' "End").WithLocation(8' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNamespaceDeclarationBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  <assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token""' Scope:=""Namespace""' Target:=""A.B"")>  Namespace [|A      Namespace B           Class C          End Class      End Namespace  End|] Namespace  "'                  Diagnostic("Token"' "A").WithLocation(3' 11)'                  Diagnostic("Token"' "Class").WithLocation(5' 9)'                  Diagnostic("Token"' "C").WithLocation(5' 15)'                  Diagnostic("Token"' "End").WithLocation(6' 9)'                  Diagnostic("Token"' "Class").WithLocation(6' 13)'                  Diagnostic("Token"' "End").WithLocation(8' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNamespaceDeclarationBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  <assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token""' Scope:=""Namespace""' Target:=""A.B"")>  Namespace [|A      Namespace B           Class C          End Class      End Namespace  End|] Namespace  "'                  Diagnostic("Token"' "A").WithLocation(3' 11)'                  Diagnostic("Token"' "Class").WithLocation(5' 9)'                  Diagnostic("Token"' "C").WithLocation(5' 15)'                  Diagnostic("Token"' "End").WithLocation(6' 9)'                  Diagnostic("Token"' "Class").WithLocation(6' 13)'                  Diagnostic("Token"' "End").WithLocation(8' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNamespaceDeclarationBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  <assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token""' Scope:=""Namespace""' Target:=""A.B"")>  Namespace [|A      Namespace B           Class C          End Class      End Namespace  End|] Namespace  "'                  Diagnostic("Token"' "A").WithLocation(3' 11)'                  Diagnostic("Token"' "Class").WithLocation(5' 9)'                  Diagnostic("Token"' "C").WithLocation(5' 15)'                  Diagnostic("Token"' "End").WithLocation(6' 9)'                  Diagnostic("Token"' "Class").WithLocation(6' 13)'                  Diagnostic("Token"' "End").WithLocation(8' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,DontSuppressSyntaxDiagnosticsInRootNamespaceBasic,The following statement contains a magic number: VerifyBasic(@"  <module: System.Diagnostics.SuppressMessage(""Test""' ""Comment""' Scope:=""Namespace""' Target:=""RootNamespace"")>  ' In root namespace  "'                  rootNamespace: "RootNamespace"'                  analyzers: new[] { new WarningOnCommentAnalyzer() }'                  diagnostics: Diagnostic("Comment"' "' In root namespace").WithLocation(3' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnTypesCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  using System.Diagnostics.CodeAnalysis;    namespace N  [|{      [SuppressMessage(""Test""' ""Token"")]      class C<T> {}        [SuppressMessage(""Test""' ""Token"")]      struct S<T> {}        [SuppressMessage(""Test""' ""Token"")]      interface I<T>{}        [SuppressMessage(""Test""' ""Token"")]      enum E {}        [SuppressMessage(""Test""' ""Token"")]      delegate void D();  }|]  "'                  Diagnostic("Token"' "{").WithLocation(5' 1)'                  Diagnostic("Token"' "}").WithLocation(20' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnTypesCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  using System.Diagnostics.CodeAnalysis;    namespace N  [|{      [SuppressMessage(""Test""' ""Token"")]      class C<T> {}        [SuppressMessage(""Test""' ""Token"")]      struct S<T> {}        [SuppressMessage(""Test""' ""Token"")]      interface I<T>{}        [SuppressMessage(""Test""' ""Token"")]      enum E {}        [SuppressMessage(""Test""' ""Token"")]      delegate void D();  }|]  "'                  Diagnostic("Token"' "{").WithLocation(5' 1)'                  Diagnostic("Token"' "}").WithLocation(20' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnTypesBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Imports System.Diagnostics.CodeAnalysis    Namespace [|N      <SuppressMessage(""Test""' ""Token"")>      Module M      End Module        <SuppressMessage(""Test""' ""Token"")>      Class C      End Class        <SuppressMessage(""Test""' ""Token"")>      Structure S      End Structure        <SuppressMessage(""Test""' ""Token"")>      Interface I      End Interface        <SuppressMessage(""Test""' ""Token"")>      Enum E          None      End Enum        <SuppressMessage(""Test""' ""Token"")>      Delegate Sub D()  End|] Namespace  "'                  Diagnostic("Token"' "N").WithLocation(4' 11)'                  Diagnostic("Token"' "End").WithLocation(28' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnTypesBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Imports System.Diagnostics.CodeAnalysis    Namespace [|N      <SuppressMessage(""Test""' ""Token"")>      Module M      End Module        <SuppressMessage(""Test""' ""Token"")>      Class C      End Class        <SuppressMessage(""Test""' ""Token"")>      Structure S      End Structure        <SuppressMessage(""Test""' ""Token"")>      Interface I      End Interface        <SuppressMessage(""Test""' ""Token"")>      Enum E          None      End Enum        <SuppressMessage(""Test""' ""Token"")>      Delegate Sub D()  End|] Namespace  "'                  Diagnostic("Token"' "N").WithLocation(4' 11)'                  Diagnostic("Token"' "End").WithLocation(28' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnTypesBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Imports System.Diagnostics.CodeAnalysis    Namespace [|N      <SuppressMessage(""Test""' ""Token"")>      Module M      End Module        <SuppressMessage(""Test""' ""Token"")>      Class C      End Class        <SuppressMessage(""Test""' ""Token"")>      Structure S      End Structure        <SuppressMessage(""Test""' ""Token"")>      Interface I      End Interface        <SuppressMessage(""Test""' ""Token"")>      Enum E          None      End Enum        <SuppressMessage(""Test""' ""Token"")>      Delegate Sub D()  End|] Namespace  "'                  Diagnostic("Token"' "N").WithLocation(4' 11)'                  Diagnostic("Token"' "End").WithLocation(28' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnEventAddAccessorCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      public event System.Action<int> E      [|{          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          add {}          remove|] {}      }  }  "'                  Diagnostic("Token"' "{").WithLocation(5' 5)'                  Diagnostic("Token"' "remove").WithLocation(8' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnEventAddAccessorCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      public event System.Action<int> E      [|{          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          add {}          remove|] {}      }  }  "'                  Diagnostic("Token"' "{").WithLocation(5' 5)'                  Diagnostic("Token"' "remove").WithLocation(8' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnEventAddAccessorCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      public event System.Action<int> E      [|{          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          add {}          remove|] {}      }  }  "'                  Diagnostic("Token"' "{").WithLocation(5' 5)'                  Diagnostic("Token"' "remove").WithLocation(8' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnEventAddAccessorCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      public event System.Action<int> E      [|{          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          add {}          remove|] {}      }  }  "'                  Diagnostic("Token"' "{").WithLocation(5' 5)'                  Diagnostic("Token"' "remove").WithLocation(8' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnEventRemoveAccessorCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      public event System.Action<int> E      {          add {[|}          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          remove {}      }|]  }  "'                  Diagnostic("Token"' "}").WithLocation(6' 14)'                  Diagnostic("Token"' "}").WithLocation(9' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnEventRemoveAccessorCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      public event System.Action<int> E      {          add {[|}          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          remove {}      }|]  }  "'                  Diagnostic("Token"' "}").WithLocation(6' 14)'                  Diagnostic("Token"' "}").WithLocation(9' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnEventRemoveAccessorCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      public event System.Action<int> E      {          add {[|}          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          remove {}      }|]  }  "'                  Diagnostic("Token"' "}").WithLocation(6' 14)'                  Diagnostic("Token"' "}").WithLocation(9' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnEventRemoveAccessorCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      public event System.Action<int> E      {          add {[|}          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          remove {}      }|]  }  "'                  Diagnostic("Token"' "}").WithLocation(6' 14)'                  Diagnostic("Token"' "}").WithLocation(9' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnPropertyCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  using System.Diagnostics.CodeAnalysis;    class C  [|{      [SuppressMessage(""Test""' ""Token"")]      int Property1 { get; set; }        [SuppressMessage(""Test""' ""Token"")]      int Property2      {          get { return 2; }          set { Property1 = 2; }      }  }|]  "'                  Diagnostic("Token"' "{").WithLocation(5' 1)'                  Diagnostic("Token"' "}").WithLocation(15' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnPropertyCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  using System.Diagnostics.CodeAnalysis;    class C  [|{      [SuppressMessage(""Test""' ""Token"")]      int Property1 { get; set; }        [SuppressMessage(""Test""' ""Token"")]      int Property2      {          get { return 2; }          set { Property1 = 2; }      }  }|]  "'                  Diagnostic("Token"' "{").WithLocation(5' 1)'                  Diagnostic("Token"' "}").WithLocation(15' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnPropertyBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Imports System.Diagnostics.CodeAnalysis    Class [|C      <SuppressMessage(""Test""' ""Token"")>      Property Property1 As Integer        <SuppressMessage(""Test""' ""Token"")>      Property Property2 As Integer          Get              Return 2          End Get          Set(value As Integer)              Property1 = value          End Set      End Property  End|] Class  "'                  Diagnostic("Token"' "C").WithLocation(4' 7)'                  Diagnostic("Token"' "End").WithLocation(17' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnPropertyBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Imports System.Diagnostics.CodeAnalysis    Class [|C      <SuppressMessage(""Test""' ""Token"")>      Property Property1 As Integer        <SuppressMessage(""Test""' ""Token"")>      Property Property2 As Integer          Get              Return 2          End Get          Set(value As Integer)              Property1 = value          End Set      End Property  End|] Class  "'                  Diagnostic("Token"' "C").WithLocation(4' 7)'                  Diagnostic("Token"' "End").WithLocation(17' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnPropertyBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Imports System.Diagnostics.CodeAnalysis    Class [|C      <SuppressMessage(""Test""' ""Token"")>      Property Property1 As Integer        <SuppressMessage(""Test""' ""Token"")>      Property Property2 As Integer          Get              Return 2          End Get          Set(value As Integer)              Property1 = value          End Set      End Property  End|] Class  "'                  Diagnostic("Token"' "C").WithLocation(4' 7)'                  Diagnostic("Token"' "End").WithLocation(17' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnPropertyGetterCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      int x;      int Property      [|{          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          get { return 2; }          set|] { x = 2; }      }  }  "'                  Diagnostic("Token"' "{").WithLocation(6' 5)'                  Diagnostic("Token"' "set").WithLocation(9' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnPropertyGetterCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      int x;      int Property      [|{          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          get { return 2; }          set|] { x = 2; }      }  }  "'                  Diagnostic("Token"' "{").WithLocation(6' 5)'                  Diagnostic("Token"' "set").WithLocation(9' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnPropertyGetterCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      int x;      int Property      [|{          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          get { return 2; }          set|] { x = 2; }      }  }  "'                  Diagnostic("Token"' "{").WithLocation(6' 5)'                  Diagnostic("Token"' "set").WithLocation(9' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnPropertyGetterCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      int x;      int Property      [|{          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          get { return 2; }          set|] { x = 2; }      }  }  "'                  Diagnostic("Token"' "{").WithLocation(6' 5)'                  Diagnostic("Token"' "set").WithLocation(9' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnPropertyGetterBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Class C      Private x As Integer      Property [Property] As [|Integer          <System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")>          Get              Return 2          End Get          Set|](value As Integer)              x = value          End Set      End Property  End Class  "'                  Diagnostic("Token"' "Integer").WithLocation(4' 28)'                  Diagnostic("Token"' "Set").WithLocation(9' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnPropertyGetterBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Class C      Private x As Integer      Property [Property] As [|Integer          <System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")>          Get              Return 2          End Get          Set|](value As Integer)              x = value          End Set      End Property  End Class  "'                  Diagnostic("Token"' "Integer").WithLocation(4' 28)'                  Diagnostic("Token"' "Set").WithLocation(9' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnPropertyGetterBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Class C      Private x As Integer      Property [Property] As [|Integer          <System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")>          Get              Return 2          End Get          Set|](value As Integer)              x = value          End Set      End Property  End Class  "'                  Diagnostic("Token"' "Integer").WithLocation(4' 28)'                  Diagnostic("Token"' "Set").WithLocation(9' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnPropertyGetterBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Class C      Private x As Integer      Property [Property] As [|Integer          <System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")>          Get              Return 2          End Get          Set|](value As Integer)              x = value          End Set      End Property  End Class  "'                  Diagnostic("Token"' "Integer").WithLocation(4' 28)'                  Diagnostic("Token"' "Set").WithLocation(9' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnPropertySetterCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      int x;      int Property      [|{          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          get { return 2; }          set|] { x = 2; }      }  }  "'                  Diagnostic("Token"' "{").WithLocation(6' 5)'                  Diagnostic("Token"' "set").WithLocation(9' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnPropertySetterCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      int x;      int Property      [|{          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          get { return 2; }          set|] { x = 2; }      }  }  "'                  Diagnostic("Token"' "{").WithLocation(6' 5)'                  Diagnostic("Token"' "set").WithLocation(9' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnPropertySetterCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      int x;      int Property      [|{          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          get { return 2; }          set|] { x = 2; }      }  }  "'                  Diagnostic("Token"' "{").WithLocation(6' 5)'                  Diagnostic("Token"' "set").WithLocation(9' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnPropertySetterCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      int x;      int Property      [|{          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          get { return 2; }          set|] { x = 2; }      }  }  "'                  Diagnostic("Token"' "{").WithLocation(6' 5)'                  Diagnostic("Token"' "set").WithLocation(9' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnPropertySetterBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Class C      Private x As Integer      Property [Property] As Integer          Get              Return 2          End [|Get          <System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")>          Set(value As Integer)              x = value          End Set      End|] Property  End Class  "'                  Diagnostic("Token"' "Get").WithLocation(7' 13)'                  Diagnostic("Token"' "End").WithLocation(12' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnPropertySetterBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Class C      Private x As Integer      Property [Property] As Integer          Get              Return 2          End [|Get          <System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")>          Set(value As Integer)              x = value          End Set      End|] Property  End Class  "'                  Diagnostic("Token"' "Get").WithLocation(7' 13)'                  Diagnostic("Token"' "End").WithLocation(12' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnPropertySetterBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Class C      Private x As Integer      Property [Property] As Integer          Get              Return 2          End [|Get          <System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")>          Set(value As Integer)              x = value          End Set      End|] Property  End Class  "'                  Diagnostic("Token"' "Get").WithLocation(7' 13)'                  Diagnostic("Token"' "End").WithLocation(12' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnPropertySetterBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Class C      Private x As Integer      Property [Property] As Integer          Get              Return 2          End [|Get          <System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")>          Set(value As Integer)              x = value          End Set      End|] Property  End Class  "'                  Diagnostic("Token"' "Get").WithLocation(7' 13)'                  Diagnostic("Token"' "End").WithLocation(12' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnIndexerCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      int x[|;      [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]      int this[int i]      {          get { return 2; }          set { x = 2; }      }  }|]  "'                  Diagnostic("Token"' ";").WithLocation(4' 10)'                  Diagnostic("Token"' "}").WithLocation(11' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnIndexerCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      int x[|;      [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]      int this[int i]      {          get { return 2; }          set { x = 2; }      }  }|]  "'                  Diagnostic("Token"' ";").WithLocation(4' 10)'                  Diagnostic("Token"' "}").WithLocation(11' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnIndexerCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      int x[|;      [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]      int this[int i]      {          get { return 2; }          set { x = 2; }      }  }|]  "'                  Diagnostic("Token"' ";").WithLocation(4' 10)'                  Diagnostic("Token"' "}").WithLocation(11' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnIndexerGetterCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      int x;      int this[int i]      [|{          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          get { return 2; }          set|] { x = 2; }      }  }  "'                  Diagnostic("Token"' "{").WithLocation(6' 5)'                  Diagnostic("Token"' "set").WithLocation(9' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnIndexerGetterCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      int x;      int this[int i]      [|{          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          get { return 2; }          set|] { x = 2; }      }  }  "'                  Diagnostic("Token"' "{").WithLocation(6' 5)'                  Diagnostic("Token"' "set").WithLocation(9' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnIndexerGetterCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      int x;      int this[int i]      [|{          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          get { return 2; }          set|] { x = 2; }      }  }  "'                  Diagnostic("Token"' "{").WithLocation(6' 5)'                  Diagnostic("Token"' "set").WithLocation(9' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnIndexerGetterCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      int x;      int this[int i]      [|{          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          get { return 2; }          set|] { x = 2; }      }  }  "'                  Diagnostic("Token"' "{").WithLocation(6' 5)'                  Diagnostic("Token"' "set").WithLocation(9' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnIndexerSetterCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      int x;      int this[int i]      {          get { return 2; [|}          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          set { x = 2; }      }|]  }  "'                  Diagnostic("Token"' "}").WithLocation(7' 25)'                  Diagnostic("Token"' "}").WithLocation(10' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnIndexerSetterCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      int x;      int this[int i]      {          get { return 2; [|}          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          set { x = 2; }      }|]  }  "'                  Diagnostic("Token"' "}").WithLocation(7' 25)'                  Diagnostic("Token"' "}").WithLocation(10' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnIndexerSetterCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      int x;      int this[int i]      {          get { return 2; [|}          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          set { x = 2; }      }|]  }  "'                  Diagnostic("Token"' "}").WithLocation(7' 25)'                  Diagnostic("Token"' "}").WithLocation(10' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnIndexerSetterCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  {      int x;      int this[int i]      {          get { return 2; [|}          [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]          set { x = 2; }      }|]  }  "'                  Diagnostic("Token"' "}").WithLocation(7' 25)'                  Diagnostic("Token"' "}").WithLocation(10' 5));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnMethodCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  using System.Diagnostics.CodeAnalysis;    abstract class C  [|{      [SuppressMessage(""Test""' ""Token"")]      public void M1<T>() {}        [SuppressMessage(""Test""' ""Token"")]      public abstract void M2();  }|]  "'                  Diagnostic("Token"' "{").WithLocation(5' 1)'                  Diagnostic("Token"' "}").WithLocation(11' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnMethodCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  using System.Diagnostics.CodeAnalysis;    abstract class C  [|{      [SuppressMessage(""Test""' ""Token"")]      public void M1<T>() {}        [SuppressMessage(""Test""' ""Token"")]      public abstract void M2();  }|]  "'                  Diagnostic("Token"' "{").WithLocation(5' 1)'                  Diagnostic("Token"' "}").WithLocation(11' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnMethodBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Imports System.Diagnostics.CodeAnalysis    Public MustInherit Class [|C      <SuppressMessage(""Test""' ""Token"")>       Public Function M2(Of T)() As Integer          Return 0      End Function             <SuppressMessage(""Test""' ""Token"")>       Public MustOverride Sub M3()   End|] Class  "'                  Diagnostic("Token"' "C").WithLocation(4' 26)'                  Diagnostic("Token"' "End").WithLocation(12' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnMethodBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Imports System.Diagnostics.CodeAnalysis    Public MustInherit Class [|C      <SuppressMessage(""Test""' ""Token"")>       Public Function M2(Of T)() As Integer          Return 0      End Function             <SuppressMessage(""Test""' ""Token"")>       Public MustOverride Sub M3()   End|] Class  "'                  Diagnostic("Token"' "C").WithLocation(4' 26)'                  Diagnostic("Token"' "End").WithLocation(12' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnMethodBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Imports System.Diagnostics.CodeAnalysis    Public MustInherit Class [|C      <SuppressMessage(""Test""' ""Token"")>       Public Function M2(Of T)() As Integer          Return 0      End Function             <SuppressMessage(""Test""' ""Token"")>       Public MustOverride Sub M3()   End|] Class  "'                  Diagnostic("Token"' "C").WithLocation(4' 26)'                  Diagnostic("Token"' "End").WithLocation(12' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnOperatorCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  [|{      [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]      public static C operator +(C a' C b)       {          return null;      }   }|]  "'                  Diagnostic("Token"' "{").WithLocation(3' 1)'                  Diagnostic("Token"' "}").WithLocation(9' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnOperatorCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  [|{      [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]      public static C operator +(C a' C b)       {          return null;      }   }|]  "'                  Diagnostic("Token"' "{").WithLocation(3' 1)'                  Diagnostic("Token"' "}").WithLocation(9' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnOperatorBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Class [|C      <System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")>       Public Shared Operator +(ByVal a As C' ByVal b As C) As C           Return Nothing      End Operator   End|] Class   "'                  Diagnostic("Token"' "C").WithLocation(2' 7)'                  Diagnostic("Token"' "End").WithLocation(7' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnOperatorBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Class [|C      <System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")>       Public Shared Operator +(ByVal a As C' ByVal b As C) As C           Return Nothing      End Operator   End|] Class   "'                  Diagnostic("Token"' "C").WithLocation(2' 7)'                  Diagnostic("Token"' "End").WithLocation(7' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnOperatorBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Class [|C      <System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")>       Public Shared Operator +(ByVal a As C' ByVal b As C) As C           Return Nothing      End Operator   End|] Class   "'                  Diagnostic("Token"' "C").WithLocation(2' 7)'                  Diagnostic("Token"' "End").WithLocation(7' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnConstructorCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class Base  {      public Base(int x) {}  }    class C : Base  [|{      [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]      public C() : base(0) {}   }|]  "'                  Diagnostic("Token"' "{").WithLocation(8' 1)'                  Diagnostic("Token"' "}").WithLocation(11' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnConstructorCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class Base  {      public Base(int x) {}  }    class C : Base  [|{      [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]      public C() : base(0) {}   }|]  "'                  Diagnostic("Token"' "{").WithLocation(8' 1)'                  Diagnostic("Token"' "}").WithLocation(11' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnConstructorBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Class [|C      <System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")>      Public Sub New()      End Sub  End|] Class  "'                  Diagnostic("Token"' "C").WithLocation(2' 7)'                  Diagnostic("Token"' "End").WithLocation(6' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnConstructorBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Class [|C      <System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")>      Public Sub New()      End Sub  End|] Class  "'                  Diagnostic("Token"' "C").WithLocation(2' 7)'                  Diagnostic("Token"' "End").WithLocation(6' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnConstructorBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Class [|C      <System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")>      Public Sub New()      End Sub  End|] Class  "'                  Diagnostic("Token"' "C").WithLocation(2' 7)'                  Diagnostic("Token"' "End").WithLocation(6' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnDestructorCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  [|{      [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]      ~C() {}  }|]  "'                  Diagnostic("Token"' "{").WithLocation(3' 1)'                  Diagnostic("Token"' "}").WithLocation(6' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnDestructorCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  [|{      [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]      ~C() {}  }|]  "'                  Diagnostic("Token"' "{").WithLocation(3' 1)'                  Diagnostic("Token"' "}").WithLocation(6' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNestedTypeCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  [|{      [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]      class D      {          class E          {          }      }  }|]  "'                  Diagnostic("Token"' "{").WithLocation(3' 1)'                  Diagnostic("Token"' "}").WithLocation(11' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNestedTypeCSharp,The following statement contains a magic number: VerifyTokenDiagnosticsCSharp(@"  class C  [|{      [System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")]      class D      {          class E          {          }      }  }|]  "'                  Diagnostic("Token"' "{").WithLocation(3' 1)'                  Diagnostic("Token"' "}").WithLocation(11' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNestedTypeBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Class [|C      <System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")>      Class D          Class E          End Class      End Class  End|] Class  "'                  Diagnostic("Token"' "C").WithLocation(2' 7)'                  Diagnostic("Token"' "End").WithLocation(8' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNestedTypeBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Class [|C      <System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")>      Class D          Class E          End Class      End Class  End|] Class  "'                  Diagnostic("Token"' "C").WithLocation(2' 7)'                  Diagnostic("Token"' "End").WithLocation(8' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,SuppressSyntaxDiagnosticsOnNestedTypeBasic,The following statement contains a magic number: VerifyTokenDiagnosticsBasic(@"  Class [|C      <System.Diagnostics.CodeAnalysis.SuppressMessage(""Test""' ""Token"")>      Class D          Class E          End Class      End Class  End|] Class  "'                  Diagnostic("Token"' "C").WithLocation(2' 7)'                  Diagnostic("Token"' "End").WithLocation(8' 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,InvalidAttributeConstructorParameters,The following statement contains a magic number: VerifyBasic(@"  Imports System.Diagnostics.CodeAnalysis    <module: SuppressMessage(UndeclaredIdentifier' ""Comment"")>  <module: SuppressMessage(""Test""' UndeclaredIdentifier)>  <module: SuppressMessage(""Test""' ""Comment""' Scope:=UndeclaredIdentifier' Target:=""C"")>  <module: SuppressMessage(""Test""' ""Comment""' Scope:=""Type""' Target:=UndeclaredIdentifier)>    Class C  End Class  "'                  new[] { new WarningOnTypeDeclarationAnalyzer() }'                  Diagnostic("TypeDeclaration"' "C").WithLocation(9' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Diagnostics,SuppressMessageAttributeTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Diagnostics\SuppressMessageAttributeTests.cs,InvalidAttributeConstructorParameters,The following statement contains a magic number: VerifyBasic(@"  Imports System.Diagnostics.CodeAnalysis    <module: SuppressMessage(UndeclaredIdentifier' ""Comment"")>  <module: SuppressMessage(""Test""' UndeclaredIdentifier)>  <module: SuppressMessage(""Test""' ""Comment""' Scope:=UndeclaredIdentifier' Target:=""C"")>  <module: SuppressMessage(""Test""' ""Comment""' Scope:=""Type""' Target:=UndeclaredIdentifier)>    Class C  End Class  "'                  new[] { new WarningOnTypeDeclarationAnalyzer() }'                  Diagnostic("TypeDeclaration"' "C").WithLocation(9' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => CustomDebugInfoReader.TryGetCustomDebugInfoRecord(new byte[] { 1' 2 }' CustomDebugInfoKind.EditAndContinueLocalSlotMap));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: Assert.True(CustomDebugInfoReader.TryGetCustomDebugInfoRecord(new byte[] { 5' 1' 0' 0 }' CustomDebugInfoKind.EditAndContinueLocalSlotMap).IsDefault);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  4' (byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap'              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  4' (byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap'              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0' 0' 0' 0'              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0' 0' 0' 0'              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x00' 0x00' 0x00' 0x80'                  0' 0' 0' 0              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x00' 0x00' 0x00' 0x80'                  0' 0' 0' 0              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x08' 0x00' 0x00' 0x00'              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x08' 0x00' 0x00' 0x00'              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x0a' 0x00' 0x00' 0x00'                  0xab              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x0a' 0x00' 0x00' 0x00'                  0xab              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xab              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xab              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.DynamicLocals' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xab              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.DynamicLocals' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xab              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/0xff' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xab              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/0xff' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xab              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xab'                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xcd              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xab'                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xcd              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xab'                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xcd              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.DynamicLocals' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xab'                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xcd              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.DynamicLocals' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xab'                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xcd              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.DynamicLocals' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xab'                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xcd              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.DynamicLocals' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xab'                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xcd              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.DynamicLocals' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xab'                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xcd              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,TryGetCustomDebugInfoRecord1,The following statement contains a magic number: cdi = new byte[]              {                  4' 1' 0' 0' // global header                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.DynamicLocals' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xab'                  /*version*/4' /*kind*/(byte)CustomDebugInfoKind.EditAndContinueLocalSlotMap' /*padding*/0' 0' /*size:*/ 0x09' 0x00' 0x00' 0x00'                  0xcd              };
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,EditAndContinueLocalSlotMap_NegativeSyntaxOffsets,The following statement contains a magic number: var slots = ImmutableArray.Create(                  new LocalSlotDebugInfo(SynthesizedLocalKind.UserDefined' new LocalDebugId(-1' 10))'                  new LocalSlotDebugInfo(SynthesizedLocalKind.TryAwaitPendingCaughtException' new LocalDebugId(-20000' 10)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,EditAndContinueLocalSlotMap_NegativeSyntaxOffsets,The following statement contains a magic number: var slots = ImmutableArray.Create(                  new LocalSlotDebugInfo(SynthesizedLocalKind.UserDefined' new LocalDebugId(-1' 10))'                  new LocalSlotDebugInfo(SynthesizedLocalKind.TryAwaitPendingCaughtException' new LocalDebugId(-20000' 10)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,EditAndContinueLocalSlotMap_NegativeSyntaxOffsets,The following statement contains a magic number: var slots = ImmutableArray.Create(                  new LocalSlotDebugInfo(SynthesizedLocalKind.UserDefined' new LocalDebugId(-1' 10))'                  new LocalSlotDebugInfo(SynthesizedLocalKind.TryAwaitPendingCaughtException' new LocalDebugId(-20000' 10)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,EditAndContinueLocalSlotMap_NegativeSyntaxOffsets,The following statement contains a magic number: new EditAndContinueMethodDebugInformation(123' slots' closures' lambdas).SerializeLocalSlots(cmw);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,EditAndContinueLambdaAndClosureMap_NegativeSyntaxOffsets,The following statement contains a magic number: var closures = ImmutableArray.Create(                  new ClosureDebugInfo(-100)'                   new ClosureDebugInfo(10)'                  new ClosureDebugInfo(-200));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,EditAndContinueLambdaAndClosureMap_NegativeSyntaxOffsets,The following statement contains a magic number: var closures = ImmutableArray.Create(                  new ClosureDebugInfo(-100)'                   new ClosureDebugInfo(10)'                  new ClosureDebugInfo(-200));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,EditAndContinueLambdaAndClosureMap_NegativeSyntaxOffsets,The following statement contains a magic number: var closures = ImmutableArray.Create(                  new ClosureDebugInfo(-100)'                   new ClosureDebugInfo(10)'                  new ClosureDebugInfo(-200));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,EditAndContinueLambdaAndClosureMap_NegativeSyntaxOffsets,The following statement contains a magic number: var lambdas = ImmutableArray.Create(                  new LambdaDebugInfo(20' 1)'                  new LambdaDebugInfo(-50' 0)'                  new LambdaDebugInfo(-180' -1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,EditAndContinueLambdaAndClosureMap_NegativeSyntaxOffsets,The following statement contains a magic number: var lambdas = ImmutableArray.Create(                  new LambdaDebugInfo(20' 1)'                  new LambdaDebugInfo(-50' 0)'                  new LambdaDebugInfo(-180' -1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,EditAndContinueLambdaAndClosureMap_NegativeSyntaxOffsets,The following statement contains a magic number: var lambdas = ImmutableArray.Create(                  new LambdaDebugInfo(20' 1)'                  new LambdaDebugInfo(-50' 0)'                  new LambdaDebugInfo(-180' -1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,EditAndContinueLambdaAndClosureMap_NoClosures,The following statement contains a magic number: var lambdas = ImmutableArray.Create(new LambdaDebugInfo(20' -1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Emit,CustomDebugInfoReaderTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Emit\CustomDebugInfoReaderTests.cs,EditAndContinueLambdaAndClosureMap_NoLambdas,The following statement contains a magic number: new EditAndContinueMethodDebugInformation(10' slots' closures' lambdas).SerializeLambdaMap(cmw);
Magic Number,Roslyn.Utilities.UnitTests.InternalUtilities,StringExtensionsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\StringExtensionsTests.cs,GetNumeral1,The following statement contains a magic number: Assert.Equal("5"' StringExtensions.GetNumeral(5));
Magic Number,Roslyn.Utilities.UnitTests.InternalUtilities,StringExtensionsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\StringExtensionsTests.cs,GetNumeral1,The following statement contains a magic number: Assert.Equal("10"' StringExtensions.GetNumeral(10));
Magic Number,Roslyn.Utilities.UnitTests.InternalUtilities,StringExtensionsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\StringExtensionsTests.cs,GetNumeral1,The following statement contains a magic number: Assert.Equal("10000000"' StringExtensions.GetNumeral(10000000));
Magic Number,Roslyn.Utilities.UnitTests.InternalUtilities,EnumerableExtensionsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\EnumerableExtensionsTests.cs,SequenceEqual,The following statement contains a magic number: Assert.False(EnumerableExtensions.SequenceEqual(new[] { 1' 2' 3 }' new[] { 1' 3' 2 }' comparer));
Magic Number,Roslyn.Utilities.UnitTests.InternalUtilities,EnumerableExtensionsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\EnumerableExtensionsTests.cs,SequenceEqual,The following statement contains a magic number: Assert.False(EnumerableExtensions.SequenceEqual(new[] { 1' 2' 3 }' new[] { 1' 3' 2 }' comparer));
Magic Number,Roslyn.Utilities.UnitTests.InternalUtilities,EnumerableExtensionsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\EnumerableExtensionsTests.cs,SequenceEqual,The following statement contains a magic number: Assert.False(EnumerableExtensions.SequenceEqual(new[] { 1' 2' 3 }' new[] { 1' 3' 2 }' comparer));
Magic Number,Roslyn.Utilities.UnitTests.InternalUtilities,EnumerableExtensionsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\EnumerableExtensionsTests.cs,SequenceEqual,The following statement contains a magic number: Assert.False(EnumerableExtensions.SequenceEqual(new[] { 1' 2' 3 }' new[] { 1' 3' 2 }' comparer));
Magic Number,Roslyn.Utilities.UnitTests.InternalUtilities,EnumerableExtensionsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\EnumerableExtensionsTests.cs,SequenceEqual,The following statement contains a magic number: Assert.True(EnumerableExtensions.SequenceEqual(new[] { 1' 2' 3 }' new[] { 1' 2' 3 }' comparer));
Magic Number,Roslyn.Utilities.UnitTests.InternalUtilities,EnumerableExtensionsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\EnumerableExtensionsTests.cs,SequenceEqual,The following statement contains a magic number: Assert.True(EnumerableExtensions.SequenceEqual(new[] { 1' 2' 3 }' new[] { 1' 2' 3 }' comparer));
Magic Number,Roslyn.Utilities.UnitTests.InternalUtilities,EnumerableExtensionsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\EnumerableExtensionsTests.cs,SequenceEqual,The following statement contains a magic number: Assert.True(EnumerableExtensions.SequenceEqual(new[] { 1' 2' 3 }' new[] { 1' 2' 3 }' comparer));
Magic Number,Roslyn.Utilities.UnitTests.InternalUtilities,EnumerableExtensionsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\EnumerableExtensionsTests.cs,SequenceEqual,The following statement contains a magic number: Assert.True(EnumerableExtensions.SequenceEqual(new[] { 1' 2' 3 }' new[] { 1' 2' 3 }' comparer));
Magic Number,Microsoft.CodeAnalysis.UnitTests.PEWriter,BinaryWriterTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\PEWriter\BinaryWriterTests.cs,CompressSignedIntegersFromSpecExamples,The following statement contains a magic number: AssertEx.Equal(new byte[] { 0x06 }' CompressSignedInteger(3));
Magic Number,Microsoft.CodeAnalysis.UnitTests.PEWriter,BinaryWriterTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\PEWriter\BinaryWriterTests.cs,CompressSignedIntegersFromSpecExamples,The following statement contains a magic number: AssertEx.Equal(new byte[] { 0x7b }' CompressSignedInteger(-3));
Magic Number,Microsoft.CodeAnalysis.UnitTests.PEWriter,BinaryWriterTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\PEWriter\BinaryWriterTests.cs,CompressSignedIntegersFromSpecExamples,The following statement contains a magic number: AssertEx.Equal(new byte[] { 0x80' 0x80 }' CompressSignedInteger(64));
Magic Number,Microsoft.CodeAnalysis.UnitTests.PEWriter,BinaryWriterTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\PEWriter\BinaryWriterTests.cs,CompressSignedIntegersFromSpecExamples,The following statement contains a magic number: AssertEx.Equal(new byte[] { 0x01 }' CompressSignedInteger(-64));
Magic Number,Microsoft.CodeAnalysis.UnitTests.PEWriter,BinaryWriterTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\PEWriter\BinaryWriterTests.cs,CompressSignedIntegersFromSpecExamples,The following statement contains a magic number: AssertEx.Equal(new byte[] { 0xC0' 0x00' 0x40' 0x00 }' CompressSignedInteger(8192));
Magic Number,Microsoft.CodeAnalysis.UnitTests.PEWriter,BinaryWriterTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\PEWriter\BinaryWriterTests.cs,CompressSignedIntegersFromSpecExamples,The following statement contains a magic number: AssertEx.Equal(new byte[] { 0x80' 0x01 }' CompressSignedInteger(-8192));
Magic Number,Microsoft.CodeAnalysis.UnitTests.PEWriter,BinaryWriterTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\PEWriter\BinaryWriterTests.cs,CompressSignedIntegersFromSpecExamples,The following statement contains a magic number: AssertEx.Equal(new byte[] { 0xDF' 0xFF' 0xFF' 0xFE }' CompressSignedInteger(268435455));
Magic Number,Microsoft.CodeAnalysis.UnitTests.PEWriter,BinaryWriterTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\PEWriter\BinaryWriterTests.cs,CompressSignedIntegersFromSpecExamples,The following statement contains a magic number: AssertEx.Equal(new byte[] { 0xC0' 0x00' 0x00' 0x01 }' CompressSignedInteger(-268435456));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,BitArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\BitArrayTests.cs,UpperBitsUnset,The following statement contains a magic number: b < 2
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,BitArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\BitArrayTests.cs,UpperBitsUnset,The following statement contains a magic number: a < 5
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,RandomExtensions,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\BitArrayTests.cs,NextBool,The following statement contains a magic number: return self.Next(2) == 0;
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,CachingFactoryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\CachingFactoryTests.cs,ZeroHash,The following statement contains a magic number: var cache = new CachingFactory<CacheKey' CacheValue>(512'                  k => new CacheValue(k.Value + 1)'                  k => k.Value'                  (k' v) => k.Value == v.Value);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,EnumerableExtensionsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\EnumerableExtensionsTests.cs,AsSingleton,The following statement contains a magic number: Assert.Equal(0' new int[] { 1' 2 }.AsSingleton());
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,EnumerableExtensionsTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\EnumerableExtensionsTests.cs,AsSingleton,The following statement contains a magic number: Assert.Equal(0' Enumerable.Range(1' 2).AsSingleton());
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,CreateFrom,The following statement contains a magic number: a = ImmutableArray.Create<int>(2);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,CreateFrom,The following statement contains a magic number: Assert.Equal(2' a[0]);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,CreateFrom,The following statement contains a magic number: a = ImmutableArray.CreateRange<int>(Enumerable.Range(1' 2));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,CreateFrom,The following statement contains a magic number: Assert.Equal(2' a.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,CreateFrom,The following statement contains a magic number: Assert.Equal(2' a[1]);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,InsertAt,The following statement contains a magic number: builder.Insert(2' "elephant");
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,InsertAt,The following statement contains a magic number: builder.Insert(2' "drum");
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,InsertAt,The following statement contains a magic number: Assert.Equal(builder[2]' "banana");
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,InsertAt,The following statement contains a magic number: Assert.Equal(builder[3]' "candy");
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,InsertAt,The following statement contains a magic number: Assert.Equal(builder[4]' "drum");
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,InsertAt,The following statement contains a magic number: Assert.Equal(builder[5]' "elephant");
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SetEquals,The following statement contains a magic number: var original = new int[] { 1' 2' 3' }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SetEquals,The following statement contains a magic number: var original = new int[] { 1' 2' 3' }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SetEquals,The following statement contains a magic number: var notEqualSubset = new int[] { 1' 2' }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SetEquals,The following statement contains a magic number: var notEqualSuperset = new int[] { 1' 2' 3' 4' }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SetEquals,The following statement contains a magic number: var notEqualSuperset = new int[] { 1' 2' 3' 4' }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SetEquals,The following statement contains a magic number: var notEqualSuperset = new int[] { 1' 2' 3' 4' }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SetEquals,The following statement contains a magic number: var equalOrder = new int[] { 2' 1' 3' }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SetEquals,The following statement contains a magic number: var equalOrder = new int[] { 2' 1' 3' }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SetEquals,The following statement contains a magic number: var equalElements = new int[] { -1' -2' -3 }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SetEquals,The following statement contains a magic number: var equalElements = new int[] { -1' -2' -3 }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SetEquals,The following statement contains a magic number: var equalDuplicate = new int[] { 1' 2' 3' 3' -3 }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SetEquals,The following statement contains a magic number: var equalDuplicate = new int[] { 1' 2' 3' 3' -3 }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SetEquals,The following statement contains a magic number: var equalDuplicate = new int[] { 1' 2' 3' 3' -3 }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SetEquals,The following statement contains a magic number: var equalDuplicate = new int[] { 1' 2' 3' 3' -3 }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SetEquals,The following statement contains a magic number: var singleton2 = ImmutableArray.Create<int>(2);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,Single,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => ImmutableArray.Create<int>(1' 2).Single());
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,Single,The following statement contains a magic number: Func<int' bool> isOdd = x => x % 2 == 1;
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,Single,The following statement contains a magic number: Assert.Equal(1' ImmutableArray.Create<int>(1' 2).Single(isOdd));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,Single,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => ImmutableArray.Create<int>(1' 2' 3).Single(isOdd));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,Single,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => ImmutableArray.Create<int>(1' 2' 3).Single(isOdd));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,IndexOf,The following statement contains a magic number: var roa = new int[] { 1' 2' 3 }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,IndexOf,The following statement contains a magic number: var roa = new int[] { 1' 2' 3 }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,IndexOf,The following statement contains a magic number: Assert.Equal(1' roa.IndexOf(2));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,CopyTo,The following statement contains a magic number: var roa = new int?[] { 1' null' 3 }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,CopyTo,The following statement contains a magic number: var roaCopy = new int?[4];
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,CopyTo,The following statement contains a magic number: Assert.False(roaCopy[2].HasValue);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,CopyTo,The following statement contains a magic number: Assert.Equal(3' roaCopy[3].Value);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,CopyTo,The following statement contains a magic number: Assert.Equal(3' roaCopy[3].Value);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,ElementAt,The following statement contains a magic number: var roa = new int?[] { 1' null' 3 }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,ElementAt,The following statement contains a magic number: Assert.Equal(3' roa.ElementAt(2).Value);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,ElementAt,The following statement contains a magic number: Assert.Equal(3' roa.ElementAt(2).Value);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,ElementAtOrDefault,The following statement contains a magic number: var roa = new int?[] { 1' 2' 3 }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,ElementAtOrDefault,The following statement contains a magic number: var roa = new int?[] { 1' 2' 3 }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,ElementAtOrDefault,The following statement contains a magic number: Assert.Equal(2' roa.ElementAtOrDefault(1).Value);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,ElementAtOrDefault,The following statement contains a magic number: Assert.Equal(3' roa.ElementAtOrDefault(2).Value);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,ElementAtOrDefault,The following statement contains a magic number: Assert.Equal(3' roa.ElementAtOrDefault(2).Value);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,ElementAtOrDefault,The following statement contains a magic number: Assert.False(roa.ElementAtOrDefault(10).HasValue);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,Last,The following statement contains a magic number: roa = new int?[] { 1' 2' 3 }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,Last,The following statement contains a magic number: roa = new int?[] { 1' 2' 3 }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,Last,The following statement contains a magic number: Assert.Equal(3' roa.Last(i => i > 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,LastOrDefault,The following statement contains a magic number: roa = new int?[] { 1' 2' 3 }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,LastOrDefault,The following statement contains a magic number: roa = new int?[] { 1' 2' 3 }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,LastOrDefault,The following statement contains a magic number: Assert.Equal(3' roa.LastOrDefault(i => i > 1));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SingleOrDefault,The following statement contains a magic number: roa = new int?[] { 1' 2' 3 }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SingleOrDefault,The following statement contains a magic number: roa = new int?[] { 1' 2' 3 }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SingleOrDefault,The following statement contains a magic number: roa = new int?[] { 1' 2' 3 }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SingleOrDefault,The following statement contains a magic number: roa = new int?[] { 1' 2' 3 }.AsImmutableOrNull();
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SingleOrDefault,The following statement contains a magic number: Assert.Equal(2' roa.SingleOrDefault(i => i == 2));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SingleOrDefault,The following statement contains a magic number: Assert.Equal(2' roa.SingleOrDefault(i => i == 2));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,Concat,The following statement contains a magic number: var a = ImmutableArray.Create<int>(0' 2' 4);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,Concat,The following statement contains a magic number: var a = ImmutableArray.Create<int>(0' 2' 4);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,Concat,The following statement contains a magic number: Assert.True(a.Concat(a).SequenceEqual(ImmutableArray.Create<int>(0' 2' 4' 0' 2' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,Concat,The following statement contains a magic number: Assert.True(a.Concat(a).SequenceEqual(ImmutableArray.Create<int>(0' 2' 4' 0' 2' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,Concat,The following statement contains a magic number: Assert.True(a.Concat(a).SequenceEqual(ImmutableArray.Create<int>(0' 2' 4' 0' 2' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,Concat,The following statement contains a magic number: Assert.True(a.Concat(a).SequenceEqual(ImmutableArray.Create<int>(0' 2' 4' 0' 2' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,AddRange,The following statement contains a magic number: var a = ImmutableArray.Create<int>(0' 2' 4);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,AddRange,The following statement contains a magic number: var a = ImmutableArray.Create<int>(0' 2' 4);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,AddRange,The following statement contains a magic number: Assert.True(a.AddRange(a).SequenceEqual(ImmutableArray.Create<int>(0' 2' 4' 0' 2' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,AddRange,The following statement contains a magic number: Assert.True(a.AddRange(a).SequenceEqual(ImmutableArray.Create<int>(0' 2' 4' 0' 2' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,AddRange,The following statement contains a magic number: Assert.True(a.AddRange(a).SequenceEqual(ImmutableArray.Create<int>(0' 2' 4' 0' 2' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,AddRange,The following statement contains a magic number: Assert.True(a.AddRange(a).SequenceEqual(ImmutableArray.Create<int>(0' 2' 4' 0' 2' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,AddRange,The following statement contains a magic number: Assert.True(a.AddRange((IEnumerable<int>)a).SequenceEqual(ImmutableArray.Create<int>(0' 2' 4' 0' 2' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,AddRange,The following statement contains a magic number: Assert.True(a.AddRange((IEnumerable<int>)a).SequenceEqual(ImmutableArray.Create<int>(0' 2' 4' 0' 2' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,AddRange,The following statement contains a magic number: Assert.True(a.AddRange((IEnumerable<int>)a).SequenceEqual(ImmutableArray.Create<int>(0' 2' 4' 0' 2' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,AddRange,The following statement contains a magic number: Assert.True(a.AddRange((IEnumerable<int>)a).SequenceEqual(ImmutableArray.Create<int>(0' 2' 4' 0' 2' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,InsertRange,The following statement contains a magic number: var a = ImmutableArray.Create<int>(0' 2' 4);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,InsertRange,The following statement contains a magic number: var a = ImmutableArray.Create<int>(0' 2' 4);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,InsertRange,The following statement contains a magic number: Assert.Equal(a' a.InsertRange(2' empty));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,InsertRange,The following statement contains a magic number: Assert.True(a.InsertRange(2' a).SequenceEqual(ImmutableArray.Create<int>(0' 2' 0' 2' 4' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,InsertRange,The following statement contains a magic number: Assert.True(a.InsertRange(2' a).SequenceEqual(ImmutableArray.Create<int>(0' 2' 0' 2' 4' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,InsertRange,The following statement contains a magic number: Assert.True(a.InsertRange(2' a).SequenceEqual(ImmutableArray.Create<int>(0' 2' 0' 2' 4' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,InsertRange,The following statement contains a magic number: Assert.True(a.InsertRange(2' a).SequenceEqual(ImmutableArray.Create<int>(0' 2' 0' 2' 4' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,InsertRange,The following statement contains a magic number: Assert.True(a.InsertRange(2' a).SequenceEqual(ImmutableArray.Create<int>(0' 2' 0' 2' 4' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SequenceEqual,The following statement contains a magic number: var r = ImmutableArray.Create<int>(1' 2' 3);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SequenceEqual,The following statement contains a magic number: var r = ImmutableArray.Create<int>(1' 2' 3);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SequenceEqual,The following statement contains a magic number: Assert.True(r.SequenceEqual(Enumerable.Range(1' 3)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SequenceEqual,The following statement contains a magic number: Assert.False(r.SequenceEqual(Enumerable.Range(1' 2)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SequenceEqual,The following statement contains a magic number: Assert.False(r.SequenceEqual(Enumerable.Range(1' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SequenceEqual,The following statement contains a magic number: var s = ImmutableArray.Create<int>(10' 20' 30);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SequenceEqual,The following statement contains a magic number: var s = ImmutableArray.Create<int>(10' 20' 30);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SequenceEqual,The following statement contains a magic number: var s = ImmutableArray.Create<int>(10' 20' 30);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SequenceEqual,The following statement contains a magic number: Assert.True(r.SequenceEqual(s' (x' y) => 10 * x == y));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: Assert.True(empty.SequenceEqual(empty.SelectAsArray((item' arg) => arg' 2)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: Assert.True(empty.SequenceEqual(empty.SelectAsArray((item' index' arg) => arg' 2)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: Assert.True(empty.SequenceEqual(empty.SelectAsArray((item' index' arg) => index' 3)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: var a = ImmutableArray.Create<int>(3' 2' 1' 0);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: var a = ImmutableArray.Create<int>(3' 2' 1' 0);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: var b = ImmutableArray.Create<int>(0' 1' 2' 3);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: var b = ImmutableArray.Create<int>(0' 1' 2' 3);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: var c = ImmutableArray.Create<int>(2' 2' 2' 2);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: var c = ImmutableArray.Create<int>(2' 2' 2' 2);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: var c = ImmutableArray.Create<int>(2' 2' 2' 2);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: var c = ImmutableArray.Create<int>(2' 2' 2' 2);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: Assert.True(c.SequenceEqual(a.SelectAsArray((item' arg) => arg' 2)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: Assert.True(c.SequenceEqual(a.SelectAsArray((item' index' arg) => arg' 2)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: Assert.True(b.SequenceEqual(a.SelectAsArray((item' index' arg) => index' 3)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10 }' ImmutableArray.Create(1).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10 }' ImmutableArray.Create(1).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20 }' ImmutableArray.Create(1' 2).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20 }' ImmutableArray.Create(1' 2).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20 }' ImmutableArray.Create(1' 2).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20 }' ImmutableArray.Create(1' 2).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30 }' ImmutableArray.Create(1' 2' 3).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30 }' ImmutableArray.Create(1' 2' 3).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30 }' ImmutableArray.Create(1' 2' 3).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30 }' ImmutableArray.Create(1' 2' 3).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30 }' ImmutableArray.Create(1' 2' 3).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30 }' ImmutableArray.Create(1' 2' 3).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30' 40 }' ImmutableArray.Create(1' 2' 3' 4).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30' 40 }' ImmutableArray.Create(1' 2' 3' 4).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30' 40 }' ImmutableArray.Create(1' 2' 3' 4).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30' 40 }' ImmutableArray.Create(1' 2' 3' 4).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30' 40 }' ImmutableArray.Create(1' 2' 3' 4).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30' 40 }' ImmutableArray.Create(1' 2' 3' 4).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30' 40 }' ImmutableArray.Create(1' 2' 3' 4).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30' 40 }' ImmutableArray.Create(1' 2' 3' 4).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30' 40' 50 }' ImmutableArray.Create(1' 2' 3' 4' 5).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30' 40' 50 }' ImmutableArray.Create(1' 2' 3' 4' 5).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30' 40' 50 }' ImmutableArray.Create(1' 2' 3' 4' 5).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30' 40' 50 }' ImmutableArray.Create(1' 2' 3' 4' 5).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30' 40' 50 }' ImmutableArray.Create(1' 2' 3' 4' 5).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30' 40' 50 }' ImmutableArray.Create(1' 2' 3' 4' 5).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30' 40' 50 }' ImmutableArray.Create(1' 2' 3' 4' 5).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30' 40' 50 }' ImmutableArray.Create(1' 2' 3' 4' 5).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30' 40' 50 }' ImmutableArray.Create(1' 2' 3' 4' 5).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,SelectAsArray,The following statement contains a magic number: AssertEx.Equal(new[] { 10' 20' 30' 40' 50 }' ImmutableArray.Create(1' 2' 3' 4' 5).SelectAsArray(i => 10 * i));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: var a = ImmutableArray.Create<int>(0' 1' 2' 3' 4' 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: var a = ImmutableArray.Create<int>(0' 1' 2' 3' 4' 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: var a = ImmutableArray.Create<int>(0' 1' 2' 3' 4' 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: var a = ImmutableArray.Create<int>(0' 1' 2' 3' 4' 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i > 0).SequenceEqual(ImmutableArray.Create<int>(1' 2' 3' 4' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i > 0).SequenceEqual(ImmutableArray.Create<int>(1' 2' 3' 4' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i > 0).SequenceEqual(ImmutableArray.Create<int>(1' 2' 3' 4' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i > 0).SequenceEqual(ImmutableArray.Create<int>(1' 2' 3' 4' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i < 5).SequenceEqual(ImmutableArray.Create<int>(0' 1' 2' 3' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i < 5).SequenceEqual(ImmutableArray.Create<int>(0' 1' 2' 3' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i < 5).SequenceEqual(ImmutableArray.Create<int>(0' 1' 2' 3' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i < 5).SequenceEqual(ImmutableArray.Create<int>(0' 1' 2' 3' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i == 5).SequenceEqual(ImmutableArray.Create<int>(5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i == 5).SequenceEqual(ImmutableArray.Create<int>(5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i < 3).SequenceEqual(ImmutableArray.Create<int>(0' 1' 2)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i < 3).SequenceEqual(ImmutableArray.Create<int>(0' 1' 2)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i > 2).SequenceEqual(ImmutableArray.Create<int>(3' 4' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i > 2).SequenceEqual(ImmutableArray.Create<int>(3' 4' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i > 2).SequenceEqual(ImmutableArray.Create<int>(3' 4' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i > 2).SequenceEqual(ImmutableArray.Create<int>(3' 4' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i % 2 == 0).SequenceEqual(ImmutableArray.Create<int>(0' 2' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i % 2 == 0).SequenceEqual(ImmutableArray.Create<int>(0' 2' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i % 2 == 0).SequenceEqual(ImmutableArray.Create<int>(0' 2' 4)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i % 2 == 1).SequenceEqual(ImmutableArray.Create<int>(1' 3' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i % 2 == 1).SequenceEqual(ImmutableArray.Create<int>(1' 3' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,ReadOnlyArrayTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\ReadOnlyArrayTests.cs,WhereAsArray,The following statement contains a magic number: Assert.True(a.WhereAsArray(i => i % 2 == 1).SequenceEqual(ImmutableArray.Create<int>(1' 3' 5)));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,SmallDictionaryAlwaysBalanced,The following statement contains a magic number: sd.Add(10' "1");
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,SmallDictionaryAlwaysBalanced,The following statement contains a magic number: sd.Add(2' "1");
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,SmallDictionaryAlwaysBalanced,The following statement contains a magic number: sd.Add(1000' "1");
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,SmallDictionaryAlwaysBalanced,The following statement contains a magic number: sd.Add(-123' "1");
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,SmallDictionaryAlwaysBalanced,The following statement contains a magic number: sd.Add(4' "1");
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,SmallDictionaryAlwaysBalanced,The following statement contains a magic number: sd.Add(5' "1");
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,SmallDictionaryAlwaysBalanced,The following statement contains a magic number: sd.Add(6' "1");
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: const int elements = 150;
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: ht.Add(i - 2' i - 2);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: ht.Add(i - 2' i - 2);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: ht.Add(i - 3' i - 3);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: ht.Add(i - 3' i - 3);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: ht.Add(i - 4' i - 4);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: ht.Add(i - 4' i - 4);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: ht.Add(i - 6' i - 6);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: ht.Add(i - 6' i - 6);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: ht.Add(i - 5' i - 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: ht.Add(i - 5' i - 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: ht.Add(i - 7' i - 7);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: ht.Add(i - 7' i - 7);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: ht.Add(i - 8' i - 8);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: ht.Add(i - 8' i - 8);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: ht.Add(i - 9' i - 9);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: ht.Add(i - 9' i - 9);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: Assert.Equal(150' ht.Count());
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: Assert.Equal(ht[i - 2]' i - 2);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: Assert.Equal(ht[i - 2]' i - 2);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: Assert.Equal(ht[i - 3]' i - 3);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: Assert.Equal(ht[i - 3]' i - 3);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: Assert.Equal(ht[i - 4]' i - 4);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: Assert.Equal(ht[i - 4]' i - 4);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: Assert.Equal(ht[i - 6]' i - 6);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: Assert.Equal(ht[i - 6]' i - 6);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: Assert.Equal(ht[i - 5]' i - 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: Assert.Equal(ht[i - 5]' i - 5);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: Assert.Equal(ht[i - 7]' i - 7);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: Assert.Equal(ht[i - 7]' i - 7);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: Assert.Equal(ht[i - 8]' i - 8);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: Assert.Equal(ht[i - 8]' i - 8);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: Assert.Equal(ht[i - 9]' i - 9);
Magic Number,Microsoft.CodeAnalysis.UnitTests.Collections,SmallDictionaryTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\Collections\SmallDictionaryTests.cs,TestSmallDict,The following statement contains a magic number: Assert.Equal(ht[i - 9]' i - 9);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheHoldsCapacity,The following statement contains a magic number: var clc = new OrderedTestDictionary<int' int>(3)                  { {1' 1}' {2' 2}' {3' 3} }.MakeCache();
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheHoldsCapacity,The following statement contains a magic number: var clc = new OrderedTestDictionary<int' int>(3)                  { {1' 1}' {2' 2}' {3' 3} }.MakeCache();
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheHoldsCapacity,The following statement contains a magic number: var clc = new OrderedTestDictionary<int' int>(3)                  { {1' 1}' {2' 2}' {3' 3} }.MakeCache();
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheHoldsCapacity,The following statement contains a magic number: var clc = new OrderedTestDictionary<int' int>(3)                  { {1' 1}' {2' 2}' {3' 3} }.MakeCache();
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheHoldsCapacity,The following statement contains a magic number: var clc = new OrderedTestDictionary<int' int>(3)                  { {1' 1}' {2' 2}' {3' 3} }.MakeCache();
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheHoldsCapacity,The following statement contains a magic number: var expected = new OrderedTestDictionary<int' int>(3)                  { {3' 3}' {2' 2}' {1' 1}};
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheHoldsCapacity,The following statement contains a magic number: var expected = new OrderedTestDictionary<int' int>(3)                  { {3' 3}' {2' 2}' {1' 1}};
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheHoldsCapacity,The following statement contains a magic number: var expected = new OrderedTestDictionary<int' int>(3)                  { {3' 3}' {2' 2}' {1' 1}};
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheHoldsCapacity,The following statement contains a magic number: var expected = new OrderedTestDictionary<int' int>(3)                  { {3' 3}' {2' 2}' {1' 1}};
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheHoldsCapacity,The following statement contains a magic number: var expected = new OrderedTestDictionary<int' int>(3)                  { {3' 3}' {2' 2}' {1' 1}};
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheOverwritesKey,The following statement contains a magic number: var clc = new OrderedTestDictionary<int' int>(3)                  { {1' 1}' {2' 2}' {3' 3} }.MakeCache();
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheOverwritesKey,The following statement contains a magic number: var clc = new OrderedTestDictionary<int' int>(3)                  { {1' 1}' {2' 2}' {3' 3} }.MakeCache();
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheOverwritesKey,The following statement contains a magic number: var clc = new OrderedTestDictionary<int' int>(3)                  { {1' 1}' {2' 2}' {3' 3} }.MakeCache();
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheOverwritesKey,The following statement contains a magic number: var clc = new OrderedTestDictionary<int' int>(3)                  { {1' 1}' {2' 2}' {3' 3} }.MakeCache();
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheOverwritesKey,The following statement contains a magic number: var clc = new OrderedTestDictionary<int' int>(3)                  { {1' 1}' {2' 2}' {3' 3} }.MakeCache();
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheOverwritesKey,The following statement contains a magic number: clc[3] = 0;
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheOverwritesKey,The following statement contains a magic number: var expected = new OrderedTestDictionary<int' int>(3)                  { {3' 0}' {2' 2}' {1' 1}};
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheOverwritesKey,The following statement contains a magic number: var expected = new OrderedTestDictionary<int' int>(3)                  { {3' 0}' {2' 2}' {1' 1}};
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheOverwritesKey,The following statement contains a magic number: var expected = new OrderedTestDictionary<int' int>(3)                  { {3' 0}' {2' 2}' {1' 1}};
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheOverwritesKey,The following statement contains a magic number: var expected = new OrderedTestDictionary<int' int>(3)                  { {3' 0}' {2' 2}' {1' 1}};
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsNoRead,The following statement contains a magic number: var clc = new OrderedTestDictionary<int' int>(3)                  { {1' 1}' {2' 2}' {3' 3} }.MakeCache();
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsNoRead,The following statement contains a magic number: var clc = new OrderedTestDictionary<int' int>(3)                  { {1' 1}' {2' 2}' {3' 3} }.MakeCache();
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsNoRead,The following statement contains a magic number: var clc = new OrderedTestDictionary<int' int>(3)                  { {1' 1}' {2' 2}' {3' 3} }.MakeCache();
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsNoRead,The following statement contains a magic number: var clc = new OrderedTestDictionary<int' int>(3)                  { {1' 1}' {2' 2}' {3' 3} }.MakeCache();
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsNoRead,The following statement contains a magic number: var clc = new OrderedTestDictionary<int' int>(3)                  { {1' 1}' {2' 2}' {3' 3} }.MakeCache();
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsNoRead,The following statement contains a magic number: clc[4] = 4;
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsNoRead,The following statement contains a magic number: clc[4] = 4;
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsNoRead,The following statement contains a magic number: var expected = new OrderedTestDictionary<int' int>(3)                  { {4' 4 }' {3' 3}' {2' 2} };
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsNoRead,The following statement contains a magic number: var expected = new OrderedTestDictionary<int' int>(3)                  { {4' 4 }' {3' 3}' {2' 2} };
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsNoRead,The following statement contains a magic number: var expected = new OrderedTestDictionary<int' int>(3)                  { {4' 4 }' {3' 3}' {2' 2} };
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsNoRead,The following statement contains a magic number: var expected = new OrderedTestDictionary<int' int>(3)                  { {4' 4 }' {3' 3}' {2' 2} };
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsNoRead,The following statement contains a magic number: var expected = new OrderedTestDictionary<int' int>(3)                  { {4' 4 }' {3' 3}' {2' 2} };
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsNoRead,The following statement contains a magic number: var expected = new OrderedTestDictionary<int' int>(3)                  { {4' 4 }' {3' 3}' {2' 2} };
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsNoRead,The following statement contains a magic number: var expected = new OrderedTestDictionary<int' int>(3)                  { {4' 4 }' {3' 3}' {2' 2} };
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsWithRead,The following statement contains a magic number: var clc = new OrderedTestDictionary<int' int>(3)                  { {1' 1}' {2' 2}' {3' 3} }.MakeCache();
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsWithRead,The following statement contains a magic number: var clc = new OrderedTestDictionary<int' int>(3)                  { {1' 1}' {2' 2}' {3' 3} }.MakeCache();
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsWithRead,The following statement contains a magic number: var clc = new OrderedTestDictionary<int' int>(3)                  { {1' 1}' {2' 2}' {3' 3} }.MakeCache();
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsWithRead,The following statement contains a magic number: var clc = new OrderedTestDictionary<int' int>(3)                  { {1' 1}' {2' 2}' {3' 3} }.MakeCache();
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsWithRead,The following statement contains a magic number: var clc = new OrderedTestDictionary<int' int>(3)                  { {1' 1}' {2' 2}' {3' 3} }.MakeCache();
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsWithRead,The following statement contains a magic number: clc[4] = 4;
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsWithRead,The following statement contains a magic number: clc[4] = 4;
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsWithRead,The following statement contains a magic number: var expected = new OrderedTestDictionary<int' int>(3)                  { {4' 4 }' {1' 1}' {3' 3}' };
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsWithRead,The following statement contains a magic number: var expected = new OrderedTestDictionary<int' int>(3)                  { {4' 4 }' {1' 1}' {3' 3}' };
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsWithRead,The following statement contains a magic number: var expected = new OrderedTestDictionary<int' int>(3)                  { {4' 4 }' {1' 1}' {3' 3}' };
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsWithRead,The following statement contains a magic number: var expected = new OrderedTestDictionary<int' int>(3)                  { {4' 4 }' {1' 1}' {3' 3}' };
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,ConcurrentLruCacheTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\ConcurrentLruCacheTests.cs,CacheEvictsWithRead,The following statement contains a magic number: var expected = new OrderedTestDictionary<int' int>(3)                  { {4' 4 }' {1' 1}' {3' 3}' };
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,OneOrManyTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\OneOrManyTests.cs,Positive,The following statement contains a magic number: var single = OneOrMany.Create(123);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,OneOrManyTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\OneOrManyTests.cs,Positive,The following statement contains a magic number: var quad = OneOrMany.Create(ImmutableArray.Create<int>(10' 20' 30' 40));
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,OneOrManyTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\OneOrManyTests.cs,Positive,The following statement contains a magic number: var quad = OneOrMany.Create(ImmutableArray.Create<int>(10' 20' 30' 40));
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,OneOrManyTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\OneOrManyTests.cs,Positive,The following statement contains a magic number: var quad = OneOrMany.Create(ImmutableArray.Create<int>(10' 20' 30' 40));
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,OneOrManyTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\OneOrManyTests.cs,Positive,The following statement contains a magic number: var quad = OneOrMany.Create(ImmutableArray.Create<int>(10' 20' 30' 40));
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,OneOrManyTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\OneOrManyTests.cs,Positive,The following statement contains a magic number: Assert.Equal(123' single[0]);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,OneOrManyTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\OneOrManyTests.cs,Positive,The following statement contains a magic number: Assert.Equal(10' quad[0]);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,OneOrManyTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\OneOrManyTests.cs,Positive,The following statement contains a magic number: Assert.Equal(20' quad[1]);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,OneOrManyTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\OneOrManyTests.cs,Positive,The following statement contains a magic number: Assert.Equal(30' quad[2]);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,OneOrManyTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\OneOrManyTests.cs,Positive,The following statement contains a magic number: Assert.Equal(30' quad[2]);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,OneOrManyTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\OneOrManyTests.cs,Positive,The following statement contains a magic number: Assert.Equal(40' quad[3]);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,OneOrManyTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\OneOrManyTests.cs,Positive,The following statement contains a magic number: Assert.Equal(40' quad[3]);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,OneOrManyTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\OneOrManyTests.cs,Errors,The following statement contains a magic number: var single = OneOrMany.Create(123);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,OneOrManyTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\OneOrManyTests.cs,Errors,The following statement contains a magic number: var quad = OneOrMany.Create(ImmutableArray.Create<int>(10' 20' 30' 40));
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,OneOrManyTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\OneOrManyTests.cs,Errors,The following statement contains a magic number: var quad = OneOrMany.Create(ImmutableArray.Create<int>(10' 20' 30' 40));
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,OneOrManyTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\OneOrManyTests.cs,Errors,The following statement contains a magic number: var quad = OneOrMany.Create(ImmutableArray.Create<int>(10' 20' 30' 40));
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,OneOrManyTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\OneOrManyTests.cs,Errors,The following statement contains a magic number: var quad = OneOrMany.Create(ImmutableArray.Create<int>(10' 20' 30' 40));
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,OneOrManyTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\OneOrManyTests.cs,Errors,The following statement contains a magic number: Assert.Throws<IndexOutOfRangeException>(() => quad[5]);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,EnumeratorCompacts,The following statement contains a magic number: Assert.Equal(4' list.TestOnly_UnderlyingArray.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,EnumeratorCompacts,The following statement contains a magic number: Assert.Equal(4' list.TestOnly_UnderlyingArray.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,EnumeratorCompacts,The following statement contains a magic number: Assert.Equal(4' list.TestOnly_UnderlyingArray.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,EnumeratorCompacts,The following statement contains a magic number: Assert.Equal(4' list.TestOnly_UnderlyingArray.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,EnumeratorCompacts,The following statement contains a magic number: Assert.Equal(2 * 4 + 1' list.TestOnly_UnderlyingArray.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,EnumeratorCompacts,The following statement contains a magic number: Assert.Equal(2 * 4 + 1' list.TestOnly_UnderlyingArray.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,EnumeratorCompacts,The following statement contains a magic number: Assert.Equal(5' list.WeakCount);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,EnumeratorCompacts,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,EnumeratorCompacts,The following statement contains a magic number: Assert.Equal(5' list.WeakCount);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,EnumeratorCompacts,The following statement contains a magic number: Assert.Same(null' list.GetWeakReference(2).GetTarget());
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,EnumeratorCompacts,The following statement contains a magic number: Assert.Same(null' list.GetWeakReference(3).GetTarget());
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,EnumeratorCompacts,The following statement contains a magic number: Assert.Same(null' list.GetWeakReference(4).GetTarget());
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,EnumeratorCompacts,The following statement contains a magic number: Assert.Equal(4' list.TestOnly_UnderlyingArray.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsAllDead,The following statement contains a magic number: i < 9
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsAllDead,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsAllDead,The following statement contains a magic number: Assert.Equal(4' list.TestOnly_UnderlyingArray.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsFirstFourth,The following statement contains a magic number: i < 8
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsFirstFourth,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsFirstFourth,The following statement contains a magic number: Assert.Equal(4' list.TestOnly_UnderlyingArray.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsFirstFourth,The following statement contains a magic number: Assert.Equal(2' list.WeakCount);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsFirstFourth,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsSecondFourth,The following statement contains a magic number: i < 6
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsSecondFourth,The following statement contains a magic number: i < 3
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsSecondFourth,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsSecondFourth,The following statement contains a magic number: Assert.Equal(9' list.TestOnly_UnderlyingArray.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsSecondFourth,The following statement contains a magic number: Assert.Equal(4' list.WeakCount);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsSecondFourth,The following statement contains a magic number: i < 4
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsThirdFourth,The following statement contains a magic number: i < 4
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsThirdFourth,The following statement contains a magic number: i < 5
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsThirdFourth,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsThirdFourth,The following statement contains a magic number: Assert.Equal(9' list.TestOnly_UnderlyingArray.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsThirdFourth,The following statement contains a magic number: Assert.Equal(6' list.WeakCount);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsThirdFourth,The following statement contains a magic number: i < 6
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsLastFourth,The following statement contains a magic number: i < 2
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsLastFourth,The following statement contains a magic number: i < 7
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsLastFourth,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsLastFourth,The following statement contains a magic number: Assert.Equal(9 * 2 + 1' list.TestOnly_UnderlyingArray.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsLastFourth,The following statement contains a magic number: Assert.Equal(9 * 2 + 1' list.TestOnly_UnderlyingArray.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsLastFourth,The following statement contains a magic number: Assert.Equal(8' list.WeakCount);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsLastFourth,The following statement contains a magic number: i < 8
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsAllAlive,The following statement contains a magic number: i < 9
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsAllAlive,The following statement contains a magic number: Assert.Equal(9 * 2 + 1' list.TestOnly_UnderlyingArray.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsAllAlive,The following statement contains a magic number: Assert.Equal(9 * 2 + 1' list.TestOnly_UnderlyingArray.Length);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsAllAlive,The following statement contains a magic number: Assert.Equal(10' list.WeakCount);
Magic Number,Microsoft.CodeAnalysis.UnitTests.InternalUtilities,WeakListTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\InternalUtilities\WeakListTests.cs,ResizeCompactsAllAlive,The following statement contains a magic number: i < 10
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' version: new Version(1' 2' 3' 4)).ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' version: new Version(1' 2' 3' 4)).ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' version: new Version(1' 2' 3' 4)).ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyName("foo") { Version = new Version(1' 2' 3' 4) });
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyName("foo") { Version = new Version(1' 2' 3' 4) });
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyName("foo") { Version = new Version(1' 2' 3' 4) });
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' version: new Version(1' 2' 3' 4)' cultureName: "en-US").ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' version: new Version(1' 2' 3' 4)' cultureName: "en-US").ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' version: new Version(1' 2' 3' 4)' cultureName: "en-US").ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' publicKeyOrToken: new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 }.AsImmutableOrNull()).ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' publicKeyOrToken: new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 }.AsImmutableOrNull()).ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' publicKeyOrToken: new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 }.AsImmutableOrNull()).ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' publicKeyOrToken: new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 }.AsImmutableOrNull()).ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' publicKeyOrToken: new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 }.AsImmutableOrNull()).ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' publicKeyOrToken: new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 }.AsImmutableOrNull()).ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' publicKeyOrToken: new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 }.AsImmutableOrNull()).ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' version: new Version(1' 2' 3' 4)' cultureName: CultureInfo.CurrentCulture.Name' publicKeyOrToken: new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 }.AsImmutableOrNull()).ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' version: new Version(1' 2' 3' 4)' cultureName: CultureInfo.CurrentCulture.Name' publicKeyOrToken: new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 }.AsImmutableOrNull()).ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' version: new Version(1' 2' 3' 4)' cultureName: CultureInfo.CurrentCulture.Name' publicKeyOrToken: new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 }.AsImmutableOrNull()).ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' version: new Version(1' 2' 3' 4)' cultureName: CultureInfo.CurrentCulture.Name' publicKeyOrToken: new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 }.AsImmutableOrNull()).ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' version: new Version(1' 2' 3' 4)' cultureName: CultureInfo.CurrentCulture.Name' publicKeyOrToken: new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 }.AsImmutableOrNull()).ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' version: new Version(1' 2' 3' 4)' cultureName: CultureInfo.CurrentCulture.Name' publicKeyOrToken: new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 }.AsImmutableOrNull()).ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' version: new Version(1' 2' 3' 4)' cultureName: CultureInfo.CurrentCulture.Name' publicKeyOrToken: new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 }.AsImmutableOrNull()).ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' version: new Version(1' 2' 3' 4)' cultureName: CultureInfo.CurrentCulture.Name' publicKeyOrToken: new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 }.AsImmutableOrNull()).ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' version: new Version(1' 2' 3' 4)' cultureName: CultureInfo.CurrentCulture.Name' publicKeyOrToken: new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 }.AsImmutableOrNull()).ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionAssemblyNameRoundTrip,The following statement contains a magic number: RoundTrip(new AssemblyIdentity("foo"' version: new Version(1' 2' 3' 4)' cultureName: CultureInfo.CurrentCulture.Name' publicKeyOrToken: new byte[] { 1' 2' 3' 4' 5' 6' 7' 8 }.AsImmutableOrNull()).ToAssemblyName());
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionToAssemblyName,The following statement contains a magic number: Assert.Equal(new Version(2' 0' 0' 0)' name.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionToAssemblyName,The following statement contains a magic number: Assert.Equal(new Version(2' 0' 0' 0)' name.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionToAssemblyName,The following statement contains a magic number: Assert.Equal(new Version(2' 0' 0' 0)' name.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionToAssemblyName,The following statement contains a magic number: Assert.Equal(new Version(255' 255' 255' 255)' name.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionToAssemblyName,The following statement contains a magic number: Assert.Equal(new Version(255' 255' 255' 255)' name.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionToAssemblyName,The following statement contains a magic number: Assert.Equal(new Version(255' 255' 255' 255)' name.Version);
Magic Number,Microsoft.CodeAnalysis.UnitTests.MetadataReferences,FusionAssemblyIdentityTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\FusionAssemblyIdentityTests.cs,FusionToAssemblyName,The following statement contains a magic number: Assert.Equal(new Version(255' 255' 255' 255)' name.Version);
Missing Default,Microsoft.CodeAnalysis.UnitTests,MetadataHelpersTests,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Core\CodeAnalysisTest\MetadataReferences\MetadataHelpersTests.cs,GenerateTypeNamesToDecode,The following switch statement is missing a default case: switch (typeNameConfig.arrayKind)                  {                      case ArrayKind.SingleDimensional:                          typeNamebuilder.Append("[]");                          expectedArrayRanks = new[] { 1 };                          break;                        case ArrayKind.MultiDimensional:                          typeNamebuilder.Append("[']");                          expectedArrayRanks = new[] { 2 };                          break;                        case ArrayKind.Jagged:                          typeNamebuilder.Append("['][]");                          expectedArrayRanks = new[] { 1' 2 };                          break;                  }
