Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.CodeAnalysis.CSharp,CSharpDeclarationComputer,C:\repos\mono_roslyn\src\Compilers\CSharp\CSharpAnalyzerDriver\CSharpDeclarationComputer.cs,ComputeDeclarations,The method has 136 lines of code.
Long Method,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,ChangeSignature,The method has 128 lines of code.
Long Method,Microsoft.CodeAnalysis.CSharp.Completion.Providers,KeywordCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\KeywordCompletionProvider.cs,GetKeywordRecommenders,The method has 132 lines of code.
Long Method,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,NamespaceKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\NamespaceKeywordRecommender.cs,IsValidContext,The method has 108 lines of code.
Long Method,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,GetDiagnosticSpanImpl,The method has 199 lines of code.
Long Method,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,Classify,The method has 151 lines of code.
Long Method,Microsoft.CodeAnalysis.CSharp.EditAndContinue,TopSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\TopSyntaxComparer.cs,Classify,The method has 107 lines of code.
Long Method,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryInitializeState,The method has 286 lines of code.
Complex Method,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,ChangeSignature,Cyclomatic complexity of the method is 20
Complex Method,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,GetPermutedTrivia,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.LambdaSimplifier,LambdaSimplifierCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\LambdaSimplifier\LambdaSimplifierCodeRefactoringProvider.cs,CanSimplify,Cyclomatic complexity of the method is 17
Complex Method,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.MoveDeclarationNearReference,State,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\MoveDeclarationNearReference\MoveDeclarationNearReferenceCodeRefactoringProvider.State.cs,TryInitializeAsync,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.CodeAnalysis.CSharp.Completion.Providers,EnumAndCompletionListTagCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\EnumAndCompletionListTagCompletionProvider.cs,GetItemsWorkerAsync,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis.CSharp.Completion.Providers,ObjectInitializerCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\ObjectInitializerCompletionProvider.cs,GetInitializedType,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis.CSharp.Completion.Providers,SpeculativeTCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\SpeculativeTCompletionProvider.cs,GetSpeculativeTCompletions,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,NamespaceKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\NamespaceKeywordRecommender.cs,IsValidContext,Cyclomatic complexity of the method is 13
Complex Method,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,WhereKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\WhereKeywordRecommender.cs,IsTypeParameterConstraintContext,Cyclomatic complexity of the method is 14
Complex Method,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,TryGetActiveTokens,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,FindStatementAndPartner,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis.CSharp.EditAndContinue,EditClassifier,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,ClassifyUpdate,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis.CSharp.EditAndContinue,SyntaxUtilities,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\SyntaxUtilities.cs,IsAsyncMethodOrLambda,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpCodeGenerator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs,CheckActiveStatements,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpCodeGenerator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs,MoveDeclarationOutFromMethodDefinition,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,CheckErrorCasesAndAppendDescriptions,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,IsFinalSpanSemanticallyValidSpan,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryInitializeState,Cyclomatic complexity of the method is 42
Complex Method,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,IsPublicOnlyAccessibility,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.CodeAnalysis.CSharp.Organizing.Organizers,Comparer,C:\repos\mono_roslyn\src\Features\CSharp\Organizing\Organizers\MemberDeclarationsOrganizer.Comparer.cs,Compare,Cyclomatic complexity of the method is 9
Long Parameter List,Microsoft.CodeAnalysis.CSharp,CSharpDeclarationComputer,C:\repos\mono_roslyn\src\Compilers\CSharp\CSharpAnalyzerDriver\CSharpDeclarationComputer.cs,GetDeclarationsInNode,The method has 5 parameters. Parameters: model' node' getSymbol' cancellationToken' levelsToCompute
Long Parameter List,Microsoft.CodeAnalysis.CSharp,CSharpDeclarationComputer,C:\repos\mono_roslyn\src\Compilers\CSharp\CSharpAnalyzerDriver\CSharpDeclarationComputer.cs,ComputeDeclarations,The method has 7 parameters. Parameters: model' node' shouldSkip' getSymbol' builder' levelsToCompute' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,ChangeSignature,The method has 6 parameters. Parameters: document' declarationSymbol' potentiallyUpdatedNode' originalNode' signaturePermutation' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,PermuteArgumentList,The method has 5 parameters. Parameters: document' declarationSymbol' arguments' updatedSignature' isReducedExtensionMethod
Long Parameter List,Microsoft.CodeAnalysis.CSharp.CodeFixes.AddImport,CSharpAddImportCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\AddImport\CSharpAddImportCodeFixProvider.cs,AddImportAsync,The method has 5 parameters. Parameters: contextNode' namespaceSymbol' document' placeSystemNamespaceFirst' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.CodeFixes.AddImport,CSharpAddImportCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\AddImport\CSharpAddImportCodeFixProvider.cs,TryGetNamespaceString,The method has 5 parameters. Parameters: namespaceSymbol' root' fullyQualify' alias' namespaceString
Long Parameter List,Microsoft.CodeAnalysis.CSharp.CodeFixes.AddImport,CSharpAddImportCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\AddImport\CSharpAddImportCodeFixProvider.cs,IsViableExtensionMethod,The method has 5 parameters. Parameters: method' expression' semanticModel' syntaxFacts' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.CodeFixes.AddImport,CSharpAddImportCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\AddImport\CSharpAddImportCodeFixProvider.cs,IsViableField,The method has 5 parameters. Parameters: field' expression' semanticModel' syntaxFacts' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.CodeFixes.AddImport,CSharpAddImportCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\AddImport\CSharpAddImportCodeFixProvider.cs,IsViableProperty,The method has 5 parameters. Parameters: property' expression' semanticModel' syntaxFacts' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.CodeFixes.AddImport,CSharpAddImportCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\AddImport\CSharpAddImportCodeFixProvider.cs,IsViablePropertyOrField,The method has 5 parameters. Parameters: propertyOrField' expression' semanticModel' syntaxFacts' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.CodeFixes.Async,CSharpAddAsyncCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Async\CSharpAddAsyncCodeFixProvider.cs,GetNewRoot,The method has 6 parameters. Parameters: root' oldNode' semanticModel' diagnostic' document' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.CodeFixes.Async,CSharpAddAwaitCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Async\CSharpAddAwaitCodeFixProvider.cs,GetNewRoot,The method has 6 parameters. Parameters: root' oldNode' semanticModel' diagnostic' document' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.CodeFixes.Iterator,CSharpAddYieldCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Iterator\CSharpAddYieldCodeFixProvider.cs,GetCodeFixAsync,The method has 5 parameters. Parameters: root' node' document' diagnostics' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.CodeFixes.Iterator,CSharpChangeToIEnumerableCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Iterator\CSharpChangeToIEnumerableCodeFixProvider.cs,GetCodeFixAsync,The method has 5 parameters. Parameters: root' node' document' diagnostics' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.CodeFixes.RemoveUnnecessaryCast,RemoveUnnecessaryCastFixAllProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\RemoveUnnecessaryCast\RemoveUnnecessaryCastCodeFixProvider.RemoveUnnecessaryCastFixAllProvider.cs,GetNodeToSimplify,The method has 6 parameters. Parameters: root' model' diagnostic' workspace' codeActionId' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.CodeFixes.SimplifyTypeNames,SimplifyTypeNamesCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\SimplifyTypeNames\SimplifyTypeNamesCodeFixProvider.SimplifyTypeNamesFixAllProvider.cs,GetNodeToSimplify,The method has 6 parameters. Parameters: root' model' span' optionSet' diagnosticId' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.CodeFixes.SimplifyTypeNames,SimplifyTypeNamesCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\SimplifyTypeNames\SimplifyTypeNamesCodeFixProvider.SimplifyTypeNamesFixAllProvider.cs,CanSimplifyTypeNameExpression,The method has 6 parameters. Parameters: model' node' optionSet' span' diagnosticId' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.CodeFixes.SimplifyTypeNames,SimplifyTypeNamesFixAllProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\SimplifyTypeNames\SimplifyTypeNamesCodeFixProvider.SimplifyTypeNamesFixAllProvider.cs,GetNodeToSimplify,The method has 6 parameters. Parameters: root' model' diagnostic' workspace' codeActionId' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.CodeFixes.Suppression,CSharpSuppressionCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Suppression\CSharpSuppressionCodeFixProvider.cs,CreateAttributeList,The method has 5 parameters. Parameters: targetSymbol' diagnostic' isAssemblyAttribute' leadingTrivia' needsLeadingEndOfLine
Long Parameter List,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,DetectSemanticConflicts,The method has 5 parameters. Parameters: inlinedDocument' newSemanticModelForInlinedDocument' semanticModelBeforeInline' originalInitializerSymbolInfo' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,ReferenceRewriter,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.ReferenceRewriter.cs,Visit,The method has 5 parameters. Parameters: semanticModel' scope' variableDeclarator' expressionToInline' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.LambdaSimplifier,LambdaSimplifierCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\LambdaSimplifier\LambdaSimplifierCodeRefactoringProvider.cs,CanSimplify,The method has 5 parameters. Parameters: document' lambda' paramNames' invocation' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.Completion.Providers,AttributeNamedParameterCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\AttributeNamedParameterCompletionProvider.cs,GetNameEqualsItemsAsync,The method has 7 parameters. Parameters: workspace' semanticModel' position' token' attributeSyntax' existingNamedParameters' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.Completion.Providers,AttributeNamedParameterCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\AttributeNamedParameterCompletionProvider.cs,GetNameColonItemsAsync,The method has 7 parameters. Parameters: workspace' semanticModel' position' token' attributeSyntax' existingNamedParameters' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.Completion.Providers,CrefCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\CrefCompletionProvider.CrefCompletionItem.cs,CreateItemsAsync,The method has 6 parameters. Parameters: workspace' semanticModel' textChangeSpanPosition' symbols' token' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.Completion.Providers,CrefCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\CrefCompletionProvider.CrefCompletionItem.cs,CreateItemAsync,The method has 6 parameters. Parameters: workspace' semanticModel' textChangeSpanPosition' symbol' token' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.Completion.Providers,CrefCompletionItem,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\CrefCompletionProvider.CrefCompletionItem.cs,CrefCompletionItem,The method has 8 parameters. Parameters: workspace' completionProvider' displayText' insertionText' textSpan' descriptionFactory' glyph' sortText
Long Parameter List,Microsoft.CodeAnalysis.CSharp.Completion.Providers,ExplicitInterfaceCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\ExplicitInterfaceCompletionProvider.cs,GetCompletionsOffOfExplicitInterfaceAsync,The method has 5 parameters. Parameters: document' semanticModel' position' name' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.Completion.Providers,ObjectInitializerCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\ObjectInitializerCompletionProvider.cs,CreateItem,The method has 5 parameters. Parameters: workspace' displayText' textSpan' descriptionFactory' glyph
Long Parameter List,Microsoft.CodeAnalysis.CSharp.Completion.Providers,SnippetCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\SnippetCompletionProvider.cs,GetSnippetCompletionItemsAsync,The method has 5 parameters. Parameters: workspace' semanticModel' position' isPreProcessorContext' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.Completion.Providers,SuggestionModeCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\SuggestionModeCompletionProvider.cs,IsImplicitArrayCreation,The method has 5 parameters. Parameters: semanticModel' token' position' typeInferrer' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.Completion.Providers,SuggestionModeCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\SuggestionModeCompletionProvider.cs,IsLambdaExpression,The method has 5 parameters. Parameters: semanticModel' position' token' typeInferrer' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.Completion,CSharpCompletionItem,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CSharpCompletionItem.cs,CSharpCompletionItem,The method has 12 parameters. Parameters: workspace' completionProvider' displayText' filterSpan' descriptionFactory' glyph' sortText' filterText' preselect' isBuilder' showsWarningIcon' shouldFormatOnCommit
Long Parameter List,Microsoft.CodeAnalysis.CSharp.Diagnostics.SimplifyTypeNames,CSharpSimplifyTypeNamesDiagnosticAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\Diagnostics\Analyzers\CSharpSimplifyTypeNamesDiagnosticAnalyzer.cs,CanSimplifyTypeNameExpressionCore,The method has 6 parameters. Parameters: model' node' optionSet' issueSpan' diagnosticId' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.Diagnostics.SimplifyTypeNames,CSharpSimplifyTypeNamesDiagnosticAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\Diagnostics\Analyzers\CSharpSimplifyTypeNamesDiagnosticAnalyzer.cs,CanSimplifyTypeNameExpression,The method has 6 parameters. Parameters: model' node' optionSet' issueSpan' diagnosticId' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,FindStatementAndPartner,The method has 5 parameters. Parameters: declarationBody' position' partnerDeclarationBodyOpt' partnerOpt' statementPart
Long Parameter List,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,TryMatchActiveStatement,The method has 5 parameters. Parameters: oldStatement' statementPart' oldBody' newBody' newStatement
Long Parameter List,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,GetSymbolForEdit,The method has 5 parameters. Parameters: model' node' editKind' editMap' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,ReportOtherRudeEditsAroundActiveStatement,The method has 5 parameters. Parameters: diagnostics' match' oldActiveStatement' newActiveStatement' isLeaf
Long Parameter List,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,ReportRudeEditsForAncestorsDeclaringInterStatementTemps,The method has 5 parameters. Parameters: diagnostics' match' oldActiveStatement' newActiveStatement' isLeaf
Long Parameter List,Microsoft.CodeAnalysis.CSharp.EditAndContinue,EditClassifier,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,EditClassifier,The method has 7 parameters. Parameters: analyzer' diagnostics' oldNode' newNode' kind' match' span
Long Parameter List,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,CombineOptional,The method has 7 parameters. Parameters: distance0' leftOpt1' rightOpt1' leftOpt2' rightOpt2' weight0' weight1
Long Parameter List,Microsoft.CodeAnalysis.CSharp.EditAndContinue,SyntaxUtilities,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\SyntaxUtilities.cs,FindLeafNodeAndPartner,The method has 5 parameters. Parameters: leftRoot' leftPosition' rightRoot' leftNode' rightNode
Long Parameter List,Microsoft.CodeAnalysis.CSharp.EncapsulateField,CSharpEncapsulateFieldService,C:\repos\mono_roslyn\src\Features\CSharp\EncapsulateField\CSharpEncapsulateFieldService.cs,RewriteFieldNameAndAccessibility,The method has 5 parameters. Parameters: originalFieldName' makePrivate' document' declarationAnnotation' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.ExtractInterface,CSharpExtractInterfaceService,C:\repos\mono_roslyn\src\Features\CSharp\ExtractInterface\CSharpExtractInterfaceService.cs,GetSolutionWithUpdatedOriginalType,The method has 8 parameters. Parameters: solutionWithFormattedInterfaceDocument' extractedInterfaceSymbol' includedMembers' symbolToDeclarationAnnotationMap' documentIds' typeNodeAnnotation' documentIdWithTypeNode' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpMethodExtractor,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.Analyzer.cs,CheckTypeAsync,The method has 5 parameters. Parameters: document' contextNode' location' type' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.Analyzer.cs,CreateFromSymbol,The method has 5 parameters. Parameters: compilation' symbol' type' style' variableDeclared
Long Parameter List,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CallSiteContainerRewriter,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs,CallSiteContainerRewriter,The method has 5 parameters. Parameters: outmostCallSiteContainer' variableToRemoveMap' firstStatementOrFieldToReplace' lastStatementOrFieldToReplace' statementsOrFieldToInsert
Long Parameter List,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpTriviaResult,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.TriviaResult.cs,AnnotationResolver,The method has 5 parameters. Parameters: node' location' annotation' callsite' method
Long Parameter List,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionResult,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionResult.cs,CreateAsync,The method has 9 parameters. Parameters: status' originalSpan' finalSpan' options' selectionInExpression' document' firstToken' lastToken' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionResult,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionResult.cs,CSharpSelectionResult,The method has 8 parameters. Parameters: status' originalSpan' finalSpan' options' selectionInExpression' document' firstTokenAnnotation' lastTokenAnnotation
Long Parameter List,Microsoft.CodeAnalysis.CSharp.ExtractMethod,ExpressionResult,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionResult.ExpressionResult.cs,ExpressionResult,The method has 8 parameters. Parameters: status' originalSpan' finalSpan' options' selectionInExpression' document' firstTokenAnnotation' lastTokenAnnotation
Long Parameter List,Microsoft.CodeAnalysis.CSharp.ExtractMethod,StatementResult,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionResult.StatementResult.cs,StatementResult,The method has 8 parameters. Parameters: status' originalSpan' finalSpan' options' selectionInExpression' document' firstTokenAnnotation' lastTokenAnnotation
Long Parameter List,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateConstructor,CSharpGenerateConstructorService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateConstructor\CSharpGenerateConstructorService.cs,TryInitializeConstructorInitializerGeneration,The method has 6 parameters. Parameters: document' node' cancellationToken' token' arguments' typeToGenerateIn
Long Parameter List,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateConstructor,CSharpGenerateConstructorService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateConstructor\CSharpGenerateConstructorService.cs,TryInitializeSimpleNameGenerationState,The method has 6 parameters. Parameters: document' node' cancellationToken' token' arguments' typeToGenerateIn
Long Parameter List,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateConstructor,CSharpGenerateConstructorService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateConstructor\CSharpGenerateConstructorService.cs,TryInitializeSimpleAttributeNameGenerationState,The method has 7 parameters. Parameters: document' node' cancellationToken' token' arguments' attributeArguments' typeToGenerateIn
Long Parameter List,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateConstructor,CSharpGenerateConstructorService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateConstructor\CSharpGenerateConstructorService.cs,GetDelegatingConstructor,The method has 6 parameters. Parameters: state' document' argumentCount' namedType' candidates' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateDefaultConstructors,CSharpGenerateDefaultConstructorsService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateDefaultConstructors\CSharpGenerateDefaultConstructorsService.cs,TryInitializeState,The method has 5 parameters. Parameters: document' textSpan' cancellationToken' baseTypeNode' classType
Long Parameter List,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateEnumMember,CSharpGenerateEnumMemberService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateEnumMember\CSharpGenerateEnumMemberService.cs,TryInitializeIdentifierNameState,The method has 5 parameters. Parameters: document' identifierName' cancellationToken' identifierToken' simpleNameOrMemberAccessExpression
Long Parameter List,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateParameterizedMember,CSharpGenerateConversionService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateConversionService.cs,TryInitializeImplicitConversionState,The method has 7 parameters. Parameters: document' expression' classInterfaceModuleStructTypes' cancellationToken' identifierToken' methodSymbol' typeToGenerateIn
Long Parameter List,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateParameterizedMember,CSharpGenerateConversionService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateConversionService.cs,TryInitializeExplicitConversionState,The method has 7 parameters. Parameters: document' expression' classInterfaceModuleStructTypes' cancellationToken' identifierToken' methodSymbol' typeToGenerateIn
Long Parameter List,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateParameterizedMember,CSharpGenerateConversionService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateConversionService.cs,TryGetConversionMethodAndTypeToGenerateIn,The method has 6 parameters. Parameters: document' expression' classInterfaceModuleStructTypes' cancellationToken' methodSymbol' typeToGenerateIn
Long Parameter List,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateParameterizedMember,CSharpGenerateConversionService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateConversionService.cs,TryGetExplicitConversionMethodAndTypeToGenerateIn,The method has 6 parameters. Parameters: document' castExpression' classInterfaceModuleStructTypes' cancellationToken' methodSymbol' typeToGenerateIn
Long Parameter List,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateParameterizedMember,CSharpGenerateConversionService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateConversionService.cs,TryGetImplicitConversionMethodAndTypeToGenerateIn,The method has 6 parameters. Parameters: document' expression' classInterfaceModuleStructTypes' cancellationToken' methodSymbol' typeToGenerateIn
Long Parameter List,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateMethod,CSharpGenerateMethodService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateMethodService.cs,TryInitializeExplicitInterfaceState,The method has 6 parameters. Parameters: document' node' cancellationToken' identifierToken' methodSymbol' typeToGenerateIn
Long Parameter List,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateMethod,CSharpGenerateMethodService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateMethodService.cs,TryInitializeSimpleNameState,The method has 7 parameters. Parameters: document' simpleName' cancellationToken' identifierToken' simpleNameOrMemberAccessExpression' invocationExpressionOpt' isInConditionalAccessExpression
Long Parameter List,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateVariable,CSharpGenerateVariableService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateVariable\CSharpGenerateVariableService.cs,TryInitializeExplicitInterfaceState,The method has 6 parameters. Parameters: document' node' cancellationToken' identifierToken' propertySymbol' typeToGenerateIn
Long Parameter List,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateVariable,CSharpGenerateVariableService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateVariable\CSharpGenerateVariableService.cs,TryInitializeIdentifierNameState,The method has 7 parameters. Parameters: document' identifierName' cancellationToken' identifierToken' simpleNameOrMemberAccessExpression' isInExecutableBlock' isConditionalAccessExpression
Long Parameter List,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,GetOrGenerateEnclosingNamespaceSymbol,The method has 5 parameters. Parameters: namedTypeSymbol' containers' selectedDocument' selectedDocumentRoot' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryAddUsingsOrImportToDocument,The method has 6 parameters. Parameters: updatedSolution' modifiedRoot' document' simpleName' includeUsingsOrImports' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryGenerateProperty,The method has 5 parameters. Parameters: propertyName' semanticModel' typeInference' cancellationToken' property
Long Parameter List,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,GetDelegatingConstructor,The method has 5 parameters. Parameters: objectCreation' namedType' model' candidates' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.ImplementAbstractClass,CSharpImplementAbstractClassService,C:\repos\mono_roslyn\src\Features\CSharp\ImplementAbstractClass\CSharpImplementAbstractClassService.cs,TryInitializeState,The method has 6 parameters. Parameters: document' model' node' cancellationToken' classType' abstractClassType
Long Parameter List,Microsoft.CodeAnalysis.CSharp.ImplementInterface,CSharpImplementInterfaceService,C:\repos\mono_roslyn\src\Features\CSharp\ImplementInterface\CSharpImplementInterfaceService.cs,TryInitializeState,The method has 7 parameters. Parameters: document' model' node' cancellationToken' classOrStructDecl' classOrStructType' interfaceTypes
Long Parameter List,Microsoft.CodeAnalysis.CSharp.ImplementInterface,CSharpImplementInterfaceService,C:\repos\mono_roslyn\src\Features\CSharp\ImplementInterface\CSharpImplementInterfaceService.cs,ImplementDisposePattern,The method has 5 parameters. Parameters: document' root' symbol' position' explicitly
Long Parameter List,Microsoft.CodeAnalysis.CSharp.IntroduceVariable,CSharpIntroduceVariableService,C:\repos\mono_roslyn\src\Features\CSharp\IntroduceVariable\CSharpIntroduceVariableService.cs,IntroduceFieldAsync,The method has 5 parameters. Parameters: document' expression' allOccurrences' isConstant' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.IntroduceVariable,CSharpIntroduceVariableService,C:\repos\mono_roslyn\src\Features\CSharp\IntroduceVariable\CSharpIntroduceVariableService.cs,IntroduceLocalAsync,The method has 5 parameters. Parameters: document' expression' allOccurrences' isConstant' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.IntroduceVariable,CSharpIntroduceVariableService,C:\repos\mono_roslyn\src\Features\CSharp\IntroduceVariable\CSharpIntroduceVariableService.cs,IntroduceLocalDeclarationIntoLambda,The method has 7 parameters. Parameters: document' expression' newLocalName' declarationStatement' oldLambda' allOccurrences' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.IntroduceVariable,CSharpIntroduceVariableService,C:\repos\mono_roslyn\src\Features\CSharp\IntroduceVariable\CSharpIntroduceVariableService.cs,GetTypeSyntax,The method has 5 parameters. Parameters: document' expression' isConstant' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.IntroduceVariable,CSharpIntroduceVariableService,C:\repos\mono_roslyn\src\Features\CSharp\IntroduceVariable\CSharpIntroduceVariableService.cs,IntroduceLocalDeclarationIntoBlockAsync,The method has 6 parameters. Parameters: document' expression' newLocalName' declarationStatement' allOccurrences' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.IntroduceVariable,CSharpIntroduceVariableService,C:\repos\mono_roslyn\src\Features\CSharp\IntroduceVariable\CSharpIntroduceVariableService.cs,IntroduceLocalForSingleOccurrenceIntoBlock,The method has 6 parameters. Parameters: document' expression' localName' localDeclaration' allOccurrences' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CSharp.IntroduceVariable,CSharpIntroduceVariableService,C:\repos\mono_roslyn\src\Features\CSharp\IntroduceVariable\CSharpIntroduceVariableService.cs,IntroduceQueryLocalForSingleOccurrence,The method has 6 parameters. Parameters: document' expression' newLocalName' letClause' allOccurrences' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Editor.CSharp.LanguageServices,SymbolDescriptionBuilder,C:\repos\mono_roslyn\src\Features\CSharp\LanguageServices\CSharpSymbolDisplayService.SymbolDescriptionBuilder.cs,SymbolDescriptionBuilder,The method has 6 parameters. Parameters: displayService' semanticModel' position' workspace' anonymousTypeDisplayService' cancellationToken
Long Identifier,Microsoft.CodeAnalysis.CSharp.CodeFixes.ImplementAbstractClass,ImplementAbstractClassCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\ImplementAbstractClass\ImplementAbstractClassCodeFixProvider.cs,GetCodeActionId,The length of the parameter abstractTypeFullyQualifiedName is 30.
Long Identifier,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,DetectSemanticConflicts,The length of the parameter newSemanticModelForInlinedDocument is 34.
Long Identifier,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,DetectSemanticConflicts,The length of the parameter replacementNodesWithChangedSemantics is 36.
Long Identifier,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.MoveDeclarationNearReference,MoveDeclarationNearReferenceCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\MoveDeclarationNearReference\MoveDeclarationNearReferenceCodeRefactoringProvider.cs,MoveDeclarationNearReferenceAsync,The length of the parameter canMergeDeclarationAndAssignment is 32.
Long Identifier,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.MoveDeclarationNearReference,State,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\MoveDeclarationNearReference\MoveDeclarationNearReferenceCodeRefactoringProvider.State.cs,TryInitializeAsync,The length of the parameter firstStatementIndexAffectedInBlock is 34.
Long Identifier,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.MoveDeclarationNearReference,State,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\MoveDeclarationNearReference\MoveDeclarationNearReferenceCodeRefactoringProvider.State.cs,InDeclarationStatementGroup,The length of the parameter firstStatementIndexAffectedInBlock is 34.
Long Identifier,Microsoft.CodeAnalysis.CSharp.Completion,CSharpCompletionOptions,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CSharpCompletionOptions.cs,,The length of the parameter AddNewLineOnEnterAfterFullyTypedWord is 36.
Long Identifier,Microsoft.CodeAnalysis.CSharp.Diagnostics.RemoveUnnecessaryImports,CSharpRemoveUnnecessaryImportsDiagnosticAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\Diagnostics\Analyzers\CSharpRemoveUnnecessaryImportsDiagnosticAnalyzer.cs,GetFixableDiagnosticSpans,The length of the parameter nodesContainingUnnecessaryUsings is 32.
Long Identifier,Microsoft.CodeAnalysis.CSharp.Diagnostics.RemoveUnnecessaryImports,CSharpRemoveUnnecessaryImportsDiagnosticAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\Diagnostics\Analyzers\CSharpRemoveUnnecessaryImportsDiagnosticAnalyzer.cs,GetFixableDiagnosticSpans,The length of the parameter nodeContainingUnnecessaryUsings is 31.
Long Identifier,Microsoft.CodeAnalysis.CSharp.ExtractInterface,CSharpExtractInterfaceService,C:\repos\mono_roslyn\src\Features\CSharp\ExtractInterface\CSharpExtractInterfaceService.cs,GetSolutionWithUpdatedOriginalType,The length of the parameter solutionWithFormattedInterfaceDocument is 38.
Long Identifier,Microsoft.CodeAnalysis.CSharp.ExtractInterface,CSharpExtractInterfaceService,C:\repos\mono_roslyn\src\Features\CSharp\ExtractInterface\CSharpExtractInterfaceService.cs,GetSolutionWithUpdatedOriginalType,The length of the parameter symbolToDeclarationAnnotationMap is 32.
Long Identifier,Microsoft.CodeAnalysis.CSharp.ExtractInterface,CSharpExtractInterfaceService,C:\repos\mono_roslyn\src\Features\CSharp\ExtractInterface\CSharpExtractInterfaceService.cs,GetSolutionWithUpdatedOriginalType,The length of the parameter implementedInterfaceTypeSyntax is 30.
Long Identifier,Microsoft.CodeAnalysis.CSharp.ExtractInterface,CSharpExtractInterfaceService,C:\repos\mono_roslyn\src\Features\CSharp\ExtractInterface\CSharpExtractInterfaceService.cs,GetSolutionWithUpdatedOriginalType,The length of the parameter solutionWithOriginalTypeUpdated is 31.
Long Identifier,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CallSiteContainerRewriter,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs,CallSiteContainerRewriter,The length of the parameter firstStatementOrFieldToReplace is 30.
Long Identifier,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CallSiteContainerRewriter,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs,,The length of the parameter _firstStatementOrFieldToReplace is 31.
Long Identifier,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CallSiteContainerRewriter,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs,,The length of the parameter _lastStatementOrFieldToReplace is 30.
Long Identifier,Microsoft.CodeAnalysis.CSharp.ExtractMethod,ExpressionCodeGenerator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.ExpressionCodeGenerator.cs,GetMethodNameBasedOnExpression,The length of the parameter unqualifiedNameIdentifierValueText is 34.
Long Identifier,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateEnumMember,CSharpGenerateEnumMemberService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateEnumMember\CSharpGenerateEnumMemberService.cs,TryInitializeIdentifierNameState,The length of the parameter simpleNameOrMemberAccessExpression is 34.
Long Identifier,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateParameterizedMember,CSharpGenerateConversionService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateConversionService.cs,TryInitializeImplicitConversionState,The length of the parameter classInterfaceModuleStructTypes is 31.
Long Identifier,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateParameterizedMember,CSharpGenerateConversionService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateConversionService.cs,TryInitializeExplicitConversionState,The length of the parameter classInterfaceModuleStructTypes is 31.
Long Identifier,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateParameterizedMember,CSharpGenerateConversionService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateConversionService.cs,TryGetConversionMethodAndTypeToGenerateIn,The length of the parameter classInterfaceModuleStructTypes is 31.
Long Identifier,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateParameterizedMember,CSharpGenerateConversionService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateConversionService.cs,TryGetExplicitConversionMethodAndTypeToGenerateIn,The length of the parameter classInterfaceModuleStructTypes is 31.
Long Identifier,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateParameterizedMember,CSharpGenerateConversionService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateConversionService.cs,TryGetImplicitConversionMethodAndTypeToGenerateIn,The length of the parameter classInterfaceModuleStructTypes is 31.
Long Identifier,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateMethod,CSharpGenerateMethodService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateMethodService.cs,TryInitializeSimpleNameState,The length of the parameter simpleNameOrMemberAccessExpression is 34.
Long Identifier,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateMethod,CSharpGenerateMethodService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateMethodService.cs,TryInitializeSimpleNameState,The length of the parameter isInConditionalAccessExpression is 31.
Long Identifier,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateVariable,CSharpGenerateVariableService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateVariable\CSharpGenerateVariableService.cs,TryInitializeIdentifierNameState,The length of the parameter simpleNameOrMemberAccessExpression is 34.
Long Identifier,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryInitializeState,The length of the parameter generateTypeServiceStateOptions is 31.
Long Identifier,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryInitializeState,The length of the parameter isExpressionOrStatementContext is 30.
Long Identifier,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryInitializeState,The length of the parameter outerMostMemberAccessExpression is 31.
Long Identifier,Microsoft.CodeAnalysis.Editor.CSharp.LanguageServices,SymbolDescriptionBuilder,C:\repos\mono_roslyn\src\Features\CSharp\LanguageServices\CSharpSymbolDisplayService.SymbolDescriptionBuilder.cs,,The length of the parameter s_minimallyQualifiedFormatWithConstants is 39.
Long Identifier,Microsoft.CodeAnalysis.CSharp.RemoveUnnecessaryImports,Rewriter,C:\repos\mono_roslyn\src\Features\CSharp\RemoveUnnecessaryImports\CSharpRemoveUnnecessaryImportsService.Rewriter.cs,,The length of the parameter _unnecessaryUsingsDoNotAccessDirectly is 37.
Long Statement,Microsoft.CodeAnalysis.CSharp,CSharpDeclarationComputer,C:\repos\mono_roslyn\src\Compilers\CSharp\CSharpAnalyzerDriver\CSharpDeclarationComputer.cs,GetDeclarationsInNode,The length of the statement  "            ComputeDeclarations(model' node' (n' level) => InvalidLevel(level)' getSymbol' builder' levelsToCompute' cancellationToken); " is 124.
Long Statement,Microsoft.CodeAnalysis.CSharp,CSharpDeclarationComputer,C:\repos\mono_roslyn\src\Compilers\CSharp\CSharpAnalyzerDriver\CSharpDeclarationComputer.cs,ComputeDeclarations,The length of the statement  "                        foreach (var decl in ns.Members) ComputeDeclarations(model' decl' shouldSkip' getSymbol' builder' newLevel' cancellationToken); " is 127.
Long Statement,Microsoft.CodeAnalysis.CSharp,CSharpDeclarationComputer,C:\repos\mono_roslyn\src\Compilers\CSharp\CSharpAnalyzerDriver\CSharpDeclarationComputer.cs,ComputeDeclarations,The length of the statement  "                        foreach (var decl in t.Members) ComputeDeclarations(model' decl' shouldSkip' getSymbol' builder' newLevel' cancellationToken); " is 126.
Long Statement,Microsoft.CodeAnalysis.CSharp,CSharpDeclarationComputer,C:\repos\mono_roslyn\src\Compilers\CSharp\CSharpAnalyzerDriver\CSharpDeclarationComputer.cs,ComputeDeclarations,The length of the statement  "                        foreach (var decl in t.Members) ComputeDeclarations(model' decl' shouldSkip' getSymbol' builder' newLevel' cancellationToken); " is 126.
Long Statement,Microsoft.CodeAnalysis.CSharp,CSharpDeclarationComputer,C:\repos\mono_roslyn\src\Compilers\CSharp\CSharpAnalyzerDriver\CSharpDeclarationComputer.cs,ComputeDeclarations,The length of the statement  "                        foreach (var decl in t.AccessorList.Accessors) ComputeDeclarations(model' decl' shouldSkip' getSymbol' builder' newLevel' cancellationToken); " is 141.
Long Statement,Microsoft.CodeAnalysis.CSharp,CSharpDeclarationComputer,C:\repos\mono_roslyn\src\Compilers\CSharp\CSharpAnalyzerDriver\CSharpDeclarationComputer.cs,ComputeDeclarations,The length of the statement  "                            foreach (var decl in t.AccessorList.Accessors) ComputeDeclarations(model' decl' shouldSkip' getSymbol' builder' newLevel' cancellationToken); " is 141.
Long Statement,Microsoft.CodeAnalysis.CSharp,CSharpDeclarationComputer,C:\repos\mono_roslyn\src\Compilers\CSharp\CSharpAnalyzerDriver\CSharpDeclarationComputer.cs,ComputeDeclarations,The length of the statement  "                        var codeBlocks = t.ParameterList != null ? t.ParameterList.Parameters.Select(p => p.Default) : SpecializedCollections.EmptyEnumerable<SyntaxNode>(); " is 148.
Long Statement,Microsoft.CodeAnalysis.CSharp,CSharpDeclarationComputer,C:\repos\mono_roslyn\src\Compilers\CSharp\CSharpAnalyzerDriver\CSharpDeclarationComputer.cs,ComputeDeclarations,The length of the statement  "                        var codeBlocks = t.ParameterList != null ? t.ParameterList.Parameters.Select(p => p.Default) : SpecializedCollections.EmptyEnumerable<SyntaxNode>(); " is 148.
Long Statement,Microsoft.CodeAnalysis.CSharp,CSharpDeclarationComputer,C:\repos\mono_roslyn\src\Compilers\CSharp\CSharpAnalyzerDriver\CSharpDeclarationComputer.cs,ComputeDeclarations,The length of the statement  "                        foreach (var decl in t.Members) ComputeDeclarations(model' decl' shouldSkip' getSymbol' builder' newLevel' cancellationToken); " is 126.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,ChangeSignatureFormattingRule,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\ChangeSignatureFormattingRule.cs,AddChangeSignatureIndentOperation,The length of the statement  "                list.Add(FormattingOperations.CreateRelativeIndentBlockOperation(baseToken' startToken' endToken' span' indentationDelta: 1' option: IndentBlockOption.RelativeToFirstTokenOnBaseTokenLine)); " is 189.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,GetInvocationSymbol,The length of the statement  "            var ancestorDeclarationKinds = restrictToDeclarations ? _invokableAncestorKinds.Add(SyntaxKind.Block) : _invokableAncestorKinds; " is 128.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,GetInvocationSymbol,The length of the statement  "            SyntaxNode matchingNode = token.Parent.AncestorsAndSelf().FirstOrDefault(n => ancestorDeclarationKinds.Contains(n.Kind())); " is 123.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,GetInvocationSymbol,The length of the statement  "                    if (typeSymbol != null && typeSymbol.IsKind(SymbolKind.NamedType) && (typeSymbol as ITypeSymbol).TypeKind == TypeKind.Delegate) " is 127.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,FindNodeToUpdate,The length of the statement  "            // TODO: file bug about this: var invocation = csnode.Ancestors().FirstOrDefault(a => a.Kind == SyntaxKind.InvocationExpression); " is 129.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,ChangeSignature,The length of the statement  "                return method.WithParameterList(method.ParameterList.WithParameters(updatedParameters).WithAdditionalAnnotations(changeSignatureFormattingAnnotation)); " is 151.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,ChangeSignature,The length of the statement  "                return constructor.WithParameterList(constructor.ParameterList.WithParameters(updatedParameters).WithAdditionalAnnotations(changeSignatureFormattingAnnotation)); " is 161.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,ChangeSignature,The length of the statement  "                return indexer.WithParameterList(indexer.ParameterList.WithParameters(updatedParameters).WithAdditionalAnnotations(changeSignatureFormattingAnnotation)); " is 153.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,ChangeSignature,The length of the statement  "                return delegateDeclaration.WithParameterList(delegateDeclaration.ParameterList.WithParameters(updatedParameters).WithAdditionalAnnotations(changeSignatureFormattingAnnotation)); " is 177.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,ChangeSignature,The length of the statement  "                return anonymousMethod.WithParameterList(anonymousMethod.ParameterList.WithParameters(updatedParameters).WithAdditionalAnnotations(changeSignatureFormattingAnnotation)); " is 169.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,ChangeSignature,The length of the statement  "                    return SyntaxFactory.ParenthesizedLambdaExpression(lambda.AsyncKeyword' emptyParameterList' lambda.ArrowToken' lambda.Body); " is 124.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,ChangeSignature,The length of the statement  "                var newArguments = PermuteArgumentList(document' declarationSymbol' invocation.ArgumentList.Arguments' signaturePermutation' isReducedExtensionMethod); " is 151.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,ChangeSignature,The length of the statement  "                return invocation.WithArgumentList(invocation.ArgumentList.WithArguments(newArguments).WithAdditionalAnnotations(changeSignatureFormattingAnnotation)); " is 151.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,ChangeSignature,The length of the statement  "                var newArguments = PermuteArgumentList(document' declarationSymbol' objCreation.ArgumentList.Arguments' signaturePermutation); " is 126.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,ChangeSignature,The length of the statement  "                return objCreation.WithArgumentList(objCreation.ArgumentList.WithArguments(newArguments).WithAdditionalAnnotations(changeSignatureFormattingAnnotation)); " is 153.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,ChangeSignature,The length of the statement  "                var newArguments = PermuteArgumentList(document' declarationSymbol' objCreation.ArgumentList.Arguments' signaturePermutation); " is 126.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,ChangeSignature,The length of the statement  "                return objCreation.WithArgumentList(objCreation.ArgumentList.WithArguments(newArguments).WithAdditionalAnnotations(changeSignatureFormattingAnnotation)); " is 153.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,ChangeSignature,The length of the statement  "                var newArguments = PermuteArgumentList(document' declarationSymbol' elementAccess.ArgumentList.Arguments' signaturePermutation); " is 128.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,ChangeSignature,The length of the statement  "                return elementAccess.WithArgumentList(elementAccess.ArgumentList.WithArguments(newArguments).WithAdditionalAnnotations(changeSignatureFormattingAnnotation)); " is 157.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,ChangeSignature,The length of the statement  "                var newArguments = PermuteAttributeArgumentList(document' declarationSymbol' attribute.ArgumentList.Arguments' signaturePermutation); " is 133.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,ChangeSignature,The length of the statement  "                return attribute.WithArgumentList(attribute.ArgumentList.WithArguments(newArguments).WithAdditionalAnnotations(changeSignatureFormattingAnnotation)); " is 149.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,PermuteAttributeArgumentList,The length of the statement  "            var newArguments = PermuteArguments(document' declarationSymbol' arguments.Select(a => UnifiedArgumentSyntax.Create(a)).ToList()' updatedSignature); " is 148.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,PermuteAttributeArgumentList,The length of the statement  "            return SyntaxFactory.SeparatedList(newArguments.Select(a => (AttributeArgumentSyntax)(UnifiedArgumentSyntax)a)' GetSeparators(arguments' numSeparatorsToSkip)); " is 159.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,PermuteArgumentList,The length of the statement  "            var newArguments = PermuteArguments(document' declarationSymbol' arguments.Select(a => UnifiedArgumentSyntax.Create(a)).ToList()' updatedSignature' isReducedExtensionMethod); " is 174.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,PermuteArgumentList,The length of the statement  "            return SyntaxFactory.SeparatedList(newArguments.Select(a => (ArgumentSyntax)(UnifiedArgumentSyntax)a)' GetSeparators(arguments' numSeparatorsToSkip)); " is 150.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,VerifyAndPermuteParamNodes,The length of the statement  "                var nameAttribute = paramNode.StartTag.Attributes.FirstOrDefault(a => a.Name.ToString().Equals("name"' StringComparison.OrdinalIgnoreCase)); " is 140.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,VerifyAndPermuteParamNodes,The length of the statement  "                var identifier = nameAttribute.DescendantNodes(descendIntoTrivia: true).OfType<IdentifierNameSyntax>().FirstOrDefault(); " is 120.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,GetPermutedTrivia,The length of the statement  "                        updatedNodeList.Add(permutedParamNodes[index].WithLeadingTrivia(content.GetLeadingTrivia()).WithTrailingTrivia(content.GetTrailingTrivia())); " is 141.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,GetPermutedTrivia,The length of the statement  "                var newDocComments = SyntaxFactory.DocumentationCommentTrivia(structuredTrivia.Kind()' SyntaxFactory.List(updatedNodeList.AsEnumerable())); " is 139.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,GetPermutedTrivia,The length of the statement  "                newDocComments = newDocComments.WithLeadingTrivia(structuredTrivia.GetLeadingTrivia()).WithTrailingTrivia(structuredTrivia.GetTrailingTrivia()); " is 144.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,DetermineCascadedSymbolsFromDelegateInvoke,The length of the statement  "                                convertedType = SymbolFinder.FindSourceDefinitionAsync(convertedType' document.Project.Solution' cancellationToken).WaitAndGetResult(cancellationToken) ?? convertedType; " is 169.
Long Statement,Microsoft.CodeAnalysis.CSharp.ChangeSignature,UnifiedArgumentSyntax,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\UnifiedArgumentSyntax.cs,WithName,The length of the statement  "                    : Create(((AttributeArgumentSyntax)_argument).WithNameColon(SyntaxFactory.NameColon(SyntaxFactory.IdentifierName(name)))); " is 122.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.AddImport,CSharpAddImportCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\AddImport\CSharpAddImportCodeFixProvider.cs,AddImportAsync,The length of the statement  "                        .DescendantNodes().OfType<UsingDirectiveSyntax>().Where(uds => uds.IsEquivalentTo(fullyQualifiedUsingDirective' topLevel: true)).Single(); " is 138.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.AddImport,CSharpAddImportCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\AddImport\CSharpAddImportCodeFixProvider.cs,AddImportAsync,The length of the statement  "                    var speculationAnalyzer = new SpeculationAnalyzer(newUsing.Name' simpleUsingDirective.Name' newSemanticModel' cancellationToken); " is 129.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.AddImport,CSharpAddImportCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\AddImport\CSharpAddImportCodeFixProvider.cs,UsingsAreContainedInNamespace,The length of the statement  "            return contextNode.GetAncestor<NamespaceDeclarationSyntax>()?.DescendantNodes().OfType<UsingDirectiveSyntax>().FirstOrDefault() != null; " is 136.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.AddImport,CSharpAddImportCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\AddImport\CSharpAddImportCodeFixProvider.cs,TryGetExternAliasString,The length of the statement  "            aliases = metadataReference.Properties.Aliases.Where(a => a != MetadataReferenceProperties.GlobalAlias).ToImmutableArray(); " is 123.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.AddImport,CSharpAddImportCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\AddImport\CSharpAddImportCodeFixProvider.cs,IsViableExtensionMethod,The length of the statement  "            var leftExpression = syntaxFacts.GetExpressionOfMemberAccessExpression(expression) ?? syntaxFacts.GetExpressionOfConditionalMemberAccessExpression(expression); " is 159.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.AddMissingReference,AddMissingReferenceCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\AddMissingReference\AddMissingReferenceCodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "                        await AddMissingReferenceCodeAction.CreateAsync(context.Document.Project' identity' context.CancellationToken).ConfigureAwait(false)' " is 133.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.Async,CSharpConvertToAsyncMethodCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Async\CSharpConvertToAsyncMethodCodeFixProvider.cs,GetMethodDeclaration,The length of the statement  "            var methodDeclaration = (await methodReference.GetSyntaxAsync(cancellationToken).ConfigureAwait(false)) as MethodDeclarationSyntax; " is 131.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.GenerateConstructor,GenerateConstructorCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\GenerateConstructor\GenerateConstructorCodeFixProvider.cs,IsCandidate,The length of the statement  "            return node is SimpleNameSyntax || node is ObjectCreationExpressionSyntax || node is ConstructorInitializerSyntax || node is AttributeSyntax; " is 141.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.ImplementAbstractClass,ImplementAbstractClassCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\ImplementAbstractClass\ImplementAbstractClassCodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "                    var id = GetCodeActionId(abstractType.ContainingAssembly.Name' abstractType.ToDisplayString(SymbolDisplayFormat.FullyQualifiedFormat)); " is 135.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.Iterator,CSharpAddYieldCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Iterator\CSharpAddYieldCodeFixProvider.cs,CanConvertTypes,The length of the statement  "            // If we have a mismatch in the number of type arguments we can immediately return as there is no way the types are convertible " is 127.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.RemoveUnnecessaryCast,RemoveUnnecessaryCastCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\RemoveUnnecessaryCast\RemoveUnnecessaryCastCodeFixProvider.RemoveUnnecessaryCastFixAllProvider.cs,RemoveUnnecessaryCastAsync,The length of the statement  "            // Ensure that we simplify any parenting parenthesized expressions not just on the syntax tree level but also on Token based " is 124.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.RemoveUnnecessaryCast,RemoveUnnecessaryCastCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\RemoveUnnecessaryCast\RemoveUnnecessaryCastCodeFixProvider.RemoveUnnecessaryCastFixAllProvider.cs,RemoveUnnecessaryCastAsync,The length of the statement  "            while (oldNode.Parent.IsKind(SyntaxKind.ParenthesizedExpression) || oldNode.GetFirstToken().GetPreviousToken().Parent.IsKind(SyntaxKind.ParenthesizedExpression)) " is 161.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.SimplifyTypeNames,SimplifyTypeNamesCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\SimplifyTypeNames\SimplifyTypeNamesCodeFixProvider.SimplifyTypeNamesFixAllProvider.cs,GetNodeToSimplify,The length of the statement  "                if (n.Span.IntersectsWith(span) && CanSimplifyTypeNameExpression(model' n' optionSet' span' out diagnosticId' cancellationToken)) " is 129.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.SimplifyTypeNames,SimplifyTypeNamesCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\SimplifyTypeNames\SimplifyTypeNamesCodeFixProvider.SimplifyTypeNamesFixAllProvider.cs,CanSimplifyTypeNameExpression,The length of the statement  "                !CSharpSimplifyTypeNamesDiagnosticAnalyzer.CanSimplifyTypeNameExpression(model' node' optionSet' out issueSpan' out diagnosticId' cancellationToken)) " is 149.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.SimplifyTypeNames,SimplifyTypeNamesCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\SimplifyTypeNames\SimplifyTypeNamesCodeFixProvider.SimplifyTypeNamesFixAllProvider.cs,SimplifyTypeNameAsync,The length of the statement  "            var annotatedexpressionSyntax = expressionSyntax.WithAdditionalAnnotations(Simplifier.Annotation' Formatter.Annotation); " is 120.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.SimplifyTypeNames,SimplifyTypeNamesCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\SimplifyTypeNames\SimplifyTypeNamesCodeFixProvider.SimplifyTypeNamesFixAllProvider.cs,SimplifyTypeNameAsync,The length of the statement  "            if (annotatedexpressionSyntax.Kind() == SyntaxKind.IsExpression || annotatedexpressionSyntax.Kind() == SyntaxKind.AsExpression) " is 127.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.SimplifyTypeNames,SimplifyTypeNamesCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\SimplifyTypeNames\SimplifyTypeNamesCodeFixProvider.SimplifyTypeNamesFixAllProvider.cs,SimplifyTypeNameAsync,The length of the statement  "                annotatedexpressionSyntax = annotatedexpressionSyntax.ReplaceNode(right' right.WithAdditionalAnnotations(Simplifier.Annotation)); " is 129.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.SimplifyTypeNames,SimplifyTypeNamesFixAllProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\SimplifyTypeNames\SimplifyTypeNamesCodeFixProvider.SimplifyTypeNamesFixAllProvider.cs,GetNodeToSimplify,The length of the statement  "                var node = SimplifyTypeNamesCodeFixProvider.GetNodeToSimplify(root' model' diagnostic.Location.SourceSpan' workspace.Options' out diagnosticId' cancellationToken); " is 163.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.Suppression,CSharpSuppressionCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Suppression\CSharpSuppressionCodeFixProvider.cs,CreatePragmaDirectiveTrivia,The length of the statement  "                var titleComment = SyntaxFactory.Comment(string.Format(" // {0}"' title)).WithAdditionalAnnotations(Formatter.Annotation); " is 122.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.Suppression,CSharpSuppressionCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Suppression\CSharpSuppressionCodeFixProvider.cs,AddGlobalSuppressMessageAttribute,The length of the statement  "            var attributeList = CreateAttributeList(targetSymbol' diagnostic' isAssemblyAttribute: true' leadingTrivia: leadingTriviaForAttributeList' needsLeadingEndOfLine: false); " is 169.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.Suppression,CSharpSuppressionCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Suppression\CSharpSuppressionCodeFixProvider.cs,AddLocalSuppressMessageAttribute,The length of the statement  "            var attributeList = CreateAttributeList(targetSymbol' diagnostic' isAssemblyAttribute: false' leadingTrivia: leadingTriviaForAttributeList' needsLeadingEndOfLine: needsLeadingEndOfLine); " is 186.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.Suppression,CSharpSuppressionCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Suppression\CSharpSuppressionCodeFixProvider.cs,CreateAttributeArguments,The length of the statement  "            // SuppressMessage("Rule Category"' "Rule Id"' Justification = "Justification"' MessageId = "MessageId"' Scope = "Scope"' Target = "Target") " is 140.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.Suppression,CSharpSuppressionCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Suppression\CSharpSuppressionCodeFixProvider.cs,CreateAttributeArguments,The length of the statement  "            var category = SyntaxFactory.LiteralExpression(SyntaxKind.StringLiteralExpression' SyntaxFactory.Literal(diagnostic.Descriptor.Category)); " is 138.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.Suppression,CSharpSuppressionCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Suppression\CSharpSuppressionCodeFixProvider.cs,CreateAttributeArguments,The length of the statement  "            var justificationExpr = SyntaxFactory.LiteralExpression(SyntaxKind.StringLiteralExpression' SyntaxFactory.Literal(FeaturesResources.SuppressionPendingJustification)); " is 166.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.Suppression,CSharpSuppressionCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Suppression\CSharpSuppressionCodeFixProvider.cs,CreateAttributeArguments,The length of the statement  "            var justificationArgument = SyntaxFactory.AttributeArgument(SyntaxFactory.NameEquals("Justification")' nameColon: null' expression: justificationExpr); " is 151.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.Suppression,CSharpSuppressionCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Suppression\CSharpSuppressionCodeFixProvider.cs,CreateAttributeArguments,The length of the statement  "            var attributeArgumentList = SyntaxFactory.AttributeArgumentList().AddArguments(categoryArgument' ruleIdArgument' justificationArgument); " is 136.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.Suppression,CSharpSuppressionCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Suppression\CSharpSuppressionCodeFixProvider.cs,CreateAttributeArguments,The length of the statement  "                    var scopeExpr = SyntaxFactory.LiteralExpression(SyntaxKind.StringLiteralExpression' SyntaxFactory.Literal(scopeString)); " is 120.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.Suppression,CSharpSuppressionCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Suppression\CSharpSuppressionCodeFixProvider.cs,CreateAttributeArguments,The length of the statement  "                    var scopeArgument = SyntaxFactory.AttributeArgument(SyntaxFactory.NameEquals("Scope")' nameColon: null' expression: scopeExpr); " is 127.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.Suppression,CSharpSuppressionCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Suppression\CSharpSuppressionCodeFixProvider.cs,CreateAttributeArguments,The length of the statement  "                    var targetExpr = SyntaxFactory.LiteralExpression(SyntaxKind.StringLiteralExpression' SyntaxFactory.Literal(targetString)); " is 122.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeFixes.Suppression,CSharpSuppressionCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Suppression\CSharpSuppressionCodeFixProvider.cs,CreateAttributeArguments,The length of the statement  "                    var targetArgument = SyntaxFactory.AttributeArgument(SyntaxFactory.NameEquals("Target")' nameColon: null' expression: targetExpr); " is 130.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.GenerateDefaultConstructors,GenerateDefaultConstructorsCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\GenerateDefaultConstructors\GenerateDefaultConstructorsCodeRefactoringProvider.cs,ComputeRefactoringsAsync,The length of the statement  "            var result = await service.GenerateDefaultConstructorsAsync(document' textSpan' cancellationToken).ConfigureAwait(false); " is 121.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.GenerateFromMembers.GenerateEqualsAndGetHashCode,GenerateEqualsAndGetHashCodeCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\GenerateFromMembers\GenerateEqualsAndGetHashCode\GenerateEqualsAndGetHashCodeCodeRefactoringProvider.cs,ComputeRefactoringsAsync,The length of the statement  "            var result = await service.GenerateEqualsAndGetHashCodeAsync(document' textSpan' cancellationToken).ConfigureAwait(false); " is 122.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,GetReferencesAsync,The length of the statement  "                var findReferencesResult = await SymbolFinder.FindReferencesAsync(local' document.Project.Solution' cancellationToken).ConfigureAwait(false); " is 141.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,InlineTemporaryAsync,The length of the statement  "            var updatedDocument = await document.ReplaceNodeAsync(declarator' declarator.WithAdditionalAnnotations(DefinitionAnnotation)' cancellationToken).ConfigureAwait(false); " is 167.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,InlineTemporaryAsync,The length of the statement  "            var expressionToInline = await CreateExpressionToInlineAsync(variableDeclarator' updatedDocument' cancellationToken).ConfigureAwait(false); " is 139.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,InlineTemporaryAsync,The length of the statement  "            var symbolRefs = await SymbolFinder.FindReferencesAsync(local' updatedDocument.Project.Solution' cancellationToken).ConfigureAwait(false); " is 138.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,InlineTemporaryAsync,The length of the statement  "            nonConflictingIdentifierNodes = await FindReferenceAnnotatedNodesAsync(updatedDocument' cancellationToken).ConfigureAwait(false); " is 129.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,InlineTemporaryAsync,The length of the statement  "            var originalInitializerSymbolInfo = semanticModel.GetSymbolInfo(variableDeclarator.Initializer.Value' cancellationToken); " is 121.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,InlineTemporaryAsync,The length of the statement  "            updatedDocument = await updatedDocument.ReplaceNodesAsync(topmostParentingExpressions' (o' n) => Simplifier.Expand(n' semanticModel' workspace' cancellationToken: cancellationToken)' cancellationToken).ConfigureAwait(false); " is 224.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,InlineTemporaryAsync,The length of the statement  "            var newScope = ReferenceRewriter.Visit(semanticModel' scope' variableDeclarator' expressionToInline' cancellationToken); " is 120.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,InlineTemporaryAsync,The length of the statement  "                    updatedDocument = await updatedDocument.ReplaceNodeAsync(newScope' RemoveDeclaratorFromScope(variableDeclarator' newScope)' cancellationToken).ConfigureAwait(false); " is 165.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,FindDeclaratorAsync,The length of the statement  "            return await FindNodeWithAnnotationAsync<VariableDeclaratorSyntax>(document' DefinitionAnnotation' cancellationToken).ConfigureAwait(false); " is 140.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,FindInitializerAsync,The length of the statement  "            return await FindNodeWithAnnotationAsync<ExpressionSyntax>(document' InitializerAnnotation' cancellationToken).ConfigureAwait(false); " is 133.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,CreateExpressionToInlineAsync,The length of the statement  "            updatedDocument = await updatedDocument.ReplaceNodeAsync(variableDeclarator.Initializer.Value' newExpression' cancellationToken).ConfigureAwait(false); " is 151.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,CreateExpressionToInlineAsync,The length of the statement  "            var explicitCastExpression = newExpression.CastIfPossible(localSymbol.Type' newVariableDeclarator.SpanStart' semanticModel' out wasCastAdded); " is 142.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,CreateExpressionToInlineAsync,The length of the statement  "                updatedDocument = await updatedDocument.ReplaceNodeAsync(newExpression' explicitCastExpression' cancellationToken).ConfigureAwait(false); " is 137.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,CreateExpressionToInlineAsync,The length of the statement  "            newExpression = await Simplifier.ExpandAsync(newVariableDeclarator.Initializer.Value' updatedDocument' cancellationToken: cancellationToken).ConfigureAwait(false); " is 163.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,DetectSemanticConflicts,The length of the statement  "            // The symbol info associated with any of the inlined expressions does not match the symbol info for original initializer expression prior to inline. " is 149.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,DetectSemanticConflicts,The length of the statement  "            var syntaxRootBeforeInline = await semanticModelBeforeInline.SyntaxTree.GetRootAsync(cancellationToken).ConfigureAwait(false); " is 126.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,DetectSemanticConflicts,The length of the statement  "                var innerInitializerInInlineNode = (ExpressionSyntax)inlinedNode.GetAnnotatedNodesAndTokens(InitializerAnnotation).First().AsNode(); " is 132.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,DetectSemanticConflicts,The length of the statement  "                var newInializerSymbolInfo = newSemanticModelForInlinedDocument.GetSymbolInfo(innerInitializerInInlineNode' cancellationToken); " is 127.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,DetectSemanticConflicts,The length of the statement  "                // Verification: The symbol info associated with any of the inlined expressions does not match the symbol info for original initializer expression prior to inline. " is 163.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,DetectSemanticConflicts,The length of the statement  "                if (!SpeculationAnalyzer.SymbolInfosAreCompatible(originalInitializerSymbolInfo' newInializerSymbolInfo' performEquivalenceCheck: true)) " is 136.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,DetectSemanticConflicts,The length of the statement  "                    if (!SpeculationAnalyzer.SymbolInfosAreCompatible(originalInitializerSymbolInfo' newInializerSymbolInfo' performEquivalenceCheck: true)) " is 136.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,DetectSemanticConflicts,The length of the statement  "            return await inlinedDocument.ReplaceNodesAsync(replacementNodesWithChangedSemantics.Keys' conflictAnnotationAdder' cancellationToken).ConfigureAwait(false); " is 156.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,ReferenceRewriter,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.ReferenceRewriter.cs,VisitAnonymousObjectMemberDeclarator,The length of the statement  "                if (nameEquals != null || identifier == null || !IsReference(identifier) || HasConflict(identifier' _variableDeclarator)) " is 121.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.LambdaSimplifier,Rewriter,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\LambdaSimplifier\LambdaSimplifierCodeRefactoringProvider.Rewriter.cs,SimplifyInvocation,The length of the statement  "                        expression = expression.ReplaceNode(memberAccess.Expression' memberAccess.Expression.WithAdditionalAnnotations(annotation)); " is 124.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.MoveDeclarationNearReference,MoveDeclarationNearReferenceCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\MoveDeclarationNearReference\MoveDeclarationNearReferenceCodeRefactoringProvider.cs,MoveDeclarationNearReferenceAsync,The length of the statement  "            var canMergeDeclarationAndAssignment = await CanMergeDeclarationAndAssignmentAsync(document' state' cancellationToken).ConfigureAwait(false); " is 141.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.MoveDeclarationNearReference,MoveDeclarationNearReferenceCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\MoveDeclarationNearReference\MoveDeclarationNearReferenceCodeRefactoringProvider.cs,MoveDeclarationNearReferenceAsync,The length of the statement  "                var explicitDeclarationStatement = await Simplifier.ExpandAsync(state.DeclarationStatement' document' cancellationToken: cancellationToken).ConfigureAwait(false); " is 162.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.MoveDeclarationNearReference,MoveDeclarationNearReferenceCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\MoveDeclarationNearReference\MoveDeclarationNearReferenceCodeRefactoringProvider.cs,MoveDeclarationNearReferenceAsync,The length of the statement  "                innermostStatements.Insert(innermostAffectedIndex' declarationStatement.WithAdditionalAnnotations(Formatter.Annotation)); " is 121.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.MoveDeclarationNearReference,MoveDeclarationNearReferenceCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\MoveDeclarationNearReference\MoveDeclarationNearReferenceCodeRefactoringProvider.cs,CreateMergedDeclarationStatement,The length of the statement  "                    SyntaxFactory.SingletonSeparatedList(SyntaxFactory.VariableDeclarator(state.VariableDeclarator.Identifier).WithInitializer(SyntaxFactory.EqualsValueClause(assignExpression.Right))))); " is 183.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.MoveDeclarationNearReference,State,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\MoveDeclarationNearReference\MoveDeclarationNearReferenceCodeRefactoringProvider.State.cs,TryInitializeAsync,The length of the statement  "                var findReferencesResult = await SymbolFinder.FindReferencesAsync(this.LocalSymbol' document.Project.Solution' cancellationToken).ConfigureAwait(false); " is 152.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.MoveDeclarationNearReference,State,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\MoveDeclarationNearReference\MoveDeclarationNearReferenceCodeRefactoringProvider.State.cs,TryInitializeAsync,The length of the statement  "                var allAffectedStatements = new HashSet<StatementSyntax>(referencingStatements.SelectMany(expr => expr.GetAncestorsOrThis<StatementSyntax>())); " is 143.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.MoveDeclarationNearReference,State,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\MoveDeclarationNearReference\MoveDeclarationNearReferenceCodeRefactoringProvider.State.cs,TryInitializeAsync,The length of the statement  "                this.FirstStatementAffectedInInnermostBlock = this.InnermostBlock.Statements.FirstOrDefault(allAffectedStatements.Contains); " is 124.
Long Statement,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.MoveDeclarationNearReference,State,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\MoveDeclarationNearReference\MoveDeclarationNearReferenceCodeRefactoringProvider.State.cs,TryInitializeAsync,The length of the statement  "                var firstStatementIndexAffectedInBlock = this.InnermostBlock.Statements.IndexOf(this.FirstStatementAffectedInInnermostBlock); " is 125.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,AttributeNamedParameterCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\AttributeNamedParameterCompletionProvider.cs,GetItemsWorkerAsync,The length of the statement  "            var semanticModel = await document.GetCSharpSemanticModelForNodeAsync(attributeSyntax' cancellationToken).ConfigureAwait(false); " is 128.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,AttributeNamedParameterCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\AttributeNamedParameterCompletionProvider.cs,GetItemsWorkerAsync,The length of the statement  "            var nameColonItems = await GetNameColonItemsAsync(workspace' semanticModel' position' token' attributeSyntax' existingNamedParameters' cancellationToken).ConfigureAwait(false); " is 176.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,AttributeNamedParameterCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\AttributeNamedParameterCompletionProvider.cs,GetItemsWorkerAsync,The length of the statement  "            var nameEqualsItems = await GetNameEqualsItemsAsync(workspace' semanticModel' position' token' attributeSyntax' existingNamedParameters' cancellationToken).ConfigureAwait(false); " is 178.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,AttributeNamedParameterCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\AttributeNamedParameterCompletionProvider.cs,GetNameEqualsItemsAsync,The length of the statement  "            var attributeNamedParameters = GetAttributeNamedParameters(semanticModel' position' attributeSyntax' cancellationToken); " is 120.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,CompletionUtilities,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\CompletionUtilities.cs,IsTriggerCharacter,The length of the statement  "            if (options.GetOption(CompletionOptions.TriggerOnTypingLetters' LanguageNames.CSharp) && IsStartingNewWord(text' characterPosition)) " is 132.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,CompletionUtilities,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\CompletionUtilities.cs,IsTriggerAfterSpaceOrStartOfWordCharacter,The length of the statement  "            return ch == ' ' || (CompletionUtilities.IsStartingNewWord(text' characterPosition) && options.GetOption(CompletionOptions.TriggerOnTypingLetters' LanguageNames.CSharp)); " is 170.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,CrefCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\CrefCompletionProvider.CrefCompletionItem.cs,GetItemsWorkerAsync,The length of the statement  "            var semanticModel = await document.GetCSharpSemanticModelForNodeAsync(token.Parent' cancellationToken).ConfigureAwait(false); " is 125.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,CrefCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\CrefCompletionProvider.CrefCompletionItem.cs,GetItemsWorkerAsync,The length of the statement  "            if (token.IsKind(SyntaxKind.DoubleQuoteToken' SyntaxKind.SingleQuoteToken) && token.Parent.IsKind(SyntaxKind.XmlCrefAttribute)) " is 127.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,CrefCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\CrefCompletionProvider.CrefCompletionItem.cs,CreateItemsAsync,The length of the statement  "                var item = await CreateItemAsync(workspace' semanticModel' textChangeSpanPosition' symbol' token' cancellationToken).ConfigureAwait(false); " is 139.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,CrefCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\CrefCompletionProvider.CrefCompletionItem.cs,CreateItemAsync,The length of the statement  "                descriptionFactory: CommonCompletionUtilities.CreateDescriptionFactory(workspace' semanticModel' tokenPosition' symbol)' " is 120.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,EnumAndCompletionListTagCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\EnumAndCompletionListTagCompletionProvider.cs,IsTriggerCharacter,The length of the statement  "                (options.GetOption(CompletionOptions.TriggerOnTypingLetters' LanguageNames.CSharp) && CompletionUtilities.IsStartingNewWord(text' characterPosition)); " is 150.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,EnumAndCompletionListTagCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\EnumAndCompletionListTagCompletionProvider.cs,GetItemsWorkerAsync,The length of the statement  "                type = GetCompletionListType(type' semanticModel.GetEnclosingNamedType(position' cancellationToken)' semanticModel.Compilation); " is 128.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,EnumAndCompletionListTagCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\EnumAndCompletionListTagCompletionProvider.cs,GetItemsWorkerAsync,The length of the statement  "                descriptionFactory: CommonCompletionUtilities.CreateDescriptionFactory(workspace' semanticModel' position' alias ?? type)' " is 122.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,EnumAndCompletionListTagCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\EnumAndCompletionListTagCompletionProvider.cs,GetCompletionListType,The length of the statement  "                ? DocumentationCommentId.GetSymbolsForDeclarationId(documentation.CompletionListCref' compilation).OfType<INamedTypeSymbol>().FirstOrDefault() " is 142.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,ExplicitInterfaceCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\ExplicitInterfaceCompletionProvider.cs,GetItemsWorkerAsync,The length of the statement  "                    document' semanticModel' position' ((ExplicitInterfaceSpecifierSyntax)node).Name' cancellationToken).ConfigureAwait(false); " is 123.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,ExplicitInterfaceCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\ExplicitInterfaceCompletionProvider.cs,GetCompletionsOffOfExplicitInterfaceAsync,The length of the statement  "            var context = CSharpSyntaxContext.CreateContext(document.Project.Solution.Workspace' semanticModel' position' cancellationToken); " is 129.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,ExternAliasCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\ExternAliasCompletionProvider.cs,GetItemsWorkerAsync,The length of the statement  "                    var usedAliases = root.ChildNodes().OfType<ExternAliasDirectiveSyntax>().Where(e => !e.Identifier.IsMissing).Select(e => e.Identifier.ValueText); " is 145.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,ExternAliasCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\ExternAliasCompletionProvider.cs,GetItemsWorkerAsync,The length of the statement  "                    var textChangeSpan = CompletionUtilities.GetTextChangeSpan(await document.GetTextAsync(cancellationToken).ConfigureAwait(false)' position); " is 139.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,KeywordCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\KeywordCompletionProvider.cs,CreateContextAsync,The length of the statement  "            return CSharpSyntaxContext.CreateContext(document.Project.Solution.Workspace' semanticModel' position' cancellationToken); " is 122.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,NamedParameterCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\NamedParameterCompletionProvider.cs,GetItemsWorkerAsync,The length of the statement  "            var semanticModel = await document.GetCSharpSemanticModelForNodeAsync(argumentList' cancellationToken).ConfigureAwait(false); " is 125.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,NamedParameterCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\NamedParameterCompletionProvider.cs,GetParameterLists,The length of the statement  "                (InvocationExpressionSyntax invocationExpression) => GetInvocationExpressionParameterLists(semanticModel' position' invocationExpression' cancellationToken)' " is 157.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,NamedParameterCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\NamedParameterCompletionProvider.cs,GetParameterLists,The length of the statement  "                (ConstructorInitializerSyntax constructorInitializer) => GetConstructorInitializerParameterLists(semanticModel' position' constructorInitializer' cancellationToken)' " is 165.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,NamedParameterCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\NamedParameterCompletionProvider.cs,GetParameterLists,The length of the statement  "                (ElementAccessExpressionSyntax elementAccessExpression) => GetElementAccessExpressionParameterLists(semanticModel' position' elementAccessExpression' cancellationToken)' " is 169.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,NamedParameterCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\NamedParameterCompletionProvider.cs,GetParameterLists,The length of the statement  "                (ObjectCreationExpressionSyntax objectCreationExpression) => GetObjectCreationExpressionParameterLists(semanticModel' position' objectCreationExpression' cancellationToken)); " is 174.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,NamedParameterCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\NamedParameterCompletionProvider.cs,GetElementAccessExpressionParameterLists,The length of the statement  "            var expressionSymbol = semanticModel.GetSymbolInfo(elementAccessExpression.Expression' cancellationToken).GetAnySymbol(); " is 121.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,NamedParameterCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\NamedParameterCompletionProvider.cs,GetElementAccessExpressionParameterLists,The length of the statement  "                var indexers = semanticModel.LookupSymbols(position' expressionType' WellKnownMemberNames.Indexer).OfType<IPropertySymbol>(); " is 125.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,NamedParameterCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\NamedParameterCompletionProvider.cs,GetInvocationExpressionParameterLists,The length of the statement  "                var methodGroup = semanticModel.GetMemberGroup(invocationExpression.Expression' cancellationToken).OfType<IMethodSymbol>(); " is 123.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,NamedParameterCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\NamedParameterCompletionProvider.cs,GetInvocationExpressionParameterLists,The length of the statement  "                var expressionType = semanticModel.GetTypeInfo(invocationExpression.Expression' cancellationToken).Type as INamedTypeSymbol; " is 124.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,ObjectCreationCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\ObjectCreationCompletionProvider.cs,CreateContext,The length of the statement  "            var semanticModel = await document.GetCSharpSemanticModelForSpanAsync(new TextSpan(position' 0)' cancellationToken).ConfigureAwait(false); " is 138.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,ObjectCreationCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\ObjectCreationCompletionProvider.cs,CreateContext,The length of the statement  "            return CSharpSyntaxContext.CreateContext(document.Project.Solution.Workspace' semanticModel' position' cancellationToken); " is 122.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,ObjectCreationCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\ObjectCreationCompletionProvider.cs,GetPreselectedSymbolsWorker,The length of the statement  "            var result = await base.GetPreselectedSymbolsWorker(context' position' options' cancellationToken).ConfigureAwait(false); " is 121.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,ObjectInitializerCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\ObjectInitializerCompletionProvider.cs,IsExclusiveAsync,The length of the statement  "            var semanticModel = await document.GetCSharpSemanticModelForNodeAsync(expression' cancellationToken).ConfigureAwait(false); " is 123.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,ObjectInitializerCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\ObjectInitializerCompletionProvider.cs,GetInitializedType,The length of the statement  "                var expectedType = typeInferenceService.InferType(semanticModel' parentInitializer' objectAsDefault: false' cancellationToken: cancellationToken); " is 146.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,SnippetCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\SnippetCompletionProvider.cs,GetItemsWorkerAsync,The length of the statement  "                return await document.GetUnionResultsFromDocumentAndLinks(UnionCompletionItemComparer.Instance' async (d' c) => await GetSnippetsForDocumentAsync(d' position' workspace' c).ConfigureAwait(false)' cancellationToken).ConfigureAwait(false); " is 237.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,SnippetCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\SnippetCompletionProvider.cs,GetSnippetsForDocumentAsync,The length of the statement  "                syntaxFacts.GetContainingTypeDeclaration(await syntaxTree.GetRootAsync(cancellationToken).ConfigureAwait(false)' position) is EnumDeclarationSyntax) " is 148.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,SnippetCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\SnippetCompletionProvider.cs,GetSnippetsForDocumentAsync,The length of the statement  "                var directive = syntaxTree.GetRoot(cancellationToken).FindTokenOnLeftOfPosition(position' includeDirectives: true).GetAncestor<DirectiveTriviaSyntax>(); " is 152.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,SnippetCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\SnippetCompletionProvider.cs,GetSnippetsForDocumentAsync,The length of the statement  "                return await GetSnippetCompletionItemsAsync(workspace' semanticModel' position' isPreProcessorContext: true' cancellationToken: cancellationToken).ConfigureAwait(false); " is 169.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,SnippetCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\SnippetCompletionProvider.cs,GetSnippetsForDocumentAsync,The length of the statement  "                return await GetSnippetCompletionItemsAsync(workspace' semanticModel' position' isPreProcessorContext: false' cancellationToken: cancellationToken).ConfigureAwait(false); " is 170.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,SnippetCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\SnippetCompletionProvider.cs,GetSnippetCompletionItemsAsync,The length of the statement  "            var service = _snippetInfoService ?? workspace.Services.GetLanguageServices(semanticModel.Language).GetService<ISnippetInfoService>(); " is 134.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,SpeculativeTCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\SpeculativeTCompletionProvider.cs,GetSpeculativeTCompletions,The length of the statement  "            var semanticModel = await document.GetCSharpSemanticModelForNodeAsync(leftToken.Parent' cancellationToken).ConfigureAwait(false); " is 129.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,SpeculativeTCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\SpeculativeTCompletionProvider.cs,GetSpeculativeTCompletions,The length of the statement  "                        if (typeArgumentList.LessThanToken != default(SyntaxToken) && typeArgumentList.GreaterThanToken != default(SyntaxToken)) " is 120.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,SpeculativeTCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\SpeculativeTCompletionProvider.cs,GetSpeculativeTCompletions,The length of the statement  "                syntaxTree.IsMemberDeclarationContext(testPosition' contextOpt: null' validModifiers: SyntaxKindSet.AllMemberModifiers' validTypeDeclarations: SyntaxKindSet.ClassInterfaceStructTypeDeclarations' canBePartial: false' cancellationToken: cancellationToken)) || " is 257.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,SpeculativeTCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\SpeculativeTCompletionProvider.cs,GetSpeculativeTCompletions,The length of the statement  "                syntaxTree.IsDelegateReturnTypeContext(testPosition' syntaxTree.FindTokenOnLeftOfPosition(testPosition' cancellationToken)' cancellationToken)) " is 143.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,SpeculativeTCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\SpeculativeTCompletionProvider.cs,GetSpeculativeTCompletions,The length of the statement  "                    new CSharpCompletionItem(document.Project.Solution.Workspace' this' T' textChangeSpan' descriptionFactory: null' glyph: Glyph.TypeParameter)); " is 142.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,SuggestionModeCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\SuggestionModeCompletionProvider.cs,GetBuilderAsync,The length of the statement  "                var semanticModel = await document.GetCSharpSemanticModelForNodeAsync(token.Parent' cancellationToken).ConfigureAwait(false); " is 125.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,SuggestionModeCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\SuggestionModeCompletionProvider.cs,IsImplicitArrayCreation,The length of the statement  "                var type = typeInferrer.InferType(semanticModel' token.Parent' objectAsDefault: false' cancellationToken: cancellationToken); " is 125.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,SymbolCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\SymbolCompletionProvider.cs,GetSymbolsWorker,The length of the statement  "            return Task.FromResult(Recommender.GetRecommendedSymbolsAtPosition(context.SemanticModel' position' context.Workspace' options' cancellationToken)); " is 148.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.Providers,SymbolCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\SymbolCompletionProvider.cs,GetInsertionText,The length of the statement  "            if (CommonCompletionUtilities.TryRemoveAttributeSuffix(symbol' context.IsAttributeNameContext' context.GetLanguageService<ISyntaxFactsService>()' out name)) " is 156.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,AsyncKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\AsyncKeywordRecommender.cs,InMemberDeclarationContext,The length of the statement  "            return context.SyntaxTree.IsGlobalMemberDeclarationContext(position' SyntaxKindSet.AllGlobalMemberModifiers' cancellationToken) " is 127.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,ElseKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\ElseKeywordRecommender.cs,IsValidContext,The length of the statement  "            if (token.IsKind(SyntaxKind.CloseBraceToken) && ifStatement.Statement is BlockSyntax && token == ((BlockSyntax)ifStatement.Statement).CloseBraceToken) " is 150.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,EventKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\EventKeywordRecommender.cs,IsValidContext,The length of the statement  "                context.IsMemberDeclarationContext(validModifiers: s_validModifiers' validTypeDeclarations: SyntaxKindSet.ClassInterfaceStructTypeDeclarations' canBePartial: false' cancellationToken: cancellationToken) || " is 205.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,ExplicitKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\ExplicitKeywordRecommender.cs,IsValidContext,The length of the statement  "            if (context.IsMemberDeclarationContext(validModifiers: s_validMemberModifiers' validTypeDeclarations: SyntaxKindSet.ClassStructTypeDeclarations' canBePartial: false' cancellationToken: cancellationToken)) " is 204.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,FixedKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\FixedKeywordRecommender.cs,IsMemberDeclarationContext,The length of the statement  "               (context.SyntaxTree.IsGlobalMemberDeclarationContext(context.Position' SyntaxKindSet.AllGlobalMemberModifiers' cancellationToken) || " is 132.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,FixedKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\FixedKeywordRecommender.cs,IsMemberDeclarationContext,The length of the statement  "               context.IsMemberDeclarationContext(validModifiers: s_validModifiers' validTypeDeclarations: SyntaxKindSet.StructOnlyTypeDeclarations' canBePartial: false' cancellationToken: cancellationToken)); " is 194.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,FromKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\FromKeywordRecommender.cs,IsValidContext,The length of the statement  "                syntaxTree.IsValidContextForFromClause(position' context.LeftToken' cancellationToken' semanticModelOpt: context.SemanticModel); " is 128.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,ImplicitKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\ImplicitKeywordRecommender.cs,IsValidContext,The length of the statement  "            if (context.IsMemberDeclarationContext(validModifiers: s_validMemberModifiers' validTypeDeclarations: SyntaxKindSet.ClassStructTypeDeclarations' canBePartial: false' cancellationToken: cancellationToken)) " is 204.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,InternalKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\InternalKeywordRecommender.cs,IsValidContextForMember,The length of the statement  "            if (context.SyntaxTree.IsGlobalMemberDeclarationContext(context.Position' SyntaxKindSet.AllGlobalMemberModifiers' cancellationToken) || " is 135.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,InternalKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\InternalKeywordRecommender.cs,IsValidContextForMember,The length of the statement  "                context.IsMemberDeclarationContext(validModifiers: SyntaxKindSet.AllMemberModifiers' validTypeDeclarations: SyntaxKindSet.ClassStructTypeDeclarations' canBePartial: false' cancellationToken: cancellationToken)) " is 210.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,InternalKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\InternalKeywordRecommender.cs,IsValidContextForType,The length of the statement  "            if (context.IsTypeDeclarationContext(validModifiers: SyntaxKindSet.AllTypeModifiers' validTypeDeclarations: SyntaxKindSet.ClassStructTypeDeclarations' canBePartial: false' cancellationToken: cancellationToken)) " is 210.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,NewKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\NewKeywordRecommender.cs,IsTypeDeclarationContext,The length of the statement  "            if (context.IsTypeDeclarationContext(validModifiers: ValidTypeModifiers' validTypeDeclarations: SyntaxKindSet.ClassInterfaceStructTypeDeclarations' canBePartial: false' cancellationToken: cancellationToken)) " is 207.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,NewKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\NewKeywordRecommender.cs,IsMemberDeclarationContext,The length of the statement  "                context.SyntaxTree.IsGlobalMemberDeclarationContext(context.Position' SyntaxKindSet.AllGlobalMemberModifiers' cancellationToken) || " is 131.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,PartialKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\PartialKeywordRecommender.cs,IsMemberDeclarationContext,The length of the statement  "            if (context.IsMemberDeclarationContext(validModifiers: s_validMemberModifiers' validTypeDeclarations: SyntaxKindSet.ClassStructTypeDeclarations' canBePartial: false' cancellationToken: cancellationToken)) " is 204.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,PrivateKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\PrivateKeywordRecommender.cs,IsValidContextForMember,The length of the statement  "            if (context.SyntaxTree.IsGlobalMemberDeclarationContext(context.Position' SyntaxKindSet.AllGlobalMemberModifiers' cancellationToken) || " is 135.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,PrivateKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\PrivateKeywordRecommender.cs,IsValidContextForMember,The length of the statement  "                context.IsMemberDeclarationContext(validModifiers: SyntaxKindSet.AllMemberModifiers' validTypeDeclarations: SyntaxKindSet.ClassStructTypeDeclarations' canBePartial: false' cancellationToken: cancellationToken)) " is 210.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,PrivateKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\PrivateKeywordRecommender.cs,IsValidContextForType,The length of the statement  "            if (context.IsTypeDeclarationContext(validModifiers: SyntaxKindSet.AllTypeModifiers' validTypeDeclarations: SyntaxKindSet.ClassStructTypeDeclarations' canBePartial: false' cancellationToken: cancellationToken)) " is 210.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,ProtectedKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\ProtectedKeywordRecommender.cs,IsValidContextForMember,The length of the statement  "            if (context.IsMemberDeclarationContext(validModifiers: SyntaxKindSet.AllMemberModifiers' validTypeDeclarations: SyntaxKindSet.ClassOnlyTypeDeclarations' canBePartial: false' cancellationToken: cancellationToken)) " is 212.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,ProtectedKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\ProtectedKeywordRecommender.cs,IsValidContextForType,The length of the statement  "            if (context.IsTypeDeclarationContext(validModifiers: SyntaxKindSet.AllTypeModifiers' validTypeDeclarations: SyntaxKindSet.ClassOnlyTypeDeclarations' canBePartial: false' cancellationToken: cancellationToken)) " is 208.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,PublicKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\PublicKeywordRecommender.cs,IsValidContextForMember,The length of the statement  "            if (context.SyntaxTree.IsGlobalMemberDeclarationContext(context.Position' SyntaxKindSet.AllGlobalMemberModifiers' cancellationToken) || " is 135.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,PublicKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\PublicKeywordRecommender.cs,IsValidContextForType,The length of the statement  "            if (context.IsTypeDeclarationContext(validModifiers: SyntaxKindSet.AllTypeModifiers' validTypeDeclarations: SyntaxKindSet.ClassStructTypeDeclarations' canBePartial: false' cancellationToken: cancellationToken)) " is 210.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,ReadOnlyKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\ReadOnlyKeywordRecommender.cs,IsValidContext,The length of the statement  "                context.SyntaxTree.IsGlobalMemberDeclarationContext(context.Position' SyntaxKindSet.AllGlobalMemberModifiers' cancellationToken) || " is 131.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,StaticKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\StaticKeywordRecommender.cs,IsValidContextForMember,The length of the statement  "                context.SyntaxTree.IsGlobalMemberDeclarationContext(context.Position' s_validGlobalMemberModifiers' cancellationToken) || " is 121.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,ThisKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\ThisKeywordRecommender.cs,IsExtensionMethodParameterContext,The length of the statement  "            if (!context.SyntaxTree.IsParameterModifierContext(context.Position' context.LeftToken' cancellationToken' allowableIndex: 0)) " is 126.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,UnsafeKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\UnsafeKeywordRecommender.cs,IsValidContext,The length of the statement  "                context.IsTypeDeclarationContext(validModifiers: s_validTypeModifiers' validTypeDeclarations: SyntaxKindSet.ClassStructTypeDeclarations' canBePartial: false' cancellationToken: cancellationToken) || " is 198.
Long Statement,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,VolatileKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\VolatileKeywordRecommender.cs,IsValidContext,The length of the statement  "                context.SyntaxTree.IsGlobalMemberDeclarationContext(context.Position' SyntaxKindSet.AllGlobalMemberModifiers' cancellationToken) || " is 131.
Long Statement,Microsoft.CodeAnalysis.CSharp.Diagnostics.RemoveUnnecessaryImports,CSharpRemoveUnnecessaryImportsDiagnosticAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\Diagnostics\Analyzers\CSharpRemoveUnnecessaryImportsDiagnosticAnalyzer.cs,GetFixableDiagnosticSpans,The length of the statement  "                var nodeContainingUnnecessaryUsings = node.GetAncestors().First(n => n is NamespaceDeclarationSyntax || n is CompilationUnitSyntax); " is 132.
Long Statement,Microsoft.CodeAnalysis.CSharp.Diagnostics.SimplifyTypeNames,CSharpSimplifyTypeNamesDiagnosticAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\Diagnostics\Analyzers\CSharpSimplifyTypeNamesDiagnosticAnalyzer.cs,AnalyzeNode,The length of the statement  "            foreach (var candidate in context.Node.DescendantNodesAndSelf(descendIntoChildren: n => !IsCrefCandidate(n)' descendIntoTrivia: true)) " is 134.
Long Statement,Microsoft.CodeAnalysis.CSharp.Diagnostics.SimplifyTypeNames,CSharpSimplifyTypeNamesDiagnosticAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\Diagnostics\Analyzers\CSharpSimplifyTypeNamesDiagnosticAnalyzer.cs,AnalyzeNode,The length of the statement  "                    TrySimplifyTypeNameExpression(context.SemanticModel' candidate' context.Options' out diagnostic' context.CancellationToken)) " is 124.
Long Statement,Microsoft.CodeAnalysis.CSharp.Diagnostics.SimplifyTypeNames,CSharpSimplifyTypeNamesDiagnosticAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\Diagnostics\Analyzers\CSharpSimplifyTypeNamesDiagnosticAnalyzer.cs,CanSimplifyTypeNameExpression,The length of the statement  "                if (!crefSyntax.TryReduceOrSimplifyExplicitName(model' out replacementNode' out issueSpan' optionSet' cancellationToken)) " is 121.
Long Statement,Microsoft.CodeAnalysis.CSharp.Diagnostics.SimplifyTypeNames,CSharpSimplifyTypeNamesDiagnosticAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\Diagnostics\Analyzers\CSharpSimplifyTypeNamesDiagnosticAnalyzer.cs,CanSimplifyTypeNameExpression,The length of the statement  "                // required to add parenthesis around the expression. Adding the parenthesis is done in the CSharpNameSimplifier.Rewriter " is 121.
Long Statement,Microsoft.CodeAnalysis.CSharp.Diagnostics.SimplifyTypeNames,CSharpSimplifyTypeNamesDiagnosticAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\Diagnostics\Analyzers\CSharpSimplifyTypeNamesDiagnosticAnalyzer.cs,CanSimplifyTypeNameExpression,The length of the statement  "                if (!expressionToCheck.TryReduceOrSimplifyExplicitName(model' out replacementSyntax' out issueSpan' optionSet' cancellationToken)) " is 130.
Long Statement,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,TryGetActiveTokens,The length of the statement  "                    return fieldDeclaration.Modifiers.Concat(variableDeclaration.DescendantTokens()).Concat(fieldDeclaration.SemicolonToken); " is 121.
Long Statement,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,ComputeBodyMatch,The length of the statement  "                // Lambda bodies' field/property initializers' and method/property/indexer/operator expression-bodies may also be lambda expressions. " is 133.
Long Statement,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,ComputeBodyMatch,The length of the statement  "                // - for block bodies the root is a method/operator/accessor declaration (only happens when matching expression body with a block body) " is 135.
Long Statement,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,GetSymbolForEdit,The length of the statement  "                    // The expression body itself may have been updated' replaced with an explicit getter' or added to replace an explicit getter. " is 126.
Long Statement,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,TryGetDeclarationBodyEdit,The length of the statement  "            if (edit.Kind == EditKind.Update && (edit.OldNode.IsKind(SyntaxKind.PropertyDeclaration) || edit.OldNode.IsKind(SyntaxKind.IndexerDeclaration))) " is 144.
Long Statement,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,IsGetterToExpressionBodyTransformation,The length of the statement  "                Debug.Assert(node.Parent.Parent.IsKind(SyntaxKind.PropertyDeclaration) || node.Parent.Parent.IsKind(SyntaxKind.IndexerDeclaration)); " is 132.
Long Statement,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,GetDiagnosticSpanImpl,The length of the statement  "                    return GetDiagnosticSpan(delegateDeclaration.Modifiers' delegateDeclaration.DelegateKeyword' delegateDeclaration.ParameterList); " is 128.
Long Statement,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,GetDiagnosticSpanImpl,The length of the statement  "                    return GetDiagnosticSpan(eventFieldDeclaration.Modifiers' eventFieldDeclaration.EventKeyword' eventFieldDeclaration.Declaration); " is 129.
Long Statement,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,GetDiagnosticSpanImpl,The length of the statement  "                    return GetDiagnosticSpan(conversionOperatorDeclaration.Modifiers' conversionOperatorDeclaration.ImplicitOrExplicitKeyword' conversionOperatorDeclaration.ParameterList); " is 168.
Long Statement,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,GetDiagnosticSpanImpl,The length of the statement  "                    return GetDiagnosticSpan(operatorDeclaration.Modifiers' operatorDeclaration.ReturnType' operatorDeclaration.ParameterList); " is 123.
Long Statement,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,GetDiagnosticSpanImpl,The length of the statement  "                    return GetDiagnosticSpan(constructorDeclaration.Modifiers' constructorDeclaration.Identifier' constructorDeclaration.ParameterList); " is 132.
Long Statement,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,GetDiagnosticSpanImpl,The length of the statement  "                    return GetDiagnosticSpan(destructorDeclaration.Modifiers' destructorDeclaration.TildeToken' destructorDeclaration.ParameterList); " is 129.
Long Statement,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,ReportOtherRudeEditsAroundActiveStatement,The length of the statement  "            ReportRudeEditsForAncestorsDeclaringInterStatementTemps(diagnostics' match' oldActiveStatement' newActiveStatement' isLeaf); " is 124.
Long Statement,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,ReportRudeEditsForAncestorsDeclaringInterStatementTemps,The length of the statement  "            ReportUnmatchedStatements<LockStatementSyntax>(diagnostics' match' (int)SyntaxKind.LockStatement' oldActiveStatement' newActiveStatement' " is 137.
Long Statement,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,ReportRudeEditsForAncestorsDeclaringInterStatementTemps,The length of the statement  "            ReportUnmatchedStatements<FixedStatementSyntax>(diagnostics' match' (int)SyntaxKind.FixedStatement' oldActiveStatement' newActiveStatement' " is 139.
Long Statement,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,ReportRudeEditsForAncestorsDeclaringInterStatementTemps,The length of the statement  "            ReportUnmatchedStatements<UsingStatementSyntax>(diagnostics' match' (int)SyntaxKind.UsingStatement' oldActiveStatement' newActiveStatement' " is 139.
Long Statement,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,ReportRudeEditsForAncestorsDeclaringInterStatementTemps,The length of the statement  "            ReportUnmatchedStatements<ForEachStatementSyntax>(diagnostics' match' (int)SyntaxKind.ForEachStatement' oldActiveStatement' newActiveStatement' " is 143.
Long Statement,Microsoft.CodeAnalysis.CSharp.EditAndContinue,EditClassifier,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,ClassifyModifiedMemberInsert,The length of the statement  "                if (modifiers.Any(SyntaxKind.VirtualKeyword) || modifiers.Any(SyntaxKind.AbstractKeyword) || modifiers.Any(SyntaxKind.OverrideKeyword)) " is 135.
Long Statement,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,TryComputeWeightedDistance,The length of the statement  "                    distance = ComputeWeightedDistance(leftFixed.Declaration' leftFixed.Statement' rightFixed.Declaration' rightFixed.Statement); " is 125.
Long Statement,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,TryComputeWeightedDistance,The length of the statement  "                    distance = ComputeWeightedDistance(leftWhile.Condition' leftWhile.Statement' rightWhile.Condition' rightWhile.Statement); " is 121.
Long Statement,Microsoft.CodeAnalysis.CSharp.EditAndContinue,SyntaxUtilities,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\SyntaxUtilities.cs,GetAwaitExpressions,The length of the statement  "            return ImmutableArray.CreateRange(body.DescendantNodesAndSelf(IsNotLambda).Where(n => n.IsKind(SyntaxKind.AwaitExpression))); " is 125.
Long Statement,Microsoft.CodeAnalysis.CSharp.EncapsulateField,CSharpEncapsulateFieldService,C:\repos\mono_roslyn\src\Features\CSharp\EncapsulateField\CSharpEncapsulateFieldService.cs,RewriteFieldNameAndAccessibility,The length of the statement  "                var modifierKinds = new[] { SyntaxKind.PrivateKeyword' SyntaxKind.ProtectedKeyword' SyntaxKind.InternalKeyword' SyntaxKind.PublicKeyword }; " is 139.
Long Statement,Microsoft.CodeAnalysis.CSharp.EncapsulateField,CSharpEncapsulateFieldService,C:\repos\mono_roslyn\src\Features\CSharp\EncapsulateField\CSharpEncapsulateFieldService.cs,RewriteFieldNameAndAccessibility,The length of the statement  "                var withField = await codeGenService.AddFieldAsync(document.Project.Solution' field.ContainingType' fieldToAdd' new CodeGenerationOptions()' cancellationToken).ConfigureAwait(false); " is 182.
Long Statement,Microsoft.CodeAnalysis.CSharp.EncapsulateField,CSharpEncapsulateFieldService,C:\repos\mono_roslyn\src\Features\CSharp\EncapsulateField\CSharpEncapsulateFieldService.cs,IsNew,The length of the statement  "            return field.DeclaringSyntaxReferences.Any(d => d.GetSyntax().GetAncestor<FieldDeclarationSyntax>().Modifiers.Any(SyntaxKind.NewKeyword)); " is 138.
Long Statement,Microsoft.CodeAnalysis.CSharp.EncapsulateField,CSharpEncapsulateFieldService,C:\repos\mono_roslyn\src\Features\CSharp\EncapsulateField\CSharpEncapsulateFieldService.cs,MakeUnique,The length of the statement  "            var containingTypeMemberNames = containingType.GetAccessibleMembersInThisAndBaseTypes<ISymbol>(containingType).Select(m => m.Name); " is 131.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractInterface,CSharpExtractInterfaceService,C:\repos\mono_roslyn\src\Features\CSharp\ExtractInterface\CSharpExtractInterfaceService.cs,GetTypeDeclaration,The length of the statement  "            var spanEnd = typeDeclaration.TypeParameterList != null ? typeDeclaration.TypeParameterList.Span.End : typeDeclaration.Identifier.Span.End; " is 139.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractInterface,CSharpExtractInterfaceService,C:\repos\mono_roslyn\src\Features\CSharp\ExtractInterface\CSharpExtractInterfaceService.cs,GetSolutionWithUpdatedOriginalType,The length of the statement  "                    SyntaxFactory.TypeArgumentList(SyntaxFactory.SeparatedList(extractedInterfaceSymbol.TypeParameters.Select(p => SyntaxFactory.ParseTypeName(p.Name))))) " is 150.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractInterface,CSharpExtractInterfaceService,C:\repos\mono_roslyn\src\Features\CSharp\ExtractInterface\CSharpExtractInterfaceService.cs,GetSolutionWithUpdatedOriginalType,The length of the statement  "            var updatedBaseList = baseList.WithTypes(SyntaxFactory.SeparatedList(baseList.Types.Union(new[] { SyntaxFactory.SimpleBaseType(implementedInterfaceTypeSyntax) }))); " is 164.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractInterface,CSharpExtractInterfaceService,C:\repos\mono_roslyn\src\Features\CSharp\ExtractInterface\CSharpExtractInterfaceService.cs,GetSolutionWithUpdatedOriginalType,The length of the statement  "            var updatedTypeDeclaration = typeDeclaration.WithBaseList(updatedBaseList.WithAdditionalAnnotations(Formatter.Annotation)); " is 123.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractInterface,CSharpExtractInterfaceService,C:\repos\mono_roslyn\src\Features\CSharp\ExtractInterface\CSharpExtractInterfaceService.cs,GetSolutionWithUpdatedOriginalType,The length of the statement  "            var updatedRoot = root.ReplaceNode(root.GetAnnotatedNodes<TypeDeclarationSyntax>(typeNodeAnnotation).Single()' updatedTypeDeclaration); " is 135.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractInterface,CSharpExtractInterfaceService,C:\repos\mono_roslyn\src\Features\CSharp\ExtractInterface\CSharpExtractInterfaceService.cs,GetSolutionWithUpdatedOriginalType,The length of the statement  "            var solutionWithOriginalTypeUpdated = solutionWithFormattedInterfaceDocument.WithDocumentSyntaxRoot(docId' updatedRoot' PreservationMode.PreserveIdentity); " is 155.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractInterface,CSharpExtractInterfaceService,C:\repos\mono_roslyn\src\Features\CSharp\ExtractInterface\CSharpExtractInterfaceService.cs,GetGeneratedNameTypeParameterSuffix,The length of the statement  "            var typeParameterList = SyntaxFactory.TypeParameterList(SyntaxFactory.SeparatedList(typeParameters.Select(p => SyntaxFactory.TypeParameter(p.Name)))); " is 150.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpMethodExtractor,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.Analyzer.cs,ExpandAsync,The length of the statement  "            var lastExpression = selection.GetFirstTokenInSelection().GetCommonRoot(selection.GetLastTokenInSelection()).GetAncestors<ExpressionSyntax>().LastOrDefault(); " is 158.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpMethodExtractor,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.Analyzer.cs,ExpandAsync,The length of the statement  "            var newExpression = await Simplifier.ExpandAsync(lastExpression' selection.SemanticDocument.Document' n => n != selection.GetContainingScope()' expandParameter: false' cancellationToken: cancellationToken).ConfigureAwait(false); " is 228.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpMethodExtractor,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.Analyzer.cs,ExpandAsync,The length of the statement  "            return await selection.SemanticDocument.WithSyntaxRootAsync(selection.SemanticDocument.Root.ReplaceNode(lastExpression' newExpression)' cancellationToken).ConfigureAwait(false); " is 177.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpMethodExtractor,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.Analyzer.cs,GetFormattingRules,The length of the statement  "            return SpecializedCollections.SingletonEnumerable(new FormattingRule()).Concat(Formatter.GetDefaultFormattingRules(document)); " is 126.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpMethodExtractor,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.Analyzer.cs,CheckTypeAsync,The length of the statement  "                var currentType = semanticModel.GetSpeculativeTypeInfo(contextNode.SpanStart' typeName' SpeculativeBindingOption.BindAsTypeOrNamespace).Type; " is 141.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.Analyzer.cs,CreateFromSymbol,The length of the statement  "                return CreateFromSymbolCommon<LocalDeclarationStatementSyntax>(compilation' symbol' type' style' s_nonNoisySyntaxKindSet); " is 122.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.Analyzer.cs,GetRangeVariableType,The length of the statement  "                var info = model.GetSpeculativeTypeInfo(this.SelectionResult.FinalSpan.Start' SyntaxFactory.ParseName(symbol.Name)' SpeculativeBindingOption.BindAsExpression); " is 159.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpCodeGenerator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs,GenerateBodyForCallSiteContainerAsync,The length of the statement  "                var statementsToInsert = await CreateStatementsOrInitializerToInsertAtCallSiteAsync(cancellationToken).ConfigureAwait(false); " is 125.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpCodeGenerator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs,CreateStatementsOrInitializerToInsertAtCallSiteAsync,The length of the statement  "                    var statement = await GetStatementOrInitializerContainingInvocationToExtractedMethodAsync(this.CallSiteAnnotation' cancellationToken).ConfigureAwait(false); " is 156.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpCodeGenerator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs,WrapInCheckStatementIfNeeded,The length of the statement  "                    return SpecializedCollections.SingletonEnumerable<StatementSyntax>(SyntaxFactory.CheckedStatement(kind' SyntaxFactory.Block(statements))); " is 138.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpCodeGenerator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs,WrapInCheckStatementIfNeeded,The length of the statement  "                return SpecializedCollections.SingletonEnumerable<StatementSyntax>(SyntaxFactory.CheckedStatement(kind' SyntaxFactory.Block(statements))); " is 138.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpCodeGenerator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs,MoveDeclarationOutFromMethodDefinition,The length of the statement  "                                SyntaxToken identifier = ApplyTriviaFromDeclarationToAssignmentIdentifier(declarationStatement' firstVariableToAttachTrivia' variableDeclaration); " is 146.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpCodeGenerator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs,MoveDeclarationOutFromMethodDefinition,The length of the statement  "                        yield return SyntaxFactory.EmptyStatement(SyntaxFactory.Token(SyntaxFactory.TriviaList(triviaList)' SyntaxKind.SemicolonToken' SyntaxTriviaList.Create(SyntaxFactory.ElasticMarker))); " is 182.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpCodeGenerator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs,SplitOrMoveDeclarationIntoMethodDefinition,The length of the statement  "                var declStatements = CreateDeclarationStatements(AnalyzerResult.GetVariablesToSplitOrMoveIntoMethodDefinition(cancellationToken)' cancellationToken); " is 149.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpCodeGenerator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs,CreateDeclarationStatement,The length of the statement  "                          .AddVariables(SyntaxFactory.VariableDeclarator(SyntaxFactory.Identifier(variable.Name)).WithInitializer(equalsValueClause))); " is 125.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpCodeGenerator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs,CreateGeneratedCodeAsync,The length of the statement  "                    // here' we explicitly insert newline at the end of "{" of auto generated method decl so that anchor knows how to find out " is 122.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpCodeGenerator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs,CreateGeneratedCodeAsync,The length of the statement  "                    newDocument = await newDocument.WithSyntaxRootAsync(root.ReplaceNode(methodDefinition' newMethodDefinition)' cancellationToken).ConfigureAwait(false); " is 150.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CallSiteContainerRewriter,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs,VisitLocalDeclarationStatement,The length of the statement  "                        return SyntaxFactory.EmptyStatement(SyntaxFactory.Token(SyntaxFactory.TriviaList(triviaList)' SyntaxKind.SemicolonToken' SyntaxTriviaList.Create(SyntaxFactory.ElasticMarker))); " is 176.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CallSiteContainerRewriter,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs,ReplaceStatementIfNeeded,The length of the statement  "                    if ((statement != _firstStatementOrFieldToReplace) || (_firstStatementOrFieldToReplace != _lastStatementOrFieldToReplace)) " is 122.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CallSiteContainerRewriter,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs,ReplaceMembers,The length of the statement  "                    var firstMemberIndex = newMembers.FindIndex(s => s == (global ? _firstStatementOrFieldToReplace.Parent : _firstStatementOrFieldToReplace)); " is 139.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CallSiteContainerRewriter,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs,ReplaceMembers,The length of the statement  "                    var lastMemberIndex = newMembers.FindIndex(s => s == (global ? _lastStatementOrFieldToReplace.Parent : _lastStatementOrFieldToReplace)); " is 136.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CallSiteContainerRewriter,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs,ReplaceMembers,The length of the statement  "                        _statementsOrFieldToInsert.Select(s => global ? SyntaxFactory.GlobalStatement((StatementSyntax)s) : (MemberDeclarationSyntax)s)); " is 129.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,ExpressionCodeGenerator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.ExpressionCodeGenerator.cs,GetMethodNameBasedOnExpression,The length of the statement  "                        return (unqualifiedNameIdentifierValueText != null && unqualifiedNameIdentifierValueText.Length > 0) ? MakeMethodName("Get"' unqualifiedNameIdentifierValueText) : methodName; " is 174.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,ExpressionCodeGenerator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.ExpressionCodeGenerator.cs,GetInitialStatementsForMethodDefinitions,The length of the statement  "                        expression = SyntaxFactory.ArrayCreationExpression(typeSyntax as ArrayTypeSyntax' containingScope as InitializerExpressionSyntax); " is 130.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,ExpressionCodeGenerator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.ExpressionCodeGenerator.cs,GetStatementOrInitializerContainingInvocationToExtractedMethodAsync,The length of the statement  "                    var invocation = callSignature.IsKind(SyntaxKind.AwaitExpression) ? ((AwaitExpressionSyntax)callSignature).Expression : callSignature; " is 134.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,ExpressionCodeGenerator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.ExpressionCodeGenerator.cs,GetStatementOrInitializerContainingInvocationToExtractedMethodAsync,The length of the statement  "                        sourceNode.Parent is MemberAccessExpressionSyntax && ((MemberAccessExpressionSyntax)sourceNode.Parent).Name == sourceNode' " is 122.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,ExpressionCodeGenerator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.ExpressionCodeGenerator.cs,GetStatementOrInitializerContainingInvocationToExtractedMethodAsync,The length of the statement  "                    updatedDocument = await updatedDocument.ReplaceNodeAsync(enclosingStatement' newEnclosingStatement' cancellationToken).ConfigureAwait(false); " is 141.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,FormattingRule,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.FormattingProvider.cs,AddAnchorIndentationOperations,The length of the statement  "                if (node.IsKind(SyntaxKind.SimpleLambdaExpression) || node.IsKind(SyntaxKind.ParenthesizedLambdaExpression) || node.IsKind(SyntaxKind.AnonymousMethodExpression)) " is 161.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,PostProcessor,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.PostProcessor.cs,RemoveRedundantBlock,The length of the statement  "                        SpecializedCollections.EmptyEnumerable<StatementSyntax>() : SpecializedCollections.SingletonEnumerable<StatementSyntax>(block); " is 127.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,PostProcessor,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.PostProcessor.cs,RemoveRedundantBlock,The length of the statement  "                var firstTokenWithAsset = block.OpenBraceToken.CopyAnnotationsTo(firstToken).WithPrependedLeadingTrivia(block.OpenBraceToken.GetAllTrivia()); " is 141.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,PostProcessor,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.PostProcessor.cs,RemoveRedundantBlock,The length of the statement  "                var lastTokenWithAsset = block.CloseBraceToken.CopyAnnotationsTo(lastToken).WithAppendedTrailingTrivia(block.CloseBraceToken.GetAllTrivia()); " is 141.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,PostProcessor,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.PostProcessor.cs,RemoveRedundantBlock,The length of the statement  "                block = block.ReplaceTokens(new[] { firstToken' lastToken }' (o' c) => (o == firstToken) ? firstTokenWithAsset : lastTokenWithAsset); " is 133.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,PostProcessor,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.PostProcessor.cs,AppendDeclarationStatementToMap,The length of the statement  "                var type = _semanticModel.GetSpeculativeTypeInfo(_contextPosition' statement.Declaration.Type' SpeculativeBindingOption.BindAsTypeOrNamespace).Type; " is 148.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,PostProcessor,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.PostProcessor.cs,GetMergedDeclarationStatements,The length of the statement  "                            SyntaxFactory.VariableDeclaration(keyValuePair.Value.First().Declaration.Type' SyntaxFactory.SeparatedList(variables))); " is 120.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,PostProcessor,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.PostProcessor.cs,IsDeclarationMergable,The length of the statement  "                var semanticInfo = _semanticModel.GetSpeculativeTypeInfo(_contextPosition' declarationStatement.Declaration.Type' SpeculativeBindingOption.BindAsTypeOrNamespace).Type; " is 167.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,PostProcessor,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.PostProcessor.cs,RemoveInitializedDeclarationAndReturnPattern,The length of the statement  "                return SpecializedCollections.SingletonEnumerable<StatementSyntax>(SyntaxFactory.ReturnStatement(declaration.Declaration.Variables[0].Initializer.Value)); " is 154.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,PostProcessor,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.PostProcessor.cs,RemoveDeclarationAssignmentPattern,The length of the statement  "                var variable = declaration.Declaration.Variables[0].WithInitializer(SyntaxFactory.EqualsValueClause(assignmentExpression.Right)); " is 129.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpTriviaResult,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.TriviaResult.cs,ProcessAsync,The length of the statement  "                var preservationService = selectionResult.SemanticDocument.Document.Project.LanguageServices.GetService<ISyntaxTriviaService>(); " is 128.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpTriviaResult,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.TriviaResult.cs,TriviaResolver,The length of the statement  "                var previousTriviaPair = triviaMap.ContainsKey(tokenPair.PreviousToken) ? triviaMap[tokenPair.PreviousToken] : default(LeadingTrailingTriviaPair); " is 146.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpTriviaResult,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.TriviaResult.cs,TriviaResolver,The length of the statement  "                var nextTriviaPair = triviaMap.ContainsKey(tokenPair.NextToken) ? triviaMap[tokenPair.NextToken] : default(LeadingTrailingTriviaPair); " is 134.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpTriviaResult,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.TriviaResult.cs,FilterBeforeBeginningOfSpan,The length of the statement  "                var allList = FilterTriviaList(tokenPair.PreviousToken.TrailingTrivia.Concat(list).Concat(AppendLeadingTrivia(tokenPair))); " is 123.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,GetValidSelectionAsync,The length of the statement  "                    selectionInfo = selectionInfo.WithStatus(s => s.With(OperationStatusFlag.None' CSharpFeaturesResources.CantDetermineValidRangeOfStatements)); " is 141.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,GetValidSelectionAsync,The length of the statement  "                var isFinalSpanSemanticallyValid = IsFinalSpanSemanticallyValidSpan(model' controlFlowSpan' statementRange' cancellationToken); " is 127.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,GetValidSelectionAsync,The length of the statement  "                    selectionInfo = selectionInfo.WithStatus(s => s.With(OperationStatusFlag.BestEffort' CSharpFeaturesResources.NotAllCodePathReturns)); " is 133.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,ApplySpecialCases,The length of the statement  "            return AssignFinalSpan(selectionInfo.With(s => s.FirstTokenInFinalSpan = assign.Right.GetFirstToken(includeZeroWidth: true)) " is 124.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,AdjustFinalTokensBasedOnContext,The length of the statement  "                return selectionInfo.WithStatus(s => new OperationStatus(OperationStatusFlag.None' CSharpFeaturesResources.SelectionDoesNotContainAValidNode)) " is 142.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,GetInitialSelectionInfo,The length of the statement  "                return new SelectionInfo { Status = new OperationStatus(OperationStatusFlag.None' CSharpFeaturesResources.InvalidSelection)' OriginalSpan = adjustedSpan }; " is 155.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,CheckErrorCasesAndAppendDescriptions,The length of the statement  "                selectionInfo = selectionInfo.WithStatus(s => s.With(OperationStatusFlag.None' CSharpFeaturesResources.ContainsInvalidSelection)); " is 130.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,CheckErrorCasesAndAppendDescriptions,The length of the statement  "                selectionInfo = selectionInfo.WithStatus(s => s.With(OperationStatusFlag.None' CSharpFeaturesResources.TheSelectionContainsSyntacticErrors)); " is 141.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,CheckErrorCasesAndAppendDescriptions,The length of the statement  "                selectionInfo = selectionInfo.WithStatus(s => s.With(OperationStatusFlag.BestEffort' CSharpFeaturesResources.SelectionCanNotCrossOverPreprocessorDirectives)); " is 158.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,CheckErrorCasesAndAppendDescriptions,The length of the statement  "                selectionInfo = selectionInfo.WithStatus(s => s.With(OperationStatusFlag.BestEffort' CSharpFeaturesResources.SelectionCanNotContainAYieldStatement)); " is 149.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,CheckErrorCasesAndAppendDescriptions,The length of the statement  "                selectionInfo = selectionInfo.WithStatus(s => s.With(OperationStatusFlag.BestEffort' CSharpFeaturesResources.SelectionCanNotContainThrowStatement)); " is 148.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,CheckErrorCasesAndAppendDescriptions,The length of the statement  "                selectionInfo = selectionInfo.WithStatus(s => s.With(OperationStatusFlag.None' CSharpFeaturesResources.SelectionCanNotBePartOfConstInitializerExpr)); " is 149.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,CheckErrorCasesAndAppendDescriptions,The length of the statement  "                selectionInfo = selectionInfo.WithStatus(s => s.With(s.Flag' CSharpFeaturesResources.TheSelectedCodeIsInsideAnUnsafeContext)); " is 126.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,CheckErrorCasesAndAppendDescriptions,The length of the statement  "            var selectionChanged = selectionInfo.FirstTokenInOriginalSpan != selectionInfo.FirstTokenInFinalSpan || selectionInfo.LastTokenInOriginalSpan != selectionInfo.LastTokenInFinalSpan; " is 180.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,AssignInitialFinalTokens,The length of the statement  "                return selectionInfo.With(s => s.FirstTokenInFinalSpan = s.CommonRootFromOriginalSpan.GetFirstToken(includeZeroWidth: true)) " is 124.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,AssignInitialFinalTokens,The length of the statement  "                root' TextSpan.FromBounds(selectionInfo.FirstTokenInOriginalSpan.SpanStart' selectionInfo.LastTokenInOriginalSpan.Span.End)' " is 124.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,AssignInitialFinalTokens,The length of the statement  "                return selectionInfo.WithStatus(s => s.With(OperationStatusFlag.None' CSharpFeaturesResources.NoValidStatementRangeToExtractOut)); " is 130.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,GetOuterReturnStatements,The length of the statement  "            var returnableConstructPairs = returnStatements.Select(r => Tuple.Create(r' r.GetAncestors<SyntaxNode>().Where(a => a.IsReturnableConstruct()).FirstOrDefault())) " is 161.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateFromMembers.AddConstructorParameters,CSharpAddConstructorParametersService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateFromMembers\AddConstructorParameters\CSharpAddConstructorParametersService.cs,GetSelectedMembersAsync,The length of the statement  "                return await GenerateFromMembersHelpers.GetSelectedMembersAsync(document' textSpan' cancellationToken).ConfigureAwait(false); " is 125.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateFromMembers.GenerateEqualsAndGetHashCode,CSharpGenerateEqualsAndGetHashCodeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateFromMembers\GenerateEqualsAndGetHashCode\CSharpGenerateEqualsAndGetHashCodeService.cs,GetSelectedMembersAsync,The length of the statement  "                return await GenerateFromMembersHelpers.GetSelectedMembersAsync(document' textSpan' cancellationToken).ConfigureAwait(false); " is 125.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateConstructor,CSharpGenerateConstructorService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateConstructor\CSharpGenerateConstructorService.cs,TryInitializeSimpleAttributeNameGenerationState,The length of the statement  "                        arguments = attributeArguments.Select(x => SyntaxFactory.Argument(x.NameColon ?? ((x.NameEquals != null) ? SyntaxFactory.NameColon(x.NameEquals.Name) : null)' default(SyntaxToken)' x.Expression)).ToList(); " is 205.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateConstructor,CSharpGenerateConstructorService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateConstructor\CSharpGenerateConstructorService.cs,GetDelegatingConstructor,The length of the statement  "                var newCtorInitializer = SyntaxFactory.ConstructorInitializer(newCtorInitializerKind' ctorInitializer.ColonToken' thisOrBaseKeyword' newArgumentList); " is 150.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateConstructor,CSharpGenerateConstructorService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateConstructor\CSharpGenerateConstructorService.cs,GetDelegatingConstructor,The length of the statement  "                if (document.SemanticModel.TryGetSpeculativeSemanticModel(ctorInitializer.Span.Start' newCtorInitializer' out speculativeModel)) " is 128.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateConstructor,CSharpGenerateConstructorService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateConstructor\CSharpGenerateConstructorService.cs,GetDelegatingConstructor,The length of the statement  "                var speculativeModel = SpeculationAnalyzer.CreateSpeculativeSemanticModelForNode(oldNode' newNode' document.SemanticModel); " is 123.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateParameterizedMember,CSharpGenerateConversionService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateConversionService.cs,CreateInvocationMethodInfo,The length of the statement  "            return new CSharpGenerateParameterizedMemberService<CSharpGenerateConversionService>.InvocationExpressionInfo(document' state); " is 127.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateParameterizedMember,CSharpGenerateConversionService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateConversionService.cs,TryInitializeImplicitConversionState,The length of the statement  "            if (TryGetConversionMethodAndTypeToGenerateIn(document' expression' classInterfaceModuleStructTypes' cancellationToken' out methodSymbol' out typeToGenerateIn)) " is 160.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateParameterizedMember,CSharpGenerateConversionService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateConversionService.cs,TryInitializeExplicitConversionState,The length of the statement  "            if (TryGetConversionMethodAndTypeToGenerateIn(document' expression' classInterfaceModuleStructTypes' cancellationToken' out methodSymbol' out typeToGenerateIn)) " is 160.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateParameterizedMember,CSharpGenerateConversionService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateConversionService.cs,TryGetExplicitConversionMethodAndTypeToGenerateIn,The length of the statement  "            var parameterSymbol = document.SemanticModel.GetTypeInfo(castExpression.Expression' cancellationToken).Type as INamedTypeSymbol; " is 128.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateParameterizedMember,CSharpGenerateConversionService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateConversionService.cs,TryGetExplicitConversionMethodAndTypeToGenerateIn,The length of the statement  "            if (typeToGenerateIn == null || parameterSymbol == null || typeToGenerateIn.IsErrorType() || parameterSymbol.IsErrorType()) " is 123.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateParameterizedMember,CSharpGenerateConversionService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateConversionService.cs,TryGetImplicitConversionMethodAndTypeToGenerateIn,The length of the statement  "            if (typeToGenerateIn == null || parameterSymbol == null || typeToGenerateIn.IsErrorType() || parameterSymbol.IsErrorType()) " is 123.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateMethod,CSharpGenerateMethodService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateMethodService.cs,CreateInvocationMethodInfo,The length of the statement  "            return new CSharpGenerateParameterizedMemberService<CSharpGenerateMethodService>.InvocationExpressionInfo(document' state); " is 123.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateMethod,CSharpGenerateMethodService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateMethodService.cs,TryInitializeSimpleNameState,The length of the statement  "                    invocationExpressionOpt = (InvocationExpressionSyntax)((ConditionalAccessExpressionSyntax)simpleNameOrMemberAccessExpression).WhenNotNull; " is 138.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateVariable,CSharpGenerateVariableService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateVariable\CSharpGenerateVariableService.cs,GenerateTypeSyntax,The length of the statement  "            return type.ContainsAnonymousType() || (options.GetOption(CSharpCodeStyleOptions.UseVarWhenDeclaringLocals) && type.TypeKind != TypeKind.Delegate) " is 146.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryInitializeState,The length of the statement  "                nameOrMemberAccessExpression = generateTypeServiceStateOptions.NameOrMemberAccessExpression = (ExpressionSyntax)simpleName.Parent; " is 130.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryInitializeState,The length of the statement  "                var isExpressionContext = syntaxTree.IsExpressionContext(start' tokenOnLeftOfStart' attributes: true' cancellationToken: cancellationToken' semanticModelOpt: semanticModel); " is 173.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryInitializeState,The length of the statement  "                    if (nameOrMemberAccessExpression == null || !nameOrMemberAccessExpression.IsKind(SyntaxKind.SimpleMemberAccessExpression) || !simpleName.IsRightSideOfDot()) " is 156.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryInitializeState,The length of the statement  "                    var leftSymbol = semanticModel.GetSymbolInfo(((MemberAccessExpressionSyntax)nameOrMemberAccessExpression).Expression' cancellationToken).Symbol; " is 144.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryInitializeState,The length of the statement  "                    // In Namespace or Type Context we cannot have Interface' Enum' Delegate as part of the Left Expression of a QualifiedName " is 122.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryInitializeState,The length of the statement  "                if ((nameOrMemberAccessExpression.IsKind(SyntaxKind.SimpleMemberAccessExpression) || (nameOrMemberAccessExpression.Parent != null && nameOrMemberAccessExpression.IsParentKind(SyntaxKind.SimpleMemberAccessExpression))) " is 217.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryInitializeState,The length of the statement  "                    outerMostMemberAccessExpression = outerMostMemberAccessExpression.GetAncestorsOrThis<ExpressionSyntax>().SkipWhile((n) => n != null && n.IsKind(SyntaxKind.SimpleMemberAccessExpression)).FirstOrDefault(); " is 203.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryInitializeState,The length of the statement  "                var objectCreationExpressionOpt = generateTypeServiceStateOptions.ObjectCreationExpressionOpt = (ObjectCreationExpressionSyntax)nameOrMemberAccessExpression.Parent; " is 164.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryInitializeState,The length of the statement  "                        generateTypeServiceStateOptions.DelegateCreationMethodSymbol = GetMethodSymbolIfPresent(semanticModel' objectCreationExpressionOpt.ArgumentList.Arguments[0].Expression' cancellationToken); " is 188.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryInitializeState,The length of the statement  "                        var firstVarDeclWithInitializer = variableDeclaration.Variables.FirstOrDefault(var => var.Initializer != null && var.Initializer.Value != null); " is 144.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryInitializeState,The length of the statement  "                        if (firstVarDeclWithInitializer != null && firstVarDeclWithInitializer.Initializer != null && firstVarDeclWithInitializer.Initializer.Value != null) " is 148.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryInitializeState,The length of the statement  "                            generateTypeServiceStateOptions.DelegateCreationMethodSymbol = GetMethodSymbolIfPresent(semanticModel' firstVarDeclWithInitializer.Initializer.Value' cancellationToken); " is 169.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryInitializeState,The length of the statement  "                        generateTypeServiceStateOptions.DelegateCreationMethodSymbol = GetMethodSymbolIfPresent(semanticModel' castExpression.Expression' cancellationToken); " is 149.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,IsAllContainingTypeDeclsPublic,The length of the statement  "                return containingTypeDeclarations.All(typedecl => typedecl.GetModifiers().Any(m => m.Kind() == SyntaxKind.PublicKeyword)); " is 122.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryAddUsingsOrImportToDocument,The length of the statement  "            var placeSystemNamespaceFirst = document.Project.Solution.Workspace.Options.GetOption(OrganizerOptions.PlaceSystemNamespaceFirst' document.Project.Language); " is 157.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryAddUsingsOrImportToDocument,The length of the statement  "                var addedCompilationRoot = compilationRoot.AddUsingDirectives(new[] { usingDirective }' placeSystemNamespaceFirst' Formatter.Annotation); " is 137.
Long Statement,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryAddUsingsOrImportToDocument,The length of the statement  "                updatedSolution = updatedSolution.WithDocumentSyntaxRoot(document.Id' addedCompilationRoot' PreservationMode.PreserveIdentity); " is 127.
Long Statement,Microsoft.CodeAnalysis.CSharp.ImplementInterface,CSharpImplementInterfaceService,C:\repos\mono_roslyn\src\Features\CSharp\ImplementInterface\CSharpImplementInterfaceService.cs,GetClassDeclarationAt,The length of the statement  "            var node = root.FindToken(position).Parent.FirstAncestorOrSelf((SyntaxNode n) => n.IsKind(SyntaxKind.ClassDeclaration)); " is 120.
Long Statement,Microsoft.CodeAnalysis.CSharp.ImplementInterface,CSharpImplementInterfaceService,C:\repos\mono_roslyn\src\Features\CSharp\ImplementInterface\CSharpImplementInterfaceService.cs,CanImplementDisposePattern,The length of the statement  "            // The dispose pattern is only applicable if the implementing type is a class that does not already declare any conflicting " is 123.
Long Statement,Microsoft.CodeAnalysis.CSharp.ImplementInterface,CSharpImplementInterfaceService,C:\repos\mono_roslyn\src\Features\CSharp\ImplementInterface\CSharpImplementInterfaceService.cs,CanImplementDisposePattern,The length of the statement  "            // members named 'disposedValue' or 'Dispose' (because we will be generating a 'disposedValue' field and a couple of methods " is 124.
Long Statement,Microsoft.CodeAnalysis.CSharp.IntroduceVariable,CSharpIntroduceVariableService,C:\repos\mono_roslyn\src\Features\CSharp\IntroduceVariable\CSharpIntroduceVariableService.cs,IntroduceFieldAsync,The length of the statement  "                ? SyntaxFactory.MemberAccessExpression(SyntaxKind.SimpleMemberAccessExpression' SyntaxFactory.ParseName(oldType.ToNameDisplayString())' SyntaxFactory.IdentifierName(newNameToken)) " is 179.
Long Statement,Microsoft.CodeAnalysis.CSharp.IntroduceVariable,CSharpIntroduceVariableService,C:\repos\mono_roslyn\src\Features\CSharp\IntroduceVariable\CSharpIntroduceVariableService.cs,MakeFieldModifiers,The length of the statement  "                return SyntaxFactory.TokenList(SyntaxFactory.Token(SyntaxKind.PrivateKeyword)' SyntaxFactory.Token(SyntaxKind.ConstKeyword)); " is 125.
Long Statement,Microsoft.CodeAnalysis.CSharp.IntroduceVariable,CSharpIntroduceVariableService,C:\repos\mono_roslyn\src\Features\CSharp\IntroduceVariable\CSharpIntroduceVariableService.cs,MakeFieldModifiers,The length of the statement  "                return SyntaxFactory.TokenList(SyntaxFactory.Token(SyntaxKind.PrivateKeyword)' SyntaxFactory.Token(SyntaxKind.ReadOnlyKeyword)); " is 128.
Long Statement,Microsoft.CodeAnalysis.CSharp.IntroduceVariable,CSharpIntroduceVariableService,C:\repos\mono_roslyn\src\Features\CSharp\IntroduceVariable\CSharpIntroduceVariableService.cs,MakeFieldModifiers,The length of the statement  "                return SyntaxFactory.TokenList(SyntaxFactory.Token(SyntaxKind.PrivateKeyword)' SyntaxFactory.Token(SyntaxKind.StaticKeyword)' SyntaxFactory.Token(SyntaxKind.ReadOnlyKeyword)); " is 175.
Long Statement,Microsoft.CodeAnalysis.CSharp.IntroduceVariable,CSharpIntroduceVariableService,C:\repos\mono_roslyn\src\Features\CSharp\IntroduceVariable\CSharpIntroduceVariableService.cs,IntroduceLocalAsync,The length of the statement  "            var lambdas = anonymousMethodParameters.SelectMany(p => p.ContainingSymbol.DeclaringSyntaxReferences.Select(r => r.GetSyntax(cancellationToken)).AsEnumerable()) " is 160.
Long Statement,Microsoft.CodeAnalysis.CSharp.IntroduceVariable,CSharpIntroduceVariableService,C:\repos\mono_roslyn\src\Features\CSharp\IntroduceVariable\CSharpIntroduceVariableService.cs,IntroduceLocalDeclarationIntoLambda,The length of the statement  "            var newBody = delegateType != null && delegateType.DelegateInvokeMethod != null && delegateType.DelegateInvokeMethod.ReturnsVoid " is 128.
Long Statement,Microsoft.CodeAnalysis.CSharp.IntroduceVariable,CSharpIntroduceVariableService,C:\repos\mono_roslyn\src\Features\CSharp\IntroduceVariable\CSharpIntroduceVariableService.cs,IntroduceLocalDeclarationIntoBlockAsync,The length of the statement  "            var allAffectedStatements = new HashSet<StatementSyntax>(matches.SelectMany(expr => expr.GetAncestorsOrThis<StatementSyntax>())); " is 129.
Long Statement,Microsoft.CodeAnalysis.CSharp.IntroduceVariable,CSharpIntroduceVariableService,C:\repos\mono_roslyn\src\Features\CSharp\IntroduceVariable\CSharpIntroduceVariableService.cs,IntroduceQueryLocalAsync,The length of the statement  "            var newLocalNameToken = (SyntaxToken)GenerateUniqueLocalName(document' expression' isConstant: false' cancellationToken: cancellationToken); " is 140.
Long Statement,Microsoft.CodeAnalysis.CSharp.IntroduceVariable,CSharpIntroduceVariableService,C:\repos\mono_roslyn\src\Features\CSharp\IntroduceVariable\CSharpIntroduceVariableService.cs,IntroduceQueryLocalAsync,The length of the statement  "            var allAffectedClauses = new HashSet<SyntaxNode>(matches.SelectMany(expr => expr.GetAncestorsOrThis<SyntaxNode>().Where(IsAnyQueryClause))); " is 140.
Long Statement,Microsoft.CodeAnalysis.Editor.CSharp.LanguageServices,CSharpAnonymousTypeDisplayService,C:\repos\mono_roslyn\src\Features\CSharp\LanguageServices\CSharpAnonymousTypeDisplayService.cs,GetAnonymousTypeParts,The length of the statement  "                members.AddRange(displayService.ToMinimalDisplayParts(semanticModel' position' property.Type).Select(p => p.MassageErrorTypeNames("?"))); " is 137.
Long Statement,Microsoft.CodeAnalysis.Editor.CSharp.LanguageServices,CSharpSymbolDisplayService,C:\repos\mono_roslyn\src\Features\CSharp\LanguageServices\CSharpSymbolDisplayService.cs,CreateDescriptionBuilder,The length of the statement  "            return new SymbolDescriptionBuilder(this' semanticModel' position' workspace' this.AnonymousTypeDisplayService' cancellationToken); " is 131.
Long Statement,Microsoft.CodeAnalysis.Editor.CSharp.LanguageServices,SymbolDescriptionBuilder,C:\repos\mono_roslyn\src\Features\CSharp\LanguageServices\CSharpSymbolDisplayService.SymbolDescriptionBuilder.cs,GetInitializerSourcePartsAsync,The length of the statement  "                    var classifications = Classifier.GetClassifiedSpans(semanticModel' equalsValue.Value.Span' this.Workspace' this.CancellationToken); " is 131.
Long Statement,Microsoft.CodeAnalysis.CSharp.MetadataAsSource,CSharpMetadataAsSourceService,C:\repos\mono_roslyn\src\Features\CSharp\MetadataAsSource\CSharpMetadataAsSourceService.cs,ConvertDocCommentsToRegularComments,The length of the statement  "            var newSyntaxRoot = DocCommentConverter.ConvertToRegularComments(syntaxRoot' docCommentFormattingService' cancellationToken); " is 125.
Long Statement,Microsoft.CodeAnalysis.CSharp.MetadataAsSource,FormattingRule,C:\repos\mono_roslyn\src\Features\CSharp\MetadataAsSource\CSharpMetadataAsSourceService.cs,GetAdjustNewLinesOperationBetweenMembersAndUsings,The length of the statement  "                return FormattingOperations.CreateAdjustNewLinesOperation(GetNumberOfLines(triviaList) + 1' AdjustNewLinesOption.ForceLines); " is 125.
Long Statement,Microsoft.CodeAnalysis.CSharp.Organizing,CSharpOrganizingService,C:\repos\mono_roslyn\src\Features\CSharp\Organizing\CSharpOrganizingService.cs,ProcessAsync,The length of the statement  "            var rewriter = new Rewriter(this' organizers' await document.GetSemanticModelAsync(cancellationToken).ConfigureAwait(false)' cancellationToken); " is 144.
Long Statement,Microsoft.CodeAnalysis.CSharp.Organizing.Organizers,Comparer,C:\repos\mono_roslyn\src\Features\CSharp\Organizing\Organizers\MemberDeclarationsOrganizer.Comparer.cs,GetAccessibility,The length of the statement  "                else if (xModifiers.Any(t => t.Kind() == SyntaxKind.ProtectedKeyword) && xModifiers.Any(t => t.Kind() == SyntaxKind.InternalKeyword)) " is 133.
Long Statement,Microsoft.CodeAnalysis.CSharp.RemoveUnnecessaryImports,CSharpRemoveUnnecessaryImportsService,C:\repos\mono_roslyn\src\Features\CSharp\RemoveUnnecessaryImports\CSharpRemoveUnnecessaryImportsService.cs,FormatResult,The length of the statement  "            return Formatter.Format(newRoot' spans' document.Project.Solution.Workspace' document.Project.Solution.Workspace.Options' cancellationToken: cancellationToken); " is 160.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.ChangeSignature,CSharpChangeSignatureService,C:\repos\mono_roslyn\src\Features\CSharp\ChangeSignature\CSharpChangeSignatureService.cs,ChangeSignature,The conditional expression  "updatedNode.IsKind(SyntaxKind.MethodDeclaration) ||                  updatedNode.IsKind(SyntaxKind.ConstructorDeclaration) ||                  updatedNode.IsKind(SyntaxKind.IndexerDeclaration) ||                  updatedNode.IsKind(SyntaxKind.DelegateDeclaration)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.CodeFixes.AddImport,CSharpAddImportCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\AddImport\CSharpAddImportCodeFixProvider.cs,CanAddImportForMethod,The conditional expression  "memberAccess.IsParentKind(SyntaxKind.SimpleMemberAccessExpression) ||                  memberAccess.IsParentKind(SyntaxKind.ElementAccessExpression) ||                  memberBinding.IsParentKind(SyntaxKind.SimpleMemberAccessExpression) ||                  memberBinding.IsParentKind(SyntaxKind.ElementAccessExpression)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.CodeFixes.Iterator,CSharpAddYieldCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Iterator\CSharpAddYieldCodeFixProvider.cs,IsCorrectTypeForYieldReturn,The conditional expression  "ienumerableGenericSymbol == null ||                  ienumerableSymbol == null ||                  ienumeratorGenericSymbol == null ||                  ienumeratorSymbol == null"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.CodeFixes.Iterator,CSharpAddYieldCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Iterator\CSharpAddYieldCodeFixProvider.cs,IsCorrectTypeForYieldReturn,The conditional expression  "!(methodReturnType.Equals(ienumerableGenericSymbol) ||                    methodReturnType.Equals(ienumerableSymbol) ||                    methodReturnType.Equals(ienumeratorGenericSymbol) ||                    methodReturnType.Equals(ienumeratorSymbol))"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.CodeFixes.Iterator,CSharpChangeToIEnumerableCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\Iterator\CSharpChangeToIEnumerableCodeFixProvider.cs,GetCodeFixAsync,The conditional expression  "ienumerableGenericSymbol == null ||                  ienumerableSymbol == null ||                  ienumeratorGenericSymbol == null ||                  ienumeratorSymbol == null"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,InlineTemporaryCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.cs,ComputeRefactoringsAsync,The conditional expression  "variableDeclarator.Identifier != token ||                  variableDeclarator.Initializer == null ||                  variableDeclarator.Initializer.Value.IsMissing ||                  variableDeclarator.Initializer.Value.IsKind(SyntaxKind.StackAllocArrayCreationExpression)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary,ReferenceRewriter,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InlineTemporary\InlineTemporaryCodeRefactoringProvider.ReferenceRewriter.cs,VisitAnonymousObjectMemberDeclarator,The conditional expression  "nameEquals != null || identifier == null || !IsReference(identifier) || HasConflict(identifier' _variableDeclarator)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.MoveDeclarationNearReference,MoveDeclarationNearReferenceCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\MoveDeclarationNearReference\MoveDeclarationNearReferenceCodeRefactoringProvider.cs,CrossesMeaningfulBlock,The conditional expression  "block.Parent is ParenthesizedLambdaExpressionSyntax ||                      block.Parent is SimpleLambdaExpressionSyntax ||                      block.Parent is AnonymousMethodExpressionSyntax ||                      block.Parent is ForEachStatementSyntax ||                      block.Parent is ForStatementSyntax ||                      block.Parent is WhileStatementSyntax ||                      block.Parent is DoStatementSyntax"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.Completion.Providers,SnippetCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\SnippetCompletionProvider.cs,GetSnippetsForDocumentAsync,The conditional expression  "semanticFacts.IsGlobalStatementContext(semanticModel' position' cancellationToken) ||                  semanticFacts.IsExpressionContext(semanticModel' position' cancellationToken) ||                  semanticFacts.IsStatementContext(semanticModel' position' cancellationToken) ||                  semanticFacts.IsTypeContext(semanticModel' position' cancellationToken) ||                  semanticFacts.IsTypeDeclarationContext(semanticModel' position' cancellationToken) ||                  semanticFacts.IsNamespaceContext(semanticModel' position' cancellationToken) ||                  semanticFacts.IsMemberDeclarationContext(semanticModel' position' cancellationToken) ||                  semanticFacts.IsLabelContext(semanticModel' position' cancellationToken)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.Completion.Providers,SpeculativeTCompletionProvider,C:\repos\mono_roslyn\src\Features\CSharp\Completion\CompletionProviders\SpeculativeTCompletionProvider.cs,GetSpeculativeTCompletions,The conditional expression  "(!leftToken.GetPreviousTokenIfTouchingWord(position).IsKindOrHasMatchingText(SyntaxKind.AsyncKeyword) &&                  syntaxTree.IsMemberDeclarationContext(testPosition' contextOpt: null' validModifiers: SyntaxKindSet.AllMemberModifiers' validTypeDeclarations: SyntaxKindSet.ClassInterfaceStructTypeDeclarations' canBePartial: false' cancellationToken: cancellationToken)) ||                  syntaxTree.IsGlobalMemberDeclarationContext(testPosition' SyntaxKindSet.AllGlobalMemberModifiers' cancellationToken) ||                  syntaxTree.IsGlobalStatementContext(testPosition' cancellationToken) ||                  syntaxTree.IsDelegateReturnTypeContext(testPosition' syntaxTree.FindTokenOnLeftOfPosition(testPosition' cancellationToken)' cancellationToken)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,BaseKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\BaseKeywordRecommender.cs,IsConstructorInitializerContext,The conditional expression  "token.Kind() == SyntaxKind.ColonToken &&                  token.Parent is ConstructorInitializerSyntax &&                  token.Parent.IsParentKind(SyntaxKind.ConstructorDeclaration) &&                  token.Parent.GetParent().IsParentKind(SyntaxKind.ClassDeclaration)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,InKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\InKeywordRecommender.cs,IsValidContextInJoinClause,The conditional expression  "joinClause.Type != null &&                          joinClause.Type.IsKind(SyntaxKind.IdentifierName) &&                          token == ((IdentifierNameSyntax)joinClause.Type).Identifier &&                          !joinClause.Type.IsPotentialTypeName(context.SemanticModel' cancellationToken)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,PrivateKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\PrivateKeywordRecommender.cs,IsValidContextForMember,The conditional expression  "modifiers.Contains(SyntaxKind.AbstractKeyword) ||                      modifiers.Contains(SyntaxKind.VirtualKeyword) ||                      modifiers.Contains(SyntaxKind.OverrideKeyword) ||                      modifiers.Contains(SyntaxKind.SealedKeyword)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.Completion.KeywordRecommenders,StackAllocKeywordRecommender,C:\repos\mono_roslyn\src\Features\CSharp\Completion\KeywordRecommenders\StackAllocKeywordRecommender.cs,IsValidContext,The conditional expression  "token.Kind() == SyntaxKind.EqualsToken &&                      token.Parent.IsKind(SyntaxKind.EqualsValueClause) &&                      token.Parent.IsParentKind(SyntaxKind.VariableDeclarator) &&                      token.Parent.Parent.IsParentKind(SyntaxKind.VariableDeclaration)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,TryComputeWeightedDistance,The conditional expression  "leftCatch.Declaration == null && leftCatch.Filter == null &&                          rightCatch.Declaration == null && rightCatch.Filter == null"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.ExtractMethod,ExpressionCodeGenerator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.CSharpCodeGenerator.ExpressionCodeGenerator.cs,GetMethodNameBasedOnExpression,The conditional expression  "expression.Parent != null &&                          expression.Parent.Kind() == SyntaxKind.EqualsValueClause &&                          expression.Parent.Parent != null &&                          expression.Parent.Parent.Kind() == SyntaxKind.VariableDeclarator"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.ExtractMethod,PostProcessor,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.PostProcessor.cs,RemoveInitializedDeclarationAndReturnPattern,The conditional expression  "declaration.Declaration == null ||                      declaration.Declaration.Variables.Count != 1 ||                      declaration.Declaration.Variables[0].Initializer == null ||                      declaration.Declaration.Variables[0].Initializer.Value == null ||                      declaration.Declaration.Variables[0].Initializer.Value is StackAllocArrayCreationExpressionSyntax ||                      returnStatement.Expression == null"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.ExtractMethod,PostProcessor,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.PostProcessor.cs,RemoveDeclarationAssignmentPattern,The conditional expression  "ContainsAnyInitialization(declaration) ||                      declaration.Declaration == null ||                      declaration.Declaration.Variables.Count != 1 ||                      assignment.Expression == null ||                      assignment.Expression.Kind() != SyntaxKind.SimpleAssignmentExpression"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionResult,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionResult.cs,UnderAsyncAnonymousMethod,The conditional expression  "current is MemberDeclarationSyntax ||                      current is SimpleLambdaExpressionSyntax ||                      current is ParenthesizedLambdaExpressionSyntax ||                      current is AnonymousMethodExpressionSyntax"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,CheckBlock,The conditional expression  "block.Parent is BlockSyntax ||                  block.Parent is DoStatementSyntax ||                  block.Parent is ElseClauseSyntax ||                  block.Parent is ForEachStatementSyntax ||                  block.Parent is ForStatementSyntax ||                  block.Parent is IfStatementSyntax ||                  block.Parent is LockStatementSyntax ||                  block.Parent is UsingStatementSyntax ||                  block.Parent is WhileStatementSyntax"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,CheckStatement,The conditional expression  "statement is CheckedStatementSyntax ||                  statement is DoStatementSyntax ||                  statement is EmptyStatementSyntax ||                  statement is ExpressionStatementSyntax ||                  statement is FixedStatementSyntax ||                  statement is ForEachStatementSyntax ||                  statement is ForStatementSyntax ||                  statement is IfStatementSyntax ||                  statement is LocalDeclarationStatementSyntax ||                  statement is LockStatementSyntax ||                  statement is ReturnStatementSyntax ||                  statement is SwitchStatementSyntax ||                  statement is ThrowStatementSyntax ||                  statement is TryStatementSyntax ||                  statement is UnsafeStatementSyntax ||                  statement is UsingStatementSyntax ||                  statement is WhileStatementSyntax"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.ExtractMethod,Extensions,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\Extensions.cs,UnderValidContext,The conditional expression  "n is BaseMethodDeclarationSyntax ||                      n is AccessorDeclarationSyntax ||                      n is BlockSyntax ||                      n is GlobalStatementSyntax"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateEnumMember,CSharpGenerateEnumMemberService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateEnumMember\CSharpGenerateEnumMemberService.cs,TryInitializeIdentifierNameState,The conditional expression  "simpleNameOrMemberAccessExpression.IsParentKind(SyntaxKind.InvocationExpression) ||                      simpleNameOrMemberAccessExpression.IsParentKind(SyntaxKind.ObjectCreationExpression) ||                      simpleNameOrMemberAccessExpression.IsParentKind(SyntaxKind.GotoStatement) ||                      simpleNameOrMemberAccessExpression.IsParentKind(SyntaxKind.AliasQualifiedName)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateParameterizedMember,CSharpGenerateConversionService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateConversionService.cs,TryGetExplicitConversionMethodAndTypeToGenerateIn,The conditional expression  "typeToGenerateIn == null || parameterSymbol == null || typeToGenerateIn.IsErrorType() || parameterSymbol.IsErrorType()"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.GenerateMember.GenerateParameterizedMember,CSharpGenerateConversionService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateMember\GenerateParameterizedMember\CSharpGenerateConversionService.cs,TryGetImplicitConversionMethodAndTypeToGenerateIn,The conditional expression  "typeToGenerateIn == null || parameterSymbol == null || typeToGenerateIn.IsErrorType() || parameterSymbol.IsErrorType()"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,IsInInterfaceList,The conditional expression  "expression is TypeSyntax &&                  expression.Parent is BaseTypeSyntax &&                  expression.Parent.IsParentKind(SyntaxKind.BaseList) &&                  ((BaseTypeSyntax)expression.Parent).Type == expression"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryInitializeState,The conditional expression  "nameOrMemberAccessExpression.Parent is BaseTypeSyntax &&                  nameOrMemberAccessExpression.Parent.IsParentKind(SyntaxKind.BaseList) &&                  ((BaseTypeSyntax)nameOrMemberAccessExpression.Parent).Type == nameOrMemberAccessExpression &&                  nameOrMemberAccessExpression.Parent.Parent.IsParentKind(SyntaxKind.EnumDeclaration)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,TryInitializeState,The conditional expression  "(nameOrMemberAccessExpression.IsKind(SyntaxKind.SimpleMemberAccessExpression) || (nameOrMemberAccessExpression.Parent != null && nameOrMemberAccessExpression.IsParentKind(SyntaxKind.SimpleMemberAccessExpression)))                      && nameOrMemberAccessExpression.IsLeftSideOfDot()"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,IsPublicOnlyAccessibility,The conditional expression  "(node is BaseListSyntax || node is TypeParameterConstraintClauseSyntax) &&                      node.Parent != null &&                      node.Parent is TypeDeclarationSyntax"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.GenerateType,CSharpGenerateTypeService,C:\repos\mono_roslyn\src\Features\CSharp\GenerateType\CSharpGenerateTypeService.cs,IsPublicOnlyAccessibility,The conditional expression  "(node is EventDeclarationSyntax || node is EventFieldDeclarationSyntax) &&                      node.Parent != null &&                      node.Parent is TypeDeclarationSyntax"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.ImplementAbstractClass,CSharpImplementAbstractClassService,C:\repos\mono_roslyn\src\Features\CSharp\ImplementAbstractClass\CSharpImplementAbstractClassService.cs,TryInitializeState,The conditional expression  "baseClassNode != null && baseClassNode.Parent is BaseTypeSyntax &&                  baseClassNode.Parent.IsParentKind(SyntaxKind.BaseList) &&                  ((BaseTypeSyntax)baseClassNode.Parent).Type == baseClassNode"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CSharp.ImplementInterface,CSharpImplementInterfaceService,C:\repos\mono_roslyn\src\Features\CSharp\ImplementInterface\CSharpImplementInterfaceService.cs,TryInitializeState,The conditional expression  "interfaceNode != null && interfaceNode.Parent is BaseTypeSyntax &&                      interfaceNode.Parent.IsParentKind(SyntaxKind.BaseList) &&                      ((BaseTypeSyntax)interfaceNode.Parent).Type == interfaceNode"  is complex.
Virtual Method Call from Constructor,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSyntaxTriviaService,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSyntaxTriviaService.cs,CSharpSyntaxTriviaService,The constructor "CSharpSyntaxTriviaService" calls a virtual method "GetService".
Virtual Method Call from Constructor,Microsoft.CodeAnalysis.Editor.CSharp.LanguageServices,CSharpSymbolDisplayService,C:\repos\mono_roslyn\src\Features\CSharp\LanguageServices\CSharpSymbolDisplayService.cs,CSharpSymbolDisplayService,The constructor "CSharpSymbolDisplayService" calls a virtual method "GetService".
Virtual Method Call from Constructor,Microsoft.CodeAnalysis.CSharp.MetadataAsSource,CSharpMetadataAsSourceService,C:\repos\mono_roslyn\src\Features\CSharp\MetadataAsSource\CSharpMetadataAsSourceService.cs,CSharpMetadataAsSourceService,The constructor "CSharpMetadataAsSourceService" calls a virtual method "GetService".
Magic Number,Microsoft.CodeAnalysis.CSharp.CodeFixes.AddMissingReference,AddMissingReferenceCodeFixProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeFixes\AddMissingReference\AddMissingReferenceCodeFixProvider.cs,HACK_TryGetMissingAssemblyIdentity,The following statement contains a magic number: return AssemblyIdentity.TryParseDisplayName(message.Split('\'')[3]' out assemblyIdentity);
Magic Number,Microsoft.CodeAnalysis.CSharp.DocumentationCommentFormatting,DocumentationCommentUtilities,C:\repos\mono_roslyn\src\Features\CSharp\DocumentationCommentFormatting\DocumentationCommentUtilities.cs,ExtractXMLFragment,The following statement contains a magic number: for (int i = 0; i < splitLines.Length; i++)              {                  if (splitLines[i].StartsWith("///"))                  {                      splitLines[i] = splitLines[i].Substring(3);                  }              }
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,TryComputeWeightedDistance,The following statement contains a magic number: switch (leftNode.Kind())              {                  case SyntaxKind.VariableDeclarator:                      distance = ComputeDistance(                          ((VariableDeclaratorSyntax)leftNode).Identifier'                          ((VariableDeclaratorSyntax)rightNode).Identifier);                      return true;                    case SyntaxKind.ForStatement:                      var leftFor = (ForStatementSyntax)leftNode;                      var rightFor = (ForStatementSyntax)rightNode;                      distance = ComputeWeightedDistance(leftFor' rightFor);                      return true;                    case SyntaxKind.ForEachStatement:                      var leftForEach = (ForEachStatementSyntax)leftNode;                      var rightForEach = (ForEachStatementSyntax)rightNode;                      distance = ComputeWeightedDistance(leftForEach' rightForEach);                      return true;                    case SyntaxKind.UsingStatement:                      var leftUsing = (UsingStatementSyntax)leftNode;                      var rightUsing = (UsingStatementSyntax)rightNode;                        if (leftUsing.Declaration != null && rightUsing.Declaration != null)                      {                          distance = ComputeWeightedDistance(                              leftUsing.Declaration'                              leftUsing.Statement'                              rightUsing.Declaration'                              rightUsing.Statement);                      }                      else                      {                          distance = ComputeWeightedDistance(                              (SyntaxNode)leftUsing.Expression ?? leftUsing.Declaration'                              leftUsing.Statement'                              (SyntaxNode)rightUsing.Expression ?? rightUsing.Declaration'                              rightUsing.Statement);                      }                        return true;                    case SyntaxKind.LockStatement:                      var leftLock = (LockStatementSyntax)leftNode;                      var rightLock = (LockStatementSyntax)rightNode;                      distance = ComputeWeightedDistance(leftLock.Expression' leftLock.Statement' rightLock.Expression' rightLock.Statement);                      return true;                    case SyntaxKind.FixedStatement:                      var leftFixed = (FixedStatementSyntax)leftNode;                      var rightFixed = (FixedStatementSyntax)rightNode;                      distance = ComputeWeightedDistance(leftFixed.Declaration' leftFixed.Statement' rightFixed.Declaration' rightFixed.Statement);                      return true;                    case SyntaxKind.WhileStatement:                      var leftWhile = (WhileStatementSyntax)leftNode;                      var rightWhile = (WhileStatementSyntax)rightNode;                      distance = ComputeWeightedDistance(leftWhile.Condition' leftWhile.Statement' rightWhile.Condition' rightWhile.Statement);                      return true;                    case SyntaxKind.DoStatement:                      var leftDo = (DoStatementSyntax)leftNode;                      var rightDo = (DoStatementSyntax)rightNode;                      distance = ComputeWeightedDistance(leftDo.Condition' leftDo.Statement' rightDo.Condition' rightDo.Statement);                      return true;                    case SyntaxKind.IfStatement:                      var leftIf = (IfStatementSyntax)leftNode;                      var rightIf = (IfStatementSyntax)rightNode;                      distance = ComputeWeightedDistance(leftIf.Condition' leftIf.Statement' rightIf.Condition' rightIf.Statement);                      return true;                    case SyntaxKind.Block:                      BlockSyntax leftBlock = (BlockSyntax)leftNode;                      BlockSyntax rightBlock = (BlockSyntax)rightNode;                      return TryComputeWeightedDistance(leftBlock' rightBlock' out distance);                    case SyntaxKind.CatchClause:                      distance = ComputeWeightedDistance((CatchClauseSyntax)leftNode' (CatchClauseSyntax)rightNode);                      return true;                    case SyntaxKind.ParenthesizedLambdaExpression:                  case SyntaxKind.SimpleLambdaExpression:                  case SyntaxKind.AnonymousMethodExpression:                      distance = ComputeWeightedDistanceOfLambdas(leftNode' rightNode);                      return true;                    case SyntaxKind.YieldBreakStatement:                  case SyntaxKind.YieldReturnStatement:                      // Ignore the expression of yield return. The structure of the state machine is more important than the yielded values.                      distance = (leftNode.RawKind == rightNode.RawKind) ? 0.0 : 0.1;                      return true;                    default:                      distance = 0;                      return false;              }
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,ComputeWeightedDistanceOfLambdas,The following statement contains a magic number: return parameterDistance * 0.6 + bodyDistance * 0.4;
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,ComputeWeightedDistanceOfLambdas,The following statement contains a magic number: return parameterDistance * 0.6 + bodyDistance * 0.4;
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,TryComputeWeightedDistance,The following statement contains a magic number: if (leftBlock.Parent.Kind() != rightBlock.Parent.Kind())              {                  distance = 0.2 + 0.8 * ComputeWeightedBlockDistance(leftBlock' rightBlock);                  return true;              }
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,TryComputeWeightedDistance,The following statement contains a magic number: if (leftBlock.Parent.Kind() != rightBlock.Parent.Kind())              {                  distance = 0.2 + 0.8 * ComputeWeightedBlockDistance(leftBlock' rightBlock);                  return true;              }
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,TryComputeWeightedDistance,The following statement contains a magic number: switch (leftBlock.Parent.Kind())              {                  case SyntaxKind.IfStatement:                  case SyntaxKind.ForEachStatement:                  case SyntaxKind.ForStatement:                  case SyntaxKind.WhileStatement:                  case SyntaxKind.DoStatement:                  case SyntaxKind.FixedStatement:                  case SyntaxKind.LockStatement:                  case SyntaxKind.UsingStatement:                  case SyntaxKind.SwitchSection:                  case SyntaxKind.ParenthesizedLambdaExpression:                  case SyntaxKind.SimpleLambdaExpression:                  case SyntaxKind.AnonymousMethodExpression:                      // value distance of the block body is included:                      distance = GetDistance(leftBlock.Parent' rightBlock.Parent);                      return true;                    case SyntaxKind.CatchClause:                      var leftCatch = (CatchClauseSyntax)leftBlock.Parent;                      var rightCatch = (CatchClauseSyntax)rightBlock.Parent;                      if (leftCatch.Declaration == null && leftCatch.Filter == null &&                          rightCatch.Declaration == null && rightCatch.Filter == null)                      {                          var leftTry = (TryStatementSyntax)leftCatch.Parent;                          var rightTry = (TryStatementSyntax)rightCatch.Parent;                            distance = 0.5 * ComputeValueDistance(leftTry.Block' rightTry.Block) +                                     0.5 * ComputeValueDistance(leftBlock' rightBlock);                      }                      else                      {                          // value distance of the block body is included:                          distance = GetDistance(leftBlock.Parent' rightBlock.Parent);                      }                        return true;                    case SyntaxKind.Block:                      distance = ComputeWeightedBlockDistance(leftBlock' rightBlock);                      return true;                    case SyntaxKind.UnsafeStatement:                  case SyntaxKind.CheckedStatement:                  case SyntaxKind.UncheckedStatement:                  case SyntaxKind.ElseClause:                  case SyntaxKind.FinallyClause:                  case SyntaxKind.TryStatement:                      distance = 0.2 * ComputeValueDistance(leftBlock' rightBlock);                      return true;                    default:                      throw ExceptionUtilities.Unreachable;              }
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,TryComputeWeightedDistance,The following statement contains a magic number: switch (leftBlock.Parent.Kind())              {                  case SyntaxKind.IfStatement:                  case SyntaxKind.ForEachStatement:                  case SyntaxKind.ForStatement:                  case SyntaxKind.WhileStatement:                  case SyntaxKind.DoStatement:                  case SyntaxKind.FixedStatement:                  case SyntaxKind.LockStatement:                  case SyntaxKind.UsingStatement:                  case SyntaxKind.SwitchSection:                  case SyntaxKind.ParenthesizedLambdaExpression:                  case SyntaxKind.SimpleLambdaExpression:                  case SyntaxKind.AnonymousMethodExpression:                      // value distance of the block body is included:                      distance = GetDistance(leftBlock.Parent' rightBlock.Parent);                      return true;                    case SyntaxKind.CatchClause:                      var leftCatch = (CatchClauseSyntax)leftBlock.Parent;                      var rightCatch = (CatchClauseSyntax)rightBlock.Parent;                      if (leftCatch.Declaration == null && leftCatch.Filter == null &&                          rightCatch.Declaration == null && rightCatch.Filter == null)                      {                          var leftTry = (TryStatementSyntax)leftCatch.Parent;                          var rightTry = (TryStatementSyntax)rightCatch.Parent;                            distance = 0.5 * ComputeValueDistance(leftTry.Block' rightTry.Block) +                                     0.5 * ComputeValueDistance(leftBlock' rightBlock);                      }                      else                      {                          // value distance of the block body is included:                          distance = GetDistance(leftBlock.Parent' rightBlock.Parent);                      }                        return true;                    case SyntaxKind.Block:                      distance = ComputeWeightedBlockDistance(leftBlock' rightBlock);                      return true;                    case SyntaxKind.UnsafeStatement:                  case SyntaxKind.CheckedStatement:                  case SyntaxKind.UncheckedStatement:                  case SyntaxKind.ElseClause:                  case SyntaxKind.FinallyClause:                  case SyntaxKind.TryStatement:                      distance = 0.2 * ComputeValueDistance(leftBlock' rightBlock);                      return true;                    default:                      throw ExceptionUtilities.Unreachable;              }
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,TryComputeWeightedDistance,The following statement contains a magic number: switch (leftBlock.Parent.Kind())              {                  case SyntaxKind.IfStatement:                  case SyntaxKind.ForEachStatement:                  case SyntaxKind.ForStatement:                  case SyntaxKind.WhileStatement:                  case SyntaxKind.DoStatement:                  case SyntaxKind.FixedStatement:                  case SyntaxKind.LockStatement:                  case SyntaxKind.UsingStatement:                  case SyntaxKind.SwitchSection:                  case SyntaxKind.ParenthesizedLambdaExpression:                  case SyntaxKind.SimpleLambdaExpression:                  case SyntaxKind.AnonymousMethodExpression:                      // value distance of the block body is included:                      distance = GetDistance(leftBlock.Parent' rightBlock.Parent);                      return true;                    case SyntaxKind.CatchClause:                      var leftCatch = (CatchClauseSyntax)leftBlock.Parent;                      var rightCatch = (CatchClauseSyntax)rightBlock.Parent;                      if (leftCatch.Declaration == null && leftCatch.Filter == null &&                          rightCatch.Declaration == null && rightCatch.Filter == null)                      {                          var leftTry = (TryStatementSyntax)leftCatch.Parent;                          var rightTry = (TryStatementSyntax)rightCatch.Parent;                            distance = 0.5 * ComputeValueDistance(leftTry.Block' rightTry.Block) +                                     0.5 * ComputeValueDistance(leftBlock' rightBlock);                      }                      else                      {                          // value distance of the block body is included:                          distance = GetDistance(leftBlock.Parent' rightBlock.Parent);                      }                        return true;                    case SyntaxKind.Block:                      distance = ComputeWeightedBlockDistance(leftBlock' rightBlock);                      return true;                    case SyntaxKind.UnsafeStatement:                  case SyntaxKind.CheckedStatement:                  case SyntaxKind.UncheckedStatement:                  case SyntaxKind.ElseClause:                  case SyntaxKind.FinallyClause:                  case SyntaxKind.TryStatement:                      distance = 0.2 * ComputeValueDistance(leftBlock' rightBlock);                      return true;                    default:                      throw ExceptionUtilities.Unreachable;              }
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,ComputeWeightedDistance,The following statement contains a magic number: return AdjustForLocalsInBlock(distance' left.Block' right.Block' localsWeight: 0.3);
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,ComputeWeightedDistance,The following statement contains a magic number: double distance = identifierDistance * 0.7 + expressionDistance * 0.2 + statementDistance * 0.1;
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,ComputeWeightedDistance,The following statement contains a magic number: double distance = identifierDistance * 0.7 + expressionDistance * 0.2 + statementDistance * 0.1;
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,ComputeWeightedDistance,The following statement contains a magic number: double distance = identifierDistance * 0.7 + expressionDistance * 0.2 + statementDistance * 0.1;
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,ComputeWeightedDistance,The following statement contains a magic number: return AdjustForLocalsInBlock(distance' left.Statement' right.Statement' localsWeight: 0.6);
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,ComputeWeightedDistance,The following statement contains a magic number: double distance = conditionDistance * 0.3 + incDistance * 0.3 + statementDistance * 0.4;
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,ComputeWeightedDistance,The following statement contains a magic number: double distance = conditionDistance * 0.3 + incDistance * 0.3 + statementDistance * 0.4;
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,ComputeWeightedDistance,The following statement contains a magic number: double distance = conditionDistance * 0.3 + incDistance * 0.3 + statementDistance * 0.4;
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,ComputeWeightedDistance,The following statement contains a magic number: if (TryComputeLocalsDistance(left.Declaration' right.Declaration' out localsDistance))              {                  distance = distance * 0.4 + localsDistance * 0.6;              }
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,ComputeWeightedDistance,The following statement contains a magic number: if (TryComputeLocalsDistance(left.Declaration' right.Declaration' out localsDistance))              {                  distance = distance * 0.4 + localsDistance * 0.6;              }
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,ComputeWeightedDistance,The following statement contains a magic number: if (TryComputeLocalsDistance(leftVariables' rightVariables' out localsDistance))              {                  distance = distance * 0.4 + localsDistance * 0.6;              }
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,ComputeWeightedDistance,The following statement contains a magic number: if (TryComputeLocalsDistance(leftVariables' rightVariables' out localsDistance))              {                  distance = distance * 0.4 + localsDistance * 0.6;              }
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,ComputeWeightedDistance,The following statement contains a magic number: return AdjustForLocalsInBlock(distance' leftStatement' rightStatement' localsWeight: 0.2);
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,ComputeWeightedDistance,The following statement contains a magic number: double distance = headerDistance * 0.6 + statementDistance * 0.4;
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,ComputeWeightedDistance,The following statement contains a magic number: double distance = headerDistance * 0.6 + statementDistance * 0.4;
Magic Number,Microsoft.CodeAnalysis.CSharp.EditAndContinue,StatementSyntaxComparer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\StatementSyntaxComparer.cs,ComputeWeightedDistance,The following statement contains a magic number: return AdjustForLocalsInBlock(distance' leftStatement' rightStatement' localsWeight: 0.5);
Magic Number,Microsoft.CodeAnalysis.CSharp.ExtractMethod,FormattingRule,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.FormattingProvider.cs,GetAdjustNewLinesOperation,The following statement contains a magic number: if (previousToken.BetweenFieldAndNonFieldMember(currentToken))                  {                      // make sure to have at least 2 line breaks between field and other members except field                      return FormattingOperations.CreateAdjustNewLinesOperation(2' AdjustNewLinesOption.PreserveLines);                  }
Magic Number,Microsoft.CodeAnalysis.CSharp.ExtractMethod,PostProcessor,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.PostProcessor.cs,RemoveInitializedDeclarationAndReturnPattern,The following statement contains a magic number: if (statements.ElementAtOrDefault(2) != null)                  {                      return statements;                  }
Magic Number,Microsoft.CodeAnalysis.CSharp.ExtractMethod,PostProcessor,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.PostProcessor.cs,RemoveDeclarationAssignmentPattern,The following statement contains a magic number: return SpecializedCollections.SingletonEnumerable<StatementSyntax>(                      declaration.WithDeclaration(                          declaration.Declaration.WithVariables(                              SyntaxFactory.SingletonSeparatedList(variable)))).Concat(statements.Skip(2));
Magic Number,Microsoft.CodeAnalysis.CSharp.Organizing.Organizers,MemberDeclarationsOrganizer,C:\repos\mono_roslyn\src\Features\CSharp\Organizing\Organizers\MemberDeclarationsOrganizer.Comparer.cs,TransferTrivia,The following statement contains a magic number: if (originalList.Count >= 2)              {                  // Ok' we wanted to reorder the list.  But we're definitely not done right now. While                  // most of the list will look fine' we will have issues with the first node.  First'                  // we don't want to move any pp directives or banners that are on the first node.                  // Second' it can often be the case that the node doesn't even have any trivia.  We                  // want to follow the user's style.  So we find the node that was in the index that                  // the first node moved to' and we attempt to keep an appropriate amount of                  // whitespace based on that.                    // If the first node didn't move' then we don't need to do any of this special fixup                  // logic.                  if (originalList[0] != finalList[0])                  {                      // First. Strip any pp directives or banners on the first node.  They have to                      // move to the first node in the final list.                      CopyBanner(originalList' finalList);                        // Now' we need to fix up the first node wherever it is in the final list.  We                      // need to strip it of its banner' and we need to add additional whitespace to                      // match the user's style                        FixupOriginalFirstNode(originalList' finalList);                  }              }
Missing Default,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InvertIf,InvertIfCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InvertIf\InvertIfCodeRefactoringProvider.cs,CanSimplifyToLengthEqualsZeroExpression,The following switch statement is missing a default case: switch (typeInfo.Type.SpecialType)                      {                          case SpecialType.System_Byte:                          case SpecialType.System_UInt16:                          case SpecialType.System_UInt32:                          case SpecialType.System_UInt64:                              return true;                      }
Missing Default,Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InvertIf,InvertIfCodeRefactoringProvider,C:\repos\mono_roslyn\src\Features\CSharp\CodeRefactorings\InvertIf\InvertIfCodeRefactoringProvider.cs,Negate,The following switch statement is missing a default case: switch (expression.Kind())              {                  case SyntaxKind.ParenthesizedExpression:                      {                          var parenthesizedExpression = (ParenthesizedExpressionSyntax)expression;                          return parenthesizedExpression                              .WithExpression(Negate(parenthesizedExpression.Expression' semanticModel' cancellationToken))                              .WithAdditionalAnnotations(Simplifier.Annotation);                      }                    case SyntaxKind.LogicalNotExpression:                      {                          var logicalNotExpression = (PrefixUnaryExpressionSyntax)expression;                            var notToken = logicalNotExpression.OperatorToken;                          var nextToken = logicalNotExpression.Operand.GetFirstToken(                              includeZeroWidth: true' includeSkipped: true' includeDirectives: true' includeDocumentationComments: true);                            var existingTrivia = SyntaxFactory.TriviaList(                              notToken.LeadingTrivia.Concat(                                  notToken.TrailingTrivia.Concat(                                      nextToken.LeadingTrivia)));                            var updatedNextToken = nextToken.WithLeadingTrivia(existingTrivia);                            return logicalNotExpression.Operand.ReplaceToken(                              nextToken'                              updatedNextToken);                      }                    case SyntaxKind.LogicalOrExpression:                      {                          var binaryExpression = (BinaryExpressionSyntax)expression;                          result = SyntaxFactory.BinaryExpression(                              SyntaxKind.LogicalAndExpression'                              Negate(binaryExpression.Left' semanticModel' cancellationToken)'                              SyntaxFactory.Token(                                  binaryExpression.OperatorToken.LeadingTrivia'                                  SyntaxKind.AmpersandAmpersandToken'                                  binaryExpression.OperatorToken.TrailingTrivia)'                              Negate(binaryExpression.Right' semanticModel' cancellationToken));                            return result                              .Parenthesize()                              .WithLeadingTrivia(binaryExpression.GetLeadingTrivia())                              .WithTrailingTrivia(binaryExpression.GetTrailingTrivia());                      }                    case SyntaxKind.LogicalAndExpression:                      {                          var binaryExpression = (BinaryExpressionSyntax)expression;                          result = SyntaxFactory.BinaryExpression(                              SyntaxKind.LogicalOrExpression'                              Negate(binaryExpression.Left' semanticModel' cancellationToken)'                              SyntaxFactory.Token(                                  binaryExpression.OperatorToken.LeadingTrivia'                                  SyntaxKind.BarBarToken'                                  binaryExpression.OperatorToken.TrailingTrivia)'                              Negate(binaryExpression.Right' semanticModel' cancellationToken));                            return result                              .Parenthesize()                              .WithLeadingTrivia(binaryExpression.GetLeadingTrivia())                              .WithTrailingTrivia(binaryExpression.GetTrailingTrivia());                      }                    case SyntaxKind.TrueLiteralExpression:                      {                          var literalExpression = (LiteralExpressionSyntax)expression;                          return SyntaxFactory.LiteralExpression(                              SyntaxKind.FalseLiteralExpression'                              SyntaxFactory.Token(                                  literalExpression.Token.LeadingTrivia'                                  SyntaxKind.FalseKeyword'                                  literalExpression.Token.TrailingTrivia));                      }                    case SyntaxKind.FalseLiteralExpression:                      {                          var literalExpression = (LiteralExpressionSyntax)expression;                          return SyntaxFactory.LiteralExpression(                              SyntaxKind.TrueLiteralExpression'                              SyntaxFactory.Token(                                  literalExpression.Token.LeadingTrivia'                                  SyntaxKind.TrueKeyword'                                  literalExpression.Token.TrailingTrivia));                      }              }
Missing Default,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,FindMemberDeclaration,The following switch statement is missing a default case: switch (node.Kind())                  {                      case SyntaxKind.MethodDeclaration:                      case SyntaxKind.ConversionOperatorDeclaration:                      case SyntaxKind.OperatorDeclaration:                      case SyntaxKind.SetAccessorDeclaration:                      case SyntaxKind.AddAccessorDeclaration:                      case SyntaxKind.RemoveAccessorDeclaration:                      case SyntaxKind.GetAccessorDeclaration:                      case SyntaxKind.ConstructorDeclaration:                      case SyntaxKind.DestructorDeclaration:                          return node;                        case SyntaxKind.PropertyDeclaration:                          // int P { get; } = [|initializer|];                          Debug.Assert(((PropertyDeclarationSyntax)node).Initializer != null);                          return node;                        case SyntaxKind.FieldDeclaration:                      case SyntaxKind.EventFieldDeclaration:                          // Active statements encompassing modifiers or type correspond to the first initialized field.                          // [|public static int F = 1|]' G = 2;                          return ((BaseFieldDeclarationSyntax)node).Declaration.Variables.First();                        case SyntaxKind.VariableDeclarator:                          // public static int F = 1' [|G = 2|];                          Debug.Assert(node.Parent.IsKind(SyntaxKind.VariableDeclaration));                            switch (node.Parent.Parent.Kind())                          {                              case SyntaxKind.FieldDeclaration:                              case SyntaxKind.EventFieldDeclaration:                                  return node;                          }                            node = node.Parent;                          break;                  }
Missing Default,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,FindMemberDeclaration,The following switch statement is missing a default case: switch (node.Parent.Parent.Kind())                          {                              case SyntaxKind.FieldDeclaration:                              case SyntaxKind.EventFieldDeclaration:                                  return node;                          }
Missing Default,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,GetExceptionHandlingAncestors,The following switch statement is missing a default case: switch (kind)                  {                      case SyntaxKind.TryStatement:                          if (!isLeaf)                          {                              result.Add(node);                          }                            break;                        case SyntaxKind.CatchClause:                      case SyntaxKind.FinallyClause:                          result.Add(node);                            // skip try:                          Debug.Assert(node.Parent.Kind() == SyntaxKind.TryStatement);                          node = node.Parent;                            break;                        // stop at type declaration:                      case SyntaxKind.ClassDeclaration:                      case SyntaxKind.StructDeclaration:                          return result;                  }
Missing Default,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,FindContainingStatementPart,The following switch statement is missing a default case: switch (node.Parent.Kind())                  {                      case SyntaxKind.ForStatement:                      case SyntaxKind.ForEachStatement:                      case SyntaxKind.IfStatement:                      case SyntaxKind.WhileStatement:                      case SyntaxKind.DoStatement:                      case SyntaxKind.SwitchStatement:                      case SyntaxKind.LockStatement:                      case SyntaxKind.UsingStatement:                      case SyntaxKind.ArrowExpressionClause:                          return node;                  }
Missing Default,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,HasNoSpilledState,The following switch statement is missing a default case: switch (containingStatementPart.Kind())              {                  case SyntaxKind.ExpressionStatement:                  case SyntaxKind.ReturnStatement:                      var expression = GetExpressionFromStatementPart(containingStatementPart);                        // await expr;                      // return await expr;                      if (expression == awaitExpression)                      {                          return true;                      }                        // identifier = await expr;                       // return identifier = await expr;                       return IsSimpleAwaitAssignment(expression' awaitExpression);                    case SyntaxKind.VariableDeclaration:                      // var idf = await expr in using' for' etc.                      // EqualsValueClause -> VariableDeclarator -> VariableDeclaration                      return awaitExpression.Parent.Parent.Parent == containingStatementPart;                    case SyntaxKind.LocalDeclarationStatement:                      // var idf = await expr;                      // EqualsValueClause -> VariableDeclarator -> VariableDeclaration -> LocalDeclarationStatement                      return awaitExpression.Parent.Parent.Parent.Parent == containingStatementPart;              }
Missing Default,Microsoft.CodeAnalysis.CSharp.EditAndContinue,CSharpEditAndContinueAnalyzer,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,TryGetCheckedStatementAncestor,The following switch statement is missing a default case: switch (node.Kind())                  {                      case SyntaxKind.CheckedStatement:                      case SyntaxKind.UncheckedStatement:                          return (CheckedStatementSyntax)node;                  }
Missing Default,Microsoft.CodeAnalysis.CSharp.EditAndContinue,EditClassifier,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,ClassifyTypeWithPossibleExternMembersInsert,The following switch statement is missing a default case: switch (member.Kind())                      {                          case SyntaxKind.PropertyDeclaration:                          case SyntaxKind.IndexerDeclaration:                          case SyntaxKind.EventDeclaration:                              modifiers = ((BasePropertyDeclarationSyntax)member).Modifiers;                              break;                            case SyntaxKind.ConversionOperatorDeclaration:                          case SyntaxKind.OperatorDeclaration:                          case SyntaxKind.MethodDeclaration:                          case SyntaxKind.ConstructorDeclaration:                              modifiers = ((BaseMethodDeclarationSyntax)member).Modifiers;                              break;                      }
Missing Default,Microsoft.CodeAnalysis.CSharp.EditAndContinue,EditClassifier,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\CSharpEditAndContinueAnalyzer.cs,ClassifyDeclarationBodyRudeUpdates,The following switch statement is missing a default case: switch (node.Kind())                      {                          case SyntaxKind.StackAllocArrayCreationExpression:                              ReportError(RudeEditKind.StackAllocUpdate' node' _newNode);                              return;                            case SyntaxKind.ParenthesizedLambdaExpression:                          case SyntaxKind.SimpleLambdaExpression:                              // TODO (tomat): allow                               ReportError(RudeEditKind.RUDE_EDIT_LAMBDA_EXPRESSION' node' _newNode);                              return;                            case SyntaxKind.AnonymousMethodExpression:                              // TODO (tomat): allow                               ReportError(RudeEditKind.RUDE_EDIT_ANON_METHOD' node' _newNode);                              return;                            case SyntaxKind.QueryExpression:                              // TODO (tomat): allow                               ReportError(RudeEditKind.RUDE_EDIT_QUERY_EXPRESSION' node' _newNode);                              return;                            case SyntaxKind.AnonymousObjectCreationExpression:                              // TODO (tomat): allow                               ReportError(RudeEditKind.RUDE_EDIT_ANONYMOUS_TYPE' node' _newNode);                              return;                      }
Missing Default,Microsoft.CodeAnalysis.CSharp.EditAndContinue,SyntaxUtilities,C:\repos\mono_roslyn\src\Features\CSharp\EditAndContinue\SyntaxUtilities.cs,IsLambda,The following switch statement is missing a default case: switch (kind)              {                  case SyntaxKind.ParenthesizedLambdaExpression:                  case SyntaxKind.SimpleLambdaExpression:                  case SyntaxKind.AnonymousMethodExpression:                  case SyntaxKind.LetClause:                  case SyntaxKind.WhereClause:                  case SyntaxKind.AscendingOrdering:                  case SyntaxKind.DescendingOrdering:                  case SyntaxKind.SelectClause:                  case SyntaxKind.JoinClause:                  case SyntaxKind.GroupClause:                      return true;                    case SyntaxKind.FromClause:                      // Although from clause only creates a lambda if it is in a query body'                      // for the purpose of node matching we consider all from clauses the same.                      return true;              }
Missing Default,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpTriviaResult,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.TriviaResult.cs,AnnotationResolver,The following switch statement is missing a default case: switch (location)                  {                      case TriviaLocation.BeforeBeginningOfSpan:                          return callsite.GetFirstToken(includeZeroWidth: true).GetPreviousToken(includeZeroWidth: true);                      case TriviaLocation.AfterEndOfSpan:                          return callsite.GetLastToken(includeZeroWidth: true).GetNextToken(includeZeroWidth: true);                      case TriviaLocation.AfterBeginningOfSpan:                          return method.Body.OpenBraceToken.GetNextToken(includeZeroWidth: true);                      case TriviaLocation.BeforeEndOfSpan:                          return method.Body.CloseBraceToken.GetPreviousToken(includeZeroWidth: true);                  }
Missing Default,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpTriviaResult,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpMethodExtractor.TriviaResult.cs,TriviaResolver,The following switch statement is missing a default case: switch (location)                  {                      case TriviaLocation.BeforeBeginningOfSpan:                          return FilterBeforeBeginningOfSpan(tokenPair' list);                      case TriviaLocation.AfterEndOfSpan:                          return FilterTriviaList(list.Concat(tokenPair.NextToken.LeadingTrivia));                      case TriviaLocation.AfterBeginningOfSpan:                          return FilterTriviaList(AppendTrailingTrivia(tokenPair).Concat(list).Concat(tokenPair.NextToken.LeadingTrivia));                      case TriviaLocation.BeforeEndOfSpan:                          return FilterTriviaList(tokenPair.PreviousToken.TrailingTrivia.Concat(list).Concat(tokenPair.NextToken.LeadingTrivia));                  }
Missing Default,Microsoft.CodeAnalysis.CSharp.ExtractMethod,CSharpSelectionValidator,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\CSharpSelectionValidator.cs,IsFinalSpanSemanticallyValidSpan,The following switch statement is missing a default case: switch (container.Kind())              {                  case SyntaxKind.AnonymousMethodExpression:                  case SyntaxKind.SimpleLambdaExpression:                  case SyntaxKind.ParenthesizedLambdaExpression:                      return true;              }
Missing Default,Microsoft.CodeAnalysis.CSharp.ExtractMethod,Extensions,C:\repos\mono_roslyn\src\Features\CSharp\ExtractMethod\Extensions.cs,ContainPreprocessorCrossOver,The following switch statement is missing a default case: switch (trivia.Kind())                  {                      case SyntaxKind.RegionDirectiveTrivia:                          activeRegions++;                          break;                      case SyntaxKind.EndRegionDirectiveTrivia:                          if (activeRegions <= 0)                          {                              return true;                          }                            activeRegions--;                          break;                      case SyntaxKind.IfDirectiveTrivia:                          activeIfs++;                          break;                      case SyntaxKind.EndIfDirectiveTrivia:                          if (activeIfs <= 0)                          {                              return true;                          }                            activeIfs--;                          break;                      case SyntaxKind.ElseDirectiveTrivia:                      case SyntaxKind.ElifDirectiveTrivia:                          if (activeIfs <= 0)                          {                              return true;                          }                            break;                  }
