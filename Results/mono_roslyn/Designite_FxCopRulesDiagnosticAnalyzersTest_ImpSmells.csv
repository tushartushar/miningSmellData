Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_NoDiagnostic_GetterVisibilityTest,The method has 170 lines of code.
Long Method,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_NoDiagnostic_GetterVisibilityTest,The method has 179 lines of code.
Long Method,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_NoDiagnostic_ConstructorVisibilityTest,The method has 219 lines of code.
Long Method,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_NoDiagnostic_ConstructorVisibilityTest,The method has 228 lines of code.
Long Method,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_NoDiagnostic_InheritanceTest,The method has 102 lines of code.
Long Method,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_NoDiagnostic_InheritanceTest,The method has 104 lines of code.
Long Method,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_GetterVisibilityTest,The method has 103 lines of code.
Long Method,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_GetterVisibilityTest,The method has 118 lines of code.
Long Method,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_RemvoeSetter_InheritanceTest,The method has 157 lines of code.
Long Method,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_RemvoeSetter_InheritanceTest,The method has 157 lines of code.
Long Method,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,CSharp_CA1024NoDiagnosticCases,The method has 106 lines of code.
Long Parameter List,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,GetCA2235CSharpResultAt,The method has 5 parameters. Parameters: line' column' fieldName' containerName' typeName
Long Parameter List,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,GetCA2235BasicResultAt,The method has 5 parameters. Parameters: line' column' fieldName' containerName' typeName
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,GetCA1003BasicResultAt,The length of the statement  "            return GetBasicResultAt(line' col' CA1003DiagnosticAnalyzer.RuleId' FxCopRulesResources.UseGenericEventHandlerInstances); " is 121.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,GetCA1003CSharpResultAt,The length of the statement  "            return GetCSharpResultAt(line' col' CA1003DiagnosticAnalyzer.RuleId' FxCopRulesResources.UseGenericEventHandlerInstances); " is 122.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1017Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1017Tests.cs,GetExposeIndividualTypesResult,The length of the statement  "            return GetGlobalResult(CA1017DiagnosticAnalyzer.RuleId' string.Format(FxCopRulesResources.CA1017_AttributeTrue' "TestProject")); " is 128.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1017Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1017Tests.cs,GetAddComVisibleFalseResult,The length of the statement  "            return GetGlobalResult(CA1017DiagnosticAnalyzer.RuleId' string.Format(FxCopRulesResources.CA1017_NoAttribute' "TestProject")); " is 126.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_RemvoeSetter_InheritanceTest,The length of the statement  "    // IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire. " is 128.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_RemvoeSetter_InheritanceTest,The length of the statement  "    // IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire. " is 124.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_RemvoeSetter_InheritanceTest,The length of the statement  "	' IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire. " is 127.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_RemvoeSetter_InheritanceTest,The length of the statement  "	' IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire. " is 123.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,GetCA1019CSharpDefaultResultAt,The length of the statement  "            var message = string.Format(FxCopRulesResources.DefineAccessorsForAttributeArgumentsDefault' paramName' attributeTypeName); " is 123.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,GetCA1019BasicDefaultResultAt,The length of the statement  "            var message = string.Format(FxCopRulesResources.DefineAccessorsForAttributeArgumentsDefault' paramName' attributeTypeName); " is 123.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,GetCA1019CSharpIncreaseVisibilityResultAt,The length of the statement  "            var message = string.Format(FxCopRulesResources.DefineAccessorsForAttributeArgumentsIncreaseVisibility' propertyName' paramName); " is 129.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,GetCA1019BasicIncreaseVisibilityResultAt,The length of the statement  "            var message = string.Format(FxCopRulesResources.DefineAccessorsForAttributeArgumentsIncreaseVisibility' propertyName' paramName); " is 129.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,GetCA1019CSharpRemoveSetterResultAt,The length of the statement  "            // Remove the property setter from '{0}' or reduce its accessibility because it corresponds to positional argument '{1}'. " is 121.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,GetCA1019CSharpRemoveSetterResultAt,The length of the statement  "            var message = string.Format(FxCopRulesResources.DefineAccessorsForAttributeArgumentsRemoveSetter' propertyName' paramName); " is 123.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,GetCA1019BasicRemoveSetterResultAt,The length of the statement  "            // Remove the property setter from '{0}' or reduce its accessibility because it corresponds to positional argument '{1}'. " is 121.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,GetCA1019BasicRemoveSetterResultAt,The length of the statement  "            var message = string.Format(FxCopRulesResources.DefineAccessorsForAttributeArgumentsRemoveSetter' propertyName' paramName); " is 123.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,GetCA1024CSharpResultAt,The length of the statement  "            return GetCSharpResultAt(line' column' CA1024Name' string.Format(FxCopRulesResources.ChangeToAPropertyIfAppropriate' methodName)); " is 130.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,GetCA1024BasicResultAt,The length of the statement  "            return GetBasicResultAt(line' column' CA1024Name' string.Format(FxCopRulesResources.ChangeToAPropertyIfAppropriate' methodName)); " is 129.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1052Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1052Tests.cs,CSharpResult,The length of the statement  "            return GetCSharpResultAt(line' column' StaticTypeRulesDiagnosticAnalyzer.CA1052RuleId' string.Format(FxCopRulesResources.StaticHolderTypeIsNotStatic' objectName)); " is 163.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1052Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1052Tests.cs,BasicResult,The length of the statement  "            return GetBasicResultAt(line' column' StaticTypeRulesDiagnosticAnalyzer.CA1052RuleId' string.Format(FxCopRulesResources.StaticHolderTypeIsNotStatic' objectName)); " is 162.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1053Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1053Tests.cs,CSharpResult,The length of the statement  "            return GetCSharpResultAt(line' column' StaticTypeRulesDiagnosticAnalyzer.CA1053RuleId' string.Format(FxCopRulesResources.StaticHolderTypesShouldNotHaveConstructorsMessage' objectName)); " is 185.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1053Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1053Tests.cs,BasicResult,The length of the statement  "            return GetBasicResultAt(line' column' StaticTypeRulesDiagnosticAnalyzer.CA1053RuleId' string.Format(FxCopRulesResources.StaticHolderTypesShouldNotHaveConstructorsMessage' objectName)); " is 184.
Long Statement,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,CSharp_EnumWithFlagsAttributes_NonSimpleFlags,The length of the statement  "                GetCA2217CSharpResultAt(3' 13' "NonSimpleFlagEnumClass"' "4' 16' 32' 64' 128' 256' 512' 1024' 2048' 4096' 8192' 16384' 32768' 65536' 131072' 262144' 524288' 1048576' 2097152' 4194304' 8388608' 16777216' 33554432' 67108864' 134217728' 268435456' 536870912' 1073741824' 2147483648' 4294967296' 8589934592' 17179869184' 34359738368' 68719476736' 137438953472' 274877906944' 549755813888' 1099511627776' 2199023255552' 4398046511104' 8796093022208' 17592186044416' 35184372088832' 70368744177664' 140737488355328' 281474976710656' 562949953421312' 1125899906842624' 2251799813685248' 4503599627370496' 9007199254740992' 18014398509481984' 36028797018963968' 72057594037927936' 144115188075855872' 288230376151711744' 576460752303423488' 1152921504606846976' 2305843009213693952' 4611686018427387904' 9223372036854775808")' " is 818.
Long Statement,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,VisualBasic_EnumWithFlagsAttributes_NonSimpleFlags,The length of the statement  "                GetCA2217BasicResultAt(3' 13' "NonSimpleFlagEnumClass"' "4' 16' 32' 64' 128' 256' 512' 1024' 2048' 4096' 8192' 16384' 32768' 65536' 131072' 262144' 524288' 1048576' 2097152' 4194304' 8388608' 16777216' 33554432' 67108864' 134217728' 268435456' 536870912' 1073741824' 2147483648' 4294967296' 8589934592' 17179869184' 34359738368' 68719476736' 137438953472' 274877906944' 549755813888' 1099511627776' 2199023255552' 4398046511104' 8796093022208' 17592186044416' 35184372088832' 70368744177664' 140737488355328' 281474976710656' 562949953421312' 1125899906842624' 2251799813685248' 4503599627370496' 9007199254740992' 18014398509481984' 36028797018963968' 72057594037927936' 144115188075855872' 288230376151711744' 576460752303423488' 1152921504606846976' 2305843009213693952' 4611686018427387904' 9223372036854775808")' " is 817.
Long Statement,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,GetCA1027CSharpResultAt,The length of the statement  "            return GetCSharpResultAt(line' column' EnumWithFlagsDiagnosticAnalyzer.RuleIdMarkEnumsWithFlags' string.Format(FxCopRulesResources.MarkEnumsWithFlagsMessage' enumTypeName)); " is 173.
Long Statement,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,GetCA1027BasicResultAt,The length of the statement  "            return GetBasicResultAt(line' column' EnumWithFlagsDiagnosticAnalyzer.RuleIdMarkEnumsWithFlags' string.Format(FxCopRulesResources.MarkEnumsWithFlagsMessage' enumTypeName)); " is 172.
Long Statement,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,GetCA2217CSharpResultAt,The length of the statement  "            return GetCSharpResultAt(line' column' EnumWithFlagsDiagnosticAnalyzer.RuleIdDoNotMarkEnumsWithFlags' string.Format(FxCopRulesResources.DoNotMarkEnumsWithFlagsMessage' enumTypeName' missingValuesString)); " is 204.
Long Statement,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,GetCA2217BasicResultAt,The length of the statement  "            return GetBasicResultAt(line' column' EnumWithFlagsDiagnosticAnalyzer.RuleIdDoNotMarkEnumsWithFlags' string.Format(FxCopRulesResources.DoNotMarkEnumsWithFlagsMessage' enumTypeName' missingValuesString)); " is 203.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestGenericMethods,The length of the statement  "            GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.C.foo()"' "NI.C.foO(int)"' "NI.C.fOo(int)"' "NI.C.FOO<T>(T)")' 4' 18)); " is 130.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestMembers,The length of the statement  "            GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.CASE1.Case1"' "NI.CASE1.CAse1(int)"' "NI.CASE1.CaSe1<T>(T)"' "NI.CASE1.CASe1"' "NI.CASE1.CasE1"' "NI.CASE1.caSE1"' "NI.CASE1.CAsE1")' 4' 18)); " is 201.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,GetCA2002CSharpResultAt,The length of the statement  "            return GetCSharpResultAt(line' column' CA2002RuleName' string.Format(FxCopRulesResources.DoNotLockOnWeakIdentity' typeName)); " is 125.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,GetCA2002BasicResultAt,The length of the statement  "            return GetBasicResultAt(line' column' CA2002RuleName' string.Format(FxCopRulesResources.DoNotLockOnWeakIdentity' typeName)); " is 124.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214SpecialInheritanceCSharp,The length of the statement  "            var project = document.Project.AddMetadataReference(MetadataReference.CreateFromAssembly(typeof(System.Web.UI.Control).Assembly)); " is 130.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214SpecialInheritanceCSharp,The length of the statement  "            project = project.AddMetadataReference(MetadataReference.CreateFromAssembly(typeof(System.Windows.Forms.Control).Assembly)); " is 124.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214SpecialInheritanceBasic,The length of the statement  "            var project = document.Project.AddMetadataReference(MetadataReference.CreateFromAssembly(typeof(System.Web.UI.Control).Assembly)); " is 130.
Long Statement,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214SpecialInheritanceBasic,The length of the statement  "            project = project.AddMetadataReference(MetadataReference.CreateFromAssembly(typeof(System.Windows.Forms.Control).Assembly)); " is 124.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CSharpResult,The length of the statement  "            return GetCSharpResultAt(line' column' CA1060DiagnosticAnalyzer.Rule.Id' CA1060DiagnosticAnalyzer.Rule.MessageFormat.ToString()); " is 129.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,BasicResult,The length of the statement  "            return GetBasicResultAt(line' column' CA1060DiagnosticAnalyzer.Rule.Id' CA1060DiagnosticAnalyzer.Rule.MessageFormat.ToString()); " is 128.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CSharpResult,The length of the statement  "            return GetCSharpResultAt(line' column' CA1309DiagnosticAnalyzer.RuleId' FxCopRulesResources.StringComparisonShouldBeOrdinalOrOrdinalIgnoreCase); " is 144.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,BasicResult,The length of the statement  "            return GetBasicResultAt(line' column' CA1309DiagnosticAnalyzer.RuleId' FxCopRulesResources.StringComparisonShouldBeOrdinalOrOrdinalIgnoreCase); " is 143.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Interoperability,CA2101FixerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CodeFixes\CA2101FixerTests.cs,CA2101FixMarshalAsCSharpTest,The length of the statement  "    private static extern void Foo1([MarshalAs(UnmanagedType.LPStr)] string s' [MarshalAs(UnmanagedType.LPStr)] StringBuilder t); " is 125.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Interoperability,CA2101FixerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CodeFixes\CA2101FixerTests.cs,CA2101FixMarshalAsCSharpTest,The length of the statement  "    private static extern void Foo1([MarshalAs(UnmanagedType.LPWStr)] string s' [MarshalAs(UnmanagedType.LPWStr)] StringBuilder t); " is 127.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Interoperability,CA2101FixerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CodeFixes\CA2101FixerTests.cs,CA2101FixMarshalAsBasicTest,The length of the statement  "    Private Shared Sub Foo1(<MarshalAs(UnmanagedType.LPStr)> s As String' <MarshalAs(UnmanagedType.LPStr)> t As StringBuilder) " is 122.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Interoperability,CA2101FixerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CodeFixes\CA2101FixerTests.cs,CA2101FixMarshalAsBasicTest,The length of the statement  "    Private Shared Sub Foo1(<MarshalAs(UnmanagedType.LPWStr)> s As String' <MarshalAs(UnmanagedType.LPWStr)> t As StringBuilder) " is 124.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleCSharpTest,The length of the statement  "    private static extern void Foo4(StringBuilder s' StringBuilder t); // two StringBuilder parameters' should be only 1 diagnostic " is 127.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleCSharpTestWithScope,The length of the statement  "    private static extern void Foo4(StringBuilder s' StringBuilder t); // two StringBuilder parameters' should be only 1 diagnostic " is 127.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleBasicTest,The length of the statement  "    Private Shared Sub Foo4(s As StringBuilder' t As StringBuilder) ' two StringBuilder parameters' should be only 1 diagnostic " is 123.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleBasicTestWithScope,The length of the statement  "    Private Shared Sub Foo4(s As StringBuilder' t As StringBuilder) ' two StringBuilder parameters' should be only 1 diagnostic " is 123.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleDeclareBasicTest,The length of the statement  "    Private Declare Sub Foo2 Lib ""user32.dll"" (s As String' t As String) ' two string parameters' should be only 1 diagnostic " is 123.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleDeclareBasicTest,The length of the statement  "    Private Declare Function Foo4 Lib ""user32.dll"" (s As StringBuilder' t As StringBuilder) As Integer ' two StringBuilder parameters' should be only 1 diagnostic " is 160.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The length of the statement  "    private static extern void Foo3([MarshalAs(UnmanagedType.LPWStr)] string s' [MarshalAs(UnmanagedType.LPWStr)] string t); " is 120.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The length of the statement  "    private static extern void Foo4([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPWStr)] StringBuilder t); " is 134.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The length of the statement  "    private static extern void Foo9([MarshalAs(UnmanagedType.LPStr)] string s' [MarshalAs(UnmanagedType.LPStr)] string t); // two parameters marshaled as the wrong type " is 164.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The length of the statement  "    private static extern void Foo10([MarshalAs(UnmanagedType.LPStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPStr)] StringBuilder t); " is 133.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledBasicTest,The length of the statement  "    Private Shared Sub Foo4(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPWStr)> t As StringBuilder) " is 131.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledBasicTest,The length of the statement  "    Private Shared Sub Foo9(<MarshalAs(UnmanagedType.LPStr)> s As String' <MarshalAs(UnmanagedType.LPStr)> t As String) ' two parameters marshaled as the wrong type " is 160.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledBasicTest,The length of the statement  "    Private Shared Sub Foo10(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPStr)> t As StringBuilder) " is 130.
Long Statement,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101CharSetCSharpTest,The length of the statement  "    private static extern void Foo5([MarshalAs(UnmanagedTypes.LPStr)] string s); // correct marshaling on method' not on parameter " is 126.
Long Statement,Microsoft.CodeAnalysis.UnitTests.HardeningAnalyzer,HardeningAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\HardeningAnalyzer\HardeningAnalyzerTests.cs,TestTypeParameterNamesCSharp,The length of the statement  "            AnalyzeDocumentCore(GetCSharpDiagnosticAnalyzer()' documentsAndSpan.Item1[0]' diagnosticsBag.Add' null' continueOnAnalyzerException: DiagnosticExtensions.AlwaysCatchAnalyzerExceptions); " is 185.
Long Statement,Microsoft.CodeAnalysis.UnitTests.HardeningAnalyzer,HardeningAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\HardeningAnalyzer\HardeningAnalyzerTests.cs,TestTypeParameterNamesCSharp,The length of the statement  "            Assert.Equal(string.Format("info AD0001: " + AnalyzerDriverResources.AnalyzerThrows' GetCSharpDiagnosticAnalyzer().GetType()' "The method or operation is not implemented.")' " is 173.
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestUsingStructAsEventArgsForOptimizationCSharp,The following statement contains a magic number: VerifyCSharp(@"  public struct SpecialCaseStructEventArgs  {  }    public struct BadArgs  {  }    public class C  {      public event System.EventHandler<SpecialCaseStructEventArgs> E1;      public event System.EventHandler<BadArgs> E2;  }  "'                  GetCA1003CSharpResultAt(13' 47));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestUsingStructAsEventArgsForOptimizationCSharp,The following statement contains a magic number: VerifyCSharp(@"  public struct SpecialCaseStructEventArgs  {  }    public struct BadArgs  {  }    public class C  {      public event System.EventHandler<SpecialCaseStructEventArgs> E1;      public event System.EventHandler<BadArgs> E2;  }  "'                  GetCA1003CSharpResultAt(13' 47));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestUsingStructAsEventArgsForOptimizationBasic,The following statement contains a magic number: VerifyBasic(@"  Public Structure SpecialCaseStructEventArgs  End Structure    Public Structure BadArgs  End Structure    Public Class C      Public Event E1 As System.EventHandler(Of SpecialCaseStructEventArgs)      Public Event E2 As System.EventHandler(Of BadArgs)  End Class  "'                  GetCA1003BasicResultAt(10' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestUsingStructAsEventArgsForOptimizationBasic,The following statement contains a magic number: VerifyBasic(@"  Public Structure SpecialCaseStructEventArgs  End Structure    Public Structure BadArgs  End Structure    Public Class C      Public Event E1 As System.EventHandler(Of SpecialCaseStructEventArgs)      Public Event E2 As System.EventHandler(Of BadArgs)  End Class  "'                  GetCA1003BasicResultAt(10' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestOverrideEvent,The following statement contains a magic number: VerifyCSharp(@"  public delegate void BadHandler();    public class C  {      public virtual event BadHandler E;  }    public class D : C  {      public override event BadHandler E;  }  "'                  GetCA1003CSharpResultAt(6' 37));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestOverrideEvent,The following statement contains a magic number: VerifyCSharp(@"  public delegate void BadHandler();    public class C  {      public virtual event BadHandler E;  }    public class D : C  {      public override event BadHandler E;  }  "'                  GetCA1003CSharpResultAt(6' 37));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestViolatingEventsCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public delegate void BadHandler1();  public delegate int BadHandler2();  public delegate void BadHandler3(object sender);  public delegate void BadHandler4(EventArgs args);  public delegate void BadHandler5(object sender' EventArgs args);    public class C  {      public event BadHandler1 E1;      public event BadHandler2 E2;      public event BadHandler3 E3;      public event BadHandler4 E4;      public event BadHandler5 E5;      public event EventHandler<int> E6;  }  "'                  GetCA1003CSharpResultAt(12' 30)'                  GetCA1003CSharpResultAt(13' 30)'                  GetCA1003CSharpResultAt(14' 30)'                  GetCA1003CSharpResultAt(15' 30)'                  GetCA1003CSharpResultAt(16' 30)'                  GetCA1003CSharpResultAt(17' 36));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestViolatingEventsCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public delegate void BadHandler1();  public delegate int BadHandler2();  public delegate void BadHandler3(object sender);  public delegate void BadHandler4(EventArgs args);  public delegate void BadHandler5(object sender' EventArgs args);    public class C  {      public event BadHandler1 E1;      public event BadHandler2 E2;      public event BadHandler3 E3;      public event BadHandler4 E4;      public event BadHandler5 E5;      public event EventHandler<int> E6;  }  "'                  GetCA1003CSharpResultAt(12' 30)'                  GetCA1003CSharpResultAt(13' 30)'                  GetCA1003CSharpResultAt(14' 30)'                  GetCA1003CSharpResultAt(15' 30)'                  GetCA1003CSharpResultAt(16' 30)'                  GetCA1003CSharpResultAt(17' 36));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestViolatingEventsCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public delegate void BadHandler1();  public delegate int BadHandler2();  public delegate void BadHandler3(object sender);  public delegate void BadHandler4(EventArgs args);  public delegate void BadHandler5(object sender' EventArgs args);    public class C  {      public event BadHandler1 E1;      public event BadHandler2 E2;      public event BadHandler3 E3;      public event BadHandler4 E4;      public event BadHandler5 E5;      public event EventHandler<int> E6;  }  "'                  GetCA1003CSharpResultAt(12' 30)'                  GetCA1003CSharpResultAt(13' 30)'                  GetCA1003CSharpResultAt(14' 30)'                  GetCA1003CSharpResultAt(15' 30)'                  GetCA1003CSharpResultAt(16' 30)'                  GetCA1003CSharpResultAt(17' 36));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestViolatingEventsCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public delegate void BadHandler1();  public delegate int BadHandler2();  public delegate void BadHandler3(object sender);  public delegate void BadHandler4(EventArgs args);  public delegate void BadHandler5(object sender' EventArgs args);    public class C  {      public event BadHandler1 E1;      public event BadHandler2 E2;      public event BadHandler3 E3;      public event BadHandler4 E4;      public event BadHandler5 E5;      public event EventHandler<int> E6;  }  "'                  GetCA1003CSharpResultAt(12' 30)'                  GetCA1003CSharpResultAt(13' 30)'                  GetCA1003CSharpResultAt(14' 30)'                  GetCA1003CSharpResultAt(15' 30)'                  GetCA1003CSharpResultAt(16' 30)'                  GetCA1003CSharpResultAt(17' 36));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestViolatingEventsCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public delegate void BadHandler1();  public delegate int BadHandler2();  public delegate void BadHandler3(object sender);  public delegate void BadHandler4(EventArgs args);  public delegate void BadHandler5(object sender' EventArgs args);    public class C  {      public event BadHandler1 E1;      public event BadHandler2 E2;      public event BadHandler3 E3;      public event BadHandler4 E4;      public event BadHandler5 E5;      public event EventHandler<int> E6;  }  "'                  GetCA1003CSharpResultAt(12' 30)'                  GetCA1003CSharpResultAt(13' 30)'                  GetCA1003CSharpResultAt(14' 30)'                  GetCA1003CSharpResultAt(15' 30)'                  GetCA1003CSharpResultAt(16' 30)'                  GetCA1003CSharpResultAt(17' 36));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestViolatingEventsCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public delegate void BadHandler1();  public delegate int BadHandler2();  public delegate void BadHandler3(object sender);  public delegate void BadHandler4(EventArgs args);  public delegate void BadHandler5(object sender' EventArgs args);    public class C  {      public event BadHandler1 E1;      public event BadHandler2 E2;      public event BadHandler3 E3;      public event BadHandler4 E4;      public event BadHandler5 E5;      public event EventHandler<int> E6;  }  "'                  GetCA1003CSharpResultAt(12' 30)'                  GetCA1003CSharpResultAt(13' 30)'                  GetCA1003CSharpResultAt(14' 30)'                  GetCA1003CSharpResultAt(15' 30)'                  GetCA1003CSharpResultAt(16' 30)'                  GetCA1003CSharpResultAt(17' 36));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestViolatingEventsCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public delegate void BadHandler1();  public delegate int BadHandler2();  public delegate void BadHandler3(object sender);  public delegate void BadHandler4(EventArgs args);  public delegate void BadHandler5(object sender' EventArgs args);    public class C  {      public event BadHandler1 E1;      public event BadHandler2 E2;      public event BadHandler3 E3;      public event BadHandler4 E4;      public event BadHandler5 E5;      public event EventHandler<int> E6;  }  "'                  GetCA1003CSharpResultAt(12' 30)'                  GetCA1003CSharpResultAt(13' 30)'                  GetCA1003CSharpResultAt(14' 30)'                  GetCA1003CSharpResultAt(15' 30)'                  GetCA1003CSharpResultAt(16' 30)'                  GetCA1003CSharpResultAt(17' 36));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestViolatingEventsCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public delegate void BadHandler1();  public delegate int BadHandler2();  public delegate void BadHandler3(object sender);  public delegate void BadHandler4(EventArgs args);  public delegate void BadHandler5(object sender' EventArgs args);    public class C  {      public event BadHandler1 E1;      public event BadHandler2 E2;      public event BadHandler3 E3;      public event BadHandler4 E4;      public event BadHandler5 E5;      public event EventHandler<int> E6;  }  "'                  GetCA1003CSharpResultAt(12' 30)'                  GetCA1003CSharpResultAt(13' 30)'                  GetCA1003CSharpResultAt(14' 30)'                  GetCA1003CSharpResultAt(15' 30)'                  GetCA1003CSharpResultAt(16' 30)'                  GetCA1003CSharpResultAt(17' 36));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestViolatingEventsCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public delegate void BadHandler1();  public delegate int BadHandler2();  public delegate void BadHandler3(object sender);  public delegate void BadHandler4(EventArgs args);  public delegate void BadHandler5(object sender' EventArgs args);    public class C  {      public event BadHandler1 E1;      public event BadHandler2 E2;      public event BadHandler3 E3;      public event BadHandler4 E4;      public event BadHandler5 E5;      public event EventHandler<int> E6;  }  "'                  GetCA1003CSharpResultAt(12' 30)'                  GetCA1003CSharpResultAt(13' 30)'                  GetCA1003CSharpResultAt(14' 30)'                  GetCA1003CSharpResultAt(15' 30)'                  GetCA1003CSharpResultAt(16' 30)'                  GetCA1003CSharpResultAt(17' 36));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestViolatingEventsCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public delegate void BadHandler1();  public delegate int BadHandler2();  public delegate void BadHandler3(object sender);  public delegate void BadHandler4(EventArgs args);  public delegate void BadHandler5(object sender' EventArgs args);    public class C  {      public event BadHandler1 E1;      public event BadHandler2 E2;      public event BadHandler3 E3;      public event BadHandler4 E4;      public event BadHandler5 E5;      public event EventHandler<int> E6;  }  "'                  GetCA1003CSharpResultAt(12' 30)'                  GetCA1003CSharpResultAt(13' 30)'                  GetCA1003CSharpResultAt(14' 30)'                  GetCA1003CSharpResultAt(15' 30)'                  GetCA1003CSharpResultAt(16' 30)'                  GetCA1003CSharpResultAt(17' 36));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestViolatingEventsCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public delegate void BadHandler1();  public delegate int BadHandler2();  public delegate void BadHandler3(object sender);  public delegate void BadHandler4(EventArgs args);  public delegate void BadHandler5(object sender' EventArgs args);    public class C  {      public event BadHandler1 E1;      public event BadHandler2 E2;      public event BadHandler3 E3;      public event BadHandler4 E4;      public event BadHandler5 E5;      public event EventHandler<int> E6;  }  "'                  GetCA1003CSharpResultAt(12' 30)'                  GetCA1003CSharpResultAt(13' 30)'                  GetCA1003CSharpResultAt(14' 30)'                  GetCA1003CSharpResultAt(15' 30)'                  GetCA1003CSharpResultAt(16' 30)'                  GetCA1003CSharpResultAt(17' 36));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestViolatingEventsCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public delegate void BadHandler1();  public delegate int BadHandler2();  public delegate void BadHandler3(object sender);  public delegate void BadHandler4(EventArgs args);  public delegate void BadHandler5(object sender' EventArgs args);    public class C  {      public event BadHandler1 E1;      public event BadHandler2 E2;      public event BadHandler3 E3;      public event BadHandler4 E4;      public event BadHandler5 E5;      public event EventHandler<int> E6;  }  "'                  GetCA1003CSharpResultAt(12' 30)'                  GetCA1003CSharpResultAt(13' 30)'                  GetCA1003CSharpResultAt(14' 30)'                  GetCA1003CSharpResultAt(15' 30)'                  GetCA1003CSharpResultAt(16' 30)'                  GetCA1003CSharpResultAt(17' 36));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestViolatingEventsBasic,The following statement contains a magic number: VerifyBasic(@"  Public Delegate Sub BadHandler(sender As Object' args As System.EventArgs)    Public Class C      Public Event E1 As BadHandler      Public Event E2(sender As Object' e As System.EventArgs)      Public Event E3(sender As Object' e As MyEventArgs)  End Class    Public Structure MyEventArgs  End Structure  "'                  GetCA1003BasicResultAt(5' 18)'                  GetCA1003BasicResultAt(6' 18)'                  GetCA1003BasicResultAt(7' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestViolatingEventsBasic,The following statement contains a magic number: VerifyBasic(@"  Public Delegate Sub BadHandler(sender As Object' args As System.EventArgs)    Public Class C      Public Event E1 As BadHandler      Public Event E2(sender As Object' e As System.EventArgs)      Public Event E3(sender As Object' e As MyEventArgs)  End Class    Public Structure MyEventArgs  End Structure  "'                  GetCA1003BasicResultAt(5' 18)'                  GetCA1003BasicResultAt(6' 18)'                  GetCA1003BasicResultAt(7' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestViolatingEventsBasic,The following statement contains a magic number: VerifyBasic(@"  Public Delegate Sub BadHandler(sender As Object' args As System.EventArgs)    Public Class C      Public Event E1 As BadHandler      Public Event E2(sender As Object' e As System.EventArgs)      Public Event E3(sender As Object' e As MyEventArgs)  End Class    Public Structure MyEventArgs  End Structure  "'                  GetCA1003BasicResultAt(5' 18)'                  GetCA1003BasicResultAt(6' 18)'                  GetCA1003BasicResultAt(7' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestViolatingEventsBasic,The following statement contains a magic number: VerifyBasic(@"  Public Delegate Sub BadHandler(sender As Object' args As System.EventArgs)    Public Class C      Public Event E1 As BadHandler      Public Event E2(sender As Object' e As System.EventArgs)      Public Event E3(sender As Object' e As MyEventArgs)  End Class    Public Structure MyEventArgs  End Structure  "'                  GetCA1003BasicResultAt(5' 18)'                  GetCA1003BasicResultAt(6' 18)'                  GetCA1003BasicResultAt(7' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestViolatingEventsBasic,The following statement contains a magic number: VerifyBasic(@"  Public Delegate Sub BadHandler(sender As Object' args As System.EventArgs)    Public Class C      Public Event E1 As BadHandler      Public Event E2(sender As Object' e As System.EventArgs)      Public Event E3(sender As Object' e As MyEventArgs)  End Class    Public Structure MyEventArgs  End Structure  "'                  GetCA1003BasicResultAt(5' 18)'                  GetCA1003BasicResultAt(6' 18)'                  GetCA1003BasicResultAt(7' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1003Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1003Tests.cs,TestViolatingEventsBasic,The following statement contains a magic number: VerifyBasic(@"  Public Delegate Sub BadHandler(sender As Object' args As System.EventArgs)    Public Class C      Public Event E1 As BadHandler      Public Event E2(sender As Object' e As System.EventArgs)      Public Event E3(sender As Object' e As MyEventArgs)  End Class    Public Structure MyEventArgs  End Structure  "'                  GetCA1003BasicResultAt(5' 18)'                  GetCA1003BasicResultAt(6' 18)'                  GetCA1003BasicResultAt(7' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,CSharp_EnumsShouldZeroValueFlagsRename,The following statement contains a magic number: VerifyCSharp(code'                  GetCSharpResultAt(5' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetCSharpResultAt(12' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetCSharpResultAt(19' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3)'                  GetCSharpResultAt(26' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage4));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,CSharp_EnumsShouldZeroValueFlagsRename,The following statement contains a magic number: VerifyCSharp(code'                  GetCSharpResultAt(5' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetCSharpResultAt(12' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetCSharpResultAt(19' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3)'                  GetCSharpResultAt(26' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage4));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,CSharp_EnumsShouldZeroValueFlagsRename,The following statement contains a magic number: VerifyCSharp(code'                  GetCSharpResultAt(5' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetCSharpResultAt(12' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetCSharpResultAt(19' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3)'                  GetCSharpResultAt(26' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage4));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,CSharp_EnumsShouldZeroValueFlagsRename,The following statement contains a magic number: VerifyCSharp(code'                  GetCSharpResultAt(5' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetCSharpResultAt(12' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetCSharpResultAt(19' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3)'                  GetCSharpResultAt(26' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage4));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,CSharp_EnumsShouldZeroValueFlagsRename,The following statement contains a magic number: VerifyCSharp(code'                  GetCSharpResultAt(5' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetCSharpResultAt(12' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetCSharpResultAt(19' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3)'                  GetCSharpResultAt(26' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage4));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,CSharp_EnumsShouldZeroValueFlagsRename,The following statement contains a magic number: VerifyCSharp(code'                  GetCSharpResultAt(5' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetCSharpResultAt(12' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetCSharpResultAt(19' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3)'                  GetCSharpResultAt(26' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage4));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,CSharp_EnumsShouldZeroValueFlagsRename,The following statement contains a magic number: VerifyCSharp(code'                  GetCSharpResultAt(5' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetCSharpResultAt(12' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetCSharpResultAt(19' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3)'                  GetCSharpResultAt(26' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage4));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,CSharp_EnumsShouldZeroValueFlagsRename,The following statement contains a magic number: VerifyCSharp(code'                  GetCSharpResultAt(5' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetCSharpResultAt(12' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetCSharpResultAt(19' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3)'                  GetCSharpResultAt(26' 5' CA1008DiagnosticAnalyzer.RuleId' expectedMessage4));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,CSharp_EnumsShouldZeroValueFlagsMultipleZero,The following statement contains a magic number: VerifyCSharp(code'                  GetCSharpResultAt(3' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetCSharpResultAt(10' 15' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,CSharp_EnumsShouldZeroValueFlagsMultipleZero,The following statement contains a magic number: VerifyCSharp(code'                  GetCSharpResultAt(3' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetCSharpResultAt(10' 15' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,CSharp_EnumsShouldZeroValueFlagsMultipleZero,The following statement contains a magic number: VerifyCSharp(code'                  GetCSharpResultAt(3' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetCSharpResultAt(10' 15' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,CSharp_EnumsShouldZeroValueFlagsMultipleZero,The following statement contains a magic number: VerifyCSharp(code'                  GetCSharpResultAt(3' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetCSharpResultAt(10' 15' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,CSharp_EnumsShouldZeroValueFlagsMultipleZeroWithScope,The following statement contains a magic number: VerifyCSharp(code'                  GetCSharpResultAt(10' 15' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,CSharp_EnumsShouldZeroValueFlagsMultipleZeroWithScope,The following statement contains a magic number: VerifyCSharp(code'                  GetCSharpResultAt(10' 15' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,CSharp_EnumsShouldZeroValueNotFlagsNoZeroValue,The following statement contains a magic number: VerifyCSharp(code'                  GetCSharpResultAt(2' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetCSharpResultAt(7' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,CSharp_EnumsShouldZeroValueNotFlagsNoZeroValue,The following statement contains a magic number: VerifyCSharp(code'                  GetCSharpResultAt(2' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetCSharpResultAt(7' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,CSharp_EnumsShouldZeroValueNotFlagsNoZeroValue,The following statement contains a magic number: VerifyCSharp(code'                  GetCSharpResultAt(2' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetCSharpResultAt(7' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,CSharp_EnumsShouldZeroValueNotFlagsNoZeroValue,The following statement contains a magic number: VerifyCSharp(code'                  GetCSharpResultAt(2' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetCSharpResultAt(7' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,CSharp_EnumsShouldZeroValueNotFlagsNoZeroValueWithScope,The following statement contains a magic number: VerifyCSharp(code'                  GetCSharpResultAt(9' 18' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,CSharp_EnumsShouldZeroValueNotFlagsNoZeroValueWithScope,The following statement contains a magic number: VerifyCSharp(code'                  GetCSharpResultAt(9' 18' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsRename,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(4' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(10' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(16' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsRename,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(4' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(10' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(16' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsRename,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(4' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(10' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(16' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsRename,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(4' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(10' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(16' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsRename,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(4' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(10' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(16' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsRename,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(4' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(10' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(16' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsRenameScope,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(10' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(16' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsRenameScope,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(10' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(16' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsRenameScope,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(10' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(16' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsRenameScope,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(10' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(16' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsRename_AttributeListHasTrivia,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(4' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(10' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(16' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsRename_AttributeListHasTrivia,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(4' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(10' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(16' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsRename_AttributeListHasTrivia,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(4' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(10' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(16' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsRename_AttributeListHasTrivia,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(4' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(10' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(16' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsRename_AttributeListHasTrivia,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(4' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(10' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(16' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsRename_AttributeListHasTrivia,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(4' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(10' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(16' 2' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsMultipleZero,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(3' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(9' 13' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(15' 13' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsMultipleZero,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(3' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(9' 13' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(15' 13' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsMultipleZero,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(3' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(9' 13' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(15' 13' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsMultipleZero,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(3' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(9' 13' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(15' 13' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsMultipleZero,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(3' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(9' 13' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(15' 13' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueFlagsMultipleZero,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(3' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(9' 13' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2)'                  GetBasicResultAt(15' 13' CA1008DiagnosticAnalyzer.RuleId' expectedMessage3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueNotFlagsNoZeroValue,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(2' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(6' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueNotFlagsNoZeroValue,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(2' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(6' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueNotFlagsNoZeroValue,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(2' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(6' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueNotFlagsNoZeroValue,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(2' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage1)'                  GetBasicResultAt(6' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueNotFlagsNoZeroValueWithScope,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(6' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1008Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1008Tests.cs,VisualBasic_EnumsShouldZeroValueNotFlagsNoZeroValueWithScope,The following statement contains a magic number: VerifyBasic(code'                  GetBasicResultAt(6' 14' CA1008DiagnosticAnalyzer.RuleId' expectedMessage2));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1012Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1012Tests.cs,TestCSPublicAbstractClass,The following statement contains a magic number: VerifyCSharp(code' GetCA1012CSharpResultAt(2' 23' "C"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1012Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1012Tests.cs,TestCSPublicAbstractClass,The following statement contains a magic number: VerifyCSharp(code' GetCA1012CSharpResultAt(2' 23' "C"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1012Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1012Tests.cs,TestVBPublicAbstractClass,The following statement contains a magic number: VerifyBasic(code' GetCA1012BasicResultAt(2' 26' "C"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1012Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1012Tests.cs,TestVBPublicAbstractClass,The following statement contains a magic number: VerifyBasic(code' GetCA1012BasicResultAt(2' 26' "C"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1012Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1012Tests.cs,TestCSInternalAbstractClass,The following statement contains a magic number: VerifyCSharp(code' GetCA1012CSharpResultAt(2' 16' "C"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1012Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1012Tests.cs,TestCSInternalAbstractClass,The following statement contains a magic number: VerifyCSharp(code' GetCA1012CSharpResultAt(2' 16' "C"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1012Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1012Tests.cs,TestVBInternalAbstractClass,The following statement contains a magic number: VerifyBasic(code' GetCA1012BasicResultAt(2' 19' "C"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1012Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1012Tests.cs,TestVBInternalAbstractClass,The following statement contains a magic number: VerifyBasic(code' GetCA1012BasicResultAt(2' 19' "C"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1012Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1012Tests.cs,TestCSNestedAbstractClassWithPublicConstructor1,The following statement contains a magic number: VerifyCSharp(code' GetCA1012CSharpResultAt(4' 20' "D"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1012Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1012Tests.cs,TestCSNestedAbstractClassWithPublicConstructor1,The following statement contains a magic number: VerifyCSharp(code' GetCA1012CSharpResultAt(4' 20' "D"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1012Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1012Tests.cs,TestVBNestedAbstractClassWithPublicConstructor1,The following statement contains a magic number: VerifyBasic(code' GetCA1012BasicResultAt(3' 23' "D"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1012Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1012Tests.cs,TestVBNestedAbstractClassWithPublicConstructor1,The following statement contains a magic number: VerifyBasic(code' GetCA1012BasicResultAt(3' 23' "D"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1012Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1012Tests.cs,TestNestedAbstractClassWithPublicConstructor2,The following statement contains a magic number: VerifyCSharp(code' GetCA1012CSharpResultAt(4' 27' "D"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1012Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1012Tests.cs,TestNestedAbstractClassWithPublicConstructor2,The following statement contains a magic number: VerifyCSharp(code' GetCA1012CSharpResultAt(4' 27' "D"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1012Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1012Tests.cs,TestVBNestedAbstractClassWithPublicConstructor2,The following statement contains a magic number: VerifyBasic(code' GetCA1012BasicResultAt(3' 39' "D"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1012Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1012Tests.cs,TestVBNestedAbstractClassWithPublicConstructor2,The following statement contains a magic number: VerifyBasic(code' GetCA1012BasicResultAt(3' 39' "D"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1012Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1012Tests.cs,TestNestedAbstractClassWithPublicConstructor3,The following statement contains a magic number: VerifyCSharp(code' GetCA1012CSharpResultAt(4' 27' "D"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1012Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1012Tests.cs,TestNestedAbstractClassWithPublicConstructor3,The following statement contains a magic number: VerifyCSharp(code' GetCA1012CSharpResultAt(4' 27' "D"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1012Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1012Tests.cs,TestVBNestedAbstractClassWithPublicConstructor3,The following statement contains a magic number: VerifyBasic(code' GetCA1012BasicResultAt(3' 29' "D"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1012Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1012Tests.cs,TestVBNestedAbstractClassWithPublicConstructor3,The following statement contains a magic number: VerifyBasic(code' GetCA1012BasicResultAt(3' 29' "D"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1018Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1018Tests.cs,TestCSSimpleAttributeClass,The following statement contains a magic number: VerifyCSharp(@"  using System;    class C : Attribute  {  }  "' GetCA1018CSharpResultAt(4' 7' "C"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1018Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1018Tests.cs,TestCSSimpleAttributeClass,The following statement contains a magic number: VerifyCSharp(@"  using System;    class C : Attribute  {  }  "' GetCA1018CSharpResultAt(4' 7' "C"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1018Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1018Tests.cs,TestCSInheritedAttributeClass,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.Method)]  class C : Attribute  {  }  class D : C  {  }  "' GetCA1018CSharpResultAt(8' 7' "D"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1018Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1018Tests.cs,TestCSInheritedAttributeClass,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.Method)]  class C : Attribute  {  }  class D : C  {  }  "' GetCA1018CSharpResultAt(8' 7' "D"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1018Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1018Tests.cs,TestVBSimpleAttributeClass,The following statement contains a magic number: VerifyBasic(@"  Imports System    Class C       Inherits Attribute  End Class  "' GetCA1018BasicResultAt(4' 7' "C"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1018Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1018Tests.cs,TestVBSimpleAttributeClass,The following statement contains a magic number: VerifyBasic(@"  Imports System    Class C       Inherits Attribute  End Class  "' GetCA1018BasicResultAt(4' 7' "C"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1018Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1018Tests.cs,TestVBInheritedAttributeClass,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.Method)>  Class C       Inherits Attribute  End Class  Class D      Inherits C  End Class  "' GetCA1018BasicResultAt(8' 7' "D"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1018Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1018Tests.cs,TestVBInheritedAttributeClass,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.Method)>  Class C       Inherits Attribute  End Class  Class D      Inherits C  End Class  "' GetCA1018BasicResultAt(8' 7' "D"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_GeneralTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  public sealed class NoAccessorTestAttribute : Attribute  {      private string m_name;        public NoAccessorTestAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class SetterOnlyTestAttribute : Attribute  {      private string m_name;        public SetterOnlyTestAttribute(string name)      {          m_name = name;      }        public string Name      {          set { m_name = value; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class ArgWithSetterTestAttribute : Attribute  {      private string m_name;      private char m_firstInitial;        public ArgWithSetterTestAttribute(string name)      {          m_name = name;          m_firstInitial = name[0];      }        public string Name      {          get { return m_name; }          set { m_name = value; }      }        public char FirstInitial      {          get { return m_firstInitial; }          set { m_firstInitial = value; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 43' "name"' "NoAccessorTestAttribute")'              GetCA1019CSharpDefaultResultAt(20' 43' "name"' "SetterOnlyTestAttribute")'              GetCA1019CSharpRemoveSetterResultAt(27' 9' "Name"' "name")'              GetCA1019CSharpRemoveSetterResultAt(46' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_GeneralTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  public sealed class NoAccessorTestAttribute : Attribute  {      private string m_name;        public NoAccessorTestAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class SetterOnlyTestAttribute : Attribute  {      private string m_name;        public SetterOnlyTestAttribute(string name)      {          m_name = name;      }        public string Name      {          set { m_name = value; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class ArgWithSetterTestAttribute : Attribute  {      private string m_name;      private char m_firstInitial;        public ArgWithSetterTestAttribute(string name)      {          m_name = name;          m_firstInitial = name[0];      }        public string Name      {          get { return m_name; }          set { m_name = value; }      }        public char FirstInitial      {          get { return m_firstInitial; }          set { m_firstInitial = value; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 43' "name"' "NoAccessorTestAttribute")'              GetCA1019CSharpDefaultResultAt(20' 43' "name"' "SetterOnlyTestAttribute")'              GetCA1019CSharpRemoveSetterResultAt(27' 9' "Name"' "name")'              GetCA1019CSharpRemoveSetterResultAt(46' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_GeneralTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  public sealed class NoAccessorTestAttribute : Attribute  {      private string m_name;        public NoAccessorTestAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class SetterOnlyTestAttribute : Attribute  {      private string m_name;        public SetterOnlyTestAttribute(string name)      {          m_name = name;      }        public string Name      {          set { m_name = value; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class ArgWithSetterTestAttribute : Attribute  {      private string m_name;      private char m_firstInitial;        public ArgWithSetterTestAttribute(string name)      {          m_name = name;          m_firstInitial = name[0];      }        public string Name      {          get { return m_name; }          set { m_name = value; }      }        public char FirstInitial      {          get { return m_firstInitial; }          set { m_firstInitial = value; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 43' "name"' "NoAccessorTestAttribute")'              GetCA1019CSharpDefaultResultAt(20' 43' "name"' "SetterOnlyTestAttribute")'              GetCA1019CSharpRemoveSetterResultAt(27' 9' "Name"' "name")'              GetCA1019CSharpRemoveSetterResultAt(46' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_GeneralTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  public sealed class NoAccessorTestAttribute : Attribute  {      private string m_name;        public NoAccessorTestAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class SetterOnlyTestAttribute : Attribute  {      private string m_name;        public SetterOnlyTestAttribute(string name)      {          m_name = name;      }        public string Name      {          set { m_name = value; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class ArgWithSetterTestAttribute : Attribute  {      private string m_name;      private char m_firstInitial;        public ArgWithSetterTestAttribute(string name)      {          m_name = name;          m_firstInitial = name[0];      }        public string Name      {          get { return m_name; }          set { m_name = value; }      }        public char FirstInitial      {          get { return m_firstInitial; }          set { m_firstInitial = value; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 43' "name"' "NoAccessorTestAttribute")'              GetCA1019CSharpDefaultResultAt(20' 43' "name"' "SetterOnlyTestAttribute")'              GetCA1019CSharpRemoveSetterResultAt(27' 9' "Name"' "name")'              GetCA1019CSharpRemoveSetterResultAt(46' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_GeneralTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  public sealed class NoAccessorTestAttribute : Attribute  {      private string m_name;        public NoAccessorTestAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class SetterOnlyTestAttribute : Attribute  {      private string m_name;        public SetterOnlyTestAttribute(string name)      {          m_name = name;      }        public string Name      {          set { m_name = value; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class ArgWithSetterTestAttribute : Attribute  {      private string m_name;      private char m_firstInitial;        public ArgWithSetterTestAttribute(string name)      {          m_name = name;          m_firstInitial = name[0];      }        public string Name      {          get { return m_name; }          set { m_name = value; }      }        public char FirstInitial      {          get { return m_firstInitial; }          set { m_firstInitial = value; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 43' "name"' "NoAccessorTestAttribute")'              GetCA1019CSharpDefaultResultAt(20' 43' "name"' "SetterOnlyTestAttribute")'              GetCA1019CSharpRemoveSetterResultAt(27' 9' "Name"' "name")'              GetCA1019CSharpRemoveSetterResultAt(46' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_GeneralTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  public sealed class NoAccessorTestAttribute : Attribute  {      private string m_name;        public NoAccessorTestAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class SetterOnlyTestAttribute : Attribute  {      private string m_name;        public SetterOnlyTestAttribute(string name)      {          m_name = name;      }        public string Name      {          set { m_name = value; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class ArgWithSetterTestAttribute : Attribute  {      private string m_name;      private char m_firstInitial;        public ArgWithSetterTestAttribute(string name)      {          m_name = name;          m_firstInitial = name[0];      }        public string Name      {          get { return m_name; }          set { m_name = value; }      }        public char FirstInitial      {          get { return m_firstInitial; }          set { m_firstInitial = value; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 43' "name"' "NoAccessorTestAttribute")'              GetCA1019CSharpDefaultResultAt(20' 43' "name"' "SetterOnlyTestAttribute")'              GetCA1019CSharpRemoveSetterResultAt(27' 9' "Name"' "name")'              GetCA1019CSharpRemoveSetterResultAt(46' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_GeneralTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  public sealed class NoAccessorTestAttribute : Attribute  {      private string m_name;        public NoAccessorTestAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class SetterOnlyTestAttribute : Attribute  {      private string m_name;        public SetterOnlyTestAttribute(string name)      {          m_name = name;      }        public string Name      {          set { m_name = value; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class ArgWithSetterTestAttribute : Attribute  {      private string m_name;      private char m_firstInitial;        public ArgWithSetterTestAttribute(string name)      {          m_name = name;          m_firstInitial = name[0];      }        public string Name      {          get { return m_name; }          set { m_name = value; }      }        public char FirstInitial      {          get { return m_firstInitial; }          set { m_firstInitial = value; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 43' "name"' "NoAccessorTestAttribute")'              GetCA1019CSharpDefaultResultAt(20' 43' "name"' "SetterOnlyTestAttribute")'              GetCA1019CSharpRemoveSetterResultAt(27' 9' "Name"' "name")'              GetCA1019CSharpRemoveSetterResultAt(46' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_GeneralTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  public sealed class NoAccessorTestAttribute : Attribute  {      private string m_name;        public NoAccessorTestAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class SetterOnlyTestAttribute : Attribute  {      private string m_name;        public SetterOnlyTestAttribute(string name)      {          m_name = name;      }        public string Name      {          set { m_name = value; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class ArgWithSetterTestAttribute : Attribute  {      private string m_name;      private char m_firstInitial;        public ArgWithSetterTestAttribute(string name)      {          m_name = name;          m_firstInitial = name[0];      }        public string Name      {          get { return m_name; }          set { m_name = value; }      }        public char FirstInitial      {          get { return m_firstInitial; }          set { m_firstInitial = value; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 43' "name"' "NoAccessorTestAttribute")'              GetCA1019CSharpDefaultResultAt(20' 43' "name"' "SetterOnlyTestAttribute")'              GetCA1019CSharpRemoveSetterResultAt(27' 9' "Name"' "name")'              GetCA1019CSharpRemoveSetterResultAt(46' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_GeneralTestWithScope,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  public sealed class NoAccessorTestAttribute : Attribute  {      private string m_name;        public NoAccessorTestAttribute(string name)      {          m_name = name;      }  }    [|[AttributeUsage(AttributeTargets.All)]  public sealed class SetterOnlyTestAttribute : Attribute  {      private string m_name;        public SetterOnlyTestAttribute(string name)      {          m_name = name;      }        public string Name      {          set { m_name = value; }      }  }|]    [AttributeUsage(AttributeTargets.All)]  public sealed class ArgWithSetterTestAttribute : Attribute  {      private string m_name;      private char m_firstInitial;        public ArgWithSetterTestAttribute(string name)      {          m_name = name;          m_firstInitial = name[0];      }        public string Name      {          get { return m_name; }          set { m_name = value; }      }        public char FirstInitial      {          get { return m_firstInitial; }          set { m_firstInitial = value; }      }  }  "'              GetCA1019CSharpDefaultResultAt(20' 43' "name"' "SetterOnlyTestAttribute")'              GetCA1019CSharpRemoveSetterResultAt(27' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_GeneralTestWithScope,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  public sealed class NoAccessorTestAttribute : Attribute  {      private string m_name;        public NoAccessorTestAttribute(string name)      {          m_name = name;      }  }    [|[AttributeUsage(AttributeTargets.All)]  public sealed class SetterOnlyTestAttribute : Attribute  {      private string m_name;        public SetterOnlyTestAttribute(string name)      {          m_name = name;      }        public string Name      {          set { m_name = value; }      }  }|]    [AttributeUsage(AttributeTargets.All)]  public sealed class ArgWithSetterTestAttribute : Attribute  {      private string m_name;      private char m_firstInitial;        public ArgWithSetterTestAttribute(string name)      {          m_name = name;          m_firstInitial = name[0];      }        public string Name      {          get { return m_name; }          set { m_name = value; }      }        public char FirstInitial      {          get { return m_firstInitial; }          set { m_firstInitial = value; }      }  }  "'              GetCA1019CSharpDefaultResultAt(20' 43' "name"' "SetterOnlyTestAttribute")'              GetCA1019CSharpRemoveSetterResultAt(27' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_GeneralTestWithScope,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  public sealed class NoAccessorTestAttribute : Attribute  {      private string m_name;        public NoAccessorTestAttribute(string name)      {          m_name = name;      }  }    [|[AttributeUsage(AttributeTargets.All)]  public sealed class SetterOnlyTestAttribute : Attribute  {      private string m_name;        public SetterOnlyTestAttribute(string name)      {          m_name = name;      }        public string Name      {          set { m_name = value; }      }  }|]    [AttributeUsage(AttributeTargets.All)]  public sealed class ArgWithSetterTestAttribute : Attribute  {      private string m_name;      private char m_firstInitial;        public ArgWithSetterTestAttribute(string name)      {          m_name = name;          m_firstInitial = name[0];      }        public string Name      {          get { return m_name; }          set { m_name = value; }      }        public char FirstInitial      {          get { return m_firstInitial; }          set { m_firstInitial = value; }      }  }  "'              GetCA1019CSharpDefaultResultAt(20' 43' "name"' "SetterOnlyTestAttribute")'              GetCA1019CSharpRemoveSetterResultAt(27' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_GeneralTestWithScope,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  public sealed class NoAccessorTestAttribute : Attribute  {      private string m_name;        public NoAccessorTestAttribute(string name)      {          m_name = name;      }  }    [|[AttributeUsage(AttributeTargets.All)]  public sealed class SetterOnlyTestAttribute : Attribute  {      private string m_name;        public SetterOnlyTestAttribute(string name)      {          m_name = name;      }        public string Name      {          set { m_name = value; }      }  }|]    [AttributeUsage(AttributeTargets.All)]  public sealed class ArgWithSetterTestAttribute : Attribute  {      private string m_name;      private char m_firstInitial;        public ArgWithSetterTestAttribute(string name)      {          m_name = name;          m_firstInitial = name[0];      }        public string Name      {          get { return m_name; }          set { m_name = value; }      }        public char FirstInitial      {          get { return m_firstInitial; }          set { m_firstInitial = value; }      }  }  "'              GetCA1019CSharpDefaultResultAt(20' 43' "name"' "SetterOnlyTestAttribute")'              GetCA1019CSharpRemoveSetterResultAt(27' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_GeneralTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class NoAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class SetterOnlyTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public WriteOnly Property Name() As String  		Set  			m_name = value  		End Set  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class ArgWithSetterTestAttribute  	Inherits Attribute  	Private m_name As String  	Private m_firstInitial As Char    	Public Sub New(name As String)  		m_name = name  		m_firstInitial = name(0)  	End Sub    	Public Property Name() As String  		Get  			Return m_name  		End Get  		Set  			m_name = value  		End Set  	End Property    	Public Property FirstInitial() As Char  		Get  			Return m_firstInitial  		End Get  		Set  			m_firstInitial = value  		End Set  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "NoAccessorTestAttribute")'              GetCA1019BasicDefaultResultAt(19' 17' "name"' "SetterOnlyTestAttribute")'              GetCA1019BasicRemoveSetterResultAt(24' 3' "Name"' "name")'              GetCA1019BasicRemoveSetterResultAt(45' 3' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_GeneralTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class NoAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class SetterOnlyTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public WriteOnly Property Name() As String  		Set  			m_name = value  		End Set  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class ArgWithSetterTestAttribute  	Inherits Attribute  	Private m_name As String  	Private m_firstInitial As Char    	Public Sub New(name As String)  		m_name = name  		m_firstInitial = name(0)  	End Sub    	Public Property Name() As String  		Get  			Return m_name  		End Get  		Set  			m_name = value  		End Set  	End Property    	Public Property FirstInitial() As Char  		Get  			Return m_firstInitial  		End Get  		Set  			m_firstInitial = value  		End Set  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "NoAccessorTestAttribute")'              GetCA1019BasicDefaultResultAt(19' 17' "name"' "SetterOnlyTestAttribute")'              GetCA1019BasicRemoveSetterResultAt(24' 3' "Name"' "name")'              GetCA1019BasicRemoveSetterResultAt(45' 3' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_GeneralTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class NoAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class SetterOnlyTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public WriteOnly Property Name() As String  		Set  			m_name = value  		End Set  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class ArgWithSetterTestAttribute  	Inherits Attribute  	Private m_name As String  	Private m_firstInitial As Char    	Public Sub New(name As String)  		m_name = name  		m_firstInitial = name(0)  	End Sub    	Public Property Name() As String  		Get  			Return m_name  		End Get  		Set  			m_name = value  		End Set  	End Property    	Public Property FirstInitial() As Char  		Get  			Return m_firstInitial  		End Get  		Set  			m_firstInitial = value  		End Set  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "NoAccessorTestAttribute")'              GetCA1019BasicDefaultResultAt(19' 17' "name"' "SetterOnlyTestAttribute")'              GetCA1019BasicRemoveSetterResultAt(24' 3' "Name"' "name")'              GetCA1019BasicRemoveSetterResultAt(45' 3' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_GeneralTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class NoAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class SetterOnlyTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public WriteOnly Property Name() As String  		Set  			m_name = value  		End Set  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class ArgWithSetterTestAttribute  	Inherits Attribute  	Private m_name As String  	Private m_firstInitial As Char    	Public Sub New(name As String)  		m_name = name  		m_firstInitial = name(0)  	End Sub    	Public Property Name() As String  		Get  			Return m_name  		End Get  		Set  			m_name = value  		End Set  	End Property    	Public Property FirstInitial() As Char  		Get  			Return m_firstInitial  		End Get  		Set  			m_firstInitial = value  		End Set  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "NoAccessorTestAttribute")'              GetCA1019BasicDefaultResultAt(19' 17' "name"' "SetterOnlyTestAttribute")'              GetCA1019BasicRemoveSetterResultAt(24' 3' "Name"' "name")'              GetCA1019BasicRemoveSetterResultAt(45' 3' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_GeneralTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class NoAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class SetterOnlyTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public WriteOnly Property Name() As String  		Set  			m_name = value  		End Set  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class ArgWithSetterTestAttribute  	Inherits Attribute  	Private m_name As String  	Private m_firstInitial As Char    	Public Sub New(name As String)  		m_name = name  		m_firstInitial = name(0)  	End Sub    	Public Property Name() As String  		Get  			Return m_name  		End Get  		Set  			m_name = value  		End Set  	End Property    	Public Property FirstInitial() As Char  		Get  			Return m_firstInitial  		End Get  		Set  			m_firstInitial = value  		End Set  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "NoAccessorTestAttribute")'              GetCA1019BasicDefaultResultAt(19' 17' "name"' "SetterOnlyTestAttribute")'              GetCA1019BasicRemoveSetterResultAt(24' 3' "Name"' "name")'              GetCA1019BasicRemoveSetterResultAt(45' 3' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_GeneralTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class NoAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class SetterOnlyTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public WriteOnly Property Name() As String  		Set  			m_name = value  		End Set  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class ArgWithSetterTestAttribute  	Inherits Attribute  	Private m_name As String  	Private m_firstInitial As Char    	Public Sub New(name As String)  		m_name = name  		m_firstInitial = name(0)  	End Sub    	Public Property Name() As String  		Get  			Return m_name  		End Get  		Set  			m_name = value  		End Set  	End Property    	Public Property FirstInitial() As Char  		Get  			Return m_firstInitial  		End Get  		Set  			m_firstInitial = value  		End Set  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "NoAccessorTestAttribute")'              GetCA1019BasicDefaultResultAt(19' 17' "name"' "SetterOnlyTestAttribute")'              GetCA1019BasicRemoveSetterResultAt(24' 3' "Name"' "name")'              GetCA1019BasicRemoveSetterResultAt(45' 3' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_GeneralTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class NoAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class SetterOnlyTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public WriteOnly Property Name() As String  		Set  			m_name = value  		End Set  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class ArgWithSetterTestAttribute  	Inherits Attribute  	Private m_name As String  	Private m_firstInitial As Char    	Public Sub New(name As String)  		m_name = name  		m_firstInitial = name(0)  	End Sub    	Public Property Name() As String  		Get  			Return m_name  		End Get  		Set  			m_name = value  		End Set  	End Property    	Public Property FirstInitial() As Char  		Get  			Return m_firstInitial  		End Get  		Set  			m_firstInitial = value  		End Set  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "NoAccessorTestAttribute")'              GetCA1019BasicDefaultResultAt(19' 17' "name"' "SetterOnlyTestAttribute")'              GetCA1019BasicRemoveSetterResultAt(24' 3' "Name"' "name")'              GetCA1019BasicRemoveSetterResultAt(45' 3' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_GeneralTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class NoAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class SetterOnlyTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public WriteOnly Property Name() As String  		Set  			m_name = value  		End Set  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class ArgWithSetterTestAttribute  	Inherits Attribute  	Private m_name As String  	Private m_firstInitial As Char    	Public Sub New(name As String)  		m_name = name  		m_firstInitial = name(0)  	End Sub    	Public Property Name() As String  		Get  			Return m_name  		End Get  		Set  			m_name = value  		End Set  	End Property    	Public Property FirstInitial() As Char  		Get  			Return m_firstInitial  		End Get  		Set  			m_firstInitial = value  		End Set  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "NoAccessorTestAttribute")'              GetCA1019BasicDefaultResultAt(19' 17' "name"' "SetterOnlyTestAttribute")'              GetCA1019BasicRemoveSetterResultAt(24' 3' "Name"' "name")'              GetCA1019BasicRemoveSetterResultAt(45' 3' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_GeneralTestWithScope,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class NoAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    [|<AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class SetterOnlyTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public WriteOnly Property Name() As String  		Set  			m_name = value  		End Set  	End Property  End Class|]    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class ArgWithSetterTestAttribute  	Inherits Attribute  	Private m_name As String  	Private m_firstInitial As Char    	Public Sub New(name As String)  		m_name = name  		m_firstInitial = name(0)  	End Sub    	Public Property Name() As String  		Get  			Return m_name  		End Get  		Set  			m_name = value  		End Set  	End Property    	Public Property FirstInitial() As Char  		Get  			Return m_firstInitial  		End Get  		Set  			m_firstInitial = value  		End Set  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(19' 17' "name"' "SetterOnlyTestAttribute")'              GetCA1019BasicRemoveSetterResultAt(24' 3' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_GeneralTestWithScope,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class NoAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    [|<AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class SetterOnlyTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public WriteOnly Property Name() As String  		Set  			m_name = value  		End Set  	End Property  End Class|]    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class ArgWithSetterTestAttribute  	Inherits Attribute  	Private m_name As String  	Private m_firstInitial As Char    	Public Sub New(name As String)  		m_name = name  		m_firstInitial = name(0)  	End Sub    	Public Property Name() As String  		Get  			Return m_name  		End Get  		Set  			m_name = value  		End Set  	End Property    	Public Property FirstInitial() As Char  		Get  			Return m_firstInitial  		End Get  		Set  			m_firstInitial = value  		End Set  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(19' 17' "name"' "SetterOnlyTestAttribute")'              GetCA1019BasicRemoveSetterResultAt(24' 3' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_GeneralTestWithScope,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class NoAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    [|<AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class SetterOnlyTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public WriteOnly Property Name() As String  		Set  			m_name = value  		End Set  	End Property  End Class|]    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class ArgWithSetterTestAttribute  	Inherits Attribute  	Private m_name As String  	Private m_firstInitial As Char    	Public Sub New(name As String)  		m_name = name  		m_firstInitial = name(0)  	End Sub    	Public Property Name() As String  		Get  			Return m_name  		End Get  		Set  			m_name = value  		End Set  	End Property    	Public Property FirstInitial() As Char  		Get  			Return m_firstInitial  		End Get  		Set  			m_firstInitial = value  		End Set  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(19' 17' "name"' "SetterOnlyTestAttribute")'              GetCA1019BasicRemoveSetterResultAt(24' 3' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_GeneralTestWithScope,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class NoAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    [|<AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class SetterOnlyTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public WriteOnly Property Name() As String  		Set  			m_name = value  		End Set  	End Property  End Class|]    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class ArgWithSetterTestAttribute  	Inherits Attribute  	Private m_name As String  	Private m_firstInitial As Char    	Public Sub New(name As String)  		m_name = name  		m_firstInitial = name(0)  	End Sub    	Public Property Name() As String  		Get  			Return m_name  		End Get  		Set  			m_name = value  		End Set  	End Property    	Public Property FirstInitial() As Char  		Get  			Return m_firstInitial  		End Get  		Set  			m_firstInitial = value  		End Set  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(19' 17' "name"' "SetterOnlyTestAttribute")'              GetCA1019BasicRemoveSetterResultAt(24' 3' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  internal sealed class InternalGetterInternalAttribute : Attribute  {      private string m_name;        public InternalGetterInternalAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  internal class ProtectedInternalGetterInternalAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterInternalAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedGetterAttribute : Attribute  {      private string m_name;      private int m_data;        public ProtectedGetterAttribute(string name)      {          m_name = name;      }      public ProtectedGetterAttribute(string name' int data)      {          m_name = name;          m_data = data;      }      public ProtectedGetterAttribute(int data)      {          m_data = data;      }        protected string Name      {          get { return m_name; }      }        public int Data      {          get { return m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedInternalGetterAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class InternalGetterAttribute : Attribute   //Bad  {      private string m_name;        public InternalGetterAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class PrivateGetterAttribute : Attribute   //Bad  {      private string m_name;        public PrivateGetterAttribute(string name)      {          m_name = name;      }        private string Name      {          get { return m_name; }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(16' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(32' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(58' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(79' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(95' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(111' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  internal sealed class InternalGetterInternalAttribute : Attribute  {      private string m_name;        public InternalGetterInternalAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  internal class ProtectedInternalGetterInternalAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterInternalAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedGetterAttribute : Attribute  {      private string m_name;      private int m_data;        public ProtectedGetterAttribute(string name)      {          m_name = name;      }      public ProtectedGetterAttribute(string name' int data)      {          m_name = name;          m_data = data;      }      public ProtectedGetterAttribute(int data)      {          m_data = data;      }        protected string Name      {          get { return m_name; }      }        public int Data      {          get { return m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedInternalGetterAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class InternalGetterAttribute : Attribute   //Bad  {      private string m_name;        public InternalGetterAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class PrivateGetterAttribute : Attribute   //Bad  {      private string m_name;        public PrivateGetterAttribute(string name)      {          m_name = name;      }        private string Name      {          get { return m_name; }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(16' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(32' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(58' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(79' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(95' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(111' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  internal sealed class InternalGetterInternalAttribute : Attribute  {      private string m_name;        public InternalGetterInternalAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  internal class ProtectedInternalGetterInternalAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterInternalAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedGetterAttribute : Attribute  {      private string m_name;      private int m_data;        public ProtectedGetterAttribute(string name)      {          m_name = name;      }      public ProtectedGetterAttribute(string name' int data)      {          m_name = name;          m_data = data;      }      public ProtectedGetterAttribute(int data)      {          m_data = data;      }        protected string Name      {          get { return m_name; }      }        public int Data      {          get { return m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedInternalGetterAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class InternalGetterAttribute : Attribute   //Bad  {      private string m_name;        public InternalGetterAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class PrivateGetterAttribute : Attribute   //Bad  {      private string m_name;        public PrivateGetterAttribute(string name)      {          m_name = name;      }        private string Name      {          get { return m_name; }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(16' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(32' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(58' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(79' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(95' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(111' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  internal sealed class InternalGetterInternalAttribute : Attribute  {      private string m_name;        public InternalGetterInternalAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  internal class ProtectedInternalGetterInternalAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterInternalAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedGetterAttribute : Attribute  {      private string m_name;      private int m_data;        public ProtectedGetterAttribute(string name)      {          m_name = name;      }      public ProtectedGetterAttribute(string name' int data)      {          m_name = name;          m_data = data;      }      public ProtectedGetterAttribute(int data)      {          m_data = data;      }        protected string Name      {          get { return m_name; }      }        public int Data      {          get { return m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedInternalGetterAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class InternalGetterAttribute : Attribute   //Bad  {      private string m_name;        public InternalGetterAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class PrivateGetterAttribute : Attribute   //Bad  {      private string m_name;        public PrivateGetterAttribute(string name)      {          m_name = name;      }        private string Name      {          get { return m_name; }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(16' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(32' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(58' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(79' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(95' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(111' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  internal sealed class InternalGetterInternalAttribute : Attribute  {      private string m_name;        public InternalGetterInternalAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  internal class ProtectedInternalGetterInternalAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterInternalAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedGetterAttribute : Attribute  {      private string m_name;      private int m_data;        public ProtectedGetterAttribute(string name)      {          m_name = name;      }      public ProtectedGetterAttribute(string name' int data)      {          m_name = name;          m_data = data;      }      public ProtectedGetterAttribute(int data)      {          m_data = data;      }        protected string Name      {          get { return m_name; }      }        public int Data      {          get { return m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedInternalGetterAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class InternalGetterAttribute : Attribute   //Bad  {      private string m_name;        public InternalGetterAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class PrivateGetterAttribute : Attribute   //Bad  {      private string m_name;        public PrivateGetterAttribute(string name)      {          m_name = name;      }        private string Name      {          get { return m_name; }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(16' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(32' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(58' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(79' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(95' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(111' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  internal sealed class InternalGetterInternalAttribute : Attribute  {      private string m_name;        public InternalGetterInternalAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  internal class ProtectedInternalGetterInternalAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterInternalAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedGetterAttribute : Attribute  {      private string m_name;      private int m_data;        public ProtectedGetterAttribute(string name)      {          m_name = name;      }      public ProtectedGetterAttribute(string name' int data)      {          m_name = name;          m_data = data;      }      public ProtectedGetterAttribute(int data)      {          m_data = data;      }        protected string Name      {          get { return m_name; }      }        public int Data      {          get { return m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedInternalGetterAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class InternalGetterAttribute : Attribute   //Bad  {      private string m_name;        public InternalGetterAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class PrivateGetterAttribute : Attribute   //Bad  {      private string m_name;        public PrivateGetterAttribute(string name)      {          m_name = name;      }        private string Name      {          get { return m_name; }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(16' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(32' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(58' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(79' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(95' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(111' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  internal sealed class InternalGetterInternalAttribute : Attribute  {      private string m_name;        public InternalGetterInternalAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  internal class ProtectedInternalGetterInternalAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterInternalAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedGetterAttribute : Attribute  {      private string m_name;      private int m_data;        public ProtectedGetterAttribute(string name)      {          m_name = name;      }      public ProtectedGetterAttribute(string name' int data)      {          m_name = name;          m_data = data;      }      public ProtectedGetterAttribute(int data)      {          m_data = data;      }        protected string Name      {          get { return m_name; }      }        public int Data      {          get { return m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedInternalGetterAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class InternalGetterAttribute : Attribute   //Bad  {      private string m_name;        public InternalGetterAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class PrivateGetterAttribute : Attribute   //Bad  {      private string m_name;        public PrivateGetterAttribute(string name)      {          m_name = name;      }        private string Name      {          get { return m_name; }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(16' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(32' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(58' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(79' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(95' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(111' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  internal sealed class InternalGetterInternalAttribute : Attribute  {      private string m_name;        public InternalGetterInternalAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  internal class ProtectedInternalGetterInternalAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterInternalAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedGetterAttribute : Attribute  {      private string m_name;      private int m_data;        public ProtectedGetterAttribute(string name)      {          m_name = name;      }      public ProtectedGetterAttribute(string name' int data)      {          m_name = name;          m_data = data;      }      public ProtectedGetterAttribute(int data)      {          m_data = data;      }        protected string Name      {          get { return m_name; }      }        public int Data      {          get { return m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedInternalGetterAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class InternalGetterAttribute : Attribute   //Bad  {      private string m_name;        public InternalGetterAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class PrivateGetterAttribute : Attribute   //Bad  {      private string m_name;        public PrivateGetterAttribute(string name)      {          m_name = name;      }        private string Name      {          get { return m_name; }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(16' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(32' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(58' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(79' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(95' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(111' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  internal sealed class InternalGetterInternalAttribute : Attribute  {      private string m_name;        public InternalGetterInternalAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  internal class ProtectedInternalGetterInternalAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterInternalAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedGetterAttribute : Attribute  {      private string m_name;      private int m_data;        public ProtectedGetterAttribute(string name)      {          m_name = name;      }      public ProtectedGetterAttribute(string name' int data)      {          m_name = name;          m_data = data;      }      public ProtectedGetterAttribute(int data)      {          m_data = data;      }        protected string Name      {          get { return m_name; }      }        public int Data      {          get { return m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedInternalGetterAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class InternalGetterAttribute : Attribute   //Bad  {      private string m_name;        public InternalGetterAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class PrivateGetterAttribute : Attribute   //Bad  {      private string m_name;        public PrivateGetterAttribute(string name)      {          m_name = name;      }        private string Name      {          get { return m_name; }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(16' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(32' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(58' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(79' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(95' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(111' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  internal sealed class InternalGetterInternalAttribute : Attribute  {      private string m_name;        public InternalGetterInternalAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  internal class ProtectedInternalGetterInternalAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterInternalAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedGetterAttribute : Attribute  {      private string m_name;      private int m_data;        public ProtectedGetterAttribute(string name)      {          m_name = name;      }      public ProtectedGetterAttribute(string name' int data)      {          m_name = name;          m_data = data;      }      public ProtectedGetterAttribute(int data)      {          m_data = data;      }        protected string Name      {          get { return m_name; }      }        public int Data      {          get { return m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedInternalGetterAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class InternalGetterAttribute : Attribute   //Bad  {      private string m_name;        public InternalGetterAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class PrivateGetterAttribute : Attribute   //Bad  {      private string m_name;        public PrivateGetterAttribute(string name)      {          m_name = name;      }        private string Name      {          get { return m_name; }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(16' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(32' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(58' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(79' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(95' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(111' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  internal sealed class InternalGetterInternalAttribute : Attribute  {      private string m_name;        public InternalGetterInternalAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  internal class ProtectedInternalGetterInternalAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterInternalAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedGetterAttribute : Attribute  {      private string m_name;      private int m_data;        public ProtectedGetterAttribute(string name)      {          m_name = name;      }      public ProtectedGetterAttribute(string name' int data)      {          m_name = name;          m_data = data;      }      public ProtectedGetterAttribute(int data)      {          m_data = data;      }        protected string Name      {          get { return m_name; }      }        public int Data      {          get { return m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedInternalGetterAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class InternalGetterAttribute : Attribute   //Bad  {      private string m_name;        public InternalGetterAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class PrivateGetterAttribute : Attribute   //Bad  {      private string m_name;        public PrivateGetterAttribute(string name)      {          m_name = name;      }        private string Name      {          get { return m_name; }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(16' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(32' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(58' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(79' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(95' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(111' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    [AttributeUsage(AttributeTargets.All)]  internal sealed class InternalGetterInternalAttribute : Attribute  {      private string m_name;        public InternalGetterInternalAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  internal class ProtectedInternalGetterInternalAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterInternalAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedGetterAttribute : Attribute  {      private string m_name;      private int m_data;        public ProtectedGetterAttribute(string name)      {          m_name = name;      }      public ProtectedGetterAttribute(string name' int data)      {          m_name = name;          m_data = data;      }      public ProtectedGetterAttribute(int data)      {          m_data = data;      }        protected string Name      {          get { return m_name; }      }        public int Data      {          get { return m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ProtectedInternalGetterAttribute : Attribute  {      private string m_name;        public ProtectedInternalGetterAttribute(string name)      {          m_name = name;      }        protected internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class InternalGetterAttribute : Attribute   //Bad  {      private string m_name;        public InternalGetterAttribute(string name)      {          m_name = name;      }        internal string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class PrivateGetterAttribute : Attribute   //Bad  {      private string m_name;        public PrivateGetterAttribute(string name)      {          m_name = name;      }        private string Name      {          get { return m_name; }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(16' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(32' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(58' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(79' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(95' 9' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(111' 9' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Friend NotInheritable Class InternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Friend Class ProtectedInternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedGetterAttribute  	Inherits Attribute  	Private m_name As String  	Private m_data As Integer    	Public Sub New(name As String)  		m_name = name  	End Sub  	Public Sub New(name As String' data As Integer)  		m_name = name  		m_data = data  	End Sub  	Public Sub New(data As Integer)  		m_data = data  	End Sub    	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property    	Public ReadOnly Property Data() As Integer  		Get  			Return m_data  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedInternalGetterAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class InternalGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PrivateGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PublicPropertyPrivateAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public ReadOnly Property Name() As String  		Private Get  			Return m_name  		End Get  	End Property  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(14' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(30' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(54' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(76' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(93' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(110' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(126' 11' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Friend NotInheritable Class InternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Friend Class ProtectedInternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedGetterAttribute  	Inherits Attribute  	Private m_name As String  	Private m_data As Integer    	Public Sub New(name As String)  		m_name = name  	End Sub  	Public Sub New(name As String' data As Integer)  		m_name = name  		m_data = data  	End Sub  	Public Sub New(data As Integer)  		m_data = data  	End Sub    	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property    	Public ReadOnly Property Data() As Integer  		Get  			Return m_data  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedInternalGetterAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class InternalGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PrivateGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PublicPropertyPrivateAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public ReadOnly Property Name() As String  		Private Get  			Return m_name  		End Get  	End Property  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(14' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(30' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(54' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(76' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(93' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(110' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(126' 11' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Friend NotInheritable Class InternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Friend Class ProtectedInternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedGetterAttribute  	Inherits Attribute  	Private m_name As String  	Private m_data As Integer    	Public Sub New(name As String)  		m_name = name  	End Sub  	Public Sub New(name As String' data As Integer)  		m_name = name  		m_data = data  	End Sub  	Public Sub New(data As Integer)  		m_data = data  	End Sub    	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property    	Public ReadOnly Property Data() As Integer  		Get  			Return m_data  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedInternalGetterAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class InternalGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PrivateGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PublicPropertyPrivateAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public ReadOnly Property Name() As String  		Private Get  			Return m_name  		End Get  	End Property  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(14' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(30' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(54' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(76' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(93' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(110' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(126' 11' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Friend NotInheritable Class InternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Friend Class ProtectedInternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedGetterAttribute  	Inherits Attribute  	Private m_name As String  	Private m_data As Integer    	Public Sub New(name As String)  		m_name = name  	End Sub  	Public Sub New(name As String' data As Integer)  		m_name = name  		m_data = data  	End Sub  	Public Sub New(data As Integer)  		m_data = data  	End Sub    	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property    	Public ReadOnly Property Data() As Integer  		Get  			Return m_data  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedInternalGetterAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class InternalGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PrivateGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PublicPropertyPrivateAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public ReadOnly Property Name() As String  		Private Get  			Return m_name  		End Get  	End Property  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(14' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(30' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(54' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(76' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(93' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(110' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(126' 11' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Friend NotInheritable Class InternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Friend Class ProtectedInternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedGetterAttribute  	Inherits Attribute  	Private m_name As String  	Private m_data As Integer    	Public Sub New(name As String)  		m_name = name  	End Sub  	Public Sub New(name As String' data As Integer)  		m_name = name  		m_data = data  	End Sub  	Public Sub New(data As Integer)  		m_data = data  	End Sub    	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property    	Public ReadOnly Property Data() As Integer  		Get  			Return m_data  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedInternalGetterAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class InternalGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PrivateGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PublicPropertyPrivateAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public ReadOnly Property Name() As String  		Private Get  			Return m_name  		End Get  	End Property  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(14' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(30' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(54' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(76' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(93' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(110' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(126' 11' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Friend NotInheritable Class InternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Friend Class ProtectedInternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedGetterAttribute  	Inherits Attribute  	Private m_name As String  	Private m_data As Integer    	Public Sub New(name As String)  		m_name = name  	End Sub  	Public Sub New(name As String' data As Integer)  		m_name = name  		m_data = data  	End Sub  	Public Sub New(data As Integer)  		m_data = data  	End Sub    	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property    	Public ReadOnly Property Data() As Integer  		Get  			Return m_data  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedInternalGetterAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class InternalGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PrivateGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PublicPropertyPrivateAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public ReadOnly Property Name() As String  		Private Get  			Return m_name  		End Get  	End Property  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(14' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(30' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(54' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(76' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(93' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(110' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(126' 11' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Friend NotInheritable Class InternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Friend Class ProtectedInternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedGetterAttribute  	Inherits Attribute  	Private m_name As String  	Private m_data As Integer    	Public Sub New(name As String)  		m_name = name  	End Sub  	Public Sub New(name As String' data As Integer)  		m_name = name  		m_data = data  	End Sub  	Public Sub New(data As Integer)  		m_data = data  	End Sub    	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property    	Public ReadOnly Property Data() As Integer  		Get  			Return m_data  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedInternalGetterAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class InternalGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PrivateGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PublicPropertyPrivateAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public ReadOnly Property Name() As String  		Private Get  			Return m_name  		End Get  	End Property  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(14' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(30' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(54' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(76' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(93' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(110' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(126' 11' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Friend NotInheritable Class InternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Friend Class ProtectedInternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedGetterAttribute  	Inherits Attribute  	Private m_name As String  	Private m_data As Integer    	Public Sub New(name As String)  		m_name = name  	End Sub  	Public Sub New(name As String' data As Integer)  		m_name = name  		m_data = data  	End Sub  	Public Sub New(data As Integer)  		m_data = data  	End Sub    	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property    	Public ReadOnly Property Data() As Integer  		Get  			Return m_data  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedInternalGetterAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class InternalGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PrivateGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PublicPropertyPrivateAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public ReadOnly Property Name() As String  		Private Get  			Return m_name  		End Get  	End Property  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(14' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(30' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(54' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(76' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(93' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(110' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(126' 11' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Friend NotInheritable Class InternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Friend Class ProtectedInternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedGetterAttribute  	Inherits Attribute  	Private m_name As String  	Private m_data As Integer    	Public Sub New(name As String)  		m_name = name  	End Sub  	Public Sub New(name As String' data As Integer)  		m_name = name  		m_data = data  	End Sub  	Public Sub New(data As Integer)  		m_data = data  	End Sub    	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property    	Public ReadOnly Property Data() As Integer  		Get  			Return m_data  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedInternalGetterAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class InternalGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PrivateGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PublicPropertyPrivateAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public ReadOnly Property Name() As String  		Private Get  			Return m_name  		End Get  	End Property  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(14' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(30' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(54' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(76' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(93' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(110' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(126' 11' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Friend NotInheritable Class InternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Friend Class ProtectedInternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedGetterAttribute  	Inherits Attribute  	Private m_name As String  	Private m_data As Integer    	Public Sub New(name As String)  		m_name = name  	End Sub  	Public Sub New(name As String' data As Integer)  		m_name = name  		m_data = data  	End Sub  	Public Sub New(data As Integer)  		m_data = data  	End Sub    	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property    	Public ReadOnly Property Data() As Integer  		Get  			Return m_data  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedInternalGetterAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class InternalGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PrivateGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PublicPropertyPrivateAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public ReadOnly Property Name() As String  		Private Get  			Return m_name  		End Get  	End Property  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(14' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(30' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(54' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(76' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(93' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(110' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(126' 11' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Friend NotInheritable Class InternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Friend Class ProtectedInternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedGetterAttribute  	Inherits Attribute  	Private m_name As String  	Private m_data As Integer    	Public Sub New(name As String)  		m_name = name  	End Sub  	Public Sub New(name As String' data As Integer)  		m_name = name  		m_data = data  	End Sub  	Public Sub New(data As Integer)  		m_data = data  	End Sub    	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property    	Public ReadOnly Property Data() As Integer  		Get  			Return m_data  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedInternalGetterAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class InternalGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PrivateGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PublicPropertyPrivateAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public ReadOnly Property Name() As String  		Private Get  			Return m_name  		End Get  	End Property  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(14' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(30' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(54' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(76' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(93' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(110' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(126' 11' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Friend NotInheritable Class InternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Friend Class ProtectedInternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedGetterAttribute  	Inherits Attribute  	Private m_name As String  	Private m_data As Integer    	Public Sub New(name As String)  		m_name = name  	End Sub  	Public Sub New(name As String' data As Integer)  		m_name = name  		m_data = data  	End Sub  	Public Sub New(data As Integer)  		m_data = data  	End Sub    	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property    	Public ReadOnly Property Data() As Integer  		Get  			Return m_data  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedInternalGetterAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class InternalGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PrivateGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PublicPropertyPrivateAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public ReadOnly Property Name() As String  		Private Get  			Return m_name  		End Get  	End Property  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(14' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(30' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(54' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(76' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(93' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(110' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(126' 11' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Friend NotInheritable Class InternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Friend Class ProtectedInternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedGetterAttribute  	Inherits Attribute  	Private m_name As String  	Private m_data As Integer    	Public Sub New(name As String)  		m_name = name  	End Sub  	Public Sub New(name As String' data As Integer)  		m_name = name  		m_data = data  	End Sub  	Public Sub New(data As Integer)  		m_data = data  	End Sub    	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property    	Public ReadOnly Property Data() As Integer  		Get  			Return m_data  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedInternalGetterAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class InternalGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PrivateGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PublicPropertyPrivateAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public ReadOnly Property Name() As String  		Private Get  			Return m_name  		End Get  	End Property  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(14' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(30' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(54' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(76' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(93' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(110' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(126' 11' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_GetterVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    <AttributeUsage(AttributeTargets.All)> _  Friend NotInheritable Class InternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Friend Class ProtectedInternalGetterInternalAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedGetterAttribute  	Inherits Attribute  	Private m_name As String  	Private m_data As Integer    	Public Sub New(name As String)  		m_name = name  	End Sub  	Public Sub New(name As String' data As Integer)  		m_name = name  		m_data = data  	End Sub  	Public Sub New(data As Integer)  		m_data = data  	End Sub    	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property    	Public ReadOnly Property Data() As Integer  		Get  			Return m_data  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ProtectedInternalGetterAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Protected Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class InternalGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Friend ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PrivateGetterAttribute  	Inherits Attribute  	'Bad  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class PublicPropertyPrivateAccessorTestAttribute  	Inherits Attribute  	Private m_name As String    	Public Sub New(name As String)  		m_name = name  	End Sub    	Public ReadOnly Property Name() As String  		Private Get  			Return m_name  		End Get  	End Property  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(14' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(30' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(54' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(76' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(93' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(110' 3' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(126' 11' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_NestedVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    public partial class PublicContainerClass  {      [AttributeUsage(AttributeTargets.All)]      internal sealed class NestedInternalAttribute : Attribute      {          private string m_name;            public NestedInternalAttribute(string name)          {              m_name = name;          }            internal string Name          {              get { return m_name; }          }      }  }    internal class InternalContainerClass  {      [AttributeUsage(AttributeTargets.All)]      internal sealed class NestedInternalAttribute : Attribute      {          private string m_name;            public NestedInternalAttribute(string name)          {              m_name = name;          }            internal string Name          {              get { return m_name; }          }      }  }    public partial class PublicContainerClass  {      [AttributeUsage(AttributeTargets.All)]      public sealed class NestedPublicAttribute : Attribute      {          private string m_name;            public NestedPublicAttribute(string name)          {              Name = name;          }            private string Name          {              get { return m_name; }              set { m_name = value; }          }      }        [AttributeUsage(AttributeTargets.All)]      protected class NestedProtectedAttribute : Attribute      {          private string m_name;            public NestedProtectedAttribute(string name)          {              m_name = name;          }            protected string Name          {              get { return m_name; }              set { m_name = value; }          }      }        [AttributeUsage(AttributeTargets.All)]      protected internal class NestedProtectedInternalAttribute : Attribute      {          private string m_name;            public NestedProtectedInternalAttribute(string name)          {              m_name = name;          }            protected internal string Name          {              get { return m_name; }              set { m_name = value; }          }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(18' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(37' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(56' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(73' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(90' 13' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_NestedVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    public partial class PublicContainerClass  {      [AttributeUsage(AttributeTargets.All)]      internal sealed class NestedInternalAttribute : Attribute      {          private string m_name;            public NestedInternalAttribute(string name)          {              m_name = name;          }            internal string Name          {              get { return m_name; }          }      }  }    internal class InternalContainerClass  {      [AttributeUsage(AttributeTargets.All)]      internal sealed class NestedInternalAttribute : Attribute      {          private string m_name;            public NestedInternalAttribute(string name)          {              m_name = name;          }            internal string Name          {              get { return m_name; }          }      }  }    public partial class PublicContainerClass  {      [AttributeUsage(AttributeTargets.All)]      public sealed class NestedPublicAttribute : Attribute      {          private string m_name;            public NestedPublicAttribute(string name)          {              Name = name;          }            private string Name          {              get { return m_name; }              set { m_name = value; }          }      }        [AttributeUsage(AttributeTargets.All)]      protected class NestedProtectedAttribute : Attribute      {          private string m_name;            public NestedProtectedAttribute(string name)          {              m_name = name;          }            protected string Name          {              get { return m_name; }              set { m_name = value; }          }      }        [AttributeUsage(AttributeTargets.All)]      protected internal class NestedProtectedInternalAttribute : Attribute      {          private string m_name;            public NestedProtectedInternalAttribute(string name)          {              m_name = name;          }            protected internal string Name          {              get { return m_name; }              set { m_name = value; }          }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(18' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(37' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(56' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(73' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(90' 13' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_NestedVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    public partial class PublicContainerClass  {      [AttributeUsage(AttributeTargets.All)]      internal sealed class NestedInternalAttribute : Attribute      {          private string m_name;            public NestedInternalAttribute(string name)          {              m_name = name;          }            internal string Name          {              get { return m_name; }          }      }  }    internal class InternalContainerClass  {      [AttributeUsage(AttributeTargets.All)]      internal sealed class NestedInternalAttribute : Attribute      {          private string m_name;            public NestedInternalAttribute(string name)          {              m_name = name;          }            internal string Name          {              get { return m_name; }          }      }  }    public partial class PublicContainerClass  {      [AttributeUsage(AttributeTargets.All)]      public sealed class NestedPublicAttribute : Attribute      {          private string m_name;            public NestedPublicAttribute(string name)          {              Name = name;          }            private string Name          {              get { return m_name; }              set { m_name = value; }          }      }        [AttributeUsage(AttributeTargets.All)]      protected class NestedProtectedAttribute : Attribute      {          private string m_name;            public NestedProtectedAttribute(string name)          {              m_name = name;          }            protected string Name          {              get { return m_name; }              set { m_name = value; }          }      }        [AttributeUsage(AttributeTargets.All)]      protected internal class NestedProtectedInternalAttribute : Attribute      {          private string m_name;            public NestedProtectedInternalAttribute(string name)          {              m_name = name;          }            protected internal string Name          {              get { return m_name; }              set { m_name = value; }          }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(18' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(37' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(56' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(73' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(90' 13' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_NestedVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    public partial class PublicContainerClass  {      [AttributeUsage(AttributeTargets.All)]      internal sealed class NestedInternalAttribute : Attribute      {          private string m_name;            public NestedInternalAttribute(string name)          {              m_name = name;          }            internal string Name          {              get { return m_name; }          }      }  }    internal class InternalContainerClass  {      [AttributeUsage(AttributeTargets.All)]      internal sealed class NestedInternalAttribute : Attribute      {          private string m_name;            public NestedInternalAttribute(string name)          {              m_name = name;          }            internal string Name          {              get { return m_name; }          }      }  }    public partial class PublicContainerClass  {      [AttributeUsage(AttributeTargets.All)]      public sealed class NestedPublicAttribute : Attribute      {          private string m_name;            public NestedPublicAttribute(string name)          {              Name = name;          }            private string Name          {              get { return m_name; }              set { m_name = value; }          }      }        [AttributeUsage(AttributeTargets.All)]      protected class NestedProtectedAttribute : Attribute      {          private string m_name;            public NestedProtectedAttribute(string name)          {              m_name = name;          }            protected string Name          {              get { return m_name; }              set { m_name = value; }          }      }        [AttributeUsage(AttributeTargets.All)]      protected internal class NestedProtectedInternalAttribute : Attribute      {          private string m_name;            public NestedProtectedInternalAttribute(string name)          {              m_name = name;          }            protected internal string Name          {              get { return m_name; }              set { m_name = value; }          }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(18' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(37' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(56' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(73' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(90' 13' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_NestedVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    public partial class PublicContainerClass  {      [AttributeUsage(AttributeTargets.All)]      internal sealed class NestedInternalAttribute : Attribute      {          private string m_name;            public NestedInternalAttribute(string name)          {              m_name = name;          }            internal string Name          {              get { return m_name; }          }      }  }    internal class InternalContainerClass  {      [AttributeUsage(AttributeTargets.All)]      internal sealed class NestedInternalAttribute : Attribute      {          private string m_name;            public NestedInternalAttribute(string name)          {              m_name = name;          }            internal string Name          {              get { return m_name; }          }      }  }    public partial class PublicContainerClass  {      [AttributeUsage(AttributeTargets.All)]      public sealed class NestedPublicAttribute : Attribute      {          private string m_name;            public NestedPublicAttribute(string name)          {              Name = name;          }            private string Name          {              get { return m_name; }              set { m_name = value; }          }      }        [AttributeUsage(AttributeTargets.All)]      protected class NestedProtectedAttribute : Attribute      {          private string m_name;            public NestedProtectedAttribute(string name)          {              m_name = name;          }            protected string Name          {              get { return m_name; }              set { m_name = value; }          }      }        [AttributeUsage(AttributeTargets.All)]      protected internal class NestedProtectedInternalAttribute : Attribute      {          private string m_name;            public NestedProtectedInternalAttribute(string name)          {              m_name = name;          }            protected internal string Name          {              get { return m_name; }              set { m_name = value; }          }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(18' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(37' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(56' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(73' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(90' 13' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_NestedVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    public partial class PublicContainerClass  {      [AttributeUsage(AttributeTargets.All)]      internal sealed class NestedInternalAttribute : Attribute      {          private string m_name;            public NestedInternalAttribute(string name)          {              m_name = name;          }            internal string Name          {              get { return m_name; }          }      }  }    internal class InternalContainerClass  {      [AttributeUsage(AttributeTargets.All)]      internal sealed class NestedInternalAttribute : Attribute      {          private string m_name;            public NestedInternalAttribute(string name)          {              m_name = name;          }            internal string Name          {              get { return m_name; }          }      }  }    public partial class PublicContainerClass  {      [AttributeUsage(AttributeTargets.All)]      public sealed class NestedPublicAttribute : Attribute      {          private string m_name;            public NestedPublicAttribute(string name)          {              Name = name;          }            private string Name          {              get { return m_name; }              set { m_name = value; }          }      }        [AttributeUsage(AttributeTargets.All)]      protected class NestedProtectedAttribute : Attribute      {          private string m_name;            public NestedProtectedAttribute(string name)          {              m_name = name;          }            protected string Name          {              get { return m_name; }              set { m_name = value; }          }      }        [AttributeUsage(AttributeTargets.All)]      protected internal class NestedProtectedInternalAttribute : Attribute      {          private string m_name;            public NestedProtectedInternalAttribute(string name)          {              m_name = name;          }            protected internal string Name          {              get { return m_name; }              set { m_name = value; }          }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(18' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(37' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(56' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(73' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(90' 13' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_NestedVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    public partial class PublicContainerClass  {      [AttributeUsage(AttributeTargets.All)]      internal sealed class NestedInternalAttribute : Attribute      {          private string m_name;            public NestedInternalAttribute(string name)          {              m_name = name;          }            internal string Name          {              get { return m_name; }          }      }  }    internal class InternalContainerClass  {      [AttributeUsage(AttributeTargets.All)]      internal sealed class NestedInternalAttribute : Attribute      {          private string m_name;            public NestedInternalAttribute(string name)          {              m_name = name;          }            internal string Name          {              get { return m_name; }          }      }  }    public partial class PublicContainerClass  {      [AttributeUsage(AttributeTargets.All)]      public sealed class NestedPublicAttribute : Attribute      {          private string m_name;            public NestedPublicAttribute(string name)          {              Name = name;          }            private string Name          {              get { return m_name; }              set { m_name = value; }          }      }        [AttributeUsage(AttributeTargets.All)]      protected class NestedProtectedAttribute : Attribute      {          private string m_name;            public NestedProtectedAttribute(string name)          {              m_name = name;          }            protected string Name          {              get { return m_name; }              set { m_name = value; }          }      }        [AttributeUsage(AttributeTargets.All)]      protected internal class NestedProtectedInternalAttribute : Attribute      {          private string m_name;            public NestedProtectedInternalAttribute(string name)          {              m_name = name;          }            protected internal string Name          {              get { return m_name; }              set { m_name = value; }          }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(18' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(37' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(56' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(73' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(90' 13' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_NestedVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    public partial class PublicContainerClass  {      [AttributeUsage(AttributeTargets.All)]      internal sealed class NestedInternalAttribute : Attribute      {          private string m_name;            public NestedInternalAttribute(string name)          {              m_name = name;          }            internal string Name          {              get { return m_name; }          }      }  }    internal class InternalContainerClass  {      [AttributeUsage(AttributeTargets.All)]      internal sealed class NestedInternalAttribute : Attribute      {          private string m_name;            public NestedInternalAttribute(string name)          {              m_name = name;          }            internal string Name          {              get { return m_name; }          }      }  }    public partial class PublicContainerClass  {      [AttributeUsage(AttributeTargets.All)]      public sealed class NestedPublicAttribute : Attribute      {          private string m_name;            public NestedPublicAttribute(string name)          {              Name = name;          }            private string Name          {              get { return m_name; }              set { m_name = value; }          }      }        [AttributeUsage(AttributeTargets.All)]      protected class NestedProtectedAttribute : Attribute      {          private string m_name;            public NestedProtectedAttribute(string name)          {              m_name = name;          }            protected string Name          {              get { return m_name; }              set { m_name = value; }          }      }        [AttributeUsage(AttributeTargets.All)]      protected internal class NestedProtectedInternalAttribute : Attribute      {          private string m_name;            public NestedProtectedInternalAttribute(string name)          {              m_name = name;          }            protected internal string Name          {              get { return m_name; }              set { m_name = value; }          }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(18' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(37' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(56' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(73' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(90' 13' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_NestedVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    public partial class PublicContainerClass  {      [AttributeUsage(AttributeTargets.All)]      internal sealed class NestedInternalAttribute : Attribute      {          private string m_name;            public NestedInternalAttribute(string name)          {              m_name = name;          }            internal string Name          {              get { return m_name; }          }      }  }    internal class InternalContainerClass  {      [AttributeUsage(AttributeTargets.All)]      internal sealed class NestedInternalAttribute : Attribute      {          private string m_name;            public NestedInternalAttribute(string name)          {              m_name = name;          }            internal string Name          {              get { return m_name; }          }      }  }    public partial class PublicContainerClass  {      [AttributeUsage(AttributeTargets.All)]      public sealed class NestedPublicAttribute : Attribute      {          private string m_name;            public NestedPublicAttribute(string name)          {              Name = name;          }            private string Name          {              get { return m_name; }              set { m_name = value; }          }      }        [AttributeUsage(AttributeTargets.All)]      protected class NestedProtectedAttribute : Attribute      {          private string m_name;            public NestedProtectedAttribute(string name)          {              m_name = name;          }            protected string Name          {              get { return m_name; }              set { m_name = value; }          }      }        [AttributeUsage(AttributeTargets.All)]      protected internal class NestedProtectedInternalAttribute : Attribute      {          private string m_name;            public NestedProtectedInternalAttribute(string name)          {              m_name = name;          }            protected internal string Name          {              get { return m_name; }              set { m_name = value; }          }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(18' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(37' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(56' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(73' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(90' 13' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_IncreaseVisibility_NestedVisibilityTest,The following statement contains a magic number: VerifyCSharp(@"  using System;    public partial class PublicContainerClass  {      [AttributeUsage(AttributeTargets.All)]      internal sealed class NestedInternalAttribute : Attribute      {          private string m_name;            public NestedInternalAttribute(string name)          {              m_name = name;          }            internal string Name          {              get { return m_name; }          }      }  }    internal class InternalContainerClass  {      [AttributeUsage(AttributeTargets.All)]      internal sealed class NestedInternalAttribute : Attribute      {          private string m_name;            public NestedInternalAttribute(string name)          {              m_name = name;          }            internal string Name          {              get { return m_name; }          }      }  }    public partial class PublicContainerClass  {      [AttributeUsage(AttributeTargets.All)]      public sealed class NestedPublicAttribute : Attribute      {          private string m_name;            public NestedPublicAttribute(string name)          {              Name = name;          }            private string Name          {              get { return m_name; }              set { m_name = value; }          }      }        [AttributeUsage(AttributeTargets.All)]      protected class NestedProtectedAttribute : Attribute      {          private string m_name;            public NestedProtectedAttribute(string name)          {              m_name = name;          }            protected string Name          {              get { return m_name; }              set { m_name = value; }          }      }        [AttributeUsage(AttributeTargets.All)]      protected internal class NestedProtectedInternalAttribute : Attribute      {          private string m_name;            public NestedProtectedInternalAttribute(string name)          {              m_name = name;          }            protected internal string Name          {              get { return m_name; }              set { m_name = value; }          }      }  }  "'              GetCA1019CSharpIncreaseVisibilityResultAt(18' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(37' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(56' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(73' 13' "Name"' "name")'              GetCA1019CSharpIncreaseVisibilityResultAt(90' 13' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_NestedVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Partial Class PublicContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Friend NotInheritable Class NestedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Friend ReadOnly Property Name() As String  			Get  				Return m_name  			End Get  		End Property  	End Class  End Class    Friend Class InternalContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Friend NotInheritable Class NestedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Friend ReadOnly Property Name() As String  			Get  				Return m_name  			End Get  		End Property  	End Class  End Class    Public Partial Class PublicContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Public NotInheritable Class NestedPublicAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			Me.Name = name  		End Sub    		Private Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class    	<AttributeUsage(AttributeTargets.All)> _  	Protected Class NestedProtectedAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Protected Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class    	<AttributeUsage(AttributeTargets.All)> _  	Protected Friend Class NestedProtectedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Protected Friend Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(15' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(33' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(51' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(70' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(89' 4' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_NestedVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Partial Class PublicContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Friend NotInheritable Class NestedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Friend ReadOnly Property Name() As String  			Get  				Return m_name  			End Get  		End Property  	End Class  End Class    Friend Class InternalContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Friend NotInheritable Class NestedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Friend ReadOnly Property Name() As String  			Get  				Return m_name  			End Get  		End Property  	End Class  End Class    Public Partial Class PublicContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Public NotInheritable Class NestedPublicAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			Me.Name = name  		End Sub    		Private Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class    	<AttributeUsage(AttributeTargets.All)> _  	Protected Class NestedProtectedAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Protected Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class    	<AttributeUsage(AttributeTargets.All)> _  	Protected Friend Class NestedProtectedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Protected Friend Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(15' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(33' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(51' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(70' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(89' 4' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_NestedVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Partial Class PublicContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Friend NotInheritable Class NestedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Friend ReadOnly Property Name() As String  			Get  				Return m_name  			End Get  		End Property  	End Class  End Class    Friend Class InternalContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Friend NotInheritable Class NestedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Friend ReadOnly Property Name() As String  			Get  				Return m_name  			End Get  		End Property  	End Class  End Class    Public Partial Class PublicContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Public NotInheritable Class NestedPublicAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			Me.Name = name  		End Sub    		Private Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class    	<AttributeUsage(AttributeTargets.All)> _  	Protected Class NestedProtectedAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Protected Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class    	<AttributeUsage(AttributeTargets.All)> _  	Protected Friend Class NestedProtectedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Protected Friend Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(15' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(33' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(51' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(70' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(89' 4' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_NestedVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Partial Class PublicContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Friend NotInheritable Class NestedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Friend ReadOnly Property Name() As String  			Get  				Return m_name  			End Get  		End Property  	End Class  End Class    Friend Class InternalContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Friend NotInheritable Class NestedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Friend ReadOnly Property Name() As String  			Get  				Return m_name  			End Get  		End Property  	End Class  End Class    Public Partial Class PublicContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Public NotInheritable Class NestedPublicAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			Me.Name = name  		End Sub    		Private Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class    	<AttributeUsage(AttributeTargets.All)> _  	Protected Class NestedProtectedAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Protected Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class    	<AttributeUsage(AttributeTargets.All)> _  	Protected Friend Class NestedProtectedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Protected Friend Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(15' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(33' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(51' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(70' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(89' 4' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_NestedVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Partial Class PublicContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Friend NotInheritable Class NestedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Friend ReadOnly Property Name() As String  			Get  				Return m_name  			End Get  		End Property  	End Class  End Class    Friend Class InternalContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Friend NotInheritable Class NestedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Friend ReadOnly Property Name() As String  			Get  				Return m_name  			End Get  		End Property  	End Class  End Class    Public Partial Class PublicContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Public NotInheritable Class NestedPublicAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			Me.Name = name  		End Sub    		Private Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class    	<AttributeUsage(AttributeTargets.All)> _  	Protected Class NestedProtectedAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Protected Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class    	<AttributeUsage(AttributeTargets.All)> _  	Protected Friend Class NestedProtectedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Protected Friend Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(15' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(33' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(51' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(70' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(89' 4' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_NestedVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Partial Class PublicContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Friend NotInheritable Class NestedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Friend ReadOnly Property Name() As String  			Get  				Return m_name  			End Get  		End Property  	End Class  End Class    Friend Class InternalContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Friend NotInheritable Class NestedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Friend ReadOnly Property Name() As String  			Get  				Return m_name  			End Get  		End Property  	End Class  End Class    Public Partial Class PublicContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Public NotInheritable Class NestedPublicAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			Me.Name = name  		End Sub    		Private Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class    	<AttributeUsage(AttributeTargets.All)> _  	Protected Class NestedProtectedAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Protected Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class    	<AttributeUsage(AttributeTargets.All)> _  	Protected Friend Class NestedProtectedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Protected Friend Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(15' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(33' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(51' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(70' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(89' 4' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_NestedVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Partial Class PublicContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Friend NotInheritable Class NestedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Friend ReadOnly Property Name() As String  			Get  				Return m_name  			End Get  		End Property  	End Class  End Class    Friend Class InternalContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Friend NotInheritable Class NestedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Friend ReadOnly Property Name() As String  			Get  				Return m_name  			End Get  		End Property  	End Class  End Class    Public Partial Class PublicContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Public NotInheritable Class NestedPublicAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			Me.Name = name  		End Sub    		Private Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class    	<AttributeUsage(AttributeTargets.All)> _  	Protected Class NestedProtectedAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Protected Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class    	<AttributeUsage(AttributeTargets.All)> _  	Protected Friend Class NestedProtectedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Protected Friend Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(15' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(33' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(51' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(70' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(89' 4' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_NestedVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Partial Class PublicContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Friend NotInheritable Class NestedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Friend ReadOnly Property Name() As String  			Get  				Return m_name  			End Get  		End Property  	End Class  End Class    Friend Class InternalContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Friend NotInheritable Class NestedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Friend ReadOnly Property Name() As String  			Get  				Return m_name  			End Get  		End Property  	End Class  End Class    Public Partial Class PublicContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Public NotInheritable Class NestedPublicAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			Me.Name = name  		End Sub    		Private Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class    	<AttributeUsage(AttributeTargets.All)> _  	Protected Class NestedProtectedAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Protected Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class    	<AttributeUsage(AttributeTargets.All)> _  	Protected Friend Class NestedProtectedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Protected Friend Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(15' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(33' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(51' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(70' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(89' 4' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_NestedVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Partial Class PublicContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Friend NotInheritable Class NestedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Friend ReadOnly Property Name() As String  			Get  				Return m_name  			End Get  		End Property  	End Class  End Class    Friend Class InternalContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Friend NotInheritable Class NestedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Friend ReadOnly Property Name() As String  			Get  				Return m_name  			End Get  		End Property  	End Class  End Class    Public Partial Class PublicContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Public NotInheritable Class NestedPublicAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			Me.Name = name  		End Sub    		Private Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class    	<AttributeUsage(AttributeTargets.All)> _  	Protected Class NestedProtectedAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Protected Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class    	<AttributeUsage(AttributeTargets.All)> _  	Protected Friend Class NestedProtectedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Protected Friend Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(15' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(33' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(51' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(70' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(89' 4' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_IncreaseVisibility_NestedVisibilityTest,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Partial Class PublicContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Friend NotInheritable Class NestedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Friend ReadOnly Property Name() As String  			Get  				Return m_name  			End Get  		End Property  	End Class  End Class    Friend Class InternalContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Friend NotInheritable Class NestedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Friend ReadOnly Property Name() As String  			Get  				Return m_name  			End Get  		End Property  	End Class  End Class    Public Partial Class PublicContainerClass  	<AttributeUsage(AttributeTargets.All)> _  	Public NotInheritable Class NestedPublicAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			Me.Name = name  		End Sub    		Private Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class    	<AttributeUsage(AttributeTargets.All)> _  	Protected Class NestedProtectedAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Protected Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class    	<AttributeUsage(AttributeTargets.All)> _  	Protected Friend Class NestedProtectedInternalAttribute  		Inherits Attribute  		Private m_name As String    		Public Sub New(name As String)  			m_name = name  		End Sub    		Protected Friend Property Name() As String  			Get  				Return m_name  			End Get  			Set  				m_name = value  			End Set  		End Property  	End Class  End Class  "'              GetCA1019BasicIncreaseVisibilityResultAt(15' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(33' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(51' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(70' 4' "Name"' "name")'              GetCA1019BasicIncreaseVisibilityResultAt(89' 4' "Name"' "name"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Collections.Generic;    [AttributeUsage(AttributeTargets.All)]  public class ParentNoAccessorAttribute : Attribute  {      private string m_name;      public ParentNoAccessorAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildNoParentAccessorAttribute : ParentNoAccessorAttribute  {      private int m_phoneNumber;      public ChildNoParentAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentProtectedAccessorAttribute : Attribute  {      private string m_name;      public ParentProtectedAccessorAttribute(string name)      {          m_name = name;      }      protected string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildProtectedAccessorAttribute : ParentProtectedAccessorAttribute  {      private int m_phoneNumber;      public ChildProtectedAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentPrivateAccessorAttribute : Attribute  {      private string m_name;      public ParentPrivateAccessorAttribute(string name)      {          m_name = name;      }      private string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildPrivateAccessorAttribute : ParentPrivateAccessorAttribute  {      private int m_phoneNumber;      public ChildPrivateAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    // Testing to see  I can handle multiple instances of the  // same property name in the inheritance hierarchy  [AttributeUsage(AttributeTargets.All)]  public class ParentSameAccessorAttribute : Attribute  {      private string m_name;      public ParentSameAccessorAttribute(string name)      {          m_name = name;      }      public string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildSameAccessorAttribute : ParentSameAccessorAttribute  {      private int m_phoneNumber;      public ChildSameAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }        protected new string Name      {          get { return base.Name; }      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericCovariantParameterAttribute : Attribute  {      private IEnumerable<object> m_data;      public GenericCovariantParameterAttribute(IEnumerable<object> data)      {          m_data = data;      }        // IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.      public IEnumerable<string> Data      {          get { return (IEnumerable<string>)m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericContravariantParameterAttribute : Attribute  {      private IComparer<string> m_data;      public GenericContravariantParameterAttribute(IComparer<string> data)      {          m_data = data;      }        // IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.      public IComparer<object> Data      {          get { return (IComparer<object>)m_data; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 45' "name"' "ParentNoAccessorAttribute")'              GetCA1019CSharpDefaultResultAt(19' 50' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(40' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(50' 51' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(71' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(81' 49' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(120' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(132' 67' "data"' "GenericCovariantParameterAttribute")'              GetCA1019CSharpDefaultResultAt(148' 69' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Collections.Generic;    [AttributeUsage(AttributeTargets.All)]  public class ParentNoAccessorAttribute : Attribute  {      private string m_name;      public ParentNoAccessorAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildNoParentAccessorAttribute : ParentNoAccessorAttribute  {      private int m_phoneNumber;      public ChildNoParentAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentProtectedAccessorAttribute : Attribute  {      private string m_name;      public ParentProtectedAccessorAttribute(string name)      {          m_name = name;      }      protected string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildProtectedAccessorAttribute : ParentProtectedAccessorAttribute  {      private int m_phoneNumber;      public ChildProtectedAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentPrivateAccessorAttribute : Attribute  {      private string m_name;      public ParentPrivateAccessorAttribute(string name)      {          m_name = name;      }      private string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildPrivateAccessorAttribute : ParentPrivateAccessorAttribute  {      private int m_phoneNumber;      public ChildPrivateAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    // Testing to see  I can handle multiple instances of the  // same property name in the inheritance hierarchy  [AttributeUsage(AttributeTargets.All)]  public class ParentSameAccessorAttribute : Attribute  {      private string m_name;      public ParentSameAccessorAttribute(string name)      {          m_name = name;      }      public string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildSameAccessorAttribute : ParentSameAccessorAttribute  {      private int m_phoneNumber;      public ChildSameAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }        protected new string Name      {          get { return base.Name; }      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericCovariantParameterAttribute : Attribute  {      private IEnumerable<object> m_data;      public GenericCovariantParameterAttribute(IEnumerable<object> data)      {          m_data = data;      }        // IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.      public IEnumerable<string> Data      {          get { return (IEnumerable<string>)m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericContravariantParameterAttribute : Attribute  {      private IComparer<string> m_data;      public GenericContravariantParameterAttribute(IComparer<string> data)      {          m_data = data;      }        // IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.      public IComparer<object> Data      {          get { return (IComparer<object>)m_data; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 45' "name"' "ParentNoAccessorAttribute")'              GetCA1019CSharpDefaultResultAt(19' 50' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(40' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(50' 51' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(71' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(81' 49' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(120' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(132' 67' "data"' "GenericCovariantParameterAttribute")'              GetCA1019CSharpDefaultResultAt(148' 69' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Collections.Generic;    [AttributeUsage(AttributeTargets.All)]  public class ParentNoAccessorAttribute : Attribute  {      private string m_name;      public ParentNoAccessorAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildNoParentAccessorAttribute : ParentNoAccessorAttribute  {      private int m_phoneNumber;      public ChildNoParentAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentProtectedAccessorAttribute : Attribute  {      private string m_name;      public ParentProtectedAccessorAttribute(string name)      {          m_name = name;      }      protected string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildProtectedAccessorAttribute : ParentProtectedAccessorAttribute  {      private int m_phoneNumber;      public ChildProtectedAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentPrivateAccessorAttribute : Attribute  {      private string m_name;      public ParentPrivateAccessorAttribute(string name)      {          m_name = name;      }      private string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildPrivateAccessorAttribute : ParentPrivateAccessorAttribute  {      private int m_phoneNumber;      public ChildPrivateAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    // Testing to see  I can handle multiple instances of the  // same property name in the inheritance hierarchy  [AttributeUsage(AttributeTargets.All)]  public class ParentSameAccessorAttribute : Attribute  {      private string m_name;      public ParentSameAccessorAttribute(string name)      {          m_name = name;      }      public string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildSameAccessorAttribute : ParentSameAccessorAttribute  {      private int m_phoneNumber;      public ChildSameAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }        protected new string Name      {          get { return base.Name; }      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericCovariantParameterAttribute : Attribute  {      private IEnumerable<object> m_data;      public GenericCovariantParameterAttribute(IEnumerable<object> data)      {          m_data = data;      }        // IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.      public IEnumerable<string> Data      {          get { return (IEnumerable<string>)m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericContravariantParameterAttribute : Attribute  {      private IComparer<string> m_data;      public GenericContravariantParameterAttribute(IComparer<string> data)      {          m_data = data;      }        // IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.      public IComparer<object> Data      {          get { return (IComparer<object>)m_data; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 45' "name"' "ParentNoAccessorAttribute")'              GetCA1019CSharpDefaultResultAt(19' 50' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(40' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(50' 51' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(71' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(81' 49' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(120' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(132' 67' "data"' "GenericCovariantParameterAttribute")'              GetCA1019CSharpDefaultResultAt(148' 69' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Collections.Generic;    [AttributeUsage(AttributeTargets.All)]  public class ParentNoAccessorAttribute : Attribute  {      private string m_name;      public ParentNoAccessorAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildNoParentAccessorAttribute : ParentNoAccessorAttribute  {      private int m_phoneNumber;      public ChildNoParentAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentProtectedAccessorAttribute : Attribute  {      private string m_name;      public ParentProtectedAccessorAttribute(string name)      {          m_name = name;      }      protected string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildProtectedAccessorAttribute : ParentProtectedAccessorAttribute  {      private int m_phoneNumber;      public ChildProtectedAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentPrivateAccessorAttribute : Attribute  {      private string m_name;      public ParentPrivateAccessorAttribute(string name)      {          m_name = name;      }      private string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildPrivateAccessorAttribute : ParentPrivateAccessorAttribute  {      private int m_phoneNumber;      public ChildPrivateAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    // Testing to see  I can handle multiple instances of the  // same property name in the inheritance hierarchy  [AttributeUsage(AttributeTargets.All)]  public class ParentSameAccessorAttribute : Attribute  {      private string m_name;      public ParentSameAccessorAttribute(string name)      {          m_name = name;      }      public string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildSameAccessorAttribute : ParentSameAccessorAttribute  {      private int m_phoneNumber;      public ChildSameAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }        protected new string Name      {          get { return base.Name; }      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericCovariantParameterAttribute : Attribute  {      private IEnumerable<object> m_data;      public GenericCovariantParameterAttribute(IEnumerable<object> data)      {          m_data = data;      }        // IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.      public IEnumerable<string> Data      {          get { return (IEnumerable<string>)m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericContravariantParameterAttribute : Attribute  {      private IComparer<string> m_data;      public GenericContravariantParameterAttribute(IComparer<string> data)      {          m_data = data;      }        // IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.      public IComparer<object> Data      {          get { return (IComparer<object>)m_data; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 45' "name"' "ParentNoAccessorAttribute")'              GetCA1019CSharpDefaultResultAt(19' 50' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(40' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(50' 51' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(71' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(81' 49' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(120' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(132' 67' "data"' "GenericCovariantParameterAttribute")'              GetCA1019CSharpDefaultResultAt(148' 69' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Collections.Generic;    [AttributeUsage(AttributeTargets.All)]  public class ParentNoAccessorAttribute : Attribute  {      private string m_name;      public ParentNoAccessorAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildNoParentAccessorAttribute : ParentNoAccessorAttribute  {      private int m_phoneNumber;      public ChildNoParentAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentProtectedAccessorAttribute : Attribute  {      private string m_name;      public ParentProtectedAccessorAttribute(string name)      {          m_name = name;      }      protected string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildProtectedAccessorAttribute : ParentProtectedAccessorAttribute  {      private int m_phoneNumber;      public ChildProtectedAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentPrivateAccessorAttribute : Attribute  {      private string m_name;      public ParentPrivateAccessorAttribute(string name)      {          m_name = name;      }      private string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildPrivateAccessorAttribute : ParentPrivateAccessorAttribute  {      private int m_phoneNumber;      public ChildPrivateAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    // Testing to see  I can handle multiple instances of the  // same property name in the inheritance hierarchy  [AttributeUsage(AttributeTargets.All)]  public class ParentSameAccessorAttribute : Attribute  {      private string m_name;      public ParentSameAccessorAttribute(string name)      {          m_name = name;      }      public string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildSameAccessorAttribute : ParentSameAccessorAttribute  {      private int m_phoneNumber;      public ChildSameAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }        protected new string Name      {          get { return base.Name; }      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericCovariantParameterAttribute : Attribute  {      private IEnumerable<object> m_data;      public GenericCovariantParameterAttribute(IEnumerable<object> data)      {          m_data = data;      }        // IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.      public IEnumerable<string> Data      {          get { return (IEnumerable<string>)m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericContravariantParameterAttribute : Attribute  {      private IComparer<string> m_data;      public GenericContravariantParameterAttribute(IComparer<string> data)      {          m_data = data;      }        // IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.      public IComparer<object> Data      {          get { return (IComparer<object>)m_data; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 45' "name"' "ParentNoAccessorAttribute")'              GetCA1019CSharpDefaultResultAt(19' 50' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(40' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(50' 51' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(71' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(81' 49' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(120' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(132' 67' "data"' "GenericCovariantParameterAttribute")'              GetCA1019CSharpDefaultResultAt(148' 69' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Collections.Generic;    [AttributeUsage(AttributeTargets.All)]  public class ParentNoAccessorAttribute : Attribute  {      private string m_name;      public ParentNoAccessorAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildNoParentAccessorAttribute : ParentNoAccessorAttribute  {      private int m_phoneNumber;      public ChildNoParentAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentProtectedAccessorAttribute : Attribute  {      private string m_name;      public ParentProtectedAccessorAttribute(string name)      {          m_name = name;      }      protected string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildProtectedAccessorAttribute : ParentProtectedAccessorAttribute  {      private int m_phoneNumber;      public ChildProtectedAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentPrivateAccessorAttribute : Attribute  {      private string m_name;      public ParentPrivateAccessorAttribute(string name)      {          m_name = name;      }      private string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildPrivateAccessorAttribute : ParentPrivateAccessorAttribute  {      private int m_phoneNumber;      public ChildPrivateAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    // Testing to see  I can handle multiple instances of the  // same property name in the inheritance hierarchy  [AttributeUsage(AttributeTargets.All)]  public class ParentSameAccessorAttribute : Attribute  {      private string m_name;      public ParentSameAccessorAttribute(string name)      {          m_name = name;      }      public string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildSameAccessorAttribute : ParentSameAccessorAttribute  {      private int m_phoneNumber;      public ChildSameAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }        protected new string Name      {          get { return base.Name; }      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericCovariantParameterAttribute : Attribute  {      private IEnumerable<object> m_data;      public GenericCovariantParameterAttribute(IEnumerable<object> data)      {          m_data = data;      }        // IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.      public IEnumerable<string> Data      {          get { return (IEnumerable<string>)m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericContravariantParameterAttribute : Attribute  {      private IComparer<string> m_data;      public GenericContravariantParameterAttribute(IComparer<string> data)      {          m_data = data;      }        // IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.      public IComparer<object> Data      {          get { return (IComparer<object>)m_data; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 45' "name"' "ParentNoAccessorAttribute")'              GetCA1019CSharpDefaultResultAt(19' 50' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(40' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(50' 51' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(71' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(81' 49' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(120' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(132' 67' "data"' "GenericCovariantParameterAttribute")'              GetCA1019CSharpDefaultResultAt(148' 69' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Collections.Generic;    [AttributeUsage(AttributeTargets.All)]  public class ParentNoAccessorAttribute : Attribute  {      private string m_name;      public ParentNoAccessorAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildNoParentAccessorAttribute : ParentNoAccessorAttribute  {      private int m_phoneNumber;      public ChildNoParentAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentProtectedAccessorAttribute : Attribute  {      private string m_name;      public ParentProtectedAccessorAttribute(string name)      {          m_name = name;      }      protected string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildProtectedAccessorAttribute : ParentProtectedAccessorAttribute  {      private int m_phoneNumber;      public ChildProtectedAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentPrivateAccessorAttribute : Attribute  {      private string m_name;      public ParentPrivateAccessorAttribute(string name)      {          m_name = name;      }      private string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildPrivateAccessorAttribute : ParentPrivateAccessorAttribute  {      private int m_phoneNumber;      public ChildPrivateAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    // Testing to see  I can handle multiple instances of the  // same property name in the inheritance hierarchy  [AttributeUsage(AttributeTargets.All)]  public class ParentSameAccessorAttribute : Attribute  {      private string m_name;      public ParentSameAccessorAttribute(string name)      {          m_name = name;      }      public string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildSameAccessorAttribute : ParentSameAccessorAttribute  {      private int m_phoneNumber;      public ChildSameAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }        protected new string Name      {          get { return base.Name; }      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericCovariantParameterAttribute : Attribute  {      private IEnumerable<object> m_data;      public GenericCovariantParameterAttribute(IEnumerable<object> data)      {          m_data = data;      }        // IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.      public IEnumerable<string> Data      {          get { return (IEnumerable<string>)m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericContravariantParameterAttribute : Attribute  {      private IComparer<string> m_data;      public GenericContravariantParameterAttribute(IComparer<string> data)      {          m_data = data;      }        // IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.      public IComparer<object> Data      {          get { return (IComparer<object>)m_data; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 45' "name"' "ParentNoAccessorAttribute")'              GetCA1019CSharpDefaultResultAt(19' 50' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(40' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(50' 51' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(71' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(81' 49' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(120' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(132' 67' "data"' "GenericCovariantParameterAttribute")'              GetCA1019CSharpDefaultResultAt(148' 69' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Collections.Generic;    [AttributeUsage(AttributeTargets.All)]  public class ParentNoAccessorAttribute : Attribute  {      private string m_name;      public ParentNoAccessorAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildNoParentAccessorAttribute : ParentNoAccessorAttribute  {      private int m_phoneNumber;      public ChildNoParentAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentProtectedAccessorAttribute : Attribute  {      private string m_name;      public ParentProtectedAccessorAttribute(string name)      {          m_name = name;      }      protected string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildProtectedAccessorAttribute : ParentProtectedAccessorAttribute  {      private int m_phoneNumber;      public ChildProtectedAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentPrivateAccessorAttribute : Attribute  {      private string m_name;      public ParentPrivateAccessorAttribute(string name)      {          m_name = name;      }      private string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildPrivateAccessorAttribute : ParentPrivateAccessorAttribute  {      private int m_phoneNumber;      public ChildPrivateAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    // Testing to see  I can handle multiple instances of the  // same property name in the inheritance hierarchy  [AttributeUsage(AttributeTargets.All)]  public class ParentSameAccessorAttribute : Attribute  {      private string m_name;      public ParentSameAccessorAttribute(string name)      {          m_name = name;      }      public string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildSameAccessorAttribute : ParentSameAccessorAttribute  {      private int m_phoneNumber;      public ChildSameAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }        protected new string Name      {          get { return base.Name; }      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericCovariantParameterAttribute : Attribute  {      private IEnumerable<object> m_data;      public GenericCovariantParameterAttribute(IEnumerable<object> data)      {          m_data = data;      }        // IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.      public IEnumerable<string> Data      {          get { return (IEnumerable<string>)m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericContravariantParameterAttribute : Attribute  {      private IComparer<string> m_data;      public GenericContravariantParameterAttribute(IComparer<string> data)      {          m_data = data;      }        // IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.      public IComparer<object> Data      {          get { return (IComparer<object>)m_data; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 45' "name"' "ParentNoAccessorAttribute")'              GetCA1019CSharpDefaultResultAt(19' 50' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(40' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(50' 51' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(71' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(81' 49' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(120' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(132' 67' "data"' "GenericCovariantParameterAttribute")'              GetCA1019CSharpDefaultResultAt(148' 69' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Collections.Generic;    [AttributeUsage(AttributeTargets.All)]  public class ParentNoAccessorAttribute : Attribute  {      private string m_name;      public ParentNoAccessorAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildNoParentAccessorAttribute : ParentNoAccessorAttribute  {      private int m_phoneNumber;      public ChildNoParentAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentProtectedAccessorAttribute : Attribute  {      private string m_name;      public ParentProtectedAccessorAttribute(string name)      {          m_name = name;      }      protected string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildProtectedAccessorAttribute : ParentProtectedAccessorAttribute  {      private int m_phoneNumber;      public ChildProtectedAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentPrivateAccessorAttribute : Attribute  {      private string m_name;      public ParentPrivateAccessorAttribute(string name)      {          m_name = name;      }      private string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildPrivateAccessorAttribute : ParentPrivateAccessorAttribute  {      private int m_phoneNumber;      public ChildPrivateAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    // Testing to see  I can handle multiple instances of the  // same property name in the inheritance hierarchy  [AttributeUsage(AttributeTargets.All)]  public class ParentSameAccessorAttribute : Attribute  {      private string m_name;      public ParentSameAccessorAttribute(string name)      {          m_name = name;      }      public string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildSameAccessorAttribute : ParentSameAccessorAttribute  {      private int m_phoneNumber;      public ChildSameAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }        protected new string Name      {          get { return base.Name; }      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericCovariantParameterAttribute : Attribute  {      private IEnumerable<object> m_data;      public GenericCovariantParameterAttribute(IEnumerable<object> data)      {          m_data = data;      }        // IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.      public IEnumerable<string> Data      {          get { return (IEnumerable<string>)m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericContravariantParameterAttribute : Attribute  {      private IComparer<string> m_data;      public GenericContravariantParameterAttribute(IComparer<string> data)      {          m_data = data;      }        // IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.      public IComparer<object> Data      {          get { return (IComparer<object>)m_data; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 45' "name"' "ParentNoAccessorAttribute")'              GetCA1019CSharpDefaultResultAt(19' 50' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(40' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(50' 51' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(71' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(81' 49' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(120' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(132' 67' "data"' "GenericCovariantParameterAttribute")'              GetCA1019CSharpDefaultResultAt(148' 69' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Collections.Generic;    [AttributeUsage(AttributeTargets.All)]  public class ParentNoAccessorAttribute : Attribute  {      private string m_name;      public ParentNoAccessorAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildNoParentAccessorAttribute : ParentNoAccessorAttribute  {      private int m_phoneNumber;      public ChildNoParentAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentProtectedAccessorAttribute : Attribute  {      private string m_name;      public ParentProtectedAccessorAttribute(string name)      {          m_name = name;      }      protected string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildProtectedAccessorAttribute : ParentProtectedAccessorAttribute  {      private int m_phoneNumber;      public ChildProtectedAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentPrivateAccessorAttribute : Attribute  {      private string m_name;      public ParentPrivateAccessorAttribute(string name)      {          m_name = name;      }      private string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildPrivateAccessorAttribute : ParentPrivateAccessorAttribute  {      private int m_phoneNumber;      public ChildPrivateAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    // Testing to see  I can handle multiple instances of the  // same property name in the inheritance hierarchy  [AttributeUsage(AttributeTargets.All)]  public class ParentSameAccessorAttribute : Attribute  {      private string m_name;      public ParentSameAccessorAttribute(string name)      {          m_name = name;      }      public string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildSameAccessorAttribute : ParentSameAccessorAttribute  {      private int m_phoneNumber;      public ChildSameAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }        protected new string Name      {          get { return base.Name; }      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericCovariantParameterAttribute : Attribute  {      private IEnumerable<object> m_data;      public GenericCovariantParameterAttribute(IEnumerable<object> data)      {          m_data = data;      }        // IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.      public IEnumerable<string> Data      {          get { return (IEnumerable<string>)m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericContravariantParameterAttribute : Attribute  {      private IComparer<string> m_data;      public GenericContravariantParameterAttribute(IComparer<string> data)      {          m_data = data;      }        // IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.      public IComparer<object> Data      {          get { return (IComparer<object>)m_data; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 45' "name"' "ParentNoAccessorAttribute")'              GetCA1019CSharpDefaultResultAt(19' 50' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(40' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(50' 51' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(71' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(81' 49' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(120' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(132' 67' "data"' "GenericCovariantParameterAttribute")'              GetCA1019CSharpDefaultResultAt(148' 69' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Collections.Generic;    [AttributeUsage(AttributeTargets.All)]  public class ParentNoAccessorAttribute : Attribute  {      private string m_name;      public ParentNoAccessorAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildNoParentAccessorAttribute : ParentNoAccessorAttribute  {      private int m_phoneNumber;      public ChildNoParentAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentProtectedAccessorAttribute : Attribute  {      private string m_name;      public ParentProtectedAccessorAttribute(string name)      {          m_name = name;      }      protected string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildProtectedAccessorAttribute : ParentProtectedAccessorAttribute  {      private int m_phoneNumber;      public ChildProtectedAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentPrivateAccessorAttribute : Attribute  {      private string m_name;      public ParentPrivateAccessorAttribute(string name)      {          m_name = name;      }      private string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildPrivateAccessorAttribute : ParentPrivateAccessorAttribute  {      private int m_phoneNumber;      public ChildPrivateAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    // Testing to see  I can handle multiple instances of the  // same property name in the inheritance hierarchy  [AttributeUsage(AttributeTargets.All)]  public class ParentSameAccessorAttribute : Attribute  {      private string m_name;      public ParentSameAccessorAttribute(string name)      {          m_name = name;      }      public string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildSameAccessorAttribute : ParentSameAccessorAttribute  {      private int m_phoneNumber;      public ChildSameAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }        protected new string Name      {          get { return base.Name; }      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericCovariantParameterAttribute : Attribute  {      private IEnumerable<object> m_data;      public GenericCovariantParameterAttribute(IEnumerable<object> data)      {          m_data = data;      }        // IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.      public IEnumerable<string> Data      {          get { return (IEnumerable<string>)m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericContravariantParameterAttribute : Attribute  {      private IComparer<string> m_data;      public GenericContravariantParameterAttribute(IComparer<string> data)      {          m_data = data;      }        // IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.      public IComparer<object> Data      {          get { return (IComparer<object>)m_data; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 45' "name"' "ParentNoAccessorAttribute")'              GetCA1019CSharpDefaultResultAt(19' 50' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(40' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(50' 51' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(71' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(81' 49' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(120' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(132' 67' "data"' "GenericCovariantParameterAttribute")'              GetCA1019CSharpDefaultResultAt(148' 69' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Collections.Generic;    [AttributeUsage(AttributeTargets.All)]  public class ParentNoAccessorAttribute : Attribute  {      private string m_name;      public ParentNoAccessorAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildNoParentAccessorAttribute : ParentNoAccessorAttribute  {      private int m_phoneNumber;      public ChildNoParentAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentProtectedAccessorAttribute : Attribute  {      private string m_name;      public ParentProtectedAccessorAttribute(string name)      {          m_name = name;      }      protected string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildProtectedAccessorAttribute : ParentProtectedAccessorAttribute  {      private int m_phoneNumber;      public ChildProtectedAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentPrivateAccessorAttribute : Attribute  {      private string m_name;      public ParentPrivateAccessorAttribute(string name)      {          m_name = name;      }      private string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildPrivateAccessorAttribute : ParentPrivateAccessorAttribute  {      private int m_phoneNumber;      public ChildPrivateAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    // Testing to see  I can handle multiple instances of the  // same property name in the inheritance hierarchy  [AttributeUsage(AttributeTargets.All)]  public class ParentSameAccessorAttribute : Attribute  {      private string m_name;      public ParentSameAccessorAttribute(string name)      {          m_name = name;      }      public string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildSameAccessorAttribute : ParentSameAccessorAttribute  {      private int m_phoneNumber;      public ChildSameAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }        protected new string Name      {          get { return base.Name; }      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericCovariantParameterAttribute : Attribute  {      private IEnumerable<object> m_data;      public GenericCovariantParameterAttribute(IEnumerable<object> data)      {          m_data = data;      }        // IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.      public IEnumerable<string> Data      {          get { return (IEnumerable<string>)m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericContravariantParameterAttribute : Attribute  {      private IComparer<string> m_data;      public GenericContravariantParameterAttribute(IComparer<string> data)      {          m_data = data;      }        // IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.      public IComparer<object> Data      {          get { return (IComparer<object>)m_data; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 45' "name"' "ParentNoAccessorAttribute")'              GetCA1019CSharpDefaultResultAt(19' 50' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(40' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(50' 51' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(71' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(81' 49' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(120' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(132' 67' "data"' "GenericCovariantParameterAttribute")'              GetCA1019CSharpDefaultResultAt(148' 69' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Collections.Generic;    [AttributeUsage(AttributeTargets.All)]  public class ParentNoAccessorAttribute : Attribute  {      private string m_name;      public ParentNoAccessorAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildNoParentAccessorAttribute : ParentNoAccessorAttribute  {      private int m_phoneNumber;      public ChildNoParentAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentProtectedAccessorAttribute : Attribute  {      private string m_name;      public ParentProtectedAccessorAttribute(string name)      {          m_name = name;      }      protected string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildProtectedAccessorAttribute : ParentProtectedAccessorAttribute  {      private int m_phoneNumber;      public ChildProtectedAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentPrivateAccessorAttribute : Attribute  {      private string m_name;      public ParentPrivateAccessorAttribute(string name)      {          m_name = name;      }      private string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildPrivateAccessorAttribute : ParentPrivateAccessorAttribute  {      private int m_phoneNumber;      public ChildPrivateAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    // Testing to see  I can handle multiple instances of the  // same property name in the inheritance hierarchy  [AttributeUsage(AttributeTargets.All)]  public class ParentSameAccessorAttribute : Attribute  {      private string m_name;      public ParentSameAccessorAttribute(string name)      {          m_name = name;      }      public string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildSameAccessorAttribute : ParentSameAccessorAttribute  {      private int m_phoneNumber;      public ChildSameAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }        protected new string Name      {          get { return base.Name; }      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericCovariantParameterAttribute : Attribute  {      private IEnumerable<object> m_data;      public GenericCovariantParameterAttribute(IEnumerable<object> data)      {          m_data = data;      }        // IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.      public IEnumerable<string> Data      {          get { return (IEnumerable<string>)m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericContravariantParameterAttribute : Attribute  {      private IComparer<string> m_data;      public GenericContravariantParameterAttribute(IComparer<string> data)      {          m_data = data;      }        // IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.      public IComparer<object> Data      {          get { return (IComparer<object>)m_data; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 45' "name"' "ParentNoAccessorAttribute")'              GetCA1019CSharpDefaultResultAt(19' 50' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(40' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(50' 51' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(71' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(81' 49' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(120' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(132' 67' "data"' "GenericCovariantParameterAttribute")'              GetCA1019CSharpDefaultResultAt(148' 69' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Collections.Generic;    [AttributeUsage(AttributeTargets.All)]  public class ParentNoAccessorAttribute : Attribute  {      private string m_name;      public ParentNoAccessorAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildNoParentAccessorAttribute : ParentNoAccessorAttribute  {      private int m_phoneNumber;      public ChildNoParentAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentProtectedAccessorAttribute : Attribute  {      private string m_name;      public ParentProtectedAccessorAttribute(string name)      {          m_name = name;      }      protected string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildProtectedAccessorAttribute : ParentProtectedAccessorAttribute  {      private int m_phoneNumber;      public ChildProtectedAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentPrivateAccessorAttribute : Attribute  {      private string m_name;      public ParentPrivateAccessorAttribute(string name)      {          m_name = name;      }      private string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildPrivateAccessorAttribute : ParentPrivateAccessorAttribute  {      private int m_phoneNumber;      public ChildPrivateAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    // Testing to see  I can handle multiple instances of the  // same property name in the inheritance hierarchy  [AttributeUsage(AttributeTargets.All)]  public class ParentSameAccessorAttribute : Attribute  {      private string m_name;      public ParentSameAccessorAttribute(string name)      {          m_name = name;      }      public string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildSameAccessorAttribute : ParentSameAccessorAttribute  {      private int m_phoneNumber;      public ChildSameAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }        protected new string Name      {          get { return base.Name; }      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericCovariantParameterAttribute : Attribute  {      private IEnumerable<object> m_data;      public GenericCovariantParameterAttribute(IEnumerable<object> data)      {          m_data = data;      }        // IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.      public IEnumerable<string> Data      {          get { return (IEnumerable<string>)m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericContravariantParameterAttribute : Attribute  {      private IComparer<string> m_data;      public GenericContravariantParameterAttribute(IComparer<string> data)      {          m_data = data;      }        // IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.      public IComparer<object> Data      {          get { return (IComparer<object>)m_data; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 45' "name"' "ParentNoAccessorAttribute")'              GetCA1019CSharpDefaultResultAt(19' 50' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(40' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(50' 51' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(71' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(81' 49' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(120' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(132' 67' "data"' "GenericCovariantParameterAttribute")'              GetCA1019CSharpDefaultResultAt(148' 69' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Collections.Generic;    [AttributeUsage(AttributeTargets.All)]  public class ParentNoAccessorAttribute : Attribute  {      private string m_name;      public ParentNoAccessorAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildNoParentAccessorAttribute : ParentNoAccessorAttribute  {      private int m_phoneNumber;      public ChildNoParentAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentProtectedAccessorAttribute : Attribute  {      private string m_name;      public ParentProtectedAccessorAttribute(string name)      {          m_name = name;      }      protected string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildProtectedAccessorAttribute : ParentProtectedAccessorAttribute  {      private int m_phoneNumber;      public ChildProtectedAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentPrivateAccessorAttribute : Attribute  {      private string m_name;      public ParentPrivateAccessorAttribute(string name)      {          m_name = name;      }      private string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildPrivateAccessorAttribute : ParentPrivateAccessorAttribute  {      private int m_phoneNumber;      public ChildPrivateAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    // Testing to see  I can handle multiple instances of the  // same property name in the inheritance hierarchy  [AttributeUsage(AttributeTargets.All)]  public class ParentSameAccessorAttribute : Attribute  {      private string m_name;      public ParentSameAccessorAttribute(string name)      {          m_name = name;      }      public string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildSameAccessorAttribute : ParentSameAccessorAttribute  {      private int m_phoneNumber;      public ChildSameAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }        protected new string Name      {          get { return base.Name; }      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericCovariantParameterAttribute : Attribute  {      private IEnumerable<object> m_data;      public GenericCovariantParameterAttribute(IEnumerable<object> data)      {          m_data = data;      }        // IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.      public IEnumerable<string> Data      {          get { return (IEnumerable<string>)m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericContravariantParameterAttribute : Attribute  {      private IComparer<string> m_data;      public GenericContravariantParameterAttribute(IComparer<string> data)      {          m_data = data;      }        // IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.      public IComparer<object> Data      {          get { return (IComparer<object>)m_data; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 45' "name"' "ParentNoAccessorAttribute")'              GetCA1019CSharpDefaultResultAt(19' 50' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(40' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(50' 51' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(71' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(81' 49' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(120' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(132' 67' "data"' "GenericCovariantParameterAttribute")'              GetCA1019CSharpDefaultResultAt(148' 69' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Collections.Generic;    [AttributeUsage(AttributeTargets.All)]  public class ParentNoAccessorAttribute : Attribute  {      private string m_name;      public ParentNoAccessorAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildNoParentAccessorAttribute : ParentNoAccessorAttribute  {      private int m_phoneNumber;      public ChildNoParentAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentProtectedAccessorAttribute : Attribute  {      private string m_name;      public ParentProtectedAccessorAttribute(string name)      {          m_name = name;      }      protected string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildProtectedAccessorAttribute : ParentProtectedAccessorAttribute  {      private int m_phoneNumber;      public ChildProtectedAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentPrivateAccessorAttribute : Attribute  {      private string m_name;      public ParentPrivateAccessorAttribute(string name)      {          m_name = name;      }      private string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildPrivateAccessorAttribute : ParentPrivateAccessorAttribute  {      private int m_phoneNumber;      public ChildPrivateAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    // Testing to see  I can handle multiple instances of the  // same property name in the inheritance hierarchy  [AttributeUsage(AttributeTargets.All)]  public class ParentSameAccessorAttribute : Attribute  {      private string m_name;      public ParentSameAccessorAttribute(string name)      {          m_name = name;      }      public string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildSameAccessorAttribute : ParentSameAccessorAttribute  {      private int m_phoneNumber;      public ChildSameAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }        protected new string Name      {          get { return base.Name; }      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericCovariantParameterAttribute : Attribute  {      private IEnumerable<object> m_data;      public GenericCovariantParameterAttribute(IEnumerable<object> data)      {          m_data = data;      }        // IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.      public IEnumerable<string> Data      {          get { return (IEnumerable<string>)m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericContravariantParameterAttribute : Attribute  {      private IComparer<string> m_data;      public GenericContravariantParameterAttribute(IComparer<string> data)      {          m_data = data;      }        // IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.      public IComparer<object> Data      {          get { return (IComparer<object>)m_data; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 45' "name"' "ParentNoAccessorAttribute")'              GetCA1019CSharpDefaultResultAt(19' 50' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(40' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(50' 51' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(71' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(81' 49' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(120' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(132' 67' "data"' "GenericCovariantParameterAttribute")'              GetCA1019CSharpDefaultResultAt(148' 69' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Collections.Generic;    [AttributeUsage(AttributeTargets.All)]  public class ParentNoAccessorAttribute : Attribute  {      private string m_name;      public ParentNoAccessorAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildNoParentAccessorAttribute : ParentNoAccessorAttribute  {      private int m_phoneNumber;      public ChildNoParentAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentProtectedAccessorAttribute : Attribute  {      private string m_name;      public ParentProtectedAccessorAttribute(string name)      {          m_name = name;      }      protected string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildProtectedAccessorAttribute : ParentProtectedAccessorAttribute  {      private int m_phoneNumber;      public ChildProtectedAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentPrivateAccessorAttribute : Attribute  {      private string m_name;      public ParentPrivateAccessorAttribute(string name)      {          m_name = name;      }      private string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildPrivateAccessorAttribute : ParentPrivateAccessorAttribute  {      private int m_phoneNumber;      public ChildPrivateAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    // Testing to see  I can handle multiple instances of the  // same property name in the inheritance hierarchy  [AttributeUsage(AttributeTargets.All)]  public class ParentSameAccessorAttribute : Attribute  {      private string m_name;      public ParentSameAccessorAttribute(string name)      {          m_name = name;      }      public string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildSameAccessorAttribute : ParentSameAccessorAttribute  {      private int m_phoneNumber;      public ChildSameAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }        protected new string Name      {          get { return base.Name; }      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericCovariantParameterAttribute : Attribute  {      private IEnumerable<object> m_data;      public GenericCovariantParameterAttribute(IEnumerable<object> data)      {          m_data = data;      }        // IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.      public IEnumerable<string> Data      {          get { return (IEnumerable<string>)m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericContravariantParameterAttribute : Attribute  {      private IComparer<string> m_data;      public GenericContravariantParameterAttribute(IComparer<string> data)      {          m_data = data;      }        // IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.      public IComparer<object> Data      {          get { return (IComparer<object>)m_data; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 45' "name"' "ParentNoAccessorAttribute")'              GetCA1019CSharpDefaultResultAt(19' 50' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(40' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(50' 51' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(71' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(81' 49' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(120' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(132' 67' "data"' "GenericCovariantParameterAttribute")'              GetCA1019CSharpDefaultResultAt(148' 69' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Collections.Generic;    [AttributeUsage(AttributeTargets.All)]  public class ParentNoAccessorAttribute : Attribute  {      private string m_name;      public ParentNoAccessorAttribute(string name)      {          m_name = name;      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildNoParentAccessorAttribute : ParentNoAccessorAttribute  {      private int m_phoneNumber;      public ChildNoParentAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentProtectedAccessorAttribute : Attribute  {      private string m_name;      public ParentProtectedAccessorAttribute(string name)      {          m_name = name;      }      protected string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildProtectedAccessorAttribute : ParentProtectedAccessorAttribute  {      private int m_phoneNumber;      public ChildProtectedAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ParentPrivateAccessorAttribute : Attribute  {      private string m_name;      public ParentPrivateAccessorAttribute(string name)      {          m_name = name;      }      private string Name      {          get { return m_name; }      }  }    // I should be firing on this but I should be firing the default resolution instead of   // the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  [AttributeUsage(AttributeTargets.All)]  public class ChildPrivateAccessorAttribute : ParentPrivateAccessorAttribute  {      private int m_phoneNumber;      public ChildPrivateAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    // Testing to see  I can handle multiple instances of the  // same property name in the inheritance hierarchy  [AttributeUsage(AttributeTargets.All)]  public class ParentSameAccessorAttribute : Attribute  {      private string m_name;      public ParentSameAccessorAttribute(string name)      {          m_name = name;      }      public string Name      {          get { return m_name; }      }  }    [AttributeUsage(AttributeTargets.All)]  public class ChildSameAccessorAttribute : ParentSameAccessorAttribute  {      private int m_phoneNumber;      public ChildSameAccessorAttribute(string name' int phoneNumber)          : base(name)      {          m_phoneNumber = phoneNumber;      }        protected new string Name      {          get { return base.Name; }      }      public int PhoneNumber      {          get { return m_phoneNumber; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericCovariantParameterAttribute : Attribute  {      private IEnumerable<object> m_data;      public GenericCovariantParameterAttribute(IEnumerable<object> data)      {          m_data = data;      }        // IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.      public IEnumerable<string> Data      {          get { return (IEnumerable<string>)m_data; }      }  }    [AttributeUsage(AttributeTargets.All)]  public sealed class GenericContravariantParameterAttribute : Attribute  {      private IComparer<string> m_data;      public GenericContravariantParameterAttribute(IComparer<string> data)      {          m_data = data;      }        // IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.      public IComparer<object> Data      {          get { return (IComparer<object>)m_data; }      }  }  "'              GetCA1019CSharpDefaultResultAt(9' 45' "name"' "ParentNoAccessorAttribute")'              GetCA1019CSharpDefaultResultAt(19' 50' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(40' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(50' 51' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(71' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(81' 49' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019CSharpIncreaseVisibilityResultAt(120' 9' "Name"' "name")'              GetCA1019CSharpDefaultResultAt(132' 67' "data"' "GenericCovariantParameterAttribute")'              GetCA1019CSharpDefaultResultAt(148' 69' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Collections.Generic    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentNoAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildNoParentAccessorAttribute  	Inherits ParentNoAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentProtectedAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildProtectedAccessorAttribute  	Inherits ParentProtectedAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentPrivateAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildPrivateAccessorAttribute  	Inherits ParentPrivateAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    ' Testing to see  I can handle multiple instances of the  ' same property name in the inheritance hierarchy  <AttributeUsage(AttributeTargets.All)> _  Public Class ParentSameAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Public ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildSameAccessorAttribute  	Inherits ParentSameAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub    	Protected Shadows ReadOnly Property Name() As String  		Get  			Return MyBase.Name  		End Get  	End Property  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericCovariantParameterAttribute  	Inherits Attribute  	Private m_data As IEnumerable(Of Object)  	Public Sub New(data As IEnumerable(Of Object))  		m_data = data  	End Sub    	' IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IEnumerable(Of String)  		Get  			Return DirectCast(m_data' IEnumerable(Of String))  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericContravariantParameterAttribute  	Inherits Attribute  	Private m_data As IComparer(Of String)  	Public Sub New(data As IComparer(Of String))  		m_data = data  	End Sub    	' IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IComparer(Of Object)  		Get  			Return DirectCast(m_data' IComparer(Of Object))  		End Get  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "ParentNoAccessorAttribute")'              GetCA1019BasicDefaultResultAt(18' 17' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(37' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(49' 17' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(68' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(80' 17' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(117' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(132' 17' "data"' "GenericCovariantParameterAttribute")'              GetCA1019BasicDefaultResultAt(148' 17' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Collections.Generic    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentNoAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildNoParentAccessorAttribute  	Inherits ParentNoAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentProtectedAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildProtectedAccessorAttribute  	Inherits ParentProtectedAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentPrivateAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildPrivateAccessorAttribute  	Inherits ParentPrivateAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    ' Testing to see  I can handle multiple instances of the  ' same property name in the inheritance hierarchy  <AttributeUsage(AttributeTargets.All)> _  Public Class ParentSameAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Public ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildSameAccessorAttribute  	Inherits ParentSameAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub    	Protected Shadows ReadOnly Property Name() As String  		Get  			Return MyBase.Name  		End Get  	End Property  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericCovariantParameterAttribute  	Inherits Attribute  	Private m_data As IEnumerable(Of Object)  	Public Sub New(data As IEnumerable(Of Object))  		m_data = data  	End Sub    	' IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IEnumerable(Of String)  		Get  			Return DirectCast(m_data' IEnumerable(Of String))  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericContravariantParameterAttribute  	Inherits Attribute  	Private m_data As IComparer(Of String)  	Public Sub New(data As IComparer(Of String))  		m_data = data  	End Sub    	' IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IComparer(Of Object)  		Get  			Return DirectCast(m_data' IComparer(Of Object))  		End Get  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "ParentNoAccessorAttribute")'              GetCA1019BasicDefaultResultAt(18' 17' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(37' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(49' 17' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(68' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(80' 17' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(117' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(132' 17' "data"' "GenericCovariantParameterAttribute")'              GetCA1019BasicDefaultResultAt(148' 17' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Collections.Generic    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentNoAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildNoParentAccessorAttribute  	Inherits ParentNoAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentProtectedAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildProtectedAccessorAttribute  	Inherits ParentProtectedAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentPrivateAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildPrivateAccessorAttribute  	Inherits ParentPrivateAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    ' Testing to see  I can handle multiple instances of the  ' same property name in the inheritance hierarchy  <AttributeUsage(AttributeTargets.All)> _  Public Class ParentSameAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Public ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildSameAccessorAttribute  	Inherits ParentSameAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub    	Protected Shadows ReadOnly Property Name() As String  		Get  			Return MyBase.Name  		End Get  	End Property  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericCovariantParameterAttribute  	Inherits Attribute  	Private m_data As IEnumerable(Of Object)  	Public Sub New(data As IEnumerable(Of Object))  		m_data = data  	End Sub    	' IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IEnumerable(Of String)  		Get  			Return DirectCast(m_data' IEnumerable(Of String))  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericContravariantParameterAttribute  	Inherits Attribute  	Private m_data As IComparer(Of String)  	Public Sub New(data As IComparer(Of String))  		m_data = data  	End Sub    	' IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IComparer(Of Object)  		Get  			Return DirectCast(m_data' IComparer(Of Object))  		End Get  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "ParentNoAccessorAttribute")'              GetCA1019BasicDefaultResultAt(18' 17' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(37' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(49' 17' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(68' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(80' 17' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(117' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(132' 17' "data"' "GenericCovariantParameterAttribute")'              GetCA1019BasicDefaultResultAt(148' 17' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Collections.Generic    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentNoAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildNoParentAccessorAttribute  	Inherits ParentNoAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentProtectedAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildProtectedAccessorAttribute  	Inherits ParentProtectedAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentPrivateAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildPrivateAccessorAttribute  	Inherits ParentPrivateAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    ' Testing to see  I can handle multiple instances of the  ' same property name in the inheritance hierarchy  <AttributeUsage(AttributeTargets.All)> _  Public Class ParentSameAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Public ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildSameAccessorAttribute  	Inherits ParentSameAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub    	Protected Shadows ReadOnly Property Name() As String  		Get  			Return MyBase.Name  		End Get  	End Property  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericCovariantParameterAttribute  	Inherits Attribute  	Private m_data As IEnumerable(Of Object)  	Public Sub New(data As IEnumerable(Of Object))  		m_data = data  	End Sub    	' IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IEnumerable(Of String)  		Get  			Return DirectCast(m_data' IEnumerable(Of String))  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericContravariantParameterAttribute  	Inherits Attribute  	Private m_data As IComparer(Of String)  	Public Sub New(data As IComparer(Of String))  		m_data = data  	End Sub    	' IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IComparer(Of Object)  		Get  			Return DirectCast(m_data' IComparer(Of Object))  		End Get  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "ParentNoAccessorAttribute")'              GetCA1019BasicDefaultResultAt(18' 17' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(37' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(49' 17' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(68' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(80' 17' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(117' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(132' 17' "data"' "GenericCovariantParameterAttribute")'              GetCA1019BasicDefaultResultAt(148' 17' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Collections.Generic    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentNoAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildNoParentAccessorAttribute  	Inherits ParentNoAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentProtectedAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildProtectedAccessorAttribute  	Inherits ParentProtectedAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentPrivateAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildPrivateAccessorAttribute  	Inherits ParentPrivateAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    ' Testing to see  I can handle multiple instances of the  ' same property name in the inheritance hierarchy  <AttributeUsage(AttributeTargets.All)> _  Public Class ParentSameAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Public ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildSameAccessorAttribute  	Inherits ParentSameAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub    	Protected Shadows ReadOnly Property Name() As String  		Get  			Return MyBase.Name  		End Get  	End Property  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericCovariantParameterAttribute  	Inherits Attribute  	Private m_data As IEnumerable(Of Object)  	Public Sub New(data As IEnumerable(Of Object))  		m_data = data  	End Sub    	' IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IEnumerable(Of String)  		Get  			Return DirectCast(m_data' IEnumerable(Of String))  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericContravariantParameterAttribute  	Inherits Attribute  	Private m_data As IComparer(Of String)  	Public Sub New(data As IComparer(Of String))  		m_data = data  	End Sub    	' IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IComparer(Of Object)  		Get  			Return DirectCast(m_data' IComparer(Of Object))  		End Get  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "ParentNoAccessorAttribute")'              GetCA1019BasicDefaultResultAt(18' 17' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(37' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(49' 17' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(68' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(80' 17' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(117' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(132' 17' "data"' "GenericCovariantParameterAttribute")'              GetCA1019BasicDefaultResultAt(148' 17' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Collections.Generic    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentNoAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildNoParentAccessorAttribute  	Inherits ParentNoAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentProtectedAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildProtectedAccessorAttribute  	Inherits ParentProtectedAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentPrivateAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildPrivateAccessorAttribute  	Inherits ParentPrivateAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    ' Testing to see  I can handle multiple instances of the  ' same property name in the inheritance hierarchy  <AttributeUsage(AttributeTargets.All)> _  Public Class ParentSameAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Public ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildSameAccessorAttribute  	Inherits ParentSameAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub    	Protected Shadows ReadOnly Property Name() As String  		Get  			Return MyBase.Name  		End Get  	End Property  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericCovariantParameterAttribute  	Inherits Attribute  	Private m_data As IEnumerable(Of Object)  	Public Sub New(data As IEnumerable(Of Object))  		m_data = data  	End Sub    	' IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IEnumerable(Of String)  		Get  			Return DirectCast(m_data' IEnumerable(Of String))  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericContravariantParameterAttribute  	Inherits Attribute  	Private m_data As IComparer(Of String)  	Public Sub New(data As IComparer(Of String))  		m_data = data  	End Sub    	' IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IComparer(Of Object)  		Get  			Return DirectCast(m_data' IComparer(Of Object))  		End Get  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "ParentNoAccessorAttribute")'              GetCA1019BasicDefaultResultAt(18' 17' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(37' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(49' 17' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(68' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(80' 17' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(117' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(132' 17' "data"' "GenericCovariantParameterAttribute")'              GetCA1019BasicDefaultResultAt(148' 17' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Collections.Generic    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentNoAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildNoParentAccessorAttribute  	Inherits ParentNoAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentProtectedAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildProtectedAccessorAttribute  	Inherits ParentProtectedAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentPrivateAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildPrivateAccessorAttribute  	Inherits ParentPrivateAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    ' Testing to see  I can handle multiple instances of the  ' same property name in the inheritance hierarchy  <AttributeUsage(AttributeTargets.All)> _  Public Class ParentSameAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Public ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildSameAccessorAttribute  	Inherits ParentSameAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub    	Protected Shadows ReadOnly Property Name() As String  		Get  			Return MyBase.Name  		End Get  	End Property  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericCovariantParameterAttribute  	Inherits Attribute  	Private m_data As IEnumerable(Of Object)  	Public Sub New(data As IEnumerable(Of Object))  		m_data = data  	End Sub    	' IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IEnumerable(Of String)  		Get  			Return DirectCast(m_data' IEnumerable(Of String))  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericContravariantParameterAttribute  	Inherits Attribute  	Private m_data As IComparer(Of String)  	Public Sub New(data As IComparer(Of String))  		m_data = data  	End Sub    	' IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IComparer(Of Object)  		Get  			Return DirectCast(m_data' IComparer(Of Object))  		End Get  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "ParentNoAccessorAttribute")'              GetCA1019BasicDefaultResultAt(18' 17' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(37' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(49' 17' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(68' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(80' 17' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(117' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(132' 17' "data"' "GenericCovariantParameterAttribute")'              GetCA1019BasicDefaultResultAt(148' 17' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Collections.Generic    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentNoAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildNoParentAccessorAttribute  	Inherits ParentNoAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentProtectedAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildProtectedAccessorAttribute  	Inherits ParentProtectedAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentPrivateAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildPrivateAccessorAttribute  	Inherits ParentPrivateAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    ' Testing to see  I can handle multiple instances of the  ' same property name in the inheritance hierarchy  <AttributeUsage(AttributeTargets.All)> _  Public Class ParentSameAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Public ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildSameAccessorAttribute  	Inherits ParentSameAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub    	Protected Shadows ReadOnly Property Name() As String  		Get  			Return MyBase.Name  		End Get  	End Property  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericCovariantParameterAttribute  	Inherits Attribute  	Private m_data As IEnumerable(Of Object)  	Public Sub New(data As IEnumerable(Of Object))  		m_data = data  	End Sub    	' IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IEnumerable(Of String)  		Get  			Return DirectCast(m_data' IEnumerable(Of String))  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericContravariantParameterAttribute  	Inherits Attribute  	Private m_data As IComparer(Of String)  	Public Sub New(data As IComparer(Of String))  		m_data = data  	End Sub    	' IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IComparer(Of Object)  		Get  			Return DirectCast(m_data' IComparer(Of Object))  		End Get  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "ParentNoAccessorAttribute")'              GetCA1019BasicDefaultResultAt(18' 17' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(37' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(49' 17' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(68' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(80' 17' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(117' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(132' 17' "data"' "GenericCovariantParameterAttribute")'              GetCA1019BasicDefaultResultAt(148' 17' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Collections.Generic    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentNoAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildNoParentAccessorAttribute  	Inherits ParentNoAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentProtectedAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildProtectedAccessorAttribute  	Inherits ParentProtectedAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentPrivateAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildPrivateAccessorAttribute  	Inherits ParentPrivateAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    ' Testing to see  I can handle multiple instances of the  ' same property name in the inheritance hierarchy  <AttributeUsage(AttributeTargets.All)> _  Public Class ParentSameAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Public ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildSameAccessorAttribute  	Inherits ParentSameAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub    	Protected Shadows ReadOnly Property Name() As String  		Get  			Return MyBase.Name  		End Get  	End Property  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericCovariantParameterAttribute  	Inherits Attribute  	Private m_data As IEnumerable(Of Object)  	Public Sub New(data As IEnumerable(Of Object))  		m_data = data  	End Sub    	' IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IEnumerable(Of String)  		Get  			Return DirectCast(m_data' IEnumerable(Of String))  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericContravariantParameterAttribute  	Inherits Attribute  	Private m_data As IComparer(Of String)  	Public Sub New(data As IComparer(Of String))  		m_data = data  	End Sub    	' IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IComparer(Of Object)  		Get  			Return DirectCast(m_data' IComparer(Of Object))  		End Get  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "ParentNoAccessorAttribute")'              GetCA1019BasicDefaultResultAt(18' 17' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(37' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(49' 17' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(68' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(80' 17' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(117' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(132' 17' "data"' "GenericCovariantParameterAttribute")'              GetCA1019BasicDefaultResultAt(148' 17' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Collections.Generic    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentNoAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildNoParentAccessorAttribute  	Inherits ParentNoAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentProtectedAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildProtectedAccessorAttribute  	Inherits ParentProtectedAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentPrivateAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildPrivateAccessorAttribute  	Inherits ParentPrivateAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    ' Testing to see  I can handle multiple instances of the  ' same property name in the inheritance hierarchy  <AttributeUsage(AttributeTargets.All)> _  Public Class ParentSameAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Public ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildSameAccessorAttribute  	Inherits ParentSameAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub    	Protected Shadows ReadOnly Property Name() As String  		Get  			Return MyBase.Name  		End Get  	End Property  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericCovariantParameterAttribute  	Inherits Attribute  	Private m_data As IEnumerable(Of Object)  	Public Sub New(data As IEnumerable(Of Object))  		m_data = data  	End Sub    	' IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IEnumerable(Of String)  		Get  			Return DirectCast(m_data' IEnumerable(Of String))  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericContravariantParameterAttribute  	Inherits Attribute  	Private m_data As IComparer(Of String)  	Public Sub New(data As IComparer(Of String))  		m_data = data  	End Sub    	' IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IComparer(Of Object)  		Get  			Return DirectCast(m_data' IComparer(Of Object))  		End Get  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "ParentNoAccessorAttribute")'              GetCA1019BasicDefaultResultAt(18' 17' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(37' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(49' 17' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(68' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(80' 17' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(117' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(132' 17' "data"' "GenericCovariantParameterAttribute")'              GetCA1019BasicDefaultResultAt(148' 17' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Collections.Generic    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentNoAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildNoParentAccessorAttribute  	Inherits ParentNoAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentProtectedAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildProtectedAccessorAttribute  	Inherits ParentProtectedAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentPrivateAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildPrivateAccessorAttribute  	Inherits ParentPrivateAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    ' Testing to see  I can handle multiple instances of the  ' same property name in the inheritance hierarchy  <AttributeUsage(AttributeTargets.All)> _  Public Class ParentSameAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Public ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildSameAccessorAttribute  	Inherits ParentSameAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub    	Protected Shadows ReadOnly Property Name() As String  		Get  			Return MyBase.Name  		End Get  	End Property  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericCovariantParameterAttribute  	Inherits Attribute  	Private m_data As IEnumerable(Of Object)  	Public Sub New(data As IEnumerable(Of Object))  		m_data = data  	End Sub    	' IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IEnumerable(Of String)  		Get  			Return DirectCast(m_data' IEnumerable(Of String))  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericContravariantParameterAttribute  	Inherits Attribute  	Private m_data As IComparer(Of String)  	Public Sub New(data As IComparer(Of String))  		m_data = data  	End Sub    	' IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IComparer(Of Object)  		Get  			Return DirectCast(m_data' IComparer(Of Object))  		End Get  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "ParentNoAccessorAttribute")'              GetCA1019BasicDefaultResultAt(18' 17' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(37' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(49' 17' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(68' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(80' 17' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(117' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(132' 17' "data"' "GenericCovariantParameterAttribute")'              GetCA1019BasicDefaultResultAt(148' 17' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Collections.Generic    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentNoAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildNoParentAccessorAttribute  	Inherits ParentNoAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentProtectedAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildProtectedAccessorAttribute  	Inherits ParentProtectedAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentPrivateAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildPrivateAccessorAttribute  	Inherits ParentPrivateAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    ' Testing to see  I can handle multiple instances of the  ' same property name in the inheritance hierarchy  <AttributeUsage(AttributeTargets.All)> _  Public Class ParentSameAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Public ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildSameAccessorAttribute  	Inherits ParentSameAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub    	Protected Shadows ReadOnly Property Name() As String  		Get  			Return MyBase.Name  		End Get  	End Property  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericCovariantParameterAttribute  	Inherits Attribute  	Private m_data As IEnumerable(Of Object)  	Public Sub New(data As IEnumerable(Of Object))  		m_data = data  	End Sub    	' IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IEnumerable(Of String)  		Get  			Return DirectCast(m_data' IEnumerable(Of String))  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericContravariantParameterAttribute  	Inherits Attribute  	Private m_data As IComparer(Of String)  	Public Sub New(data As IComparer(Of String))  		m_data = data  	End Sub    	' IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IComparer(Of Object)  		Get  			Return DirectCast(m_data' IComparer(Of Object))  		End Get  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "ParentNoAccessorAttribute")'              GetCA1019BasicDefaultResultAt(18' 17' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(37' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(49' 17' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(68' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(80' 17' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(117' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(132' 17' "data"' "GenericCovariantParameterAttribute")'              GetCA1019BasicDefaultResultAt(148' 17' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Collections.Generic    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentNoAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildNoParentAccessorAttribute  	Inherits ParentNoAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentProtectedAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildProtectedAccessorAttribute  	Inherits ParentProtectedAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentPrivateAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildPrivateAccessorAttribute  	Inherits ParentPrivateAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    ' Testing to see  I can handle multiple instances of the  ' same property name in the inheritance hierarchy  <AttributeUsage(AttributeTargets.All)> _  Public Class ParentSameAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Public ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildSameAccessorAttribute  	Inherits ParentSameAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub    	Protected Shadows ReadOnly Property Name() As String  		Get  			Return MyBase.Name  		End Get  	End Property  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericCovariantParameterAttribute  	Inherits Attribute  	Private m_data As IEnumerable(Of Object)  	Public Sub New(data As IEnumerable(Of Object))  		m_data = data  	End Sub    	' IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IEnumerable(Of String)  		Get  			Return DirectCast(m_data' IEnumerable(Of String))  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericContravariantParameterAttribute  	Inherits Attribute  	Private m_data As IComparer(Of String)  	Public Sub New(data As IComparer(Of String))  		m_data = data  	End Sub    	' IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IComparer(Of Object)  		Get  			Return DirectCast(m_data' IComparer(Of Object))  		End Get  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "ParentNoAccessorAttribute")'              GetCA1019BasicDefaultResultAt(18' 17' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(37' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(49' 17' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(68' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(80' 17' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(117' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(132' 17' "data"' "GenericCovariantParameterAttribute")'              GetCA1019BasicDefaultResultAt(148' 17' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Collections.Generic    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentNoAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildNoParentAccessorAttribute  	Inherits ParentNoAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentProtectedAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildProtectedAccessorAttribute  	Inherits ParentProtectedAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentPrivateAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildPrivateAccessorAttribute  	Inherits ParentPrivateAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    ' Testing to see  I can handle multiple instances of the  ' same property name in the inheritance hierarchy  <AttributeUsage(AttributeTargets.All)> _  Public Class ParentSameAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Public ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildSameAccessorAttribute  	Inherits ParentSameAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub    	Protected Shadows ReadOnly Property Name() As String  		Get  			Return MyBase.Name  		End Get  	End Property  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericCovariantParameterAttribute  	Inherits Attribute  	Private m_data As IEnumerable(Of Object)  	Public Sub New(data As IEnumerable(Of Object))  		m_data = data  	End Sub    	' IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IEnumerable(Of String)  		Get  			Return DirectCast(m_data' IEnumerable(Of String))  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericContravariantParameterAttribute  	Inherits Attribute  	Private m_data As IComparer(Of String)  	Public Sub New(data As IComparer(Of String))  		m_data = data  	End Sub    	' IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IComparer(Of Object)  		Get  			Return DirectCast(m_data' IComparer(Of Object))  		End Get  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "ParentNoAccessorAttribute")'              GetCA1019BasicDefaultResultAt(18' 17' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(37' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(49' 17' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(68' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(80' 17' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(117' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(132' 17' "data"' "GenericCovariantParameterAttribute")'              GetCA1019BasicDefaultResultAt(148' 17' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Collections.Generic    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentNoAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildNoParentAccessorAttribute  	Inherits ParentNoAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentProtectedAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildProtectedAccessorAttribute  	Inherits ParentProtectedAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentPrivateAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildPrivateAccessorAttribute  	Inherits ParentPrivateAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    ' Testing to see  I can handle multiple instances of the  ' same property name in the inheritance hierarchy  <AttributeUsage(AttributeTargets.All)> _  Public Class ParentSameAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Public ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildSameAccessorAttribute  	Inherits ParentSameAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub    	Protected Shadows ReadOnly Property Name() As String  		Get  			Return MyBase.Name  		End Get  	End Property  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericCovariantParameterAttribute  	Inherits Attribute  	Private m_data As IEnumerable(Of Object)  	Public Sub New(data As IEnumerable(Of Object))  		m_data = data  	End Sub    	' IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IEnumerable(Of String)  		Get  			Return DirectCast(m_data' IEnumerable(Of String))  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericContravariantParameterAttribute  	Inherits Attribute  	Private m_data As IComparer(Of String)  	Public Sub New(data As IComparer(Of String))  		m_data = data  	End Sub    	' IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IComparer(Of Object)  		Get  			Return DirectCast(m_data' IComparer(Of Object))  		End Get  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "ParentNoAccessorAttribute")'              GetCA1019BasicDefaultResultAt(18' 17' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(37' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(49' 17' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(68' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(80' 17' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(117' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(132' 17' "data"' "GenericCovariantParameterAttribute")'              GetCA1019BasicDefaultResultAt(148' 17' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Collections.Generic    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentNoAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildNoParentAccessorAttribute  	Inherits ParentNoAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentProtectedAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildProtectedAccessorAttribute  	Inherits ParentProtectedAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentPrivateAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildPrivateAccessorAttribute  	Inherits ParentPrivateAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    ' Testing to see  I can handle multiple instances of the  ' same property name in the inheritance hierarchy  <AttributeUsage(AttributeTargets.All)> _  Public Class ParentSameAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Public ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildSameAccessorAttribute  	Inherits ParentSameAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub    	Protected Shadows ReadOnly Property Name() As String  		Get  			Return MyBase.Name  		End Get  	End Property  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericCovariantParameterAttribute  	Inherits Attribute  	Private m_data As IEnumerable(Of Object)  	Public Sub New(data As IEnumerable(Of Object))  		m_data = data  	End Sub    	' IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IEnumerable(Of String)  		Get  			Return DirectCast(m_data' IEnumerable(Of String))  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericContravariantParameterAttribute  	Inherits Attribute  	Private m_data As IComparer(Of String)  	Public Sub New(data As IComparer(Of String))  		m_data = data  	End Sub    	' IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IComparer(Of Object)  		Get  			Return DirectCast(m_data' IComparer(Of Object))  		End Get  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "ParentNoAccessorAttribute")'              GetCA1019BasicDefaultResultAt(18' 17' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(37' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(49' 17' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(68' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(80' 17' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(117' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(132' 17' "data"' "GenericCovariantParameterAttribute")'              GetCA1019BasicDefaultResultAt(148' 17' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Collections.Generic    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentNoAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildNoParentAccessorAttribute  	Inherits ParentNoAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentProtectedAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildProtectedAccessorAttribute  	Inherits ParentProtectedAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentPrivateAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildPrivateAccessorAttribute  	Inherits ParentPrivateAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    ' Testing to see  I can handle multiple instances of the  ' same property name in the inheritance hierarchy  <AttributeUsage(AttributeTargets.All)> _  Public Class ParentSameAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Public ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildSameAccessorAttribute  	Inherits ParentSameAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub    	Protected Shadows ReadOnly Property Name() As String  		Get  			Return MyBase.Name  		End Get  	End Property  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericCovariantParameterAttribute  	Inherits Attribute  	Private m_data As IEnumerable(Of Object)  	Public Sub New(data As IEnumerable(Of Object))  		m_data = data  	End Sub    	' IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IEnumerable(Of String)  		Get  			Return DirectCast(m_data' IEnumerable(Of String))  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericContravariantParameterAttribute  	Inherits Attribute  	Private m_data As IComparer(Of String)  	Public Sub New(data As IComparer(Of String))  		m_data = data  	End Sub    	' IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IComparer(Of Object)  		Get  			Return DirectCast(m_data' IComparer(Of Object))  		End Get  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "ParentNoAccessorAttribute")'              GetCA1019BasicDefaultResultAt(18' 17' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(37' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(49' 17' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(68' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(80' 17' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(117' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(132' 17' "data"' "GenericCovariantParameterAttribute")'              GetCA1019BasicDefaultResultAt(148' 17' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_RemvoeSetter_InheritanceTest,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Collections.Generic    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentNoAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildNoParentAccessorAttribute  	Inherits ParentNoAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentProtectedAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Protected ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildProtectedAccessorAttribute  	Inherits ParentProtectedAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ParentPrivateAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Private ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    ' I should be firing on this but I should be firing the default resolution instead of   ' the IncreaseVisiblity resolution because I can't assume the user can modify the parent class  <AttributeUsage(AttributeTargets.All)> _  Public Class ChildPrivateAccessorAttribute  	Inherits ParentPrivateAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    ' Testing to see  I can handle multiple instances of the  ' same property name in the inheritance hierarchy  <AttributeUsage(AttributeTargets.All)> _  Public Class ParentSameAccessorAttribute  	Inherits Attribute  	Private m_name As String  	Public Sub New(name As String)  		m_name = name  	End Sub  	Public ReadOnly Property Name() As String  		Get  			Return m_name  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public Class ChildSameAccessorAttribute  	Inherits ParentSameAccessorAttribute  	Private m_phoneNumber As Integer  	Public Sub New(name As String' phoneNumber As Integer)  		MyBase.New(name)  		m_phoneNumber = phoneNumber  	End Sub    	Protected Shadows ReadOnly Property Name() As String  		Get  			Return MyBase.Name  		End Get  	End Property  	Public ReadOnly Property PhoneNumber() As Integer  		Get  			Return m_phoneNumber  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericCovariantParameterAttribute  	Inherits Attribute  	Private m_data As IEnumerable(Of Object)  	Public Sub New(data As IEnumerable(Of Object))  		m_data = data  	End Sub    	' IEnumerable<object> is not assignable to IEnumerable<string>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IEnumerable(Of String)  		Get  			Return DirectCast(m_data' IEnumerable(Of String))  		End Get  	End Property  End Class    <AttributeUsage(AttributeTargets.All)> _  Public NotInheritable Class GenericContravariantParameterAttribute  	Inherits Attribute  	Private m_data As IComparer(Of String)  	Public Sub New(data As IComparer(Of String))  		m_data = data  	End Sub    	' IComparer<string> is not assignable to IComparer<object>' so the rule doesn't recognize this accessor and it should fire.  	Public ReadOnly Property Data() As IComparer(Of Object)  		Get  			Return DirectCast(m_data' IComparer(Of Object))  		End Get  	End Property  End Class  "'              GetCA1019BasicDefaultResultAt(9' 17' "name"' "ParentNoAccessorAttribute")'              GetCA1019BasicDefaultResultAt(18' 17' "name"' "ChildNoParentAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(37' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(49' 17' "name"' "ChildProtectedAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(68' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(80' 17' "name"' "ChildPrivateAccessorAttribute")'              GetCA1019BasicIncreaseVisibilityResultAt(117' 3' "Name"' "name")'              GetCA1019BasicDefaultResultAt(132' 17' "data"' "GenericCovariantParameterAttribute")'              GetCA1019BasicDefaultResultAt(148' 17' "data"' "GenericContravariantParameterAttribute"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,CSharp_CA1024DiagnosticCases,The following statement contains a magic number: VerifyCSharp(@"  public class Class  {      private string fileName = ""data.txt"";        public string GetFileName()      {          return fileName;      }        public string Get_FileName2()      {          return fileName;      }        public string Get123()      {          return fileName;      }        protected string GetFileNameProtected()      {          return fileName;      }  }  "'              GetCA1024CSharpResultAt(6' 19' "GetFileName")'              GetCA1024CSharpResultAt(11' 19' "Get_FileName2")'              GetCA1024CSharpResultAt(16' 19' "Get123")'              GetCA1024CSharpResultAt(21' 22' "GetFileNameProtected"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,CSharp_CA1024DiagnosticCases,The following statement contains a magic number: VerifyCSharp(@"  public class Class  {      private string fileName = ""data.txt"";        public string GetFileName()      {          return fileName;      }        public string Get_FileName2()      {          return fileName;      }        public string Get123()      {          return fileName;      }        protected string GetFileNameProtected()      {          return fileName;      }  }  "'              GetCA1024CSharpResultAt(6' 19' "GetFileName")'              GetCA1024CSharpResultAt(11' 19' "Get_FileName2")'              GetCA1024CSharpResultAt(16' 19' "Get123")'              GetCA1024CSharpResultAt(21' 22' "GetFileNameProtected"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,CSharp_CA1024DiagnosticCases,The following statement contains a magic number: VerifyCSharp(@"  public class Class  {      private string fileName = ""data.txt"";        public string GetFileName()      {          return fileName;      }        public string Get_FileName2()      {          return fileName;      }        public string Get123()      {          return fileName;      }        protected string GetFileNameProtected()      {          return fileName;      }  }  "'              GetCA1024CSharpResultAt(6' 19' "GetFileName")'              GetCA1024CSharpResultAt(11' 19' "Get_FileName2")'              GetCA1024CSharpResultAt(16' 19' "Get123")'              GetCA1024CSharpResultAt(21' 22' "GetFileNameProtected"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,CSharp_CA1024DiagnosticCases,The following statement contains a magic number: VerifyCSharp(@"  public class Class  {      private string fileName = ""data.txt"";        public string GetFileName()      {          return fileName;      }        public string Get_FileName2()      {          return fileName;      }        public string Get123()      {          return fileName;      }        protected string GetFileNameProtected()      {          return fileName;      }  }  "'              GetCA1024CSharpResultAt(6' 19' "GetFileName")'              GetCA1024CSharpResultAt(11' 19' "Get_FileName2")'              GetCA1024CSharpResultAt(16' 19' "Get123")'              GetCA1024CSharpResultAt(21' 22' "GetFileNameProtected"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,CSharp_CA1024DiagnosticCases,The following statement contains a magic number: VerifyCSharp(@"  public class Class  {      private string fileName = ""data.txt"";        public string GetFileName()      {          return fileName;      }        public string Get_FileName2()      {          return fileName;      }        public string Get123()      {          return fileName;      }        protected string GetFileNameProtected()      {          return fileName;      }  }  "'              GetCA1024CSharpResultAt(6' 19' "GetFileName")'              GetCA1024CSharpResultAt(11' 19' "Get_FileName2")'              GetCA1024CSharpResultAt(16' 19' "Get123")'              GetCA1024CSharpResultAt(21' 22' "GetFileNameProtected"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,CSharp_CA1024DiagnosticCases,The following statement contains a magic number: VerifyCSharp(@"  public class Class  {      private string fileName = ""data.txt"";        public string GetFileName()      {          return fileName;      }        public string Get_FileName2()      {          return fileName;      }        public string Get123()      {          return fileName;      }        protected string GetFileNameProtected()      {          return fileName;      }  }  "'              GetCA1024CSharpResultAt(6' 19' "GetFileName")'              GetCA1024CSharpResultAt(11' 19' "Get_FileName2")'              GetCA1024CSharpResultAt(16' 19' "Get123")'              GetCA1024CSharpResultAt(21' 22' "GetFileNameProtected"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,CSharp_CA1024DiagnosticCases,The following statement contains a magic number: VerifyCSharp(@"  public class Class  {      private string fileName = ""data.txt"";        public string GetFileName()      {          return fileName;      }        public string Get_FileName2()      {          return fileName;      }        public string Get123()      {          return fileName;      }        protected string GetFileNameProtected()      {          return fileName;      }  }  "'              GetCA1024CSharpResultAt(6' 19' "GetFileName")'              GetCA1024CSharpResultAt(11' 19' "Get_FileName2")'              GetCA1024CSharpResultAt(16' 19' "Get123")'              GetCA1024CSharpResultAt(21' 22' "GetFileNameProtected"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,CSharp_CA1024DiagnosticCases,The following statement contains a magic number: VerifyCSharp(@"  public class Class  {      private string fileName = ""data.txt"";        public string GetFileName()      {          return fileName;      }        public string Get_FileName2()      {          return fileName;      }        public string Get123()      {          return fileName;      }        protected string GetFileNameProtected()      {          return fileName;      }  }  "'              GetCA1024CSharpResultAt(6' 19' "GetFileName")'              GetCA1024CSharpResultAt(11' 19' "Get_FileName2")'              GetCA1024CSharpResultAt(16' 19' "Get123")'              GetCA1024CSharpResultAt(21' 22' "GetFileNameProtected"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,CSharp_CA1024DiagnosticCasesWithScope,The following statement contains a magic number: VerifyCSharp(@"  public class Class  {      private string fileName = """";        public string GetFileName()      {          return fileName;      }        [|public string Get_FileName2()      {          return fileName;      }        public string Get123()      {          return fileName;      }|]        protected string GetFileNameProtected()      {          return fileName;      }  }  "'              GetCA1024CSharpResultAt(11' 19' "Get_FileName2")'              GetCA1024CSharpResultAt(16' 19' "Get123"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,CSharp_CA1024DiagnosticCasesWithScope,The following statement contains a magic number: VerifyCSharp(@"  public class Class  {      private string fileName = """";        public string GetFileName()      {          return fileName;      }        [|public string Get_FileName2()      {          return fileName;      }        public string Get123()      {          return fileName;      }|]        protected string GetFileNameProtected()      {          return fileName;      }  }  "'              GetCA1024CSharpResultAt(11' 19' "Get_FileName2")'              GetCA1024CSharpResultAt(16' 19' "Get123"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,CSharp_CA1024DiagnosticCasesWithScope,The following statement contains a magic number: VerifyCSharp(@"  public class Class  {      private string fileName = """";        public string GetFileName()      {          return fileName;      }        [|public string Get_FileName2()      {          return fileName;      }        public string Get123()      {          return fileName;      }|]        protected string GetFileNameProtected()      {          return fileName;      }  }  "'              GetCA1024CSharpResultAt(11' 19' "Get_FileName2")'              GetCA1024CSharpResultAt(16' 19' "Get123"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,CSharp_CA1024DiagnosticCasesWithScope,The following statement contains a magic number: VerifyCSharp(@"  public class Class  {      private string fileName = """";        public string GetFileName()      {          return fileName;      }        [|public string Get_FileName2()      {          return fileName;      }        public string Get123()      {          return fileName;      }|]        protected string GetFileNameProtected()      {          return fileName;      }  }  "'              GetCA1024CSharpResultAt(11' 19' "Get_FileName2")'              GetCA1024CSharpResultAt(16' 19' "Get123"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,VisualBasic_CA1024DiagnosticCases,The following statement contains a magic number: VerifyBasic(@"  Public Class Class1  	Private fileName As String    	Public Function GetFileName() As String  		Return filename  	End Function    	Public Function Get_FileName2() As String  		Return filename  	End Function    	Public Function Get123() As String  		Return filename  	End Function        Protected Function GetFileNameProtected() As String  		Return filename  	End Function  End Class  "'              GetCA1024BasicResultAt(5' 18' "GetFileName")'              GetCA1024BasicResultAt(9' 18' "Get_FileName2")'              GetCA1024BasicResultAt(13' 18' "Get123")'              GetCA1024BasicResultAt(17' 24' "GetFileNameProtected"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,VisualBasic_CA1024DiagnosticCases,The following statement contains a magic number: VerifyBasic(@"  Public Class Class1  	Private fileName As String    	Public Function GetFileName() As String  		Return filename  	End Function    	Public Function Get_FileName2() As String  		Return filename  	End Function    	Public Function Get123() As String  		Return filename  	End Function        Protected Function GetFileNameProtected() As String  		Return filename  	End Function  End Class  "'              GetCA1024BasicResultAt(5' 18' "GetFileName")'              GetCA1024BasicResultAt(9' 18' "Get_FileName2")'              GetCA1024BasicResultAt(13' 18' "Get123")'              GetCA1024BasicResultAt(17' 24' "GetFileNameProtected"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,VisualBasic_CA1024DiagnosticCases,The following statement contains a magic number: VerifyBasic(@"  Public Class Class1  	Private fileName As String    	Public Function GetFileName() As String  		Return filename  	End Function    	Public Function Get_FileName2() As String  		Return filename  	End Function    	Public Function Get123() As String  		Return filename  	End Function        Protected Function GetFileNameProtected() As String  		Return filename  	End Function  End Class  "'              GetCA1024BasicResultAt(5' 18' "GetFileName")'              GetCA1024BasicResultAt(9' 18' "Get_FileName2")'              GetCA1024BasicResultAt(13' 18' "Get123")'              GetCA1024BasicResultAt(17' 24' "GetFileNameProtected"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,VisualBasic_CA1024DiagnosticCases,The following statement contains a magic number: VerifyBasic(@"  Public Class Class1  	Private fileName As String    	Public Function GetFileName() As String  		Return filename  	End Function    	Public Function Get_FileName2() As String  		Return filename  	End Function    	Public Function Get123() As String  		Return filename  	End Function        Protected Function GetFileNameProtected() As String  		Return filename  	End Function  End Class  "'              GetCA1024BasicResultAt(5' 18' "GetFileName")'              GetCA1024BasicResultAt(9' 18' "Get_FileName2")'              GetCA1024BasicResultAt(13' 18' "Get123")'              GetCA1024BasicResultAt(17' 24' "GetFileNameProtected"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,VisualBasic_CA1024DiagnosticCases,The following statement contains a magic number: VerifyBasic(@"  Public Class Class1  	Private fileName As String    	Public Function GetFileName() As String  		Return filename  	End Function    	Public Function Get_FileName2() As String  		Return filename  	End Function    	Public Function Get123() As String  		Return filename  	End Function        Protected Function GetFileNameProtected() As String  		Return filename  	End Function  End Class  "'              GetCA1024BasicResultAt(5' 18' "GetFileName")'              GetCA1024BasicResultAt(9' 18' "Get_FileName2")'              GetCA1024BasicResultAt(13' 18' "Get123")'              GetCA1024BasicResultAt(17' 24' "GetFileNameProtected"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,VisualBasic_CA1024DiagnosticCases,The following statement contains a magic number: VerifyBasic(@"  Public Class Class1  	Private fileName As String    	Public Function GetFileName() As String  		Return filename  	End Function    	Public Function Get_FileName2() As String  		Return filename  	End Function    	Public Function Get123() As String  		Return filename  	End Function        Protected Function GetFileNameProtected() As String  		Return filename  	End Function  End Class  "'              GetCA1024BasicResultAt(5' 18' "GetFileName")'              GetCA1024BasicResultAt(9' 18' "Get_FileName2")'              GetCA1024BasicResultAt(13' 18' "Get123")'              GetCA1024BasicResultAt(17' 24' "GetFileNameProtected"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,VisualBasic_CA1024DiagnosticCases,The following statement contains a magic number: VerifyBasic(@"  Public Class Class1  	Private fileName As String    	Public Function GetFileName() As String  		Return filename  	End Function    	Public Function Get_FileName2() As String  		Return filename  	End Function    	Public Function Get123() As String  		Return filename  	End Function        Protected Function GetFileNameProtected() As String  		Return filename  	End Function  End Class  "'              GetCA1024BasicResultAt(5' 18' "GetFileName")'              GetCA1024BasicResultAt(9' 18' "Get_FileName2")'              GetCA1024BasicResultAt(13' 18' "Get123")'              GetCA1024BasicResultAt(17' 24' "GetFileNameProtected"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,VisualBasic_CA1024DiagnosticCases,The following statement contains a magic number: VerifyBasic(@"  Public Class Class1  	Private fileName As String    	Public Function GetFileName() As String  		Return filename  	End Function    	Public Function Get_FileName2() As String  		Return filename  	End Function    	Public Function Get123() As String  		Return filename  	End Function        Protected Function GetFileNameProtected() As String  		Return filename  	End Function  End Class  "'              GetCA1024BasicResultAt(5' 18' "GetFileName")'              GetCA1024BasicResultAt(9' 18' "Get_FileName2")'              GetCA1024BasicResultAt(13' 18' "Get123")'              GetCA1024BasicResultAt(17' 24' "GetFileNameProtected"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,VisualBasic_CA1024DiagnosticCaseswithScope,The following statement contains a magic number: VerifyBasic(@"  Public Class Class1  	Private fileName As String    	Public Function GetFileName() As String  		Return filename  	End Function    	[|Public Function Get_FileName2() As String  		Return filename  	End Function    	Public Function Get123() As String  		Return filename  	End Function|]        Protected Function GetFileNameProtected() As String  		Return filename  	End Function  End Class  "'              GetCA1024BasicResultAt(9' 18' "Get_FileName2")'              GetCA1024BasicResultAt(13' 18' "Get123"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,VisualBasic_CA1024DiagnosticCaseswithScope,The following statement contains a magic number: VerifyBasic(@"  Public Class Class1  	Private fileName As String    	Public Function GetFileName() As String  		Return filename  	End Function    	[|Public Function Get_FileName2() As String  		Return filename  	End Function    	Public Function Get123() As String  		Return filename  	End Function|]        Protected Function GetFileNameProtected() As String  		Return filename  	End Function  End Class  "'              GetCA1024BasicResultAt(9' 18' "Get_FileName2")'              GetCA1024BasicResultAt(13' 18' "Get123"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,VisualBasic_CA1024DiagnosticCaseswithScope,The following statement contains a magic number: VerifyBasic(@"  Public Class Class1  	Private fileName As String    	Public Function GetFileName() As String  		Return filename  	End Function    	[|Public Function Get_FileName2() As String  		Return filename  	End Function    	Public Function Get123() As String  		Return filename  	End Function|]        Protected Function GetFileNameProtected() As String  		Return filename  	End Function  End Class  "'              GetCA1024BasicResultAt(9' 18' "Get_FileName2")'              GetCA1024BasicResultAt(13' 18' "Get123"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1024Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1024Tests.cs,VisualBasic_CA1024DiagnosticCaseswithScope,The following statement contains a magic number: VerifyBasic(@"  Public Class Class1  	Private fileName As String    	Public Function GetFileName() As String  		Return filename  	End Function    	[|Public Function Get_FileName2() As String  		Return filename  	End Function    	Public Function Get123() As String  		Return filename  	End Function|]        Protected Function GetFileNameProtected() As String  		Return filename  	End Function  End Class  "'              GetCA1024BasicResultAt(9' 18' "Get_FileName2")'              GetCA1024BasicResultAt(13' 18' "Get123"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1052Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1052Tests.cs,CA1052ClassWithStaticMethodCSharp,The following statement contains a magic number: VerifyCSharp(@"  public class C  {      static void Foo()      {      }  }  "'                   CSharpResult(2' 14' "C"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1052Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1052Tests.cs,CA1052ClassWithStaticMethodCSharp,The following statement contains a magic number: VerifyCSharp(@"  public class C  {      static void Foo()      {      }  }  "'                   CSharpResult(2' 14' "C"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1052Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1052Tests.cs,CA1052ClassWithStaticMethodBasic,The following statement contains a magic number: VerifyBasic(@"  Public Class C      Shared Sub Foo()      End Sub  End Class  "'                  BasicResult(2' 14' "C"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1052Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1052Tests.cs,CA1052ClassWithStaticMethodBasic,The following statement contains a magic number: VerifyBasic(@"  Public Class C      Shared Sub Foo()      End Sub  End Class  "'                  BasicResult(2' 14' "C"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1053Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1053Tests.cs,CA1053NonDefaultInstanceConstructorCSharp,The following statement contains a magic number: VerifyCSharp(@"  public class Program  {      static void Main(string[] args)      {      }            static Program()      {      }            public Program(int x)      {      }        private Program(int x ' int y)      {      }  }  "'      CSharpResult(2' 14' "Program"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1053Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1053Tests.cs,CA1053NonDefaultInstanceConstructorCSharp,The following statement contains a magic number: VerifyCSharp(@"  public class Program  {      static void Main(string[] args)      {      }            static Program()      {      }            public Program(int x)      {      }        private Program(int x ' int y)      {      }  }  "'      CSharpResult(2' 14' "Program"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1053Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1053Tests.cs,CA1053NonDefaultInstanceConstructorBasic,The following statement contains a magic number: VerifyBasic(@"  Public Class C      Shared Sub Main(args As String())      End Sub        Shared Sub New()      End Sub        Public Sub New(x As Integer)      End Sub        Private Sub New(x As Integer' y As Integer)      End Sub  End Class  "'      BasicResult(2' 14' "C"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1053Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1053Tests.cs,CA1053NonDefaultInstanceConstructorBasic,The following statement contains a magic number: VerifyBasic(@"  Public Class C      Shared Sub Main(args As String())      End Sub        Shared Sub New()      End Sub        Public Sub New(x As Integer)      End Sub        Private Sub New(x As Integer' y As Integer)      End Sub  End Class  "'      BasicResult(2' 14' "C"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,CSharp_EnumWithFlagsAttributes_SimpleCase,The following statement contains a magic number: VerifyCSharp(codeWithoutFlags'                  GetCA1027CSharpResultAt(2' 13' "SimpleFlagsEnumClass")'                  GetCA1027CSharpResultAt(11' 13' "HexFlagsEnumClass"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,CSharp_EnumWithFlagsAttributes_SimpleCase,The following statement contains a magic number: VerifyCSharp(codeWithoutFlags'                  GetCA1027CSharpResultAt(2' 13' "SimpleFlagsEnumClass")'                  GetCA1027CSharpResultAt(11' 13' "HexFlagsEnumClass"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,CSharp_EnumWithFlagsAttributes_SimpleCase,The following statement contains a magic number: VerifyCSharp(codeWithoutFlags'                  GetCA1027CSharpResultAt(2' 13' "SimpleFlagsEnumClass")'                  GetCA1027CSharpResultAt(11' 13' "HexFlagsEnumClass"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,CSharp_EnumWithFlagsAttributes_SimpleCase,The following statement contains a magic number: VerifyCSharp(codeWithoutFlags'                  GetCA1027CSharpResultAt(2' 13' "SimpleFlagsEnumClass")'                  GetCA1027CSharpResultAt(11' 13' "HexFlagsEnumClass"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,CSharp_EnumWithFlagsAttributes_SimpleCaseWithScope,The following statement contains a magic number: VerifyCSharp(codeWithoutFlags'                  GetCA1027CSharpResultAt(11' 13' "HexFlagsEnumClass"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,CSharp_EnumWithFlagsAttributes_SimpleCaseWithScope,The following statement contains a magic number: VerifyCSharp(codeWithoutFlags'                  GetCA1027CSharpResultAt(11' 13' "HexFlagsEnumClass"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,VisualBasic_EnumWithFlagsAttributes_SimpleCase,The following statement contains a magic number: VerifyBasic(codeWithoutFlags'                  GetCA1027BasicResultAt(2' 13' "SimpleFlagsEnumClass")'                  GetCA1027BasicResultAt(10' 13' "HexFlagsEnumClass"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,VisualBasic_EnumWithFlagsAttributes_SimpleCase,The following statement contains a magic number: VerifyBasic(codeWithoutFlags'                  GetCA1027BasicResultAt(2' 13' "SimpleFlagsEnumClass")'                  GetCA1027BasicResultAt(10' 13' "HexFlagsEnumClass"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,VisualBasic_EnumWithFlagsAttributes_SimpleCase,The following statement contains a magic number: VerifyBasic(codeWithoutFlags'                  GetCA1027BasicResultAt(2' 13' "SimpleFlagsEnumClass")'                  GetCA1027BasicResultAt(10' 13' "HexFlagsEnumClass"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,VisualBasic_EnumWithFlagsAttributes_SimpleCase,The following statement contains a magic number: VerifyBasic(codeWithoutFlags'                  GetCA1027BasicResultAt(2' 13' "SimpleFlagsEnumClass")'                  GetCA1027BasicResultAt(10' 13' "HexFlagsEnumClass"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,VisualBasic_EnumWithFlagsAttributes_SimpleCaseWithScope,The following statement contains a magic number: VerifyBasic(codeWithoutFlags'                  GetCA1027BasicResultAt(10' 13' "HexFlagsEnumClass"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,VisualBasic_EnumWithFlagsAttributes_SimpleCaseWithScope,The following statement contains a magic number: VerifyBasic(codeWithoutFlags'                  GetCA1027BasicResultAt(10' 13' "HexFlagsEnumClass"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,CSharp_EnumWithFlagsAttributes_DuplicateValues,The following statement contains a magic number: VerifyCSharp(codeWithoutFlags'                  GetCA1027CSharpResultAt(2' 13' "DuplicateValuesEnumClass"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,CSharp_EnumWithFlagsAttributes_DuplicateValues,The following statement contains a magic number: VerifyCSharp(codeWithoutFlags'                  GetCA1027CSharpResultAt(2' 13' "DuplicateValuesEnumClass"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,VisualBasic_EnumWithFlagsAttributes_DuplicateValues,The following statement contains a magic number: VerifyBasic(codeWithoutFlags'                  GetCA1027BasicResultAt(2' 13' "DuplicateValuesEnumClass"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,VisualBasic_EnumWithFlagsAttributes_DuplicateValues,The following statement contains a magic number: VerifyBasic(codeWithoutFlags'                  GetCA1027BasicResultAt(2' 13' "DuplicateValuesEnumClass"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,CSharp_EnumWithFlagsAttributes_MissingPowerOfTwo,The following statement contains a magic number: VerifyCSharp(codeWithFlags'                  GetCA2217CSharpResultAt(3' 13' "MissingPowerOfTwoEnumClass"' "8")'                  GetCA2217CSharpResultAt(13' 13' "MultipleMissingPowerOfTwoEnumClass"' "8' 16")'                  GetCA2217CSharpResultAt(23' 13' "AnotherTestValue"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,CSharp_EnumWithFlagsAttributes_MissingPowerOfTwo,The following statement contains a magic number: VerifyCSharp(codeWithFlags'                  GetCA2217CSharpResultAt(3' 13' "MissingPowerOfTwoEnumClass"' "8")'                  GetCA2217CSharpResultAt(13' 13' "MultipleMissingPowerOfTwoEnumClass"' "8' 16")'                  GetCA2217CSharpResultAt(23' 13' "AnotherTestValue"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,CSharp_EnumWithFlagsAttributes_MissingPowerOfTwo,The following statement contains a magic number: VerifyCSharp(codeWithFlags'                  GetCA2217CSharpResultAt(3' 13' "MissingPowerOfTwoEnumClass"' "8")'                  GetCA2217CSharpResultAt(13' 13' "MultipleMissingPowerOfTwoEnumClass"' "8' 16")'                  GetCA2217CSharpResultAt(23' 13' "AnotherTestValue"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,CSharp_EnumWithFlagsAttributes_MissingPowerOfTwo,The following statement contains a magic number: VerifyCSharp(codeWithFlags'                  GetCA2217CSharpResultAt(3' 13' "MissingPowerOfTwoEnumClass"' "8")'                  GetCA2217CSharpResultAt(13' 13' "MultipleMissingPowerOfTwoEnumClass"' "8' 16")'                  GetCA2217CSharpResultAt(23' 13' "AnotherTestValue"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,CSharp_EnumWithFlagsAttributes_MissingPowerOfTwo,The following statement contains a magic number: VerifyCSharp(codeWithFlags'                  GetCA2217CSharpResultAt(3' 13' "MissingPowerOfTwoEnumClass"' "8")'                  GetCA2217CSharpResultAt(13' 13' "MultipleMissingPowerOfTwoEnumClass"' "8' 16")'                  GetCA2217CSharpResultAt(23' 13' "AnotherTestValue"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,CSharp_EnumWithFlagsAttributes_MissingPowerOfTwo,The following statement contains a magic number: VerifyCSharp(codeWithFlags'                  GetCA2217CSharpResultAt(3' 13' "MissingPowerOfTwoEnumClass"' "8")'                  GetCA2217CSharpResultAt(13' 13' "MultipleMissingPowerOfTwoEnumClass"' "8' 16")'                  GetCA2217CSharpResultAt(23' 13' "AnotherTestValue"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,VisualBasic_EnumWithFlagsAttributes_MissingPowerOfTwo,The following statement contains a magic number: VerifyBasic(codeWithFlags'                  GetCA2217BasicResultAt(3' 13' "MissingPowerOfTwoEnumClass"' "8")'                  GetCA2217BasicResultAt(12' 13' "MultipleMissingPowerOfTwoEnumClass"' "8' 16")'                  GetCA2217BasicResultAt(21' 13' "AnotherTestValue"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,VisualBasic_EnumWithFlagsAttributes_MissingPowerOfTwo,The following statement contains a magic number: VerifyBasic(codeWithFlags'                  GetCA2217BasicResultAt(3' 13' "MissingPowerOfTwoEnumClass"' "8")'                  GetCA2217BasicResultAt(12' 13' "MultipleMissingPowerOfTwoEnumClass"' "8' 16")'                  GetCA2217BasicResultAt(21' 13' "AnotherTestValue"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,VisualBasic_EnumWithFlagsAttributes_MissingPowerOfTwo,The following statement contains a magic number: VerifyBasic(codeWithFlags'                  GetCA2217BasicResultAt(3' 13' "MissingPowerOfTwoEnumClass"' "8")'                  GetCA2217BasicResultAt(12' 13' "MultipleMissingPowerOfTwoEnumClass"' "8' 16")'                  GetCA2217BasicResultAt(21' 13' "AnotherTestValue"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,VisualBasic_EnumWithFlagsAttributes_MissingPowerOfTwo,The following statement contains a magic number: VerifyBasic(codeWithFlags'                  GetCA2217BasicResultAt(3' 13' "MissingPowerOfTwoEnumClass"' "8")'                  GetCA2217BasicResultAt(12' 13' "MultipleMissingPowerOfTwoEnumClass"' "8' 16")'                  GetCA2217BasicResultAt(21' 13' "AnotherTestValue"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,VisualBasic_EnumWithFlagsAttributes_MissingPowerOfTwo,The following statement contains a magic number: VerifyBasic(codeWithFlags'                  GetCA2217BasicResultAt(3' 13' "MissingPowerOfTwoEnumClass"' "8")'                  GetCA2217BasicResultAt(12' 13' "MultipleMissingPowerOfTwoEnumClass"' "8' 16")'                  GetCA2217BasicResultAt(21' 13' "AnotherTestValue"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,VisualBasic_EnumWithFlagsAttributes_MissingPowerOfTwo,The following statement contains a magic number: VerifyBasic(codeWithFlags'                  GetCA2217BasicResultAt(3' 13' "MissingPowerOfTwoEnumClass"' "8")'                  GetCA2217BasicResultAt(12' 13' "MultipleMissingPowerOfTwoEnumClass"' "8' 16")'                  GetCA2217BasicResultAt(21' 13' "AnotherTestValue"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,CSharp_EnumWithFlagsAttributes_NonSimpleFlags,The following statement contains a magic number: VerifyCSharp(codeWithFlags'                  GetCA2217CSharpResultAt(3' 13' "NonSimpleFlagEnumClass"' "4' 16' 32' 64' 128' 256' 512' 1024' 2048' 4096' 8192' 16384' 32768' 65536' 131072' 262144' 524288' 1048576' 2097152' 4194304' 8388608' 16777216' 33554432' 67108864' 134217728' 268435456' 536870912' 1073741824' 2147483648' 4294967296' 8589934592' 17179869184' 34359738368' 68719476736' 137438953472' 274877906944' 549755813888' 1099511627776' 2199023255552' 4398046511104' 8796093022208' 17592186044416' 35184372088832' 70368744177664' 140737488355328' 281474976710656' 562949953421312' 1125899906842624' 2251799813685248' 4503599627370496' 9007199254740992' 18014398509481984' 36028797018963968' 72057594037927936' 144115188075855872' 288230376151711744' 576460752303423488' 1152921504606846976' 2305843009213693952' 4611686018427387904' 9223372036854775808")'                  GetCA2217CSharpResultAt(14' 13' "BitValuesClass"' "4")'                  GetCA2217CSharpResultAt(24' 13' "LabelsClass"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,CSharp_EnumWithFlagsAttributes_NonSimpleFlags,The following statement contains a magic number: VerifyCSharp(codeWithFlags'                  GetCA2217CSharpResultAt(3' 13' "NonSimpleFlagEnumClass"' "4' 16' 32' 64' 128' 256' 512' 1024' 2048' 4096' 8192' 16384' 32768' 65536' 131072' 262144' 524288' 1048576' 2097152' 4194304' 8388608' 16777216' 33554432' 67108864' 134217728' 268435456' 536870912' 1073741824' 2147483648' 4294967296' 8589934592' 17179869184' 34359738368' 68719476736' 137438953472' 274877906944' 549755813888' 1099511627776' 2199023255552' 4398046511104' 8796093022208' 17592186044416' 35184372088832' 70368744177664' 140737488355328' 281474976710656' 562949953421312' 1125899906842624' 2251799813685248' 4503599627370496' 9007199254740992' 18014398509481984' 36028797018963968' 72057594037927936' 144115188075855872' 288230376151711744' 576460752303423488' 1152921504606846976' 2305843009213693952' 4611686018427387904' 9223372036854775808")'                  GetCA2217CSharpResultAt(14' 13' "BitValuesClass"' "4")'                  GetCA2217CSharpResultAt(24' 13' "LabelsClass"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,CSharp_EnumWithFlagsAttributes_NonSimpleFlags,The following statement contains a magic number: VerifyCSharp(codeWithFlags'                  GetCA2217CSharpResultAt(3' 13' "NonSimpleFlagEnumClass"' "4' 16' 32' 64' 128' 256' 512' 1024' 2048' 4096' 8192' 16384' 32768' 65536' 131072' 262144' 524288' 1048576' 2097152' 4194304' 8388608' 16777216' 33554432' 67108864' 134217728' 268435456' 536870912' 1073741824' 2147483648' 4294967296' 8589934592' 17179869184' 34359738368' 68719476736' 137438953472' 274877906944' 549755813888' 1099511627776' 2199023255552' 4398046511104' 8796093022208' 17592186044416' 35184372088832' 70368744177664' 140737488355328' 281474976710656' 562949953421312' 1125899906842624' 2251799813685248' 4503599627370496' 9007199254740992' 18014398509481984' 36028797018963968' 72057594037927936' 144115188075855872' 288230376151711744' 576460752303423488' 1152921504606846976' 2305843009213693952' 4611686018427387904' 9223372036854775808")'                  GetCA2217CSharpResultAt(14' 13' "BitValuesClass"' "4")'                  GetCA2217CSharpResultAt(24' 13' "LabelsClass"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,CSharp_EnumWithFlagsAttributes_NonSimpleFlags,The following statement contains a magic number: VerifyCSharp(codeWithFlags'                  GetCA2217CSharpResultAt(3' 13' "NonSimpleFlagEnumClass"' "4' 16' 32' 64' 128' 256' 512' 1024' 2048' 4096' 8192' 16384' 32768' 65536' 131072' 262144' 524288' 1048576' 2097152' 4194304' 8388608' 16777216' 33554432' 67108864' 134217728' 268435456' 536870912' 1073741824' 2147483648' 4294967296' 8589934592' 17179869184' 34359738368' 68719476736' 137438953472' 274877906944' 549755813888' 1099511627776' 2199023255552' 4398046511104' 8796093022208' 17592186044416' 35184372088832' 70368744177664' 140737488355328' 281474976710656' 562949953421312' 1125899906842624' 2251799813685248' 4503599627370496' 9007199254740992' 18014398509481984' 36028797018963968' 72057594037927936' 144115188075855872' 288230376151711744' 576460752303423488' 1152921504606846976' 2305843009213693952' 4611686018427387904' 9223372036854775808")'                  GetCA2217CSharpResultAt(14' 13' "BitValuesClass"' "4")'                  GetCA2217CSharpResultAt(24' 13' "LabelsClass"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,CSharp_EnumWithFlagsAttributes_NonSimpleFlags,The following statement contains a magic number: VerifyCSharp(codeWithFlags'                  GetCA2217CSharpResultAt(3' 13' "NonSimpleFlagEnumClass"' "4' 16' 32' 64' 128' 256' 512' 1024' 2048' 4096' 8192' 16384' 32768' 65536' 131072' 262144' 524288' 1048576' 2097152' 4194304' 8388608' 16777216' 33554432' 67108864' 134217728' 268435456' 536870912' 1073741824' 2147483648' 4294967296' 8589934592' 17179869184' 34359738368' 68719476736' 137438953472' 274877906944' 549755813888' 1099511627776' 2199023255552' 4398046511104' 8796093022208' 17592186044416' 35184372088832' 70368744177664' 140737488355328' 281474976710656' 562949953421312' 1125899906842624' 2251799813685248' 4503599627370496' 9007199254740992' 18014398509481984' 36028797018963968' 72057594037927936' 144115188075855872' 288230376151711744' 576460752303423488' 1152921504606846976' 2305843009213693952' 4611686018427387904' 9223372036854775808")'                  GetCA2217CSharpResultAt(14' 13' "BitValuesClass"' "4")'                  GetCA2217CSharpResultAt(24' 13' "LabelsClass"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,CSharp_EnumWithFlagsAttributes_NonSimpleFlags,The following statement contains a magic number: VerifyCSharp(codeWithFlags'                  GetCA2217CSharpResultAt(3' 13' "NonSimpleFlagEnumClass"' "4' 16' 32' 64' 128' 256' 512' 1024' 2048' 4096' 8192' 16384' 32768' 65536' 131072' 262144' 524288' 1048576' 2097152' 4194304' 8388608' 16777216' 33554432' 67108864' 134217728' 268435456' 536870912' 1073741824' 2147483648' 4294967296' 8589934592' 17179869184' 34359738368' 68719476736' 137438953472' 274877906944' 549755813888' 1099511627776' 2199023255552' 4398046511104' 8796093022208' 17592186044416' 35184372088832' 70368744177664' 140737488355328' 281474976710656' 562949953421312' 1125899906842624' 2251799813685248' 4503599627370496' 9007199254740992' 18014398509481984' 36028797018963968' 72057594037927936' 144115188075855872' 288230376151711744' 576460752303423488' 1152921504606846976' 2305843009213693952' 4611686018427387904' 9223372036854775808")'                  GetCA2217CSharpResultAt(14' 13' "BitValuesClass"' "4")'                  GetCA2217CSharpResultAt(24' 13' "LabelsClass"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,VisualBasic_EnumWithFlagsAttributes_NonSimpleFlags,The following statement contains a magic number: VerifyBasic(codeWithFlags'                  GetCA2217BasicResultAt(3' 13' "NonSimpleFlagEnumClass"' "4' 16' 32' 64' 128' 256' 512' 1024' 2048' 4096' 8192' 16384' 32768' 65536' 131072' 262144' 524288' 1048576' 2097152' 4194304' 8388608' 16777216' 33554432' 67108864' 134217728' 268435456' 536870912' 1073741824' 2147483648' 4294967296' 8589934592' 17179869184' 34359738368' 68719476736' 137438953472' 274877906944' 549755813888' 1099511627776' 2199023255552' 4398046511104' 8796093022208' 17592186044416' 35184372088832' 70368744177664' 140737488355328' 281474976710656' 562949953421312' 1125899906842624' 2251799813685248' 4503599627370496' 9007199254740992' 18014398509481984' 36028797018963968' 72057594037927936' 144115188075855872' 288230376151711744' 576460752303423488' 1152921504606846976' 2305843009213693952' 4611686018427387904' 9223372036854775808")'                  GetCA2217BasicResultAt(13' 13' "BitValuesClass"' "4")'                  GetCA2217BasicResultAt(22' 13' "LabelsClass"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,VisualBasic_EnumWithFlagsAttributes_NonSimpleFlags,The following statement contains a magic number: VerifyBasic(codeWithFlags'                  GetCA2217BasicResultAt(3' 13' "NonSimpleFlagEnumClass"' "4' 16' 32' 64' 128' 256' 512' 1024' 2048' 4096' 8192' 16384' 32768' 65536' 131072' 262144' 524288' 1048576' 2097152' 4194304' 8388608' 16777216' 33554432' 67108864' 134217728' 268435456' 536870912' 1073741824' 2147483648' 4294967296' 8589934592' 17179869184' 34359738368' 68719476736' 137438953472' 274877906944' 549755813888' 1099511627776' 2199023255552' 4398046511104' 8796093022208' 17592186044416' 35184372088832' 70368744177664' 140737488355328' 281474976710656' 562949953421312' 1125899906842624' 2251799813685248' 4503599627370496' 9007199254740992' 18014398509481984' 36028797018963968' 72057594037927936' 144115188075855872' 288230376151711744' 576460752303423488' 1152921504606846976' 2305843009213693952' 4611686018427387904' 9223372036854775808")'                  GetCA2217BasicResultAt(13' 13' "BitValuesClass"' "4")'                  GetCA2217BasicResultAt(22' 13' "LabelsClass"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,VisualBasic_EnumWithFlagsAttributes_NonSimpleFlags,The following statement contains a magic number: VerifyBasic(codeWithFlags'                  GetCA2217BasicResultAt(3' 13' "NonSimpleFlagEnumClass"' "4' 16' 32' 64' 128' 256' 512' 1024' 2048' 4096' 8192' 16384' 32768' 65536' 131072' 262144' 524288' 1048576' 2097152' 4194304' 8388608' 16777216' 33554432' 67108864' 134217728' 268435456' 536870912' 1073741824' 2147483648' 4294967296' 8589934592' 17179869184' 34359738368' 68719476736' 137438953472' 274877906944' 549755813888' 1099511627776' 2199023255552' 4398046511104' 8796093022208' 17592186044416' 35184372088832' 70368744177664' 140737488355328' 281474976710656' 562949953421312' 1125899906842624' 2251799813685248' 4503599627370496' 9007199254740992' 18014398509481984' 36028797018963968' 72057594037927936' 144115188075855872' 288230376151711744' 576460752303423488' 1152921504606846976' 2305843009213693952' 4611686018427387904' 9223372036854775808")'                  GetCA2217BasicResultAt(13' 13' "BitValuesClass"' "4")'                  GetCA2217BasicResultAt(22' 13' "LabelsClass"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,VisualBasic_EnumWithFlagsAttributes_NonSimpleFlags,The following statement contains a magic number: VerifyBasic(codeWithFlags'                  GetCA2217BasicResultAt(3' 13' "NonSimpleFlagEnumClass"' "4' 16' 32' 64' 128' 256' 512' 1024' 2048' 4096' 8192' 16384' 32768' 65536' 131072' 262144' 524288' 1048576' 2097152' 4194304' 8388608' 16777216' 33554432' 67108864' 134217728' 268435456' 536870912' 1073741824' 2147483648' 4294967296' 8589934592' 17179869184' 34359738368' 68719476736' 137438953472' 274877906944' 549755813888' 1099511627776' 2199023255552' 4398046511104' 8796093022208' 17592186044416' 35184372088832' 70368744177664' 140737488355328' 281474976710656' 562949953421312' 1125899906842624' 2251799813685248' 4503599627370496' 9007199254740992' 18014398509481984' 36028797018963968' 72057594037927936' 144115188075855872' 288230376151711744' 576460752303423488' 1152921504606846976' 2305843009213693952' 4611686018427387904' 9223372036854775808")'                  GetCA2217BasicResultAt(13' 13' "BitValuesClass"' "4")'                  GetCA2217BasicResultAt(22' 13' "LabelsClass"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,VisualBasic_EnumWithFlagsAttributes_NonSimpleFlags,The following statement contains a magic number: VerifyBasic(codeWithFlags'                  GetCA2217BasicResultAt(3' 13' "NonSimpleFlagEnumClass"' "4' 16' 32' 64' 128' 256' 512' 1024' 2048' 4096' 8192' 16384' 32768' 65536' 131072' 262144' 524288' 1048576' 2097152' 4194304' 8388608' 16777216' 33554432' 67108864' 134217728' 268435456' 536870912' 1073741824' 2147483648' 4294967296' 8589934592' 17179869184' 34359738368' 68719476736' 137438953472' 274877906944' 549755813888' 1099511627776' 2199023255552' 4398046511104' 8796093022208' 17592186044416' 35184372088832' 70368744177664' 140737488355328' 281474976710656' 562949953421312' 1125899906842624' 2251799813685248' 4503599627370496' 9007199254740992' 18014398509481984' 36028797018963968' 72057594037927936' 144115188075855872' 288230376151711744' 576460752303423488' 1152921504606846976' 2305843009213693952' 4611686018427387904' 9223372036854775808")'                  GetCA2217BasicResultAt(13' 13' "BitValuesClass"' "4")'                  GetCA2217BasicResultAt(22' 13' "LabelsClass"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,EnumWithFlagsAttributesRulesTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\EnumWithFlagsAttributeRulesTests.cs,VisualBasic_EnumWithFlagsAttributes_NonSimpleFlags,The following statement contains a magic number: VerifyBasic(codeWithFlags'                  GetCA2217BasicResultAt(3' 13' "NonSimpleFlagEnumClass"' "4' 16' 32' 64' 128' 256' 512' 1024' 2048' 4096' 8192' 16384' 32768' 65536' 131072' 262144' 524288' 1048576' 2097152' 4194304' 8388608' 16777216' 33554432' 67108864' 134217728' 268435456' 536870912' 1073741824' 2147483648' 4294967296' 8589934592' 17179869184' 34359738368' 68719476736' 137438953472' 274877906944' 549755813888' 1099511627776' 2199023255552' 4398046511104' 8796093022208' 17592186044416' 35184372088832' 70368744177664' 140737488355328' 281474976710656' 562949953421312' 1125899906842624' 2251799813685248' 4503599627370496' 9007199254740992' 18014398509481984' 36028797018963968' 72057594037927936' 144115188075855872' 288230376151711744' 576460752303423488' 1152921504606846976' 2305843009213693952' 4611686018427387904' 9223372036854775808")'                  GetCA2217BasicResultAt(13' 13' "BitValuesClass"' "4")'                  GetCA2217BasicResultAt(22' 13' "LabelsClass"' "2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestNestedTypeNames,The following statement contains a magic number: VerifyCSharp(@"  namespace NI  {      public class Ni      {              public struct Nd { }          public delegate void nd();          public class C          {              public struct nD { }              public class nd              {                  public class CI { }                  public struct ci                  {                      public int x;                      public void X() { }                  }                  public interface Ci                   {                      void foo();                      void Foo();                  }             }          }      }           class NI      {          public class N           {          }          public class n { }      }  }  "'              GetCA1708CSharpResult(Type' GetSymbolDisplayString("NI.Ni"' "NI.NI"))'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.Nd"' "NI.Ni.nd")' 4' 18)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nD"' "NI.Ni.C.nd")' 8' 22)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.CI"' "NI.Ni.C.nd.ci"' "NI.Ni.C.nd.Ci")' 11' 26)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.ci.x"' "NI.Ni.C.nd.ci.X()")' 14' 31)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.Ci.foo()"' "NI.Ni.C.nd.Ci.Foo()")' 19' 34));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestNestedTypeNames,The following statement contains a magic number: VerifyCSharp(@"  namespace NI  {      public class Ni      {              public struct Nd { }          public delegate void nd();          public class C          {              public struct nD { }              public class nd              {                  public class CI { }                  public struct ci                  {                      public int x;                      public void X() { }                  }                  public interface Ci                   {                      void foo();                      void Foo();                  }             }          }      }           class NI      {          public class N           {          }          public class n { }      }  }  "'              GetCA1708CSharpResult(Type' GetSymbolDisplayString("NI.Ni"' "NI.NI"))'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.Nd"' "NI.Ni.nd")' 4' 18)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nD"' "NI.Ni.C.nd")' 8' 22)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.CI"' "NI.Ni.C.nd.ci"' "NI.Ni.C.nd.Ci")' 11' 26)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.ci.x"' "NI.Ni.C.nd.ci.X()")' 14' 31)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.Ci.foo()"' "NI.Ni.C.nd.Ci.Foo()")' 19' 34));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestNestedTypeNames,The following statement contains a magic number: VerifyCSharp(@"  namespace NI  {      public class Ni      {              public struct Nd { }          public delegate void nd();          public class C          {              public struct nD { }              public class nd              {                  public class CI { }                  public struct ci                  {                      public int x;                      public void X() { }                  }                  public interface Ci                   {                      void foo();                      void Foo();                  }             }          }      }           class NI      {          public class N           {          }          public class n { }      }  }  "'              GetCA1708CSharpResult(Type' GetSymbolDisplayString("NI.Ni"' "NI.NI"))'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.Nd"' "NI.Ni.nd")' 4' 18)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nD"' "NI.Ni.C.nd")' 8' 22)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.CI"' "NI.Ni.C.nd.ci"' "NI.Ni.C.nd.Ci")' 11' 26)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.ci.x"' "NI.Ni.C.nd.ci.X()")' 14' 31)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.Ci.foo()"' "NI.Ni.C.nd.Ci.Foo()")' 19' 34));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestNestedTypeNames,The following statement contains a magic number: VerifyCSharp(@"  namespace NI  {      public class Ni      {              public struct Nd { }          public delegate void nd();          public class C          {              public struct nD { }              public class nd              {                  public class CI { }                  public struct ci                  {                      public int x;                      public void X() { }                  }                  public interface Ci                   {                      void foo();                      void Foo();                  }             }          }      }           class NI      {          public class N           {          }          public class n { }      }  }  "'              GetCA1708CSharpResult(Type' GetSymbolDisplayString("NI.Ni"' "NI.NI"))'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.Nd"' "NI.Ni.nd")' 4' 18)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nD"' "NI.Ni.C.nd")' 8' 22)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.CI"' "NI.Ni.C.nd.ci"' "NI.Ni.C.nd.Ci")' 11' 26)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.ci.x"' "NI.Ni.C.nd.ci.X()")' 14' 31)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.Ci.foo()"' "NI.Ni.C.nd.Ci.Foo()")' 19' 34));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestNestedTypeNames,The following statement contains a magic number: VerifyCSharp(@"  namespace NI  {      public class Ni      {              public struct Nd { }          public delegate void nd();          public class C          {              public struct nD { }              public class nd              {                  public class CI { }                  public struct ci                  {                      public int x;                      public void X() { }                  }                  public interface Ci                   {                      void foo();                      void Foo();                  }             }          }      }           class NI      {          public class N           {          }          public class n { }      }  }  "'              GetCA1708CSharpResult(Type' GetSymbolDisplayString("NI.Ni"' "NI.NI"))'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.Nd"' "NI.Ni.nd")' 4' 18)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nD"' "NI.Ni.C.nd")' 8' 22)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.CI"' "NI.Ni.C.nd.ci"' "NI.Ni.C.nd.Ci")' 11' 26)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.ci.x"' "NI.Ni.C.nd.ci.X()")' 14' 31)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.Ci.foo()"' "NI.Ni.C.nd.Ci.Foo()")' 19' 34));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestNestedTypeNames,The following statement contains a magic number: VerifyCSharp(@"  namespace NI  {      public class Ni      {              public struct Nd { }          public delegate void nd();          public class C          {              public struct nD { }              public class nd              {                  public class CI { }                  public struct ci                  {                      public int x;                      public void X() { }                  }                  public interface Ci                   {                      void foo();                      void Foo();                  }             }          }      }           class NI      {          public class N           {          }          public class n { }      }  }  "'              GetCA1708CSharpResult(Type' GetSymbolDisplayString("NI.Ni"' "NI.NI"))'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.Nd"' "NI.Ni.nd")' 4' 18)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nD"' "NI.Ni.C.nd")' 8' 22)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.CI"' "NI.Ni.C.nd.ci"' "NI.Ni.C.nd.Ci")' 11' 26)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.ci.x"' "NI.Ni.C.nd.ci.X()")' 14' 31)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.Ci.foo()"' "NI.Ni.C.nd.Ci.Foo()")' 19' 34));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestNestedTypeNames,The following statement contains a magic number: VerifyCSharp(@"  namespace NI  {      public class Ni      {              public struct Nd { }          public delegate void nd();          public class C          {              public struct nD { }              public class nd              {                  public class CI { }                  public struct ci                  {                      public int x;                      public void X() { }                  }                  public interface Ci                   {                      void foo();                      void Foo();                  }             }          }      }           class NI      {          public class N           {          }          public class n { }      }  }  "'              GetCA1708CSharpResult(Type' GetSymbolDisplayString("NI.Ni"' "NI.NI"))'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.Nd"' "NI.Ni.nd")' 4' 18)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nD"' "NI.Ni.C.nd")' 8' 22)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.CI"' "NI.Ni.C.nd.ci"' "NI.Ni.C.nd.Ci")' 11' 26)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.ci.x"' "NI.Ni.C.nd.ci.X()")' 14' 31)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.Ci.foo()"' "NI.Ni.C.nd.Ci.Foo()")' 19' 34));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestNestedTypeNames,The following statement contains a magic number: VerifyCSharp(@"  namespace NI  {      public class Ni      {              public struct Nd { }          public delegate void nd();          public class C          {              public struct nD { }              public class nd              {                  public class CI { }                  public struct ci                  {                      public int x;                      public void X() { }                  }                  public interface Ci                   {                      void foo();                      void Foo();                  }             }          }      }           class NI      {          public class N           {          }          public class n { }      }  }  "'              GetCA1708CSharpResult(Type' GetSymbolDisplayString("NI.Ni"' "NI.NI"))'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.Nd"' "NI.Ni.nd")' 4' 18)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nD"' "NI.Ni.C.nd")' 8' 22)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.CI"' "NI.Ni.C.nd.ci"' "NI.Ni.C.nd.Ci")' 11' 26)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.ci.x"' "NI.Ni.C.nd.ci.X()")' 14' 31)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.Ci.foo()"' "NI.Ni.C.nd.Ci.Foo()")' 19' 34));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestNestedTypeNames,The following statement contains a magic number: VerifyCSharp(@"  namespace NI  {      public class Ni      {              public struct Nd { }          public delegate void nd();          public class C          {              public struct nD { }              public class nd              {                  public class CI { }                  public struct ci                  {                      public int x;                      public void X() { }                  }                  public interface Ci                   {                      void foo();                      void Foo();                  }             }          }      }           class NI      {          public class N           {          }          public class n { }      }  }  "'              GetCA1708CSharpResult(Type' GetSymbolDisplayString("NI.Ni"' "NI.NI"))'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.Nd"' "NI.Ni.nd")' 4' 18)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nD"' "NI.Ni.C.nd")' 8' 22)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.CI"' "NI.Ni.C.nd.ci"' "NI.Ni.C.nd.Ci")' 11' 26)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.ci.x"' "NI.Ni.C.nd.ci.X()")' 14' 31)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.Ci.foo()"' "NI.Ni.C.nd.Ci.Foo()")' 19' 34));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestNestedTypeNames,The following statement contains a magic number: VerifyCSharp(@"  namespace NI  {      public class Ni      {              public struct Nd { }          public delegate void nd();          public class C          {              public struct nD { }              public class nd              {                  public class CI { }                  public struct ci                  {                      public int x;                      public void X() { }                  }                  public interface Ci                   {                      void foo();                      void Foo();                  }             }          }      }           class NI      {          public class N           {          }          public class n { }      }  }  "'              GetCA1708CSharpResult(Type' GetSymbolDisplayString("NI.Ni"' "NI.NI"))'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.Nd"' "NI.Ni.nd")' 4' 18)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nD"' "NI.Ni.C.nd")' 8' 22)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.CI"' "NI.Ni.C.nd.ci"' "NI.Ni.C.nd.Ci")' 11' 26)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.ci.x"' "NI.Ni.C.nd.ci.X()")' 14' 31)'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.Ni.C.nd.Ci.foo()"' "NI.Ni.C.nd.Ci.Foo()")' 19' 34));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestGenericMethods,The following statement contains a magic number: VerifyCSharp(@"  namespace NI  {      public class C      {          public void foo() { }          public void foO(int x) { }          public void fOo(int x) { }          public void FOO<T>(T x) { }          public void fOo<T' X>(T x' X y) { }      }  }  "'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.C.foo()"' "NI.C.foO(int)"' "NI.C.fOo(int)"' "NI.C.FOO<T>(T)")' 4' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestGenericMethods,The following statement contains a magic number: VerifyCSharp(@"  namespace NI  {      public class C      {          public void foo() { }          public void foO(int x) { }          public void fOo(int x) { }          public void FOO<T>(T x) { }          public void fOo<T' X>(T x' X y) { }      }  }  "'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.C.foo()"' "NI.C.foO(int)"' "NI.C.fOo(int)"' "NI.C.FOO<T>(T)")' 4' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestMembers,The following statement contains a magic number: VerifyCSharp(@"  namespace NI  {      public class CASE1      {          public int Case1;          void CAse1() { caSE1(); }          public void CAse1(int x) { }          public void CaSe1<T>(T x) { }          public delegate void CASe1();          public interface CasE1 { }          public event CASe1 caSE1;          public int CAsE1          {              get { return Case1; }              set { Case1 = value; }          }          public CASE1() { }          public int this[int x]          {              get { return x; }              set { }              }          ~CASE1() { }          static CASE1() { }          public static int operator +(CASE1 y' int x) { return 1; }      }  }  "'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.CASE1.Case1"' "NI.CASE1.CAse1(int)"' "NI.CASE1.CaSe1<T>(T)"' "NI.CASE1.CASe1"' "NI.CASE1.CasE1"' "NI.CASE1.caSE1"' "NI.CASE1.CAsE1")' 4' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestMembers,The following statement contains a magic number: VerifyCSharp(@"  namespace NI  {      public class CASE1      {          public int Case1;          void CAse1() { caSE1(); }          public void CAse1(int x) { }          public void CaSe1<T>(T x) { }          public delegate void CASe1();          public interface CasE1 { }          public event CASe1 caSE1;          public int CAsE1          {              get { return Case1; }              set { Case1 = value; }          }          public CASE1() { }          public int this[int x]          {              get { return x; }              set { }              }          ~CASE1() { }          static CASE1() { }          public static int operator +(CASE1 y' int x) { return 1; }      }  }  "'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("NI.CASE1.Case1"' "NI.CASE1.CAse1(int)"' "NI.CASE1.CaSe1<T>(T)"' "NI.CASE1.CASe1"' "NI.CASE1.CasE1"' "NI.CASE1.caSE1"' "NI.CASE1.CAsE1")' 4' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestCultureSpecificNames,The following statement contains a magic number: VerifyCSharp(@"  public class C  {      public int γ;      public int Γ;  }  "'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("C.γ"' "C.Γ")' 2' 14));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestCultureSpecificNames,The following statement contains a magic number: VerifyCSharp(@"  public class C  {      public int γ;      public int Γ;  }  "'              GetCA1708CSharpResultAt(Member' GetSymbolDisplayString("C.γ"' "C.Γ")' 2' 14));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestParameters,The following statement contains a magic number: VerifyCSharp(@"  namespace N  {      public class C      {          int x;          public delegate void Delegate(int a' int A);          public void Method(int b' int B) {}          public C(int d' int D)          {          }          public static int operator +(C e' int E) { return 1; }          public int X          {              get { return x; }              set { x = value; }          }          public int this[int f' int F]          {              get { return x; }              set { }          }          public System.Action<int' int> action = (a' A) => { };      }      public partial class D      {      }      public partial class D      {          public delegate void Foo(int x' int X);      }  }  "'              GetCA1708CSharpResultAt(Parameter' "N.C.Delegate"' 7' 30)'              GetCA1708CSharpResultAt(Parameter' "N.C.Method(int' int)"' 8' 21)'              GetCA1708CSharpResultAt(Parameter' "N.C.C(int' int)"' 9' 16)'              GetCA1708CSharpResultAt(Parameter' "N.C.operator +(N.C' int)"' 12' 36)'              GetCA1708CSharpResultAt(Parameter' "N.C.this[int' int]"' 18' 20)'              GetCA1708CSharpResultAt(Parameter' "N.D.Foo"' 30' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestParameters,The following statement contains a magic number: VerifyCSharp(@"  namespace N  {      public class C      {          int x;          public delegate void Delegate(int a' int A);          public void Method(int b' int B) {}          public C(int d' int D)          {          }          public static int operator +(C e' int E) { return 1; }          public int X          {              get { return x; }              set { x = value; }          }          public int this[int f' int F]          {              get { return x; }              set { }          }          public System.Action<int' int> action = (a' A) => { };      }      public partial class D      {      }      public partial class D      {          public delegate void Foo(int x' int X);      }  }  "'              GetCA1708CSharpResultAt(Parameter' "N.C.Delegate"' 7' 30)'              GetCA1708CSharpResultAt(Parameter' "N.C.Method(int' int)"' 8' 21)'              GetCA1708CSharpResultAt(Parameter' "N.C.C(int' int)"' 9' 16)'              GetCA1708CSharpResultAt(Parameter' "N.C.operator +(N.C' int)"' 12' 36)'              GetCA1708CSharpResultAt(Parameter' "N.C.this[int' int]"' 18' 20)'              GetCA1708CSharpResultAt(Parameter' "N.D.Foo"' 30' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestParameters,The following statement contains a magic number: VerifyCSharp(@"  namespace N  {      public class C      {          int x;          public delegate void Delegate(int a' int A);          public void Method(int b' int B) {}          public C(int d' int D)          {          }          public static int operator +(C e' int E) { return 1; }          public int X          {              get { return x; }              set { x = value; }          }          public int this[int f' int F]          {              get { return x; }              set { }          }          public System.Action<int' int> action = (a' A) => { };      }      public partial class D      {      }      public partial class D      {          public delegate void Foo(int x' int X);      }  }  "'              GetCA1708CSharpResultAt(Parameter' "N.C.Delegate"' 7' 30)'              GetCA1708CSharpResultAt(Parameter' "N.C.Method(int' int)"' 8' 21)'              GetCA1708CSharpResultAt(Parameter' "N.C.C(int' int)"' 9' 16)'              GetCA1708CSharpResultAt(Parameter' "N.C.operator +(N.C' int)"' 12' 36)'              GetCA1708CSharpResultAt(Parameter' "N.C.this[int' int]"' 18' 20)'              GetCA1708CSharpResultAt(Parameter' "N.D.Foo"' 30' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestParameters,The following statement contains a magic number: VerifyCSharp(@"  namespace N  {      public class C      {          int x;          public delegate void Delegate(int a' int A);          public void Method(int b' int B) {}          public C(int d' int D)          {          }          public static int operator +(C e' int E) { return 1; }          public int X          {              get { return x; }              set { x = value; }          }          public int this[int f' int F]          {              get { return x; }              set { }          }          public System.Action<int' int> action = (a' A) => { };      }      public partial class D      {      }      public partial class D      {          public delegate void Foo(int x' int X);      }  }  "'              GetCA1708CSharpResultAt(Parameter' "N.C.Delegate"' 7' 30)'              GetCA1708CSharpResultAt(Parameter' "N.C.Method(int' int)"' 8' 21)'              GetCA1708CSharpResultAt(Parameter' "N.C.C(int' int)"' 9' 16)'              GetCA1708CSharpResultAt(Parameter' "N.C.operator +(N.C' int)"' 12' 36)'              GetCA1708CSharpResultAt(Parameter' "N.C.this[int' int]"' 18' 20)'              GetCA1708CSharpResultAt(Parameter' "N.D.Foo"' 30' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestParameters,The following statement contains a magic number: VerifyCSharp(@"  namespace N  {      public class C      {          int x;          public delegate void Delegate(int a' int A);          public void Method(int b' int B) {}          public C(int d' int D)          {          }          public static int operator +(C e' int E) { return 1; }          public int X          {              get { return x; }              set { x = value; }          }          public int this[int f' int F]          {              get { return x; }              set { }          }          public System.Action<int' int> action = (a' A) => { };      }      public partial class D      {      }      public partial class D      {          public delegate void Foo(int x' int X);      }  }  "'              GetCA1708CSharpResultAt(Parameter' "N.C.Delegate"' 7' 30)'              GetCA1708CSharpResultAt(Parameter' "N.C.Method(int' int)"' 8' 21)'              GetCA1708CSharpResultAt(Parameter' "N.C.C(int' int)"' 9' 16)'              GetCA1708CSharpResultAt(Parameter' "N.C.operator +(N.C' int)"' 12' 36)'              GetCA1708CSharpResultAt(Parameter' "N.C.this[int' int]"' 18' 20)'              GetCA1708CSharpResultAt(Parameter' "N.D.Foo"' 30' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestParameters,The following statement contains a magic number: VerifyCSharp(@"  namespace N  {      public class C      {          int x;          public delegate void Delegate(int a' int A);          public void Method(int b' int B) {}          public C(int d' int D)          {          }          public static int operator +(C e' int E) { return 1; }          public int X          {              get { return x; }              set { x = value; }          }          public int this[int f' int F]          {              get { return x; }              set { }          }          public System.Action<int' int> action = (a' A) => { };      }      public partial class D      {      }      public partial class D      {          public delegate void Foo(int x' int X);      }  }  "'              GetCA1708CSharpResultAt(Parameter' "N.C.Delegate"' 7' 30)'              GetCA1708CSharpResultAt(Parameter' "N.C.Method(int' int)"' 8' 21)'              GetCA1708CSharpResultAt(Parameter' "N.C.C(int' int)"' 9' 16)'              GetCA1708CSharpResultAt(Parameter' "N.C.operator +(N.C' int)"' 12' 36)'              GetCA1708CSharpResultAt(Parameter' "N.C.this[int' int]"' 18' 20)'              GetCA1708CSharpResultAt(Parameter' "N.D.Foo"' 30' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestParameters,The following statement contains a magic number: VerifyCSharp(@"  namespace N  {      public class C      {          int x;          public delegate void Delegate(int a' int A);          public void Method(int b' int B) {}          public C(int d' int D)          {          }          public static int operator +(C e' int E) { return 1; }          public int X          {              get { return x; }              set { x = value; }          }          public int this[int f' int F]          {              get { return x; }              set { }          }          public System.Action<int' int> action = (a' A) => { };      }      public partial class D      {      }      public partial class D      {          public delegate void Foo(int x' int X);      }  }  "'              GetCA1708CSharpResultAt(Parameter' "N.C.Delegate"' 7' 30)'              GetCA1708CSharpResultAt(Parameter' "N.C.Method(int' int)"' 8' 21)'              GetCA1708CSharpResultAt(Parameter' "N.C.C(int' int)"' 9' 16)'              GetCA1708CSharpResultAt(Parameter' "N.C.operator +(N.C' int)"' 12' 36)'              GetCA1708CSharpResultAt(Parameter' "N.C.this[int' int]"' 18' 20)'              GetCA1708CSharpResultAt(Parameter' "N.D.Foo"' 30' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestParameters,The following statement contains a magic number: VerifyCSharp(@"  namespace N  {      public class C      {          int x;          public delegate void Delegate(int a' int A);          public void Method(int b' int B) {}          public C(int d' int D)          {          }          public static int operator +(C e' int E) { return 1; }          public int X          {              get { return x; }              set { x = value; }          }          public int this[int f' int F]          {              get { return x; }              set { }          }          public System.Action<int' int> action = (a' A) => { };      }      public partial class D      {      }      public partial class D      {          public delegate void Foo(int x' int X);      }  }  "'              GetCA1708CSharpResultAt(Parameter' "N.C.Delegate"' 7' 30)'              GetCA1708CSharpResultAt(Parameter' "N.C.Method(int' int)"' 8' 21)'              GetCA1708CSharpResultAt(Parameter' "N.C.C(int' int)"' 9' 16)'              GetCA1708CSharpResultAt(Parameter' "N.C.operator +(N.C' int)"' 12' 36)'              GetCA1708CSharpResultAt(Parameter' "N.C.this[int' int]"' 18' 20)'              GetCA1708CSharpResultAt(Parameter' "N.D.Foo"' 30' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestParameters,The following statement contains a magic number: VerifyCSharp(@"  namespace N  {      public class C      {          int x;          public delegate void Delegate(int a' int A);          public void Method(int b' int B) {}          public C(int d' int D)          {          }          public static int operator +(C e' int E) { return 1; }          public int X          {              get { return x; }              set { x = value; }          }          public int this[int f' int F]          {              get { return x; }              set { }          }          public System.Action<int' int> action = (a' A) => { };      }      public partial class D      {      }      public partial class D      {          public delegate void Foo(int x' int X);      }  }  "'              GetCA1708CSharpResultAt(Parameter' "N.C.Delegate"' 7' 30)'              GetCA1708CSharpResultAt(Parameter' "N.C.Method(int' int)"' 8' 21)'              GetCA1708CSharpResultAt(Parameter' "N.C.C(int' int)"' 9' 16)'              GetCA1708CSharpResultAt(Parameter' "N.C.operator +(N.C' int)"' 12' 36)'              GetCA1708CSharpResultAt(Parameter' "N.C.this[int' int]"' 18' 20)'              GetCA1708CSharpResultAt(Parameter' "N.D.Foo"' 30' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestParameters,The following statement contains a magic number: VerifyCSharp(@"  namespace N  {      public class C      {          int x;          public delegate void Delegate(int a' int A);          public void Method(int b' int B) {}          public C(int d' int D)          {          }          public static int operator +(C e' int E) { return 1; }          public int X          {              get { return x; }              set { x = value; }          }          public int this[int f' int F]          {              get { return x; }              set { }          }          public System.Action<int' int> action = (a' A) => { };      }      public partial class D      {      }      public partial class D      {          public delegate void Foo(int x' int X);      }  }  "'              GetCA1708CSharpResultAt(Parameter' "N.C.Delegate"' 7' 30)'              GetCA1708CSharpResultAt(Parameter' "N.C.Method(int' int)"' 8' 21)'              GetCA1708CSharpResultAt(Parameter' "N.C.C(int' int)"' 9' 16)'              GetCA1708CSharpResultAt(Parameter' "N.C.operator +(N.C' int)"' 12' 36)'              GetCA1708CSharpResultAt(Parameter' "N.C.this[int' int]"' 18' 20)'              GetCA1708CSharpResultAt(Parameter' "N.D.Foo"' 30' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestParameters,The following statement contains a magic number: VerifyCSharp(@"  namespace N  {      public class C      {          int x;          public delegate void Delegate(int a' int A);          public void Method(int b' int B) {}          public C(int d' int D)          {          }          public static int operator +(C e' int E) { return 1; }          public int X          {              get { return x; }              set { x = value; }          }          public int this[int f' int F]          {              get { return x; }              set { }          }          public System.Action<int' int> action = (a' A) => { };      }      public partial class D      {      }      public partial class D      {          public delegate void Foo(int x' int X);      }  }  "'              GetCA1708CSharpResultAt(Parameter' "N.C.Delegate"' 7' 30)'              GetCA1708CSharpResultAt(Parameter' "N.C.Method(int' int)"' 8' 21)'              GetCA1708CSharpResultAt(Parameter' "N.C.C(int' int)"' 9' 16)'              GetCA1708CSharpResultAt(Parameter' "N.C.operator +(N.C' int)"' 12' 36)'              GetCA1708CSharpResultAt(Parameter' "N.C.this[int' int]"' 18' 20)'              GetCA1708CSharpResultAt(Parameter' "N.D.Foo"' 30' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1708Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1708Tests.cs,TestParameters,The following statement contains a magic number: VerifyCSharp(@"  namespace N  {      public class C      {          int x;          public delegate void Delegate(int a' int A);          public void Method(int b' int B) {}          public C(int d' int D)          {          }          public static int operator +(C e' int E) { return 1; }          public int X          {              get { return x; }              set { x = value; }          }          public int this[int f' int F]          {              get { return x; }              set { }          }          public System.Action<int' int> action = (a' A) => { };      }      public partial class D      {      }      public partial class D      {          public delegate void Foo(int x' int X);      }  }  "'              GetCA1708CSharpResultAt(Parameter' "N.C.Delegate"' 7' 30)'              GetCA1708CSharpResultAt(Parameter' "N.C.Method(int' int)"' 8' 21)'              GetCA1708CSharpResultAt(Parameter' "N.C.C(int' int)"' 9' 16)'              GetCA1708CSharpResultAt(Parameter' "N.C.operator +(N.C' int)"' 12' 36)'              GetCA1708CSharpResultAt(Parameter' "N.C.this[int' int]"' 18' 20)'              GetCA1708CSharpResultAt(Parameter' "N.D.Foo"' 30' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  public interface Controller  {      void SomeMethod();  }    public interface 日本語  {      void SomeMethod();  }    public interface _Controller  {      void SomeMethod();  }    public interface _日本語  {      void SomeMethod();  }    public interface Internet  {      void SomeMethod();  }    public interface Iinternet  {      void SomeMethod();  }    public class Class1  {      public interface Controller      {          void SomeMethod();      }  }    public interface IAmAnInterface  {      void SomeMethod();  }  "'                  GetCA1715CSharpResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(7' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(12' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(17' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(27' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  public interface Controller  {      void SomeMethod();  }    public interface 日本語  {      void SomeMethod();  }    public interface _Controller  {      void SomeMethod();  }    public interface _日本語  {      void SomeMethod();  }    public interface Internet  {      void SomeMethod();  }    public interface Iinternet  {      void SomeMethod();  }    public class Class1  {      public interface Controller      {          void SomeMethod();      }  }    public interface IAmAnInterface  {      void SomeMethod();  }  "'                  GetCA1715CSharpResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(7' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(12' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(17' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(27' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  public interface Controller  {      void SomeMethod();  }    public interface 日本語  {      void SomeMethod();  }    public interface _Controller  {      void SomeMethod();  }    public interface _日本語  {      void SomeMethod();  }    public interface Internet  {      void SomeMethod();  }    public interface Iinternet  {      void SomeMethod();  }    public class Class1  {      public interface Controller      {          void SomeMethod();      }  }    public interface IAmAnInterface  {      void SomeMethod();  }  "'                  GetCA1715CSharpResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(7' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(12' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(17' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(27' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  public interface Controller  {      void SomeMethod();  }    public interface 日本語  {      void SomeMethod();  }    public interface _Controller  {      void SomeMethod();  }    public interface _日本語  {      void SomeMethod();  }    public interface Internet  {      void SomeMethod();  }    public interface Iinternet  {      void SomeMethod();  }    public class Class1  {      public interface Controller      {          void SomeMethod();      }  }    public interface IAmAnInterface  {      void SomeMethod();  }  "'                  GetCA1715CSharpResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(7' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(12' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(17' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(27' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  public interface Controller  {      void SomeMethod();  }    public interface 日本語  {      void SomeMethod();  }    public interface _Controller  {      void SomeMethod();  }    public interface _日本語  {      void SomeMethod();  }    public interface Internet  {      void SomeMethod();  }    public interface Iinternet  {      void SomeMethod();  }    public class Class1  {      public interface Controller      {          void SomeMethod();      }  }    public interface IAmAnInterface  {      void SomeMethod();  }  "'                  GetCA1715CSharpResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(7' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(12' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(17' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(27' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  public interface Controller  {      void SomeMethod();  }    public interface 日本語  {      void SomeMethod();  }    public interface _Controller  {      void SomeMethod();  }    public interface _日本語  {      void SomeMethod();  }    public interface Internet  {      void SomeMethod();  }    public interface Iinternet  {      void SomeMethod();  }    public class Class1  {      public interface Controller      {          void SomeMethod();      }  }    public interface IAmAnInterface  {      void SomeMethod();  }  "'                  GetCA1715CSharpResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(7' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(12' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(17' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(27' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  public interface Controller  {      void SomeMethod();  }    public interface 日本語  {      void SomeMethod();  }    public interface _Controller  {      void SomeMethod();  }    public interface _日本語  {      void SomeMethod();  }    public interface Internet  {      void SomeMethod();  }    public interface Iinternet  {      void SomeMethod();  }    public class Class1  {      public interface Controller      {          void SomeMethod();      }  }    public interface IAmAnInterface  {      void SomeMethod();  }  "'                  GetCA1715CSharpResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(7' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(12' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(17' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(27' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  public interface Controller  {      void SomeMethod();  }    public interface 日本語  {      void SomeMethod();  }    public interface _Controller  {      void SomeMethod();  }    public interface _日本語  {      void SomeMethod();  }    public interface Internet  {      void SomeMethod();  }    public interface Iinternet  {      void SomeMethod();  }    public class Class1  {      public interface Controller      {          void SomeMethod();      }  }    public interface IAmAnInterface  {      void SomeMethod();  }  "'                  GetCA1715CSharpResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(7' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(12' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(17' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(27' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  public interface Controller  {      void SomeMethod();  }    public interface 日本語  {      void SomeMethod();  }    public interface _Controller  {      void SomeMethod();  }    public interface _日本語  {      void SomeMethod();  }    public interface Internet  {      void SomeMethod();  }    public interface Iinternet  {      void SomeMethod();  }    public class Class1  {      public interface Controller      {          void SomeMethod();      }  }    public interface IAmAnInterface  {      void SomeMethod();  }  "'                  GetCA1715CSharpResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(7' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(12' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(17' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(27' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  public interface Controller  {      void SomeMethod();  }    public interface 日本語  {      void SomeMethod();  }    public interface _Controller  {      void SomeMethod();  }    public interface _日本語  {      void SomeMethod();  }    public interface Internet  {      void SomeMethod();  }    public interface Iinternet  {      void SomeMethod();  }    public class Class1  {      public interface Controller      {          void SomeMethod();      }  }    public interface IAmAnInterface  {      void SomeMethod();  }  "'                  GetCA1715CSharpResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(7' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(12' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(17' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(27' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  public interface Controller  {      void SomeMethod();  }    public interface 日本語  {      void SomeMethod();  }    public interface _Controller  {      void SomeMethod();  }    public interface _日本語  {      void SomeMethod();  }    public interface Internet  {      void SomeMethod();  }    public interface Iinternet  {      void SomeMethod();  }    public class Class1  {      public interface Controller      {          void SomeMethod();      }  }    public interface IAmAnInterface  {      void SomeMethod();  }  "'                  GetCA1715CSharpResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(7' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(12' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(17' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(27' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  public interface Controller  {      void SomeMethod();  }    public interface 日本語  {      void SomeMethod();  }    public interface _Controller  {      void SomeMethod();  }    public interface _日本語  {      void SomeMethod();  }    public interface Internet  {      void SomeMethod();  }    public interface Iinternet  {      void SomeMethod();  }    public class Class1  {      public interface Controller      {          void SomeMethod();      }  }    public interface IAmAnInterface  {      void SomeMethod();  }  "'                  GetCA1715CSharpResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(7' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(12' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(17' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(27' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  public interface Controller  {      void SomeMethod();  }    public interface 日本語  {      void SomeMethod();  }    public interface _Controller  {      void SomeMethod();  }    public interface _日本語  {      void SomeMethod();  }    public interface Internet  {      void SomeMethod();  }    public interface Iinternet  {      void SomeMethod();  }    public class Class1  {      public interface Controller      {          void SomeMethod();      }  }    public interface IAmAnInterface  {      void SomeMethod();  }  "'                  GetCA1715CSharpResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(7' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(12' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(17' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(27' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  public interface Controller  {      void SomeMethod();  }    public interface 日本語  {      void SomeMethod();  }    public interface _Controller  {      void SomeMethod();  }    public interface _日本語  {      void SomeMethod();  }    public interface Internet  {      void SomeMethod();  }    public interface Iinternet  {      void SomeMethod();  }    public class Class1  {      public interface Controller      {          void SomeMethod();      }  }    public interface IAmAnInterface  {      void SomeMethod();  }  "'                  GetCA1715CSharpResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(7' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(12' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(17' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(27' 18' CA1715InterfaceMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class IInterface<V>  {  }    public class IAnotherInterface<本語>  {  }    public delegate void Callback<V>();    public class Class2<V>  {  }    public class Class2<T' V>  {  }    public class Class3<Type>  {  }    public class Class3<T' Type>  {  }    public class Base<Key' Value>  {  }    public class Derived<Key' Value> : Base<Key' Value>  {  }    public class Class4<Type1>  {      public void AnotherMethod<Type2>()      {          Console.WriteLine(typeof(Type2).ToString());      }        public void Method<Type2>(Type2 type)      {          Console.WriteLine(type);      }        public void Method<K' V>(K key' V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class5<_Type1>  {      public void Method<_K' _V>(_K key' _V value)      {          Console.WriteLine(key.ToString() + value.ToString());      }  }    public class Class6<TTypeParameter>  {  }  "'                  GetCA1715CSharpResultAt(4' 25' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(8' 32' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(12' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(14' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(22' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(26' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 19' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(30' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 22' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(34' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(38' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(40' 31' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(50' 27' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(56' 21' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 24' CA1715TypeParameterMessage)'                  GetCA1715CSharpResultAt(58' 28' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Public Interface Controller      Sub SomeMethod()  End Interface    Public Interface 日本語      Sub SomeMethod()  End Interface    Public Interface _Controller      Sub SomeMethod()  End Interface    Public Interface _日本語      Sub SomeMethod()  End Interface    Public Interface Internet      Sub SomeMethod()  End Interface    Public Interface Iinternet      Sub SomeMethod()  End Interface    Public Class Class1      Public Interface Controller          Sub SomeMethod()      End Interface  End Class    Public Interface IAmAnInterface      Sub SomeMethod()  End Interface  "'                  GetCA1715BasicResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(6' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(10' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(14' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(18' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(27' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Public Interface Controller      Sub SomeMethod()  End Interface    Public Interface 日本語      Sub SomeMethod()  End Interface    Public Interface _Controller      Sub SomeMethod()  End Interface    Public Interface _日本語      Sub SomeMethod()  End Interface    Public Interface Internet      Sub SomeMethod()  End Interface    Public Interface Iinternet      Sub SomeMethod()  End Interface    Public Class Class1      Public Interface Controller          Sub SomeMethod()      End Interface  End Class    Public Interface IAmAnInterface      Sub SomeMethod()  End Interface  "'                  GetCA1715BasicResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(6' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(10' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(14' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(18' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(27' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Public Interface Controller      Sub SomeMethod()  End Interface    Public Interface 日本語      Sub SomeMethod()  End Interface    Public Interface _Controller      Sub SomeMethod()  End Interface    Public Interface _日本語      Sub SomeMethod()  End Interface    Public Interface Internet      Sub SomeMethod()  End Interface    Public Interface Iinternet      Sub SomeMethod()  End Interface    Public Class Class1      Public Interface Controller          Sub SomeMethod()      End Interface  End Class    Public Interface IAmAnInterface      Sub SomeMethod()  End Interface  "'                  GetCA1715BasicResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(6' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(10' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(14' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(18' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(27' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Public Interface Controller      Sub SomeMethod()  End Interface    Public Interface 日本語      Sub SomeMethod()  End Interface    Public Interface _Controller      Sub SomeMethod()  End Interface    Public Interface _日本語      Sub SomeMethod()  End Interface    Public Interface Internet      Sub SomeMethod()  End Interface    Public Interface Iinternet      Sub SomeMethod()  End Interface    Public Class Class1      Public Interface Controller          Sub SomeMethod()      End Interface  End Class    Public Interface IAmAnInterface      Sub SomeMethod()  End Interface  "'                  GetCA1715BasicResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(6' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(10' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(14' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(18' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(27' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Public Interface Controller      Sub SomeMethod()  End Interface    Public Interface 日本語      Sub SomeMethod()  End Interface    Public Interface _Controller      Sub SomeMethod()  End Interface    Public Interface _日本語      Sub SomeMethod()  End Interface    Public Interface Internet      Sub SomeMethod()  End Interface    Public Interface Iinternet      Sub SomeMethod()  End Interface    Public Class Class1      Public Interface Controller          Sub SomeMethod()      End Interface  End Class    Public Interface IAmAnInterface      Sub SomeMethod()  End Interface  "'                  GetCA1715BasicResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(6' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(10' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(14' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(18' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(27' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Public Interface Controller      Sub SomeMethod()  End Interface    Public Interface 日本語      Sub SomeMethod()  End Interface    Public Interface _Controller      Sub SomeMethod()  End Interface    Public Interface _日本語      Sub SomeMethod()  End Interface    Public Interface Internet      Sub SomeMethod()  End Interface    Public Interface Iinternet      Sub SomeMethod()  End Interface    Public Class Class1      Public Interface Controller          Sub SomeMethod()      End Interface  End Class    Public Interface IAmAnInterface      Sub SomeMethod()  End Interface  "'                  GetCA1715BasicResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(6' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(10' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(14' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(18' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(27' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Public Interface Controller      Sub SomeMethod()  End Interface    Public Interface 日本語      Sub SomeMethod()  End Interface    Public Interface _Controller      Sub SomeMethod()  End Interface    Public Interface _日本語      Sub SomeMethod()  End Interface    Public Interface Internet      Sub SomeMethod()  End Interface    Public Interface Iinternet      Sub SomeMethod()  End Interface    Public Class Class1      Public Interface Controller          Sub SomeMethod()      End Interface  End Class    Public Interface IAmAnInterface      Sub SomeMethod()  End Interface  "'                  GetCA1715BasicResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(6' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(10' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(14' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(18' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(27' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Public Interface Controller      Sub SomeMethod()  End Interface    Public Interface 日本語      Sub SomeMethod()  End Interface    Public Interface _Controller      Sub SomeMethod()  End Interface    Public Interface _日本語      Sub SomeMethod()  End Interface    Public Interface Internet      Sub SomeMethod()  End Interface    Public Interface Iinternet      Sub SomeMethod()  End Interface    Public Class Class1      Public Interface Controller          Sub SomeMethod()      End Interface  End Class    Public Interface IAmAnInterface      Sub SomeMethod()  End Interface  "'                  GetCA1715BasicResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(6' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(10' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(14' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(18' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(27' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Public Interface Controller      Sub SomeMethod()  End Interface    Public Interface 日本語      Sub SomeMethod()  End Interface    Public Interface _Controller      Sub SomeMethod()  End Interface    Public Interface _日本語      Sub SomeMethod()  End Interface    Public Interface Internet      Sub SomeMethod()  End Interface    Public Interface Iinternet      Sub SomeMethod()  End Interface    Public Class Class1      Public Interface Controller          Sub SomeMethod()      End Interface  End Class    Public Interface IAmAnInterface      Sub SomeMethod()  End Interface  "'                  GetCA1715BasicResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(6' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(10' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(14' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(18' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(27' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Public Interface Controller      Sub SomeMethod()  End Interface    Public Interface 日本語      Sub SomeMethod()  End Interface    Public Interface _Controller      Sub SomeMethod()  End Interface    Public Interface _日本語      Sub SomeMethod()  End Interface    Public Interface Internet      Sub SomeMethod()  End Interface    Public Interface Iinternet      Sub SomeMethod()  End Interface    Public Class Class1      Public Interface Controller          Sub SomeMethod()      End Interface  End Class    Public Interface IAmAnInterface      Sub SomeMethod()  End Interface  "'                  GetCA1715BasicResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(6' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(10' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(14' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(18' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(27' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Public Interface Controller      Sub SomeMethod()  End Interface    Public Interface 日本語      Sub SomeMethod()  End Interface    Public Interface _Controller      Sub SomeMethod()  End Interface    Public Interface _日本語      Sub SomeMethod()  End Interface    Public Interface Internet      Sub SomeMethod()  End Interface    Public Interface Iinternet      Sub SomeMethod()  End Interface    Public Class Class1      Public Interface Controller          Sub SomeMethod()      End Interface  End Class    Public Interface IAmAnInterface      Sub SomeMethod()  End Interface  "'                  GetCA1715BasicResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(6' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(10' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(14' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(18' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(27' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Public Interface Controller      Sub SomeMethod()  End Interface    Public Interface 日本語      Sub SomeMethod()  End Interface    Public Interface _Controller      Sub SomeMethod()  End Interface    Public Interface _日本語      Sub SomeMethod()  End Interface    Public Interface Internet      Sub SomeMethod()  End Interface    Public Interface Iinternet      Sub SomeMethod()  End Interface    Public Class Class1      Public Interface Controller          Sub SomeMethod()      End Interface  End Class    Public Interface IAmAnInterface      Sub SomeMethod()  End Interface  "'                  GetCA1715BasicResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(6' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(10' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(14' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(18' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(27' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Public Interface Controller      Sub SomeMethod()  End Interface    Public Interface 日本語      Sub SomeMethod()  End Interface    Public Interface _Controller      Sub SomeMethod()  End Interface    Public Interface _日本語      Sub SomeMethod()  End Interface    Public Interface Internet      Sub SomeMethod()  End Interface    Public Interface Iinternet      Sub SomeMethod()  End Interface    Public Class Class1      Public Interface Controller          Sub SomeMethod()      End Interface  End Class    Public Interface IAmAnInterface      Sub SomeMethod()  End Interface  "'                  GetCA1715BasicResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(6' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(10' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(14' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(18' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(27' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestInterfaceNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Public Interface Controller      Sub SomeMethod()  End Interface    Public Interface 日本語      Sub SomeMethod()  End Interface    Public Interface _Controller      Sub SomeMethod()  End Interface    Public Interface _日本語      Sub SomeMethod()  End Interface    Public Interface Internet      Sub SomeMethod()  End Interface    Public Interface Iinternet      Sub SomeMethod()  End Interface    Public Class Class1      Public Interface Controller          Sub SomeMethod()      End Interface  End Class    Public Interface IAmAnInterface      Sub SomeMethod()  End Interface  "'                  GetCA1715BasicResultAt(2' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(6' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(10' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(14' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(18' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(22' 18' CA1715InterfaceMessage)'                  GetCA1715BasicResultAt(27' 22' CA1715InterfaceMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1715Test,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Naming\CA1715Tests.cs,TestTypeParameterNamesBasic,The following statement contains a magic number: VerifyBasic(@"  Import System    Public Class IInterface(Of V)  End Class    Public Class IAnotherInterface(Of 本語)  End Class    Public Delegate Sub Callback(Of V)()    Public Class Class2(Of V)  End Class    Public Class Class2(Of T' V)  End Class    Public Class Class3(Of Type)  End Class    Public Class Class3(Of T' Type)  End Class    Public Class Base(Of Key' Value)  End Class    Public Class Derived(Of Key' Value)      Inherits Base(Of Key' Value)  End Class    Public Class Class4(Of Type1)      Public Sub AnotherMethod(Of Type2)()          Console.WriteLine(GetType(Type2).ToString())      End Sub        Public Sub Method(Of Type2)(type As Type2)          Console.WriteLine(type)      End Sub        Public Sub Method(Of K' V)(key As K' value As V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class5(Of _Type1)      Public Sub Method(Of _K' _V)(key As _K' value As _V)          Console.WriteLine(key.ToString() + value.ToString())      End Sub  End Class    Public Class Class6(Of TTypeParameter)  End Class  "'                  GetCA1715BasicResultAt(4' 28' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(7' 35' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(10' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(12' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(15' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(18' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(21' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 22' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(24' 27' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 25' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(27' 30' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(31' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(32' 33' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(36' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(40' 29' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(45' 24' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 26' CA1715TypeParameterMessage)'                  GetCA1715BasicResultAt(46' 30' CA1715TypeParameterMessage));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1813Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1813Tests.cs,CA1813CSharpDiagnosticProviderTestFired,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class C  {      public class AttributeClass: Attribute      {      }        private class AttributeClass2: Attribute      {      }  }  "'              GetCA1813CSharpResultAt(6' 18)'              GetCA1813CSharpResultAt(10' 19));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1813Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1813Tests.cs,CA1813CSharpDiagnosticProviderTestFired,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class C  {      public class AttributeClass: Attribute      {      }        private class AttributeClass2: Attribute      {      }  }  "'              GetCA1813CSharpResultAt(6' 18)'              GetCA1813CSharpResultAt(10' 19));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1813Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1813Tests.cs,CA1813CSharpDiagnosticProviderTestFired,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class C  {      public class AttributeClass: Attribute      {      }        private class AttributeClass2: Attribute      {      }  }  "'              GetCA1813CSharpResultAt(6' 18)'              GetCA1813CSharpResultAt(10' 19));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1813Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1813Tests.cs,CA1813CSharpDiagnosticProviderTestFired,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class C  {      public class AttributeClass: Attribute      {      }        private class AttributeClass2: Attribute      {      }  }  "'              GetCA1813CSharpResultAt(6' 18)'              GetCA1813CSharpResultAt(10' 19));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1813Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1813Tests.cs,CA1813CSharpDiagnosticProviderTestFiredWithScope,The following statement contains a magic number: VerifyCSharp(@"  using System;    [|public class AttributeClass: Attribute  {  }|]    private class AttributeClass2: Attribute  {  }  "'              GetCA1813CSharpResultAt(4' 14));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1813Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1813Tests.cs,CA1813CSharpDiagnosticProviderTestFiredWithScope,The following statement contains a magic number: VerifyCSharp(@"  using System;    [|public class AttributeClass: Attribute  {  }|]    private class AttributeClass2: Attribute  {  }  "'              GetCA1813CSharpResultAt(4' 14));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1813Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1813Tests.cs,CA1813VisualBasicDiagnosticProviderTestFired,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Class AttributeClass      Inherits Attribute  End Class    Private Class AttributeClass2      Inherits Attribute  End Class  "'              GetCA1813BasicResultAt(4' 14)'              GetCA1813BasicResultAt(8' 15));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1813Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1813Tests.cs,CA1813VisualBasicDiagnosticProviderTestFired,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Class AttributeClass      Inherits Attribute  End Class    Private Class AttributeClass2      Inherits Attribute  End Class  "'              GetCA1813BasicResultAt(4' 14)'              GetCA1813BasicResultAt(8' 15));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1813Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1813Tests.cs,CA1813VisualBasicDiagnosticProviderTestFired,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Class AttributeClass      Inherits Attribute  End Class    Private Class AttributeClass2      Inherits Attribute  End Class  "'              GetCA1813BasicResultAt(4' 14)'              GetCA1813BasicResultAt(8' 15));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1813Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1813Tests.cs,CA1813VisualBasicDiagnosticProviderTestFired,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Class AttributeClass      Inherits Attribute  End Class    Private Class AttributeClass2      Inherits Attribute  End Class  "'              GetCA1813BasicResultAt(4' 14)'              GetCA1813BasicResultAt(8' 15));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1813Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1813Tests.cs,CA1813VisualBasicDiagnosticProviderTestFiredwithScope,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Class AttributeClass      Inherits Attribute  End Class    [|Private Class AttributeClass2      Inherits Attribute  End Class|]  "'              GetCA1813BasicResultAt(8' 15));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1813Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1813Tests.cs,CA1813VisualBasicDiagnosticProviderTestFiredwithScope,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Class AttributeClass      Inherits Attribute  End Class    [|Private Class AttributeClass2      Inherits Attribute  End Class|]  "'              GetCA1813BasicResultAt(8' 15));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1821Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1821Tests.cs,CA1821CSharpTestRemoveEmptyFinalizers,The following statement contains a magic number: VerifyCSharp(@"  public class Class1  {  	// Violation occurs because the finalizer is empty.  	~Class1()  	{  	}  }    public class Class2  {  	// Violation occurs because the finalizer is empty.  	~Class2()  	{          //// Comments here  	}  }  "'                  GetCA1821CSharpResultAt(5' 3)'                  GetCA1821CSharpResultAt(13' 3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1821Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1821Tests.cs,CA1821CSharpTestRemoveEmptyFinalizers,The following statement contains a magic number: VerifyCSharp(@"  public class Class1  {  	// Violation occurs because the finalizer is empty.  	~Class1()  	{  	}  }    public class Class2  {  	// Violation occurs because the finalizer is empty.  	~Class2()  	{          //// Comments here  	}  }  "'                  GetCA1821CSharpResultAt(5' 3)'                  GetCA1821CSharpResultAt(13' 3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1821Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1821Tests.cs,CA1821CSharpTestRemoveEmptyFinalizers,The following statement contains a magic number: VerifyCSharp(@"  public class Class1  {  	// Violation occurs because the finalizer is empty.  	~Class1()  	{  	}  }    public class Class2  {  	// Violation occurs because the finalizer is empty.  	~Class2()  	{          //// Comments here  	}  }  "'                  GetCA1821CSharpResultAt(5' 3)'                  GetCA1821CSharpResultAt(13' 3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1821Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1821Tests.cs,CA1821CSharpTestRemoveEmptyFinalizers,The following statement contains a magic number: VerifyCSharp(@"  public class Class1  {  	// Violation occurs because the finalizer is empty.  	~Class1()  	{  	}  }    public class Class2  {  	// Violation occurs because the finalizer is empty.  	~Class2()  	{          //// Comments here  	}  }  "'                  GetCA1821CSharpResultAt(5' 3)'                  GetCA1821CSharpResultAt(13' 3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1821Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1821Tests.cs,CA1821CSharpTestRemoveEmptyFinalizersWithScope,The following statement contains a magic number: VerifyCSharp(@"  [|  public class Class1  {  	// Violation occurs because the finalizer is empty.  	~Class1()  	{  	}  }  |]    public class Class2  {  	// Violation occurs because the finalizer is empty.  	~Class2()  	{          //// Comments here  	}  }    "'                  GetCA1821CSharpResultAt(6' 3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1821Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1821Tests.cs,CA1821CSharpTestRemoveEmptyFinalizersWithScope,The following statement contains a magic number: VerifyCSharp(@"  [|  public class Class1  {  	// Violation occurs because the finalizer is empty.  	~Class1()  	{  	}  }  |]    public class Class2  {  	// Violation occurs because the finalizer is empty.  	~Class2()  	{          //// Comments here  	}  }    "'                  GetCA1821CSharpResultAt(6' 3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1821Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1821Tests.cs,CA1821CSharpTestRemoveEmptyFinalizersWithDebugFail,The following statement contains a magic number: VerifyCSharp(@"  using System.Diagnostics;    public class Class1  {  	// Violation occurs because Debug.Fail is a conditional method.   	// The finalizer will contain code only if the DEBUG directive   	// symbol is present at compile time. When the DEBUG   	// directive is not present' the finalizer will still exist' but   	// it will be empty.  	~Class1()  	{  		Debug.Fail(""Finalizer called!"");      }  }  "'              GetCA1821CSharpResultAt(11' 3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1821Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1821Tests.cs,CA1821CSharpTestRemoveEmptyFinalizersWithDebugFail,The following statement contains a magic number: VerifyCSharp(@"  using System.Diagnostics;    public class Class1  {  	// Violation occurs because Debug.Fail is a conditional method.   	// The finalizer will contain code only if the DEBUG directive   	// symbol is present at compile time. When the DEBUG   	// directive is not present' the finalizer will still exist' but   	// it will be empty.  	~Class1()  	{  		Debug.Fail(""Finalizer called!"");      }  }  "'              GetCA1821CSharpResultAt(11' 3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1821Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1821Tests.cs,CA1821CSharpTestRemoveEmptyFinalizersWithDebugFailAndDirectiveAroundStatements,The following statement contains a magic number: VerifyCSharp(@"  using System.Diagnostics;    public class Class1  {  	// Violation occurs because Debug.Fail is a conditional method.  	~Class1()  	{  		Debug.Fail(""Class1 finalizer called!"");      }  }    public class Class2  {  	// Violation will not occur because the finalizer's body is not empty.  	~Class2()  	{  		Debug.Fail(""Class2 finalizer called!"");          Foo();      }        void Foo()      {      }  }  "'              GetCA1821CSharpResultAt(7' 3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1821Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1821Tests.cs,CA1821CSharpTestRemoveEmptyFinalizersWithDebugFailAndDirectiveAroundStatements,The following statement contains a magic number: VerifyCSharp(@"  using System.Diagnostics;    public class Class1  {  	// Violation occurs because Debug.Fail is a conditional method.  	~Class1()  	{  		Debug.Fail(""Class1 finalizer called!"");      }  }    public class Class2  {  	// Violation will not occur because the finalizer's body is not empty.  	~Class2()  	{  		Debug.Fail(""Class2 finalizer called!"");          Foo();      }        void Foo()      {      }  }  "'              GetCA1821CSharpResultAt(7' 3));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1821Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1821Tests.cs,CA1821BasicTestRemoveEmptyFinalizers,The following statement contains a magic number: VerifyBasic(@"  Imports System.Diagnostics    Public Class Class1      '  Violation occurs because the finalizer is empty.      Protected Overrides Sub Finalize()        End Sub  End Class    Public Class Class2      '  Violation occurs because the finalizer is empty.      Protected Overrides Sub Finalize()          ' Comments      End Sub  End Class    Public Class Class3      '  Violation occurs because Debug.Fail is a conditional method.      Protected Overrides Sub Finalize()          Debug.Fail(""Finalizer called!"")      End Sub  End Class  "'                  GetCA1821BasicResultAt(6' 29)'                  GetCA1821BasicResultAt(13' 29)'                  GetCA1821BasicResultAt(20' 29));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1821Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1821Tests.cs,CA1821BasicTestRemoveEmptyFinalizers,The following statement contains a magic number: VerifyBasic(@"  Imports System.Diagnostics    Public Class Class1      '  Violation occurs because the finalizer is empty.      Protected Overrides Sub Finalize()        End Sub  End Class    Public Class Class2      '  Violation occurs because the finalizer is empty.      Protected Overrides Sub Finalize()          ' Comments      End Sub  End Class    Public Class Class3      '  Violation occurs because Debug.Fail is a conditional method.      Protected Overrides Sub Finalize()          Debug.Fail(""Finalizer called!"")      End Sub  End Class  "'                  GetCA1821BasicResultAt(6' 29)'                  GetCA1821BasicResultAt(13' 29)'                  GetCA1821BasicResultAt(20' 29));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1821Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1821Tests.cs,CA1821BasicTestRemoveEmptyFinalizers,The following statement contains a magic number: VerifyBasic(@"  Imports System.Diagnostics    Public Class Class1      '  Violation occurs because the finalizer is empty.      Protected Overrides Sub Finalize()        End Sub  End Class    Public Class Class2      '  Violation occurs because the finalizer is empty.      Protected Overrides Sub Finalize()          ' Comments      End Sub  End Class    Public Class Class3      '  Violation occurs because Debug.Fail is a conditional method.      Protected Overrides Sub Finalize()          Debug.Fail(""Finalizer called!"")      End Sub  End Class  "'                  GetCA1821BasicResultAt(6' 29)'                  GetCA1821BasicResultAt(13' 29)'                  GetCA1821BasicResultAt(20' 29));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1821Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1821Tests.cs,CA1821BasicTestRemoveEmptyFinalizers,The following statement contains a magic number: VerifyBasic(@"  Imports System.Diagnostics    Public Class Class1      '  Violation occurs because the finalizer is empty.      Protected Overrides Sub Finalize()        End Sub  End Class    Public Class Class2      '  Violation occurs because the finalizer is empty.      Protected Overrides Sub Finalize()          ' Comments      End Sub  End Class    Public Class Class3      '  Violation occurs because Debug.Fail is a conditional method.      Protected Overrides Sub Finalize()          Debug.Fail(""Finalizer called!"")      End Sub  End Class  "'                  GetCA1821BasicResultAt(6' 29)'                  GetCA1821BasicResultAt(13' 29)'                  GetCA1821BasicResultAt(20' 29));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1821Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1821Tests.cs,CA1821BasicTestRemoveEmptyFinalizers,The following statement contains a magic number: VerifyBasic(@"  Imports System.Diagnostics    Public Class Class1      '  Violation occurs because the finalizer is empty.      Protected Overrides Sub Finalize()        End Sub  End Class    Public Class Class2      '  Violation occurs because the finalizer is empty.      Protected Overrides Sub Finalize()          ' Comments      End Sub  End Class    Public Class Class3      '  Violation occurs because Debug.Fail is a conditional method.      Protected Overrides Sub Finalize()          Debug.Fail(""Finalizer called!"")      End Sub  End Class  "'                  GetCA1821BasicResultAt(6' 29)'                  GetCA1821BasicResultAt(13' 29)'                  GetCA1821BasicResultAt(20' 29));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1821Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1821Tests.cs,CA1821BasicTestRemoveEmptyFinalizers,The following statement contains a magic number: VerifyBasic(@"  Imports System.Diagnostics    Public Class Class1      '  Violation occurs because the finalizer is empty.      Protected Overrides Sub Finalize()        End Sub  End Class    Public Class Class2      '  Violation occurs because the finalizer is empty.      Protected Overrides Sub Finalize()          ' Comments      End Sub  End Class    Public Class Class3      '  Violation occurs because Debug.Fail is a conditional method.      Protected Overrides Sub Finalize()          Debug.Fail(""Finalizer called!"")      End Sub  End Class  "'                  GetCA1821BasicResultAt(6' 29)'                  GetCA1821BasicResultAt(13' 29)'                  GetCA1821BasicResultAt(20' 29));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1821Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1821Tests.cs,CA1821BasicTestRemoveEmptyFinalizersWithScope,The following statement contains a magic number: VerifyBasic(@"  Imports System.Diagnostics    Public Class Class1      '  Violation occurs because the finalizer is empty.      Protected Overrides Sub Finalize()        End Sub  End Class    [|Public Class Class2      '  Violation occurs because the finalizer is empty.      Protected Overrides Sub Finalize()          ' Comments      End Sub  End Class|]    Public Class Class3      '  Violation occurs because Debug.Fail is a conditional method.      Protected Overrides Sub Finalize()          Debug.Fail(""Finalizer called!"")      End Sub  End Class  "'                  GetCA1821BasicResultAt(13' 29));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1821Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1821Tests.cs,CA1821BasicTestRemoveEmptyFinalizersWithScope,The following statement contains a magic number: VerifyBasic(@"  Imports System.Diagnostics    Public Class Class1      '  Violation occurs because the finalizer is empty.      Protected Overrides Sub Finalize()        End Sub  End Class    [|Public Class Class2      '  Violation occurs because the finalizer is empty.      Protected Overrides Sub Finalize()          ' Comments      End Sub  End Class|]    Public Class Class3      '  Violation occurs because Debug.Fail is a conditional method.      Protected Overrides Sub Finalize()          Debug.Fail(""Finalizer called!"")      End Sub  End Class  "'                  GetCA1821BasicResultAt(13' 29));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1821Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1821Tests.cs,CA1821BasicTestRemoveEmptyFinalizersWithDebugFail,The following statement contains a magic number: VerifyBasic(@"  Imports System.Diagnostics    Public Class Class1  	' Violation occurs because Debug.Fail is a conditional method.      Protected Overrides Sub Finalize()          Debug.Fail(""Finalizer called!"")      End Sub  End Class    Public Class Class2  	' Violation occurs because Debug.Fail is a conditional method.      Protected Overrides Sub Finalize()          Dim a = False          Debug.Fail(""Finalizer called!"")      End Sub  End Class  "'                  GetCA1821BasicResultAt(6' 29));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1821Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Performance\CA1821Tests.cs,CA1821BasicTestRemoveEmptyFinalizersWithDebugFail,The following statement contains a magic number: VerifyBasic(@"  Imports System.Diagnostics    Public Class Class1  	' Violation occurs because Debug.Fail is a conditional method.      Protected Overrides Sub Finalize()          Debug.Fail(""Finalizer called!"")      End Sub  End Class    Public Class Class2  	' Violation occurs because Debug.Fail is a conditional method.      Protected Overrides Sub Finalize()          Dim a = False          Debug.Fail(""Finalizer called!"")      End Sub  End Class  "'                  GetCA1821BasicResultAt(6' 29));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = """";                      lock (s1) { }                      lock (""Hello"") { }                        var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(8' 27' "string")'              GetCA2002CSharpResultAt(9' 27' "string")'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException")'              GetCA2002CSharpResultAt(18' 27' "System.Threading.Thread")'              GetCA2002CSharpResultAt(20' 27' "System.Type")'              GetCA2002CSharpResultAt(23' 27' "System.Reflection.MemberInfo")'              GetCA2002CSharpResultAt(26' 27' "System.Reflection.ConstructorInfo")'              GetCA2002CSharpResultAt(29' 27' "System.Reflection.ParameterInfo")'              GetCA2002CSharpResultAt(32' 27' "int[]"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentities,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """"                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType(foo)                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(6' 30' "String")'              GetCA2002BasicResultAt(8' 30' "String")'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException")'              GetCA2002BasicResultAt(21' 30' "System.Threading.Thread")'              GetCA2002BasicResultAt(24' 30' "System.Type")'              GetCA2002BasicResultAt(28' 30' "System.Reflection.MemberInfo")'              GetCA2002BasicResultAt(32' 30' "System.Reflection.ConstructorInfo")'              GetCA2002BasicResultAt(36' 30' "System.Reflection.ParameterInfo")'              GetCA2002BasicResultAt(40' 30' "Integer()"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentitiesWithScope,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = "";                      lock (s1) { }                      lock (""Hello"") { }                        [|var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }|]                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentitiesWithScope,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = "";                      lock (s1) { }                      lock (""Hello"") { }                        [|var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }|]                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentitiesWithScope,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = "";                      lock (s1) { }                      lock (""Hello"") { }                        [|var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }|]                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentitiesWithScope,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = "";                      lock (s1) { }                      lock (""Hello"") { }                        [|var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }|]                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentitiesWithScope,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = "";                      lock (s1) { }                      lock (""Hello"") { }                        [|var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }|]                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentitiesWithScope,The following statement contains a magic number: VerifyCSharp(@"              using System;              public class foo              {                  public void Test()                  {                      string s1 = "";                      lock (s1) { }                      lock (""Hello"") { }                        [|var o1 = new OutOfMemoryException();                      lock (o1) { }                      var o2 = new StackOverflowException();                      lock (o2) { }                      var o3 = new ExecutionEngineException();                      lock (o3) { }|]                        lock (System.Threading.Thread.CurrentThread) { }                        lock (typeof(foo)) { }                        System.Reflection.MemberInfo mi = null;                      lock (mi) { }                        System.Reflection.ConstructorInfo ci = null;                      lock (ci) { }                        System.Reflection.ParameterInfo pi = null;                      lock (pi) { }                        int[] values = { 1' 2' 3 };                      lock (values) { }                        System.Reflection.MemberInfo[] values1 = null;                      lock (values1) { }                  }              }              "'              GetCA2002CSharpResultAt(12' 27' "System.OutOfMemoryException")'              GetCA2002CSharpResultAt(14' 27' "System.StackOverflowException")'              GetCA2002CSharpResultAt(16' 27' "System.ExecutionEngineException"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentitiesWithScope,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """";                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        [|Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock|]                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType foo                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentitiesWithScope,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """";                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        [|Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock|]                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType foo                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentitiesWithScope,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """";                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        [|Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock|]                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType foo                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentitiesWithScope,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """";                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        [|Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock|]                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType foo                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentitiesWithScope,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """";                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        [|Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock|]                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType foo                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2002Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Reliability\CA2002Tests.cs,CA2002TestLockOnWeakIdentitiesWithScope,The following statement contains a magic number: VerifyBasic(@"              Imports System              Public Class foo                  Public Sub Test()                      Dim s1 As String = """";                      SyncLock s1                      End SyncLock                      SyncLock (""Hello"")                      End SyncLock                        [|Dim o1 = New OutOfMemoryException()                      SyncLock o1                      End SyncLock                      Dim o2 = New StackOverflowException()                      SyncLock o2                      End SyncLock                      Dim o3 = New ExecutionEngineException()                      SyncLock o3                      End SyncLock|]                        SyncLock System.Threading.Thread.CurrentThread                      End SyncLock                        SyncLock GetType foo                      End SyncLock                        Dim mi As System.Reflection.MemberInfo = Nothing                      SyncLock mi                      End SyncLock                        Dim ci As System.Reflection.ConstructorInfo = Nothing                      SyncLock ci                      End SyncLock                        Dim pi As System.Reflection.ParameterInfo = Nothing                      SyncLock pi                      End SyncLock                        Dim values As Integer() = { 1' 2' 3}                      SyncLock values                      End SyncLock                        Dim values1 As System.Reflection.MemberInfo() = Nothing                      SyncLock values1                      End SyncLock                  End Sub              End Class"'              GetCA2002BasicResultAt(12' 30' "System.OutOfMemoryException")'              GetCA2002BasicResultAt(15' 30' "System.StackOverflowException")'              GetCA2002BasicResultAt(18' 30' "System.ExecutionEngineException"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1030Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1036Tests.cs,CA1036ClassWrongEqualsCSharp,The following statement contains a magic number: VerifyCSharp(@"      using System;        public class A : IComparable      {              public override int GetHashCode()          {              return 1234;          }            public int CompareTo(object obj)          {              return 1;          }            public bool Equals;            public static bool operator ==(A objLeft' A objRight)          {              return true;          }            public static bool operator !=(A objLeft' A objRight)          {              return true;          }            public static bool operator <(A objLeft' A objRight)          {              return true;          }            public static bool operator >(A objLeft' A objRight)          {              return true;          }      }    "' GetCA1036CSharpResultAt(4' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1030Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1036Tests.cs,CA1036ClassWrongEqualsCSharp,The following statement contains a magic number: VerifyCSharp(@"      using System;        public class A : IComparable      {              public override int GetHashCode()          {              return 1234;          }            public int CompareTo(object obj)          {              return 1;          }            public bool Equals;            public static bool operator ==(A objLeft' A objRight)          {              return true;          }            public static bool operator !=(A objLeft' A objRight)          {              return true;          }            public static bool operator <(A objLeft' A objRight)          {              return true;          }            public static bool operator >(A objLeft' A objRight)          {              return true;          }      }    "' GetCA1036CSharpResultAt(4' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1030Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1036Tests.cs,CA1036ClassNoEqualsOperatorCSharp,The following statement contains a magic number: VerifyCSharp(@"      using System;        public class A : IComparable      {              public override int GetHashCode()          {              return 1234;          }            public int CompareTo(object obj)          {              return 1;          }            public static bool operator ==(A objLeft' A objRight)          {              return true;          }            public static bool operator !=(A objLeft' A objRight)          {              return true;          }            public static bool operator <(A objLeft' A objRight)          {              return true;          }            public static bool operator >(A objLeft' A objRight)          {              return true;          }      }  "'              GetCA1036CSharpResultAt(4' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1030Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1036Tests.cs,CA1036ClassNoEqualsOperatorCSharp,The following statement contains a magic number: VerifyCSharp(@"      using System;        public class A : IComparable      {              public override int GetHashCode()          {              return 1234;          }            public int CompareTo(object obj)          {              return 1;          }            public static bool operator ==(A objLeft' A objRight)          {              return true;          }            public static bool operator !=(A objLeft' A objRight)          {              return true;          }            public static bool operator <(A objLeft' A objRight)          {              return true;          }            public static bool operator >(A objLeft' A objRight)          {              return true;          }      }  "'              GetCA1036CSharpResultAt(4' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1030Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1036Tests.cs,CA1036ClassNoOpEqualsOperatorCSharp,The following statement contains a magic number: VerifyCSharp(@"      using System;        public class A : IComparable      {              public override int GetHashCode()          {              return 1234;          }            public int CompareTo(object obj)          {              return 1;          }            public override bool Equals(object obj)          {              return true;          }            public static bool operator <(A objLeft' A objRight)          {              return true;          }            public static bool operator >(A objLeft' A objRight)          {              return true;          }      }  "'              GetCA1036CSharpResultAt(4' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1030Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1036Tests.cs,CA1036ClassNoOpEqualsOperatorCSharp,The following statement contains a magic number: VerifyCSharp(@"      using System;        public class A : IComparable      {              public override int GetHashCode()          {              return 1234;          }            public int CompareTo(object obj)          {              return 1;          }            public override bool Equals(object obj)          {              return true;          }            public static bool operator <(A objLeft' A objRight)          {              return true;          }            public static bool operator >(A objLeft' A objRight)          {              return true;          }      }  "'              GetCA1036CSharpResultAt(4' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1030Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1036Tests.cs,CA1036StructNoOpLessThanOperatorCSharp,The following statement contains a magic number: VerifyCSharp(@"      using System;        public struct A : IComparable      {              public override int GetHashCode()          {              return 1234;          }            public int CompareTo(object obj)          {              return 1;          }            public override bool Equals(object obj)          {              return true;          }            public static bool operator ==(A objLeft' A objRight)          {              return true;          }            public static bool operator !=(A objLeft' A objRight)          {              return true;          }      }  "'              GetCA1036CSharpResultAt(4' 19));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1030Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1036Tests.cs,CA1036StructNoOpLessThanOperatorCSharp,The following statement contains a magic number: VerifyCSharp(@"      using System;        public struct A : IComparable      {              public override int GetHashCode()          {              return 1234;          }            public int CompareTo(object obj)          {              return 1;          }            public override bool Equals(object obj)          {              return true;          }            public static bool operator ==(A objLeft' A objRight)          {              return true;          }            public static bool operator !=(A objLeft' A objRight)          {              return true;          }      }  "'              GetCA1036CSharpResultAt(4' 19));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1030Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1036Tests.cs,CA1036StructWrongEqualsBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Structure A : Implements IComparable        Public Function Overrides GetHashCode() As Integer          Return 1234      End Function        Public Function CompareTo(obj As Object) As Integer          Return 1      End Function        Public Shadows Property Equals        Public Shared Operator =(objLeft As A' objRight As A) As Boolean          Return True      End Operator        Public Shared Operator <>(objLeft As A' objRight As A) As Boolean          Return True      End Operator        Public Shared Operator <(objLeft As A' objRight As A) As Boolean          Return True      End Operator        Public Shared Operator >(objLeft As A' objRight As A) As Boolean          Return True      End Operator    End Class  "'              GetCA1036BasicResultAt(4' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1030Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1036Tests.cs,CA1036StructWrongEqualsBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Structure A : Implements IComparable        Public Function Overrides GetHashCode() As Integer          Return 1234      End Function        Public Function CompareTo(obj As Object) As Integer          Return 1      End Function        Public Shadows Property Equals        Public Shared Operator =(objLeft As A' objRight As A) As Boolean          Return True      End Operator        Public Shared Operator <>(objLeft As A' objRight As A) As Boolean          Return True      End Operator        Public Shared Operator <(objLeft As A' objRight As A) As Boolean          Return True      End Operator        Public Shared Operator >(objLeft As A' objRight As A) As Boolean          Return True      End Operator    End Class  "'              GetCA1036BasicResultAt(4' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1030Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1036Tests.cs,CA1036ClassNoEqualsOperatorBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Class A : Implements IComparable        Public Function Overrides GetHashCode() As Integer          Return 1234      End Function        Public Function CompareTo(obj As Object) As Integer          Return 1      End Function        Public Shared Operator =(objLeft As A' objRight As A) As Boolean          Return True      End Operator        Public Shared Operator <>(objLeft As A' objRight As A) As Boolean          Return True      End Operator        Public Shared Operator <(objLeft As A' objRight As A) As Boolean          Return True      End Operator        Public Shared Operator >(objLeft As A' objRight As A) As Boolean          Return True      End Operator    End Class  "'              GetCA1036BasicResultAt(4' 14));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1030Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1036Tests.cs,CA1036ClassNoEqualsOperatorBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Class A : Implements IComparable        Public Function Overrides GetHashCode() As Integer          Return 1234      End Function        Public Function CompareTo(obj As Object) As Integer          Return 1      End Function        Public Shared Operator =(objLeft As A' objRight As A) As Boolean          Return True      End Operator        Public Shared Operator <>(objLeft As A' objRight As A) As Boolean          Return True      End Operator        Public Shared Operator <(objLeft As A' objRight As A) As Boolean          Return True      End Operator        Public Shared Operator >(objLeft As A' objRight As A) As Boolean          Return True      End Operator    End Class  "'              GetCA1036BasicResultAt(4' 14));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1030Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1036Tests.cs,CA1036ClassNoOpEqualsOperatorBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Class A : Implements IComparable        Public Function Overrides GetHashCode() As Integer          Return 1234      End Function        Public Function CompareTo(obj As Object) As Integer          Return 1      End Function        Public Overloads Overrides Function Equals(obj As Object) As Boolean          Return True      End Function        Public Shared Operator <(objLeft As A' objRight As A) As Boolean          Return True      End Operator        Public Shared Operator >(objLeft As A' objRight As A) As Boolean          Return True      End Operator    End Class  "'              GetCA1036BasicResultAt(4' 14));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1030Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1036Tests.cs,CA1036ClassNoOpEqualsOperatorBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Class A : Implements IComparable        Public Function Overrides GetHashCode() As Integer          Return 1234      End Function        Public Function CompareTo(obj As Object) As Integer          Return 1      End Function        Public Overloads Overrides Function Equals(obj As Object) As Boolean          Return True      End Function        Public Shared Operator <(objLeft As A' objRight As A) As Boolean          Return True      End Operator        Public Shared Operator >(objLeft As A' objRight As A) As Boolean          Return True      End Operator    End Class  "'              GetCA1036BasicResultAt(4' 14));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1030Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1036Tests.cs,CA1036ClassNoOpLessThanOperatorBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Structure A : Implements IComparable        Public Function Overrides GetHashCode() As Integer          Return 1234      End Function        Public Function CompareTo(obj As Object) As Integer          Return 1      End Function        Public Overloads Overrides Function Equals(obj As Object) As Boolean          Return True      End Function        Public Shared Operator =(objLeft As A' objRight As A) As Boolean          Return True      End Operator        Public Shared Operator <>(objLeft As A' objRight As A) As Boolean          Return True      End Operator    End Class  "'              GetCA1036BasicResultAt(4' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA1030Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1036Tests.cs,CA1036ClassNoOpLessThanOperatorBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Structure A : Implements IComparable        Public Function Overrides GetHashCode() As Integer          Return 1234      End Function        Public Function CompareTo(obj As Object) As Integer          Return 1      End Function        Public Overloads Overrides Function Equals(obj As Object) As Boolean          Return True      End Function        Public Shared Operator =(objLeft As A' objRight As A) As Boolean          Return True      End Operator        Public Shared Operator <>(objLeft As A' objRight As A) As Boolean          Return True      End Operator    End Class  "'              GetCA1036BasicResultAt(4' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2200Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2200Tests.cs,CA2200CSharpTestWithIllegalExceptionThrow,The following statement contains a magic number: VerifyCSharp(@"  using System;    class Program  {      void CatchAndRethrowExplicitly()      {          try          {              ThrowException();          }          catch (ArithmeticException e)          {              throw e;          }      }        void ThrowException()      {          throw new ArithmeticException();      }  }"'             GetCA2200CSharpResultAt(14' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2200Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2200Tests.cs,CA2200CSharpTestWithIllegalExceptionThrow,The following statement contains a magic number: VerifyCSharp(@"  using System;    class Program  {      void CatchAndRethrowExplicitly()      {          try          {              ThrowException();          }          catch (ArithmeticException e)          {              throw e;          }      }        void ThrowException()      {          throw new ArithmeticException();      }  }"'             GetCA2200CSharpResultAt(14' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2200Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2200Tests.cs,CA2200CSharpTestWithIllegalExceptionThrowMultiple,The following statement contains a magic number: VerifyCSharp(@"  using System;    class Program  {      void CatchAndRethrowExplicitly()      {          try          {              ThrowException();          }          catch (ArithmeticException e)          {              throw e;          }          catch (Exception e)          {              throw e;          }      }        void ThrowException()      {          throw new ArithmeticException();      }  }"'             GetCA2200CSharpResultAt(14' 13)'             GetCA2200CSharpResultAt(18' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2200Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2200Tests.cs,CA2200CSharpTestWithIllegalExceptionThrowMultiple,The following statement contains a magic number: VerifyCSharp(@"  using System;    class Program  {      void CatchAndRethrowExplicitly()      {          try          {              ThrowException();          }          catch (ArithmeticException e)          {              throw e;          }          catch (Exception e)          {              throw e;          }      }        void ThrowException()      {          throw new ArithmeticException();      }  }"'             GetCA2200CSharpResultAt(14' 13)'             GetCA2200CSharpResultAt(18' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2200Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2200Tests.cs,CA2200CSharpTestWithIllegalExceptionThrowMultiple,The following statement contains a magic number: VerifyCSharp(@"  using System;    class Program  {      void CatchAndRethrowExplicitly()      {          try          {              ThrowException();          }          catch (ArithmeticException e)          {              throw e;          }          catch (Exception e)          {              throw e;          }      }        void ThrowException()      {          throw new ArithmeticException();      }  }"'             GetCA2200CSharpResultAt(14' 13)'             GetCA2200CSharpResultAt(18' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2200Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2200Tests.cs,CA2200CSharpTestWithIllegalExceptionThrowMultiple,The following statement contains a magic number: VerifyCSharp(@"  using System;    class Program  {      void CatchAndRethrowExplicitly()      {          try          {              ThrowException();          }          catch (ArithmeticException e)          {              throw e;          }          catch (Exception e)          {              throw e;          }      }        void ThrowException()      {          throw new ArithmeticException();      }  }"'             GetCA2200CSharpResultAt(14' 13)'             GetCA2200CSharpResultAt(18' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2200Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2200Tests.cs,CA2200CSharpTestWithIllegalExceptionThrowNested,The following statement contains a magic number: VerifyCSharp(@"  using System;    class Program  {      void CatchAndRethrowExplicitly()      {          try          {              throw new ArithmeticException();          }          catch (ArithmeticException e)          {              try              {                  throw new ArithmeticException();              }              catch (ArithmeticException i)              {                  throw e;              }          }      }  }"'             GetCA2200CSharpResultAt(20' 17));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2200Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2200Tests.cs,CA2200CSharpTestWithIllegalExceptionThrowNested,The following statement contains a magic number: VerifyCSharp(@"  using System;    class Program  {      void CatchAndRethrowExplicitly()      {          try          {              throw new ArithmeticException();          }          catch (ArithmeticException e)          {              try              {                  throw new ArithmeticException();              }              catch (ArithmeticException i)              {                  throw e;              }          }      }  }"'             GetCA2200CSharpResultAt(20' 17));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2200Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2200Tests.cs,CA2200VisualBasicTestWithIllegalExceptionThrow,The following statement contains a magic number: VerifyBasic(@"  Imports System  Class Program      Sub CatchAndRethrowExplicitly()            Try              Throw New ArithmeticException()          Catch e As ArithmeticException              Throw e          End Try      End Sub  End Class"'             GetCA2200BasicResultAt(9' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2200Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2200Tests.cs,CA2200VisualBasicTestWithIllegalExceptionThrow,The following statement contains a magic number: VerifyBasic(@"  Imports System  Class Program      Sub CatchAndRethrowExplicitly()            Try              Throw New ArithmeticException()          Catch e As ArithmeticException              Throw e          End Try      End Sub  End Class"'             GetCA2200BasicResultAt(9' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2200Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2200Tests.cs,CA2200VisualBasicTestWithIllegalExceptionThrowMultiple,The following statement contains a magic number: VerifyBasic(@"  Imports System  Class Program      Sub CatchAndRethrowExplicitly()            Try              Throw New ArithmeticException()          Catch e As ArithmeticException              Throw e          Catch e As Exception              Throw e          End Try      End Sub  End Class"'             GetCA2200BasicResultAt(9' 13)'             GetCA2200BasicResultAt(11' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2200Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2200Tests.cs,CA2200VisualBasicTestWithIllegalExceptionThrowMultiple,The following statement contains a magic number: VerifyBasic(@"  Imports System  Class Program      Sub CatchAndRethrowExplicitly()            Try              Throw New ArithmeticException()          Catch e As ArithmeticException              Throw e          Catch e As Exception              Throw e          End Try      End Sub  End Class"'             GetCA2200BasicResultAt(9' 13)'             GetCA2200BasicResultAt(11' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2200Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2200Tests.cs,CA2200VisualBasicTestWithIllegalExceptionThrowMultiple,The following statement contains a magic number: VerifyBasic(@"  Imports System  Class Program      Sub CatchAndRethrowExplicitly()            Try              Throw New ArithmeticException()          Catch e As ArithmeticException              Throw e          Catch e As Exception              Throw e          End Try      End Sub  End Class"'             GetCA2200BasicResultAt(9' 13)'             GetCA2200BasicResultAt(11' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2200Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2200Tests.cs,CA2200VisualBasicTestWithIllegalExceptionThrowMultiple,The following statement contains a magic number: VerifyBasic(@"  Imports System  Class Program      Sub CatchAndRethrowExplicitly()            Try              Throw New ArithmeticException()          Catch e As ArithmeticException              Throw e          Catch e As Exception              Throw e          End Try      End Sub  End Class"'             GetCA2200BasicResultAt(9' 13)'             GetCA2200BasicResultAt(11' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2200Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2200Tests.cs,CA2200VisualBasicTestWithIllegalExceptionThrowMultipleWithScope,The following statement contains a magic number: VerifyBasic(@"  Imports System  Class Program      Sub CatchAndRethrowExplicitly()            Try              Throw New ArithmeticException()          Catch e As ArithmeticException              Throw e          [|Catch e As Exception              Throw e          End Try|]      End Sub  End Class"'             GetCA2200BasicResultAt(11' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2200Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2200Tests.cs,CA2200VisualBasicTestWithIllegalExceptionThrowMultipleWithScope,The following statement contains a magic number: VerifyBasic(@"  Imports System  Class Program      Sub CatchAndRethrowExplicitly()            Try              Throw New ArithmeticException()          Catch e As ArithmeticException              Throw e          [|Catch e As Exception              Throw e          End Try|]      End Sub  End Class"'             GetCA2200BasicResultAt(11' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2200Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2200Tests.cs,CA2200VisualBasicTestWithIllegalExceptionThrowNested,The following statement contains a magic number: VerifyBasic(@"  Imports System  Class Program      Sub CatchAndRethrowExplicitly()            Try              Throw New ArithmeticException()          Catch e As ArithmeticException              Try                  Throw New ArithmeticException()              Catch ex As Exception                  Throw e              End Try          End Try      End Sub  End Class"'             GetCA2200BasicResultAt(12' 17));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2200Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2200Tests.cs,CA2200VisualBasicTestWithIllegalExceptionThrowNested,The following statement contains a magic number: VerifyBasic(@"  Imports System  Class Program      Sub CatchAndRethrowExplicitly()            Try              Throw New ArithmeticException()          Catch e As ArithmeticException              Try                  Throw New ArithmeticException()              Catch ex As Exception                  Throw e              End Try          End Try      End Sub  End Class"'             GetCA2200BasicResultAt(12' 17));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2213Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2213Tests.cs,CA2213CSharpTestDisposableFieldsShouldBeDisposed,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class A : IDisposable  {      public void Dispose()      {      }  }    public class B : IDisposable  {      A a = new A();        public void Dispose()      {      }  }  "'              GetCA2213CSharpResultAt(13' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2213Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2213Tests.cs,CA2213CSharpTestDisposableFieldsShouldBeDisposed,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class A : IDisposable  {      public void Dispose()      {      }  }    public class B : IDisposable  {      A a = new A();        public void Dispose()      {      }  }  "'              GetCA2213CSharpResultAt(13' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2213Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2213Tests.cs,CA2213CSharpTestInnerClassHasNotDisposedDisposableFields,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class A : IDisposable  {      public void Dispose()      {      }  }    public class B : IDisposable  {      A a = new A();        public void Dispose()      {          a.Dispose();      }        public class Ba : IDisposable      {          A a = new A();            public void Dispose()          {          }      }  }  "'              GetCA2213CSharpResultAt(22' 11));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2213Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2213Tests.cs,CA2213CSharpTestInnerClassHasNotDisposedDisposableFields,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class A : IDisposable  {      public void Dispose()      {      }  }    public class B : IDisposable  {      A a = new A();        public void Dispose()      {          a.Dispose();      }        public class Ba : IDisposable      {          A a = new A();            public void Dispose()          {          }      }  }  "'              GetCA2213CSharpResultAt(22' 11));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2213Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2213Tests.cs,CA2213CSharpTestUsingDisposeDisposableFields,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class A : IDisposable  {      public void Dispose()      {      }  }    public class B : IDisposable  {      A a = new A();        public void Dispose()      {          // B.a is disposed here          using (a)          {          }      }  }    public class C : IDisposable  {      A a = new A();        public void Dispose()      {          A a = new A();          // C.a is not disposed          using (a)          {          }      }  }    public class D : IDisposable  {      A a = new A();        public void Dispose()      {          // D.a is not disposed          using (A a = new A())          {          }      }  }  "'              GetCA2213CSharpResultAt(26' 7)'              GetCA2213CSharpResultAt(40' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2213Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2213Tests.cs,CA2213CSharpTestUsingDisposeDisposableFields,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class A : IDisposable  {      public void Dispose()      {      }  }    public class B : IDisposable  {      A a = new A();        public void Dispose()      {          // B.a is disposed here          using (a)          {          }      }  }    public class C : IDisposable  {      A a = new A();        public void Dispose()      {          A a = new A();          // C.a is not disposed          using (a)          {          }      }  }    public class D : IDisposable  {      A a = new A();        public void Dispose()      {          // D.a is not disposed          using (A a = new A())          {          }      }  }  "'              GetCA2213CSharpResultAt(26' 7)'              GetCA2213CSharpResultAt(40' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2213Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2213Tests.cs,CA2213CSharpTestUsingDisposeDisposableFields,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class A : IDisposable  {      public void Dispose()      {      }  }    public class B : IDisposable  {      A a = new A();        public void Dispose()      {          // B.a is disposed here          using (a)          {          }      }  }    public class C : IDisposable  {      A a = new A();        public void Dispose()      {          A a = new A();          // C.a is not disposed          using (a)          {          }      }  }    public class D : IDisposable  {      A a = new A();        public void Dispose()      {          // D.a is not disposed          using (A a = new A())          {          }      }  }  "'              GetCA2213CSharpResultAt(26' 7)'              GetCA2213CSharpResultAt(40' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2213Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2213Tests.cs,CA2213CSharpTestUsingDisposeDisposableFields,The following statement contains a magic number: VerifyCSharp(@"  using System;    public class A : IDisposable  {      public void Dispose()      {      }  }    public class B : IDisposable  {      A a = new A();        public void Dispose()      {          // B.a is disposed here          using (a)          {          }      }  }    public class C : IDisposable  {      A a = new A();        public void Dispose()      {          A a = new A();          // C.a is not disposed          using (a)          {          }      }  }    public class D : IDisposable  {      A a = new A();        public void Dispose()      {          // D.a is not disposed          using (A a = new A())          {          }      }  }  "'              GetCA2213CSharpResultAt(26' 7)'              GetCA2213CSharpResultAt(40' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2213Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2213Tests.cs,CA2213BasicTestDisposableFieldsIsNotDisposed,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.IO    ' This class violates the rule.   Public Class A      Implements IDisposable        Public Overloads Sub Dispose() Implements IDisposable.Dispose      End Sub  End Class    Public Class B      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose      End Sub 'Dispose  End Class  "'              GetCA2213BasicResultAt(16' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2213Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2213Tests.cs,CA2213BasicTestDisposableFieldsIsNotDisposed,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.IO    ' This class violates the rule.   Public Class A      Implements IDisposable        Public Overloads Sub Dispose() Implements IDisposable.Dispose      End Sub  End Class    Public Class B      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose      End Sub 'Dispose  End Class  "'              GetCA2213BasicResultAt(16' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2213Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2213Tests.cs,CA2213BasicTestDisposableFieldsIsNotDisposedInMyDispose,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.IO    ' This class violates the rule.   Public Class A      Implements IDisposable        Public Overloads Sub Dispose() Implements IDisposable.Dispose      End Sub  End Class    Public Class B      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub MyDispose() Implements IDisposable.Dispose      End Sub 'Dispose  End Class  "'              GetCA2213BasicResultAt(16' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2213Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2213Tests.cs,CA2213BasicTestDisposableFieldsIsNotDisposedInMyDispose,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.IO    ' This class violates the rule.   Public Class A      Implements IDisposable        Public Overloads Sub Dispose() Implements IDisposable.Dispose      End Sub  End Class    Public Class B      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub MyDispose() Implements IDisposable.Dispose      End Sub 'Dispose  End Class  "'              GetCA2213BasicResultAt(16' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2213Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2213Tests.cs,CA2213BasicTestInnerClassHasNotDisposedDisposableFields,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.IO    ' This class violates the rule.   Public Class A      Implements IDisposable        Public Overloads Sub Dispose() Implements IDisposable.Dispose      End Sub  End Class    Public Class B      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose          a.Dispose()      End Sub 'Dispose        Public Class Ba          Implements IDisposable            Dim a As A = New A()            Public Overloads Sub Dispose() Implements IDisposable.Dispose          End Sub 'Dispose      End Class  End Class  "'              GetCA2213BasicResultAt(25' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2213Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2213Tests.cs,CA2213BasicTestInnerClassHasNotDisposedDisposableFields,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.IO    ' This class violates the rule.   Public Class A      Implements IDisposable        Public Overloads Sub Dispose() Implements IDisposable.Dispose      End Sub  End Class    Public Class B      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose          a.Dispose()      End Sub 'Dispose        Public Class Ba          Implements IDisposable            Dim a As A = New A()            Public Overloads Sub Dispose() Implements IDisposable.Dispose          End Sub 'Dispose      End Class  End Class  "'              GetCA2213BasicResultAt(25' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2213Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2213Tests.cs,CA2213BasicTestUsingDisposeDisposableFields,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.IO    ' This class violates the rule.   Public Class A      Implements IDisposable        Public Overloads Sub Dispose() Implements IDisposable.Dispose      End Sub  End Class    Public Class B      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose          ' B.a is disposed here          Using a            End Using      End Sub 'Dispose  End Class    Public Class C      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose          ' C.a is not disposed here          Using a As A = New A()            End Using      End Sub 'Dispose  End Class    Public Class D      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose          ' D.a is not disposed here          Dim a As A = New A()          Using a            End Using      End Sub 'Dispose  End Class  "'              GetCA2213BasicResultAt(29' 9)'              GetCA2213BasicResultAt(42' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2213Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2213Tests.cs,CA2213BasicTestUsingDisposeDisposableFields,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.IO    ' This class violates the rule.   Public Class A      Implements IDisposable        Public Overloads Sub Dispose() Implements IDisposable.Dispose      End Sub  End Class    Public Class B      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose          ' B.a is disposed here          Using a            End Using      End Sub 'Dispose  End Class    Public Class C      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose          ' C.a is not disposed here          Using a As A = New A()            End Using      End Sub 'Dispose  End Class    Public Class D      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose          ' D.a is not disposed here          Dim a As A = New A()          Using a            End Using      End Sub 'Dispose  End Class  "'              GetCA2213BasicResultAt(29' 9)'              GetCA2213BasicResultAt(42' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2213Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2213Tests.cs,CA2213BasicTestUsingDisposeDisposableFields,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.IO    ' This class violates the rule.   Public Class A      Implements IDisposable        Public Overloads Sub Dispose() Implements IDisposable.Dispose      End Sub  End Class    Public Class B      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose          ' B.a is disposed here          Using a            End Using      End Sub 'Dispose  End Class    Public Class C      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose          ' C.a is not disposed here          Using a As A = New A()            End Using      End Sub 'Dispose  End Class    Public Class D      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose          ' D.a is not disposed here          Dim a As A = New A()          Using a            End Using      End Sub 'Dispose  End Class  "'              GetCA2213BasicResultAt(29' 9)'              GetCA2213BasicResultAt(42' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2213Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2213Tests.cs,CA2213BasicTestUsingDisposeDisposableFields,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.IO    ' This class violates the rule.   Public Class A      Implements IDisposable        Public Overloads Sub Dispose() Implements IDisposable.Dispose      End Sub  End Class    Public Class B      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose          ' B.a is disposed here          Using a            End Using      End Sub 'Dispose  End Class    Public Class C      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose          ' C.a is not disposed here          Using a As A = New A()            End Using      End Sub 'Dispose  End Class    Public Class D      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose          ' D.a is not disposed here          Dim a As A = New A()          Using a            End Using      End Sub 'Dispose  End Class  "'              GetCA2213BasicResultAt(29' 9)'              GetCA2213BasicResultAt(42' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2213Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2213Tests.cs,CA2213BasicTestUsingDisposeDisposableFieldsWithScope,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.IO    ' This class violates the rule.   Public Class A      Implements IDisposable        Public Overloads Sub Dispose() Implements IDisposable.Dispose      End Sub  End Class    Public Class B      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose          ' B.a is disposed here          Using a            End Using      End Sub 'Dispose  End Class    Public Class C      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose          ' C.a is not disposed here          Using a As A = New A()            End Using      End Sub 'Dispose  End Class    [|Public Class D      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose          ' D.a is not disposed here          Dim a As A = New A()          Using a            End Using      End Sub 'Dispose  End Class|]  "'              GetCA2213BasicResultAt(42' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2213Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2213Tests.cs,CA2213BasicTestUsingDisposeDisposableFieldsWithScope,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.IO    ' This class violates the rule.   Public Class A      Implements IDisposable        Public Overloads Sub Dispose() Implements IDisposable.Dispose      End Sub  End Class    Public Class B      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose          ' B.a is disposed here          Using a            End Using      End Sub 'Dispose  End Class    Public Class C      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose          ' C.a is not disposed here          Using a As A = New A()            End Using      End Sub 'Dispose  End Class    [|Public Class D      Implements IDisposable        Dim a As A = New A()        Public Overloads Sub Dispose() Implements IDisposable.Dispose          ' D.a is not disposed here          Dim a As A = New A()          Using a            End Using      End Sub 'Dispose  End Class|]  "'              GetCA2213BasicResultAt(42' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214VirtualMethodCSharp,The following statement contains a magic number: VerifyCSharp(@"  class C  {      C()      {          Foo();      }        protected virtual Foo() { }  }  "'              GetCA2214CSharpResultAt(6' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214VirtualMethodCSharp,The following statement contains a magic number: VerifyCSharp(@"  class C  {      C()      {          Foo();      }        protected virtual Foo() { }  }  "'              GetCA2214CSharpResultAt(6' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214VirtualMethodBasic,The following statement contains a magic number: VerifyBasic(@"  Class C      Public Sub New()          Foo()      End Sub      Overridable Sub Foo()      End Sub  End Class  "'              GetCA2214BasicResultAt(4' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214VirtualMethodBasic,The following statement contains a magic number: VerifyBasic(@"  Class C      Public Sub New()          Foo()      End Sub      Overridable Sub Foo()      End Sub  End Class  "'              GetCA2214BasicResultAt(4' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214AbstractMethodCSharp,The following statement contains a magic number: VerifyCSharp(@"  class C  {      C()      {          Foo();      }        protected abstract Foo();  }  "'              GetCA2214CSharpResultAt(6' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214AbstractMethodCSharp,The following statement contains a magic number: VerifyCSharp(@"  class C  {      C()      {          Foo();      }        protected abstract Foo();  }  "'              GetCA2214CSharpResultAt(6' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214AbstractMethodBasic,The following statement contains a magic number: VerifyBasic(@"  Class C      Public Sub New()          Foo()      End Sub      MustOverride Sub Foo()  End Class  "'              GetCA2214BasicResultAt(4' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214AbstractMethodBasic,The following statement contains a magic number: VerifyBasic(@"  Class C      Public Sub New()          Foo()      End Sub      MustOverride Sub Foo()  End Class  "'              GetCA2214BasicResultAt(4' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214MultipleInstancesCSharp,The following statement contains a magic number: VerifyCSharp(@"  class C  {      C()      {          Foo();          Bar();      }        protected abstract Foo();      protected virtual Bar() { }  }  "'              GetCA2214CSharpResultAt(6' 9)'              GetCA2214CSharpResultAt(7' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214MultipleInstancesCSharp,The following statement contains a magic number: VerifyCSharp(@"  class C  {      C()      {          Foo();          Bar();      }        protected abstract Foo();      protected virtual Bar() { }  }  "'              GetCA2214CSharpResultAt(6' 9)'              GetCA2214CSharpResultAt(7' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214MultipleInstancesCSharp,The following statement contains a magic number: VerifyCSharp(@"  class C  {      C()      {          Foo();          Bar();      }        protected abstract Foo();      protected virtual Bar() { }  }  "'              GetCA2214CSharpResultAt(6' 9)'              GetCA2214CSharpResultAt(7' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214MultipleInstancesCSharp,The following statement contains a magic number: VerifyCSharp(@"  class C  {      C()      {          Foo();          Bar();      }        protected abstract Foo();      protected virtual Bar() { }  }  "'              GetCA2214CSharpResultAt(6' 9)'              GetCA2214CSharpResultAt(7' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214MultipleInstancesBasic,The following statement contains a magic number: VerifyBasic(@"  Class C      Public Sub New()          Foo()          Bar()      End Sub      MustOverride Sub Foo()      Overridable Sub Bar()      End Sub  End Class  "'             GetCA2214BasicResultAt(4' 9)'             GetCA2214BasicResultAt(5' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214MultipleInstancesBasic,The following statement contains a magic number: VerifyBasic(@"  Class C      Public Sub New()          Foo()          Bar()      End Sub      MustOverride Sub Foo()      Overridable Sub Bar()      End Sub  End Class  "'             GetCA2214BasicResultAt(4' 9)'             GetCA2214BasicResultAt(5' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214MultipleInstancesBasic,The following statement contains a magic number: VerifyBasic(@"  Class C      Public Sub New()          Foo()          Bar()      End Sub      MustOverride Sub Foo()      Overridable Sub Bar()      End Sub  End Class  "'             GetCA2214BasicResultAt(4' 9)'             GetCA2214BasicResultAt(5' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214MultipleInstancesBasic,The following statement contains a magic number: VerifyBasic(@"  Class C      Public Sub New()          Foo()          Bar()      End Sub      MustOverride Sub Foo()      Overridable Sub Bar()      End Sub  End Class  "'             GetCA2214BasicResultAt(4' 9)'             GetCA2214BasicResultAt(5' 9));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214NotTopLevelCSharp,The following statement contains a magic number: VerifyCSharp(@"  class C  {      C()      {          if (true)          {              Foo();          }            if (false)          {              Foo(); // also check unreachable code          }      }        protected abstract Foo();  }  "'              GetCA2214CSharpResultAt(8' 13)'              GetCA2214CSharpResultAt(13' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214NotTopLevelCSharp,The following statement contains a magic number: VerifyCSharp(@"  class C  {      C()      {          if (true)          {              Foo();          }            if (false)          {              Foo(); // also check unreachable code          }      }        protected abstract Foo();  }  "'              GetCA2214CSharpResultAt(8' 13)'              GetCA2214CSharpResultAt(13' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214NotTopLevelCSharp,The following statement contains a magic number: VerifyCSharp(@"  class C  {      C()      {          if (true)          {              Foo();          }            if (false)          {              Foo(); // also check unreachable code          }      }        protected abstract Foo();  }  "'              GetCA2214CSharpResultAt(8' 13)'              GetCA2214CSharpResultAt(13' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214NotTopLevelCSharp,The following statement contains a magic number: VerifyCSharp(@"  class C  {      C()      {          if (true)          {              Foo();          }            if (false)          {              Foo(); // also check unreachable code          }      }        protected abstract Foo();  }  "'              GetCA2214CSharpResultAt(8' 13)'              GetCA2214CSharpResultAt(13' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214NotTopLevelBasic,The following statement contains a magic number: VerifyBasic(@"  Class C      Public Sub New()          If True Then              Foo()          End If            If False Then              Foo() ' also check unreachable code          End If      End Sub      MustOverride Sub Foo()  End Class  "'              GetCA2214BasicResultAt(5' 13)'              GetCA2214BasicResultAt(9' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214NotTopLevelBasic,The following statement contains a magic number: VerifyBasic(@"  Class C      Public Sub New()          If True Then              Foo()          End If            If False Then              Foo() ' also check unreachable code          End If      End Sub      MustOverride Sub Foo()  End Class  "'              GetCA2214BasicResultAt(5' 13)'              GetCA2214BasicResultAt(9' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214NotTopLevelBasic,The following statement contains a magic number: VerifyBasic(@"  Class C      Public Sub New()          If True Then              Foo()          End If            If False Then              Foo() ' also check unreachable code          End If      End Sub      MustOverride Sub Foo()  End Class  "'              GetCA2214BasicResultAt(5' 13)'              GetCA2214BasicResultAt(9' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2214Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2214Tests.cs,CA2214NotTopLevelBasic,The following statement contains a magic number: VerifyBasic(@"  Class C      Public Sub New()          If True Then              Foo()          End If            If False Then              Foo() ' also check unreachable code          End If      End Sub      MustOverride Sub Foo()  End Class  "'              GetCA2214BasicResultAt(5' 13)'              GetCA2214BasicResultAt(9' 13));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229NoConstructor,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  using System.Runtime.Serialization;                  [Serializable]                  public class CA2229NoConstructor : ISerializable                  {                      public void GetObjectData(SerializationInfo info' StreamingContext context)                      {                          throw new NotImplementedException();                      }                  }"'                  GetCA2229CSharpResultAt(5' 30' "CA2229NoConstructor"' CA2229Message));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229NoConstructor,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  using System.Runtime.Serialization;                  [Serializable]                  public class CA2229NoConstructor : ISerializable                  {                      public void GetObjectData(SerializationInfo info' StreamingContext context)                      {                          throw new NotImplementedException();                      }                  }"'                  GetCA2229CSharpResultAt(5' 30' "CA2229NoConstructor"' CA2229Message));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229NoConstructor,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Imports System.Runtime.Serialization                  <Serializable>                  Public Class CA2229NoConstructor                      Implements ISerializable                                        Public Sub GetObjectData(info as SerializationInfo' context as StreamingContext)                          throw new NotImplementedException()                      End Sub                  End Class"'                  GetCA2229BasicResultAt(5' 30' "CA2229NoConstructor"' CA2229Message));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229NoConstructor,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Imports System.Runtime.Serialization                  <Serializable>                  Public Class CA2229NoConstructor                      Implements ISerializable                                        Public Sub GetObjectData(info as SerializationInfo' context as StreamingContext)                          throw new NotImplementedException()                      End Sub                  End Class"'                  GetCA2229BasicResultAt(5' 30' "CA2229NoConstructor"' CA2229Message));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229HasConstructorWrongAccessibility,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  using System.Runtime.Serialization;                  [Serializable]                  public class CA2229HasConstructorWrongAccessibility : ISerializable                  {                      public CA2229HasConstructorWrongAccessibility(SerializationInfo info' StreamingContext context) { }                        public void GetObjectData(SerializationInfo info' StreamingContext context)                      {                          throw new NotImplementedException();                      }                  }"'                  GetCA2229CSharpResultAt(7' 28' "CA2229HasConstructorWrongAccessibility"' CA2229MessageUnsealed));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229HasConstructorWrongAccessibility,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  using System.Runtime.Serialization;                  [Serializable]                  public class CA2229HasConstructorWrongAccessibility : ISerializable                  {                      public CA2229HasConstructorWrongAccessibility(SerializationInfo info' StreamingContext context) { }                        public void GetObjectData(SerializationInfo info' StreamingContext context)                      {                          throw new NotImplementedException();                      }                  }"'                  GetCA2229CSharpResultAt(7' 28' "CA2229HasConstructorWrongAccessibility"' CA2229MessageUnsealed));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229HasConstructorWrongAccessibility,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Imports System.Runtime.Serialization                  <Serializable>                  Public Class CA2229HasConstructorWrongAccessibility                      Implements ISerializable                                        Public Sub New(info As SerializationInfo' context As StreamingContext)                      End Sub                        Public Sub GetObjectData(info as SerializationInfo' context as StreamingContext)                          throw new NotImplementedException()                      End Sub                  End Class"'                  GetCA2229BasicResultAt(8' 32' "CA2229HasConstructorWrongAccessibility"' CA2229MessageUnsealed));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229HasConstructorWrongAccessibility,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Imports System.Runtime.Serialization                  <Serializable>                  Public Class CA2229HasConstructorWrongAccessibility                      Implements ISerializable                                        Public Sub New(info As SerializationInfo' context As StreamingContext)                      End Sub                        Public Sub GetObjectData(info as SerializationInfo' context as StreamingContext)                          throw new NotImplementedException()                      End Sub                  End Class"'                  GetCA2229BasicResultAt(8' 32' "CA2229HasConstructorWrongAccessibility"' CA2229MessageUnsealed));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229HasConstructorWrongAccessibility1,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  using System.Runtime.Serialization;                  [Serializable]                  public class CA2229HasConstructorWrongAccessibility1 : ISerializable                  {                      internal CA2229HasConstructorWrongAccessibility1(SerializationInfo info' StreamingContext context) { }                        public void GetObjectData(SerializationInfo info' StreamingContext context)                      {                          throw new NotImplementedException();                      }                  }"'                  GetCA2229CSharpResultAt(7' 30' "CA2229HasConstructorWrongAccessibility1"' CA2229MessageUnsealed));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229HasConstructorWrongAccessibility1,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  using System.Runtime.Serialization;                  [Serializable]                  public class CA2229HasConstructorWrongAccessibility1 : ISerializable                  {                      internal CA2229HasConstructorWrongAccessibility1(SerializationInfo info' StreamingContext context) { }                        public void GetObjectData(SerializationInfo info' StreamingContext context)                      {                          throw new NotImplementedException();                      }                  }"'                  GetCA2229CSharpResultAt(7' 30' "CA2229HasConstructorWrongAccessibility1"' CA2229MessageUnsealed));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229HasConstructorWrongAccessibility1,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Imports System.Runtime.Serialization                  <Serializable>                  Public Class CA2229HasConstructorWrongAccessibility1                      Implements ISerializable                                        Friend Sub New(info As SerializationInfo' context As StreamingContext)                      End Sub                        Public Sub GetObjectData(info as SerializationInfo' context as StreamingContext)                          throw new NotImplementedException()                      End Sub                  End Class"'                  GetCA2229BasicResultAt(8' 32' "CA2229HasConstructorWrongAccessibility1"' CA2229MessageUnsealed));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229HasConstructorWrongAccessibility1,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Imports System.Runtime.Serialization                  <Serializable>                  Public Class CA2229HasConstructorWrongAccessibility1                      Implements ISerializable                                        Friend Sub New(info As SerializationInfo' context As StreamingContext)                      End Sub                        Public Sub GetObjectData(info as SerializationInfo' context as StreamingContext)                          throw new NotImplementedException()                      End Sub                  End Class"'                  GetCA2229BasicResultAt(8' 32' "CA2229HasConstructorWrongAccessibility1"' CA2229MessageUnsealed));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229HasConstructorWrongAccessibility2,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  using System.Runtime.Serialization;                  [Serializable]                  public sealed class CA2229HasConstructorWrongAccessibility2 : ISerializable                  {                      protected internal CA2229HasConstructorWrongAccessibility2(SerializationInfo info' StreamingContext context) { }                        public void GetObjectData(SerializationInfo info' StreamingContext context)                      {                          throw new NotImplementedException();                      }                  }"'                  GetCA2229CSharpResultAt(7' 40' "CA2229HasConstructorWrongAccessibility2"' CA2229MessageSealed));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229HasConstructorWrongAccessibility2,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  using System.Runtime.Serialization;                  [Serializable]                  public sealed class CA2229HasConstructorWrongAccessibility2 : ISerializable                  {                      protected internal CA2229HasConstructorWrongAccessibility2(SerializationInfo info' StreamingContext context) { }                        public void GetObjectData(SerializationInfo info' StreamingContext context)                      {                          throw new NotImplementedException();                      }                  }"'                  GetCA2229CSharpResultAt(7' 40' "CA2229HasConstructorWrongAccessibility2"' CA2229MessageSealed));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229HasConstructorWrongAccessibility2,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Imports System.Runtime.Serialization                  <Serializable>                  Public NotInheritable Class CA2229HasConstructorWrongAccessibility2                      Implements ISerializable                                        Protected Friend Sub New(info As SerializationInfo' context As StreamingContext)                      End Sub                        Public Sub GetObjectData(info as SerializationInfo' context as StreamingContext)                          throw new NotImplementedException()                      End Sub                  End Class"'                  GetCA2229BasicResultAt(8' 42' "CA2229HasConstructorWrongAccessibility2"' CA2229MessageSealed));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229HasConstructorWrongAccessibility2,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Imports System.Runtime.Serialization                  <Serializable>                  Public NotInheritable Class CA2229HasConstructorWrongAccessibility2                      Implements ISerializable                                        Protected Friend Sub New(info As SerializationInfo' context As StreamingContext)                      End Sub                        Public Sub GetObjectData(info as SerializationInfo' context as StreamingContext)                          throw new NotImplementedException()                      End Sub                  End Class"'                  GetCA2229BasicResultAt(8' 42' "CA2229HasConstructorWrongAccessibility2"' CA2229MessageSealed));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229HasConstructorWrongAccessibility3,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  using System.Runtime.Serialization;                  [Serializable]                  public class CA2229HasConstructorWrongAccessibility3 : ISerializable                  {                      protected internal CA2229HasConstructorWrongAccessibility3(SerializationInfo info' StreamingContext context) { }                        public void GetObjectData(SerializationInfo info' StreamingContext context)                      {                          throw new NotImplementedException();                      }                  }"'                  GetCA2229CSharpResultAt(7' 40' "CA2229HasConstructorWrongAccessibility3"' CA2229MessageUnsealed));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229HasConstructorWrongAccessibility3,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  using System.Runtime.Serialization;                  [Serializable]                  public class CA2229HasConstructorWrongAccessibility3 : ISerializable                  {                      protected internal CA2229HasConstructorWrongAccessibility3(SerializationInfo info' StreamingContext context) { }                        public void GetObjectData(SerializationInfo info' StreamingContext context)                      {                          throw new NotImplementedException();                      }                  }"'                  GetCA2229CSharpResultAt(7' 40' "CA2229HasConstructorWrongAccessibility3"' CA2229MessageUnsealed));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229HasConstructorWrongAccessibility3,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Imports System.Runtime.Serialization                  <Serializable>                  Public Class CA2229HasConstructorWrongAccessibility3                      Implements ISerializable                                        Protected Friend Sub New(info As SerializationInfo' context As StreamingContext)                      End Sub                        Public Sub GetObjectData(info as SerializationInfo' context as StreamingContext)                          throw new NotImplementedException()                      End Sub                  End Class"'                  GetCA2229BasicResultAt(8' 42' "CA2229HasConstructorWrongAccessibility3"' CA2229MessageUnsealed));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229HasConstructorWrongAccessibility3,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Imports System.Runtime.Serialization                  <Serializable>                  Public Class CA2229HasConstructorWrongAccessibility3                      Implements ISerializable                                        Protected Friend Sub New(info As SerializationInfo' context As StreamingContext)                      End Sub                        Public Sub GetObjectData(info as SerializationInfo' context as StreamingContext)                          throw new NotImplementedException()                      End Sub                  End Class"'                  GetCA2229BasicResultAt(8' 42' "CA2229HasConstructorWrongAccessibility3"' CA2229MessageUnsealed));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229HasConstructorWrongOrder,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  using System.Runtime.Serialization;                  [Serializable]                  public class CA2229HasConstructorWrongOrder : ISerializable                  {                      protected CA2229HasConstructorWrongOrder(StreamingContext context' SerializationInfo info) { }                        public void GetObjectData(SerializationInfo info' StreamingContext context)                      {                          throw new NotImplementedException();                      }                  }"'                  GetCA2229CSharpResultAt(5' 30' "CA2229HasConstructorWrongOrder"' CA2229Message));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229HasConstructorWrongOrder,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  using System.Runtime.Serialization;                  [Serializable]                  public class CA2229HasConstructorWrongOrder : ISerializable                  {                      protected CA2229HasConstructorWrongOrder(StreamingContext context' SerializationInfo info) { }                        public void GetObjectData(SerializationInfo info' StreamingContext context)                      {                          throw new NotImplementedException();                      }                  }"'                  GetCA2229CSharpResultAt(5' 30' "CA2229HasConstructorWrongOrder"' CA2229Message));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229HasConstructorWrongOrder,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Imports System.Runtime.Serialization                  <Serializable>                  Public Class CA2229HasConstructorWrongOrder                      Implements ISerializable                                        Protected Sub New(context As StreamingContext' info As SerializationInfo)                      End Sub                        Public Sub GetObjectData(info as SerializationInfo' context as StreamingContext)                          throw new NotImplementedException()                      End Sub                  End Class"'                  GetCA2229BasicResultAt(5' 30' "CA2229HasConstructorWrongOrder"' CA2229Message));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229HasConstructorWrongOrder,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Imports System.Runtime.Serialization                  <Serializable>                  Public Class CA2229HasConstructorWrongOrder                      Implements ISerializable                                        Protected Sub New(context As StreamingContext' info As SerializationInfo)                      End Sub                        Public Sub GetObjectData(info as SerializationInfo' context as StreamingContext)                          throw new NotImplementedException()                      End Sub                  End Class"'                  GetCA2229BasicResultAt(5' 30' "CA2229HasConstructorWrongOrder"' CA2229Message));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229SerializableProper,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  using System.Runtime.Serialization;                  [Serializable]                  public class CA2229SerializableProper : ISerializable                  {                      public void GetObjectData(SerializationInfo info' StreamingContext context)                      {                          throw new NotImplementedException();                      }                  }"'                  GetCA2229CSharpResultAt(5' 30' "CA2229SerializableProper"' CA2229Message));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229SerializableProper,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  using System.Runtime.Serialization;                  [Serializable]                  public class CA2229SerializableProper : ISerializable                  {                      public void GetObjectData(SerializationInfo info' StreamingContext context)                      {                          throw new NotImplementedException();                      }                  }"'                  GetCA2229CSharpResultAt(5' 30' "CA2229SerializableProper"' CA2229Message));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229SerializableProper,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Imports System.Runtime.Serialization                  <Serializable>                  Public Class CA2229SerializableProper                       Implements ISerializable                        Public Sub GetObjectData(info as SerializationInfo' context as StreamingContext)                          throw new NotImplementedException()                      End Sub                  End Class"'                  GetCA2229BasicResultAt(5' 30' "CA2229SerializableProper"' CA2229Message));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2229Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2229Tests.cs,CA2229SerializableProper,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Imports System.Runtime.Serialization                  <Serializable>                  Public Class CA2229SerializableProper                       Implements ISerializable                        Public Sub GetObjectData(info as SerializationInfo' context as StreamingContext)                          throw new NotImplementedException()                      End Sub                  End Class"'                  GetCA2229BasicResultAt(5' 30' "CA2229SerializableProper"' CA2229Message));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2231Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2231Tests.cs,CA2231NoEqualsOperatorCSharp,The following statement contains a magic number: VerifyCSharp(@"      using System;        public struct A      {          public override bool Equals(Object obj)          {              return true;          }      }  "'              GetCA2231CSharpResultAt(4' 19));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2231Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2231Tests.cs,CA2231NoEqualsOperatorCSharp,The following statement contains a magic number: VerifyCSharp(@"      using System;        public struct A      {          public override bool Equals(Object obj)          {              return true;          }      }  "'              GetCA2231CSharpResultAt(4' 19));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2231Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2231Tests.cs,CA2231CSharpInnerClassHasNoEqualsOperatorCSharp,The following statement contains a magic number: VerifyCSharp(@"      using System;        public struct A      {          public override bool Equals(Object obj)          {              return true;          }            public struct Aa          {              public override bool Equals(Object obj)              {                  return true;              }          }      }  "'              GetCA2231CSharpResultAt(4' 19)'              GetCA2231CSharpResultAt(11' 23));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2231Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2231Tests.cs,CA2231CSharpInnerClassHasNoEqualsOperatorCSharp,The following statement contains a magic number: VerifyCSharp(@"      using System;        public struct A      {          public override bool Equals(Object obj)          {              return true;          }            public struct Aa          {              public override bool Equals(Object obj)              {                  return true;              }          }      }  "'              GetCA2231CSharpResultAt(4' 19)'              GetCA2231CSharpResultAt(11' 23));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2231Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2231Tests.cs,CA2231CSharpInnerClassHasNoEqualsOperatorCSharp,The following statement contains a magic number: VerifyCSharp(@"      using System;        public struct A      {          public override bool Equals(Object obj)          {              return true;          }            public struct Aa          {              public override bool Equals(Object obj)              {                  return true;              }          }      }  "'              GetCA2231CSharpResultAt(4' 19)'              GetCA2231CSharpResultAt(11' 23));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2231Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2231Tests.cs,CA2231CSharpInnerClassHasNoEqualsOperatorCSharp,The following statement contains a magic number: VerifyCSharp(@"      using System;        public struct A      {          public override bool Equals(Object obj)          {              return true;          }            public struct Aa          {              public override bool Equals(Object obj)              {                  return true;              }          }      }  "'              GetCA2231CSharpResultAt(4' 19)'              GetCA2231CSharpResultAt(11' 23));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2231Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2231Tests.cs,CA2231NoEqualsOperatorBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Structure A      Public Overloads Overrides Function Equals(obj As Object) As Boolean          Return True      End Function  End Structure  "'              GetCA2231BasicResultAt(4' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2231Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2231Tests.cs,CA2231NoEqualsOperatorBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Structure A      Public Overloads Overrides Function Equals(obj As Object) As Boolean          Return True      End Function  End Structure  "'              GetCA2231BasicResultAt(4' 18));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2231Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2231Tests.cs,CA2231BasicInnerClassHasNoEqualsOperatorBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Structure A      Public Overloads Overrides Function Equals(obj As Object) As Boolean          Return True      End Function        Public Structure Aa          Public Overloads Overrides Function Equals(obj As Object) As Boolean              Return True          End Function      End Structure  End Structure  "'              GetCA2231BasicResultAt(4' 18)'              GetCA2231BasicResultAt(9' 22));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2231Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2231Tests.cs,CA2231BasicInnerClassHasNoEqualsOperatorBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Structure A      Public Overloads Overrides Function Equals(obj As Object) As Boolean          Return True      End Function        Public Structure Aa          Public Overloads Overrides Function Equals(obj As Object) As Boolean              Return True          End Function      End Structure  End Structure  "'              GetCA2231BasicResultAt(4' 18)'              GetCA2231BasicResultAt(9' 22));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2231Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2231Tests.cs,CA2231BasicInnerClassHasNoEqualsOperatorBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Structure A      Public Overloads Overrides Function Equals(obj As Object) As Boolean          Return True      End Function        Public Structure Aa          Public Overloads Overrides Function Equals(obj As Object) As Boolean              Return True          End Function      End Structure  End Structure  "'              GetCA2231BasicResultAt(4' 18)'              GetCA2231BasicResultAt(9' 22));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2231Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2231Tests.cs,CA2231BasicInnerClassHasNoEqualsOperatorBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Public Structure A      Public Overloads Overrides Function Equals(obj As Object) As Boolean          Return True      End Function        Public Structure Aa          Public Overloads Overrides Function Equals(obj As Object) As Boolean              Return True          End Function      End Structure  End Structure  "'              GetCA2231BasicResultAt(4' 18)'              GetCA2231BasicResultAt(9' 22));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235WithNonPublicNonSerializableFields,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  public class NonSerializableType { }                    [Serializable]                  public class SerializableType { }                        [Serializable]                  public class CA2235WithNonPublicNonSerializableFields                  {                      public SerializableType s1;                      internal NonSerializableType s2;                      private NonSerializableType s3;                  }"'                  GetCA2235CSharpResultAt(12' 50' "s2"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235CSharpResultAt(13' 49' "s3"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235WithNonPublicNonSerializableFields,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  public class NonSerializableType { }                    [Serializable]                  public class SerializableType { }                        [Serializable]                  public class CA2235WithNonPublicNonSerializableFields                  {                      public SerializableType s1;                      internal NonSerializableType s2;                      private NonSerializableType s3;                  }"'                  GetCA2235CSharpResultAt(12' 50' "s2"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235CSharpResultAt(13' 49' "s3"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235WithNonPublicNonSerializableFields,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  public class NonSerializableType { }                    [Serializable]                  public class SerializableType { }                        [Serializable]                  public class CA2235WithNonPublicNonSerializableFields                  {                      public SerializableType s1;                      internal NonSerializableType s2;                      private NonSerializableType s3;                  }"'                  GetCA2235CSharpResultAt(12' 50' "s2"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235CSharpResultAt(13' 49' "s3"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235WithNonPublicNonSerializableFields,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  public class NonSerializableType { }                    [Serializable]                  public class SerializableType { }                        [Serializable]                  public class CA2235WithNonPublicNonSerializableFields                  {                      public SerializableType s1;                      internal NonSerializableType s2;                      private NonSerializableType s3;                  }"'                  GetCA2235CSharpResultAt(12' 50' "s2"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235CSharpResultAt(13' 49' "s3"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235WithNonPublicNonSerializableFields,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Public Class NonSerializableType                  End Class                  <Serializable>                  Public Class SerializableType                  End Class                    <Serializable>                  Public Class CA2235WithNonPublicNonSerializableFields                       Public s1 As SerializableType;                      Friend s2 As NonSerializableType;                      Private s3 As NonSerializableType;                  End Class"'                  GetCA2235BasicResultAt(12' 28' "s2"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235BasicResultAt(13' 29' "s3"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235WithNonPublicNonSerializableFields,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Public Class NonSerializableType                  End Class                  <Serializable>                  Public Class SerializableType                  End Class                    <Serializable>                  Public Class CA2235WithNonPublicNonSerializableFields                       Public s1 As SerializableType;                      Friend s2 As NonSerializableType;                      Private s3 As NonSerializableType;                  End Class"'                  GetCA2235BasicResultAt(12' 28' "s2"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235BasicResultAt(13' 29' "s3"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235WithNonPublicNonSerializableFields,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Public Class NonSerializableType                  End Class                  <Serializable>                  Public Class SerializableType                  End Class                    <Serializable>                  Public Class CA2235WithNonPublicNonSerializableFields                       Public s1 As SerializableType;                      Friend s2 As NonSerializableType;                      Private s3 As NonSerializableType;                  End Class"'                  GetCA2235BasicResultAt(12' 28' "s2"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235BasicResultAt(13' 29' "s3"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235WithNonPublicNonSerializableFields,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Public Class NonSerializableType                  End Class                  <Serializable>                  Public Class SerializableType                  End Class                    <Serializable>                  Public Class CA2235WithNonPublicNonSerializableFields                       Public s1 As SerializableType;                      Friend s2 As NonSerializableType;                      Private s3 As NonSerializableType;                  End Class"'                  GetCA2235BasicResultAt(12' 28' "s2"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235BasicResultAt(13' 29' "s3"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235WithNonPublicNonSerializableFieldsWithScope,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  public class NonSerializableType { }                    [Serializable]                  public class SerializableType { }                        [|[Serializable]                  public class CA2235WithNonPublicNonSerializableFields                  {                      public SerializableType s1;                      internal NonSerializableType s2;                      private NonSerializableType s3;                  }|]                    [Serializable]                  public class Sample                  {                      public SerializableType s1;                      internal NonSerializableType s2;                      private NonSerializableType s3;                  }"'                  GetCA2235CSharpResultAt(12' 50' "s2"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235CSharpResultAt(13' 49' "s3"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235WithNonPublicNonSerializableFieldsWithScope,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  public class NonSerializableType { }                    [Serializable]                  public class SerializableType { }                        [|[Serializable]                  public class CA2235WithNonPublicNonSerializableFields                  {                      public SerializableType s1;                      internal NonSerializableType s2;                      private NonSerializableType s3;                  }|]                    [Serializable]                  public class Sample                  {                      public SerializableType s1;                      internal NonSerializableType s2;                      private NonSerializableType s3;                  }"'                  GetCA2235CSharpResultAt(12' 50' "s2"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235CSharpResultAt(13' 49' "s3"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235WithNonPublicNonSerializableFieldsWithScope,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  public class NonSerializableType { }                    [Serializable]                  public class SerializableType { }                        [|[Serializable]                  public class CA2235WithNonPublicNonSerializableFields                  {                      public SerializableType s1;                      internal NonSerializableType s2;                      private NonSerializableType s3;                  }|]                    [Serializable]                  public class Sample                  {                      public SerializableType s1;                      internal NonSerializableType s2;                      private NonSerializableType s3;                  }"'                  GetCA2235CSharpResultAt(12' 50' "s2"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235CSharpResultAt(13' 49' "s3"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235WithNonPublicNonSerializableFieldsWithScope,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  public class NonSerializableType { }                    [Serializable]                  public class SerializableType { }                        [|[Serializable]                  public class CA2235WithNonPublicNonSerializableFields                  {                      public SerializableType s1;                      internal NonSerializableType s2;                      private NonSerializableType s3;                  }|]                    [Serializable]                  public class Sample                  {                      public SerializableType s1;                      internal NonSerializableType s2;                      private NonSerializableType s3;                  }"'                  GetCA2235CSharpResultAt(12' 50' "s2"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235CSharpResultAt(13' 49' "s3"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235WithNonPublicNonSerializableFieldsWithScope,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Public Class NonSerializableType                  End Class                  <Serializable>                  Public Class SerializableType                  End Class                    [|<Serializable>                  Public Class CA2235WithNonPublicNonSerializableFields                       Public s1 As SerializableType;                      Friend s2 As NonSerializableType;                      Private s3 As NonSerializableType;                  End Class|]                    <Serializable>                  Public Class Sample                       Public s1 As SerializableType;                      Friend s2 As NonSerializableType;                      Private s3 As NonSerializableType;                  End Class"'                  GetCA2235BasicResultAt(12' 28' "s2"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235BasicResultAt(13' 29' "s3"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235WithNonPublicNonSerializableFieldsWithScope,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Public Class NonSerializableType                  End Class                  <Serializable>                  Public Class SerializableType                  End Class                    [|<Serializable>                  Public Class CA2235WithNonPublicNonSerializableFields                       Public s1 As SerializableType;                      Friend s2 As NonSerializableType;                      Private s3 As NonSerializableType;                  End Class|]                    <Serializable>                  Public Class Sample                       Public s1 As SerializableType;                      Friend s2 As NonSerializableType;                      Private s3 As NonSerializableType;                  End Class"'                  GetCA2235BasicResultAt(12' 28' "s2"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235BasicResultAt(13' 29' "s3"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235WithNonPublicNonSerializableFieldsWithScope,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Public Class NonSerializableType                  End Class                  <Serializable>                  Public Class SerializableType                  End Class                    [|<Serializable>                  Public Class CA2235WithNonPublicNonSerializableFields                       Public s1 As SerializableType;                      Friend s2 As NonSerializableType;                      Private s3 As NonSerializableType;                  End Class|]                    <Serializable>                  Public Class Sample                       Public s1 As SerializableType;                      Friend s2 As NonSerializableType;                      Private s3 As NonSerializableType;                  End Class"'                  GetCA2235BasicResultAt(12' 28' "s2"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235BasicResultAt(13' 29' "s3"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235WithNonPublicNonSerializableFieldsWithScope,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Public Class NonSerializableType                  End Class                  <Serializable>                  Public Class SerializableType                  End Class                    [|<Serializable>                  Public Class CA2235WithNonPublicNonSerializableFields                       Public s1 As SerializableType;                      Friend s2 As NonSerializableType;                      Private s3 As NonSerializableType;                  End Class|]                    <Serializable>                  Public Class Sample                       Public s1 As SerializableType;                      Friend s2 As NonSerializableType;                      Private s3 As NonSerializableType;                  End Class"'                  GetCA2235BasicResultAt(12' 28' "s2"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235BasicResultAt(13' 29' "s3"' "CA2235WithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235InternalWithNonPublicNonSerializableFields,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  public class NonSerializableType { }                    [Serializable]                  public class SerializableType { }                        [Serializable]                  internal class CA2235InternalWithNonPublicNonSerializableFields                  {                      public NonSerializableType s1;                      internal SerializableType s2;                      private NonSerializableType s3;                  }"'                  GetCA2235CSharpResultAt(11' 48' "s1"' "CA2235InternalWithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235CSharpResultAt(13' 49' "s3"' "CA2235InternalWithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235InternalWithNonPublicNonSerializableFields,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  public class NonSerializableType { }                    [Serializable]                  public class SerializableType { }                        [Serializable]                  internal class CA2235InternalWithNonPublicNonSerializableFields                  {                      public NonSerializableType s1;                      internal SerializableType s2;                      private NonSerializableType s3;                  }"'                  GetCA2235CSharpResultAt(11' 48' "s1"' "CA2235InternalWithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235CSharpResultAt(13' 49' "s3"' "CA2235InternalWithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235InternalWithNonPublicNonSerializableFields,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  public class NonSerializableType { }                    [Serializable]                  public class SerializableType { }                        [Serializable]                  internal class CA2235InternalWithNonPublicNonSerializableFields                  {                      public NonSerializableType s1;                      internal SerializableType s2;                      private NonSerializableType s3;                  }"'                  GetCA2235CSharpResultAt(11' 48' "s1"' "CA2235InternalWithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235CSharpResultAt(13' 49' "s3"' "CA2235InternalWithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235InternalWithNonPublicNonSerializableFields,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  public class NonSerializableType { }                    [Serializable]                  public class SerializableType { }                        [Serializable]                  internal class CA2235InternalWithNonPublicNonSerializableFields                  {                      public NonSerializableType s1;                      internal SerializableType s2;                      private NonSerializableType s3;                  }"'                  GetCA2235CSharpResultAt(11' 48' "s1"' "CA2235InternalWithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235CSharpResultAt(13' 49' "s3"' "CA2235InternalWithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235InternalWithNonPublicNonSerializableFields,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Public Class NonSerializableType                  End Class                  <Serializable>                  Public Class SerializableType                  End Class                    <Serializable>                  Friend Class CA2235InternalWithNonPublicNonSerializableFields                       Public s1 As NonSerializableType;                      Friend s2 As SerializableType;                      Private s3 As NonSerializableType;                  End Class"'                  GetCA2235BasicResultAt(11' 28' "s1"' "CA2235InternalWithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235BasicResultAt(13' 29' "s3"' "CA2235InternalWithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235InternalWithNonPublicNonSerializableFields,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Public Class NonSerializableType                  End Class                  <Serializable>                  Public Class SerializableType                  End Class                    <Serializable>                  Friend Class CA2235InternalWithNonPublicNonSerializableFields                       Public s1 As NonSerializableType;                      Friend s2 As SerializableType;                      Private s3 As NonSerializableType;                  End Class"'                  GetCA2235BasicResultAt(11' 28' "s1"' "CA2235InternalWithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235BasicResultAt(13' 29' "s3"' "CA2235InternalWithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235InternalWithNonPublicNonSerializableFields,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Public Class NonSerializableType                  End Class                  <Serializable>                  Public Class SerializableType                  End Class                    <Serializable>                  Friend Class CA2235InternalWithNonPublicNonSerializableFields                       Public s1 As NonSerializableType;                      Friend s2 As SerializableType;                      Private s3 As NonSerializableType;                  End Class"'                  GetCA2235BasicResultAt(11' 28' "s1"' "CA2235InternalWithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235BasicResultAt(13' 29' "s3"' "CA2235InternalWithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2235Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2235Tests.cs,CA2235InternalWithNonPublicNonSerializableFields,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Public Class NonSerializableType                  End Class                  <Serializable>                  Public Class SerializableType                  End Class                    <Serializable>                  Friend Class CA2235InternalWithNonPublicNonSerializableFields                       Public s1 As NonSerializableType;                      Friend s2 As SerializableType;                      Private s3 As NonSerializableType;                  End Class"'                  GetCA2235BasicResultAt(11' 28' "s1"' "CA2235InternalWithNonPublicNonSerializableFields"' "NonSerializableType")'                  GetCA2235BasicResultAt(13' 29' "s3"' "CA2235InternalWithNonPublicNonSerializableFields"' "NonSerializableType"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2237Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2237Tests.cs,CA2237SerializableMissingAttr,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  using System.Runtime.Serialization;                  public class CA2237SerializableMissingAttr : ISerializable                  {                      public void GetObjectData(SerializationInfo info' StreamingContext context)                      {                          throw new NotImplementedException();                      }                  }"'                  GetCA2237CSharpResultAt(4' 30' "CA2237SerializableMissingAttr"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2237Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2237Tests.cs,CA2237SerializableMissingAttr,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  using System.Runtime.Serialization;                  public class CA2237SerializableMissingAttr : ISerializable                  {                      public void GetObjectData(SerializationInfo info' StreamingContext context)                      {                          throw new NotImplementedException();                      }                  }"'                  GetCA2237CSharpResultAt(4' 30' "CA2237SerializableMissingAttr"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2237Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2237Tests.cs,CA2237SerializableMissingAttr,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Imports System.Runtime.Serialization                  Public Class CA2237SerializableMissingAttr                      Implements ISerializable                                        Protected Sub New(context As StreamingContext' info As SerializationInfo)                      End Sub                        Public Sub GetObjectData(info as SerializationInfo' context as StreamingContext)                          throw new NotImplementedException()                      End Sub                  End Class"'                  GetCA2237BasicResultAt(4' 30' "CA2237SerializableMissingAttr"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2237Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2237Tests.cs,CA2237SerializableMissingAttr,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Imports System.Runtime.Serialization                  Public Class CA2237SerializableMissingAttr                      Implements ISerializable                                        Protected Sub New(context As StreamingContext' info As SerializationInfo)                      End Sub                        Public Sub GetObjectData(info as SerializationInfo' context as StreamingContext)                          throw new NotImplementedException()                      End Sub                  End Class"'                  GetCA2237BasicResultAt(4' 30' "CA2237SerializableMissingAttr"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2237Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2237Tests.cs,CA2237SerializableWithBaseAttr,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  using System.Runtime.Serialization;                  public class CA2237SerializableWithBaseAttr : BaseAttr' ISerializable                  {                      public void GetObjectData(SerializationInfo info' StreamingContext context)                      {                          throw new NotImplementedException();                      }                  }                  [Serializable]                  public class BaseAttr { }"'                  GetCA2237CSharpResultAt(4' 30' "CA2237SerializableWithBaseAttr"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2237Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2237Tests.cs,CA2237SerializableWithBaseAttr,The following statement contains a magic number: VerifyCSharp(@"                  using System;                  using System.Runtime.Serialization;                  public class CA2237SerializableWithBaseAttr : BaseAttr' ISerializable                  {                      public void GetObjectData(SerializationInfo info' StreamingContext context)                      {                          throw new NotImplementedException();                      }                  }                  [Serializable]                  public class BaseAttr { }"'                  GetCA2237CSharpResultAt(4' 30' "CA2237SerializableWithBaseAttr"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2237Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2237Tests.cs,CA2237SerializableWithBaseAttr,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Imports System.Runtime.Serialization                  Public Class CA2237SerializableWithBaseAttr                      Inherits BaseWithAttr                       Implements ISerializable                                        Protected Sub New(context As StreamingContext' info As SerializationInfo)                      End Sub                        Public Sub GetObjectData(info as SerializationInfo' context as StreamingContext)                          throw new NotImplementedException()                      End Sub                  End Class                  <Serializable>                  Public Class BaseWithAttr                  End Class"'                  GetCA2237BasicResultAt(4' 30' "CA2237SerializableWithBaseAttr"));
Magic Number,Microsoft.CodeAnalysis.UnitTests,CA2237Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Usage\CA2237Tests.cs,CA2237SerializableWithBaseAttr,The following statement contains a magic number: VerifyBasic(@"                  Imports System                  Imports System.Runtime.Serialization                  Public Class CA2237SerializableWithBaseAttr                      Inherits BaseWithAttr                       Implements ISerializable                                        Protected Sub New(context As StreamingContext' info As SerializationInfo)                      End Sub                        Public Sub GetObjectData(info as SerializationInfo' context as StreamingContext)                          throw new NotImplementedException()                      End Sub                  End Class                  <Serializable>                  Public Class BaseWithAttr                  End Class"'                  GetCA2237BasicResultAt(4' 30' "CA2237SerializableWithBaseAttr"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060ImproperlyNamedClassCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;    class FooClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }    class BarClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }    class BazClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }  "'              CSharpResult(4' 7)'              CSharpResult(10' 7)'              CSharpResult(16' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060ImproperlyNamedClassCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;    class FooClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }    class BarClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }    class BazClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }  "'              CSharpResult(4' 7)'              CSharpResult(10' 7)'              CSharpResult(16' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060ImproperlyNamedClassCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;    class FooClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }    class BarClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }    class BazClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }  "'              CSharpResult(4' 7)'              CSharpResult(10' 7)'              CSharpResult(16' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060ImproperlyNamedClassCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;    class FooClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }    class BarClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }    class BazClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }  "'              CSharpResult(4' 7)'              CSharpResult(10' 7)'              CSharpResult(16' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060ImproperlyNamedClassCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;    class FooClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }    class BarClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }    class BazClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }  "'              CSharpResult(4' 7)'              CSharpResult(10' 7)'              CSharpResult(16' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060ImproperlyNamedClassCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;    class FooClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }    class BarClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }    class BazClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }  "'              CSharpResult(4' 7)'              CSharpResult(10' 7)'              CSharpResult(16' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060ImproperlyNamedClassCSharpWithScope,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;    class FooClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }    [|class BarClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }|]    class BazClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }  "'              CSharpResult(10' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060ImproperlyNamedClassCSharpWithScope,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;    class FooClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }    [|class BarClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }|]    class BazClass  {      [DllImport(""user32.dll"")]      private static extern void Foo();  }  "'              CSharpResult(10' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060ImproperlyNamedClassBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class FooClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class    Class BarClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class    Class BazClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class  "'              BasicResult(4' 7)'              BasicResult(10' 7)'              BasicResult(16' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060ImproperlyNamedClassBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class FooClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class    Class BarClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class    Class BazClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class  "'              BasicResult(4' 7)'              BasicResult(10' 7)'              BasicResult(16' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060ImproperlyNamedClassBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class FooClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class    Class BarClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class    Class BazClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class  "'              BasicResult(4' 7)'              BasicResult(10' 7)'              BasicResult(16' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060ImproperlyNamedClassBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class FooClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class    Class BarClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class    Class BazClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class  "'              BasicResult(4' 7)'              BasicResult(10' 7)'              BasicResult(16' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060ImproperlyNamedClassBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class FooClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class    Class BarClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class    Class BazClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class  "'              BasicResult(4' 7)'              BasicResult(10' 7)'              BasicResult(16' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060ImproperlyNamedClassBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class FooClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class    Class BarClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class    Class BazClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class  "'              BasicResult(4' 7)'              BasicResult(10' 7)'              BasicResult(16' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060ImproperlyNamedClassBasicWithScope,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class FooClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class    [|Class BarClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class|]    Class BazClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class  "'              BasicResult(10' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060ImproperlyNamedClassBasicWithScope,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class FooClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class    [|Class BarClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class|]    Class BazClass      <DllImport(""user32.dll"")>      Private Shared Sub Foo()      End Sub  End Class  "'              BasicResult(10' 7));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060ClassesInNamespaceCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;    namespace MyNamespace  {      class NativeMethods      {          [DllImport(""user32.dll"")]          private static extern void Foo();      }        class BarClass      {          [DllImport(""user32.dll"")]          private static extern void Foo();      }  }  "'              CSharpResult(12' 11));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060ClassesInNamespaceCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;    namespace MyNamespace  {      class NativeMethods      {          [DllImport(""user32.dll"")]          private static extern void Foo();      }        class BarClass      {          [DllImport(""user32.dll"")]          private static extern void Foo();      }  }  "'              CSharpResult(12' 11));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060ClassesInNamespaceBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Namespace MyNamespace      Class NativeMethods          <DllImport(""user32.dll"")>          Private Shared Sub Foo()          End Sub      End Class        Class BarClass          <DllImport(""user32.dll"")>          Private Shared Sub Foo()          End Sub      End Class  End Namespace  "'              BasicResult(11' 11));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060ClassesInNamespaceBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Namespace MyNamespace      Class NativeMethods          <DllImport(""user32.dll"")>          Private Shared Sub Foo()          End Sub      End Class        Class BarClass          <DllImport(""user32.dll"")>          Private Shared Sub Foo()          End Sub      End Class  End Namespace  "'              BasicResult(11' 11));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060NestedClassesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;    class Outer  {      class BarClass      {          [DllImport(""user32.dll"")]          private static extern void Foo();      }  }  "'              CSharpResult(6' 11));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060NestedClassesCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;    class Outer  {      class BarClass      {          [DllImport(""user32.dll"")]          private static extern void Foo();      }  }  "'              CSharpResult(6' 11));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060NestedClassesBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class Outer      Class BarClass          <DllImport(""user32.dll"")>          Private Shared Sub Foo()          End Sub      End Class  End Class  "'              BasicResult(5' 11));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Design,CA1060Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1060Tests.cs,CA1060NestedClassesBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class Outer      Class BarClass          <DllImport(""user32.dll"")>          Private Shared Sub Foo()          End Sub      End Class  End Class  "'              BasicResult(5' 11));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;  using System.Globalization;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Compare(a' b);          string.Compare(a' b' true);          string.Compare(a' b' true' default(CultureInfo));          string.Compare(a' b' default(CultureInfo)' default(CompareOptions));          string.Compare(a' 0' b' 0' 0);          string.Compare(a' 0' b' 0' 0' true);          string.Compare(a' 0' b' 0' 0' true' default(CultureInfo));          string.Compare(a' 0' b' 0' 0' default(CultureInfo)' default(CompareOptions));          System.String.Compare(a' b);          // right overload' wrong value          string.Compare(a' b' StringComparison.CurrentCulture);          string.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture);          // right overload' right value          string.Compare(a' b' StringComparison.Ordinal);          string.Compare(a' b' StringComparison.OrdinalIgnoreCase);          string.Compare(a' 0' b' 0' 0' StringComparison.Ordinal);          string.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase);      }  }  "'                  CSharpResult(11' 16)'                  CSharpResult(12' 16)'                  CSharpResult(13' 16)'                  CSharpResult(14' 16)'                  CSharpResult(15' 16)'                  CSharpResult(16' 16)'                  CSharpResult(17' 16)'                  CSharpResult(18' 16)'                  CSharpResult(19' 23)'                  CSharpResult(21' 30)'                  CSharpResult(22' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309CompareOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System  Imports System.Globalization    Class C      Sub Method()          Dim a As String          Dim b As String          Dim ci As CultureInfo          Dim co As CompareOptions          ' wrong overload          String.Compare(a' b)          String.Compare(a' b' True)          String.Compare(a' b' True' ci)          String.Compare(a' b' ci' co)          String.Compare(a' 0' b' 0' 0)          String.Compare(a' 0' b' 0' 0' True)          String.Compare(a' 0' b' 0' 0' True' ci)          String.Compare(a' 0' b' 0' 0' ci' co)          System.String.Compare(a' b)          ' right overload' wrong value          String.Compare(a' b' StringComparison.CurrentCulture)          String.Compare(a' 0' b' 0' 0' StringComparison.CurrentCulture)          ' right overload' right value          String.Compare(a' b' StringComparison.Ordinal)          String.Compare(a' b' StringComparison.OrdinalIgnoreCase)          String.Compare(a' 0' b' 0' 0' StringComparison.Ordinal)          String.Compare(a' 0' b' 0' 0' StringComparison.OrdinalIgnoreCase)      End Sub  End Class  "'                  BasicResult(12' 16)'                  BasicResult(13' 16)'                  BasicResult(14' 16)'                  BasicResult(15' 16)'                  BasicResult(16' 16)'                  BasicResult(17' 16)'                  BasicResult(18' 16)'                  BasicResult(19' 16)'                  BasicResult(20' 23)'                  BasicResult(22' 30)'                  BasicResult(23' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309EqualsOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Equals(a' b); // (string' string) is bad          // right overload' wrong value          string.Equals(a' b' StringComparison.CurrentCulture);          // right overload' right value          string.Equals(a' b' StringComparison.Ordinal);          string.Equals(a' b' StringComparison.OrdinalIgnoreCase);          string.Equals(a' 15); // this is the (object' object) overload      }  }  "'                  CSharpResult(10' 16)'                  CSharpResult(12' 29));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309EqualsOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Equals(a' b); // (string' string) is bad          // right overload' wrong value          string.Equals(a' b' StringComparison.CurrentCulture);          // right overload' right value          string.Equals(a' b' StringComparison.Ordinal);          string.Equals(a' b' StringComparison.OrdinalIgnoreCase);          string.Equals(a' 15); // this is the (object' object) overload      }  }  "'                  CSharpResult(10' 16)'                  CSharpResult(12' 29));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309EqualsOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Equals(a' b); // (string' string) is bad          // right overload' wrong value          string.Equals(a' b' StringComparison.CurrentCulture);          // right overload' right value          string.Equals(a' b' StringComparison.Ordinal);          string.Equals(a' b' StringComparison.OrdinalIgnoreCase);          string.Equals(a' 15); // this is the (object' object) overload      }  }  "'                  CSharpResult(10' 16)'                  CSharpResult(12' 29));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309EqualsOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    class C  {      void Method()      {          string a' b;          // wrong overload          string.Equals(a' b); // (string' string) is bad          // right overload' wrong value          string.Equals(a' b' StringComparison.CurrentCulture);          // right overload' right value          string.Equals(a' b' StringComparison.Ordinal);          string.Equals(a' b' StringComparison.OrdinalIgnoreCase);          string.Equals(a' 15); // this is the (object' object) overload      }  }  "'                  CSharpResult(10' 16)'                  CSharpResult(12' 29));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309EqualsOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Class C      Sub Method()          Dim a As String' b As String          ' wrong overload          String.Equals(a' b) ' (String' String) is bad          ' right overload' wrong value          String.Equals(a' b' StringComparison.CurrentCulture)          ' right overload' right value          String.Equals(a' b' StringComparison.Ordinal)          String.Equals(a' b' StringComparison.OrdinalIgnoreCase)          String.Equals(a' 15) ' this is the (Object' Object) overload      End Sub  End Class  "'                  BasicResult(8' 16)'                  BasicResult(10' 29));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309EqualsOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Class C      Sub Method()          Dim a As String' b As String          ' wrong overload          String.Equals(a' b) ' (String' String) is bad          ' right overload' wrong value          String.Equals(a' b' StringComparison.CurrentCulture)          ' right overload' right value          String.Equals(a' b' StringComparison.Ordinal)          String.Equals(a' b' StringComparison.OrdinalIgnoreCase)          String.Equals(a' 15) ' this is the (Object' Object) overload      End Sub  End Class  "'                  BasicResult(8' 16)'                  BasicResult(10' 29));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309EqualsOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Class C      Sub Method()          Dim a As String' b As String          ' wrong overload          String.Equals(a' b) ' (String' String) is bad          ' right overload' wrong value          String.Equals(a' b' StringComparison.CurrentCulture)          ' right overload' right value          String.Equals(a' b' StringComparison.Ordinal)          String.Equals(a' b' StringComparison.OrdinalIgnoreCase)          String.Equals(a' 15) ' this is the (Object' Object) overload      End Sub  End Class  "'                  BasicResult(8' 16)'                  BasicResult(10' 29));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309EqualsOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Class C      Sub Method()          Dim a As String' b As String          ' wrong overload          String.Equals(a' b) ' (String' String) is bad          ' right overload' wrong value          String.Equals(a' b' StringComparison.CurrentCulture)          ' right overload' right value          String.Equals(a' b' StringComparison.Ordinal)          String.Equals(a' b' StringComparison.OrdinalIgnoreCase)          String.Equals(a' 15) ' this is the (Object' Object) overload      End Sub  End Class  "'                  BasicResult(8' 16)'                  BasicResult(10' 29));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309InstanceEqualsTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    class C  {      void Method()      {          string a' b;          // wrong overload          a.Equals(b);          // right overload' wrong value          a.Equals(b' StringComparison.CurrentCulture);          // right overload' right value          a.Equals(b' StringComparison.Ordinal);          a.Equals(b' StringComparison.OrdinalIgnoreCase);          a.Equals(15); // this is the (object) overload      }  }  "'                  CSharpResult(10' 11)'                  CSharpResult(12' 21));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309InstanceEqualsTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    class C  {      void Method()      {          string a' b;          // wrong overload          a.Equals(b);          // right overload' wrong value          a.Equals(b' StringComparison.CurrentCulture);          // right overload' right value          a.Equals(b' StringComparison.Ordinal);          a.Equals(b' StringComparison.OrdinalIgnoreCase);          a.Equals(15); // this is the (object) overload      }  }  "'                  CSharpResult(10' 11)'                  CSharpResult(12' 21));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309InstanceEqualsTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    class C  {      void Method()      {          string a' b;          // wrong overload          a.Equals(b);          // right overload' wrong value          a.Equals(b' StringComparison.CurrentCulture);          // right overload' right value          a.Equals(b' StringComparison.Ordinal);          a.Equals(b' StringComparison.OrdinalIgnoreCase);          a.Equals(15); // this is the (object) overload      }  }  "'                  CSharpResult(10' 11)'                  CSharpResult(12' 21));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309InstanceEqualsTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    class C  {      void Method()      {          string a' b;          // wrong overload          a.Equals(b);          // right overload' wrong value          a.Equals(b' StringComparison.CurrentCulture);          // right overload' right value          a.Equals(b' StringComparison.Ordinal);          a.Equals(b' StringComparison.OrdinalIgnoreCase);          a.Equals(15); // this is the (object) overload      }  }  "'                  CSharpResult(10' 11)'                  CSharpResult(12' 21));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309InstanceEqualsTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Class C      Sub Method()          Dim a As String' b As String          ' wrong overload          a.Equals(b)          ' right overload' wrong value          a.Equals(b' StringComparison.CurrentCulture)          ' right overload' right value          a.Equals(b' StringComparison.Ordinal)          a.Equals(b' StringComparison.OrdinalIgnoreCase)          a.Equals(15) ' this is the (Object) overload      End Sub  End Class  "'                  BasicResult(8' 11)'                  BasicResult(10' 21));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309InstanceEqualsTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Class C      Sub Method()          Dim a As String' b As String          ' wrong overload          a.Equals(b)          ' right overload' wrong value          a.Equals(b' StringComparison.CurrentCulture)          ' right overload' right value          a.Equals(b' StringComparison.Ordinal)          a.Equals(b' StringComparison.OrdinalIgnoreCase)          a.Equals(15) ' this is the (Object) overload      End Sub  End Class  "'                  BasicResult(8' 11)'                  BasicResult(10' 21));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309InstanceEqualsTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Class C      Sub Method()          Dim a As String' b As String          ' wrong overload          a.Equals(b)          ' right overload' wrong value          a.Equals(b' StringComparison.CurrentCulture)          ' right overload' right value          a.Equals(b' StringComparison.Ordinal)          a.Equals(b' StringComparison.OrdinalIgnoreCase)          a.Equals(15) ' this is the (Object) overload      End Sub  End Class  "'                  BasicResult(8' 11)'                  BasicResult(10' 21));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309InstanceEqualsTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Class C      Sub Method()          Dim a As String' b As String          ' wrong overload          a.Equals(b)          ' right overload' wrong value          a.Equals(b' StringComparison.CurrentCulture)          ' right overload' right value          a.Equals(b' StringComparison.Ordinal)          a.Equals(b' StringComparison.OrdinalIgnoreCase)          a.Equals(15) ' this is the (Object) overload      End Sub  End Class  "'                  BasicResult(8' 11)'                  BasicResult(10' 21));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309OperatorOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    class C  {      void Method()      {          string a' b;          // not allowed          if (a == b) { }          if (a != b) { }          // this is allowed          if (a == null) { }          if (null == a) { }      }  }  "'                  CSharpResult(10' 15)'                  CSharpResult(11' 15));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309OperatorOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    class C  {      void Method()      {          string a' b;          // not allowed          if (a == b) { }          if (a != b) { }          // this is allowed          if (a == null) { }          if (null == a) { }      }  }  "'                  CSharpResult(10' 15)'                  CSharpResult(11' 15));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309OperatorOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    class C  {      void Method()      {          string a' b;          // not allowed          if (a == b) { }          if (a != b) { }          // this is allowed          if (a == null) { }          if (null == a) { }      }  }  "'                  CSharpResult(10' 15)'                  CSharpResult(11' 15));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309OperatorOverloadTestCSharp,The following statement contains a magic number: VerifyCSharp(@"  using System;    class C  {      void Method()      {          string a' b;          // not allowed          if (a == b) { }          if (a != b) { }          // this is allowed          if (a == null) { }          if (null == a) { }      }  }  "'                  CSharpResult(10' 15)'                  CSharpResult(11' 15));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309OperatorOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Class C      Sub Method()          Dim a As String' b As String          ' not allowed          If a = b Then          End If          If a <> b Then          End If          ' this is allowed          If a = Nothing Then          End If          If a Is Nothing Then          End If          If Nothing = a Then          End If      End Sub  End Class  "'                  BasicResult(8' 14)'                  BasicResult(10' 14));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309OperatorOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Class C      Sub Method()          Dim a As String' b As String          ' not allowed          If a = b Then          End If          If a <> b Then          End If          ' this is allowed          If a = Nothing Then          End If          If a Is Nothing Then          End If          If Nothing = a Then          End If      End Sub  End Class  "'                  BasicResult(8' 14)'                  BasicResult(10' 14));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309OperatorOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Class C      Sub Method()          Dim a As String' b As String          ' not allowed          If a = b Then          End If          If a <> b Then          End If          ' this is allowed          If a = Nothing Then          End If          If a Is Nothing Then          End If          If Nothing = a Then          End If      End Sub  End Class  "'                  BasicResult(8' 14)'                  BasicResult(10' 14));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Globalization,CA1309Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Globalization\CA1309Tests.cs,CA1309OperatorOverloadTestBasic,The following statement contains a magic number: VerifyBasic(@"  Imports System    Class C      Sub Method()          Dim a As String' b As String          ' not allowed          If a = b Then          End If          If a <> b Then          End If          ' this is allowed          If a = Nothing Then          End If          If a Is Nothing Then          End If          If Nothing = a Then          End If      End Sub  End Class  "'                  BasicResult(8' 14)'                  BasicResult(10' 14));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401CSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;    class C  {      [DllImport(""user32.dll"")]      public static extern void Foo1(); // should not be public        [DllImport(""user32.dll"")]      protected static extern void Foo2(); // should not be protected        [DllImport(""user32.dll"")]      private static extern void Foo3(); // private is OK        [DllImport(""user32.dll"")]      static extern void Foo4(); // implicitly private is OK  }  "'                  CSharpResult1401(7' 31' "Foo1")'                  CSharpResult1401(10' 34' "Foo2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401CSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;    class C  {      [DllImport(""user32.dll"")]      public static extern void Foo1(); // should not be public        [DllImport(""user32.dll"")]      protected static extern void Foo2(); // should not be protected        [DllImport(""user32.dll"")]      private static extern void Foo3(); // private is OK        [DllImport(""user32.dll"")]      static extern void Foo4(); // implicitly private is OK  }  "'                  CSharpResult1401(7' 31' "Foo1")'                  CSharpResult1401(10' 34' "Foo2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401CSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;    class C  {      [DllImport(""user32.dll"")]      public static extern void Foo1(); // should not be public        [DllImport(""user32.dll"")]      protected static extern void Foo2(); // should not be protected        [DllImport(""user32.dll"")]      private static extern void Foo3(); // private is OK        [DllImport(""user32.dll"")]      static extern void Foo4(); // implicitly private is OK  }  "'                  CSharpResult1401(7' 31' "Foo1")'                  CSharpResult1401(10' 34' "Foo2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401CSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;    class C  {      [DllImport(""user32.dll"")]      public static extern void Foo1(); // should not be public        [DllImport(""user32.dll"")]      protected static extern void Foo2(); // should not be protected        [DllImport(""user32.dll"")]      private static extern void Foo3(); // private is OK        [DllImport(""user32.dll"")]      static extern void Foo4(); // implicitly private is OK  }  "'                  CSharpResult1401(7' 31' "Foo1")'                  CSharpResult1401(10' 34' "Foo2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401CSharpTestWithScope,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;    class C  {      [DllImport(""user32.dll"")]      public static extern void Foo1(); // should not be public        [|[DllImport(""user32.dll"")]      protected static extern void Foo2(); // should not be protected      |]      [DllImport(""user32.dll"")]      private static extern void Foo3(); // private is OK        [DllImport(""user32.dll"")]      static extern void Foo4(); // implicitly private is OK  }  "'                  CSharpResult1401(10' 34' "Foo2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401CSharpTestWithScope,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;    class C  {      [DllImport(""user32.dll"")]      public static extern void Foo1(); // should not be public        [|[DllImport(""user32.dll"")]      protected static extern void Foo2(); // should not be protected      |]      [DllImport(""user32.dll"")]      private static extern void Foo3(); // private is OK        [DllImport(""user32.dll"")]      static extern void Foo4(); // implicitly private is OK  }  "'                  CSharpResult1401(10' 34' "Foo2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicSubTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      <DllImport(""user32.dll"")>      Public Shared Sub Foo1() ' should not be public      End Sub        <DllImport(""user32.dll"")>      Protected Shared Sub Foo2() ' should not be protected      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3() ' private is OK      End Sub        <DllImport(""user32.dll"")>      Shared Sub Foo4() ' implicitly public is not OK      End Sub  End Class  "'                  BasicResult1401(6' 23' "Foo1")'                  BasicResult1401(10' 26' "Foo2")'                  BasicResult1401(18' 16' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicSubTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      <DllImport(""user32.dll"")>      Public Shared Sub Foo1() ' should not be public      End Sub        <DllImport(""user32.dll"")>      Protected Shared Sub Foo2() ' should not be protected      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3() ' private is OK      End Sub        <DllImport(""user32.dll"")>      Shared Sub Foo4() ' implicitly public is not OK      End Sub  End Class  "'                  BasicResult1401(6' 23' "Foo1")'                  BasicResult1401(10' 26' "Foo2")'                  BasicResult1401(18' 16' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicSubTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      <DllImport(""user32.dll"")>      Public Shared Sub Foo1() ' should not be public      End Sub        <DllImport(""user32.dll"")>      Protected Shared Sub Foo2() ' should not be protected      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3() ' private is OK      End Sub        <DllImport(""user32.dll"")>      Shared Sub Foo4() ' implicitly public is not OK      End Sub  End Class  "'                  BasicResult1401(6' 23' "Foo1")'                  BasicResult1401(10' 26' "Foo2")'                  BasicResult1401(18' 16' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicSubTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      <DllImport(""user32.dll"")>      Public Shared Sub Foo1() ' should not be public      End Sub        <DllImport(""user32.dll"")>      Protected Shared Sub Foo2() ' should not be protected      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3() ' private is OK      End Sub        <DllImport(""user32.dll"")>      Shared Sub Foo4() ' implicitly public is not OK      End Sub  End Class  "'                  BasicResult1401(6' 23' "Foo1")'                  BasicResult1401(10' 26' "Foo2")'                  BasicResult1401(18' 16' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicSubTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      <DllImport(""user32.dll"")>      Public Shared Sub Foo1() ' should not be public      End Sub        <DllImport(""user32.dll"")>      Protected Shared Sub Foo2() ' should not be protected      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3() ' private is OK      End Sub        <DllImport(""user32.dll"")>      Shared Sub Foo4() ' implicitly public is not OK      End Sub  End Class  "'                  BasicResult1401(6' 23' "Foo1")'                  BasicResult1401(10' 26' "Foo2")'                  BasicResult1401(18' 16' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicSubTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      <DllImport(""user32.dll"")>      Public Shared Sub Foo1() ' should not be public      End Sub        <DllImport(""user32.dll"")>      Protected Shared Sub Foo2() ' should not be protected      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3() ' private is OK      End Sub        <DllImport(""user32.dll"")>      Shared Sub Foo4() ' implicitly public is not OK      End Sub  End Class  "'                  BasicResult1401(6' 23' "Foo1")'                  BasicResult1401(10' 26' "Foo2")'                  BasicResult1401(18' 16' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicSubTestWithScope,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      <DllImport(""user32.dll"")>      Public Shared Sub Foo1() ' should not be public      End Sub        [|<DllImport(""user32.dll"")>      Protected Shared Sub Foo2() ' should not be protected      End Sub|]        <DllImport(""user32.dll"")>      Private Shared Sub Foo3() ' private is OK      End Sub        <DllImport(""user32.dll"")>      Shared Sub Foo4() ' implicitly public is not OK      End Sub  End Class  "'                  BasicResult1401(10' 26' "Foo2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicSubTestWithScope,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      <DllImport(""user32.dll"")>      Public Shared Sub Foo1() ' should not be public      End Sub        [|<DllImport(""user32.dll"")>      Protected Shared Sub Foo2() ' should not be protected      End Sub|]        <DllImport(""user32.dll"")>      Private Shared Sub Foo3() ' private is OK      End Sub        <DllImport(""user32.dll"")>      Shared Sub Foo4() ' implicitly public is not OK      End Sub  End Class  "'                  BasicResult1401(10' 26' "Foo2"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicFunctionTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      <DllImport(""user32.dll"")>      Public Shared Function Foo1() As Integer ' should not be public      End Function        <DllImport(""user32.dll"")>      Protected Shared Function Foo2() As Integer ' should not be protected      End Function        <DllImport(""user32.dll"")>      Private Shared Function Foo3() As Integer ' private is OK      End Function        <DllImport(""user32.dll"")>      Shared Function Foo4() As Integer ' implicitly public is not OK      End Function  End Class  "'                  BasicResult1401(6' 28' "Foo1")'                  BasicResult1401(10' 31' "Foo2")'                  BasicResult1401(18' 21' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicFunctionTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      <DllImport(""user32.dll"")>      Public Shared Function Foo1() As Integer ' should not be public      End Function        <DllImport(""user32.dll"")>      Protected Shared Function Foo2() As Integer ' should not be protected      End Function        <DllImport(""user32.dll"")>      Private Shared Function Foo3() As Integer ' private is OK      End Function        <DllImport(""user32.dll"")>      Shared Function Foo4() As Integer ' implicitly public is not OK      End Function  End Class  "'                  BasicResult1401(6' 28' "Foo1")'                  BasicResult1401(10' 31' "Foo2")'                  BasicResult1401(18' 21' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicFunctionTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      <DllImport(""user32.dll"")>      Public Shared Function Foo1() As Integer ' should not be public      End Function        <DllImport(""user32.dll"")>      Protected Shared Function Foo2() As Integer ' should not be protected      End Function        <DllImport(""user32.dll"")>      Private Shared Function Foo3() As Integer ' private is OK      End Function        <DllImport(""user32.dll"")>      Shared Function Foo4() As Integer ' implicitly public is not OK      End Function  End Class  "'                  BasicResult1401(6' 28' "Foo1")'                  BasicResult1401(10' 31' "Foo2")'                  BasicResult1401(18' 21' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicFunctionTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      <DllImport(""user32.dll"")>      Public Shared Function Foo1() As Integer ' should not be public      End Function        <DllImport(""user32.dll"")>      Protected Shared Function Foo2() As Integer ' should not be protected      End Function        <DllImport(""user32.dll"")>      Private Shared Function Foo3() As Integer ' private is OK      End Function        <DllImport(""user32.dll"")>      Shared Function Foo4() As Integer ' implicitly public is not OK      End Function  End Class  "'                  BasicResult1401(6' 28' "Foo1")'                  BasicResult1401(10' 31' "Foo2")'                  BasicResult1401(18' 21' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicFunctionTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      <DllImport(""user32.dll"")>      Public Shared Function Foo1() As Integer ' should not be public      End Function        <DllImport(""user32.dll"")>      Protected Shared Function Foo2() As Integer ' should not be protected      End Function        <DllImport(""user32.dll"")>      Private Shared Function Foo3() As Integer ' private is OK      End Function        <DllImport(""user32.dll"")>      Shared Function Foo4() As Integer ' implicitly public is not OK      End Function  End Class  "'                  BasicResult1401(6' 28' "Foo1")'                  BasicResult1401(10' 31' "Foo2")'                  BasicResult1401(18' 21' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicFunctionTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      <DllImport(""user32.dll"")>      Public Shared Function Foo1() As Integer ' should not be public      End Function        <DllImport(""user32.dll"")>      Protected Shared Function Foo2() As Integer ' should not be protected      End Function        <DllImport(""user32.dll"")>      Private Shared Function Foo3() As Integer ' private is OK      End Function        <DllImport(""user32.dll"")>      Shared Function Foo4() As Integer ' implicitly public is not OK      End Function  End Class  "'                  BasicResult1401(6' 28' "Foo1")'                  BasicResult1401(10' 31' "Foo2")'                  BasicResult1401(18' 21' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicDeclareSubTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      Public Declare Sub Foo1 Lib ""user32.dll"" Alias ""Foo1"" () ' should not be public        Protected Declare Sub Foo2 Lib ""user32.dll"" Alias ""Foo2"" () ' should not be protected        Private Declare Sub Foo3 Lib ""user32.dll"" Alias ""Foo3"" () ' private is OK        Declare Sub Foo4 Lib ""user32.dll"" Alias ""Foo4"" () ' implicitly public is not OK  End Class  "'                  BasicResult1401(5' 24' "Foo1")'                  BasicResult1401(7' 27' "Foo2")'                  BasicResult1401(11' 17' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicDeclareSubTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      Public Declare Sub Foo1 Lib ""user32.dll"" Alias ""Foo1"" () ' should not be public        Protected Declare Sub Foo2 Lib ""user32.dll"" Alias ""Foo2"" () ' should not be protected        Private Declare Sub Foo3 Lib ""user32.dll"" Alias ""Foo3"" () ' private is OK        Declare Sub Foo4 Lib ""user32.dll"" Alias ""Foo4"" () ' implicitly public is not OK  End Class  "'                  BasicResult1401(5' 24' "Foo1")'                  BasicResult1401(7' 27' "Foo2")'                  BasicResult1401(11' 17' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicDeclareSubTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      Public Declare Sub Foo1 Lib ""user32.dll"" Alias ""Foo1"" () ' should not be public        Protected Declare Sub Foo2 Lib ""user32.dll"" Alias ""Foo2"" () ' should not be protected        Private Declare Sub Foo3 Lib ""user32.dll"" Alias ""Foo3"" () ' private is OK        Declare Sub Foo4 Lib ""user32.dll"" Alias ""Foo4"" () ' implicitly public is not OK  End Class  "'                  BasicResult1401(5' 24' "Foo1")'                  BasicResult1401(7' 27' "Foo2")'                  BasicResult1401(11' 17' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicDeclareSubTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      Public Declare Sub Foo1 Lib ""user32.dll"" Alias ""Foo1"" () ' should not be public        Protected Declare Sub Foo2 Lib ""user32.dll"" Alias ""Foo2"" () ' should not be protected        Private Declare Sub Foo3 Lib ""user32.dll"" Alias ""Foo3"" () ' private is OK        Declare Sub Foo4 Lib ""user32.dll"" Alias ""Foo4"" () ' implicitly public is not OK  End Class  "'                  BasicResult1401(5' 24' "Foo1")'                  BasicResult1401(7' 27' "Foo2")'                  BasicResult1401(11' 17' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicDeclareSubTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      Public Declare Sub Foo1 Lib ""user32.dll"" Alias ""Foo1"" () ' should not be public        Protected Declare Sub Foo2 Lib ""user32.dll"" Alias ""Foo2"" () ' should not be protected        Private Declare Sub Foo3 Lib ""user32.dll"" Alias ""Foo3"" () ' private is OK        Declare Sub Foo4 Lib ""user32.dll"" Alias ""Foo4"" () ' implicitly public is not OK  End Class  "'                  BasicResult1401(5' 24' "Foo1")'                  BasicResult1401(7' 27' "Foo2")'                  BasicResult1401(11' 17' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicDeclareSubTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      Public Declare Sub Foo1 Lib ""user32.dll"" Alias ""Foo1"" () ' should not be public        Protected Declare Sub Foo2 Lib ""user32.dll"" Alias ""Foo2"" () ' should not be protected        Private Declare Sub Foo3 Lib ""user32.dll"" Alias ""Foo3"" () ' private is OK        Declare Sub Foo4 Lib ""user32.dll"" Alias ""Foo4"" () ' implicitly public is not OK  End Class  "'                  BasicResult1401(5' 24' "Foo1")'                  BasicResult1401(7' 27' "Foo2")'                  BasicResult1401(11' 17' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicDeclareFunctionTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      Public Declare Function Foo1 Lib ""user32.dll"" Alias ""Foo1"" () As Integer ' should not be public        Protected Declare Function Foo2 Lib ""user32.dll"" Alias ""Foo2"" () As Integer ' should not be protected        Private Declare Function Foo3 Lib ""user32.dll"" Alias ""Foo3"" () As Integer ' private is OK        Declare Function Foo4 Lib ""user32.dll"" Alias ""Foo4"" () As Integer ' implicitly public is not OK  End Class  "'                  BasicResult1401(5' 29' "Foo1")'                  BasicResult1401(7' 32' "Foo2")'                  BasicResult1401(11' 22' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicDeclareFunctionTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      Public Declare Function Foo1 Lib ""user32.dll"" Alias ""Foo1"" () As Integer ' should not be public        Protected Declare Function Foo2 Lib ""user32.dll"" Alias ""Foo2"" () As Integer ' should not be protected        Private Declare Function Foo3 Lib ""user32.dll"" Alias ""Foo3"" () As Integer ' private is OK        Declare Function Foo4 Lib ""user32.dll"" Alias ""Foo4"" () As Integer ' implicitly public is not OK  End Class  "'                  BasicResult1401(5' 29' "Foo1")'                  BasicResult1401(7' 32' "Foo2")'                  BasicResult1401(11' 22' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicDeclareFunctionTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      Public Declare Function Foo1 Lib ""user32.dll"" Alias ""Foo1"" () As Integer ' should not be public        Protected Declare Function Foo2 Lib ""user32.dll"" Alias ""Foo2"" () As Integer ' should not be protected        Private Declare Function Foo3 Lib ""user32.dll"" Alias ""Foo3"" () As Integer ' private is OK        Declare Function Foo4 Lib ""user32.dll"" Alias ""Foo4"" () As Integer ' implicitly public is not OK  End Class  "'                  BasicResult1401(5' 29' "Foo1")'                  BasicResult1401(7' 32' "Foo2")'                  BasicResult1401(11' 22' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicDeclareFunctionTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      Public Declare Function Foo1 Lib ""user32.dll"" Alias ""Foo1"" () As Integer ' should not be public        Protected Declare Function Foo2 Lib ""user32.dll"" Alias ""Foo2"" () As Integer ' should not be protected        Private Declare Function Foo3 Lib ""user32.dll"" Alias ""Foo3"" () As Integer ' private is OK        Declare Function Foo4 Lib ""user32.dll"" Alias ""Foo4"" () As Integer ' implicitly public is not OK  End Class  "'                  BasicResult1401(5' 29' "Foo1")'                  BasicResult1401(7' 32' "Foo2")'                  BasicResult1401(11' 22' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicDeclareFunctionTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      Public Declare Function Foo1 Lib ""user32.dll"" Alias ""Foo1"" () As Integer ' should not be public        Protected Declare Function Foo2 Lib ""user32.dll"" Alias ""Foo2"" () As Integer ' should not be protected        Private Declare Function Foo3 Lib ""user32.dll"" Alias ""Foo3"" () As Integer ' private is OK        Declare Function Foo4 Lib ""user32.dll"" Alias ""Foo4"" () As Integer ' implicitly public is not OK  End Class  "'                  BasicResult1401(5' 29' "Foo1")'                  BasicResult1401(7' 32' "Foo2")'                  BasicResult1401(11' 22' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA1401BasicDeclareFunctionTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices    Class C      Public Declare Function Foo1 Lib ""user32.dll"" Alias ""Foo1"" () As Integer ' should not be public        Protected Declare Function Foo2 Lib ""user32.dll"" Alias ""Foo2"" () As Integer ' should not be protected        Private Declare Function Foo3 Lib ""user32.dll"" Alias ""Foo3"" () As Integer ' private is OK        Declare Function Foo4 Lib ""user32.dll"" Alias ""Foo4"" () As Integer ' implicitly public is not OK  End Class  "'                  BasicResult1401(5' 29' "Foo1")'                  BasicResult1401(7' 32' "Foo2")'                  BasicResult1401(11' 22' "Foo4"));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1(string s); // one string parameter        [DllImport(""user32.dll"")]      private static extern void Foo2(string s' string t); // two string parameters' should be only 1 diagnostic        [DllImport(""user32.dll"")]      private static extern void Foo3(StringBuilder s); // one StringBuilder parameter        [DllImport(""user32.dll"")]      private static extern void Foo4(StringBuilder s' StringBuilder t); // two StringBuilder parameters' should be only 1 diagnostic  }  "'                  CSharpResult2101(7' 6)'                  CSharpResult2101(10' 6)'                  CSharpResult2101(13' 6)'                  CSharpResult2101(16' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1(string s); // one string parameter        [DllImport(""user32.dll"")]      private static extern void Foo2(string s' string t); // two string parameters' should be only 1 diagnostic        [DllImport(""user32.dll"")]      private static extern void Foo3(StringBuilder s); // one StringBuilder parameter        [DllImport(""user32.dll"")]      private static extern void Foo4(StringBuilder s' StringBuilder t); // two StringBuilder parameters' should be only 1 diagnostic  }  "'                  CSharpResult2101(7' 6)'                  CSharpResult2101(10' 6)'                  CSharpResult2101(13' 6)'                  CSharpResult2101(16' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1(string s); // one string parameter        [DllImport(""user32.dll"")]      private static extern void Foo2(string s' string t); // two string parameters' should be only 1 diagnostic        [DllImport(""user32.dll"")]      private static extern void Foo3(StringBuilder s); // one StringBuilder parameter        [DllImport(""user32.dll"")]      private static extern void Foo4(StringBuilder s' StringBuilder t); // two StringBuilder parameters' should be only 1 diagnostic  }  "'                  CSharpResult2101(7' 6)'                  CSharpResult2101(10' 6)'                  CSharpResult2101(13' 6)'                  CSharpResult2101(16' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1(string s); // one string parameter        [DllImport(""user32.dll"")]      private static extern void Foo2(string s' string t); // two string parameters' should be only 1 diagnostic        [DllImport(""user32.dll"")]      private static extern void Foo3(StringBuilder s); // one StringBuilder parameter        [DllImport(""user32.dll"")]      private static extern void Foo4(StringBuilder s' StringBuilder t); // two StringBuilder parameters' should be only 1 diagnostic  }  "'                  CSharpResult2101(7' 6)'                  CSharpResult2101(10' 6)'                  CSharpResult2101(13' 6)'                  CSharpResult2101(16' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1(string s); // one string parameter        [DllImport(""user32.dll"")]      private static extern void Foo2(string s' string t); // two string parameters' should be only 1 diagnostic        [DllImport(""user32.dll"")]      private static extern void Foo3(StringBuilder s); // one StringBuilder parameter        [DllImport(""user32.dll"")]      private static extern void Foo4(StringBuilder s' StringBuilder t); // two StringBuilder parameters' should be only 1 diagnostic  }  "'                  CSharpResult2101(7' 6)'                  CSharpResult2101(10' 6)'                  CSharpResult2101(13' 6)'                  CSharpResult2101(16' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1(string s); // one string parameter        [DllImport(""user32.dll"")]      private static extern void Foo2(string s' string t); // two string parameters' should be only 1 diagnostic        [DllImport(""user32.dll"")]      private static extern void Foo3(StringBuilder s); // one StringBuilder parameter        [DllImport(""user32.dll"")]      private static extern void Foo4(StringBuilder s' StringBuilder t); // two StringBuilder parameters' should be only 1 diagnostic  }  "'                  CSharpResult2101(7' 6)'                  CSharpResult2101(10' 6)'                  CSharpResult2101(13' 6)'                  CSharpResult2101(16' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1(string s); // one string parameter        [DllImport(""user32.dll"")]      private static extern void Foo2(string s' string t); // two string parameters' should be only 1 diagnostic        [DllImport(""user32.dll"")]      private static extern void Foo3(StringBuilder s); // one StringBuilder parameter        [DllImport(""user32.dll"")]      private static extern void Foo4(StringBuilder s' StringBuilder t); // two StringBuilder parameters' should be only 1 diagnostic  }  "'                  CSharpResult2101(7' 6)'                  CSharpResult2101(10' 6)'                  CSharpResult2101(13' 6)'                  CSharpResult2101(16' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1(string s); // one string parameter        [DllImport(""user32.dll"")]      private static extern void Foo2(string s' string t); // two string parameters' should be only 1 diagnostic        [DllImport(""user32.dll"")]      private static extern void Foo3(StringBuilder s); // one StringBuilder parameter        [DllImport(""user32.dll"")]      private static extern void Foo4(StringBuilder s' StringBuilder t); // two StringBuilder parameters' should be only 1 diagnostic  }  "'                  CSharpResult2101(7' 6)'                  CSharpResult2101(10' 6)'                  CSharpResult2101(13' 6)'                  CSharpResult2101(16' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleCSharpTestWithScope,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1(string s); // one string parameter        [|[DllImport(""user32.dll"")]      private static extern void Foo2(string s' string t); // two string parameters' should be only 1 diagnostic|]        [DllImport(""user32.dll"")]      private static extern void Foo3(StringBuilder s); // one StringBuilder parameter        [DllImport(""user32.dll"")]      private static extern void Foo4(StringBuilder s' StringBuilder t); // two StringBuilder parameters' should be only 1 diagnostic  }  "'                  CSharpResult2101(10' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleCSharpTestWithScope,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1(string s); // one string parameter        [|[DllImport(""user32.dll"")]      private static extern void Foo2(string s' string t); // two string parameters' should be only 1 diagnostic|]        [DllImport(""user32.dll"")]      private static extern void Foo3(StringBuilder s); // one StringBuilder parameter        [DllImport(""user32.dll"")]      private static extern void Foo4(StringBuilder s' StringBuilder t); // two StringBuilder parameters' should be only 1 diagnostic  }  "'                  CSharpResult2101(10' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(s As String) ' one string parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(s As String' t As String) ' two string parameters' should be only 1 diagnostic      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(s As StringBuilder) ' one StringBuilder parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(s As StringBuilder' t As StringBuilder) ' two StringBuilder parameters' should be only 1 diagnostic      End Sub  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(14' 6)'                  BasicResult2101(18' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(s As String) ' one string parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(s As String' t As String) ' two string parameters' should be only 1 diagnostic      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(s As StringBuilder) ' one StringBuilder parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(s As StringBuilder' t As StringBuilder) ' two StringBuilder parameters' should be only 1 diagnostic      End Sub  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(14' 6)'                  BasicResult2101(18' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(s As String) ' one string parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(s As String' t As String) ' two string parameters' should be only 1 diagnostic      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(s As StringBuilder) ' one StringBuilder parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(s As StringBuilder' t As StringBuilder) ' two StringBuilder parameters' should be only 1 diagnostic      End Sub  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(14' 6)'                  BasicResult2101(18' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(s As String) ' one string parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(s As String' t As String) ' two string parameters' should be only 1 diagnostic      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(s As StringBuilder) ' one StringBuilder parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(s As StringBuilder' t As StringBuilder) ' two StringBuilder parameters' should be only 1 diagnostic      End Sub  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(14' 6)'                  BasicResult2101(18' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(s As String) ' one string parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(s As String' t As String) ' two string parameters' should be only 1 diagnostic      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(s As StringBuilder) ' one StringBuilder parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(s As StringBuilder' t As StringBuilder) ' two StringBuilder parameters' should be only 1 diagnostic      End Sub  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(14' 6)'                  BasicResult2101(18' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(s As String) ' one string parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(s As String' t As String) ' two string parameters' should be only 1 diagnostic      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(s As StringBuilder) ' one StringBuilder parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(s As StringBuilder' t As StringBuilder) ' two StringBuilder parameters' should be only 1 diagnostic      End Sub  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(14' 6)'                  BasicResult2101(18' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(s As String) ' one string parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(s As String' t As String) ' two string parameters' should be only 1 diagnostic      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(s As StringBuilder) ' one StringBuilder parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(s As StringBuilder' t As StringBuilder) ' two StringBuilder parameters' should be only 1 diagnostic      End Sub  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(14' 6)'                  BasicResult2101(18' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(s As String) ' one string parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(s As String' t As String) ' two string parameters' should be only 1 diagnostic      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(s As StringBuilder) ' one StringBuilder parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(s As StringBuilder' t As StringBuilder) ' two StringBuilder parameters' should be only 1 diagnostic      End Sub  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(14' 6)'                  BasicResult2101(18' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleBasicTestWithScope,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(s As String) ' one string parameter      End Sub        [|<DllImport(""user32.dll"")>      Private Shared Sub Foo2(s As String' t As String) ' two string parameters' should be only 1 diagnostic      End Sub|]        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(s As StringBuilder) ' one StringBuilder parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(s As StringBuilder' t As StringBuilder) ' two StringBuilder parameters' should be only 1 diagnostic      End Sub  End Class  "'                  BasicResult2101(10' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleBasicTestWithScope,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(s As String) ' one string parameter      End Sub        [|<DllImport(""user32.dll"")>      Private Shared Sub Foo2(s As String' t As String) ' two string parameters' should be only 1 diagnostic      End Sub|]        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(s As StringBuilder) ' one StringBuilder parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(s As StringBuilder' t As StringBuilder) ' two StringBuilder parameters' should be only 1 diagnostic      End Sub  End Class  "'                  BasicResult2101(10' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleDeclareBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Text    Class C      Private Declare Sub Foo1 Lib ""user32.dll"" (s As String) ' one string parameter        Private Declare Sub Foo2 Lib ""user32.dll"" (s As String' t As String) ' two string parameters' should be only 1 diagnostic        Private Declare Function Foo3 Lib ""user32.dll"" (s As StringBuilder) As Integer ' one StringBuilder parameter        Private Declare Function Foo4 Lib ""user32.dll"" (s As StringBuilder' t As StringBuilder) As Integer ' two StringBuilder parameters' should be only 1 diagnostic  End Class  "'                  BasicResult2101(5' 25)'                  BasicResult2101(7' 25)'                  BasicResult2101(9' 30)'                  BasicResult2101(11' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleDeclareBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Text    Class C      Private Declare Sub Foo1 Lib ""user32.dll"" (s As String) ' one string parameter        Private Declare Sub Foo2 Lib ""user32.dll"" (s As String' t As String) ' two string parameters' should be only 1 diagnostic        Private Declare Function Foo3 Lib ""user32.dll"" (s As StringBuilder) As Integer ' one StringBuilder parameter        Private Declare Function Foo4 Lib ""user32.dll"" (s As StringBuilder' t As StringBuilder) As Integer ' two StringBuilder parameters' should be only 1 diagnostic  End Class  "'                  BasicResult2101(5' 25)'                  BasicResult2101(7' 25)'                  BasicResult2101(9' 30)'                  BasicResult2101(11' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleDeclareBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Text    Class C      Private Declare Sub Foo1 Lib ""user32.dll"" (s As String) ' one string parameter        Private Declare Sub Foo2 Lib ""user32.dll"" (s As String' t As String) ' two string parameters' should be only 1 diagnostic        Private Declare Function Foo3 Lib ""user32.dll"" (s As StringBuilder) As Integer ' one StringBuilder parameter        Private Declare Function Foo4 Lib ""user32.dll"" (s As StringBuilder' t As StringBuilder) As Integer ' two StringBuilder parameters' should be only 1 diagnostic  End Class  "'                  BasicResult2101(5' 25)'                  BasicResult2101(7' 25)'                  BasicResult2101(9' 30)'                  BasicResult2101(11' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleDeclareBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Text    Class C      Private Declare Sub Foo1 Lib ""user32.dll"" (s As String) ' one string parameter        Private Declare Sub Foo2 Lib ""user32.dll"" (s As String' t As String) ' two string parameters' should be only 1 diagnostic        Private Declare Function Foo3 Lib ""user32.dll"" (s As StringBuilder) As Integer ' one StringBuilder parameter        Private Declare Function Foo4 Lib ""user32.dll"" (s As StringBuilder' t As StringBuilder) As Integer ' two StringBuilder parameters' should be only 1 diagnostic  End Class  "'                  BasicResult2101(5' 25)'                  BasicResult2101(7' 25)'                  BasicResult2101(9' 30)'                  BasicResult2101(11' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleDeclareBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Text    Class C      Private Declare Sub Foo1 Lib ""user32.dll"" (s As String) ' one string parameter        Private Declare Sub Foo2 Lib ""user32.dll"" (s As String' t As String) ' two string parameters' should be only 1 diagnostic        Private Declare Function Foo3 Lib ""user32.dll"" (s As StringBuilder) As Integer ' one StringBuilder parameter        Private Declare Function Foo4 Lib ""user32.dll"" (s As StringBuilder' t As StringBuilder) As Integer ' two StringBuilder parameters' should be only 1 diagnostic  End Class  "'                  BasicResult2101(5' 25)'                  BasicResult2101(7' 25)'                  BasicResult2101(9' 30)'                  BasicResult2101(11' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleDeclareBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Text    Class C      Private Declare Sub Foo1 Lib ""user32.dll"" (s As String) ' one string parameter        Private Declare Sub Foo2 Lib ""user32.dll"" (s As String' t As String) ' two string parameters' should be only 1 diagnostic        Private Declare Function Foo3 Lib ""user32.dll"" (s As StringBuilder) As Integer ' one StringBuilder parameter        Private Declare Function Foo4 Lib ""user32.dll"" (s As StringBuilder' t As StringBuilder) As Integer ' two StringBuilder parameters' should be only 1 diagnostic  End Class  "'                  BasicResult2101(5' 25)'                  BasicResult2101(7' 25)'                  BasicResult2101(9' 30)'                  BasicResult2101(11' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleDeclareBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Text    Class C      Private Declare Sub Foo1 Lib ""user32.dll"" (s As String) ' one string parameter        Private Declare Sub Foo2 Lib ""user32.dll"" (s As String' t As String) ' two string parameters' should be only 1 diagnostic        Private Declare Function Foo3 Lib ""user32.dll"" (s As StringBuilder) As Integer ' one StringBuilder parameter        Private Declare Function Foo4 Lib ""user32.dll"" (s As StringBuilder' t As StringBuilder) As Integer ' two StringBuilder parameters' should be only 1 diagnostic  End Class  "'                  BasicResult2101(5' 25)'                  BasicResult2101(7' 25)'                  BasicResult2101(9' 30)'                  BasicResult2101(11' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101SimpleDeclareBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Text    Class C      Private Declare Sub Foo1 Lib ""user32.dll"" (s As String) ' one string parameter        Private Declare Sub Foo2 Lib ""user32.dll"" (s As String' t As String) ' two string parameters' should be only 1 diagnostic        Private Declare Function Foo3 Lib ""user32.dll"" (s As StringBuilder) As Integer ' one StringBuilder parameter        Private Declare Function Foo4 Lib ""user32.dll"" (s As StringBuilder' t As StringBuilder) As Integer ' two StringBuilder parameters' should be only 1 diagnostic  End Class  "'                  BasicResult2101(5' 25)'                  BasicResult2101(7' 25)'                  BasicResult2101(9' 30)'                  BasicResult2101(11' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1([MarshalAs(UnmanagedType.LPWStr)] string s); // marshaling specified on parameter        [DllImport(""user32.dll"")]      private static extern void Foo2([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo3([MarshalAs(UnmanagedType.LPWStr)] string s' [MarshalAs(UnmanagedType.LPWStr)] string t);        [DllImport(""user32.dll"")]      private static extern void Foo4([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPWStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo5([MarshalAs(UnmanagedType.LPWStr)] string s' string t); // un-marshaled second parameter        [DllImport(""user32.dll"")]      private static extern void Foo6([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo7([MarshalAs(UnmanagedType.LPStr)] string s); // marshaled' but as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo8([MarshalAs(UnmanagedType.LPStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo9([MarshalAs(UnmanagedType.LPStr)] string s' [MarshalAs(UnmanagedType.LPStr)] string t); // two parameters marshaled as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo10([MarshalAs(UnmanagedType.LPStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo11([MarshalAs((short)0)] string s);  }  "'                  CSharpResult2101(19' 6)'                  CSharpResult2101(22' 6)'                  CSharpResult2101(26' 38)'                  CSharpResult2101(29' 38)'                  CSharpResult2101(32' 38)'                  CSharpResult2101(32' 81)'                  CSharpResult2101(35' 39)'                  CSharpResult2101(35' 89)'                  CSharpResult2101(38' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1([MarshalAs(UnmanagedType.LPWStr)] string s); // marshaling specified on parameter        [DllImport(""user32.dll"")]      private static extern void Foo2([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo3([MarshalAs(UnmanagedType.LPWStr)] string s' [MarshalAs(UnmanagedType.LPWStr)] string t);        [DllImport(""user32.dll"")]      private static extern void Foo4([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPWStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo5([MarshalAs(UnmanagedType.LPWStr)] string s' string t); // un-marshaled second parameter        [DllImport(""user32.dll"")]      private static extern void Foo6([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo7([MarshalAs(UnmanagedType.LPStr)] string s); // marshaled' but as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo8([MarshalAs(UnmanagedType.LPStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo9([MarshalAs(UnmanagedType.LPStr)] string s' [MarshalAs(UnmanagedType.LPStr)] string t); // two parameters marshaled as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo10([MarshalAs(UnmanagedType.LPStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo11([MarshalAs((short)0)] string s);  }  "'                  CSharpResult2101(19' 6)'                  CSharpResult2101(22' 6)'                  CSharpResult2101(26' 38)'                  CSharpResult2101(29' 38)'                  CSharpResult2101(32' 38)'                  CSharpResult2101(32' 81)'                  CSharpResult2101(35' 39)'                  CSharpResult2101(35' 89)'                  CSharpResult2101(38' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1([MarshalAs(UnmanagedType.LPWStr)] string s); // marshaling specified on parameter        [DllImport(""user32.dll"")]      private static extern void Foo2([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo3([MarshalAs(UnmanagedType.LPWStr)] string s' [MarshalAs(UnmanagedType.LPWStr)] string t);        [DllImport(""user32.dll"")]      private static extern void Foo4([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPWStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo5([MarshalAs(UnmanagedType.LPWStr)] string s' string t); // un-marshaled second parameter        [DllImport(""user32.dll"")]      private static extern void Foo6([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo7([MarshalAs(UnmanagedType.LPStr)] string s); // marshaled' but as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo8([MarshalAs(UnmanagedType.LPStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo9([MarshalAs(UnmanagedType.LPStr)] string s' [MarshalAs(UnmanagedType.LPStr)] string t); // two parameters marshaled as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo10([MarshalAs(UnmanagedType.LPStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo11([MarshalAs((short)0)] string s);  }  "'                  CSharpResult2101(19' 6)'                  CSharpResult2101(22' 6)'                  CSharpResult2101(26' 38)'                  CSharpResult2101(29' 38)'                  CSharpResult2101(32' 38)'                  CSharpResult2101(32' 81)'                  CSharpResult2101(35' 39)'                  CSharpResult2101(35' 89)'                  CSharpResult2101(38' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1([MarshalAs(UnmanagedType.LPWStr)] string s); // marshaling specified on parameter        [DllImport(""user32.dll"")]      private static extern void Foo2([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo3([MarshalAs(UnmanagedType.LPWStr)] string s' [MarshalAs(UnmanagedType.LPWStr)] string t);        [DllImport(""user32.dll"")]      private static extern void Foo4([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPWStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo5([MarshalAs(UnmanagedType.LPWStr)] string s' string t); // un-marshaled second parameter        [DllImport(""user32.dll"")]      private static extern void Foo6([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo7([MarshalAs(UnmanagedType.LPStr)] string s); // marshaled' but as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo8([MarshalAs(UnmanagedType.LPStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo9([MarshalAs(UnmanagedType.LPStr)] string s' [MarshalAs(UnmanagedType.LPStr)] string t); // two parameters marshaled as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo10([MarshalAs(UnmanagedType.LPStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo11([MarshalAs((short)0)] string s);  }  "'                  CSharpResult2101(19' 6)'                  CSharpResult2101(22' 6)'                  CSharpResult2101(26' 38)'                  CSharpResult2101(29' 38)'                  CSharpResult2101(32' 38)'                  CSharpResult2101(32' 81)'                  CSharpResult2101(35' 39)'                  CSharpResult2101(35' 89)'                  CSharpResult2101(38' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1([MarshalAs(UnmanagedType.LPWStr)] string s); // marshaling specified on parameter        [DllImport(""user32.dll"")]      private static extern void Foo2([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo3([MarshalAs(UnmanagedType.LPWStr)] string s' [MarshalAs(UnmanagedType.LPWStr)] string t);        [DllImport(""user32.dll"")]      private static extern void Foo4([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPWStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo5([MarshalAs(UnmanagedType.LPWStr)] string s' string t); // un-marshaled second parameter        [DllImport(""user32.dll"")]      private static extern void Foo6([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo7([MarshalAs(UnmanagedType.LPStr)] string s); // marshaled' but as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo8([MarshalAs(UnmanagedType.LPStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo9([MarshalAs(UnmanagedType.LPStr)] string s' [MarshalAs(UnmanagedType.LPStr)] string t); // two parameters marshaled as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo10([MarshalAs(UnmanagedType.LPStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo11([MarshalAs((short)0)] string s);  }  "'                  CSharpResult2101(19' 6)'                  CSharpResult2101(22' 6)'                  CSharpResult2101(26' 38)'                  CSharpResult2101(29' 38)'                  CSharpResult2101(32' 38)'                  CSharpResult2101(32' 81)'                  CSharpResult2101(35' 39)'                  CSharpResult2101(35' 89)'                  CSharpResult2101(38' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1([MarshalAs(UnmanagedType.LPWStr)] string s); // marshaling specified on parameter        [DllImport(""user32.dll"")]      private static extern void Foo2([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo3([MarshalAs(UnmanagedType.LPWStr)] string s' [MarshalAs(UnmanagedType.LPWStr)] string t);        [DllImport(""user32.dll"")]      private static extern void Foo4([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPWStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo5([MarshalAs(UnmanagedType.LPWStr)] string s' string t); // un-marshaled second parameter        [DllImport(""user32.dll"")]      private static extern void Foo6([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo7([MarshalAs(UnmanagedType.LPStr)] string s); // marshaled' but as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo8([MarshalAs(UnmanagedType.LPStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo9([MarshalAs(UnmanagedType.LPStr)] string s' [MarshalAs(UnmanagedType.LPStr)] string t); // two parameters marshaled as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo10([MarshalAs(UnmanagedType.LPStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo11([MarshalAs((short)0)] string s);  }  "'                  CSharpResult2101(19' 6)'                  CSharpResult2101(22' 6)'                  CSharpResult2101(26' 38)'                  CSharpResult2101(29' 38)'                  CSharpResult2101(32' 38)'                  CSharpResult2101(32' 81)'                  CSharpResult2101(35' 39)'                  CSharpResult2101(35' 89)'                  CSharpResult2101(38' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1([MarshalAs(UnmanagedType.LPWStr)] string s); // marshaling specified on parameter        [DllImport(""user32.dll"")]      private static extern void Foo2([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo3([MarshalAs(UnmanagedType.LPWStr)] string s' [MarshalAs(UnmanagedType.LPWStr)] string t);        [DllImport(""user32.dll"")]      private static extern void Foo4([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPWStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo5([MarshalAs(UnmanagedType.LPWStr)] string s' string t); // un-marshaled second parameter        [DllImport(""user32.dll"")]      private static extern void Foo6([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo7([MarshalAs(UnmanagedType.LPStr)] string s); // marshaled' but as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo8([MarshalAs(UnmanagedType.LPStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo9([MarshalAs(UnmanagedType.LPStr)] string s' [MarshalAs(UnmanagedType.LPStr)] string t); // two parameters marshaled as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo10([MarshalAs(UnmanagedType.LPStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo11([MarshalAs((short)0)] string s);  }  "'                  CSharpResult2101(19' 6)'                  CSharpResult2101(22' 6)'                  CSharpResult2101(26' 38)'                  CSharpResult2101(29' 38)'                  CSharpResult2101(32' 38)'                  CSharpResult2101(32' 81)'                  CSharpResult2101(35' 39)'                  CSharpResult2101(35' 89)'                  CSharpResult2101(38' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1([MarshalAs(UnmanagedType.LPWStr)] string s); // marshaling specified on parameter        [DllImport(""user32.dll"")]      private static extern void Foo2([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo3([MarshalAs(UnmanagedType.LPWStr)] string s' [MarshalAs(UnmanagedType.LPWStr)] string t);        [DllImport(""user32.dll"")]      private static extern void Foo4([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPWStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo5([MarshalAs(UnmanagedType.LPWStr)] string s' string t); // un-marshaled second parameter        [DllImport(""user32.dll"")]      private static extern void Foo6([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo7([MarshalAs(UnmanagedType.LPStr)] string s); // marshaled' but as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo8([MarshalAs(UnmanagedType.LPStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo9([MarshalAs(UnmanagedType.LPStr)] string s' [MarshalAs(UnmanagedType.LPStr)] string t); // two parameters marshaled as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo10([MarshalAs(UnmanagedType.LPStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo11([MarshalAs((short)0)] string s);  }  "'                  CSharpResult2101(19' 6)'                  CSharpResult2101(22' 6)'                  CSharpResult2101(26' 38)'                  CSharpResult2101(29' 38)'                  CSharpResult2101(32' 38)'                  CSharpResult2101(32' 81)'                  CSharpResult2101(35' 39)'                  CSharpResult2101(35' 89)'                  CSharpResult2101(38' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1([MarshalAs(UnmanagedType.LPWStr)] string s); // marshaling specified on parameter        [DllImport(""user32.dll"")]      private static extern void Foo2([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo3([MarshalAs(UnmanagedType.LPWStr)] string s' [MarshalAs(UnmanagedType.LPWStr)] string t);        [DllImport(""user32.dll"")]      private static extern void Foo4([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPWStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo5([MarshalAs(UnmanagedType.LPWStr)] string s' string t); // un-marshaled second parameter        [DllImport(""user32.dll"")]      private static extern void Foo6([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo7([MarshalAs(UnmanagedType.LPStr)] string s); // marshaled' but as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo8([MarshalAs(UnmanagedType.LPStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo9([MarshalAs(UnmanagedType.LPStr)] string s' [MarshalAs(UnmanagedType.LPStr)] string t); // two parameters marshaled as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo10([MarshalAs(UnmanagedType.LPStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo11([MarshalAs((short)0)] string s);  }  "'                  CSharpResult2101(19' 6)'                  CSharpResult2101(22' 6)'                  CSharpResult2101(26' 38)'                  CSharpResult2101(29' 38)'                  CSharpResult2101(32' 38)'                  CSharpResult2101(32' 81)'                  CSharpResult2101(35' 39)'                  CSharpResult2101(35' 89)'                  CSharpResult2101(38' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1([MarshalAs(UnmanagedType.LPWStr)] string s); // marshaling specified on parameter        [DllImport(""user32.dll"")]      private static extern void Foo2([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo3([MarshalAs(UnmanagedType.LPWStr)] string s' [MarshalAs(UnmanagedType.LPWStr)] string t);        [DllImport(""user32.dll"")]      private static extern void Foo4([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPWStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo5([MarshalAs(UnmanagedType.LPWStr)] string s' string t); // un-marshaled second parameter        [DllImport(""user32.dll"")]      private static extern void Foo6([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo7([MarshalAs(UnmanagedType.LPStr)] string s); // marshaled' but as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo8([MarshalAs(UnmanagedType.LPStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo9([MarshalAs(UnmanagedType.LPStr)] string s' [MarshalAs(UnmanagedType.LPStr)] string t); // two parameters marshaled as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo10([MarshalAs(UnmanagedType.LPStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo11([MarshalAs((short)0)] string s);  }  "'                  CSharpResult2101(19' 6)'                  CSharpResult2101(22' 6)'                  CSharpResult2101(26' 38)'                  CSharpResult2101(29' 38)'                  CSharpResult2101(32' 38)'                  CSharpResult2101(32' 81)'                  CSharpResult2101(35' 39)'                  CSharpResult2101(35' 89)'                  CSharpResult2101(38' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1([MarshalAs(UnmanagedType.LPWStr)] string s); // marshaling specified on parameter        [DllImport(""user32.dll"")]      private static extern void Foo2([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo3([MarshalAs(UnmanagedType.LPWStr)] string s' [MarshalAs(UnmanagedType.LPWStr)] string t);        [DllImport(""user32.dll"")]      private static extern void Foo4([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPWStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo5([MarshalAs(UnmanagedType.LPWStr)] string s' string t); // un-marshaled second parameter        [DllImport(""user32.dll"")]      private static extern void Foo6([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo7([MarshalAs(UnmanagedType.LPStr)] string s); // marshaled' but as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo8([MarshalAs(UnmanagedType.LPStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo9([MarshalAs(UnmanagedType.LPStr)] string s' [MarshalAs(UnmanagedType.LPStr)] string t); // two parameters marshaled as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo10([MarshalAs(UnmanagedType.LPStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo11([MarshalAs((short)0)] string s);  }  "'                  CSharpResult2101(19' 6)'                  CSharpResult2101(22' 6)'                  CSharpResult2101(26' 38)'                  CSharpResult2101(29' 38)'                  CSharpResult2101(32' 38)'                  CSharpResult2101(32' 81)'                  CSharpResult2101(35' 39)'                  CSharpResult2101(35' 89)'                  CSharpResult2101(38' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1([MarshalAs(UnmanagedType.LPWStr)] string s); // marshaling specified on parameter        [DllImport(""user32.dll"")]      private static extern void Foo2([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo3([MarshalAs(UnmanagedType.LPWStr)] string s' [MarshalAs(UnmanagedType.LPWStr)] string t);        [DllImport(""user32.dll"")]      private static extern void Foo4([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPWStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo5([MarshalAs(UnmanagedType.LPWStr)] string s' string t); // un-marshaled second parameter        [DllImport(""user32.dll"")]      private static extern void Foo6([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo7([MarshalAs(UnmanagedType.LPStr)] string s); // marshaled' but as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo8([MarshalAs(UnmanagedType.LPStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo9([MarshalAs(UnmanagedType.LPStr)] string s' [MarshalAs(UnmanagedType.LPStr)] string t); // two parameters marshaled as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo10([MarshalAs(UnmanagedType.LPStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo11([MarshalAs((short)0)] string s);  }  "'                  CSharpResult2101(19' 6)'                  CSharpResult2101(22' 6)'                  CSharpResult2101(26' 38)'                  CSharpResult2101(29' 38)'                  CSharpResult2101(32' 38)'                  CSharpResult2101(32' 81)'                  CSharpResult2101(35' 39)'                  CSharpResult2101(35' 89)'                  CSharpResult2101(38' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1([MarshalAs(UnmanagedType.LPWStr)] string s); // marshaling specified on parameter        [DllImport(""user32.dll"")]      private static extern void Foo2([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo3([MarshalAs(UnmanagedType.LPWStr)] string s' [MarshalAs(UnmanagedType.LPWStr)] string t);        [DllImport(""user32.dll"")]      private static extern void Foo4([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPWStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo5([MarshalAs(UnmanagedType.LPWStr)] string s' string t); // un-marshaled second parameter        [DllImport(""user32.dll"")]      private static extern void Foo6([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo7([MarshalAs(UnmanagedType.LPStr)] string s); // marshaled' but as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo8([MarshalAs(UnmanagedType.LPStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo9([MarshalAs(UnmanagedType.LPStr)] string s' [MarshalAs(UnmanagedType.LPStr)] string t); // two parameters marshaled as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo10([MarshalAs(UnmanagedType.LPStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo11([MarshalAs((short)0)] string s);  }  "'                  CSharpResult2101(19' 6)'                  CSharpResult2101(22' 6)'                  CSharpResult2101(26' 38)'                  CSharpResult2101(29' 38)'                  CSharpResult2101(32' 38)'                  CSharpResult2101(32' 81)'                  CSharpResult2101(35' 39)'                  CSharpResult2101(35' 89)'                  CSharpResult2101(38' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1([MarshalAs(UnmanagedType.LPWStr)] string s); // marshaling specified on parameter        [DllImport(""user32.dll"")]      private static extern void Foo2([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo3([MarshalAs(UnmanagedType.LPWStr)] string s' [MarshalAs(UnmanagedType.LPWStr)] string t);        [DllImport(""user32.dll"")]      private static extern void Foo4([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPWStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo5([MarshalAs(UnmanagedType.LPWStr)] string s' string t); // un-marshaled second parameter        [DllImport(""user32.dll"")]      private static extern void Foo6([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo7([MarshalAs(UnmanagedType.LPStr)] string s); // marshaled' but as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo8([MarshalAs(UnmanagedType.LPStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo9([MarshalAs(UnmanagedType.LPStr)] string s' [MarshalAs(UnmanagedType.LPStr)] string t); // two parameters marshaled as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo10([MarshalAs(UnmanagedType.LPStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo11([MarshalAs((short)0)] string s);  }  "'                  CSharpResult2101(19' 6)'                  CSharpResult2101(22' 6)'                  CSharpResult2101(26' 38)'                  CSharpResult2101(29' 38)'                  CSharpResult2101(32' 38)'                  CSharpResult2101(32' 81)'                  CSharpResult2101(35' 39)'                  CSharpResult2101(35' 89)'                  CSharpResult2101(38' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1([MarshalAs(UnmanagedType.LPWStr)] string s); // marshaling specified on parameter        [DllImport(""user32.dll"")]      private static extern void Foo2([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo3([MarshalAs(UnmanagedType.LPWStr)] string s' [MarshalAs(UnmanagedType.LPWStr)] string t);        [DllImport(""user32.dll"")]      private static extern void Foo4([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPWStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo5([MarshalAs(UnmanagedType.LPWStr)] string s' string t); // un-marshaled second parameter        [DllImport(""user32.dll"")]      private static extern void Foo6([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo7([MarshalAs(UnmanagedType.LPStr)] string s); // marshaled' but as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo8([MarshalAs(UnmanagedType.LPStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo9([MarshalAs(UnmanagedType.LPStr)] string s' [MarshalAs(UnmanagedType.LPStr)] string t); // two parameters marshaled as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo10([MarshalAs(UnmanagedType.LPStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo11([MarshalAs((short)0)] string s);  }  "'                  CSharpResult2101(19' 6)'                  CSharpResult2101(22' 6)'                  CSharpResult2101(26' 38)'                  CSharpResult2101(29' 38)'                  CSharpResult2101(32' 38)'                  CSharpResult2101(32' 81)'                  CSharpResult2101(35' 39)'                  CSharpResult2101(35' 89)'                  CSharpResult2101(38' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1([MarshalAs(UnmanagedType.LPWStr)] string s); // marshaling specified on parameter        [DllImport(""user32.dll"")]      private static extern void Foo2([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo3([MarshalAs(UnmanagedType.LPWStr)] string s' [MarshalAs(UnmanagedType.LPWStr)] string t);        [DllImport(""user32.dll"")]      private static extern void Foo4([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPWStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo5([MarshalAs(UnmanagedType.LPWStr)] string s' string t); // un-marshaled second parameter        [DllImport(""user32.dll"")]      private static extern void Foo6([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo7([MarshalAs(UnmanagedType.LPStr)] string s); // marshaled' but as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo8([MarshalAs(UnmanagedType.LPStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo9([MarshalAs(UnmanagedType.LPStr)] string s' [MarshalAs(UnmanagedType.LPStr)] string t); // two parameters marshaled as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo10([MarshalAs(UnmanagedType.LPStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo11([MarshalAs((short)0)] string s);  }  "'                  CSharpResult2101(19' 6)'                  CSharpResult2101(22' 6)'                  CSharpResult2101(26' 38)'                  CSharpResult2101(29' 38)'                  CSharpResult2101(32' 38)'                  CSharpResult2101(32' 81)'                  CSharpResult2101(35' 39)'                  CSharpResult2101(35' 89)'                  CSharpResult2101(38' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1([MarshalAs(UnmanagedType.LPWStr)] string s); // marshaling specified on parameter        [DllImport(""user32.dll"")]      private static extern void Foo2([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo3([MarshalAs(UnmanagedType.LPWStr)] string s' [MarshalAs(UnmanagedType.LPWStr)] string t);        [DllImport(""user32.dll"")]      private static extern void Foo4([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPWStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo5([MarshalAs(UnmanagedType.LPWStr)] string s' string t); // un-marshaled second parameter        [DllImport(""user32.dll"")]      private static extern void Foo6([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo7([MarshalAs(UnmanagedType.LPStr)] string s); // marshaled' but as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo8([MarshalAs(UnmanagedType.LPStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo9([MarshalAs(UnmanagedType.LPStr)] string s' [MarshalAs(UnmanagedType.LPStr)] string t); // two parameters marshaled as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo10([MarshalAs(UnmanagedType.LPStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo11([MarshalAs((short)0)] string s);  }  "'                  CSharpResult2101(19' 6)'                  CSharpResult2101(22' 6)'                  CSharpResult2101(26' 38)'                  CSharpResult2101(29' 38)'                  CSharpResult2101(32' 38)'                  CSharpResult2101(32' 81)'                  CSharpResult2101(35' 39)'                  CSharpResult2101(35' 89)'                  CSharpResult2101(38' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern void Foo1([MarshalAs(UnmanagedType.LPWStr)] string s); // marshaling specified on parameter        [DllImport(""user32.dll"")]      private static extern void Foo2([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo3([MarshalAs(UnmanagedType.LPWStr)] string s' [MarshalAs(UnmanagedType.LPWStr)] string t);        [DllImport(""user32.dll"")]      private static extern void Foo4([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPWStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo5([MarshalAs(UnmanagedType.LPWStr)] string s' string t); // un-marshaled second parameter        [DllImport(""user32.dll"")]      private static extern void Foo6([MarshalAs(UnmanagedType.LPWStr)] StringBuilder s' StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo7([MarshalAs(UnmanagedType.LPStr)] string s); // marshaled' but as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo8([MarshalAs(UnmanagedType.LPStr)] StringBuilder s);        [DllImport(""user32.dll"")]      private static extern void Foo9([MarshalAs(UnmanagedType.LPStr)] string s' [MarshalAs(UnmanagedType.LPStr)] string t); // two parameters marshaled as the wrong type        [DllImport(""user32.dll"")]      private static extern void Foo10([MarshalAs(UnmanagedType.LPStr)] StringBuilder s' [MarshalAs(UnmanagedType.LPStr)] StringBuilder t);        [DllImport(""user32.dll"")]      private static extern void Foo11([MarshalAs((short)0)] string s);  }  "'                  CSharpResult2101(19' 6)'                  CSharpResult2101(22' 6)'                  CSharpResult2101(26' 38)'                  CSharpResult2101(29' 38)'                  CSharpResult2101(32' 38)'                  CSharpResult2101(32' 81)'                  CSharpResult2101(35' 39)'                  CSharpResult2101(35' 89)'                  CSharpResult2101(38' 39));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(<MarshalAs(UnmanagedType.LPWStr)> s As String) ' marshaling specified on parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(<MarshalAs(UnmanagedType.LPWStr)> s As String' <MarshalAs(UnmanagedType.LPWStr)> t As String)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPWStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPWStr)> s As String' t As String) ' un-marshaled second parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo7(<MarshalAs(UnmanagedType.LPStr)> s As String) ' marshaled' but as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo8(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo9(<MarshalAs(UnmanagedType.LPStr)> s As String' <MarshalAs(UnmanagedType.LPStr)> t As String) ' two parameters marshaled as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo10(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo11(<MarshalAs(CShort(0))> s As String)      End Sub  End Class  "'                  BasicResult2101(22' 6)'                  BasicResult2101(26' 6)'                  BasicResult2101(31' 30)'                  BasicResult2101(35' 30)'                  BasicResult2101(39' 30)'                  BasicResult2101(39' 76)'                  BasicResult2101(43' 31)'                  BasicResult2101(43' 84)'                  BasicResult2101(47' 31));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(<MarshalAs(UnmanagedType.LPWStr)> s As String) ' marshaling specified on parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(<MarshalAs(UnmanagedType.LPWStr)> s As String' <MarshalAs(UnmanagedType.LPWStr)> t As String)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPWStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPWStr)> s As String' t As String) ' un-marshaled second parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo7(<MarshalAs(UnmanagedType.LPStr)> s As String) ' marshaled' but as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo8(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo9(<MarshalAs(UnmanagedType.LPStr)> s As String' <MarshalAs(UnmanagedType.LPStr)> t As String) ' two parameters marshaled as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo10(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo11(<MarshalAs(CShort(0))> s As String)      End Sub  End Class  "'                  BasicResult2101(22' 6)'                  BasicResult2101(26' 6)'                  BasicResult2101(31' 30)'                  BasicResult2101(35' 30)'                  BasicResult2101(39' 30)'                  BasicResult2101(39' 76)'                  BasicResult2101(43' 31)'                  BasicResult2101(43' 84)'                  BasicResult2101(47' 31));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(<MarshalAs(UnmanagedType.LPWStr)> s As String) ' marshaling specified on parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(<MarshalAs(UnmanagedType.LPWStr)> s As String' <MarshalAs(UnmanagedType.LPWStr)> t As String)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPWStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPWStr)> s As String' t As String) ' un-marshaled second parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo7(<MarshalAs(UnmanagedType.LPStr)> s As String) ' marshaled' but as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo8(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo9(<MarshalAs(UnmanagedType.LPStr)> s As String' <MarshalAs(UnmanagedType.LPStr)> t As String) ' two parameters marshaled as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo10(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo11(<MarshalAs(CShort(0))> s As String)      End Sub  End Class  "'                  BasicResult2101(22' 6)'                  BasicResult2101(26' 6)'                  BasicResult2101(31' 30)'                  BasicResult2101(35' 30)'                  BasicResult2101(39' 30)'                  BasicResult2101(39' 76)'                  BasicResult2101(43' 31)'                  BasicResult2101(43' 84)'                  BasicResult2101(47' 31));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(<MarshalAs(UnmanagedType.LPWStr)> s As String) ' marshaling specified on parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(<MarshalAs(UnmanagedType.LPWStr)> s As String' <MarshalAs(UnmanagedType.LPWStr)> t As String)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPWStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPWStr)> s As String' t As String) ' un-marshaled second parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo7(<MarshalAs(UnmanagedType.LPStr)> s As String) ' marshaled' but as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo8(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo9(<MarshalAs(UnmanagedType.LPStr)> s As String' <MarshalAs(UnmanagedType.LPStr)> t As String) ' two parameters marshaled as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo10(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo11(<MarshalAs(CShort(0))> s As String)      End Sub  End Class  "'                  BasicResult2101(22' 6)'                  BasicResult2101(26' 6)'                  BasicResult2101(31' 30)'                  BasicResult2101(35' 30)'                  BasicResult2101(39' 30)'                  BasicResult2101(39' 76)'                  BasicResult2101(43' 31)'                  BasicResult2101(43' 84)'                  BasicResult2101(47' 31));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(<MarshalAs(UnmanagedType.LPWStr)> s As String) ' marshaling specified on parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(<MarshalAs(UnmanagedType.LPWStr)> s As String' <MarshalAs(UnmanagedType.LPWStr)> t As String)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPWStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPWStr)> s As String' t As String) ' un-marshaled second parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo7(<MarshalAs(UnmanagedType.LPStr)> s As String) ' marshaled' but as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo8(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo9(<MarshalAs(UnmanagedType.LPStr)> s As String' <MarshalAs(UnmanagedType.LPStr)> t As String) ' two parameters marshaled as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo10(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo11(<MarshalAs(CShort(0))> s As String)      End Sub  End Class  "'                  BasicResult2101(22' 6)'                  BasicResult2101(26' 6)'                  BasicResult2101(31' 30)'                  BasicResult2101(35' 30)'                  BasicResult2101(39' 30)'                  BasicResult2101(39' 76)'                  BasicResult2101(43' 31)'                  BasicResult2101(43' 84)'                  BasicResult2101(47' 31));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(<MarshalAs(UnmanagedType.LPWStr)> s As String) ' marshaling specified on parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(<MarshalAs(UnmanagedType.LPWStr)> s As String' <MarshalAs(UnmanagedType.LPWStr)> t As String)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPWStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPWStr)> s As String' t As String) ' un-marshaled second parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo7(<MarshalAs(UnmanagedType.LPStr)> s As String) ' marshaled' but as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo8(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo9(<MarshalAs(UnmanagedType.LPStr)> s As String' <MarshalAs(UnmanagedType.LPStr)> t As String) ' two parameters marshaled as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo10(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo11(<MarshalAs(CShort(0))> s As String)      End Sub  End Class  "'                  BasicResult2101(22' 6)'                  BasicResult2101(26' 6)'                  BasicResult2101(31' 30)'                  BasicResult2101(35' 30)'                  BasicResult2101(39' 30)'                  BasicResult2101(39' 76)'                  BasicResult2101(43' 31)'                  BasicResult2101(43' 84)'                  BasicResult2101(47' 31));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(<MarshalAs(UnmanagedType.LPWStr)> s As String) ' marshaling specified on parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(<MarshalAs(UnmanagedType.LPWStr)> s As String' <MarshalAs(UnmanagedType.LPWStr)> t As String)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPWStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPWStr)> s As String' t As String) ' un-marshaled second parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo7(<MarshalAs(UnmanagedType.LPStr)> s As String) ' marshaled' but as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo8(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo9(<MarshalAs(UnmanagedType.LPStr)> s As String' <MarshalAs(UnmanagedType.LPStr)> t As String) ' two parameters marshaled as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo10(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo11(<MarshalAs(CShort(0))> s As String)      End Sub  End Class  "'                  BasicResult2101(22' 6)'                  BasicResult2101(26' 6)'                  BasicResult2101(31' 30)'                  BasicResult2101(35' 30)'                  BasicResult2101(39' 30)'                  BasicResult2101(39' 76)'                  BasicResult2101(43' 31)'                  BasicResult2101(43' 84)'                  BasicResult2101(47' 31));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(<MarshalAs(UnmanagedType.LPWStr)> s As String) ' marshaling specified on parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(<MarshalAs(UnmanagedType.LPWStr)> s As String' <MarshalAs(UnmanagedType.LPWStr)> t As String)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPWStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPWStr)> s As String' t As String) ' un-marshaled second parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo7(<MarshalAs(UnmanagedType.LPStr)> s As String) ' marshaled' but as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo8(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo9(<MarshalAs(UnmanagedType.LPStr)> s As String' <MarshalAs(UnmanagedType.LPStr)> t As String) ' two parameters marshaled as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo10(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo11(<MarshalAs(CShort(0))> s As String)      End Sub  End Class  "'                  BasicResult2101(22' 6)'                  BasicResult2101(26' 6)'                  BasicResult2101(31' 30)'                  BasicResult2101(35' 30)'                  BasicResult2101(39' 30)'                  BasicResult2101(39' 76)'                  BasicResult2101(43' 31)'                  BasicResult2101(43' 84)'                  BasicResult2101(47' 31));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(<MarshalAs(UnmanagedType.LPWStr)> s As String) ' marshaling specified on parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(<MarshalAs(UnmanagedType.LPWStr)> s As String' <MarshalAs(UnmanagedType.LPWStr)> t As String)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPWStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPWStr)> s As String' t As String) ' un-marshaled second parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo7(<MarshalAs(UnmanagedType.LPStr)> s As String) ' marshaled' but as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo8(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo9(<MarshalAs(UnmanagedType.LPStr)> s As String' <MarshalAs(UnmanagedType.LPStr)> t As String) ' two parameters marshaled as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo10(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo11(<MarshalAs(CShort(0))> s As String)      End Sub  End Class  "'                  BasicResult2101(22' 6)'                  BasicResult2101(26' 6)'                  BasicResult2101(31' 30)'                  BasicResult2101(35' 30)'                  BasicResult2101(39' 30)'                  BasicResult2101(39' 76)'                  BasicResult2101(43' 31)'                  BasicResult2101(43' 84)'                  BasicResult2101(47' 31));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(<MarshalAs(UnmanagedType.LPWStr)> s As String) ' marshaling specified on parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(<MarshalAs(UnmanagedType.LPWStr)> s As String' <MarshalAs(UnmanagedType.LPWStr)> t As String)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPWStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPWStr)> s As String' t As String) ' un-marshaled second parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo7(<MarshalAs(UnmanagedType.LPStr)> s As String) ' marshaled' but as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo8(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo9(<MarshalAs(UnmanagedType.LPStr)> s As String' <MarshalAs(UnmanagedType.LPStr)> t As String) ' two parameters marshaled as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo10(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo11(<MarshalAs(CShort(0))> s As String)      End Sub  End Class  "'                  BasicResult2101(22' 6)'                  BasicResult2101(26' 6)'                  BasicResult2101(31' 30)'                  BasicResult2101(35' 30)'                  BasicResult2101(39' 30)'                  BasicResult2101(39' 76)'                  BasicResult2101(43' 31)'                  BasicResult2101(43' 84)'                  BasicResult2101(47' 31));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(<MarshalAs(UnmanagedType.LPWStr)> s As String) ' marshaling specified on parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(<MarshalAs(UnmanagedType.LPWStr)> s As String' <MarshalAs(UnmanagedType.LPWStr)> t As String)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPWStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPWStr)> s As String' t As String) ' un-marshaled second parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo7(<MarshalAs(UnmanagedType.LPStr)> s As String) ' marshaled' but as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo8(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo9(<MarshalAs(UnmanagedType.LPStr)> s As String' <MarshalAs(UnmanagedType.LPStr)> t As String) ' two parameters marshaled as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo10(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo11(<MarshalAs(CShort(0))> s As String)      End Sub  End Class  "'                  BasicResult2101(22' 6)'                  BasicResult2101(26' 6)'                  BasicResult2101(31' 30)'                  BasicResult2101(35' 30)'                  BasicResult2101(39' 30)'                  BasicResult2101(39' 76)'                  BasicResult2101(43' 31)'                  BasicResult2101(43' 84)'                  BasicResult2101(47' 31));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(<MarshalAs(UnmanagedType.LPWStr)> s As String) ' marshaling specified on parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(<MarshalAs(UnmanagedType.LPWStr)> s As String' <MarshalAs(UnmanagedType.LPWStr)> t As String)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPWStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPWStr)> s As String' t As String) ' un-marshaled second parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo7(<MarshalAs(UnmanagedType.LPStr)> s As String) ' marshaled' but as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo8(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo9(<MarshalAs(UnmanagedType.LPStr)> s As String' <MarshalAs(UnmanagedType.LPStr)> t As String) ' two parameters marshaled as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo10(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo11(<MarshalAs(CShort(0))> s As String)      End Sub  End Class  "'                  BasicResult2101(22' 6)'                  BasicResult2101(26' 6)'                  BasicResult2101(31' 30)'                  BasicResult2101(35' 30)'                  BasicResult2101(39' 30)'                  BasicResult2101(39' 76)'                  BasicResult2101(43' 31)'                  BasicResult2101(43' 84)'                  BasicResult2101(47' 31));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(<MarshalAs(UnmanagedType.LPWStr)> s As String) ' marshaling specified on parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(<MarshalAs(UnmanagedType.LPWStr)> s As String' <MarshalAs(UnmanagedType.LPWStr)> t As String)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPWStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPWStr)> s As String' t As String) ' un-marshaled second parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo7(<MarshalAs(UnmanagedType.LPStr)> s As String) ' marshaled' but as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo8(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo9(<MarshalAs(UnmanagedType.LPStr)> s As String' <MarshalAs(UnmanagedType.LPStr)> t As String) ' two parameters marshaled as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo10(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo11(<MarshalAs(CShort(0))> s As String)      End Sub  End Class  "'                  BasicResult2101(22' 6)'                  BasicResult2101(26' 6)'                  BasicResult2101(31' 30)'                  BasicResult2101(35' 30)'                  BasicResult2101(39' 30)'                  BasicResult2101(39' 76)'                  BasicResult2101(43' 31)'                  BasicResult2101(43' 84)'                  BasicResult2101(47' 31));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(<MarshalAs(UnmanagedType.LPWStr)> s As String) ' marshaling specified on parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(<MarshalAs(UnmanagedType.LPWStr)> s As String' <MarshalAs(UnmanagedType.LPWStr)> t As String)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPWStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPWStr)> s As String' t As String) ' un-marshaled second parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo7(<MarshalAs(UnmanagedType.LPStr)> s As String) ' marshaled' but as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo8(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo9(<MarshalAs(UnmanagedType.LPStr)> s As String' <MarshalAs(UnmanagedType.LPStr)> t As String) ' two parameters marshaled as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo10(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo11(<MarshalAs(CShort(0))> s As String)      End Sub  End Class  "'                  BasicResult2101(22' 6)'                  BasicResult2101(26' 6)'                  BasicResult2101(31' 30)'                  BasicResult2101(35' 30)'                  BasicResult2101(39' 30)'                  BasicResult2101(39' 76)'                  BasicResult2101(43' 31)'                  BasicResult2101(43' 84)'                  BasicResult2101(47' 31));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(<MarshalAs(UnmanagedType.LPWStr)> s As String) ' marshaling specified on parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(<MarshalAs(UnmanagedType.LPWStr)> s As String' <MarshalAs(UnmanagedType.LPWStr)> t As String)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPWStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPWStr)> s As String' t As String) ' un-marshaled second parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo7(<MarshalAs(UnmanagedType.LPStr)> s As String) ' marshaled' but as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo8(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo9(<MarshalAs(UnmanagedType.LPStr)> s As String' <MarshalAs(UnmanagedType.LPStr)> t As String) ' two parameters marshaled as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo10(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo11(<MarshalAs(CShort(0))> s As String)      End Sub  End Class  "'                  BasicResult2101(22' 6)'                  BasicResult2101(26' 6)'                  BasicResult2101(31' 30)'                  BasicResult2101(35' 30)'                  BasicResult2101(39' 30)'                  BasicResult2101(39' 76)'                  BasicResult2101(43' 31)'                  BasicResult2101(43' 84)'                  BasicResult2101(47' 31));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(<MarshalAs(UnmanagedType.LPWStr)> s As String) ' marshaling specified on parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(<MarshalAs(UnmanagedType.LPWStr)> s As String' <MarshalAs(UnmanagedType.LPWStr)> t As String)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPWStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPWStr)> s As String' t As String) ' un-marshaled second parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo7(<MarshalAs(UnmanagedType.LPStr)> s As String) ' marshaled' but as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo8(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo9(<MarshalAs(UnmanagedType.LPStr)> s As String' <MarshalAs(UnmanagedType.LPStr)> t As String) ' two parameters marshaled as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo10(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo11(<MarshalAs(CShort(0))> s As String)      End Sub  End Class  "'                  BasicResult2101(22' 6)'                  BasicResult2101(26' 6)'                  BasicResult2101(31' 30)'                  BasicResult2101(35' 30)'                  BasicResult2101(39' 30)'                  BasicResult2101(39' 76)'                  BasicResult2101(43' 31)'                  BasicResult2101(43' 84)'                  BasicResult2101(47' 31));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(<MarshalAs(UnmanagedType.LPWStr)> s As String) ' marshaling specified on parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(<MarshalAs(UnmanagedType.LPWStr)> s As String' <MarshalAs(UnmanagedType.LPWStr)> t As String)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPWStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPWStr)> s As String' t As String) ' un-marshaled second parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo7(<MarshalAs(UnmanagedType.LPStr)> s As String) ' marshaled' but as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo8(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo9(<MarshalAs(UnmanagedType.LPStr)> s As String' <MarshalAs(UnmanagedType.LPStr)> t As String) ' two parameters marshaled as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo10(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo11(<MarshalAs(CShort(0))> s As String)      End Sub  End Class  "'                  BasicResult2101(22' 6)'                  BasicResult2101(26' 6)'                  BasicResult2101(31' 30)'                  BasicResult2101(35' 30)'                  BasicResult2101(39' 30)'                  BasicResult2101(39' 76)'                  BasicResult2101(43' 31)'                  BasicResult2101(43' 84)'                  BasicResult2101(47' 31));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ParameterMarshaledBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Sub Foo1(<MarshalAs(UnmanagedType.LPWStr)> s As String) ' marshaling specified on parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo2(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo3(<MarshalAs(UnmanagedType.LPWStr)> s As String' <MarshalAs(UnmanagedType.LPWStr)> t As String)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo4(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPWStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPWStr)> s As String' t As String) ' un-marshaled second parameter      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPWStr)> s As StringBuilder' t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo7(<MarshalAs(UnmanagedType.LPStr)> s As String) ' marshaled' but as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo8(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo9(<MarshalAs(UnmanagedType.LPStr)> s As String' <MarshalAs(UnmanagedType.LPStr)> t As String) ' two parameters marshaled as the wrong type      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo10(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder' <MarshalAs(UnmanagedType.LPStr)> t As StringBuilder)      End Sub        <DllImport(""user32.dll"")>      Private Shared Sub Foo11(<MarshalAs(CShort(0))> s As String)      End Sub  End Class  "'                  BasicResult2101(22' 6)'                  BasicResult2101(26' 6)'                  BasicResult2101(31' 30)'                  BasicResult2101(35' 30)'                  BasicResult2101(39' 30)'                  BasicResult2101(39' 76)'                  BasicResult2101(43' 31)'                  BasicResult2101(43' 84)'                  BasicResult2101(47' 31));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101CharSetCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll""' CharSet = CharSet.Auto)]      private static extern void Foo1(string s); // wrong marshaling        [DllImport(""user32.dll""' CharSet = CharSet.Auto)]      private static extern void Foo2(StringBuilder s);        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo3(string s); // correct marshaling        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo4(StringBuilder s);        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo5([MarshalAs(UnmanagedTypes.LPStr)] string s); // correct marshaling on method' not on parameter        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo6([MarshalAs(UnmanagedTypes.LPStr)] StringBuilder s);  }  "'                  CSharpResult2101(7' 6)'                  CSharpResult2101(10' 6)'                  CSharpResult2101(20' 38)'                  CSharpResult2101(23' 38));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101CharSetCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll""' CharSet = CharSet.Auto)]      private static extern void Foo1(string s); // wrong marshaling        [DllImport(""user32.dll""' CharSet = CharSet.Auto)]      private static extern void Foo2(StringBuilder s);        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo3(string s); // correct marshaling        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo4(StringBuilder s);        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo5([MarshalAs(UnmanagedTypes.LPStr)] string s); // correct marshaling on method' not on parameter        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo6([MarshalAs(UnmanagedTypes.LPStr)] StringBuilder s);  }  "'                  CSharpResult2101(7' 6)'                  CSharpResult2101(10' 6)'                  CSharpResult2101(20' 38)'                  CSharpResult2101(23' 38));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101CharSetCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll""' CharSet = CharSet.Auto)]      private static extern void Foo1(string s); // wrong marshaling        [DllImport(""user32.dll""' CharSet = CharSet.Auto)]      private static extern void Foo2(StringBuilder s);        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo3(string s); // correct marshaling        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo4(StringBuilder s);        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo5([MarshalAs(UnmanagedTypes.LPStr)] string s); // correct marshaling on method' not on parameter        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo6([MarshalAs(UnmanagedTypes.LPStr)] StringBuilder s);  }  "'                  CSharpResult2101(7' 6)'                  CSharpResult2101(10' 6)'                  CSharpResult2101(20' 38)'                  CSharpResult2101(23' 38));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101CharSetCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll""' CharSet = CharSet.Auto)]      private static extern void Foo1(string s); // wrong marshaling        [DllImport(""user32.dll""' CharSet = CharSet.Auto)]      private static extern void Foo2(StringBuilder s);        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo3(string s); // correct marshaling        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo4(StringBuilder s);        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo5([MarshalAs(UnmanagedTypes.LPStr)] string s); // correct marshaling on method' not on parameter        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo6([MarshalAs(UnmanagedTypes.LPStr)] StringBuilder s);  }  "'                  CSharpResult2101(7' 6)'                  CSharpResult2101(10' 6)'                  CSharpResult2101(20' 38)'                  CSharpResult2101(23' 38));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101CharSetCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll""' CharSet = CharSet.Auto)]      private static extern void Foo1(string s); // wrong marshaling        [DllImport(""user32.dll""' CharSet = CharSet.Auto)]      private static extern void Foo2(StringBuilder s);        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo3(string s); // correct marshaling        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo4(StringBuilder s);        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo5([MarshalAs(UnmanagedTypes.LPStr)] string s); // correct marshaling on method' not on parameter        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo6([MarshalAs(UnmanagedTypes.LPStr)] StringBuilder s);  }  "'                  CSharpResult2101(7' 6)'                  CSharpResult2101(10' 6)'                  CSharpResult2101(20' 38)'                  CSharpResult2101(23' 38));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101CharSetCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll""' CharSet = CharSet.Auto)]      private static extern void Foo1(string s); // wrong marshaling        [DllImport(""user32.dll""' CharSet = CharSet.Auto)]      private static extern void Foo2(StringBuilder s);        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo3(string s); // correct marshaling        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo4(StringBuilder s);        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo5([MarshalAs(UnmanagedTypes.LPStr)] string s); // correct marshaling on method' not on parameter        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo6([MarshalAs(UnmanagedTypes.LPStr)] StringBuilder s);  }  "'                  CSharpResult2101(7' 6)'                  CSharpResult2101(10' 6)'                  CSharpResult2101(20' 38)'                  CSharpResult2101(23' 38));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101CharSetCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll""' CharSet = CharSet.Auto)]      private static extern void Foo1(string s); // wrong marshaling        [DllImport(""user32.dll""' CharSet = CharSet.Auto)]      private static extern void Foo2(StringBuilder s);        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo3(string s); // correct marshaling        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo4(StringBuilder s);        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo5([MarshalAs(UnmanagedTypes.LPStr)] string s); // correct marshaling on method' not on parameter        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo6([MarshalAs(UnmanagedTypes.LPStr)] StringBuilder s);  }  "'                  CSharpResult2101(7' 6)'                  CSharpResult2101(10' 6)'                  CSharpResult2101(20' 38)'                  CSharpResult2101(23' 38));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101CharSetCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll""' CharSet = CharSet.Auto)]      private static extern void Foo1(string s); // wrong marshaling        [DllImport(""user32.dll""' CharSet = CharSet.Auto)]      private static extern void Foo2(StringBuilder s);        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo3(string s); // correct marshaling        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo4(StringBuilder s);        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo5([MarshalAs(UnmanagedTypes.LPStr)] string s); // correct marshaling on method' not on parameter        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern void Foo6([MarshalAs(UnmanagedTypes.LPStr)] StringBuilder s);  }  "'                  CSharpResult2101(7' 6)'                  CSharpResult2101(10' 6)'                  CSharpResult2101(20' 38)'                  CSharpResult2101(23' 38));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101CharSetBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll""' CharSet := CharSet.Auto)>      Private Shared Sub Foo1(s As String) ' wrong marshaling      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Auto)>      Private Shared Sub Foo2(s As StringBuilder)      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo3(s As String) ' correct marshaling      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo4(s As StringBuilder)      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPStr)> s As String) ' correct marshaling on method' not on parameter      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(23' 30)'                  BasicResult2101(27' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101CharSetBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll""' CharSet := CharSet.Auto)>      Private Shared Sub Foo1(s As String) ' wrong marshaling      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Auto)>      Private Shared Sub Foo2(s As StringBuilder)      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo3(s As String) ' correct marshaling      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo4(s As StringBuilder)      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPStr)> s As String) ' correct marshaling on method' not on parameter      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(23' 30)'                  BasicResult2101(27' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101CharSetBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll""' CharSet := CharSet.Auto)>      Private Shared Sub Foo1(s As String) ' wrong marshaling      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Auto)>      Private Shared Sub Foo2(s As StringBuilder)      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo3(s As String) ' correct marshaling      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo4(s As StringBuilder)      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPStr)> s As String) ' correct marshaling on method' not on parameter      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(23' 30)'                  BasicResult2101(27' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101CharSetBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll""' CharSet := CharSet.Auto)>      Private Shared Sub Foo1(s As String) ' wrong marshaling      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Auto)>      Private Shared Sub Foo2(s As StringBuilder)      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo3(s As String) ' correct marshaling      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo4(s As StringBuilder)      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPStr)> s As String) ' correct marshaling on method' not on parameter      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(23' 30)'                  BasicResult2101(27' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101CharSetBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll""' CharSet := CharSet.Auto)>      Private Shared Sub Foo1(s As String) ' wrong marshaling      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Auto)>      Private Shared Sub Foo2(s As StringBuilder)      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo3(s As String) ' correct marshaling      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo4(s As StringBuilder)      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPStr)> s As String) ' correct marshaling on method' not on parameter      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(23' 30)'                  BasicResult2101(27' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101CharSetBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll""' CharSet := CharSet.Auto)>      Private Shared Sub Foo1(s As String) ' wrong marshaling      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Auto)>      Private Shared Sub Foo2(s As StringBuilder)      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo3(s As String) ' correct marshaling      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo4(s As StringBuilder)      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPStr)> s As String) ' correct marshaling on method' not on parameter      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(23' 30)'                  BasicResult2101(27' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101CharSetBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll""' CharSet := CharSet.Auto)>      Private Shared Sub Foo1(s As String) ' wrong marshaling      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Auto)>      Private Shared Sub Foo2(s As StringBuilder)      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo3(s As String) ' correct marshaling      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo4(s As StringBuilder)      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPStr)> s As String) ' correct marshaling on method' not on parameter      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(23' 30)'                  BasicResult2101(27' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101CharSetBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll""' CharSet := CharSet.Auto)>      Private Shared Sub Foo1(s As String) ' wrong marshaling      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Auto)>      Private Shared Sub Foo2(s As StringBuilder)      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo3(s As String) ' correct marshaling      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo4(s As StringBuilder)      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo5(<MarshalAs(UnmanagedType.LPStr)> s As String) ' correct marshaling on method' not on parameter      End Sub        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Sub Foo6(<MarshalAs(UnmanagedType.LPStr)> s As StringBuilder)      End Sub  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(23' 30)'                  BasicResult2101(27' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ReturnTypeCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern string Foo1(); // wrong marshaling on return type        [DllImport(""user32.dll"")]      private static extern StringBuilder Foo2();        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern string Foo3(); // correct marshaling on return type        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern StringBuilder Foo4();  }  "'                  CSharpResult2101(7' 6)'                  CSharpResult2101(10' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ReturnTypeCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern string Foo1(); // wrong marshaling on return type        [DllImport(""user32.dll"")]      private static extern StringBuilder Foo2();        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern string Foo3(); // correct marshaling on return type        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern StringBuilder Foo4();  }  "'                  CSharpResult2101(7' 6)'                  CSharpResult2101(10' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ReturnTypeCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern string Foo1(); // wrong marshaling on return type        [DllImport(""user32.dll"")]      private static extern StringBuilder Foo2();        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern string Foo3(); // correct marshaling on return type        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern StringBuilder Foo4();  }  "'                  CSharpResult2101(7' 6)'                  CSharpResult2101(10' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ReturnTypeCSharpTest,The following statement contains a magic number: VerifyCSharp(@"  using System.Runtime.InteropServices;  using System.Text;    class C  {      [DllImport(""user32.dll"")]      private static extern string Foo1(); // wrong marshaling on return type        [DllImport(""user32.dll"")]      private static extern StringBuilder Foo2();        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern string Foo3(); // correct marshaling on return type        [DllImport(""user32.dll""' CharSet = CharSet.Unicode)]      private static extern StringBuilder Foo4();  }  "'                  CSharpResult2101(7' 6)'                  CSharpResult2101(10' 6));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ReturnTypeBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Function Foo1() As String ' wrong marshaling on return type      End Function        <DllImport(""user32.dll"")>      Private Shared Function Foo2() As StringBuilder      End Function        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Function Foo3() As String ' correct marshaling on return type      End Function        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Function Foo4() As StringBuilder      End Function        Private Declare Function Foo5 Lib ""user32.dll"" () As String  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(22' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ReturnTypeBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Function Foo1() As String ' wrong marshaling on return type      End Function        <DllImport(""user32.dll"")>      Private Shared Function Foo2() As StringBuilder      End Function        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Function Foo3() As String ' correct marshaling on return type      End Function        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Function Foo4() As StringBuilder      End Function        Private Declare Function Foo5 Lib ""user32.dll"" () As String  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(22' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ReturnTypeBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Function Foo1() As String ' wrong marshaling on return type      End Function        <DllImport(""user32.dll"")>      Private Shared Function Foo2() As StringBuilder      End Function        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Function Foo3() As String ' correct marshaling on return type      End Function        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Function Foo4() As StringBuilder      End Function        Private Declare Function Foo5 Lib ""user32.dll"" () As String  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(22' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ReturnTypeBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Function Foo1() As String ' wrong marshaling on return type      End Function        <DllImport(""user32.dll"")>      Private Shared Function Foo2() As StringBuilder      End Function        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Function Foo3() As String ' correct marshaling on return type      End Function        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Function Foo4() As StringBuilder      End Function        Private Declare Function Foo5 Lib ""user32.dll"" () As String  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(22' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ReturnTypeBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Function Foo1() As String ' wrong marshaling on return type      End Function        <DllImport(""user32.dll"")>      Private Shared Function Foo2() As StringBuilder      End Function        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Function Foo3() As String ' correct marshaling on return type      End Function        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Function Foo4() As StringBuilder      End Function        Private Declare Function Foo5 Lib ""user32.dll"" () As String  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(22' 30));
Magic Number,Microsoft.CodeAnalysis.UnitTests.Interoperability,PInvokeDiagnosticAnalyzerTests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Interoperability\PInvokeDiagnosticAnalyzerTests.cs,CA2101ReturnTypeBasicTest,The following statement contains a magic number: VerifyBasic(@"  Imports System.Runtime.InteropServices  Imports System.Text    Class C      <DllImport(""user32.dll"")>      Private Shared Function Foo1() As String ' wrong marshaling on return type      End Function        <DllImport(""user32.dll"")>      Private Shared Function Foo2() As StringBuilder      End Function        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Function Foo3() As String ' correct marshaling on return type      End Function        <DllImport(""user32.dll""' CharSet := CharSet.Unicode)>      Private Shared Function Foo4() As StringBuilder      End Function        Private Declare Function Foo5 Lib ""user32.dll"" () As String  End Class  "'                  BasicResult2101(6' 6)'                  BasicResult2101(10' 6)'                  BasicResult2101(22' 30));
Duplicate Code,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_NoDiagnostic_GetterVisibilityTest,The method contains a code clone-set at the following line numbers (starting from the method definition): ((23' 45)' (58' 80))
Duplicate Code,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_NoDiagnostic_GetterVisibilityTest,The method contains a code clone-set at the following line numbers (starting from the method definition): ((33' 56)' (103' 126))
Duplicate Code,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_NoDiagnostic_ConstructorVisibilityTest,The method contains a code clone-set at the following line numbers (starting from the method definition): ((144' 165)' (172' 193)' (200' 221)' (228' 249))
Duplicate Code,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_NoDiagnostic_ConstructorVisibilityTest,The method contains a code clone-set at the following line numbers (starting from the method definition): ((144' 163)' (256' 275)' (172' 191)' (200' 219)' (228' 247))
Duplicate Code,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,CSharp_CA1019_NoDiagnostic_NestedVisibilityTest,The method contains a code clone-set at the following line numbers (starting from the method definition): ((6' 38)' (52' 84))
Duplicate Code,Microsoft.CodeAnalysis.UnitTests,CA1019Tests,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\FxCop\Test\Design\CA1019Tests.cs,VisualBasic_CA1019_NoDiagnostic_NestedVisibilityTest,The method contains a code clone-set at the following line numbers (starting from the method definition): ((6' 39)' (51' 84))
