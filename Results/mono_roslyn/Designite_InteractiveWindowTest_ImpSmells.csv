Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Roslyn.Test.Utilities,AssertEqualityComparer<T>,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Utilities\AssertEx.cs,Equals,Cyclomatic complexity of the method is 12
Long Parameter List,Roslyn.Test.Utilities,AssertEx,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Utilities\AssertEx.cs,Equal,The method has 5 parameters. Parameters: expected' actual' comparer' message' itemSeparator
Long Parameter List,Roslyn.Test.Utilities,AssertEx,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Utilities\AssertEx.cs,Equal,The method has 5 parameters. Parameters: expected' actual' comparer' message' itemSeparator
Long Parameter List,Roslyn.Test.Utilities,AssertEx,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Utilities\AssertEx.cs,Equal,The method has 6 parameters. Parameters: expected' actual' comparer' message' itemSeparator' itemInspector
Long Parameter List,Roslyn.Test.Utilities,AssertEx,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Utilities\AssertEx.cs,SetEqual,The method has 5 parameters. Parameters: expected' actual' comparer' message' itemSeparator
Long Parameter List,Roslyn.Test.Utilities,AssertEx,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Utilities\AssertEx.cs,AssertEqualToleratingWhitespaceDifferences,The method has 5 parameters. Parameters: expected' actual' escapeQuotes' expectedValueSourcePath' expectedValueSourceLine
Long Parameter List,Roslyn.Test.Utilities,AssertEx,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Utilities\AssertEx.cs,GetAssertMessage,The method has 5 parameters. Parameters: expected' actual' escapeQuotes' expectedValueSourcePath' expectedValueSourceLine
Long Parameter List,Roslyn.Test.Utilities,AssertEx,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Utilities\AssertEx.cs,GetAssertMessage,The method has 5 parameters. Parameters: expected' actual' escapeQuotes' expectedValueSourcePath' expectedValueSourceLine
Long Parameter List,Roslyn.Test.Utilities,AssertEx,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Utilities\AssertEx.cs,GetAssertMessage,The method has 7 parameters. Parameters: expected' actual' comparer' itemInspector' itemSeparator' expectedValueSourcePath' expectedValueSourceLine
Long Parameter List,Roslyn.Test.Utilities,AssertEx,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Utilities\AssertEx.cs,TryGenerateExpectedSourceFielAndGetDiffLink,The method has 5 parameters. Parameters: actualString' expectedLineCount' expectedValueSourcePath' expectedValueSourceLine' link
Long Parameter List,Microsoft.CodeAnalysis.Test.Utilities,DiffUtil,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Utilities\DiffUtil.cs,DiffReport,The method has 5 parameters. Parameters: expected' actual' comparer' toString' separator
Long Statement,Roslyn.Test.Utilities,AssertEx,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Utilities\AssertEx.cs,SetEqual,The length of the statement  "            Assert.True(expectedSet.SetEquals(actual)' string.Format("Expected: {0}\nActual: {1}"' ToString(expected)' ToString(actual))); " is 126.
Long Statement,Roslyn.Test.Utilities,AssertEx,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Utilities\AssertEx.cs,GetAssertMessage,The length of the statement  "            return GetAssertMessage(DiffUtil.Lines(expected)' DiffUtil.Lines(actual)' escapeQuotes' expectedValueSourcePath' expectedValueSourceLine); " is 138.
Long Statement,Roslyn.Test.Utilities,AssertEx,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Utilities\AssertEx.cs,GetAssertMessage,The length of the statement  "            return GetAssertMessage(expected' actual' itemInspector: itemInspector' itemSeparator: "\r\n"' expectedValueSourcePath: expectedValueSourcePath' expectedValueSourceLine: expectedValueSourceLine); " is 195.
Long Statement,Roslyn.Test.Utilities,AssertEx,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Utilities\AssertEx.cs,GetAssertMessage,The length of the statement  "            if (TryGenerateExpectedSourceFielAndGetDiffLink(actualString' expected.Count()' expectedValueSourcePath' expectedValueSourceLine' out link)) " is 140.
Long Statement,Roslyn.Test.Utilities,AssertEx,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Utilities\AssertEx.cs,TryGenerateExpectedSourceFielAndGetDiffLink,The length of the statement  "                File.WriteAllText(compareCmd' string.Format("\"{0}\" \"{1}\" \"{2}\""' s_diffToolPath' actualFile' expectedValueSourcePath)); " is 125.
Long Statement,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,MockSnapshot,The length of the statement  "            snapshotMock.Setup(m => m.GetText(It.IsAny<int>()' It.IsAny<int>())).Returns<int' int>((start' length) => content.Substring(start' length)); " is 140.
Long Statement,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The length of the statement  "            cmd = commands.TryParseCommand(new SnapshotSpan(s1' Span.FromBounds(0' 0))' out prefixSpan' out commandSpan' out argsSpan); " is 123.
Long Statement,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The length of the statement  "            cmd = commands.TryParseCommand(new SnapshotSpan(s1' Span.FromBounds(0' 1))' out prefixSpan' out commandSpan' out argsSpan); " is 123.
Long Statement,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The length of the statement  "            cmd = commands.TryParseCommand(new SnapshotSpan(s1' Span.FromBounds(0' 2))' out prefixSpan' out commandSpan' out argsSpan); " is 123.
Long Statement,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The length of the statement  "            cmd = commands.TryParseCommand(new SnapshotSpan(s1' Span.FromBounds(0' 3))' out prefixSpan' out commandSpan' out argsSpan); " is 123.
Long Statement,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The length of the statement  "            cmd = commands.TryParseCommand(new SnapshotSpan(s1' Span.FromBounds(0' 4))' out prefixSpan' out commandSpan' out argsSpan); " is 123.
Long Statement,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The length of the statement  "            cmd = commands.TryParseCommand(new SnapshotSpan(s1' Span.FromBounds(0' 5))' out prefixSpan' out commandSpan' out argsSpan); " is 123.
Empty Catch Block,Microsoft.VisualStudio.InteractiveWindow.UnitTests,TestWaitIndicator,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\TestWaitIndicator.cs,Wait,The method has an empty catch block.
Magic Number,Roslyn.Test.Utilities,WaitHelper,C:\research\architectureSmells\repos\mono_roslyn\src\EditorFeatures\TestUtilities\Async\WaitHelper.cs,PumpingWaitAll,The following statement contains a magic number: var smallTimeout = TimeSpan.FromMilliseconds(10);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: cmd = commands.TryParseCommand(new SnapshotSpan(s1' Span.FromBounds(0' 2))' out prefixSpan' out commandSpan' out argsSpan);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(2' commandSpan.End);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(2' argsSpan.Start);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(2' argsSpan.End);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: cmd = commands.TryParseCommand(new SnapshotSpan(s1' Span.FromBounds(0' 3))' out prefixSpan' out commandSpan' out argsSpan);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(3' commandSpan.End);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(3' argsSpan.Start);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(3' argsSpan.End);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: cmd = commands.TryParseCommand(new SnapshotSpan(s1' Span.FromBounds(0' 4))' out prefixSpan' out commandSpan' out argsSpan);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(4' commandSpan.End);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(4' argsSpan.Start);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(4' argsSpan.End);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: cmd = commands.TryParseCommand(new SnapshotSpan(s1' Span.FromBounds(0' 5))' out prefixSpan' out commandSpan' out argsSpan);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(4' commandSpan.End);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(5' argsSpan.Start);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(5' argsSpan.End);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(4' commandSpan.End);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(5' argsSpan.Start);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(14' argsSpan.End);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(2' prefixSpan.Start);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(3' prefixSpan.End);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(3' commandSpan.Start);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(6' commandSpan.End);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(9' argsSpan.Start);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(9' argsSpan.End);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(2' prefixSpan.Start);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(3' prefixSpan.End);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(6' commandSpan.Start);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(9' commandSpan.End);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(11' argsSpan.Start);
Magic Number,Microsoft.VisualStudio.InteractiveWindow.UnitTests,InteractiveWindowTests,C:\research\architectureSmells\repos\mono_roslyn\src\InteractiveWindow\EditorTest\InteractiveWindowTests.cs,InteractiveWindow__CommandParsing,The following statement contains a magic number: Assert.Equal(15' argsSpan.End);
Missing Default,Microsoft.CodeAnalysis.Test.Utilities,LCS<T>,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Utilities\DiffUtil.cs,CalculateDiff,The following switch statement is missing a default case: switch (edit.Kind)                      {                          case EditKind.Delete:                              yield return "--> " + toString(sequenceA[edit.IndexA]);                              break;                            case EditKind.Insert:                              yield return "++> " + toString(sequenceB[edit.IndexB]);                              break;                            case EditKind.Update:                              yield return "    " + toString(sequenceB[edit.IndexB]);                              break;                      }
