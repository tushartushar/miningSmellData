Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Roslyn.Hosting.Diagnostics.PerfMargin,PerfEventActivityLogger,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Diagnostics\PerfMargin\PerfEventActivityLogger.cs,LogBlockEnd,The method has 5 parameters. Parameters: functionId' logMessage' uniquePairId' delta' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Internal.Log,TraceLogger,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Diagnostics\TraceLogger.cs,LogBlockEnd,The method has 5 parameters. Parameters: functionId' logMessage' uniquePairId' delta' cancellationToken
Long Statement,Roslyn.Hosting.Diagnostics.PerfMargin,StatusIndicator,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Diagnostics\PerfMargin\StatusIndicator.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Roslyn.Hosting.Diagnostics;V42.42.42.42;component/perfmargin/statusindicator.xam" + " is 129.
Long Statement,Roslyn.Hosting.Diagnostics.Waiters,TestingOnly_WaitingService,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Diagnostics\TestingOnly_WaitingService.cs,WaitForAsyncOperations,The length of the statement  "            WaitForAsyncOperations(featureMetadata => featuresToWaitFor.Contains(featureMetadata.FeatureName)' waitForWorkspaceFirst); " is 122.
Long Statement,Microsoft.CodeAnalysis.Internal.Log,TraceLogger,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Diagnostics\TraceLogger.cs,Log,The length of the statement  "            Trace.WriteLine(string.Format("[{0}] {1} - {2}"' Thread.CurrentThread.ManagedThreadId' functionId.ToString()' logMessage.GetMessage())); " is 136.
Long Statement,Microsoft.CodeAnalysis.Internal.Log,TraceLogger,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Diagnostics\TraceLogger.cs,LogBlockStart,The length of the statement  "            Trace.WriteLine(string.Format("[{0}] Start({1}) : {2} - {3}"' Thread.CurrentThread.ManagedThreadId' uniquePairId' functionId.ToString()' logMessage.GetMessage())); " is 163.
Long Statement,Microsoft.CodeAnalysis.Internal.Log,TraceLogger,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Diagnostics\TraceLogger.cs,LogBlockEnd,The length of the statement  "            Trace.WriteLine(string.Format("[{0}] End({1}) : [{2}ms] {3}"' Thread.CurrentThread.ManagedThreadId' uniquePairId' delta' functionString)); " is 138.
Magic Number,Roslyn.Hosting.Diagnostics.PerfMargin,PerfMarginPanel,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Diagnostics\PerfMargin\PerfMarginPanel.cs,PerfMarginPanel,The following statement contains a magic number: this.timer = new DispatcherTimer(TimeSpan.FromMilliseconds(500)' DispatcherPriority.Background' UpdateUI' this.Dispatcher);
Magic Number,Roslyn.Hosting.Diagnostics.PerfMargin,PerfMarginPanel,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Diagnostics\PerfMargin\PerfMarginPanel.cs,CreateContent,The following statement contains a magic number: indicator.Width = 30;
Magic Number,Roslyn.Hosting.Diagnostics.PerfMargin,PerfMarginPanel,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Diagnostics\PerfMargin\PerfMarginPanel.cs,CreateContent,The following statement contains a magic number: indicator.Height = 10;
Magic Number,Roslyn.Hosting.Diagnostics.PerfMargin,PerfMarginPanel,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Diagnostics\PerfMargin\PerfMarginPanel.cs,CreateContent,The following statement contains a magic number: wrapPanelFactory.SetValue(WrapPanel.ItemWidthProperty' 120d);
Magic Number,Roslyn.Hosting.Diagnostics.Waiters,TestingOnly_WaitingService,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Diagnostics\TestingOnly_WaitingService.cs,WaitForAsyncOperations,The following statement contains a magic number: !Task.WaitAll(waitTasks' 100)
Magic Number,Roslyn.Test.Utilities,WaitHelper,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Diagnostics\WaitHelper.cs,PumpingWaitAll,The following statement contains a magic number: var smallTimeout = TimeSpan.FromMilliseconds(10);
Missing Default,Roslyn.Hosting.Diagnostics.PerfMargin,StatusIndicator,C:\research\architectureSmells\repos\mono_roslyn\src\Test\Diagnostics\PerfMargin\StatusIndicator.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.clipScale = ((System.Windows.Media.ScaleTransform)(target));              return;              }
