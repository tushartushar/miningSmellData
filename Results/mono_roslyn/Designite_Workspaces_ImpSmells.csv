Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.CodeAnalysis,Parser,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\DocumentationCommentId.cs,ParseDeclaredId,The method has 116 lines of code.
Long Method,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,ApplyProjectChanges,The method has 103 lines of code.
Long Method,Roslyn.Utilities,ObjectWriter,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectWriter.cs,WriteValue,The method has 124 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,CommonSyntaxNodeExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\CommonSyntaxNodeExtensions.cs,ReplaceSyntaxAsync,The method has 135 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ICodeDefinitionFactoryExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ICodeDefinitionFactoryExtensions.cs,OverrideProperty,The method has 112 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 102 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 106 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 110 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 114 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 118 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 122 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 126 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 130 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 134 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 138 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 102 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 106 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 110 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 114 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 118 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 122 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 126 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 130 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 134 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 138 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 142 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 146 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 150 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 154 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 158 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 162 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 166 lines of code.
Long Method,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 170 lines of code.
Long Method,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,ResolveConflictsAsync,The method has 112 lines of code.
Long Method,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,IdentifyConflictsAsync,The method has 108 lines of code.
Complex Method,Microsoft.CodeAnalysis,Generator,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\DocumentationCommentId.cs,VisitMethod,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis,Parser,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\DocumentationCommentId.cs,ParseDeclaredId,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.CodeAnalysis,Parser,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\DocumentationCommentId.cs,ParseNamedTypeSymbol,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis,Parser,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\DocumentationCommentId.cs,GetMatchingMethods,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.CodeAnalysis,Parser,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\DocumentationCommentId.cs,GetMatchingProperties,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis,MethodSymbolKey,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SymbolId\SymbolKey.MethodSymbolKey.cs,Resolve,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,GetPartialCompilationState,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,CheckAllowedProjectChanges,Cyclomatic complexity of the method is 15
Complex Method,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,ApplyProjectChanges,Cyclomatic complexity of the method is 17
Complex Method,Roslyn.Utilities,ObjectReader,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectReader.cs,ReadEnum,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,TryGetTextSpanFromAnnotation,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.CodeAnalysis.CodeFixes,BatchFixAllProvider,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\BatchFixAllProvider.cs,TryMergeFixesAsync,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.CodeAnalysis.Differencing,EditScript<TNode>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Differencing\EditScript.cs,AlignChildren,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.CodeAnalysis.Differencing,Match<TNode>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Differencing\Match.cs,ComputeMatchForLabel,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.CodeAnalysis.FindSymbols,DependentProjectsFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentProjectsFinder.cs,AddSubmissionDependentProjectsAsync,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.CodeAnalysis.Shared.Extensions,ITypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,FindImplementationsForInterfaceMember,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.CodeAnalysis.Shared.Extensions,ITypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,IsMoreSpecificThan,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis.Shared.Extensions,CommonSyntaxNodeExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\CommonSyntaxNodeExtensions.cs,ReplaceSyntaxAsync,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,GetOriginalUnreducedDefinition,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis.Shared.Extensions,SemanticEquivalence,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\SemanticEquivalence.cs,AreSemanticallyEquivalentWorker,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.CodeAnalysis.Shared.Extensions,SemanticModelExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\SemanticModelExtensions.cs,GetSymbolsEnumerable,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,SymbolsAreCompatibleCore,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,ReplacementBreaksForEachGetEnumerator,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,ReplacementBreaksInvocableExpression,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,IsCompatibleInterfaceMemberImplementation,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,AreCompatibleParameterLists,Cyclomatic complexity of the method is 13
Complex Method,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,VerifyForwardedTypes,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.CodeAnalysis.FindSymbols.Finders,ParameterSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\ParameterSymbolReferenceFinder.cs,CascadeBetweenAnonymousFunctionParametersAsync,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.CodeAnalysis.Formatting,BottomUpBaseIndentationFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\BottomUpBaseIndentationFinder.cs,GetIndentBlockOperationsFromSmallestSpan,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,IdentifyConflictsAsync,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.CodeAnalysis.Rename.ConflictEngine,RenamedSpansTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\RenamedSpansTracker.cs,SimplifyAsync,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,FindDefinitionSymbolAsync,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,ShouldIncludeSymbolAsync,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,GetRenamableDefinitionLocationsAsync,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.CodeAnalysis.SemanticModelWorkspaceService,SemanticModelService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SemanticModelWorkspaceService\SemanticModelWorkspaceServiceFactory.cs,GetSemanticModelForNodeAsync,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.CodeAnalysis.Shared.Collections,IntervalTree<T>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Collections\IntervalTree`1.cs,GetInOrderIntervals,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.CodeAnalysis.Shared,NormalizedTextSpanCollection,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\NormalizedTextSpanCollection.cs,Union,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.CodeAnalysis.Shared,NormalizedTextSpanCollection,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\NormalizedTextSpanCollection.cs,Overlap,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis.Shared,NormalizedTextSpanCollection,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\NormalizedTextSpanCollection.cs,Intersection,Cyclomatic complexity of the method is 8
Long Parameter List,Microsoft.CodeAnalysis,Parser,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\DocumentationCommentId.cs,ParseTypeSymbol,The method has 5 parameters. Parameters: id' index' compilation' typeParameterContext' results
Long Parameter List,Microsoft.CodeAnalysis,Parser,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\DocumentationCommentId.cs,ParseTypeParameterSymbol,The method has 5 parameters. Parameters: id' index' compilation' typeParameterContext' results
Long Parameter List,Microsoft.CodeAnalysis,Parser,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\DocumentationCommentId.cs,ParseNamedTypeSymbol,The method has 5 parameters. Parameters: id' index' compilation' typeParameterContext' results
Long Parameter List,Microsoft.CodeAnalysis,Parser,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\DocumentationCommentId.cs,ParseTypeArguments,The method has 5 parameters. Parameters: id' index' compilation' typeParameterContext' typeArguments
Long Parameter List,Microsoft.CodeAnalysis,Parser,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\DocumentationCommentId.cs,GetMatchingMethods,The method has 7 parameters. Parameters: id' index' containers' memberName' arity' compilation' results
Long Parameter List,Microsoft.CodeAnalysis,Parser,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\DocumentationCommentId.cs,GetMatchingProperties,The method has 6 parameters. Parameters: id' index' containers' memberName' compilation' results
Long Parameter List,Microsoft.CodeAnalysis,Parser,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\DocumentationCommentId.cs,ParseParameterList,The method has 5 parameters. Parameters: id' index' compilation' typeParameterContext' parameters
Long Parameter List,Microsoft.CodeAnalysis,SymbolKey,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SymbolId\SymbolKey.AbstractSymbolKey.cs,ParametersMatch,The method has 6 parameters. Parameters: options' compilation' parameters' refKinds' typeKeys' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis,AbstractSymbolKey<TSymbolKey>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SymbolId\SymbolKey.AbstractSymbolKey.cs,InstantiateTypes,The method has 5 parameters. Parameters: compilation' ignoreAssemblyKey' types' arity' typeArgumentKeysOpt
Long Parameter List,Microsoft.CodeAnalysis,TextDocumentState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\TextDocumentState.cs,LoadTextAsync,The method has 5 parameters. Parameters: loader' documentId' services' reportInvalidDataException' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis,DocumentInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\DocumentInfo.cs,DocumentInfo,The method has 7 parameters. Parameters: id' name' folders' sourceCodeKind' loader' filePath' isGenerated
Long Parameter List,Microsoft.CodeAnalysis,DocumentInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\DocumentInfo.cs,Create,The method has 7 parameters. Parameters: id' name' folders' sourceCodeKind' loader' filePath' isGenerated
Long Parameter List,Microsoft.CodeAnalysis,DocumentInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\DocumentInfo.cs,With,The method has 6 parameters. Parameters: id' name' folders' sourceCodeKind' loader' filePath
Long Parameter List,Microsoft.CodeAnalysis,DocumentState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\DocumentState.cs,DocumentState,The method has 6 parameters. Parameters: languageServices' solutionServices' info' options' textSource' treeSource
Long Parameter List,Microsoft.CodeAnalysis,DocumentState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\DocumentState.cs,CreateLazyFullyParsedTree,The method has 7 parameters. Parameters: newTextSource' cacheKey' filePath' options' languageServices' solutionServices' mode
Long Parameter List,Microsoft.CodeAnalysis,DocumentState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\DocumentState.cs,FullyParseTreeAsync,The method has 8 parameters. Parameters: newTextSource' cacheKey' filePath' options' languageServices' solutionServices' mode' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis,DocumentState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\DocumentState.cs,MakeNewTreeAndVersion,The method has 6 parameters. Parameters: oldTree' oldText' oldVersion' newTree' newText' newVersion
Long Parameter List,Microsoft.CodeAnalysis,DocumentState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\DocumentState.cs,CreateRecoverableTextAndTree,The method has 8 parameters. Parameters: newRoot' textVersion' treeVersion' info' options' factory' mode' solutionServices
Long Parameter List,Microsoft.CodeAnalysis,DocumentState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\DocumentState.cs,GetTextAndVersion,The method has 5 parameters. Parameters: treeAndVersion' version' encoding' filePath' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis,DocumentState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\DocumentState.cs,GetTextAndVersionAsync,The method has 5 parameters. Parameters: treeAndVersion' version' encoding' filePath' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis,MetadataOnlyReference,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\MetadataOnlyReference.cs,GetOrBuildReference,The method has 5 parameters. Parameters: solution' projectReference' finalCompilation' version' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis,MetadataOnlyReference,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\MetadataOnlyReference.cs,TryGetReference,The method has 5 parameters. Parameters: solution' projectReference' finalOrDeclarationCompilation' version' reference
Long Parameter List,Microsoft.CodeAnalysis,MetadataOnlyReference,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\MetadataOnlyReference.cs,TryGetReferenceFromBranch,The method has 5 parameters. Parameters: branchId' projectReference' finalOrDeclarationCompilation' version' reference
Long Parameter List,Microsoft.CodeAnalysis,ProjectInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectInfo.cs,ProjectInfo,The method has 16 parameters. Parameters: id' version' name' assemblyName' language' filePath' outputFilePath' compilationOptions' parseOptions' documents' projectReferences' metadataReferences' analyzerReferences' additionalDocuments' isSubmission' hostObjectType
Long Parameter List,Microsoft.CodeAnalysis,ProjectInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectInfo.cs,Create,The method has 16 parameters. Parameters: id' version' name' assemblyName' language' filePath' outputFilePath' compilationOptions' parseOptions' documents' projectReferences' metadataReferences' analyzerReferences' additionalDocuments' isSubmission' hostObjectType
Long Parameter List,Microsoft.CodeAnalysis,ProjectInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectInfo.cs,With,The method has 16 parameters. Parameters: id' version' name' assemblyName' language' filePath' outputPath' compilationOptions' parseOptions' documents' projectReferences' metadataReferences' analyzerReferences' additionalDocuments' isSubmission' hostObjectType
Long Parameter List,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,ProjectState,The method has 9 parameters. Parameters: projectInfo' languageServices' solutionServices' documentIds' additionalDocumentIds' documentStates' additionalDocumentStates' lazyLatestDocumentVersion' lazyLatestDocumentTopLevelChangeVersion
Long Parameter List,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,With,The method has 8 parameters. Parameters: projectInfo' documentIds' additionalDocumentIds' documentStates' additionalDocumentStates' latestDocumentVersion' latestDocumentTopLevelChangeVersion' lazyAnalyzerOptions
Long Parameter List,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,GetLatestDependentVersions,The method has 8 parameters. Parameters: newDocumentStates' newAdditionalDocumentStates' oldDocument' newDocument' recalculateDependentVersions' textChanged' dependentDocumentVersion' dependentSemanticVersion
Long Parameter List,Microsoft.CodeAnalysis,SemanticDocument,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\SemanticDocument.cs,SemanticDocument,The method has 5 parameters. Parameters: document' text' tree' root' semanticModel
Long Parameter List,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,Solution,The method has 12 parameters. Parameters: branchId' workspaceVersion' solutionServices' id' filePath' projectIds' idToProjectStateMap' projectIdToTrackerMap' linkedFilesMap' dependencyGraph' version' lazyLatestProjectVersion
Long Parameter List,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,Branch,The method has 7 parameters. Parameters: projectIds' idToProjectStateMap' projectIdToTrackerMap' linkedFilesMap' dependencyGraph' version' lazyLatestProjectVersion
Long Parameter List,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,AddDocument,The method has 5 parameters. Parameters: documentId' name' text' folders' filePath
Long Parameter List,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,AddDocument,The method has 6 parameters. Parameters: documentId' name' text' folders' filePath' isGenerated
Long Parameter List,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,AddDocument,The method has 7 parameters. Parameters: documentId' name' syntaxRoot' folders' filePath' isGenerated' preservationMode
Long Parameter List,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,AddAdditionalDocument,The method has 5 parameters. Parameters: documentId' name' text' folders' filePath
Long Parameter List,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,AddAdditionalDocument,The method has 5 parameters. Parameters: documentId' name' text' folders' filePath
Long Parameter List,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,GetPartialCompilationState,The method has 5 parameters. Parameters: solution' id' inProgressProject' inProgressCompilation' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,MergeLinkedDocumentGroupAsync,The method has 5 parameters. Parameters: allLinkedDocuments' linkedDocumentGroup' sessionInfo' mergeConflictHandler' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,AddDocumentMergeChangesAsync,The method has 7 parameters. Parameters: oldDocument' newDocument' cumulativeChanges' unmergedChanges' groupSessionInfo' textDiffService' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,RaiseWorkspaceChangedEventAsync,The method has 5 parameters. Parameters: kind' oldSolution' newSolution' projectId' documentId
Long Parameter List,Microsoft.CodeAnalysis,WorkspaceChangeEventArgs,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\WorkspaceChangeEventArgs.cs,WorkspaceChangeEventArgs,The method has 5 parameters. Parameters: kind' oldSolution' newSolution' projectId' documentId
Long Parameter List,Roslyn.Utilities,PooledStream,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\SerializableBytes.cs,Read,The method has 6 parameters. Parameters: chunks' position' length' buffer' index' count
Long Parameter List,Roslyn.Utilities,TaskExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskExtensions.cs,SafeContinueWith,The method has 5 parameters. Parameters: task' continuationAction' cancellationToken' continuationOptions' scheduler
Long Parameter List,Roslyn.Utilities,TaskExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskExtensions.cs,SafeContinueWith,The method has 5 parameters. Parameters: task' continuationFunction' cancellationToken' continuationOptions' scheduler
Long Parameter List,Roslyn.Utilities,TaskExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskExtensions.cs,SafeContinueWith,The method has 5 parameters. Parameters: task' continuationAction' cancellationToken' continuationOptions' scheduler
Long Parameter List,Roslyn.Utilities,TaskExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskExtensions.cs,SafeContinueWith,The method has 5 parameters. Parameters: task' continuationFunction' cancellationToken' continuationOptions' scheduler
Long Parameter List,Roslyn.Utilities,TaskExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskExtensions.cs,ContinueWithAfterDelay,The method has 6 parameters. Parameters: task' continuationFunction' cancellationToken' millisecondsDelay' taskContinuationOptions' scheduler
Long Parameter List,Roslyn.Utilities,TaskExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskExtensions.cs,ContinueWithAfterDelay,The method has 6 parameters. Parameters: task' continuationFunction' cancellationToken' millisecondsDelay' taskContinuationOptions' scheduler
Long Parameter List,Roslyn.Utilities,TaskExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskExtensions.cs,ContinueWithAfterDelay,The method has 6 parameters. Parameters: task' continuationAction' cancellationToken' millisecondsDelay' taskContinuationOptions' scheduler
Long Parameter List,Roslyn.Utilities,TaskExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskExtensions.cs,SafeContinueWithFromAsync,The method has 5 parameters. Parameters: task' continuationFunction' cancellationToken' continuationOptions' scheduler
Long Parameter List,Roslyn.Utilities,TaskExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskExtensions.cs,SafeContinueWithFromAsync,The method has 5 parameters. Parameters: task' continuationFunction' cancellationToken' continuationOptions' scheduler
Long Parameter List,Roslyn.Utilities,TaskExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskExtensions.cs,SafeContinueWithFromAsync,The method has 5 parameters. Parameters: task' continuationFunction' cancellationToken' continuationOptions' scheduler
Long Parameter List,Roslyn.Utilities,TaskExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskExtensions.cs,ContinueWithAfterDelayFromAsync,The method has 6 parameters. Parameters: task' continuationFunction' cancellationToken' millisecondsDelay' taskContinuationOptions' scheduler
Long Parameter List,Roslyn.Utilities,TaskExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskExtensions.cs,ContinueWithAfterDelayFromAsync,The method has 6 parameters. Parameters: task' continuationFunction' cancellationToken' millisecondsDelay' taskContinuationOptions' scheduler
Long Parameter List,Roslyn.Utilities,TaskFactoryExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskFactoryExtensions.cs,SafeStartNew,The method has 5 parameters. Parameters: factory' action' cancellationToken' creationOptions' scheduler
Long Parameter List,Roslyn.Utilities,TaskFactoryExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskFactoryExtensions.cs,SafeStartNew,The method has 5 parameters. Parameters: factory' func' cancellationToken' creationOptions' scheduler
Long Parameter List,Roslyn.Utilities,TaskFactoryExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskFactoryExtensions.cs,SafeStartNewFromAsync,The method has 5 parameters. Parameters: factory' actionAsync' cancellationToken' creationOptions' scheduler
Long Parameter List,Roslyn.Utilities,TaskFactoryExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskFactoryExtensions.cs,SafeStartNewFromAsync,The method has 5 parameters. Parameters: factory' funcAsync' cancellationToken' creationOptions' scheduler
Long Parameter List,Microsoft.CodeAnalysis.CaseCorrection,AbstractCaseCorrectionService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CaseCorrection\AbstractCaseCorrectionService.cs,AddReplacements,The method has 6 parameters. Parameters: semanticModel' root' spans' workspace' replacements' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CaseCorrection,AbstractCaseCorrectionService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CaseCorrection\AbstractCaseCorrectionService.cs,CaseCorrect,The method has 5 parameters. Parameters: semanticModel' root' spans' workspace' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Classification,AbstractClassificationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Classification\AbstractClassificationService.cs,AddSemanticClassificationsAsync,The method has 6 parameters. Parameters: document' textSpan' getNodeClassifiers' getTokenClassifiers' result' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Classification,AbstractClassificationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Classification\AbstractClassificationService.cs,AddSemanticClassifications,The method has 7 parameters. Parameters: semanticModel' textSpan' workspace' getNodeClassifiers' getTokenClassifiers' result' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Classification,Worker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Classification\AbstractClassificationService.Worker.cs,Worker,The method has 7 parameters. Parameters: workspace' semanticModel' textSpan' list' getNodeClassifiers' getTokenClassifiers' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Classification,Worker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Classification\AbstractClassificationService.Worker.cs,Classify,The method has 7 parameters. Parameters: workspace' semanticModel' textSpan' list' getNodeClassifiers' getTokenClassifiers' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Classification,IClassificationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Classification\IClassificationService.cs,AddSemanticClassificationsAsync,The method has 6 parameters. Parameters: document' textSpan' getNodeClassifiers' getTokenClassifiers' result' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Classification,IClassificationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Classification\IClassificationService.cs,AddSemanticClassifications,The method has 7 parameters. Parameters: semanticModel' textSpan' workspace' getNodeClassifiers' getTokenClassifiers' result' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,Cleanup,The method has 5 parameters. Parameters: root' spans' workspace' providers' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,TryGetTextSpanFromAnnotation,The method has 6 parameters. Parameters: previousTokenMarker' nextTokenMarker' node' previousTokens' nextTokens' span
Long Parameter List,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,GetTokensAroundSpan,The method has 6 parameters. Parameters: root' span' previousToken' startToken' endToken' nextToken
Long Parameter List,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,GetSpanAlignedToTokens,The method has 5 parameters. Parameters: syntaxFactsService' root' span' startToken' endToken
Long Parameter List,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,IterateAllCodeCleanupProvidersAsync,The method has 5 parameters. Parameters: originalDocument' annotatedDocument' spanGetter' codeCleaners' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,IterateAllCodeCleanupProviders,The method has 6 parameters. Parameters: originalRoot' annotatedRoot' spanGetter' workspace' codeCleaners' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeCleanup,CodeCleaner,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\CodeCleaner.cs,Cleanup,The method has 5 parameters. Parameters: root' span' workspace' providers' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeCleanup,CodeCleaner,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\CodeCleaner.cs,Cleanup,The method has 5 parameters. Parameters: root' spans' workspace' providers' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeCleanup,ICodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\ICodeCleanerService.cs,Cleanup,The method has 5 parameters. Parameters: root' spans' workspace' providers' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeFixes,CodeFixContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\CodeFixContext.cs,CodeFixContext,The method has 5 parameters. Parameters: document' span' diagnostics' registerCodeFix' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeFixes,CodeFixContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\CodeFixContext.cs,CodeFixContext,The method has 6 parameters. Parameters: document' span' diagnostics' registerCodeFix' verifyArguments' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeFixes,CodeFixContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\CodeFixContext.cs,CodeFixContext,The method has 5 parameters. Parameters: document' diagnostic' registerCodeFix' verifyArguments' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeFixes,BatchSimplificationFixAllProvider,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\BatchSimplificationFixAllProvider.cs,GetNodeToSimplify,The method has 6 parameters. Parameters: root' model' diagnostic' workspace' codeActionEquivalenceKey' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeFixes,FixAllContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs,FixAllContext,The method has 8 parameters. Parameters: document' codeFixProvider' scope' codeActionId' diagnosticIds' getDocumentDiagnosticsAsync' getProjectDiagnosticsAsync' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeFixes,FixAllContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs,FixAllContext,The method has 8 parameters. Parameters: project' codeFixProvider' scope' codeActionId' diagnosticIds' getDocumentDiagnosticsAsync' getProjectDiagnosticsAsync' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeFixes,FixAllContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs,FixAllContext,The method has 9 parameters. Parameters: document' project' codeFixProvider' scope' codeActionEquivalenceKey' diagnosticIds' getDocumentDiagnosticsAsync' getProjectDiagnosticsAsync' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,AddAttributes,The method has 5 parameters. Parameters: destination' attributes' target' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,GetEditAsync,The method has 6 parameters. Parameters: solution' destination' declarationTransform' options' members' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,AddEventAsync,The method has 5 parameters. Parameters: solution' destination' event' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,AddFieldAsync,The method has 5 parameters. Parameters: solution' destination' field' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,AddPropertyAsync,The method has 5 parameters. Parameters: solution' destination' property' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,AddNamedTypeAsync,The method has 5 parameters. Parameters: solution' destination' namedType' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,AddNamedTypeAsync,The method has 5 parameters. Parameters: solution' destination' namedType' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,AddNamespaceAsync,The method has 5 parameters. Parameters: solution' destination' namespace' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,AddMethodAsync,The method has 5 parameters. Parameters: solution' destination' method' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,AddMembersAsync,The method has 5 parameters. Parameters: solution' destination' members' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,AddNamespaceOrTypeAsync,The method has 5 parameters. Parameters: solution' destination' namespaceOrType' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,AbstractImportsAdder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractImportsAdder.cs,AddMissingNamespaces,The method has 5 parameters. Parameters: semanticModel' importsContainerToMissingImports' namespaceScope' referencedNamespaces' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationOptions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationOptions.cs,CodeGenerationOptions,The method has 14 parameters. Parameters: contextLocation' afterThisLocation' beforeThisLocation' addImports' placeSystemNamespaceFirst' additionalImports' generateMembers' mergeNestedNamespaces' mergeAttributes' generateDefaultAccessibility' generateMethodBodies' generateDocumentationComments' autoInsertionLocation' reuseSyntax
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateEventSymbol,The method has 10 parameters. Parameters: attributes' accessibility' modifiers' type' explicitInterfaceSymbol' name' addMethod' removeMethod' raiseMethod' parameterList
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreatePropertySymbol,The method has 12 parameters. Parameters: containingType' attributes' accessibility' modifiers' type' explicitInterfaceSymbol' name' parameters' getMethod' setMethod' isIndexer' initializer
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreatePropertySymbol,The method has 10 parameters. Parameters: attributes' accessibility' modifiers' type' explicitInterfaceSymbol' name' parameters' getMethod' setMethod' isIndexer
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateFieldSymbol,The method has 8 parameters. Parameters: attributes' accessibility' modifiers' type' name' hasConstantValue' constantValue' initializer
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateConstructorSymbol,The method has 8 parameters. Parameters: attributes' accessibility' modifiers' typeName' parameters' statements' baseConstructorArguments' thisConstructorArguments
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateMethodSymbol,The method has 13 parameters. Parameters: containingType' attributes' accessibility' modifiers' returnType' explicitInterfaceSymbol' name' typeParameters' parameters' statements' handlesExpressions' returnTypeAttributes' methodKind
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateMethodSymbol,The method has 12 parameters. Parameters: attributes' accessibility' modifiers' returnType' explicitInterfaceSymbol' name' typeParameters' parameters' statements' handlesExpressions' returnTypeAttributes' methodKind
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateOperatorSymbol,The method has 8 parameters. Parameters: attributes' accessibility' modifiers' returnType' operatorKind' parameters' statements' returnTypeAttributes
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateConversionSymbol,The method has 8 parameters. Parameters: attributes' accessibility' modifiers' toType' fromType' isImplicit' statements' toTypeAttributes
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateParameterSymbol,The method has 8 parameters. Parameters: attributes' refKind' isParams' type' name' isOptional' hasDefaultValue' defaultValue
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateTypeParameter,The method has 8 parameters. Parameters: attributes' varianceKind' name' constraintTypes' hasConstructorConstraint' hasReferenceConstraint' hasValueConstraint' ordinal
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateAccessorSymbol,The method has 5 parameters. Parameters: accessor' attributes' accessibility' explicitInterfaceSymbol' statements
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateNamedTypeSymbol,The method has 10 parameters. Parameters: attributes' accessibility' modifiers' typeKind' name' typeParameters' baseType' interfaces' specialType' members
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateDelegateTypeSymbol,The method has 7 parameters. Parameters: attributes' accessibility' modifiers' returnType' name' typeParameters' parameters
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateMethodSymbol,The method has 7 parameters. Parameters: method' attributes' accessibility' modifiers' explicitInterfaceSymbol' name' statements
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreatePropertySymbol,The method has 9 parameters. Parameters: property' attributes' accessibility' modifiers' explicitInterfaceSymbol' name' isIndexer' getMethod' setMethod
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateEventSymbol,The method has 8 parameters. Parameters: event' attributes' accessibility' modifiers' explicitInterfaceSymbol' name' addMethod' removeMethod
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddAttributes,The method has 6 parameters. Parameters: destination' workspace' attributes' target' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,RemoveAttribute,The method has 5 parameters. Parameters: destination' workspace' attributeToRemove' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,RemoveAttribute,The method has 5 parameters. Parameters: destination' workspace' attributeToRemove' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,UpdateDeclarationModifiers,The method has 5 parameters. Parameters: destination' workspace' newModifiers' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,UpdateDeclarationAccessibility,The method has 5 parameters. Parameters: destination' workspace' newAccesibility' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,UpdateDeclarationType,The method has 5 parameters. Parameters: destination' workspace' newType' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,UpdateDeclarationMembers,The method has 5 parameters. Parameters: destination' workspace' newMembers' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddEventDeclarationAsync,The method has 5 parameters. Parameters: solution' destination' event' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddFieldDeclarationAsync,The method has 5 parameters. Parameters: solution' destination' field' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddMethodDeclarationAsync,The method has 5 parameters. Parameters: solution' destination' method' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddPropertyDeclarationAsync,The method has 5 parameters. Parameters: solution' destination' property' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddNamedTypeDeclarationAsync,The method has 5 parameters. Parameters: solution' destination' namedType' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddNamedTypeDeclarationAsync,The method has 5 parameters. Parameters: solution' destination' namedType' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddNamespaceDeclarationAsync,The method has 5 parameters. Parameters: solution' destination' namespace' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddNamespaceOrTypeDeclarationAsync,The method has 5 parameters. Parameters: solution' destination' namespaceOrType' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddMemberDeclarationsAsync,The method has 5 parameters. Parameters: solution' destination' members' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,ICodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\ICodeGenerationService.cs,AddAttributes,The method has 5 parameters. Parameters: destination' attributes' target' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,ICodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\ICodeGenerationService.cs,AddEventAsync,The method has 5 parameters. Parameters: solution' destination' event' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,ICodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\ICodeGenerationService.cs,AddFieldAsync,The method has 5 parameters. Parameters: solution' destination' field' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,ICodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\ICodeGenerationService.cs,AddMethodAsync,The method has 5 parameters. Parameters: solution' destination' method' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,ICodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\ICodeGenerationService.cs,AddPropertyAsync,The method has 5 parameters. Parameters: solution' destination' property' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,ICodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\ICodeGenerationService.cs,AddNamedTypeAsync,The method has 5 parameters. Parameters: solution' destination' namedType' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,ICodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\ICodeGenerationService.cs,AddNamedTypeAsync,The method has 5 parameters. Parameters: solution' destination' namedType' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,ICodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\ICodeGenerationService.cs,AddNamespaceAsync,The method has 5 parameters. Parameters: solution' destination' namespace' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,ICodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\ICodeGenerationService.cs,AddNamespaceOrTypeAsync,The method has 5 parameters. Parameters: solution' destination' namespaceOrType' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,ICodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\ICodeGenerationService.cs,AddMembersAsync,The method has 5 parameters. Parameters: solution' destination' members' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationAbstractMethodSymbol,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationAbstractMethodSymbol.cs,CodeGenerationAbstractMethodSymbol,The method has 6 parameters. Parameters: containingType' attributes' declaredAccessibility' modifiers' name' returnTypeAttributes
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationAbstractNamedTypeSymbol,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationAbstractNamedTypeSymbol.cs,CodeGenerationAbstractNamedTypeSymbol,The method has 7 parameters. Parameters: containingType' attributes' declaredAccessibility' modifiers' name' specialType' typeMembers
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationConstructorInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationConstructorInfo.cs,Attach,The method has 5 parameters. Parameters: constructor' typeName' statements' baseConstructorArguments' thisConstructorArguments
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationConstructorSymbol,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationConstructorSymbol.cs,CodeGenerationConstructorSymbol,The method has 5 parameters. Parameters: containingType' attributes' accessibility' modifiers' parameters
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationConversionSymbol,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationConversionSymbol.cs,CodeGenerationConversionSymbol,The method has 8 parameters. Parameters: containingType' attributes' declaredAccessibility' modifiers' toType' fromType' isImplicit' toTypeAttributes
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationEventSymbol,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationEventSymbol.cs,CodeGenerationEventSymbol,The method has 11 parameters. Parameters: containingType' attributes' declaredAccessibility' modifiers' type' explicitInterfaceSymbolOpt' name' addMethod' removeMethod' raiseMethod' parameterList
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationFieldSymbol,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationFieldSymbol.cs,CodeGenerationFieldSymbol,The method has 8 parameters. Parameters: containingType' attributes' accessibility' modifiers' type' name' hasConstantValue' constantValue
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationMethodInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationMethodInfo.cs,CodeGenerationMethodInfo,The method has 6 parameters. Parameters: isNew' isUnsafe' isPartial' isAsync' statements' handlesExpressions
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationMethodInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationMethodInfo.cs,Attach,The method has 7 parameters. Parameters: method' isNew' isUnsafe' isPartial' isAsync' statements' handlesExpressions
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationMethodSymbol,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationMethodSymbol.cs,CodeGenerationMethodSymbol,The method has 11 parameters. Parameters: containingType' attributes' declaredAccessibility' modifiers' returnType' explicitInterfaceSymbolOpt' name' typeParameters' parameters' returnTypeAttributes' methodKind
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationNamedTypeSymbol,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationNamedTypeSymbol.cs,CodeGenerationNamedTypeSymbol,The method has 13 parameters. Parameters: containingType' attributes' declaredAccessibility' modifiers' typeKind' name' typeParameters' baseType' interfaces' specialType' members' typeMembers' enumUnderlyingType
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationNamespaceOrTypeSymbol,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationNamespaceOrTypeSymbol.cs,CodeGenerationNamespaceOrTypeSymbol,The method has 5 parameters. Parameters: containingType' attributes' declaredAccessibility' modifiers' name
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationOperatorSymbol,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationOperatorSymbol.cs,CodeGenerationOperatorSymbol,The method has 8 parameters. Parameters: containingType' attributes' accessibility' modifiers' returnType' operatorKind' parameters' returnTypeAttributes
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationParameterSymbol,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationParameterSymbol.cs,CodeGenerationParameterSymbol,The method has 9 parameters. Parameters: containingType' attributes' refKind' isParams' type' name' isOptional' hasDefaultValue' defaultValue
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationPropertySymbol,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationPropertySymbol.cs,CodeGenerationPropertySymbol,The method has 11 parameters. Parameters: containingType' attributes' declaredAccessibility' modifiers' type' explicitInterfaceSymbolOpt' name' isIndexer' parametersOpt' getMethod' setMethod
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbol,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationSymbol.cs,CodeGenerationSymbol,The method has 5 parameters. Parameters: containingType' attributes' declaredAccessibility' modifiers' name
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationTypeParameterSymbol,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationTypeParameterSymbol.cs,CodeGenerationTypeParameterSymbol,The method has 9 parameters. Parameters: containingType' attributes' varianceKind' name' constraintTypes' hasConstructorConstraint' hasReferenceConstraint' hasValueConstraint' ordinal
Long Parameter List,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationTypeSymbol,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationTypeSymbol.cs,CodeGenerationTypeSymbol,The method has 6 parameters. Parameters: containingType' attributes' declaredAccessibility' modifiers' name' specialType
Long Parameter List,Microsoft.CodeAnalysis.Editing,SymbolEditor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SymbolEditor.cs,EditOneDeclarationAsync,The method has 5 parameters. Parameters: symbol' documentId' position' editAction' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Editing,SyntaxEditorExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SyntaxEditorExtensions.cs,SetTypeConstraint,The method has 5 parameters. Parameters: editor' declaration' typeParameterName' kind' types
Long Parameter List,Microsoft.CodeAnalysis.Editing,SyntaxGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SyntaxGenerator.cs,FieldDeclaration,The method has 5 parameters. Parameters: name' type' accessibility' modifiers' initializer
Long Parameter List,Microsoft.CodeAnalysis.Editing,SyntaxGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SyntaxGenerator.cs,MethodDeclaration,The method has 7 parameters. Parameters: name' parameters' typeParameters' returnType' accessibility' modifiers' statements
Long Parameter List,Microsoft.CodeAnalysis.Editing,SyntaxGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SyntaxGenerator.cs,PropertyDeclaration,The method has 6 parameters. Parameters: name' type' accessibility' modifiers' getAccessorStatements' setAccessorStatements
Long Parameter List,Microsoft.CodeAnalysis.Editing,SyntaxGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SyntaxGenerator.cs,IndexerDeclaration,The method has 6 parameters. Parameters: parameters' type' accessibility' modifiers' getAccessorStatements' setAccessorStatements
Long Parameter List,Microsoft.CodeAnalysis.Editing,SyntaxGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SyntaxGenerator.cs,CustomEventDeclaration,The method has 7 parameters. Parameters: name' type' accessibility' modifiers' parameters' addAccessorStatements' removeAccessorStatements
Long Parameter List,Microsoft.CodeAnalysis.Editing,SyntaxGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SyntaxGenerator.cs,ConstructorDeclaration,The method has 6 parameters. Parameters: containingTypeName' parameters' accessibility' modifiers' baseConstructorArguments' statements
Long Parameter List,Microsoft.CodeAnalysis.Editing,SyntaxGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SyntaxGenerator.cs,ClassDeclaration,The method has 7 parameters. Parameters: name' typeParameters' accessibility' modifiers' baseType' interfaceTypes' members
Long Parameter List,Microsoft.CodeAnalysis.Editing,SyntaxGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SyntaxGenerator.cs,StructDeclaration,The method has 6 parameters. Parameters: name' typeParameters' accessibility' modifiers' interfaceTypes' members
Long Parameter List,Microsoft.CodeAnalysis.Editing,SyntaxGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SyntaxGenerator.cs,InterfaceDeclaration,The method has 5 parameters. Parameters: name' typeParameters' accessibility' interfaceTypes' members
Long Parameter List,Microsoft.CodeAnalysis.Editing,SyntaxGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SyntaxGenerator.cs,DelegateDeclaration,The method has 6 parameters. Parameters: name' parameters' typeParameters' returnType' accessibility' modifiers
Long Parameter List,Microsoft.CodeAnalysis.Editing,DeclarationModifiers,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\DeclarationModifiers.cs,DeclarationModifiers,The method has 12 parameters. Parameters: isStatic' isAbstract' isNew' isUnsafe' isReadOnly' isVirtual' isOverride' isSealed' isConst' isWithEvents' isPartial' isAsync
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,DeclaredSymbolInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\DeclaredSymbolInfo.cs,DeclaredSymbolInfo,The method has 7 parameters. Parameters: name' containerDisplayName' fullyQualifiedContainerName' kind' span' parameterCount' typeParameterCount
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,AbstractSyntaxTreeInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\AbstractSyntaxTreeInfo.cs,SaveAsync,The method has 5 parameters. Parameters: document' cache' persistenceName' serializationFormat' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,AbstractSyntaxTreeInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\AbstractSyntaxTreeInfo.cs,LoadAsync,The method has 6 parameters. Parameters: document' reader' cache' persistenceName' serializationFormat' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,DependentProjectsFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentProjectsFinder.cs,GetDependentProjectsCoreAsync,The method has 5 parameters. Parameters: symbol' solution' sourceProject' visibility' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,DependentProjectsFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentProjectsFinder.cs,AddNonSubmissionDependentProjectsAsync,The method has 5 parameters. Parameters: sourceAssembly' solution' sourceProject' dependentProjects' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,DependentTypeFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentTypeFinder.cs,GetDependentTypesAsync,The method has 6 parameters. Parameters: type' solution' projects' predicate' cache' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,DependentTypeFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentTypeFinder.cs,GetDependentTypesInProjectAsync,The method has 8 parameters. Parameters: type' project' solution' predicate' cache' locationsInMetadata' results' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,FindReferenceCache,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferenceCache.cs,GetIdentifierOrGlobalNamespaceTokensWithText,The method has 8 parameters. Parameters: syntaxFacts' document' version' model' root' sourceText' text' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,FindReferenceCache,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferenceCache.cs,GetIdentifierOrGlobalNamespaceTokensWithText,The method has 7 parameters. Parameters: syntaxFacts' document' version' root' sourceText' text' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,FindReferenceCache,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferenceCache.cs,GetTokensFromText,The method has 8 parameters. Parameters: syntaxFacts' document' version' root' content' text' candidate' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,FindReferenceCache,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferenceCache.cs,GetTokensFromText,The method has 5 parameters. Parameters: root' positions' text' candidate' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,FindReferenceCache,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferenceCache.cs,GetTokensFromText,The method has 6 parameters. Parameters: syntaxFacts' root' content' text' candidate' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,FindReferencesSearchEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferencesSearchEngine.cs,FindReferencesSearchEngine,The method has 5 parameters. Parameters: solution' documents' finders' progress' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,ReferenceLocation,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\ReferenceLocation.cs,ReferenceLocation,The method has 5 parameters. Parameters: document' alias' location' isImplicit' candidateReason
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindSymbolAtPosition,The method has 5 parameters. Parameters: semanticModel' position' workspace' bindLiteralsToUnderlyingType' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindDeclarationsAsync,The method has 5 parameters. Parameters: project' name' ignoreCase' filter' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindDeclarationsAsyncImpl,The method has 5 parameters. Parameters: project' name' ignoreCase' criteria' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,AddDeclarationsAsync,The method has 6 parameters. Parameters: project' name' ignoreCase' filter' list' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,AddDeclarationsAsync,The method has 8 parameters. Parameters: project' startingCompilation' startingAssembly' name' ignoreCase' filter' list' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,AddDeclarationsAsync,The method has 8 parameters. Parameters: solution' assembly' filePath' name' ignoreCase' filter' list' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindSourceDeclarationsAsync,The method has 5 parameters. Parameters: solution' name' ignoreCase' filter' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindSourceDeclarationsAsyncImpl,The method has 5 parameters. Parameters: solution' name' ignoreCase' filter' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindSourceDeclarationsAsync,The method has 5 parameters. Parameters: project' name' ignoreCase' filter' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindSourceDeclarationsAsyncImpl,The method has 5 parameters. Parameters: project' name' ignoreCase' filter' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindReferencesAsync,The method has 5 parameters. Parameters: symbol' solution' progress' documents' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,AbstractPersistableState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\AbstractPersistableState.cs,LoadAsync,The method has 5 parameters. Parameters: document' persistenceName' formatVersion' readFrom' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,AbstractPersistableState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\AbstractPersistableState.cs,SaveAsync,The method has 5 parameters. Parameters: document' persistenceName' formatVersion' data' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,ISyntaxTreeInfoPersistentStorage,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\ISyntaxTreeInfoPersistentStorage.cs,ReadIdentifierPositions,The method has 5 parameters. Parameters: document' version' identifier' positions' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,SyntaxTreeContextInfo,The method has 11 parameters. Parameters: version' predefinedTypes' predefinedOperators' containsForEachStatement' containsLockStatement' containsUsingStatement' containsQueryExpression' containsThisConstructorInitializer' containsBaseConstructorInitializer' containsElementAccessExpression' containsIndexerMemberCref
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,ConvertToContainingNodeFlag,The method has 8 parameters. Parameters: containsForEachStatement' containsLockStatement' containsUsingStatement' containsQueryExpression' containsThisConstructorInitializer' containsBaseConstructorInitializer' containsElementAccessExpression' containsIndexerMemberCref
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeIdentifierInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeIdentifierInfo.cs,TryGetIdentifierLocations,The method has 5 parameters. Parameters: document' version' identifier' positions' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeInfo.cs,GetInfoAsync,The method has 5 parameters. Parameters: document' cache' generator' selector' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Internal.Log,AggregateLogger,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Log\AggregateLogger.cs,LogBlockEnd,The method has 5 parameters. Parameters: functionId' logMessage' uniquePairId' delta' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Internal.Log,StatisticResult,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Log\LogAggregator.cs,StatisticResult,The method has 7 parameters. Parameters: max' min' median' mean' range' mode' count
Long Parameter List,Microsoft.CodeAnalysis.Internal.Log,Logger,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Log\Logger.LogBlock.cs,Log,The method has 5 parameters. Parameters: functionId' messageGetter' arg0' arg1' arg2
Long Parameter List,Microsoft.CodeAnalysis.Internal.Log,Logger,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Log\Logger.LogBlock.cs,Log,The method has 6 parameters. Parameters: functionId' messageGetter' arg0' arg1' arg2' arg3
Long Parameter List,Microsoft.CodeAnalysis.Internal.Log,Logger,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Log\Logger.LogBlock.cs,LogBlock,The method has 5 parameters. Parameters: functionId' messageGetter' arg0' arg1' token
Long Parameter List,Microsoft.CodeAnalysis.Internal.Log,Logger,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Log\Logger.LogBlock.cs,LogBlock,The method has 6 parameters. Parameters: functionId' messageGetter' arg0' arg1' arg2' token
Long Parameter List,Microsoft.CodeAnalysis.Internal.Log,Logger,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Log\Logger.LogBlock.cs,LogBlock,The method has 7 parameters. Parameters: functionId' messageGetter' arg0' arg1' arg2' arg3' token
Long Parameter List,Microsoft.CodeAnalysis.Internal.Log,RoslynLogBlock,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Log\Logger.LogBlock.cs,Construct,The method has 5 parameters. Parameters: logger' functionId' logMessage' blockId' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Internal.Log,LogMessage,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Log\LogMessage.cs,Create,The method has 5 parameters. Parameters: messageGetter' arg0' arg1' arg2' arg3
Long Parameter List,Microsoft.CodeAnalysis.Internal.Log,LazyLogMessage<TArg0;TArg1;TArg2;TArg3>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Log\LogMessage.cs,Construct,The method has 5 parameters. Parameters: messageGetter' arg0' arg1' arg2' arg3
Long Parameter List,Microsoft.CodeAnalysis.Internal.Log,EmptyLogger,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Log\EmptyLogger.cs,LogBlockEnd,The method has 5 parameters. Parameters: functionId' logMessage' uniquePairId' delta' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Internal.Log,ILogger,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Log\ILogger.cs,LogBlockEnd,The method has 5 parameters. Parameters: functionId' logMessage' uniquePairId' delta' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ITypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,ReplaceTypeParametersBasedOnTypeConstraints,The method has 5 parameters. Parameters: type' compilation' availableTypeParameters' solution' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,CommonSyntaxNodeExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\CommonSyntaxNodeExtensions.cs,ReplaceSyntaxAsync,The method has 8 parameters. Parameters: root' nodes' computeReplacementNodeAsync' tokens' computeReplacementTokenAsync' trivia' computeReplacementTriviaAsync' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,CommonSyntaxTreeExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\CommonSyntaxTreeExtensions.cs,GetTouchingWord,The method has 5 parameters. Parameters: syntaxTree' position' syntaxFacts' cancellationToken' findInsideTrivia
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,CommonSyntaxTreeExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\CommonSyntaxTreeExtensions.cs,GetTouchingToken,The method has 5 parameters. Parameters: syntaxTree' position' predicate' cancellationToken' findInsideTrivia
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,DocumentExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\DocumentExtensions.cs,GetSemanticModelForNodeAsync,The method has 6 parameters. Parameters: semanticModelService' syntaxFactService' document' node' span' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ICodeDefinitionFactoryExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ICodeDefinitionFactoryExtensions.cs,CreateFieldDelegatingConstructor,The method has 7 parameters. Parameters: factory' typeName' containingTypeOpt' parameters' parameterToExistingFieldMap' parameterToNewFieldMap' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ICodeDefinitionFactoryExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ICodeDefinitionFactoryExtensions.cs,OverrideProperty,The method has 6 parameters. Parameters: codeFactory' overriddenProperty' modifiers' containingType' document' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ICodeDefinitionFactoryExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ICodeDefinitionFactoryExtensions.cs,OverrideMethod,The method has 6 parameters. Parameters: codeFactory' overriddenMethod' modifiers' newContainingType' newDocument' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ICodeDefinitionFactoryExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ICodeDefinitionFactoryExtensions.cs,CreateEqualsMethod,The method has 5 parameters. Parameters: factory' compilation' containingType' symbols' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ICodeDefinitionFactoryExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ICodeDefinitionFactoryExtensions.cs,CreateEqualsMethodStatements,The method has 5 parameters. Parameters: factory' compilation' containingType' members' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ICodeDefinitionFactoryExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ICodeDefinitionFactoryExtensions.cs,CreateGetHashCodeMethod,The method has 5 parameters. Parameters: factory' compilation' containingType' symbols' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ICodeDefinitionFactoryExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ICodeDefinitionFactoryExtensions.cs,CreateGetHashCodeMethodStatements,The method has 5 parameters. Parameters: factory' compilation' containingType' members' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,INamedTypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\INamedTypeSymbolExtensions.cs,GetAllUnimplementedMembers,The method has 7 parameters. Parameters: classOrStructType' interfacesOrAbstractClasses' isImplemented' isValidImplementation' interfaceMemberGetter' allowReimplementation' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,INamedTypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\INamedTypeSymbolExtensions.cs,GetUnimplementedMembers,The method has 6 parameters. Parameters: classOrStructType' interfaceType' isImplemented' isValidImplementation' interfaceMemberGetter' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,IsEditorBrowsable,The method has 8 parameters. Parameters: symbol' hideAdvancedMembers' compilation' editorBrowsableAttributeConstructor' typeLibTypeAttributeConstructors' typeLibFuncAttributeConstructors' typeLibVarAttributeConstructors' hideModuleNameAttribute
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,IsBrowsingProhibited,The method has 8 parameters. Parameters: symbol' hideAdvancedMembers' compilation' editorBrowsableAttributeConstructor' typeLibTypeAttributeConstructors' typeLibFuncAttributeConstructors' typeLibVarAttributeConstructors' hideModuleNameAttribute
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,IsBrowsingProhibitedByEditorBrowsableAttribute,The method has 5 parameters. Parameters: symbol' attributes' hideAdvancedMembers' compilation' constructor
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,ToAwaitableParts,The method has 5 parameters. Parameters: symbol' awaitKeyword' initializedVariableName' semanticModel' position
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,IsMemberAccessible,The method has 5 parameters. Parameters: containingType' declaredAccessibility' within' throughTypeOpt' failedThroughTypeCheck
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,IsProtectedSymbolAccessible,The method has 5 parameters. Parameters: withinType' withinAssembly' throughTypeOpt' originalContainingType' failedThroughTypeCheck
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ITypeInferenceServiceExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeInferenceServiceExtensions.cs,InferType,The method has 5 parameters. Parameters: typeInferenceService' semanticModel' expression' objectAsDefault' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ITypeInferenceServiceExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeInferenceServiceExtensions.cs,InferType,The method has 5 parameters. Parameters: typeInferenceService' semanticModel' position' objectAsDefault' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 5 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 6 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 7 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 8 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 9 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 10 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 11 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 12 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 13 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 14 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 15 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' matchAction13' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 16 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' matchAction13' matchAction14' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 17 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' matchAction13' matchAction14' matchAction15' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 18 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' matchAction13' matchAction14' matchAction15' matchAction16' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 19 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' matchAction13' matchAction14' matchAction15' matchAction16' matchAction17' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 20 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' matchAction13' matchAction14' matchAction15' matchAction16' matchAction17' matchAction18' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 21 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' matchAction13' matchAction14' matchAction15' matchAction16' matchAction17' matchAction18' matchAction19' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 22 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' matchAction13' matchAction14' matchAction15' matchAction16' matchAction17' matchAction18' matchAction19' matchAction20' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 23 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' matchAction13' matchAction14' matchAction15' matchAction16' matchAction17' matchAction18' matchAction19' matchAction20' matchAction21' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 24 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' matchAction13' matchAction14' matchAction15' matchAction16' matchAction17' matchAction18' matchAction19' matchAction20' matchAction21' matchAction22' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 25 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' matchAction13' matchAction14' matchAction15' matchAction16' matchAction17' matchAction18' matchAction19' matchAction20' matchAction21' matchAction22' matchAction23' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 26 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' matchAction13' matchAction14' matchAction15' matchAction16' matchAction17' matchAction18' matchAction19' matchAction20' matchAction21' matchAction22' matchAction23' matchAction24' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 27 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' matchAction13' matchAction14' matchAction15' matchAction16' matchAction17' matchAction18' matchAction19' matchAction20' matchAction21' matchAction22' matchAction23' matchAction24' matchAction25' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 28 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' matchAction13' matchAction14' matchAction15' matchAction16' matchAction17' matchAction18' matchAction19' matchAction20' matchAction21' matchAction22' matchAction23' matchAction24' matchAction25' matchAction26' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 29 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' matchAction13' matchAction14' matchAction15' matchAction16' matchAction17' matchAction18' matchAction19' matchAction20' matchAction21' matchAction22' matchAction23' matchAction24' matchAction25' matchAction26' matchAction27' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 30 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' matchAction13' matchAction14' matchAction15' matchAction16' matchAction17' matchAction18' matchAction19' matchAction20' matchAction21' matchAction22' matchAction23' matchAction24' matchAction25' matchAction26' matchAction27' matchAction28' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 31 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' matchAction13' matchAction14' matchAction15' matchAction16' matchAction17' matchAction18' matchAction19' matchAction20' matchAction21' matchAction22' matchAction23' matchAction24' matchAction25' matchAction26' matchAction27' matchAction28' matchAction29' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 32 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' matchAction13' matchAction14' matchAction15' matchAction16' matchAction17' matchAction18' matchAction19' matchAction20' matchAction21' matchAction22' matchAction23' matchAction24' matchAction25' matchAction26' matchAction27' matchAction28' matchAction29' matchAction30' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 33 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' matchAction13' matchAction14' matchAction15' matchAction16' matchAction17' matchAction18' matchAction19' matchAction20' matchAction21' matchAction22' matchAction23' matchAction24' matchAction25' matchAction26' matchAction27' matchAction28' matchAction29' matchAction30' matchAction31' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 34 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' matchAction13' matchAction14' matchAction15' matchAction16' matchAction17' matchAction18' matchAction19' matchAction20' matchAction21' matchAction22' matchAction23' matchAction24' matchAction25' matchAction26' matchAction27' matchAction28' matchAction29' matchAction30' matchAction31' matchAction32' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 35 parameters. Parameters: obj' matchAction1' matchAction2' matchAction3' matchAction4' matchAction5' matchAction6' matchAction7' matchAction8' matchAction9' matchAction10' matchAction11' matchAction12' matchAction13' matchAction14' matchAction15' matchAction16' matchAction17' matchAction18' matchAction19' matchAction20' matchAction21' matchAction22' matchAction23' matchAction24' matchAction25' matchAction26' matchAction27' matchAction28' matchAction29' matchAction30' matchAction31' matchAction32' matchAction33' defaultAction
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 5 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 6 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 7 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 8 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 9 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 10 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 11 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 12 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 13 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 14 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 15 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 16 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 17 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 18 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 19 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 20 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 21 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 22 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' matchFunc20' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 23 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' matchFunc20' matchFunc21' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 24 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' matchFunc20' matchFunc21' matchFunc22' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 25 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' matchFunc20' matchFunc21' matchFunc22' matchFunc23' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 26 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' matchFunc20' matchFunc21' matchFunc22' matchFunc23' matchFunc24' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 27 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' matchFunc20' matchFunc21' matchFunc22' matchFunc23' matchFunc24' matchFunc25' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 28 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' matchFunc20' matchFunc21' matchFunc22' matchFunc23' matchFunc24' matchFunc25' matchFunc26' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 29 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' matchFunc20' matchFunc21' matchFunc22' matchFunc23' matchFunc24' matchFunc25' matchFunc26' matchFunc27' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 30 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' matchFunc20' matchFunc21' matchFunc22' matchFunc23' matchFunc24' matchFunc25' matchFunc26' matchFunc27' matchFunc28' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 31 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' matchFunc20' matchFunc21' matchFunc22' matchFunc23' matchFunc24' matchFunc25' matchFunc26' matchFunc27' matchFunc28' matchFunc29' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 32 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' matchFunc20' matchFunc21' matchFunc22' matchFunc23' matchFunc24' matchFunc25' matchFunc26' matchFunc27' matchFunc28' matchFunc29' matchFunc30' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 33 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' matchFunc20' matchFunc21' matchFunc22' matchFunc23' matchFunc24' matchFunc25' matchFunc26' matchFunc27' matchFunc28' matchFunc29' matchFunc30' matchFunc31' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 34 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' matchFunc20' matchFunc21' matchFunc22' matchFunc23' matchFunc24' matchFunc25' matchFunc26' matchFunc27' matchFunc28' matchFunc29' matchFunc30' matchFunc31' matchFunc32' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 35 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' matchFunc20' matchFunc21' matchFunc22' matchFunc23' matchFunc24' matchFunc25' matchFunc26' matchFunc27' matchFunc28' matchFunc29' matchFunc30' matchFunc31' matchFunc32' matchFunc33' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 36 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' matchFunc20' matchFunc21' matchFunc22' matchFunc23' matchFunc24' matchFunc25' matchFunc26' matchFunc27' matchFunc28' matchFunc29' matchFunc30' matchFunc31' matchFunc32' matchFunc33' matchFunc34' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 37 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' matchFunc20' matchFunc21' matchFunc22' matchFunc23' matchFunc24' matchFunc25' matchFunc26' matchFunc27' matchFunc28' matchFunc29' matchFunc30' matchFunc31' matchFunc32' matchFunc33' matchFunc34' matchFunc35' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 38 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' matchFunc20' matchFunc21' matchFunc22' matchFunc23' matchFunc24' matchFunc25' matchFunc26' matchFunc27' matchFunc28' matchFunc29' matchFunc30' matchFunc31' matchFunc32' matchFunc33' matchFunc34' matchFunc35' matchFunc36' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 39 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' matchFunc20' matchFunc21' matchFunc22' matchFunc23' matchFunc24' matchFunc25' matchFunc26' matchFunc27' matchFunc28' matchFunc29' matchFunc30' matchFunc31' matchFunc32' matchFunc33' matchFunc34' matchFunc35' matchFunc36' matchFunc37' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 40 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' matchFunc20' matchFunc21' matchFunc22' matchFunc23' matchFunc24' matchFunc25' matchFunc26' matchFunc27' matchFunc28' matchFunc29' matchFunc30' matchFunc31' matchFunc32' matchFunc33' matchFunc34' matchFunc35' matchFunc36' matchFunc37' matchFunc38' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 41 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' matchFunc20' matchFunc21' matchFunc22' matchFunc23' matchFunc24' matchFunc25' matchFunc26' matchFunc27' matchFunc28' matchFunc29' matchFunc30' matchFunc31' matchFunc32' matchFunc33' matchFunc34' matchFunc35' matchFunc36' matchFunc37' matchFunc38' matchFunc39' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,ObjectExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ObjectExtensions.cs,TypeSwitch,The method has 42 parameters. Parameters: obj' matchFunc1' matchFunc2' matchFunc3' matchFunc4' matchFunc5' matchFunc6' matchFunc7' matchFunc8' matchFunc9' matchFunc10' matchFunc11' matchFunc12' matchFunc13' matchFunc14' matchFunc15' matchFunc16' matchFunc17' matchFunc18' matchFunc19' matchFunc20' matchFunc21' matchFunc22' matchFunc23' matchFunc24' matchFunc25' matchFunc26' matchFunc27' matchFunc28' matchFunc29' matchFunc30' matchFunc31' matchFunc32' matchFunc33' matchFunc34' matchFunc35' matchFunc36' matchFunc37' matchFunc38' matchFunc39' matchFunc40' defaultFunc
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,SemanticEquivalence,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\SemanticEquivalence.cs,AreSemanticallyEquivalent,The method has 5 parameters. Parameters: semanticModel1' semanticModel2' node1' node2' predicate
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,SemanticEquivalence,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\SemanticEquivalence.cs,AreSemanticallyEquivalentWorker,The method has 5 parameters. Parameters: semanticModel1' semanticModel2' node1' node2' predicate
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,SemanticModelExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\SemanticModelExtensions.cs,GetSymbols,The method has 5 parameters. Parameters: semanticModel' token' workspace' bindLiteralsToUnderlyingType' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,SemanticModelExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\SemanticModelExtensions.cs,GetSymbolsEnumerable,The method has 6 parameters. Parameters: semanticModel' semanticFacts' syntaxFacts' token' bindLiteralsToUnderlyingType' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions,SourceTextExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\SourceTextExtensions.cs,GetLinesAndOffsets,The method has 6 parameters. Parameters: text' textSpan' startLineNumber' startOffset' endLineNumber' endOffset
Long Parameter List,Microsoft.CodeAnalysis.Shared.Utilities,Reader,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\XmlFragmentParser.cs,EncodeAndAdvance,The method has 5 parameters. Parameters: src' srcIndex' dest' destIndex' destCount
Long Parameter List,Microsoft.CodeAnalysis.Shared.Utilities,FindTokenHelper,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\FindTokenHelper.cs,FindTokenOnRightOfPosition,The method has 6 parameters. Parameters: root' position' skippedTokenFinder' includeSkipped' includeDirectives' includeDocumentationComments
Long Parameter List,Microsoft.CodeAnalysis.Shared.Utilities,FindTokenHelper,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\FindTokenHelper.cs,FindTokenOnLeftOfPosition,The method has 6 parameters. Parameters: root' position' skippedTokenFinder' includeSkipped' includeDirectives' includeDocumentationComments
Long Parameter List,Microsoft.CodeAnalysis.Shared.Utilities,FindTokenHelper,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\FindTokenHelper.cs,GetInitialToken,The method has 5 parameters. Parameters: root' position' includeSkipped' includeDirectives' includeDocumentationComments
Long Parameter List,Microsoft.CodeAnalysis.Shared.Utilities,NameGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\NameGenerator.cs,HandleCollisions,The method has 6 parameters. Parameters: isFixed' names' name' collisionIndices' canUse' isCaseSensitive
Long Parameter List,Microsoft.CodeAnalysis.Shared.Utilities,SignatureComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SignatureComparer.cs,HaveSameSignature,The method has 5 parameters. Parameters: method1' method2' caseSensitive' compareParameterName' isParameterCaseSensitive
Long Parameter List,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,ParametersAreEquivalent,The method has 5 parameters. Parameters: xParameters' yParameters' equivalentTypesWithDifferingAssemblies' compareParameterName' isParameterNameCaseSensitive
Long Parameter List,Microsoft.CodeAnalysis.Shared.Utilities,ParameterSymbolEqualityComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.ParameterSymbolEqualityComparer.cs,Equals,The method has 5 parameters. Parameters: x' y' equivalentTypesWithDifferingAssemblies' compareParameterName' isCaseSensitive
Long Parameter List,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,AbstractSpeculationAnalyzer,The method has 6 parameters. Parameters: expression' newExpression' semanticModel' cancellationToken' skipVerificationForReplacedNode' failOnOverloadResolutionFailuresInOriginalCode
Long Parameter List,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,IsCompatibleInterfaceMemberImplementation,The method has 5 parameters. Parameters: symbol' newSymbol' originalInvocationExpression' newInvocationExpression' speculativeSemanticModel
Long Parameter List,Microsoft.CodeAnalysis.Simplification,AbstractSimplificationService<TExpressionSyntax;TStatementSyntax;TCrefSyntax>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\AbstractSimplificationService.cs,Expand,The method has 6 parameters. Parameters: node' semanticModel' annotationForReplacedAliasIdentifier' expandInsideNode' expandParameter' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Simplification,AbstractSimplificationService<TExpressionSyntax;TStatementSyntax;TCrefSyntax>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\AbstractSimplificationService.cs,ReduceAsync,The method has 5 parameters. Parameters: document' spans' optionSet' reducers' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Simplification,AbstractSimplificationService<TExpressionSyntax;TStatementSyntax;TCrefSyntax>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\AbstractSimplificationService.cs,ReduceAsync,The method has 7 parameters. Parameters: document' root' semanticModel' spans' optionSet' reducers' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Simplification,AbstractSimplificationService<TExpressionSyntax;TStatementSyntax;TCrefSyntax>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\AbstractSimplificationService.cs,ReduceAsync,The method has 9 parameters. Parameters: document' root' nodesAndTokensToReduce' reducers' optionSet' semanticModel' reducedNodesMap' reducedTokensMap' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Simplification,ISimplificationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\ISimplificationService.cs,Expand,The method has 6 parameters. Parameters: node' semanticModel' annotationForReplacedAliasIdentifier' expandInsideNode' expandParameter' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Simplification,ISimplificationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\ISimplificationService.cs,ReduceAsync,The method has 5 parameters. Parameters: document' spans' optionSet' reducers' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Simplification,Simplifier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\Simplifier.cs,ExpandAsync,The method has 5 parameters. Parameters: node' document' expandInsideNode' expandParameter' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Simplification,Simplifier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\Simplifier.cs,Expand,The method has 6 parameters. Parameters: node' semanticModel' workspace' expandInsideNode' expandParameter' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Simplification,Simplifier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\Simplifier.cs,Expand,The method has 5 parameters. Parameters: token' semanticModel' workspace' expandInsideNode' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Versions,Extensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Versions\Extensions.cs,CanReusePersistedSemanticVersionInternal,The method has 5 parameters. Parameters: project' projectVersion' semanticVersion' persistedVersion' versionGetter
Long Parameter List,Microsoft.CodeAnalysis.Host,AbstractSyntaxTreeFactoryService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Host\SyntaxTreeFactory\AbstractSyntaxTreeFactoryService.AbstractRecoverableSyntaxRoot.cs,CreateRecoverableTree,The method has 5 parameters. Parameters: cacheKey' filePath' options' text' root
Long Parameter List,Microsoft.CodeAnalysis.Host,ISyntaxTreeFactoryService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Host\SyntaxTreeFactory\ISyntaxTreeFactoryService.cs,CreateRecoverableTree,The method has 5 parameters. Parameters: cacheKey' filePath' options' text' root
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractMemberScopedReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractMemberScopedReferenceFinder.cs,FindReferencesInTokensWithSymbolNameAsync,The method has 5 parameters. Parameters: symbol' document' tokens' cancellationToken' findParentNode
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractMemberScopedReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractMemberScopedReferenceFinder.cs,FindReferencesInContainerAsync,The method has 5 parameters. Parameters: symbol' container' document' cancellationToken' findParentNode
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindReferencesInDocumentUsingIdentifierAsync,The method has 5 parameters. Parameters: symbol' identifier' document' cancellationToken' findParentNode
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,OriginalSymbolsMatch,The method has 6 parameters. Parameters: searchSymbol' symbolToMatch' solution' searchSymbolCompilation' symbolToMatchCompilation' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,OriginalSymbolsMatchCore,The method has 6 parameters. Parameters: searchSymbol' symbolToMatch' solution' searchSymbolCompilation' symbolToMatchCompilation' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,VerifyForwardedTypes,The method has 7 parameters. Parameters: equivalentTypesWithDifferingAssemblies' searchSymbol' symbolToMatch' solution' searchSymbolCompilation' symbolToMatchCompilation' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindReferencesInTokensAsync,The method has 6 parameters. Parameters: symbol' document' tokens' tokensMatch' cancellationToken' findParentNode
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindReferencesInTokensAsync,The method has 5 parameters. Parameters: document' tokens' tokensMatch' symbolsMatch' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindReferencesInDocumentAsync,The method has 5 parameters. Parameters: symbol' document' tokensMatch' cancellationToken' findParentNode
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindReferencesInDocumentAsync,The method has 5 parameters. Parameters: symbol' document' tokensMatch' symbolsMatch' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindAliasReferencesAsync,The method has 5 parameters. Parameters: nonAliasReferences' symbol' document' cancellationToken' findParentNode
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindAliasReferencesAsync,The method has 5 parameters. Parameters: nonAliasReferences' symbol' document' symbolsMatch' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindReferencesThroughAliasSymbolsAsync,The method has 5 parameters. Parameters: symbol' document' aliasSymbols' findParentNode' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindReferencesThroughAliasSymbolsAsync,The method has 5 parameters. Parameters: symbol' document' aliasSymbols' symbolsMatch' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.FindSymbols.Finders,ParameterSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\ParameterSymbolReferenceFinder.cs,CascadeBetweenAnonymousFunctionParameters,The method has 6 parameters. Parameters: document' semanticModel' container' parameter' convertedType1' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,AbstractSyntaxFormattingService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\AbstractSyntaxFormattingService.cs,Format,The method has 6 parameters. Parameters: node' options' rules' token1' token2' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,AbstractSyntaxFormattingService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\AbstractSyntaxFormattingService.cs,Format,The method has 5 parameters. Parameters: node' spans' options' rules' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,AbstractSyntaxFormattingService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\AbstractSyntaxFormattingService.cs,FormatMergedSpan,The method has 5 parameters. Parameters: node' options' rules' spansToFormat' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,AbstractSyntaxFormattingService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\AbstractSyntaxFormattingService.cs,FormatIndividually,The method has 5 parameters. Parameters: node' options' rules' spansToFormat' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,BottomUpBaseIndentationFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\BottomUpBaseIndentationFinder.cs,GetIndentationOfCurrentPosition,The method has 5 parameters. Parameters: tree' token' position' extraSpaces' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,BottomUpBaseIndentationFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\BottomUpBaseIndentationFinder.cs,GetIndentationOfCurrentPosition,The method has 7 parameters. Parameters: root' token' list' position' extraSpaces' tokenColumnGetter' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,AbstractFormatEngine,The method has 6 parameters. Parameters: treeData' optionSet' formattingRules' token1' token2' executor
Long Parameter List,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,AbstractFormatEngine,The method has 6 parameters. Parameters: treeData' optionSet' formattingRules' token1' token2' executor
Long Parameter List,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,ApplyTokenOperations,The method has 6 parameters. Parameters: context' tokenStream' anchorContextTask' nodeOperations' tokenOperations' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,ApplySpecialOperations,The method has 5 parameters. Parameters: context' tokenStream' nodeOperationsCollector' applier' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,ApplyAnchorOperations,The method has 5 parameters. Parameters: context' tokenStream' tokenOperations' applier' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,ApplySpaceAndWrappingOperations,The method has 5 parameters. Parameters: context' tokenStream' tokenOperations' applier' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,ApplySpaceAndWrappingOperationsBody,The method has 5 parameters. Parameters: context' tokenStream' operation' applier' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,OperationApplier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.OperationApplier.cs,ApplyAlignment,The method has 5 parameters. Parameters: token' tokens' previousChangesMap' tokenData' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,OperationApplier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.OperationApplier.cs,ApplyIndentationToGivenPosition,The method has 6 parameters. Parameters: previousToken' currentToken' triviaInfo' baseSpaceOrIndentation' previousChangesMap' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,OperationApplier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.OperationApplier.cs,ApplyIndentationDeltaFromTo,The method has 5 parameters. Parameters: firstToken' lastToken' indentationDelta' previousChangesMap' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,OperationApplier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.OperationApplier.cs,ApplyIndentationDelta,The method has 6 parameters. Parameters: pairIndex' currentToken' indentationDelta' triviaInfo' previousChangesMap' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,OperationApplier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.OperationApplier.cs,ApplyBaseTokenIndentationChangesFromTo,The method has 5 parameters. Parameters: baseToken' startToken' endToken' previousChangesMap' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,OperationApplier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.OperationApplier.cs,ApplyBaseTokenIndentationChangesFromTo,The method has 5 parameters. Parameters: baseToken' startToken' endToken' previousChangesMap' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,AbstractComplexTrivia<TToken;TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractTriviaDataFactory.AbstractComplexTrivia.cs,Format,The method has 5 parameters. Parameters: context' formattingRules' lines' spaces' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,AbstractComplexTrivia<TToken;TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractTriviaDataFactory.AbstractComplexTrivia.cs,WithLine,The method has 5 parameters. Parameters: line' indentation' context' formattingRules' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,FormattedWhitespace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractTriviaDataFactory.FormattedWhitespace.cs,WithLine,The method has 5 parameters. Parameters: line' indentation' context' formattingRules' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,FormattedWhitespace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractTriviaDataFactory.FormattedWhitespace.cs,Format,The method has 5 parameters. Parameters: context' formattingRules' formattingResultApplier' cancellationToken' tokenPairIndex
Long Parameter List,Microsoft.CodeAnalysis.Formatting,ModifiedWhitespace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractTriviaDataFactory.ModifiedWhitespace.cs,ModifiedWhitespace,The method has 5 parameters. Parameters: optionSet' lineBreaks' indentation' elastic' language
Long Parameter List,Microsoft.CodeAnalysis.Formatting,ModifiedWhitespace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractTriviaDataFactory.ModifiedWhitespace.cs,ModifiedWhitespace,The method has 6 parameters. Parameters: optionSet' original' lineBreaks' indentation' elastic' language
Long Parameter List,Microsoft.CodeAnalysis.Formatting,ModifiedWhitespace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractTriviaDataFactory.ModifiedWhitespace.cs,WithLine,The method has 5 parameters. Parameters: line' indentation' context' formattingRules' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,ModifiedWhitespace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractTriviaDataFactory.ModifiedWhitespace.cs,Format,The method has 5 parameters. Parameters: context' formattingRules' formattingResultApplier' cancellationToken' tokenPairIndex
Long Parameter List,Microsoft.CodeAnalysis.Formatting,Whitespace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractTriviaDataFactory.Whitespace.cs,Whitespace,The method has 5 parameters. Parameters: optionSet' lineBreaks' indentation' elastic' language
Long Parameter List,Microsoft.CodeAnalysis.Formatting,Whitespace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractTriviaDataFactory.Whitespace.cs,WithLine,The method has 5 parameters. Parameters: line' indentation' context' formattingRules' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,Whitespace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractTriviaDataFactory.Whitespace.cs,Format,The method has 5 parameters. Parameters: context' formattingRules' formattingResultApplier' cancellationToken' tokenPairIndex
Long Parameter List,Microsoft.CodeAnalysis.Formatting,TriviaData,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\TriviaData.cs,WithLine,The method has 5 parameters. Parameters: line' indentation' context' formattingRules' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,TriviaData,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\TriviaData.cs,Format,The method has 5 parameters. Parameters: context' formattingRules' formattingResultApplier' cancellationToken' tokenPairIndex
Long Parameter List,Microsoft.CodeAnalysis.Formatting,Formatter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Formatter.cs,FormatAsync,The method has 5 parameters. Parameters: document' spans' options' rules' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,Formatter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Formatter.cs,FormatAsync,The method has 5 parameters. Parameters: document' annotation' options' rules' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,Formatter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Formatter.cs,Format,The method has 5 parameters. Parameters: node' annotation' workspace' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,Formatter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Formatter.cs,Format,The method has 6 parameters. Parameters: node' annotation' workspace' options' rules' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,Formatter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Formatter.cs,Format,The method has 5 parameters. Parameters: node' workspace' options' rules' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,Formatter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Formatter.cs,Format,The method has 5 parameters. Parameters: node' span' workspace' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,Formatter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Formatter.cs,Format,The method has 5 parameters. Parameters: node' spans' workspace' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,Formatter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Formatter.cs,Format,The method has 6 parameters. Parameters: node' spans' workspace' options' rules' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,Formatter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Formatter.cs,GetFormattedTextChanges,The method has 5 parameters. Parameters: node' workspace' options' rules' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,Formatter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Formatter.cs,GetFormattedTextChanges,The method has 6 parameters. Parameters: node' span' workspace' options' rules' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,Formatter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Formatter.cs,GetFormattedTextChanges,The method has 6 parameters. Parameters: node' spans' workspace' options' rules' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,FormattingExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\FormattingExtensions.cs,ProcessTextBetweenTokens,The method has 6 parameters. Parameters: text' treeInfo' baseToken' tabSize' lineBreaks' spaceOrIndentation
Long Parameter List,Microsoft.CodeAnalysis.Formatting,FormattingExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\FormattingExtensions.cs,AdjustIndentForXmlDocExteriorTrivia,The method has 6 parameters. Parameters: triviaText' forceIndentation' indentation' indentationDelta' useTab' tabSize
Long Parameter List,Microsoft.CodeAnalysis.Formatting,FormattingExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\FormattingExtensions.cs,ReindentStartOfXmlDocumentationComment,The method has 6 parameters. Parameters: triviaText' forceIndentation' indentation' indentationDelta' useTab' tabSize
Long Parameter List,Microsoft.CodeAnalysis.Formatting,FormattingExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\FormattingExtensions.cs,GetNewIndentationForComments,The method has 6 parameters. Parameters: line' nonWhitespaceCharIndex' forceIndentation' indentation' indentationDelta' tabSize
Long Parameter List,Microsoft.CodeAnalysis.Formatting,ISyntaxFormattingService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\ISyntaxFormattingService.cs,Format,The method has 5 parameters. Parameters: node' spans' options' rules' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,AbstractTriviaFormatter<TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\AbstractTriviaFormatter.cs,AbstractTriviaFormatter,The method has 7 parameters. Parameters: context' formattingRules' token1' token2' originalString' lineBreaks' spaces
Long Parameter List,Microsoft.CodeAnalysis.Formatting,AbstractTriviaFormatter<TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\AbstractTriviaFormatter.cs,FormatFirstTriviaAndWhitespaceAfter,The method has 9 parameters. Parameters: lineColumnBeforeTrivia1' trivia1' existingWhitespaceBetween' trivia2' format' addWhitespaceTrivia' changes' implicitLineBreak' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Formatting,AbstractTriviaFormatter<TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\AbstractTriviaFormatter.cs,Apply,The method has 6 parameters. Parameters: lineColumnBeforeTrivia1' trivia1' lineColumnAfterTrivia1' existingWhitespaceBetween' trivia2' rule
Long Parameter List,Microsoft.CodeAnalysis.Formatting,AbstractTriviaFormatter<TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\AbstractTriviaFormatter.cs,GetRuleSpacesOrIndentation,The method has 6 parameters. Parameters: lineColumnBeforeTrivia1' trivia1' lineColumnAfterTrivia1' existingWhitespaceBetween' trivia2' rule
Long Parameter List,Microsoft.CodeAnalysis.Formatting,AbstractTriviaFormatter<TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\AbstractTriviaFormatter.cs,GetLineColumnOfWhitespace,The method has 5 parameters. Parameters: lineColumn' previousTrivia' trivia1' whitespaceBetween' trivia2
Long Parameter List,Microsoft.CodeAnalysis.Formatting,LineColumnRule,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\LineColumnRule.cs,With,The method has 6 parameters. Parameters: lines' spaces' indentation' lineOperation' spaceOperation' indentationOperation
Long Parameter List,Microsoft.CodeAnalysis.Formatting.Rules,BaseIndentationFormattingRule,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Rules\BaseIndentationFormattingRule.cs,SetInnermostNodeForSpan,The method has 5 parameters. Parameters: root' span' token1' token2' commonNode
Long Parameter List,Microsoft.CodeAnalysis.Formatting.Rules,FormattingOperations,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Rules\Operations\FormattingOperations.cs,CreateIndentBlockOperation,The method has 5 parameters. Parameters: startToken' endToken' textSpan' indentationDelta' option
Long Parameter List,Microsoft.CodeAnalysis.Formatting.Rules,FormattingOperations,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Rules\Operations\FormattingOperations.cs,CreateRelativeIndentBlockOperation,The method has 5 parameters. Parameters: baseToken' startToken' endToken' indentationDelta' option
Long Parameter List,Microsoft.CodeAnalysis.Formatting.Rules,FormattingOperations,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Rules\Operations\FormattingOperations.cs,CreateRelativeIndentBlockOperation,The method has 6 parameters. Parameters: baseToken' startToken' endToken' textSpan' indentationDelta' option
Long Parameter List,Microsoft.CodeAnalysis.Formatting.Rules,IndentBlockOperation,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Rules\Operations\IndentBlockOperation.cs,IndentBlockOperation,The method has 5 parameters. Parameters: startToken' endToken' textSpan' indentationDelta' option
Long Parameter List,Microsoft.CodeAnalysis.Formatting.Rules,IndentBlockOperation,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Rules\Operations\IndentBlockOperation.cs,IndentBlockOperation,The method has 6 parameters. Parameters: baseToken' startToken' endToken' textSpan' indentationDelta' option
Long Parameter List,Microsoft.CodeAnalysis.LanguageServices,ForEachSymbols,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LanguageServices\SemanticsFactsService\ForEachSymbols.cs,ForEachSymbols,The method has 5 parameters. Parameters: getEnumeratorMethod' moveNextMethod' currentProperty' disposeMethod' elementType
Long Parameter List,Microsoft.CodeAnalysis.LanguageServices,ISyntaxFactsService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LanguageServices\SyntaxFactsService\ISyntaxFactsService.cs,FindTokenOnLeftOfPosition,The method has 5 parameters. Parameters: node' position' includeSkipped' includeDirectives' includeDocumentationComments
Long Parameter List,Microsoft.CodeAnalysis.LanguageServices,ISyntaxFactsService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LanguageServices\SyntaxFactsService\ISyntaxFactsService.cs,FindTokenOnRightOfPosition,The method has 5 parameters. Parameters: node' position' includeSkipped' includeDirectives' includeDocumentationComments
Long Parameter List,Microsoft.CodeAnalysis.Recommendations,AbstractRecommendationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Recommendations\AbstractRecommendationService.cs,GetRecommendedSymbolsAtPositionWorker,The method has 5 parameters. Parameters: workspace' semanticModel' position' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Recommendations,AbstractRecommendationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Recommendations\AbstractRecommendationService.cs,GetRecommendedSymbolsAtPosition,The method has 5 parameters. Parameters: workspace' semanticModel' position' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Recommendations,IRecommendationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Recommendations\IRecommendationService.cs,GetRecommendedSymbolsAtPosition,The method has 5 parameters. Parameters: workspace' semanticModel' position' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Recommendations,Recommender,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Recommendations\Recommender.cs,GetRecommendedSymbolsAtPosition,The method has 5 parameters. Parameters: semanticModel' position' workspace' options' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Rename.ConflictEngine,RenameActionAnnotation,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\Annotations\RenameActionAnnotation.cs,RenameActionAnnotation,The method has 8 parameters. Parameters: originalSpan' isRenameLocation' isAccessorLocation' suffix' isOriginalTextLocation' renameDeclarationLocations' isNamespaceDeclarationReference' isInvocationExpression
Long Parameter List,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,ResolveConflictsAsync,The method has 5 parameters. Parameters: renameLocationSet' originalText' replacementText' optionSet' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,AddImplicitConflicts,The method has 8 parameters. Parameters: renamedSymbol' originalSymbol' implicitReferenceLocations' semanticModel' originalDeclarationLocation' newDeclarationLocationStartingPosition' conflictResolution' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,AddDeclarationConflictsAsync,The method has 6 parameters. Parameters: renamedSymbol' renameSymbol' referencedSymbols' conflictResolution' reverseMappedLocations' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,Session,The method has 6 parameters. Parameters: renameLocationSet' renameSymbolDeclarationLocation' originalText' replacementText' optionSet' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,CheckForConflictAsync,The method has 5 parameters. Parameters: conflictResolution' renamedSymbolInNewSolution' newDocument' conflictAnnotation' newReferencedSymbols
Long Parameter List,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,AnnotateAndRename_WorkerAsync,The method has 6 parameters. Parameters: originalSolution' partiallyRenamedSolution' documentIdsToRename' renameLocations' renameSpansTracker' replacementTextValid
Long Parameter List,Microsoft.CodeAnalysis.Rename.ConflictEngine,RelatedLocation,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\RelatedLocation.cs,RelatedLocation,The method has 5 parameters. Parameters: location' documentId' type' isReference' complexifiedTargetSpan
Long Parameter List,Microsoft.CodeAnalysis.Rename.ConflictEngine,RenamedSpansTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\RenamedSpansTracker.cs,SimplifyAsync,The method has 5 parameters. Parameters: solution' documentIds' replacementTextValid' renameAnnotations' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Rename,IRenameRewriterLanguageService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\IRenameRewriterLanguageService.cs,ComputeDeclarationConflictsAsync,The method has 8 parameters. Parameters: replacementText' renamedSymbol' renameSymbol' referencedSymbols' baseSolution' newSolution' reverseMappedLocations' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Rename,IRenameRewriterLanguageService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\IRenameRewriterLanguageService.cs,ComputePossibleImplicitUsageConflicts,The method has 5 parameters. Parameters: renamedSymbol' semanticModel' originalDeclarationLocation' newDeclarationLocationStartingPosition' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Rename,RenameLocation,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.cs,RenameLocation,The method has 6 parameters. Parameters: location' documentId' isCandidateLocation' isRenamableAliasUsage' isRenamableAccessor' containingLocationForStringOrComment
Long Parameter List,Microsoft.CodeAnalysis.Rename,RenameLocationSet,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,RenameLocationSet,The method has 5 parameters. Parameters: locations' symbol' solution' referencedSymbols' implicitLocations
Long Parameter List,Microsoft.CodeAnalysis.Rename,RenameLocationSet,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,RenameLocationSet,The method has 7 parameters. Parameters: symbol' solution' optionSet' originalSymbolResult' overloadsResult' stringsResult' commentsResult
Long Parameter List,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,ShouldIncludeSymbolAsync,The method has 5 parameters. Parameters: referencedSymbol' originalSymbol' solution' considerSymbolReferences' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,GetRenamableReferenceLocationsAsync,The method has 5 parameters. Parameters: referencedSymbol' originalSymbol' location' solution' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,GetRenamableLocationsInStringsAndCommentsAsync,The method has 6 parameters. Parameters: originalSymbol' solution' renameLocations' renameInStrings' renameInComments' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,AddLocationsToRenameInStringsAsync,The method has 5 parameters. Parameters: document' renameText' syntaxFactsService' renameLocations' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,AddLocationsToRenameInStringsAndComments,The method has 7 parameters. Parameters: document' tree' renameText' renameStringsAndPositions' renameLocations' isRenameInStrings' isRenameInComments
Long Parameter List,Microsoft.CodeAnalysis.Rename,Renamer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\Renamer.cs,RenameSymbolAsync,The method has 5 parameters. Parameters: solution' symbol' newName' optionSet' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Rename,RenameRewriterParameters,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameRewriterParameters.cs,RenameRewriterParameters,The method has 17 parameters. Parameters: renamedSymbolDeclarationAnnotation' document' semanticModel' syntaxRoot' replacementText' originalText' possibleNameConflicts' renameLocations' stringAndCommentTextSpans' conflictLocationSpans' originalSolution' renameSymbol' replacementTextValid' renameSpansTracker' optionSet' renameAnnotations' cancellationToken
Long Parameter List,Microsoft.CodeAnalysis.Shared.Collections,IntervalTree<T>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Collections\IntervalTree`1.cs,Contains,The method has 5 parameters. Parameters: value' start' length' introspector' skipZeroLengthIntervals
Long Parameter List,Microsoft.CodeAnalysis.Shared.Collections,IntervalTree<T>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Collections\IntervalTree`1.cs,IntersectsWith,The method has 5 parameters. Parameters: value' start' length' introspector' skipZeroLengthIntervals
Long Parameter List,Microsoft.CodeAnalysis.Shared.Collections,IntervalTree<T>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Collections\IntervalTree`1.cs,OverlapsWith,The method has 5 parameters. Parameters: value' start' length' introspector' skipZeroLengthIntervals
Long Parameter List,Microsoft.CodeAnalysis.Shared.Collections,IntervalTree<T>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Collections\IntervalTree`1.cs,GetInOrderIntervals,The method has 5 parameters. Parameters: start' length' testInterval' introspector' skipZeroLengthIntervals
Long Parameter List,Microsoft.CodeAnalysis.Shared.Collections,IntervalTree<T>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Collections\IntervalTree`1.cs,GetPreOrderIntervals,The method has 5 parameters. Parameters: start' length' testInterval' introspector' skipZeroLengthIntervals
Long Parameter List,Microsoft.CodeAnalysis.Shared.Collections,IntervalTree<T>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Collections\IntervalTree`1.cs,Insert,The method has 5 parameters. Parameters: root' newNode' newNodeStart' introspector' inPlace
Long Parameter List,Microsoft.CodeAnalysis.Shared.Extensions.ContextQuery,AbstractSyntaxContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ContextQuery\AbstractSyntaxContext.cs,AbstractSyntaxContext,The method has 16 parameters. Parameters: workspace' semanticModel' position' leftToken' targetToken' isTypeContext' isNamespaceContext' isPreProcessorDirectiveContext' isRightOfNameSeparator' isStatementContext' isAnyExpressionContext' isAttributeNameContext' isEnumTypeMemberAccessContext' isNameOfContext' isInQuery' isInImportsDirective
Long Parameter List,Roslyn.Collections.Immutable,Bucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,Add,The method has 5 parameters. Parameters: suggestedHashRoll' bucket' comparer' valueComparer' overwriteExistingValue
Long Parameter List,Roslyn.Collections.Immutable,ValueBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,Add,The method has 5 parameters. Parameters: suggestedHashRoll' bucket' comparer' valueComparer' overwriteExistingValue
Long Parameter List,Roslyn.Collections.Immutable,ListBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,Add,The method has 5 parameters. Parameters: suggestedHashRoll' bucket' comparer' valueComparer' overwriteExistingValue
Long Parameter List,Roslyn.Collections.Immutable,HashBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,Add,The method has 5 parameters. Parameters: suggestedHashRoll' bucket' keyComparer' valueComparer' overwriteExistingValue
Long Identifier,Microsoft.CodeAnalysis,ComparisonOptions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SymbolId\SymbolKey.ComparisonOptions.cs,ComparisonOptions,The length of the parameter compareMethodTypeParametersByName is 33.
Long Identifier,Microsoft.CodeAnalysis,MethodSymbolKey,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SymbolId\SymbolKey.MethodSymbolKey.cs,,The length of the parameter _isPartialMethodImplementationPart is 34.
Long Identifier,Microsoft.CodeAnalysis,SymbolKeyComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SymbolId\SymbolKey.SymbolKeyComparer.cs,GetComparer,The length of the parameter compareMethodTypeParametersByName is 33.
Long Identifier,Microsoft.CodeAnalysis,PrimaryWorkspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\PrimaryWorkspace.cs,,The length of the parameter s_primaryWorkspaceTaskSourceList is 32.
Long Identifier,Microsoft.CodeAnalysis,Project,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Project.cs,,The length of the parameter s_createAdditionalDocumentFunction is 34.
Long Identifier,Microsoft.CodeAnalysis,ProjectDependencyGraph,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectDependencyGraph.cs,,The length of the parameter _lazyTopologicallySortedProjects is 32.
Long Identifier,Microsoft.CodeAnalysis,ProjectDependencyGraph,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectDependencyGraph.cs,,The length of the parameter _reverseTransitiveReferencesMap is 31.
Long Identifier,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,ProjectState,The length of the parameter lazyLatestDocumentTopLevelChangeVersion is 39.
Long Identifier,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,With,The length of the parameter latestDocumentTopLevelChangeVersion is 35.
Long Identifier,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,,The length of the parameter _lazyLatestDocumentTopLevelChangeVersion is 40.
Long Identifier,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,,The length of the parameter s_createCompilationTrackerFunction is 34.
Long Identifier,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,,The length of the parameter _latestSolutionWithPartialCompilation is 37.
Long Identifier,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,,The length of the parameter _timeOfLatestSolutionWithPartialCompilation is 43.
Long Identifier,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,,The length of the parameter _documentIdOfLatestSolutionWithPartialCompilation is 49.
Long Identifier,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,,The length of the parameter s_metadataReferenceToProjectMap is 31.
Long Identifier,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,MergeDiffsAsync,The length of the parameter linkedDocumentGroupsWithChanges is 31.
Long Identifier,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,MergeChangesWithMergeFailComments,The length of the parameter insertedMergeConflictCommentsAtAdjustedLocation is 47.
Long Identifier,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,MergeChangesWithMergeFailComments,The length of the parameter conflictingCommentInsertionLocation is 35.
Long Identifier,Microsoft.CodeAnalysis,SessionLogMessage,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,,The length of the parameter OverlappingDistinctDiffsWithSameSpan is 36.
Long Identifier,Microsoft.CodeAnalysis,SessionLogMessage,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,,The length of the parameter OverlappingDistinctDiffsWithSameSpanAndSubstringRelation is 56.
Long Identifier,Microsoft.CodeAnalysis,SessionLogMessage,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,,The length of the parameter InsertedMergeConflictCommentsAtAdjustedLocation is 47.
Long Identifier,Microsoft.CodeAnalysis,LinkedFileGroupSessionInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,,The length of the parameter OverlappingDistinctDiffsWithSameSpan is 36.
Long Identifier,Microsoft.CodeAnalysis,LinkedFileGroupSessionInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,,The length of the parameter OverlappingDistinctDiffsWithSameSpanAndSubstringRelation is 56.
Long Identifier,Microsoft.CodeAnalysis,LinkedFileGroupSessionInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,,The length of the parameter InsertedMergeConflictCommentsAtAdjustedLocation is 47.
Long Identifier,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,TryApplyChanges,The length of the parameter solutionWithLinkedFileChangesMerged is 35.
Long Identifier,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,,The length of the parameter TestHookStandaloneProjectsDoNotHoldReferences is 45.
Long Identifier,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,,The length of the parameter _bufferToDocumentInCurrentContextMap is 36.
Long Identifier,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,,The length of the parameter DocumentActiveContextChangedName is 32.
Long Identifier,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,,The length of the parameter s_bufferToWorkspaceRegistrationMap is 34.
Long Identifier,Roslyn.Utilities,BitArithmeticUtilities,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\BitArithmeticUtilities.cs,CountBits,The length of the parameter MASK_01010101010101010101010101010101 is 37.
Long Identifier,Roslyn.Utilities,BitArithmeticUtilities,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\BitArithmeticUtilities.cs,CountBits,The length of the parameter MASK_00110011001100110011001100110011 is 37.
Long Identifier,Roslyn.Utilities,BitArithmeticUtilities,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\BitArithmeticUtilities.cs,CountBits,The length of the parameter MASK_00001111000011110000111100001111 is 37.
Long Identifier,Roslyn.Utilities,BitArithmeticUtilities,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\BitArithmeticUtilities.cs,CountBits,The length of the parameter MASK_00000000111111110000000011111111 is 37.
Long Identifier,Roslyn.Utilities,BitArithmeticUtilities,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\BitArithmeticUtilities.cs,CountBits,The length of the parameter MASK_00000000000000001111111111111111 is 37.
Long Identifier,Roslyn.Utilities,BitArithmeticUtilities,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\BitArithmeticUtilities.cs,CountBits,The length of the parameter MASK_11111111111111111111111111111111 is 37.
Long Identifier,Roslyn.Utilities,DocumentationCommentXmlNames,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\DocumentationCommentXmlNames.cs,,The length of the parameter TypeParameterReferenceElementName is 33.
Long Identifier,Roslyn.Utilities,AsyncLazy<T>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AsyncLazy`1.cs,StartAsynchronousComputation,The length of the parameter requestToCompleteSynchronously is 30.
Long Identifier,Roslyn.Utilities,AsyncLazy<T>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AsyncLazy`1.cs,,The length of the parameter _asynchronousComputationCancellationSource is 42.
Long Identifier,Roslyn.Utilities,Request,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AsyncLazy`1.cs,,The length of the parameter _cancellationTokenRegistration is 30.
Long Identifier,Roslyn.Utilities,NonReentrantLock,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\NonReentrantLock.cs,NonReentrantLock,The length of the parameter useThisInstanceForSynchronization is 33.
Long Identifier,Roslyn.Utilities,NonReentrantLock,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\NonReentrantLock.cs,,The length of the parameter s_cancellationTokenCanceledEventHandler is 39.
Long Identifier,Microsoft.CodeAnalysis.Classification,ClassificationTypeNames,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Classification\ClassificationTypeNames.cs,,The length of the parameter XmlDocCommentProcessingInstruction is 34.
Long Identifier,Microsoft.CodeAnalysis.Classification,ClassificationTypeNames,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Classification\ClassificationTypeNames.cs,,The length of the parameter XmlLiteralProcessingInstruction is 31.
Long Identifier,Microsoft.CodeAnalysis.CodeCleanup.Providers,PredefinedCodeCleanupProviderNames,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\Providers\PredefinedCodeCleanupProviderNames.cs,,The length of the parameter RemoveUnnecessaryLineContinuation is 33.
Long Identifier,Microsoft.CodeAnalysis.CodeFixes,FixAllLogger,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllLogger.cs,LogDiagnosticsStats,The length of the parameter documentsAndDiagnosticsToFixMap is 31.
Long Identifier,Microsoft.CodeAnalysis.CodeFixes,FixAllLogger,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllLogger.cs,LogDiagnosticsStats,The length of the parameter projectsAndDiagnosticsToFixMap is 30.
Long Identifier,Microsoft.CodeAnalysis.CodeFixes,FixAllLogger,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllLogger.cs,,The length of the parameter s_documentsWithDiagnosticsToFix is 31.
Long Identifier,Microsoft.CodeAnalysis.CodeFixes,FixAllLogger,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllLogger.cs,,The length of the parameter s_projectsWithDiagnosticsToFix is 30.
Long Identifier,Microsoft.CodeAnalysis.CodeFixes,BatchFixAllProvider,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\BatchFixAllProvider.cs,GetFixAsync,The length of the parameter documentsAndDiagnosticsToFixMap is 31.
Long Identifier,Microsoft.CodeAnalysis.CodeFixes,BatchFixAllProvider,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\BatchFixAllProvider.cs,GetFixAsync,The length of the parameter projectsAndDiagnosticsToFixMap is 30.
Long Identifier,Microsoft.CodeAnalysis.CodeFixes,BatchFixAllProvider,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\BatchFixAllProvider.cs,GetFixAsync,The length of the parameter documentsAndDiagnosticsToFixMap is 31.
Long Identifier,Microsoft.CodeAnalysis.CodeFixes,BatchFixAllProvider,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\BatchFixAllProvider.cs,GetFixAsync,The length of the parameter projectsAndDiagnosticsToFixMap is 30.
Long Identifier,Microsoft.CodeAnalysis.CodeGeneration,AbstractImportsAdder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractImportsAdder.cs,GetAllReferencedDefinitionsAsync,The length of the parameter namespaceScopeToReferencedDefinitions is 37.
Long Identifier,Microsoft.CodeAnalysis.CodeGeneration,AbstractImportsAdder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractImportsAdder.cs,DetermineNamespaceToImportAsync,The length of the parameter namespaceScopeToReferencedDefinitions is 37.
Long Identifier,Microsoft.CodeAnalysis.CodeGeneration,AbstractImportsAdder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractImportsAdder.cs,DetermineNamespaceToImportAsync,The length of the parameter importsContainerToMissingImports is 32.
Long Identifier,Microsoft.CodeAnalysis.CodeGeneration,AbstractImportsAdder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractImportsAdder.cs,AddMissingNamespaces,The length of the parameter importsContainerToMissingImports is 32.
Long Identifier,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationMethodSymbol,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationMethodSymbol.cs,,The length of the parameter _explicitInterfaceImplementations is 33.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols,DependentProjectsFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentProjectsFinder.cs,AddSubmissionDependentProjectsAsync,The length of the parameter projectIdsToReferencingSubmissionIds is 36.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols,DependentProjectsFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentProjectsFinder.cs,AddNonSubmissionDependentProjectsAsync,The length of the parameter sourceAssemblyInTargetCompilation is 33.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols,DependentProjectsFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentProjectsFinder.cs,,The length of the parameter s_createDependentProjectsMapCallback is 36.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols,DependentTypeFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentTypeFinder.cs,,The length of the parameter s_compilationAllSourceAndAccessibleTypesTable is 45.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols,DependentTypeFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentTypeFinder.cs,,The length of the parameter s_findDerivedInterfacesPredicate is 32.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols,DependentTypeFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentTypeFinder.cs,,The length of the parameter s_findImplementingInterfacesPredicate is 37.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,SyntaxTreeContextInfo,The length of the parameter containsThisConstructorInitializer is 34.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,SyntaxTreeContextInfo,The length of the parameter containsBaseConstructorInitializer is 34.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,SyntaxTreeContextInfo,The length of the parameter containsElementAccessExpression is 31.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,ConvertToContainingNodeFlag,The length of the parameter containsThisConstructorInitializer is 34.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,ConvertToContainingNodeFlag,The length of the parameter containsBaseConstructorInitializer is 34.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,ConvertToContainingNodeFlag,The length of the parameter containsElementAccessExpression is 31.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeInfo.cs,CreateInfoAsync,The length of the parameter containsThisConstructorInitializer is 34.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeInfo.cs,CreateInfoAsync,The length of the parameter containsBaseConstructorInitializer is 34.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeInfo.cs,,The length of the parameter s_declaredSymbolsSnapshotCache is 30.
Long Identifier,Microsoft.CodeAnalysis.Shared.Extensions,ITypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,FindImplementations,The length of the parameter getExplicitInterfaceImplementations is 35.
Long Identifier,Microsoft.CodeAnalysis.Shared.Extensions,ReplaceTypeParameterBasedOnTypeConstraintVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,VisitTypeParameter,The length of the parameter derivedImplementedTypesOfEachConstraintType is 43.
Long Identifier,Microsoft.CodeAnalysis.Shared.Extensions,ReplaceTypeParameterBasedOnTypeConstraintVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,VisitTypeParameter,The length of the parameter knownsimilarTypesInCompilation is 30.
Long Identifier,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,IsEditorBrowsable,The length of the parameter editorBrowsableAttributeConstructor is 35.
Long Identifier,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,IsEditorBrowsable,The length of the parameter typeLibTypeAttributeConstructors is 32.
Long Identifier,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,IsEditorBrowsable,The length of the parameter typeLibFuncAttributeConstructors is 32.
Long Identifier,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,IsEditorBrowsable,The length of the parameter typeLibVarAttributeConstructors is 31.
Long Identifier,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,IsBrowsingProhibited,The length of the parameter editorBrowsableAttributeConstructor is 35.
Long Identifier,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,IsBrowsingProhibited,The length of the parameter typeLibTypeAttributeConstructors is 32.
Long Identifier,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,IsBrowsingProhibited,The length of the parameter typeLibFuncAttributeConstructors is 32.
Long Identifier,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,IsBrowsingProhibited,The length of the parameter typeLibVarAttributeConstructors is 31.
Long Identifier,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,FilterToVisibleAndBrowsableSymbols,The length of the parameter editorBrowsableAttributeConstructor is 35.
Long Identifier,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,FilterToVisibleAndBrowsableSymbols,The length of the parameter typeLibTypeAttributeConstructors is 32.
Long Identifier,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,FilterToVisibleAndBrowsableSymbols,The length of the parameter typeLibFuncAttributeConstructors is 32.
Long Identifier,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,FilterToVisibleAndBrowsableSymbols,The length of the parameter typeLibVarAttributeConstructors is 31.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,CommonFormattingHelpers,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\CommonFormattingHelpers.cs,AppendTextBetween,The length of the parameter token1PartOftoken2LeadingTrivia is 31.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,FindTokenHelper,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\FindTokenHelper.cs,FindSkippedTokenBackward,The length of the parameter skippedTokenContainingPosition is 30.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,FindTokenHelper,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\FindTokenHelper.cs,FindSkippedTokenForward,The length of the parameter skippedTokenContainingPosition is 30.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,SymbolEquivalenceComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.cs,GetEquivalenceVisitor,The length of the parameter compareMethodTypeParametersByIndex is 34.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,SymbolEquivalenceComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.cs,GetEquivalenceVisitor,The length of the parameter objectAndDynamicCompareEqually is 30.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,SymbolEquivalenceComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.cs,GetGetHashCodeVisitor,The length of the parameter compareMethodTypeParametersByIndex is 34.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,SymbolEquivalenceComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.cs,GetGetHashCodeVisitor,The length of the parameter objectAndDynamicCompareEqually is 30.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,SymbolEquivalenceComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.cs,GetVisitorIndex,The length of the parameter compareMethodTypeParametersByIndex is 34.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,SymbolEquivalenceComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.cs,GetVisitorIndex,The length of the parameter objectAndDynamicCompareEqually is 30.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,SymbolEquivalenceComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.cs,Equals,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,SymbolEquivalenceComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.cs,EqualsCore,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,EquivalenceVisitor,The length of the parameter compareMethodTypeParametersByIndex is 34.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,EquivalenceVisitor,The length of the parameter objectAndDynamicCompareEqually is 30.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,AreEquivalent,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,AreEquivalentWorker,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,ArrayTypesAreEquivalent,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,FieldsAreEquivalent,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,MethodsAreEquivalent,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,NamedTypesAreEquivalent,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,NamedTypesAreEquivalentError,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,HandleNamedTypesWorker,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,ParametersAreEquivalent,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,TypeArgumentsAreEquivalent,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,HandleAnonymousTypes,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,NamespacesAreEquivalent,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,ParametersAreEquivalent,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,PointerTypesAreEquivalent,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,PropertiesAreEquivalent,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,EventsAreEquivalent,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,TypeParametersAreEquivalent,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,,The length of the parameter _compareMethodTypeParametersByIndex is 35.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,,The length of the parameter _objectAndDynamicCompareEqually is 31.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,GetHashCodeVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.GetHashCodeVisitor.cs,GetHashCodeVisitor,The length of the parameter compareMethodTypeParametersByIndex is 34.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,GetHashCodeVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.GetHashCodeVisitor.cs,GetHashCodeVisitor,The length of the parameter objectAndDynamicCompareEqually is 30.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,GetHashCodeVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.GetHashCodeVisitor.cs,,The length of the parameter _compareMethodTypeParametersByIndex is 35.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,GetHashCodeVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.GetHashCodeVisitor.cs,,The length of the parameter _objectAndDynamicCompareEqually is 31.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,ParameterSymbolEqualityComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.ParameterSymbolEqualityComparer.cs,Equals,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,SignatureTypeSymbolEquivalenceComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.SignatureTypeSymbolEquivalenceComparer.cs,Equals,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,AbstractSpeculationAnalyzer,The length of the parameter skipVerificationForReplacedNode is 31.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,AbstractSpeculationAnalyzer,The length of the parameter failOnOverloadResolutionFailuresInOriginalCode is 46.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,GetSemanticRootOfReplacedExpression,The length of the parameter semanticRootOfOriginalExpression is 32.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,ReplacementChangesSemantics,The length of the parameter skipVerificationForCurrentNode is 30.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,AreCompatibleParameterLists,The length of the parameter isParam1DefaultValueNegativeZero is 32.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,AreCompatibleParameterLists,The length of the parameter isParam2DefaultValueNegativeZero is 32.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,,The length of the parameter _skipVerificationForReplacedNode is 32.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,,The length of the parameter _failOnOverloadResolutionFailuresInOriginalCode is 47.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,,The length of the parameter _isNewSemanticModelSpeculativeModel is 35.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,,The length of the parameter _lazySemanticRootOfOriginalExpression is 37.
Long Identifier,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,,The length of the parameter _lazySemanticRootOfReplacedExpression is 37.
Long Identifier,Microsoft.CodeAnalysis.Simplification,AbstractSimplificationService<TExpressionSyntax;TStatementSyntax;TCrefSyntax>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\AbstractSimplificationService.cs,GetNodesAndTokensToReduce,The length of the parameter isNodeOrTokenOutsideSimplifySpans is 33.
Long Identifier,Microsoft.CodeAnalysis.Simplification,AbstractSimplificationService<TExpressionSyntax;TStatementSyntax;TCrefSyntax>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\AbstractSimplificationService.cs,Expand,The length of the parameter annotationForReplacedAliasIdentifier is 36.
Long Identifier,Microsoft.CodeAnalysis.Simplification,AbstractSimplificationService<TExpressionSyntax;TStatementSyntax;TCrefSyntax>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\AbstractSimplificationService.cs,ReduceAsync,The length of the parameter isNodeOrTokenOutsideSimplifySpans is 33.
Long Identifier,Microsoft.CodeAnalysis.Simplification,ISimplificationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\ISimplificationService.cs,Expand,The length of the parameter annotationForReplacedAliasIdentifier is 36.
Long Identifier,Microsoft.CodeAnalysis.Simplification,SimplificationOptions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\SimplificationOption.cs,,The length of the parameter PreferOmittingModuleNamesInQualification is 40.
Long Identifier,Microsoft.CodeAnalysis.Simplification,SimplificationOptions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\SimplificationOption.cs,,The length of the parameter PreferImplicitTypeInLocalDeclaration is 36.
Long Identifier,Microsoft.CodeAnalysis.Simplification,SimplificationOptions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\SimplificationOption.cs,,The length of the parameter AllowSimplificationToGenericType is 32.
Long Identifier,Microsoft.CodeAnalysis.Simplification,SimplificationOptions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\SimplificationOption.cs,,The length of the parameter QualifyMemberAccessWithThisOrMe is 31.
Long Identifier,Microsoft.CodeAnalysis.Simplification,SimplificationOptions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\SimplificationOption.cs,,The length of the parameter PreferIntrinsicPredefinedTypeKeywordInDeclaration is 49.
Long Identifier,Microsoft.CodeAnalysis.Simplification,SimplificationOptions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\SimplificationOption.cs,,The length of the parameter PreferIntrinsicPredefinedTypeKeywordInMemberAccess is 50.
Long Identifier,Microsoft.CodeAnalysis.Versions,PersistedVersionStampLogger,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Versions\PersistedVersionStampLogger.cs,,The length of the parameter InitialDependentSemanticVersionCount is 36.
Long Identifier,Microsoft.CodeAnalysis.Host,CacheOptions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Host\Caching\CacheOptions.cs,,The length of the parameter RecoverableTreeLengthThreshold is 30.
Long Identifier,Microsoft.CodeAnalysis.Host,AbstractSyntaxTreeFactoryService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Host\SyntaxTreeFactory\AbstractSyntaxTreeFactoryService.AbstractRecoverableSyntaxRoot.cs,,The length of the parameter MinimumLengthForRecoverableTree is 31.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,OriginalSymbolsMatchCore,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,VerifyForwardedTypes,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,VerifyForwardedTypes,The length of the parameter equivalentTypesWithDifferingAssemblies is 38.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindReferencesInForEachStatementsAsync,The length of the parameter originalUnreducedSymbolDefinition is 33.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,Matches,The length of the parameter notNulloriginalUnreducedSymbol2 is 31.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols.Finders,ParameterSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\ParameterSymbolReferenceFinder.cs,DetermineCascadedSymbolsAsync,The length of the parameter anonymousFunctionParameterCascades is 34.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols.Finders,ParameterSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\ParameterSymbolReferenceFinder.cs,DetermineCascadedSymbolsAsync,The length of the parameter propertyOrEventOrAccessorParameterCascades is 42.
Long Identifier,Microsoft.CodeAnalysis.FindSymbols.Finders,PropertySymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\PropertySymbolReferenceFinder.cs,FindElementAccessReferencesAndIndexerMemberCrefReferencesAsync,The length of the parameter elementAccessExpressionsAndIndexerMemberCref is 44.
Long Identifier,Microsoft.CodeAnalysis.Formatting,AbstractSyntaxFormattingService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\AbstractSyntaxFormattingService.cs,AllowDisjointSpanMerging,The length of the parameter shouldUseFormattingSpanCollapse is 31.
Long Identifier,Microsoft.CodeAnalysis.Formatting,FormattingContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Context\FormattingContext.AnchorData.cs,AddIndentBlockOperation,The length of the parameter inseparableRegionStartingPosition is 33.
Long Identifier,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,CreateNodeOperationTasks,The length of the parameter anchorIndentationOperationsTask is 31.
Long Identifier,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,ApplyBeginningOfTreeTriviaOperation,The length of the parameter beginningOfTreeTriviaInfoApplier is 32.
Long Identifier,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,ApplyAnchorOperations,The length of the parameter tokenPairsToApplyAnchorOperations is 33.
Long Identifier,Microsoft.CodeAnalysis.Formatting,Partitioner,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.Partitioner.cs,GetPartitions,The length of the parameter nextPartitionStartOperationIndex is 32.
Long Identifier,Microsoft.CodeAnalysis.Formatting,NodeOperations,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\NodeOperations.cs,NodeOperations,The length of the parameter anchorIndentationOperationsTask is 31.
Long Identifier,Microsoft.CodeAnalysis.Formatting,AbstractTriviaFormatter<TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\AbstractTriviaFormatter.cs,GetRuleSpacesOrIndentation,The length of the parameter lineColumnAfterExistingWhitespace is 33.
Long Identifier,Microsoft.CodeAnalysis.Formatting.Rules,FormattingOperations,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Rules\Operations\FormattingOperations.cs,,The length of the parameter s_defaultOneSpaceIfOnSingleLine is 31.
Long Identifier,Microsoft.CodeAnalysis.Formatting.Rules,FormattingOperations,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Rules\Operations\FormattingOperations.cs,,The length of the parameter s_forceZeroSpaceIfOnSingleLine is 30.
Long Identifier,Microsoft.CodeAnalysis.Formatting.Rules,FormattingOperations,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Rules\Operations\FormattingOperations.cs,,The length of the parameter s_forceZeroLineUsingSpaceForce is 30.
Long Identifier,Microsoft.CodeAnalysis.Notification,GlobalOperationNotificationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Notification\GlobalOperationNotificationService.cs,,The length of the parameter GlobalOperationStartedEventName is 31.
Long Identifier,Microsoft.CodeAnalysis.Notification,GlobalOperationNotificationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Notification\GlobalOperationNotificationService.cs,,The length of the parameter GlobalOperationStoppedEventName is 31.
Long Identifier,Microsoft.CodeAnalysis.Options,OptionService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Options\OptionService.cs,,The length of the parameter _featureNameToOptionSerializers is 31.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,RenameActionAnnotation,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\Annotations\RenameActionAnnotation.cs,RenameActionAnnotation,The length of the parameter isNamespaceDeclarationReference is 31.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,RenameActionAnnotation,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\Annotations\RenameActionAnnotation.cs,,The length of the parameter RenameDeclarationLocationReferences is 35.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,RenameActionAnnotation,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\Annotations\RenameActionAnnotation.cs,,The length of the parameter IsNamespaceDeclarationReference is 31.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,RenameDeclarationLocationReference,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\Annotations\RenameDeclarationLocationReference.cs,RenameDeclarationLocationReference,The length of the parameter declaringSyntaxReferencesCount is 30.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,RenameDeclarationLocationReference,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\Annotations\RenameDeclarationLocationReference.cs,RenameDeclarationLocationReference,The length of the parameter declaringSyntaxReferencesCount is 30.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolution.cs,,The length of the parameter _intermediateSolutionContainingOnlyModifiedDocuments is 52.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,ResolveConflictsAsync,The length of the parameter renameSymbolDeclarationLocation is 31.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,AddImplicitConflicts,The length of the parameter newDeclarationLocationStartingPosition is 38.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,Session,The length of the parameter renameSymbolDeclarationLocation is 31.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,ResolveConflictsAsync,The length of the parameter documentsGroupedByTopologicallySortedProjectId is 46.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,ResolveConflictsAsync,The length of the parameter documentIdsThatGetsAnnotatedAndRenamed is 38.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,IdentifyConflictsAsync,The length of the parameter nodesOrTokensWithConflictCheckAnnotations is 41.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,IdentifyConflictsAsync,The length of the parameter nodesOrTokensWithConflictCheckAnnotations is 41.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,IdentifyConflictsAsync,The length of the parameter complexifiedLocationSpanForThisDocument is 39.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,CheckForConflictAsync,The length of the parameter renameDeclarationLocationReference is 34.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,AnnotateAndRename_WorkerAsync,The length of the parameter allTextSpansInSingleSourceTree is 30.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,AnnotateAndRename_WorkerAsync,The length of the parameter stringAndCommentTextSpansInSingleSourceTree is 43.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,,The length of the parameter _renameSymbolDeclarationLocation is 32.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,,The length of the parameter _documentIdOfRenameSymbolDeclaration is 36.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,,The length of the parameter _renamedSymbolDeclarationAnnotation is 35.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,,The length of the parameter _documentsIdsToBeCheckedForConflict is 35.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,,The length of the parameter _documentOfRenameSymbolHasBeenRenamed is 37.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,RenamedSpansTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\RenamedSpansTracker.cs,SimplifyAsync,The length of the parameter modifiedTokensInComplexifiedStatements is 38.
Long Identifier,Microsoft.CodeAnalysis.Rename.ConflictEngine,RenamedSpansTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\RenamedSpansTracker.cs,,The length of the parameter _documentToComplexifiedSpansMap is 31.
Long Identifier,Microsoft.CodeAnalysis.Rename,IRenameRewriterLanguageService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\IRenameRewriterLanguageService.cs,ComputePossibleImplicitUsageConflicts,The length of the parameter newDeclarationLocationStartingPosition is 38.
Long Identifier,Microsoft.CodeAnalysis.Rename,RenameLocation,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.cs,RenameLocation,The length of the parameter containingLocationForStringOrComment is 36.
Long Identifier,Microsoft.CodeAnalysis.Rename,RenameLocation,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.cs,,The length of the parameter ContainingLocationForStringOrComment is 36.
Long Identifier,Microsoft.CodeAnalysis.Rename,RenameRewriterParameters,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameRewriterParameters.cs,RenameRewriterParameters,The length of the parameter renamedSymbolDeclarationAnnotation is 34.
Long Identifier,Microsoft.CodeAnalysis.Rename,RenameRewriterParameters,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameRewriterParameters.cs,,The length of the parameter RenamedSymbolDeclarationAnnotation is 34.
Long Identifier,Microsoft.CodeAnalysis.Rename,RenameUtilities,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameUtilities.cs,GetDocumentsAffectedByRename,The length of the parameter documentsOfRenameSymbolDeclaration is 34.
Long Identifier,Microsoft.CodeAnalysis.Rename,RenameUtilities,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameUtilities.cs,GetDocumentsAffectedByRename,The length of the parameter projectIdsOfRenameSymbolDeclaration is 35.
Long Identifier,Microsoft.CodeAnalysis.Shared.Extensions.ContextQuery,AbstractSyntaxContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ContextQuery\AbstractSyntaxContext.cs,AbstractSyntaxContext,The length of the parameter isPreProcessorDirectiveContext is 30.
Long Statement,Microsoft.CodeAnalysis,ImmutableArrayExtensions,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Collections\ImmutableArrayExtensions.cs,SelectAsArray,The length of the statement  "                    return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg)' map(items[2]' 2' arg)' map(items[3]' 3' arg)); " is 121.
Long Statement,Microsoft.CodeAnalysis,ImmutableArrayExtensions,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Collections\ImmutableArrayExtensions.cs,SetEquals,The length of the statement  "            // internally recognizes that set2 is a HashSet with the same comparer (http://msdn.microsoft.com/en-us/library/bb346516.aspx) " is 126.
Long Statement,Microsoft.CodeAnalysis,Parser,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\DocumentationCommentId.cs,GetMatchingNamespaceOrTypes,The length of the statement  "                    if (symbol.Kind == SymbolKind.Namespace || (symbol.Kind == SymbolKind.NamedType && ((INamedTypeSymbol)symbol).Arity == 0)) " is 122.
Long Statement,Microsoft.CodeAnalysis,AbstractSymbolKey<TSymbolKey>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SymbolId\SymbolKey.AbstractSymbolKey.cs,InstantiateTypes,The length of the statement  "                var typeArguments = typeArgumentKeysOpt.Select(a => a.Resolve(compilation' ignoreAssemblyKey).Symbol as ITypeSymbol).ToArray(); " is 127.
Long Statement,Microsoft.CodeAnalysis,ArrayTypeSymbolKey,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SymbolId\SymbolKey.ArrayTypeSymbolKey.cs,Resolve,The length of the statement  "                return CreateSymbolInfo(GetAllSymbols<ITypeSymbol>(elementInfo).Select(s => compilation.CreateArrayTypeSymbol(s' _rank))); " is 122.
Long Statement,Microsoft.CodeAnalysis,EventSymbolKey,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SymbolId\SymbolKey.EventSymbolKey.cs,Resolve,The length of the statement  "                var events = GetAllSymbols<INamedTypeSymbol>(containerInfo).SelectMany(t => t.GetMembers(_metadataName)).OfType<IEventSymbol>(); " is 128.
Long Statement,Microsoft.CodeAnalysis,FieldSymbolKey,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SymbolId\SymbolKey.FieldSymbolKey.cs,Resolve,The length of the statement  "                var fields = GetAllSymbols<INamedTypeSymbol>(containerInfo).SelectMany(t => t.GetMembers(_metadataName)).OfType<IFieldSymbol>(); " is 128.
Long Statement,Microsoft.CodeAnalysis,MethodSymbolKey,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SymbolId\SymbolKey.MethodSymbolKey.cs,Resolve,The length of the statement  "                var methods = GetAllSymbols<INamedTypeSymbol>(container).SelectMany(t => Resolve(compilation' t' ignoreAssemblyKey' cancellationToken)); " is 136.
Long Statement,Microsoft.CodeAnalysis,MethodSymbolKey,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SymbolId\SymbolKey.MethodSymbolKey.cs,Resolve,The length of the statement  "                var comparisonOptions = new ComparisonOptions(compilation.IsCaseSensitive' ignoreAssemblyKey' compareMethodTypeParametersByName: true); " is 135.
Long Statement,Microsoft.CodeAnalysis,MethodSymbolKey,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SymbolId\SymbolKey.MethodSymbolKey.cs,Resolve,The length of the statement  "                    typeArguments = _typeArgumentKeysOpt.Select(a => a.Resolve(compilation' cancellationToken: cancellationToken).Symbol as ITypeSymbol).ToArray(); " is 143.
Long Statement,Microsoft.CodeAnalysis,MethodSymbolKey,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SymbolId\SymbolKey.MethodSymbolKey.cs,Resolve,The length of the statement  "                    if (method.MetadataName != _metadataName || method.Arity != _arity || method.Parameters.Length != _originalParameterTypeKeys.Length) " is 132.
Long Statement,Microsoft.CodeAnalysis,MethodSymbolKey,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SymbolId\SymbolKey.MethodSymbolKey.cs,Resolve,The length of the statement  "                    if (!ParametersMatch(comparisonOptions' compilation' method.OriginalDefinition.Parameters' _refKinds' _originalParameterTypeKeys' cancellationToken)) " is 149.
Long Statement,Microsoft.CodeAnalysis,MethodSymbolKey,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SymbolId\SymbolKey.MethodSymbolKey.cs,Equals,The length of the statement  "                var comparer = SymbolKeyComparer.GetComparer(options.IgnoreCase' options.IgnoreAssemblyKey' compareMethodTypeParametersByName: true); " is 133.
Long Statement,Microsoft.CodeAnalysis,NamedTypeSymbolKey,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SymbolId\SymbolKey.NamedTypeSymbolKey.cs,Resolve,The length of the statement  "                var types = GetAllSymbols<INamespaceOrTypeSymbol>(containerInfo).SelectMany(s => Resolve(compilation' s' ignoreAssemblyKey)); " is 125.
Long Statement,Microsoft.CodeAnalysis,PropertySymbolKey,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SymbolId\SymbolKey.PropertySymbolKey.cs,Resolve,The length of the statement  "                var comparisonOptions = new ComparisonOptions(compilation.IsCaseSensitive' ignoreAssemblyKey' compareMethodTypeParametersByName: true); " is 135.
Long Statement,Microsoft.CodeAnalysis,PropertySymbolKey,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SymbolId\SymbolKey.PropertySymbolKey.cs,Resolve,The length of the statement  "                    ParametersMatch(comparisonOptions' compilation' p.OriginalDefinition.Parameters' _refKinds' _originalParameterTypeKeys' cancellationToken)); " is 140.
Long Statement,Microsoft.CodeAnalysis,PropertySymbolKey,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SymbolId\SymbolKey.PropertySymbolKey.cs,Equals,The length of the statement  "                var comparer = SymbolKeyComparer.GetComparer(options.IgnoreCase' options.IgnoreAssemblyKey' compareMethodTypeParametersByName: true); " is 133.
Long Statement,Microsoft.CodeAnalysis,PrimaryWorkspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\PrimaryWorkspace.cs,GetWorkspaceAsync,The length of the statement  "                            taskSource.Task.ContinueWith(_ => registration.Dispose()' CancellationToken.None' TaskContinuationOptions.ExecuteSynchronously' TaskScheduler.Default); " is 151.
Long Statement,Microsoft.CodeAnalysis,AbstractLinkedFileMergeConflictCommentAdditionService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\AbstractLinkedFileMergeConflictCommentAdditionService.cs,GetCommentChangesForDocument,The length of the statement  "                var adjustedChanges = changePartition.Select(c => new TextChange(TextSpan.FromBounds(c.Span.Start - startLineStartPosition' c.Span.End - startLineStartPosition)' c.NewText)); " is 174.
Long Statement,Microsoft.CodeAnalysis,MetadataReferenceManager,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\MetadataReferenceManager.cs,TryGetCompilationForMetadataReference,The length of the statement  "            return s_compilationReferenceMap.TryGetValue(projectState' out weakReference) && weakReference.TryGetTarget(out referenceCompilation); " is 134.
Long Statement,Microsoft.CodeAnalysis,TextDocumentState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\TextDocumentState.cs,Create,The length of the statement  "                : CreateStrongText(TextAndVersion.Create(SourceText.From(string.Empty' Encoding.UTF8)' VersionStamp.Default' info.FilePath)); " is 125.
Long Statement,Microsoft.CodeAnalysis,TextDocumentState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\TextDocumentState.cs,CreateStrongText,The length of the statement  "            return new AsyncLazy<TextAndVersion>(c => LoadTextAsync(loader' documentId' services' reportInvalidDataException' c)' cacheResult: true); " is 137.
Long Statement,Microsoft.CodeAnalysis,TextDocumentState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\TextDocumentState.cs,CreateRecoverableText,The length of the statement  "                new AsyncLazy<TextAndVersion>(c => LoadTextAsync(loader' documentId' services' reportInvalidDataException' c)' cacheResult: false)' " is 131.
Long Statement,Microsoft.CodeAnalysis,TextDocumentState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\TextDocumentState.cs,LoadTextAsync,The length of the statement  "                    var result = await loader.LoadTextAndVersionAsync(services.Workspace' documentId' cancellationToken).ConfigureAwait(continueOnCapturedContext: false); " is 150.
Long Statement,Microsoft.CodeAnalysis,TextDocumentState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\TextDocumentState.cs,LoadTextAsync,The length of the statement  "                return TextAndVersion.Create(SourceText.From(string.Empty' Encoding.UTF8)' VersionStamp.Default' documentId.GetDebuggerDisplay()); " is 130.
Long Statement,Microsoft.CodeAnalysis,TextDocumentState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\TextDocumentState.cs,LoadTextAsync,The length of the statement  "                return TextAndVersion.Create(SourceText.From(string.Empty' Encoding.UTF8)' VersionStamp.Default' documentId.GetDebuggerDisplay()); " is 130.
Long Statement,Microsoft.CodeAnalysis,Document,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Document.cs,WithSyntaxRoot,The length of the statement  "            return this.Project.Solution.WithDocumentSyntaxRoot(this.Id' root' PreservationMode.PreserveIdentity).GetDocument(this.Id); " is 123.
Long Statement,Microsoft.CodeAnalysis,Document,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Document.cs,WithFrozenPartialSemanticsAsync,The length of the statement  "                var newSolution = await this.Project.Solution.WithFrozenPartialCompilationIncludingSpecificDocumentAsync(this.Id' cancellationToken).ConfigureAwait(false); " is 155.
Long Statement,Microsoft.CodeAnalysis,DocumentState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\DocumentState.cs,Create,The length of the statement  "                : CreateStrongText(TextAndVersion.Create(SourceText.From(string.Empty' Encoding.UTF8)' VersionStamp.Default' info.FilePath)); " is 125.
Long Statement,Microsoft.CodeAnalysis,DocumentState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\DocumentState.cs,TopLevelChanged,The length of the statement  "            // ** currently' it doesn't do any text based quick check. we can add them later if current logic is not performant enough for typing case. " is 139.
Long Statement,Microsoft.CodeAnalysis,DocumentState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\DocumentState.cs,UpdateTree,The length of the statement  "            var result = CreateRecoverableTextAndTree(newRoot' newTextVersion' newTreeVersion' this.info' _options' syntaxTreeFactory' mode' this.solutionServices); " is 152.
Long Statement,Microsoft.CodeAnalysis,MetadataOnlyImage,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\MetadataOnlyImage.cs,CreateReference,The length of the statement  "                var metadata = AssemblyMetadata.Create(ModuleMetadata.CreateFromImage(supportNativeMemory.GetPointer()' (int)stream.Length)); " is 125.
Long Statement,Microsoft.CodeAnalysis,MetadataOnlyReference,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\MetadataOnlyReference.cs,GetOrBuildReference,The length of the statement  "                return referenceSet.GetMetadataReference(finalCompilation' projectReference.Aliases' projectReference.EmbedInteropTypes); " is 121.
Long Statement,Microsoft.CodeAnalysis,MetadataOnlyReference,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\MetadataOnlyReference.cs,GetOrBuildReference,The length of the statement  "            // record it to version based cache as well. snapshot cache always has a higher priority. we don't need to check returned set here " is 130.
Long Statement,Microsoft.CodeAnalysis,MetadataOnlyReference,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\MetadataOnlyReference.cs,GetOrBuildReference,The length of the statement  "            return referenceSet.GetMetadataReference(finalCompilation' projectReference.Aliases' projectReference.EmbedInteropTypes); " is 121.
Long Statement,Microsoft.CodeAnalysis,MetadataOnlyReference,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\MetadataOnlyReference.cs,TryGetReference,The length of the statement  "            // if we have one from snapshot cache' use it. it will make sure same compilation will get same metadata reference always. " is 122.
Long Statement,Microsoft.CodeAnalysis,MetadataOnlyReference,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\MetadataOnlyReference.cs,TryGetReference,The length of the statement  "                reference = referenceSet.GetMetadataReference(finalOrDeclarationCompilation' projectReference.Aliases' projectReference.EmbedInteropTypes); " is 139.
Long Statement,Microsoft.CodeAnalysis,MetadataOnlyReference,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\MetadataOnlyReference.cs,TryGetReference,The length of the statement  "            if (TryGetReferenceFromBranch(solution.BranchId' projectReference' finalOrDeclarationCompilation' version' out reference)) " is 122.
Long Statement,Microsoft.CodeAnalysis,MetadataOnlyReference,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\MetadataOnlyReference.cs,TryGetReferenceFromBranch,The length of the statement  "                reference = newReferenceSet.GetMetadataReference(finalOrDeclarationCompilation' projectReference.Aliases' projectReference.EmbedInteropTypes); " is 142.
Long Statement,Microsoft.CodeAnalysis,MetadataOnlyReferenceSet,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\MetadataOnlyReference.cs,GetMetadataReference,The length of the statement  "                        // here we give out strong reference to compilation. so there is possibility that we end up making 2 compilations for same project alive. " is 137.
Long Statement,Microsoft.CodeAnalysis,MetadataOnlyReferenceSet,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\MetadataOnlyReference.cs,GetMetadataReference,The length of the statement  "                        // one for final compilation and one for declaration only compilation. but the final compilation will be eventually kicked out from compilation cache " is 149.
Long Statement,Microsoft.CodeAnalysis,MetadataOnlyReferenceSet,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\MetadataOnlyReference.cs,GetMetadataReference,The length of the statement  "                        // if there is no activity on the project. or the declaration compilation will go away if the project that depends on the reference doesn't have any " is 148.
Long Statement,Microsoft.CodeAnalysis,MetadataOnlyReferenceSet,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\MetadataOnlyReference.cs,GetMetadataReference,The length of the statement  "                        // activity when it is kicked out from compilation cache. if there is an activity' then both will updated as activity happens. " is 126.
Long Statement,Microsoft.CodeAnalysis,MetadataOnlyReferenceSet,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\MetadataOnlyReference.cs,GetMetadataReference,The length of the statement  "                        // there is one case where we could have 2 compilations for same project alive. if a user opens a file that requires a skeleton assembly when the skeleton " is 154.
Long Statement,Microsoft.CodeAnalysis,MetadataOnlyReferenceSet,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\MetadataOnlyReference.cs,GetMetadataReference,The length of the statement  "                        // assembly project didn't reach the final stage yet and then the user opens another document that is part of the skeleton assembly project  " is 139.
Long Statement,Microsoft.CodeAnalysis,MetadataOnlyReferenceSet,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\MetadataOnlyReference.cs,GetMetadataReference,The length of the statement  "                        // and then never change it. declaration compilation will be alive by skeleton assembly and final compilation will be alive by background compiler. " is 147.
Long Statement,Microsoft.CodeAnalysis,Project,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Project.cs,GetAdditionalDocument,The length of the statement  "            return ImmutableHashMapExtensions.GetOrAdd(ref _idToAdditionalDocumentMap' documentId' s_createAdditionalDocumentFunction' this); " is 129.
Long Statement,Microsoft.CodeAnalysis,Project,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Project.cs,GetSemanticVersionAsync,The length of the statement  "            var docVersion = await _projectState.GetLatestDocumentTopLevelChangeVersionAsync(cancellationToken).ConfigureAwait(false); " is 122.
Long Statement,Microsoft.CodeAnalysis,Project,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Project.cs,AddDocument,The length of the statement  "            return this.Solution.AddDocument(id' name' syntaxRoot' folders' filePath' preservationMode: PreservationMode.PreserveIdentity).GetDocument(id); " is 143.
Long Statement,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,CreateLazyLatestDocumentTopLevelChangeVersion,The length of the statement  "                return new AsyncLazy<VersionStamp>(c => ComputeTopLevelChangeTextVersionAsync(oldVersion' newDocument' c)' cacheResult: true); " is 126.
Long Statement,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,CreateLazyLatestDocumentTopLevelChangeVersion,The length of the statement  "                return new AsyncLazy<VersionStamp>(c => ComputeLatestDocumentTopLevelChangeVersionAsync(newDocumentStates' newAdditionalDocumentStates' c)' cacheResult: true); " is 159.
Long Statement,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,CreateAnalyzerOptions,The length of the statement  "            return new AnalyzerOptions(additionalDocStates.Values.Select(d => new AdditionalTextDocument(d)).ToImmutableArray<AdditionalText>()); " is 133.
Long Statement,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,UpdateAssemblyName,The length of the statement  "            return this.With(projectInfo: this.ProjectInfo.WithAssemblyName(assemblyName).WithVersion(this.Version.GetNewerVersion())); " is 123.
Long Statement,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,UpdateOutputPath,The length of the statement  "            return this.With(projectInfo: this.ProjectInfo.WithOutputFilePath(outputFilePath).WithVersion(this.Version.GetNewerVersion())); " is 127.
Long Statement,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,UpdateCompilationOptions,The length of the statement  "            return this.With(projectInfo: this.ProjectInfo.WithCompilationOptions(options).WithVersion(this.Version.GetNewerVersion())); " is 124.
Long Statement,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,AddProjectReference,The length of the statement  "                projectInfo: this.ProjectInfo.WithProjectReferences(this.ProjectReferences.ToImmutableArray().Add(projectReference)).WithVersion(this.Version.GetNewerVersion())); " is 162.
Long Statement,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,RemoveProjectReference,The length of the statement  "                projectInfo: this.ProjectInfo.WithProjectReferences(this.ProjectReferences.ToImmutableArray().Remove(projectReference)).WithVersion(this.Version.GetNewerVersion())); " is 165.
Long Statement,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,AddMetadataReference,The length of the statement  "                projectInfo: this.ProjectInfo.WithMetadataReferences(this.MetadataReferences.ToImmutableArray().Add(toMetadata)).WithVersion(this.Version.GetNewerVersion())); " is 158.
Long Statement,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,RemoveMetadataReference,The length of the statement  "                projectInfo: this.ProjectInfo.WithMetadataReferences(this.MetadataReferences.ToImmutableArray().Remove(toMetadata)).WithVersion(this.Version.GetNewerVersion())); " is 161.
Long Statement,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,AddAnalyzerReference,The length of the statement  "                projectInfo: this.ProjectInfo.WithAnalyzerReferences(this.AnalyzerReferences.ToImmutableArray().Add(analyzerReference)).WithVersion(this.Version.GetNewerVersion())); " is 165.
Long Statement,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,RemoveAnalyzerReference,The length of the statement  "                projectInfo: this.ProjectInfo.WithAnalyzerReferences(this.AnalyzerReferences.ToImmutableArray().Remove(analyzerReference)).WithVersion(this.Version.GetNewerVersion())); " is 168.
Long Statement,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,AddAnalyzerReferences,The length of the statement  "                projectInfo: this.ProjectInfo.WithAnalyzerReferences(newAnalyzerReferences).WithVersion(this.Version.GetNewerVersion())); " is 121.
Long Statement,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,AddDocument,The length of the statement  "                projectInfo: this.ProjectInfo.WithVersion(this.Version.GetNewerVersion()).WithDocuments(this.ProjectInfo.Documents.Concat(document.Info))' " is 138.
Long Statement,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,AddAdditionalDocument,The length of the statement  "                projectInfo: this.ProjectInfo.WithVersion(this.Version.GetNewerVersion()).WithAdditionalDocuments(this.ProjectInfo.AdditionalDocuments.Concat(document.Info))' " is 158.
Long Statement,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,RemoveDocument,The length of the statement  "                projectInfo: this.ProjectInfo.WithVersion(this.Version.GetNewerVersion()).WithDocuments(this.ProjectInfo.Documents.Where(info => info.Id != documentId))' " is 153.
Long Statement,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,RemoveAdditionalDocument,The length of the statement  "                projectInfo: this.ProjectInfo.WithVersion(this.Version.GetNewerVersion()).WithDocuments(this.ProjectInfo.AdditionalDocuments.Where(info => info.Id != documentId))' " is 163.
Long Statement,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,RemoveAllDocuments,The length of the statement  "                projectInfo: this.ProjectInfo.WithVersion(this.Version.GetNewerVersion()).WithDocuments(SpecializedCollections.EmptyEnumerable<DocumentInfo>())' " is 144.
Long Statement,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,GetLatestDependentVersions,The length of the statement  "                new AsyncLazy<VersionStamp>(c => ComputeLatestDocumentVersionAsync(newDocumentStates' newAdditionalDocumentStates' c)' cacheResult: true) : " is 139.
Long Statement,Microsoft.CodeAnalysis,ProjectState,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectState.cs,GetLatestDependentVersions,The length of the statement  "                new AsyncLazy<VersionStamp>(c => ComputeLatestDocumentTopLevelChangeVersionAsync(newDocumentStates' newAdditionalDocumentStates' c)' cacheResult: true) : " is 153.
Long Statement,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,WithNewWorkspace,The length of the statement  "            return CreatePrimarySolution(branchId: workspace.PrimaryBranchId' workspaceVersion: workspaceVersion' services: services); " is 122.
Long Statement,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,GetCompilationTracker,The length of the statement  "                tracker = ImmutableInterlocked.GetOrAdd(ref _projectIdToTrackerMap' projectId' s_createCompilationTrackerFunction' this); " is 121.
Long Statement,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,AddDocument,The length of the statement  "                newLinkedFilesMap: CreateLinkedFilesMapWithAddedDocuments(newProject' SpecializedCollections.SingletonEnumerable(state.Id))); " is 125.
Long Statement,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,AddDocument,The length of the statement  "            return AddDocument(documentId' name' SourceText.From(string.Empty)' folders' filePath' isGenerated).WithDocumentSyntaxRoot(documentId' syntaxRoot' preservationMode); " is 165.
Long Statement,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,RemoveDocument,The length of the statement  "                newLinkedFilesMap: CreateLinkedFilesMapWithRemovedDocuments(oldProject' SpecializedCollections.SingletonEnumerable(documentId))); " is 129.
Long Statement,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,WithMergedLinkedFileChangesAsync,The length of the statement  "            var session = new LinkedFileDiffMergingSession(oldSolution' this' solutionChanges ?? this.GetChanges(oldSolution)' logSessionInfo: solutionChanges != null); " is 156.
Long Statement,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,WithDocumentTextLoader,The length of the statement  "            // assumes that text has changed. user could have closed a doc without saving and we are loading text from closed file with " is 123.
Long Statement,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,WithDocumentTextLoader,The length of the statement  "            // old content. also this should make sure we don't re-use latest doc version with data associated with opened document. " is 120.
Long Statement,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,WithDocumentTextLoader,The length of the statement  "            return this.WithDocumentState(oldDocument.UpdateText(loader' mode)' textChanged: true' recalculateDependentVersions: true); " is 123.
Long Statement,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,WithAdditionalDocumentTextLoader,The length of the statement  "            // assumes that text has changed. user could have closed a doc without saving and we are loading text from closed file with " is 123.
Long Statement,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,WithAdditionalDocumentTextLoader,The length of the statement  "            // old content. also this should make sure we don't re-use latest doc version with data associated with opened document. " is 120.
Long Statement,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,WithAdditionalDocumentTextLoader,The length of the statement  "            return this.WithTextDocumentState(oldDocument.UpdateText(loader' mode)' textChanged: true' recalculateDependentVersions: true); " is 127.
Long Statement,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,WithDocumentState,The length of the statement  "            return this.TouchDocument(newDocument.Id' p => p.UpdateDocument(newDocument' textChanged' recalculateDependentVersions)); " is 121.
Long Statement,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,ForkProject,The length of the statement  "            var newDependencyGraph = withProjectReferenceChange ? CreateDependencyGraph(_projectIds' newStateMap) : _dependencyGraph; " is 121.
Long Statement,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,ForkProject,The length of the statement  "            var newLatestProjectVersion = modifiedDocumentOnly ? _lazyLatestProjectVersion : new Lazy<VersionStamp>(() => newProjectState.Version); " is 135.
Long Statement,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,CreateDependencyGraph,The length of the statement  "                    state.ProjectReferences.Where(pr => projectStates.ContainsKey(pr.ProjectId)).Select(pr => pr.ProjectId).ToImmutableHashSet())) " is 126.
Long Statement,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,GetMetadataReferenceAsync,The length of the statement  "                var mdref = await tracker.GetMetadataReferenceAsync(this' fromProject' projectReference' cancellationToken).ConfigureAwait(false); " is 130.
Long Statement,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,ContainsSymbolsWithNameAsync,The length of the statement  "            var result = GetCompilationTracker(id).ContainsSymbolsWithNameFromDeclarationOnlyCompilation(predicate' filter' cancellationToken); " is 131.
Long Statement,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,GetDocumentsWithName,The length of the statement  "            // this will be used to find documents that contain declaration information in IDE cache such as DeclarationSyntaxTreeInfo for "NavigateTo" " is 139.
Long Statement,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,GetDocumentsWithName,The length of the statement  "            var trees = GetCompilationTracker(id).GetSyntaxTreesWithNameFromDeclarationOnlyCompilation(predicate' filter' cancellationToken); " is 129.
Long Statement,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,GetDocumentsWithName,The length of the statement  "                id' compilation.GetSymbolsWithName(predicate' filter' cancellationToken).SelectMany(s => s.DeclaringSyntaxReferences.Select(r => r.SyntaxTree))); " is 145.
Long Statement,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,WriteState,The length of the statement  "                    solution._solutionServices.CacheService.CacheObjectIfCachingEnabledForKey(this.ProjectState.Id' state' state.Compilation.GetValue()); " is 133.
Long Statement,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,Fork,The length of the statement  "                            ImmutableArray.Create<ValueTuple<ProjectState' CompilationTranslationAction>>(ValueTuple.Create(this.ProjectState' translate)); " is 127.
Long Statement,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,FreezePartialStateWithTree,The length of the statement  "                        inProgressProject = inProgressProject.UpdateDocument(docState' textChanged: false' recalculateDependentVersions: false); " is 120.
Long Statement,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,GetPartialCompilationState,The length of the statement  "                            var compilation = solution.GetCompilationAsync(projectReference.ProjectId' cancellationToken).WaitAndGetResult(cancellationToken); " is 130.
Long Statement,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,GetPartialCompilationState,The length of the statement  "                                metadata = inProgressCompilation.References.FirstOrDefault(r => solution.GetProjectId(r) == projectReference.ProjectId); " is 120.
Long Statement,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,GetOrBuildDeclarationCompilationAsync,The length of the statement  "                            return await BuildDeclarationCompilationFromInProgressAsync(solution' state as InProgressState' compilation' cancellationToken).ConfigureAwait(false); " is 150.
Long Statement,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,BuildFinalStateFromInProgressStateAsync,The length of the statement  "                    var compilation = await BuildDeclarationCompilationFromInProgressAsync(solution' state' inProgressCompilation' cancellationToken).ConfigureAwait(false); " is 152.
Long Statement,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,GetMetadataReferenceAsync,The length of the statement  "                        // otherwise get a metadata only image reference that is built by emitting the metadata from the referenced project's compilation and re-importing it. " is 150.
Long Statement,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,GetMetadataReferenceAsync,The length of the statement  "                        return await this.GetMetadataOnlyImageReferenceAsync(solution' projectReference' cancellationToken).ConfigureAwait(false); " is 122.
Long Statement,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,GetMetadataOnlyImageReferenceAsync,The length of the statement  "                        var declarationCompilation = await this.GetOrBuildDeclarationCompilationAsync(solution' cancellationToken: cancellationToken).ConfigureAwait(false); " is 148.
Long Statement,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,GetMetadataOnlyImageReferenceAsync,The length of the statement  "                            // using async build lock so we don't get multiple consumers attempting to build metadata-only images for the same compilation. " is 127.
Long Statement,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,GetMetadataOnlyImageReferenceAsync,The length of the statement  "                                // okay' we still don't have one. bring the compilation to final state since we are going to use it to create skeleton assembly " is 127.
Long Statement,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,GetMetadataOnlyImageReferenceAsync,The length of the statement  "                                var compilation = await this.GetOrBuildCompilationAsync(solution' lockGate: false' cancellationToken: cancellationToken).ConfigureAwait(false); " is 143.
Long Statement,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,GetMetadataOnlyImageReferenceAsync,The length of the statement  "                                reference = MetadataOnlyReference.GetOrBuildReference(solution' projectReference' compilation' version' cancellationToken); " is 123.
Long Statement,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,ContainsSymbolsWithNameFromDeclarationOnlyCompilation,The length of the statement  "                // DO NOT expose declaration only compilation to outside since it can be held alive long time' we don't want to create any symbol from the declaration only compilation. " is 168.
Long Statement,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,GetSyntaxTreesWithNameFromDeclarationOnlyCompilation,The length of the statement  "                // DO NOT expose declaration only compilation to outside since it can be held alive long time' we don't want to create any symbol from the declaration only compilation. " is 168.
Long Statement,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,GetSyntaxTreesWithNameFromDeclarationOnlyCompilation,The length of the statement  "                return clone.GetSymbolsWithName(predicate' filter' cancellationToken).SelectMany(s => s.DeclaringSyntaxReferences.Select(r => r.SyntaxTree)); " is 141.
Long Statement,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,GetDependentVersionAsync,The length of the statement  "                    Interlocked.CompareExchange(ref _lazyDependentVersion' new AsyncLazy<VersionStamp>(c => ComputeDependentVersionAsync(solution' c)' cacheResult: true)' null); " is 157.
Long Statement,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,ComputeDependentVersionAsync,The length of the statement  "                        var dependentProjectVersion = await solution.GetDependentVersionAsync(dependentProjectReference.ProjectId' cancellationToken).ConfigureAwait(false); " is 148.
Long Statement,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,GetDependentSemanticVersionAsync,The length of the statement  "                    Interlocked.CompareExchange(ref _lazyDependentSemanticVersion' new AsyncLazy<VersionStamp>(c => ComputeDependentSemanticVersionAsync(solution' c)' cacheResult: true)' null); " is 173.
Long Statement,Microsoft.CodeAnalysis,CompilationTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,ComputeDependentSemanticVersionAsync,The length of the statement  "                        var dependentProjectVersion = await solution.GetDependentSemanticVersionAsync(dependentProjectReference.ProjectId' cancellationToken).ConfigureAwait(false); " is 156.
Long Statement,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,MergeDiffsAsync,The length of the statement  "                    var mergeGroupResult = await MergeLinkedDocumentGroupAsync(allLinkedDocuments' linkedDocumentsWithChanges' sessionInfo' mergeConflictHandler' cancellationToken).ConfigureAwait(false); " is 183.
Long Statement,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,MergeDiffsAsync,The length of the statement  "                    mergedText = await _newSolution.GetDocument(linkedDocumentsWithChanges.Single()).GetTextAsync(cancellationToken).ConfigureAwait(false); " is 135.
Long Statement,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,MergeLinkedDocumentGroupAsync,The length of the statement  "            var textDifferencingService = _oldSolution.Workspace.Services.GetService<IDocumentTextDifferencingService>() ?? new DefaultDocumentTextDifferencingService(); " is 157.
Long Statement,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,MergeLinkedDocumentGroupAsync,The length of the statement  "            var appliedChanges = await textDifferencingService.GetTextChangesAsync(_oldSolution.GetDocument(linkedDocumentGroup.First())' _newSolution.GetDocument(linkedDocumentGroup.First())' cancellationToken).ConfigureAwait(false); " is 222.
Long Statement,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,MergeLinkedDocumentGroupAsync,The length of the statement  "                mergeConflictHandler = mergeConflictHandler ?? _oldSolution.GetDocument(linkedDocumentGroup.First()).GetLanguageService<ILinkedFileMergeConflictCommentAdditionService>(); " is 170.
Long Statement,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,MergeLinkedDocumentGroupAsync,The length of the statement  "                allChanges = MergeChangesWithMergeFailComments(appliedChanges' mergeConflictTextEdits' mergeConflictResolutionSpan' groupSessionInfo); " is 134.
Long Statement,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,MergeLinkedDocumentGroupAsync,The length of the statement  "            return new LinkedFileMergeResult(allLinkedDocuments' originalSourceText.WithChanges(allChanges)' mergeConflictResolutionSpan); " is 126.
Long Statement,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,AddDocumentMergeChangesAsync,The length of the statement  "            var textchanges = await textDiffService.GetTextChangesAsync(oldDocument' newDocument' cancellationToken).ConfigureAwait(false); " is 127.
Long Statement,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,AddDocumentMergeChangesAsync,The length of the statement  "                while (cumulativeChangeIndex < cumulativeChanges.Count && cumulativeChanges[cumulativeChangeIndex].Span.End < change.Span.Start) " is 128.
Long Statement,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,MergeChangesWithMergeFailComments,The length of the statement  "                while (commentChangeIndex < commentChangesList.Count && commentChangesList[commentChangeIndex].Span.End <= mergedChange.Span.Start) " is 131.
Long Statement,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,MergeChangesWithMergeFailComments,The length of the statement  "                    mergeConflictResolutionSpans.Add(new TextSpan(commentChangesList[commentChangeIndex].Span.Start + currentPositionDelta' commentChangesList[commentChangeIndex].NewText.Length)); " is 176.
Long Statement,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,MergeChangesWithMergeFailComments,The length of the statement  "                    currentPositionDelta += (commentChangesList[commentChangeIndex].NewText.Length - commentChangesList[commentChangeIndex].Span.Length); " is 133.
Long Statement,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,MergeChangesWithMergeFailComments,The length of the statement  "                if (commentChangeIndex >= commentChangesList.Count || mergedChange.Span.End <= commentChangesList[commentChangeIndex].Span.Start) " is 129.
Long Statement,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,MergeChangesWithMergeFailComments,The length of the statement  "                while (commentChangeIndex < commentChangesList.Count && commentChangesList[commentChangeIndex].Span.Start < mergedChange.Span.End) " is 130.
Long Statement,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,MergeChangesWithMergeFailComments,The length of the statement  "                    combinedChanges.Add(new TextChange(conflictingCommentInsertionLocation' commentChangesList[commentChangeIndex].NewText)); " is 121.
Long Statement,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,MergeChangesWithMergeFailComments,The length of the statement  "                    mergeConflictResolutionSpans.Add(new TextSpan(commentChangesList[commentChangeIndex].Span.Start + currentPositionDelta' commentChangesList[commentChangeIndex].NewText.Length)); " is 176.
Long Statement,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,MergeChangesWithMergeFailComments,The length of the statement  "                mergeConflictResolutionSpans.Add(new TextSpan(commentChangesList[commentChangeIndex].Span.Start + currentPositionDelta' commentChangesList[commentChangeIndex].NewText.Length)); " is 176.
Long Statement,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,MergeChangesWithMergeFailComments,The length of the statement  "                currentPositionDelta += (commentChangesList[commentChangeIndex].NewText.Length - commentChangesList[commentChangeIndex].Span.Length); " is 133.
Long Statement,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,NormalizeChanges,The length of the statement  "                    currentChange = new TextChange(TextSpan.FromBounds(currentChange.Span.Start' nextChange.Span.End)' currentChange.NewText + nextChange.NewText); " is 143.
Long Statement,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,LogLinkedFileDiffMergingSessionInfo,The length of the statement  "            Logger.Log(FunctionId.Workspace_Solution_LinkedFileDiffMergingSession' SessionLogMessage.Create(sessionId' sessionInfo)); " is 121.
Long Statement,Microsoft.CodeAnalysis,LinkedFileDiffMergingSession,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,LogLinkedFileDiffMergingSessionInfo,The length of the statement  "                Logger.Log(FunctionId.Workspace_Solution_LinkedFileDiffMergingSession_LinkedFileGroup' SessionLogMessage.Create(sessionId' groupInfo)); " is 135.
Long Statement,Microsoft.CodeAnalysis,SessionLogMessage,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\LinkedFileDiffMergingSession.cs,Create,The length of the statement  "                    m[OverlappingDistinctDiffsWithSameSpanAndSubstringRelation] = groupInfo.OverlappingDistinctDiffsWithSameSpanAndSubstringRelation; " is 129.
Long Statement,Microsoft.CodeAnalysis,VersionStamp,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\VersionStamp.cs,GetNewerVersion,The length of the statement  "                return new VersionStamp(_utcLastModified' (thisGlobalVersion > thatGlobalVersion) ? thisGlobalVersion : thatGlobalVersion' GlobalVersionMarker); " is 144.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,OnProjectReloaded,The length of the statement  "                newSolution = this.AdjustReloadedProject(oldSolution.GetProject(projectId)' newSolution.GetProject(projectId)).Solution; " is 120.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,OnProjectNameChanged,The length of the statement  "                var newSolution = this.SetCurrentSolution(oldSolution.WithProjectName(projectId' name).WithProjectFilePath(projectId' filePath)); " is 129.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,OnDocumentAdded,The length of the statement  "                this.RaiseWorkspaceChangedEventAsync(WorkspaceChangeKind.DocumentAdded' oldSolution' newSolution' documentId: documentId); " is 122.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,OnDocumentReloaded,The length of the statement  "                this.RaiseWorkspaceChangedEventAsync(WorkspaceChangeKind.DocumentReloaded' oldSolution' newSolution' documentId: documentId); " is 125.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,OnDocumentRemoved,The length of the statement  "                this.RaiseWorkspaceChangedEventAsync(WorkspaceChangeKind.DocumentRemoved' oldSolution' newSolution' documentId: documentId); " is 124.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,OnDocumentTextLoaderChanged,The length of the statement  "                this.RaiseWorkspaceChangedEventAsync(WorkspaceChangeKind.DocumentChanged' oldSolution' newSolution' documentId: documentId); " is 124.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,OnAdditionalDocumentTextLoaderChanged,The length of the statement  "                this.RaiseWorkspaceChangedEventAsync(WorkspaceChangeKind.AdditionalDocumentChanged' oldSolution' newSolution' documentId: documentId); " is 134.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,OnDocumentTextChanged,The length of the statement  "                this.RaiseWorkspaceChangedEventAsync(WorkspaceChangeKind.DocumentChanged' oldSolution' newSolution' documentId: documentId); " is 124.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,OnAdditionalDocumentTextChanged,The length of the statement  "                this.RaiseWorkspaceChangedEventAsync(WorkspaceChangeKind.AdditionalDocumentChanged' oldSolution' newSolution' documentId: documentId); " is 134.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,OnDocumentSourceCodeKindChanged,The length of the statement  "                this.RaiseWorkspaceChangedEventAsync(WorkspaceChangeKind.DocumentChanged' oldSolution' newSolution' documentId: documentId); " is 124.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,OnAdditionalDocumentAdded,The length of the statement  "                this.RaiseWorkspaceChangedEventAsync(WorkspaceChangeKind.AdditionalDocumentAdded' oldSolution' newSolution' documentId: documentId); " is 132.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,OnAdditionalDocumentRemoved,The length of the statement  "                this.RaiseWorkspaceChangedEventAsync(WorkspaceChangeKind.AdditionalDocumentRemoved' oldSolution' newSolution' documentId: documentId); " is 134.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,TryApplyChanges,The length of the statement  "                var solutionWithLinkedFileChangesMerged = newSolution.WithMergedLinkedFileChangesAsync(oldSolution' solutionChanges' cancellationToken: CancellationToken.None).Result; " is 167.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,CheckAllowedProjectChanges,The length of the statement  "            if (projectChanges.GetRemovedAdditionalDocuments().Any() && !this.CanApplyChange(ApplyChangesKind.RemoveAdditionalDocument)) " is 124.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,CheckAllowedProjectChanges,The length of the statement  "            if (projectChanges.GetChangedAdditionalDocuments().Any() && !this.CanApplyChange(ApplyChangesKind.ChangeAdditionalDocument)) " is 124.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,CheckAllowedProjectChanges,The length of the statement  "            if (projectChanges.GetRemovedProjectReferences().Any() && !this.CanApplyChange(ApplyChangesKind.RemoveProjectReference)) " is 120.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,CheckAllowedProjectChanges,The length of the statement  "            if (projectChanges.GetRemovedMetadataReferences().Any() && !this.CanApplyChange(ApplyChangesKind.RemoveMetadataReference)) " is 122.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,CheckAllowedProjectChanges,The length of the statement  "            if (projectChanges.GetRemovedAnalyzerReferences().Any() && !this.CanApplyChange(ApplyChangesKind.RemoveAnalyzerReference)) " is 122.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,ApplyProjectChanges,The length of the statement  "                    var textChanges = newDoc.GetTextChangesAsync(oldDoc' CancellationToken.None).WaitAndGetResult(CancellationToken.None); // needs wait " is 132.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,GetTextForced,The length of the statement  "            return doc.GetTextAsync(CancellationToken.None).WaitAndGetResult(CancellationToken.None); // needs wait (called during TryApplyChanges) " is 135.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,CreateDocumentInfoWithText,The length of the statement  "            return CreateDocumentInfoWithoutText(doc).WithTextLoader(TextLoader.From(TextAndVersion.Create(GetTextForced(doc)' VersionStamp.Create()' doc.FilePath))); " is 154.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,ApplyAdditionalDocumentAdded,The length of the statement  "            this.OnAdditionalDocumentAdded(info.WithTextLoader(TextLoader.From(TextAndVersion.Create(text' VersionStamp.Create())))); " is 121.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,GetTransitiveProjectReferences,The length of the statement  "                this.CurrentSolution.GetProject(project).ProjectReferences.Do(p => GetTransitiveProjectReferences(p.ProjectId' projects)); " is 122.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,CheckProjectDoesNotContainOpenDocuments,The length of the statement  "                throw new ArgumentException(string.Format(WorkspacesResources.ProjectContainsOpenDocuments' this.GetProjectName(projectId))); " is 125.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,GetDocumentIdInCurrentContext,The length of the statement  "                container = _bufferToDocumentIdMap.Where(kvp => kvp.Value.Contains(documentId)).Select(kvp => kvp.Key).FirstOrDefault(); " is 120.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,OnDocumentContextUpdated,The length of the statement  "                container = _bufferToDocumentIdMap.Where(kvp => kvp.Value.Contains(documentId)).Select(kvp => kvp.Key).FirstOrDefault(); " is 120.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,OnDocumentOpened,The length of the statement  "                SignupForTextChanges(documentId' textContainer' isCurrentContext' (w' id' text' mode) => w.OnDocumentTextChanged(id' text' mode)); " is 130.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,OnDocumentOpened,The length of the statement  "                this.RaiseWorkspaceChangedEventAsync(WorkspaceChangeKind.DocumentChanged' oldSolution' newSolution' documentId: documentId); " is 124.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,OnAdditionalDocumentOpened,The length of the statement  "                    currentSolution = oldSolution.WithAdditionalDocumentText(documentId' newTextAndVersion' PreservationMode.PreserveIdentity); " is 123.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,OnAdditionalDocumentOpened,The length of the statement  "                SignupForTextChanges(documentId' textContainer' isCurrentContext' (w' id' text' mode) => w.OnAdditionalDocumentTextChanged(id' text' mode)); " is 140.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,OnAdditionalDocumentOpened,The length of the statement  "                this.RaiseWorkspaceChangedEventAsync(WorkspaceChangeKind.AdditionalDocumentChanged' oldSolution' newSolution' documentId: documentId); " is 134.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,OnDocumentClosed,The length of the statement  "                this.RaiseWorkspaceChangedEventAsync(WorkspaceChangeKind.DocumentChanged' oldSolution' newSolution' documentId: documentId); // don't wait for this " is 147.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,OnAdditionalDocumentClosed,The length of the statement  "                this.RaiseWorkspaceChangedEventAsync(WorkspaceChangeKind.AdditionalDocumentChanged' oldSolution' newSolution' documentId: documentId); // don't wait for this " is 157.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,AdjustReloadedSolution,The length of the statement  "                    newSolution = newSolution.WithDocumentText((DocumentId)docId' this.GetOpenDocumentText(oldSolution' (DocumentId)docId)' PreservationMode.PreserveIdentity); " is 155.
Long Statement,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,AdjustReloadedProject,The length of the statement  "                    newSolution = newSolution.WithDocumentText((DocumentId)docId' this.GetOpenDocumentText(oldSolution' (DocumentId)docId)' PreservationMode.PreserveIdentity); " is 155.
Long Statement,Roslyn.Utilities,HashAlgorithm,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\HashAlgorithms.cs,LoadAlgorithm,The length of the statement  "            var type = Type.GetType("System.Security.Cryptography." + name + "CryptoServiceProvider' " + Mscorlib' throwOnError: false); " is 124.
Long Statement,Roslyn.Utilities,ExceptionUtilities,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\ExceptionUtilities.cs,UnexpectedValue,The length of the statement  "            string output = string.Format("Unexpected value '{0}' of type '{1}'"' o' (o != null) ? o.GetType().FullName : "<unknown>"); " is 123.
Long Statement,Roslyn.Utilities,ObjectReader,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectReader.cs,NoBinderException,The length of the statement  "            throw new InvalidOperationException(string.Format(Microsoft.CodeAnalysis.CodeAnalysisResources.NoBinderException' typeName)); " is 125.
Long Statement,Roslyn.Utilities,ObjectReader,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectReader.cs,NoBinderException,The length of the statement  "            throw new InvalidOperationException(string.Format(Microsoft.CodeAnalysis.WorkspacesResources.NoBinderException' typeName)); " is 123.
Long Statement,Roslyn.Utilities,ObjectReader,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectReader.cs,NoReaderException,The length of the statement  "            throw new InvalidOperationException(string.Format(Microsoft.CodeAnalysis.CodeAnalysisResources.NoReaderException' typeName)); " is 125.
Long Statement,Roslyn.Utilities,ObjectReader,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectReader.cs,NoReaderException,The length of the statement  "            throw new InvalidOperationException(string.Format(Microsoft.CodeAnalysis.WorkspacesResources.NoReaderException' typeName)); " is 123.
Long Statement,Roslyn.Utilities,AnnotationTable<TAnnotation>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AnnotationTable.cs,GetAnnotatedNodes,The length of the statement  "            return node.GetAnnotatedNodesAndTokens(_annotationKind).Where(nt => nt.IsNode && this.HasAnnotations<TSpecificAnnotation>(nt)).Select(nt => nt.AsNode()); " is 153.
Long Statement,Roslyn.Utilities,AnnotationTable<TAnnotation>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AnnotationTable.cs,GetAnnotatedTokens,The length of the statement  "            return node.GetAnnotatedNodesAndTokens(_annotationKind).Where(nt => nt.IsToken && this.HasAnnotations<TSpecificAnnotation>(nt)).Select(nt => nt.AsToken()); " is 155.
Long Statement,Roslyn.Utilities,Request,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AsyncLazy`1.cs,CompleteFromTaskAsynchronously,The length of the statement  "                System.Threading.Tasks.Task.Factory.StartNew(CompleteFromTaskSynchronouslyStub' task' CancellationToken.None' TaskCreationOptions.None' TaskScheduler.Default); " is 159.
Long Statement,Roslyn.Utilities,Request,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AsyncLazy`1.cs,CancelAsynchronously,The length of the statement  "                System.Threading.Tasks.Task.Factory.StartNew(CancelSynchronously' CancellationToken.None' TaskCreationOptions.None' TaskScheduler.Default); " is 139.
Long Statement,Roslyn.Utilities,NonReentrantLock,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\NonReentrantLock.cs,Wait,The length of the statement  "                cancellationTokenRegistration = cancellationToken.Register(s_cancellationTokenCanceledEventHandler' _syncLock' useSynchronizationContext: false); " is 145.
Long Statement,Roslyn.Utilities,EditDistance,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\EditDistance.cs,GetEditDistance,The length of the statement  "                    rowCurrent[column] = Math.Min(Math.Min(Math.Min(Math.Min(copyCost' insertCost)' deleteCost)' replaceCost)' twiddleCost); " is 120.
Long Statement,Roslyn.Utilities,TaskExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskExtensions.cs,WaitAndGetResult,The length of the statement  "            if (Microsoft.CodeAnalysis.Workspace.PrimaryWorkspace != null &&  // only care if we are in a UI situation.. this keeps normal unit tests from failing                                 " is 150.
Long Statement,Roslyn.Utilities,TaskExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskExtensions.cs,SafeContinueWith,The length of the statement  "                (Task antecedent) => continuationFunction((Task<TInput>)antecedent)' cancellationToken' continuationOptions' scheduler); " is 120.
Long Statement,Roslyn.Utilities,TaskExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskExtensions.cs,SafeContinueWith,The length of the statement  "                return task.ContinueWith(outerFunction' cancellationToken' continuationOptions | TaskContinuationOptions.LazyCancellation' scheduler); " is 134.
Long Statement,Roslyn.Utilities,TaskExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskExtensions.cs,SafeContinueWithFromAsync,The length of the statement  "                (Task antecedent) => continuationFunction((Task<TInput>)antecedent)' cancellationToken' continuationOptions' scheduler); " is 120.
Long Statement,Roslyn.Utilities,TaskExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskExtensions.cs,SafeContinueWithFromAsync,The length of the statement  "            var nextTask = task.ContinueWith(continuationFunction' cancellationToken' continuationOptions | TaskContinuationOptions.LazyCancellation' scheduler).Unwrap(); " is 158.
Long Statement,Roslyn.Utilities,TaskExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskExtensions.cs,SafeContinueWithFromAsync,The length of the statement  "            return task.SafeContinueWithFromAsync(continuationFunction' cancellationToken' TaskContinuationOptions.None' scheduler); " is 120.
Long Statement,Roslyn.Utilities,TaskExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskExtensions.cs,SafeContinueWithFromAsync,The length of the statement  "            var nextTask = task.ContinueWith(continuationFunction' cancellationToken' continuationOptions | TaskContinuationOptions.LazyCancellation' scheduler).Unwrap(); " is 158.
Long Statement,Roslyn.Utilities,TaskExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskExtensions.cs,ReportFatalError,The length of the statement  "            // In case of a crash with ExecutionEngineException w/o call stack it might be possible to get the stack trace using WinDbg: " is 124.
Long Statement,Roslyn.Utilities,TaskExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\TaskExtensions.cs,ReportFatalError,The length of the statement  "            //   67   65 4760 692b5d60   1029220 Preemptive  CD9AE70C:FFFFFFFF 012ad0f8 0     MTA (Threadpool Worker) System.ExecutionEngineException 03c51108  " is 146.
Long Statement,Microsoft.CodeAnalysis.CaseCorrection,AbstractCaseCorrectionService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CaseCorrection\AbstractCaseCorrectionService.cs,CaseCorrectAsync,The length of the statement  "            var semanticModel = await document.GetSemanticModelForSpanAsync(spans.Collapse()' cancellationToken).ConfigureAwait(false); " is 123.
Long Statement,Microsoft.CodeAnalysis.CaseCorrection,CaseCorrector,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CaseCorrection\CaseCorrector.cs,CaseCorrectAsync,The length of the statement  "            return await CaseCorrectAsync(document' root.GetAnnotatedNodesAndTokens(annotation).Select(n => n.Span)' cancellationToken).ConfigureAwait(false); " is 146.
Long Statement,Microsoft.CodeAnalysis.CaseCorrection,CaseCorrector,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CaseCorrection\CaseCorrector.cs,CaseCorrectAsync,The length of the statement  "            return await CaseCorrectAsync(document' SpecializedCollections.SingletonEnumerable(span)' cancellationToken).ConfigureAwait(false); " is 131.
Long Statement,Microsoft.CodeAnalysis.CaseCorrection,CaseCorrector,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CaseCorrection\CaseCorrector.cs,CaseCorrectAsync,The length of the statement  "            return await document.Project.LanguageServices.GetService<ICaseCorrectionService>().CaseCorrectAsync(document' spans' cancellationToken).ConfigureAwait(false); " is 159.
Long Statement,Microsoft.CodeAnalysis.CaseCorrection,CaseCorrector,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CaseCorrection\CaseCorrector.cs,CaseCorrect,The length of the statement  "            return workspace.Services.GetLanguageServices(root.Language).GetService<ICaseCorrectionService>().CaseCorrect(root' spans' workspace' cancellationToken); " is 153.
Long Statement,Microsoft.CodeAnalysis.Classification,AbstractClassificationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Classification\AbstractClassificationService.cs,AddSemanticClassificationsAsync,The length of the statement  "                AddSemanticClassifications(semanticModel' textSpan' document.Project.Solution.Workspace' getNodeClassifiers' getTokenClassifiers' result' cancellationToken); " is 157.
Long Statement,Microsoft.CodeAnalysis.Classification,AbstractClassificationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Classification\AbstractClassificationService.cs,AddSemanticClassifications,The length of the statement  "            Worker.Classify(workspace' semanticModel' textSpan' result' getNodeClassifiers' getTokenClassifiers' cancellationToken); " is 120.
Long Statement,Microsoft.CodeAnalysis.Classification,Worker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Classification\AbstractClassificationService.Worker.cs,Classify,The length of the statement  "                var worker = new Worker(workspace' semanticModel' textSpan' list' getNodeClassifiers' getTokenClassifiers' cancellationToken); " is 126.
Long Statement,Microsoft.CodeAnalysis.Classification,Classifier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Classification\Classifier.cs,GetClassifiedSpans,The length of the statement  "            service.AddSemanticClassifications(semanticModel' textSpan' workspace' getNodeClassifiers' getTokenClassifiers' semanticClassifications' cancellationToken); " is 156.
Long Statement,Microsoft.CodeAnalysis.Classification,Classifier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Classification\Classifier.cs,GetClassifiedSpans,The length of the statement  "            var allClassifications = new List<ClassifiedSpan>(semanticClassifications.Where(s => s.TextSpan.OverlapsWith(textSpan))); " is 121.
Long Statement,Microsoft.CodeAnalysis.CodeActions,CodeAction,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeActions\CodeAction.cs,PostProcessAsync,The length of the statement  "                    arrayBuilder.Add(new ApplyChangesOperation(await this.PostProcessChangesAsync(ac.ChangedSolution' cancellationToken).ConfigureAwait(false))); " is 141.
Long Statement,Microsoft.CodeAnalysis.CodeActions,CodeAction,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeActions\CodeAction.cs,PostProcessChangesAsync,The length of the statement  "            document = await Simplifier.ReduceAsync(document' Simplifier.Annotation' cancellationToken: cancellationToken).ConfigureAwait(false); " is 133.
Long Statement,Microsoft.CodeAnalysis.CodeActions,CodeAction,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeActions\CodeAction.cs,PostProcessChangesAsync,The length of the statement  "            document = await Formatter.FormatAsync(document' Formatter.Annotation' cancellationToken: cancellationToken).ConfigureAwait(false); " is 131.
Long Statement,Microsoft.CodeAnalysis.CodeActions,CodeAction,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeActions\CodeAction.cs,PostProcessChangesAsync,The length of the statement  "            document = await Formatter.FormatAsync(document' SyntaxAnnotation.ElasticAnnotation' cancellationToken: cancellationToken).ConfigureAwait(false); " is 145.
Long Statement,Microsoft.CodeAnalysis.CodeActions,CodeAction,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeActions\CodeAction.cs,PostProcessChangesAsync,The length of the statement  "            document = await CaseCorrector.CaseCorrectAsync(document' CaseCorrector.Annotation' cancellationToken).ConfigureAwait(false); " is 125.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,CleanupAsync,The length of the statement  "                    return await IterateAllCodeCleanupProvidersAsync(document' document' r => SpecializedCollections.SingletonEnumerable(r.FullSpan)' codeCleaners' cancellationToken).ConfigureAwait(false); " is 185.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,CleanupAsync,The length of the statement  "                // If it urns out we don't need to annotate anything since all spans are merged to one span that covers the whole node... " is 121.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,CleanupAsync,The length of the statement  "                    return await IterateAllCodeCleanupProvidersAsync(document' document' n => SpecializedCollections.SingletonEnumerable(n.FullSpan)' codeCleaners' cancellationToken).ConfigureAwait(false); " is 185.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,CleanupAsync,The length of the statement  "                return await IterateAllCodeCleanupProvidersAsync(document' annotatedDocument' r => GetTextSpansFromAnnotation(r' newNodeAndAnnotations.Item2' cancellationToken)' codeCleaners' cancellationToken).ConfigureAwait(false); " is 217.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,Cleanup,The length of the statement  "                    return IterateAllCodeCleanupProviders(root' root' r => SpecializedCollections.SingletonEnumerable(r.FullSpan)' workspace' codeCleaners' cancellationToken); " is 155.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,Cleanup,The length of the statement  "                // If it urns out we don't need to annotate anything since all spans are merged to one span that covers the whole node... " is 121.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,Cleanup,The length of the statement  "                    return IterateAllCodeCleanupProviders(root' root' n => SpecializedCollections.SingletonEnumerable(n.FullSpan)' workspace' codeCleaners' cancellationToken); " is 155.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,Cleanup,The length of the statement  "                return IterateAllCodeCleanupProviders(root' annotatedRoot' r => GetTextSpansFromAnnotation(r' newNodeAndAnnotations.Item2' cancellationToken)' workspace' codeCleaners' cancellationToken); " is 187.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,GetTextSpansFromAnnotation,The length of the statement  "                var previousTokens = node.GetAnnotatedNodesAndTokens(previousMarkerAnnotation).Where(n => n.IsToken).Select(n => n.AsToken()); " is 126.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,TryGetTextSpanFromAnnotation,The length of the statement  "                    return TryCreateTextSpan(GetPreviousTokenStartPosition(previousTokenMarker.Type' previousToken)' node.Span.End' out span); " is 122.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,TryGetTextSpanFromAnnotation,The length of the statement  "            // Now the simple cases are done. Now we need to deal with cases where annotations found more than one corresponding token. " is 123.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,TryGetTextSpanFromAnnotation,The length of the statement  "            // Mostly it means one of cleaners violated the contract' so we can just ignore the span except in one cases where it involves the beginning and end of the tree. " is 161.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,TryGetTextSpanFromAnnotation,The length of the statement  "            // All other cases are invalid cases where one of code cleaners messed things up by moving around things it shouldn't move. " is 123.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,GetPreviousTokenStartPosition,The length of the statement  "                return previousToken.GetNextToken(includeZeroWidth: true' includeSkipped: true' includeDirectives: true' includeDocumentationComments: true).SpanStart; " is 151.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,GetNextTokenEndPosition,The length of the statement  "                return nextToken.GetPreviousToken(includeZeroWidth: true' includeSkipped: true' includeDirectives: true' includeDocumentationComments: true).Span.End; " is 150.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,AnnotateNodeForTextSpans,The length of the statement  "                SpanMarker startMarker = new SpanMarker(type: (previousToken.RawKind == 0) ? SpanMarkerType.BeginningOfFile : SpanMarkerType.Normal' " is 132.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,AnnotateNodeForTextSpans,The length of the statement  "                SpanMarker endMarker = new SpanMarker(type: (nextToken.RawKind == 0) ? SpanMarkerType.EndOfFile : SpanMarkerType.Normal' " is 120.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,GetNonOverlappingSpans,The length of the statement  "                SyntaxToken previousToken = startToken.GetPreviousToken(includeZeroWidth: true' includeSkipped: true' includeDirectives: true' includeDocumentationComments: true); " is 163.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,GetNonOverlappingSpans,The length of the statement  "                SyntaxToken nextToken = endToken.GetNextToken(includeZeroWidth: true' includeSkipped: true' includeDirectives: true' includeDocumentationComments: true); " is 153.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,GetTokensAroundSpan,The length of the statement  "            previousToken = startToken.GetPreviousToken(includeZeroWidth: true' includeSkipped: true' includeDirectives: true' includeDocumentationComments: true); " is 151.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,GetTokensAroundSpan,The length of the statement  "            nextToken = endToken.GetNextToken(includeZeroWidth: true' includeSkipped: true' includeDirectives: true' includeDocumentationComments: true); " is 141.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,FindTokenOnRightOfPosition,The length of the statement  "            var token = syntaxFactsService.FindTokenOnRightOfPosition(root' position' includeSkipped: true' includeDirectives: true' includeDocumentationComments: true); " is 157.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,FindTokenOnRightOfPosition,The length of the statement  "                return root.GetLastToken(includeZeroWidth: true' includeSkipped: true' includeDirectives: true' includeDocumentationComments: true); " is 132.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,FindTokenOnLeftOfPosition,The length of the statement  "            var token = syntaxFactsService.FindTokenOnLeftOfPosition(root' position' includeSkipped: true' includeDirectives: true' includeDocumentationComments: true); " is 156.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,FindTokenOnLeftOfPosition,The length of the statement  "                return root.GetFirstToken(includeZeroWidth: true' includeSkipped: true' includeDirectives: true' includeDocumentationComments: true); " is 133.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,IterateAllCodeCleanupProvidersAsync,The length of the statement  "                    using (Logger.LogBlock(FunctionId.CodeCleanup_IterateOneCodeCleanup' GetCodeCleanerTypeName' codeCleaner' cancellationToken)) " is 125.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,IterateAllCodeCleanupProvidersAsync,The length of the statement  "                        await currentDocument.VerifyNoErrorsAsync("Pretty-listing introduced errors in error-free code"' cancellationToken).ConfigureAwait(false); " is 138.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,AbstractCodeCleanerService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,IterateAllCodeCleanupProviders,The length of the statement  "                    using (Logger.LogBlock(FunctionId.CodeCleanup_IterateOneCodeCleanup' GetCodeCleanerTypeName' codeCleaner' cancellationToken)) " is 125.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,SpanMarker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\AbstractCodeCleanerService.cs,FromAnnotation,The length of the statement  "                var types = annotation.Data.Split(s_separators).Select(s => (SpanMarkerType)Enum.Parse(typeof(SpanMarkerType)' s)).ToArray(); " is 125.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,CodeCleaner,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\CodeCleaner.cs,CleanupAsync,The length of the statement  "            return await CleanupAsync(document' new TextSpan(0' text.Length)' providers' cancellationToken: cancellationToken).ConfigureAwait(false); " is 137.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup,CodeCleaner,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\CodeCleaner.cs,CleanupAsync,The length of the statement  "            return await CleanupAsync(document' root.GetAnnotatedNodesAndTokens(annotation).Select(n => n.Span)' providers' cancellationToken: cancellationToken).ConfigureAwait(false); " is 172.
Long Statement,Microsoft.CodeAnalysis.CodeCleanup.Providers,FormatCodeCleanupProvider,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeCleanup\Providers\FormatCodeCleanupProvider.cs,CleanupAsync,The length of the statement  "                var textChanges = Formatter.GetFormattedTextChanges(root' spans' document.Project.Solution.Workspace' cancellationToken: cancellationToken); " is 140.
Long Statement,Microsoft.CodeAnalysis.CodeFixes,CodeFixContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\CodeFixContext.cs,VerifyDiagnosticsArgument,The length of the statement  "                throw new ArgumentException(string.Format(WorkspacesResources.DiagnosticMustHaveMatchingSpan' span.ToString())' nameof(diagnostics)); " is 133.
Long Statement,Microsoft.CodeAnalysis.CodeFixes,BatchSimplificationFixAllProvider,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\BatchSimplificationFixAllProvider.cs,AddSimplifierAnnotationsAsync,The length of the statement  "                var node = GetNodeToSimplify(root' model' diagnostic' fixAllContext.Solution.Workspace' out codeActionEquivalenceKey' cancellationToken); " is 137.
Long Statement,Microsoft.CodeAnalysis.CodeFixes,BatchSimplificationFixAllProvider,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\BatchSimplificationFixAllProvider.cs,AddSimplifierAnnotationsAsync,The length of the statement  "            // Otherwise' if the fix all provider doesn't need parent fixup' we just add simplifier annotation to all nodesToSimplify. " is 122.
Long Statement,Microsoft.CodeAnalysis.CodeFixes,FixAllLogger,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllLogger.cs,LogContext,The length of the statement  "                    m[s_codeActionEquivalenceKey] = fixAllContext.CodeActionEquivalenceKey != null ? fixAllContext.CodeActionEquivalenceKey.GetHashCode().ToString() : null; " is 152.
Long Statement,Microsoft.CodeAnalysis.CodeFixes,BatchFixAllProvider,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\BatchFixAllProvider.cs,GetFixAsync,The length of the statement  "                        AddDocumentFixesAsync(document' documentsAndDiagnosticsToFixMap[document]' fixesBag.Add' fixAllContext).Wait(fixAllContext.CancellationToken); " is 142.
Long Statement,Microsoft.CodeAnalysis.CodeFixes,BatchFixAllProvider,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\BatchFixAllProvider.cs,AddDocumentFixesAsync,The length of the statement  "                        // TODO: Can we share code between similar lambdas that we pass to this API in BatchFixAllProvider.cs' CodeFixService.cs and CodeRefactoringService.cs? " is 151.
Long Statement,Microsoft.CodeAnalysis.CodeFixes,BatchFixAllProvider,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\BatchFixAllProvider.cs,GetDocumentDiagnosticsToFixAsync,The length of the statement  "                            var documentDiagnostics = fixAllContext.GetDocumentDiagnosticsAsync(doc).WaitAndGetResult(fixAllContext.CancellationToken); " is 123.
Long Statement,Microsoft.CodeAnalysis.CodeFixes,BatchFixAllProvider,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\BatchFixAllProvider.cs,GetProjectDiagnosticsToFixAsync,The length of the statement  "                                var projectDiagnostics = fixAllContext.GetProjectDiagnosticsAsync(proj).WaitAndGetResult(fixAllContext.CancellationToken); " is 122.
Long Statement,Microsoft.CodeAnalysis.CodeFixes,BatchFixAllProvider,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\BatchFixAllProvider.cs,TryMergeFixesAsync,The length of the statement  "                        var appliedChanges = (await documentsToMerge[0].GetTextChangesAsync(oldDocument' cancellationToken).ConfigureAwait(false)).ToList(); " is 132.
Long Statement,Microsoft.CodeAnalysis.CodeFixes,BatchFixAllProvider,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\BatchFixAllProvider.cs,TryAddDocumentMergeChangesAsync,The length of the statement  "                while (cumulativeChangeIndex < cumulativeChanges.Count && cumulativeChanges[cumulativeChangeIndex].Span.End < change.Span.Start) " is 128.
Long Statement,Microsoft.CodeAnalysis.CodeFixes,FixAllContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs,GetDocumentDiagnosticsAsync,The length of the statement  "            var diagnostics = await _getDocumentDiagnosticsAsync(document' this.DiagnosticIds' this.CancellationToken).ConfigureAwait(false); " is 129.
Long Statement,Microsoft.CodeAnalysis.CodeFixes,FixAllContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs,GetProjectDiagnosticsAsync,The length of the statement  "            var diagnostics = await _getProjectDiagnosticsAsync(project' includeAllDocumentDiagnostics' this.DiagnosticIds' this.CancellationToken).ConfigureAwait(false); " is 158.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,AddEvent,The length of the statement  "            return AddEvent(destination' @event' options ?? CodeGenerationOptions.Default' GetAvailableInsertionIndices(destination' cancellationToken)); " is 141.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,AddField,The length of the statement  "            return AddField(destination' field' options ?? CodeGenerationOptions.Default' GetAvailableInsertionIndices(destination' cancellationToken)); " is 140.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,AddMethod,The length of the statement  "            return AddMethod(destination' method' options ?? CodeGenerationOptions.Default' GetAvailableInsertionIndices(destination' cancellationToken)); " is 142.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,AddProperty,The length of the statement  "            return AddProperty(destination' property' options ?? CodeGenerationOptions.Default' GetAvailableInsertionIndices(destination' cancellationToken)); " is 146.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,AddNamedType,The length of the statement  "            return AddNamedType(destination' namedType' options ?? CodeGenerationOptions.Default' GetAvailableInsertionIndices(destination' cancellationToken)); " is 148.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,AddNamespace,The length of the statement  "            return AddNamespace(destination' @namespace' options ?? CodeGenerationOptions.Default' GetAvailableInsertionIndices(destination' cancellationToken)); " is 149.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,AddMembers,The length of the statement  "            return AddMembers(destination' members' GetAvailableInsertionIndices(destination' cancellationToken)' options ?? CodeGenerationOptions.Default); " is 144.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,CheckDeclarationNode,The length of the statement  "                        typeof(TDeclarationNode1).Name' typeof(TDeclarationNode2).Name' typeof(TDeclarationNode3).Name' typeof(TDeclarationNode4).Name)' " is 128.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,GetEditAsync,The length of the statement  "            var result = await this.FindMostRelevantDeclarationAsync(solution' destination' options' cancellationToken).ConfigureAwait(false); " is 130.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,GetEditAsync,The length of the statement  "                newDocument = await adder.AddAsync(members' options.PlaceSystemNamespaceFirst' options' cancellationToken).ConfigureAwait(false); " is 129.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,FindMostRelevantDeclarationAsync,The length of the statement  "                declaration = await SelectFirstOrDefaultAsync(declarations' token.Parent.AncestorsAndSelf().Contains' cancellationToken).ConfigureAwait(false); " is 143.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,FindMostRelevantDeclarationAsync,The length of the statement  "                declaration = await SelectFirstOrDefaultAsync(declarations.Where(r => r.SyntaxTree == locationOpt.SourceTree)' node => true' cancellationToken).ConfigureAwait(false); " is 166.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,FindMostRelevantDeclarationAsync,The length of the statement  "            declaration = fallbackDeclaration ?? await SelectFirstOrDefaultAsync(declarations' node => true' cancellationToken).ConfigureAwait(false); " is 138.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,AbstractImportsAdder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractImportsAdder.cs,DetermineNamespaceToImportAsync,The length of the statement  "            var namespaceScopeToReferencedDefinitions = await GetAllReferencedDefinitionsAsync(compilation' members' cancellationToken).ConfigureAwait(false); " is 146.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateEventSymbol,The length of the statement  "            var result = new CodeGenerationEventSymbol(null' attributes' accessibility' modifiers' type' explicitInterfaceSymbol' name' addMethod' removeMethod' raiseMethod' parameterList); " is 177.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateFieldSymbol,The length of the statement  "            var result = new CodeGenerationFieldSymbol(null' attributes' accessibility' modifiers' type' name' hasConstantValue' constantValue); " is 132.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateMethodSymbol,The length of the statement  "            var result = new CodeGenerationMethodSymbol(containingType' attributes' accessibility' modifiers' returnType' explicitInterfaceSymbol' name' typeParameters' parameters' returnTypeAttributes' methodKind); " is 203.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateMethodSymbol,The length of the statement  "            CodeGenerationMethodInfo.Attach(result' modifiers.IsNew' modifiers.IsUnsafe' modifiers.IsPartial' modifiers.IsAsync' statements' handlesExpressions); " is 149.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateMethodSymbol,The length of the statement  "            return CreateMethodSymbol(null' attributes' accessibility' modifiers' returnType' explicitInterfaceSymbol' name' typeParameters' parameters' statements' handlesExpressions' returnTypeAttributes' methodKind); " is 207.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateOperatorSymbol,The length of the statement  "            var result = new CodeGenerationOperatorSymbol(null' attributes' accessibility' modifiers' returnType' operatorKind' parameters' returnTypeAttributes); " is 150.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateOperatorSymbol,The length of the statement  "            CodeGenerationMethodInfo.Attach(result' modifiers.IsNew' modifiers.IsUnsafe' modifiers.IsPartial' modifiers.IsAsync' statements' handlesExpressions: null); " is 155.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateConversionSymbol,The length of the statement  "            var result = new CodeGenerationConversionSymbol(null' attributes' accessibility' modifiers' toType' fromType' isImplicit' toTypeAttributes); " is 140.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateConversionSymbol,The length of the statement  "            CodeGenerationMethodInfo.Attach(result' modifiers.IsNew' modifiers.IsUnsafe' modifiers.IsPartial' modifiers.IsAsync' statements' handlesExpressions: null); " is 155.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateParameterSymbol,The length of the statement  "            return CreateParameterSymbol(attributes: null' refKind: RefKind.None' isParams: false' type: type' name: name' isOptional: false); " is 130.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateParameterSymbol,The length of the statement  "            return new CodeGenerationParameterSymbol(null' attributes' refKind' isParams' type' name' isOptional' hasDefaultValue' defaultValue); " is 133.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationSymbolFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationSymbolFactory.cs,CreateTypeParameter,The length of the statement  "            return new CodeGenerationTypeParameterSymbol(null' attributes' varianceKind' name' constraintTypes' hasConstructorConstraint' hasReferenceConstraint' hasValueConstraint' ordinal); " is 179.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,CreatePropertyDeclaration,The length of the statement  "            return GetCodeGenerationService(workspace' property.Language).CreatePropertyDeclaration(property' destination' options); " is 120.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,CreateNamedTypeDeclaration,The length of the statement  "            return GetCodeGenerationService(workspace' namedType.Language).CreateNamedTypeDeclaration(namedType' destination' options); " is 123.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,CreateNamespaceDeclaration,The length of the statement  "            return GetCodeGenerationService(workspace' @namespace.Language).CreateNamespaceDeclaration(@namespace' destination' options); " is 125.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddParameterDeclarations,The length of the statement  "            return GetCodeGenerationService(workspace' destinationMember.Language).AddParameters(destinationMember' parameters' options); " is 125.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddAttributes,The length of the statement  "            return GetCodeGenerationService(workspace' destination.Language).AddAttributes(destination' attributes' target' options ?? CodeGenerationOptions.Default' cancellationToken); " is 173.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,RemoveAttribute,The length of the statement  "            return GetCodeGenerationService(workspace' destination.Language).RemoveAttribute(destination' attributeToRemove' options ?? CodeGenerationOptions.Default' cancellationToken); " is 174.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,RemoveAttribute,The length of the statement  "            return GetCodeGenerationService(workspace' destination.Language).RemoveAttribute(destination' attributeToRemove' options ?? CodeGenerationOptions.Default' cancellationToken); " is 174.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,UpdateDeclarationModifiers,The length of the statement  "            return GetCodeGenerationService(workspace' destination.Language).UpdateDeclarationModifiers(destination' newModifiers' options ?? new CodeGenerationOptions(reuseSyntax: true)' cancellationToken); " is 195.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,UpdateDeclarationAccessibility,The length of the statement  "            return GetCodeGenerationService(workspace' destination.Language).UpdateDeclarationAccessibility(destination' newAccesibility' options ?? new CodeGenerationOptions(reuseSyntax: true)' cancellationToken); " is 202.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,UpdateDeclarationType,The length of the statement  "            return GetCodeGenerationService(workspace' destination.Language).UpdateDeclarationType(destination' newType' options ?? new CodeGenerationOptions(reuseSyntax: true)' cancellationToken); " is 185.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,UpdateDeclarationMembers,The length of the statement  "            return GetCodeGenerationService(workspace' destination.Language).UpdateDeclarationMembers(destination' newMembers' options ?? new CodeGenerationOptions(reuseSyntax: true)' cancellationToken); " is 191.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddStatements,The length of the statement  "            return GetCodeGenerationService(workspace' destinationMember.Language).AddStatements(destinationMember' statements' options); " is 125.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddEventDeclarationAsync,The length of the statement  "            return GetCodeGenerationService(solution.Workspace' destination.Language).AddEventAsync(solution' destination' @event' options' cancellationToken); " is 147.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddFieldDeclarationAsync,The length of the statement  "            return GetCodeGenerationService(solution.Workspace' destination.Language).AddFieldAsync(solution' destination' field' options' cancellationToken); " is 146.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddMethodDeclarationAsync,The length of the statement  "            return GetCodeGenerationService(solution.Workspace' destination.Language).AddMethodAsync(solution' destination' method' options' cancellationToken); " is 148.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddPropertyDeclarationAsync,The length of the statement  "            return GetCodeGenerationService(solution.Workspace' destination.Language).AddPropertyAsync(solution' destination' property' options' cancellationToken); " is 152.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddNamedTypeDeclarationAsync,The length of the statement  "            return GetCodeGenerationService(solution.Workspace' destination.Language).AddNamedTypeAsync(solution' destination' namedType' options' cancellationToken); " is 154.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddNamedTypeDeclarationAsync,The length of the statement  "            return GetCodeGenerationService(solution.Workspace' destination.Language).AddNamedTypeAsync(solution' destination' namedType' options' cancellationToken); " is 154.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddNamespaceDeclarationAsync,The length of the statement  "            return GetCodeGenerationService(solution.Workspace' destination.Language).AddNamespaceAsync(solution' destination' @namespace' options' cancellationToken); " is 155.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddNamespaceOrTypeDeclarationAsync,The length of the statement  "            return GetCodeGenerationService(solution.Workspace' destination.Language).AddNamespaceOrTypeAsync(solution' destination' namespaceOrType' options' cancellationToken); " is 166.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,AddMemberDeclarationsAsync,The length of the statement  "            return GetCodeGenerationService(solution.Workspace' destination.Language).AddMembersAsync(solution' destination' members' options' cancellationToken); " is 150.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerator.cs,CanAdd,The length of the statement  "            return GetCodeGenerationService(solution.Workspace' destination.Language).CanAddTo(destination' solution' cancellationToken); " is 125.
Long Statement,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationConstructorSymbol,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationConstructorSymbol.cs,Clone,The length of the statement  "            var result = new CodeGenerationConstructorSymbol(this.ContainingType' this.GetAttributes()' this.DeclaredAccessibility' this.Modifiers' this.Parameters); " is 153.
Long Statement,Microsoft.CodeAnalysis.Editing,SymbolEditor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SymbolEditor.cs,GetCurrentSymbolAsync,The length of the statement  "                var currentSymbol = await GetSymbolAsync(_currentSolution' projectId' symbolId' cancellationToken).ConfigureAwait(false); " is 121.
Long Statement,Microsoft.CodeAnalysis.Editing,SymbolEditor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SymbolEditor.cs,GetSymbolAsync,The length of the statement  "                var originalComp = await this.originalSolution.GetProject(projectId).GetCompilationAsync(cancellationToken).ConfigureAwait(false); " is 130.
Long Statement,Microsoft.CodeAnalysis.Editing,SymbolEditor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SymbolEditor.cs,EditOneDeclarationAsync,The length of the statement  "                return await this.EditDeclarationAsync(currentSymbol' declaration' editAction' cancellationToken).ConfigureAwait(false); " is 120.
Long Statement,Microsoft.CodeAnalysis.Editing,SymbolEditor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SymbolEditor.cs,CheckSymbolArgument,The length of the statement  "                throw new ArgumentException(string.Format(WorkspacesResources.TheSymbolCannotBeLocatedWithinTheCurrentSolution' argSymbol.Name)); " is 129.
Long Statement,Microsoft.CodeAnalysis.Editing,SymbolEditor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SymbolEditor.cs,EditOneDeclarationAsync,The length of the statement  "                return await this.EditOneDeclarationAsync(symbol' doc.Id' location.SourceSpan.Start' editAction' cancellationToken).ConfigureAwait(false); " is 138.
Long Statement,Microsoft.CodeAnalysis.Editing,SymbolEditor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SymbolEditor.cs,EditOneDeclarationAsync,The length of the statement  "                return await this.EditOneDeclarationAsync(symbol' doc.Id' location.SourceSpan.Start' editAction' cancellationToken).ConfigureAwait(false); " is 138.
Long Statement,Microsoft.CodeAnalysis.Editing,SymbolEditor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SymbolEditor.cs,EditOneDeclarationAsync,The length of the statement  "            var declaration = this.GetDeclarations(currentSymbol).FirstOrDefault(d => memberDecls.Any(md => md.SyntaxTree == d.SyntaxTree && d.FullSpan.IntersectsWith(md.FullSpan))); " is 170.
Long Statement,Microsoft.CodeAnalysis.Editing,SymbolEditor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SymbolEditor.cs,EditOneDeclarationAsync,The length of the statement  "                throw new ArgumentException(string.Format(WorkspacesResources.TheMemberIsNotDeclaredWithinTheDeclarationOfTheSymbol' member.Name)); " is 131.
Long Statement,Microsoft.CodeAnalysis.Editing,SymbolEditor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SymbolEditor.cs,EditOneDeclarationAsync,The length of the statement  "            return await this.EditDeclarationAsync(currentSymbol' declaration' editAction' cancellationToken).ConfigureAwait(false); " is 120.
Long Statement,Microsoft.CodeAnalysis.Editing,SymbolEditorExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SymbolEditorExtensions.cs,GetBaseOrInterfaceDeclarationReferenceAsync,The length of the statement  "                baseOrInterfaceType = (ITypeSymbol)(await editor.GetCurrentSymbolAsync(baseOrInterfaceType' cancellationToken).ConfigureAwait(false)); " is 134.
Long Statement,Microsoft.CodeAnalysis.Editing,SymbolEditorExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SymbolEditorExtensions.cs,GetBaseOrInterfaceDeclarationReferenceAsync,The length of the statement  "                var typeRef = gen.GetBaseAndInterfaceTypes(decl).FirstOrDefault(r => model.GetTypeInfo(r' cancellationToken).Type.Equals(baseOrInterfaceType)); " is 143.
Long Statement,Microsoft.CodeAnalysis.Editing,SymbolEditorExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SymbolEditorExtensions.cs,SetBaseTypeAsync,The length of the statement  "                var typeRef = await editor.GetBaseOrInterfaceDeclarationReferenceAsync(symbol' baseType' cancellationToken).ConfigureAwait(false); " is 130.
Long Statement,Microsoft.CodeAnalysis.Editing,SymbolEditorExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SymbolEditorExtensions.cs,SetBaseTypeAsync,The length of the statement  "            return editor.SetBaseTypeAsync(symbol' g => newBaseType != null ? g.TypeExpression(newBaseType) : null' cancellationToken); " is 123.
Long Statement,Microsoft.CodeAnalysis.Editing,SyntaxGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SyntaxGenerator.cs,WithTypeParametersAndConstraints,The length of the statement  "                    if (tp.HasConstructorConstraint || tp.HasReferenceTypeConstraint || tp.HasValueTypeConstraint || tp.ConstraintTypes.Length > 0) " is 127.
Long Statement,Microsoft.CodeAnalysis.Editing,SyntaxGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SyntaxGenerator.cs,WithTypeConstraint,The length of the statement  "            return WithTypeConstraint(declaration' typeParameterName' SpecialTypeConstraintKind.None' (IEnumerable<SyntaxNode>)types); " is 122.
Long Statement,Microsoft.CodeAnalysis.Editing,SyntaxGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SyntaxGenerator.cs,AddAttributeArguments,The length of the statement  "            return this.InsertAttributeArguments(attributeDeclaration' this.GetAttributeArguments(attributeDeclaration).Count' attributeArguments); " is 135.
Long Statement,Microsoft.CodeAnalysis.Editing,DeclarationModifiers,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\DeclarationModifiers.cs,From,The length of the statement  "                ////isNew: (property != null && property.OverriddenProperty == null) || (method != null && method.OverriddenMethod == null)' " is 124.
Long Statement,Microsoft.CodeAnalysis.Differencing,Edit,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Differencing\Edit.cs,GetDebuggerDisplay,The length of the statement  "                    return result + " [" + _oldNode.ToString() + "]" + DisplayPosition(_oldNode) + " -> [" + _newNode.ToString() + "]" + DisplayPosition(_newNode); " is 143.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,DeclaredSymbolInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\DeclaredSymbolInfo.cs,ReadFrom,The length of the statement  "                return new DeclaredSymbolInfo(name' immediateContainer' entireContainer' kind' new TextSpan(spanStart' spanLength)' parameterCount' typeParameterCount); " is 152.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,AbstractSyntaxTreeInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\AbstractSyntaxTreeInfo.cs,SaveAsync,The length of the statement  "            var persisted = await SaveAsync(document' persistenceName' serializationFormat' this' cancellationToken).ConfigureAwait(false); " is 127.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,AbstractSyntaxTreeInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\AbstractSyntaxTreeInfo.cs,LoadAsync,The length of the statement  "            var infoTable = cache.GetValue(document.Project.Solution.BranchId' _ => new ConditionalWeakTable<DocumentId' AbstractSyntaxTreeInfo>()); " is 136.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,AbstractSyntaxTreeInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\AbstractSyntaxTreeInfo.cs,LoadAsync,The length of the statement  "            var primaryInfoTable = cache.GetValue(document.Project.Solution.Workspace.PrimaryBranchId' _ => new ConditionalWeakTable<DocumentId' AbstractSyntaxTreeInfo>()); " is 160.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,AbstractSyntaxTreeInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\AbstractSyntaxTreeInfo.cs,LoadAsync,The length of the statement  "            info = await LoadAsync(document' persistenceName' serializationFormat' reader' cancellationToken).ConfigureAwait(false); " is 120.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,AbstractSyntaxTreeInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\AbstractSyntaxTreeInfo.cs,LoadAsync,The length of the statement  "                // save it in the cache. persisted info is always from primary branch. no reason to save it to the branched document cache. " is 123.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeDeclarationInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeDeclarationInfo.cs,LoadAsync,The length of the statement  "            var info = await LoadAsync(document' ReadFrom' s_cache' PersistenceName' SerializationFormat' cancellationToken).ConfigureAwait(false); " is 135.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,Extensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\Extensions.cs,GetIdentifierOrGlobalNamespaceTokensWithTextAsync,The length of the statement  "            return FindReferenceCache.GetIdentifierOrGlobalNamespaceTokensWithText(syntaxFacts' document' version' model' root' text' identifier' cancellationToken); " is 153.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,DependentProjectsFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentProjectsFinder.cs,GetDependentProjectsAsync,The length of the statement  "                var dependentProjects = await GetDependentProjectsWorkerAsync(symbol' solution' cancellationToken).ConfigureAwait(false); " is 121.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,DependentProjectsFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentProjectsFinder.cs,GetDependentProjectsWorkerAsync,The length of the statement  "            // 1) Compute all the dependent projects (submission + non-submission) and their InternalsVisibleTo semantics to the definition project. " is 136.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,DependentProjectsFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentProjectsFinder.cs,GetDependentProjectsWorkerAsync,The length of the statement  "                dependentProjects = await GetDependentProjectsCoreAsync(symbol' solution' sourceProject' visibility' cancellationToken).ConfigureAwait(false); " is 142.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,DependentProjectsFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentProjectsFinder.cs,GetDependentProjectsWorkerAsync,The length of the statement  "                ConcurrentDictionary<DefinitionProject' IEnumerable<DependentProject>> dependentProjectsMap = s_dependentProjectsCache.GetValue(solution' s_createDependentProjectsMapCallback); " is 176.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,DependentProjectsFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentProjectsFinder.cs,GetDependentProjectsWorkerAsync,The length of the statement  "                var key = new DefinitionProject(isSourceProject: sourceProject != null' assemblyName: containingAssembly.Name.ToLower()); " is 121.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,DependentProjectsFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentProjectsFinder.cs,GetDependentProjectsWorkerAsync,The length of the statement  "                    dependentProjects = await GetDependentProjectsCoreAsync(symbol' solution' sourceProject' visibility' cancellationToken).ConfigureAwait(false); " is 142.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,DependentProjectsFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentProjectsFinder.cs,GetDependentProjectsCoreAsync,The length of the statement  "                await AddNonSubmissionDependentProjectsAsync(symbol.ContainingAssembly' solution' sourceProject' dependentProjects' cancellationToken).ConfigureAwait(false); " is 157.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,DependentProjectsFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentProjectsFinder.cs,GetDependentProjectsCoreAsync,The length of the statement  "            await AddSubmissionDependentProjectsAsync(solution' sourceProject' dependentProjects' cancellationToken).ConfigureAwait(false); " is 127.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,DependentProjectsFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentProjectsFinder.cs,IsInternalsVisibleToAttribute,The length of the statement  "            var attributeName = attr.AttributeClass.ToDisplayString(SymbolDisplayFormat.FullyQualifiedFormat.WithGlobalNamespaceStyle(SymbolDisplayGlobalNamespaceStyle.Omitted)); " is 166.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,DependentProjectsFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentProjectsFinder.cs,AddNonSubmissionDependentProjectsAsync,The length of the statement  "                            var sourceAssemblyInTargetCompilation = sourceAssemblySymbolKey.Resolve(compilation' cancellationToken: cancellationToken).Symbol as IAssemblySymbol; " is 149.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,DependentTypeFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentTypeFinder.cs,GetDependentTypesAsync,The length of the statement  "            var dependentProjects = await DependentProjectsFinder.GetDependentProjectsAsync(type' solution' projects' cancellationToken).ConfigureAwait(false); " is 147.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,DependentTypeFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentTypeFinder.cs,GetDependentTypesAsync,The length of the statement  "                    async () => await GetDependentTypesInProjectAsync(type' project' solution' predicate' cache' locationsInMetadata' results' cancellationToken).ConfigureAwait(false)' cancellationToken)); " is 185.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,DependentTypeFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentTypeFinder.cs,GetDependentTypesInProjectAsync,The length of the statement  "                    var mappedSymbol = await SymbolFinder.FindSourceDefinitionAsync(resolvedSymbol' solution' cancellationToken).ConfigureAwait(false) ?? resolvedSymbol; " is 149.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,FindReferenceCache,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferenceCache.cs,GetIdentifierOrGlobalNamespaceTokensWithText,The length of the statement  "                return GetIdentifierOrGlobalNamespaceTokensWithText(syntaxFacts' document' version' root' sourceText' normalized' cancellationToken); " is 133.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,FindReferenceCache,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferenceCache.cs,GetIdentifierOrGlobalNamespaceTokensWithText,The length of the statement  "            return entry.IdentifierCache.GetOrAdd(normalized' key => GetIdentifierOrGlobalNamespaceTokensWithText(syntaxFacts' document' version' root' sourceText' key' cancellationToken)); " is 177.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,FindReferencesSearchEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferencesSearchEngine.cs,ProcessDocumentAsync,The length of the statement  "            using (Logger.LogBlock(FunctionId.FindReference_ProcessDocumentAsync' s_logDocument' document' symbol' _cancellationToken)) " is 123.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,FindReferencesSearchEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferencesSearchEngine.cs,ProcessDocumentAsync,The length of the statement  "                    var references = await finder.FindReferencesInDocumentAsync(symbol' document' _cancellationToken).ConfigureAwait(false) ?? SpecializedCollections.EmptyEnumerable<ReferenceLocation>(); " is 183.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,FindReferencesSearchEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferencesSearchEngine.cs,CreateDocumentMapAsync,The length of the statement  "                Func<Document' ConcurrentQueue<ValueTuple<ISymbol' IReferenceFinder>>> createQueue = d => new ConcurrentQueue<ValueTuple<ISymbol' IReferenceFinder>>(); " is 151.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,FindReferencesSearchEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferencesSearchEngine.cs,CreateDocumentMapAsync,The length of the statement  "                            var documents = finder.DetermineDocumentsToSearch(symbol' project' cancellationToken) ?? SpecializedCollections.EmptyEnumerable<Document>(); " is 140.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,FindReferencesSearchEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferencesSearchEngine.cs,CreateDocumentMapAsync,The length of the statement  "                        var documents = await finder.DetermineDocumentsToSearchAsync(symbol' project' _documents' _cancellationToken).ConfigureAwait(false) ?? SpecializedCollections.EmptyEnumerable<Document>(); " is 186.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,FindReferencesSearchEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferencesSearchEngine.cs,CreateProjectMapAsync,The length of the statement  "                Func<Project' ConcurrentQueue<ValueTuple<ISymbol' IReferenceFinder>>> createQueue = p => new ConcurrentQueue<ValueTuple<ISymbol' IReferenceFinder>>(); " is 150.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,FindReferencesSearchEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferencesSearchEngine.cs,CreateProjectMapAsync,The length of the statement  "                            var projects = f.DetermineProjectsToSearch(s' solution' cancellationToken) ?? SpecializedCollections.EmptyEnumerable<Project>(); " is 128.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,FindReferencesSearchEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferencesSearchEngine.cs,CreateProjectMapAsync,The length of the statement  "                        var projects = await f.DetermineProjectsToSearchAsync(s' _solution' scope' _cancellationToken).ConfigureAwait(false) ?? SpecializedCollections.EmptyEnumerable<Project>(); " is 170.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,FindReferencesSearchEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferencesSearchEngine.cs,DetermineAllSymbolsCoreAsync,The length of the statement  "            searchSymbol = await SymbolFinder.FindSourceDefinitionAsync(searchSymbol' _solution' _cancellationToken).ConfigureAwait(false) ?? searchSymbol; " is 143.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,FindReferencesSearchEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferencesSearchEngine.cs,DetermineAllSymbolsCoreAsync,The length of the statement  "                        var symbols = await f.DetermineCascadedSymbolsAsync(searchSymbol' _solution' projects' _cancellationToken).ConfigureAwait(false) ?? SpecializedCollections.EmptyEnumerable<ISymbol>(); " is 182.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,FindReferencesSearchEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferencesSearchEngine.cs,DetermineAllSymbolsCoreAsync,The length of the statement  "                            symbolTasks.Add(Task.Run(async () => await DetermineAllSymbolsCoreAsync(child' result).ConfigureAwait(false)' _cancellationToken)); " is 131.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,FindReferencesSearchEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferencesSearchEngine.cs,ProcessProjectAsync,The length of the statement  "                    documentTasks.Add(Task.Run(async () => await ProcessDocumentQueueAsync(document' documentQueue' wrapper).ConfigureAwait(false)' _cancellationToken)); " is 149.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindSymbolAtPosition,The length of the statement  "            return FindSymbolAtPosition(semanticModel' position' workspace' bindLiteralsToUnderlyingType: false' cancellationToken: cancellationToken); " is 139.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindSymbolAtPosition,The length of the statement  "            var token = syntaxTree.GetTouchingToken(position' syntaxFacts.IsBindableToken' cancellationToken' findInsideTrivia: true); " is 122.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindDeclarationsAsyncImpl,The length of the statement  "                        await AddDeclarationsAsync(assemblyProject' compilation' assembly' name' ignoreCase' criteria' list' cancellationToken).ConfigureAwait(false); " is 142.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindDeclarationsAsyncImpl,The length of the statement  "                        await AddDeclarationsAsync(project.Solution' assembly' GetMetadataReferenceFilePath(mr)' name' ignoreCase' criteria' list' cancellationToken).ConfigureAwait(false); " is 164.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindDeclarationsAsyncImpl,The length of the statement  "                    await AddDeclarationsAsync(project.Solution' assembly' GetMetadataReferenceFilePath(mr)' name' ignoreCase' criteria' list' cancellationToken).ConfigureAwait(false); " is 164.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,AddDeclarationsAsync,The length of the statement  "            await AddDeclarationsAsync(project' null' null' name' ignoreCase' filter' list' cancellationToken).ConfigureAwait(false); " is 121.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,AddDeclarationsAsync,The length of the statement  "            Func<string' bool> predicate = n => ignoreCase ? CaseInsensitiveComparison.Comparer.Equals(name' n) : StringComparer.Ordinal.Equals(name' n); " is 141.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,AddDeclarationsAsync,The length of the statement  "                            .Select(s => s.GetSymbolKey().Resolve(startingCompilation' cancellationToken: cancellationToken).Symbol).WhereNotNull()); " is 121.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,AddDeclarationsAsync,The length of the statement  "                var info = await SymbolTreeInfo.GetInfoForAssemblyAsync(solution' assembly' filePath' cancellationToken).ConfigureAwait(false); " is 127.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindSourceDeclarationsAsyncImpl,The length of the statement  "                var symbols = await FindSourceDeclarationsAsyncImpl(project' name' ignoreCase' filter' cancellationToken).ConfigureAwait(false); " is 128.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindOverridesAsync,The length of the statement  "                var derivedTypes = await containingType.FindDerivedClassesAsync(solution' projects' cancellationToken).ConfigureAwait(false); " is 125.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindImplementedInterfaceMembersAsync,The length of the statement  "                    var derivedClasses = await containingType.FindDerivedClassesAsync(solution' projects' cancellationToken).ConfigureAwait(false); " is 127.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindImplementedInterfaceMembersAsync,The length of the statement  "                                    foreach (var implementation in type.FindImplementationsForInterfaceMember(interfaceMethod' solution.Workspace' cancellationToken)) " is 130.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindImplementedInterfaceMembersAsync,The length of the statement  "                                        if (implementation != null && SymbolEquivalenceComparer.Instance.Equals(implementation.OriginalDefinition' symbol.OriginalDefinition)) " is 134.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindImplementationsAsync,The length of the statement  "                var implementingTypes = await namedTypeSymbol.FindImplementingTypesAsync(solution' projects' cancellationToken).ConfigureAwait(false); " is 134.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindImplementationsAsync,The length of the statement  "                var allTypes = await containingType.FindImplementingTypesAsync(solution' projects' cancellationToken).ConfigureAwait(false); " is 124.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindCallersAsync,The length of the statement  "            var foundSymbol = await SymbolFinder.FindSourceDefinitionAsync(symbol' solution' cancellationToken).ConfigureAwait(false); " is 122.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindCallersAsync,The length of the statement  "            var callReferences = await FindCallReferencesAsync(solution' symbol' documents' cancellationToken).ConfigureAwait(false); " is 121.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindCallersAsync,The length of the statement  "                foreach (var kvp in await directReferences.Locations.FindReferencingSymbolsAsync(cancellationToken).ConfigureAwait(false)) " is 122.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindReferencesAsync,The length of the statement  "            return FindReferencesAsync(symbol' solution' progress: null' documents: documents' cancellationToken: cancellationToken); " is 121.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolTreeInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolTree\SymbolTreeInfo.cs,Search,The length of the statement  "                if ((isSameName && lastGood) // check for same string instance to avoid invoking predicate when we already know the outcome (assumes no side effects of predicate.) " is 163.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SymbolTreeInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolTree\SymbolTreeInfo.cs,GetInfoForAssemblyAsync,The length of the statement  "            // now' we can't use AsyncLazy here since constructing information requires a solution. if we ever get cancellation before " is 122.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,ConvertToContainingNodeFlag,The length of the statement  "            containingNodes = containsForEachStatement ? (containingNodes | ContainingNodes.ContainsForEachStatement) : containingNodes; " is 124.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,ConvertToContainingNodeFlag,The length of the statement  "            containingNodes = containsUsingStatement ? (containingNodes | ContainingNodes.ContainsUsingStatement) : containingNodes; " is 120.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,ConvertToContainingNodeFlag,The length of the statement  "            containingNodes = containsQueryExpression ? (containingNodes | ContainingNodes.ContainsQueryExpression) : containingNodes; " is 122.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,ConvertToContainingNodeFlag,The length of the statement  "            containingNodes = containsThisConstructorInitializer ? (containingNodes | ContainingNodes.ContainsThisConstructorInitializer) : containingNodes; " is 144.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,ConvertToContainingNodeFlag,The length of the statement  "            containingNodes = containsBaseConstructorInitializer ? (containingNodes | ContainingNodes.ContainsBaseConstructorInitializer) : containingNodes; " is 144.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,ConvertToContainingNodeFlag,The length of the statement  "            containingNodes = containsElementAccessExpression ? (containingNodes | ContainingNodes.ContainsElementAccessExpression) : containingNodes; " is 138.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,ConvertToContainingNodeFlag,The length of the statement  "            containingNodes = containsIndexerMemberCref ? (containingNodes | ContainingNodes.ContainsIndexerMemberCref) : containingNodes; " is 126.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,LoadAsync,The length of the statement  "            var infoTable = s_cache.GetValue(document.Project.Solution.BranchId' _ => new ConditionalWeakTable<DocumentId' SyntaxTreeContextInfo>()); " is 137.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,LoadAsync,The length of the statement  "            var primaryInfoTable = s_cache.GetValue(document.Project.Solution.Workspace.PrimaryBranchId' _ => new ConditionalWeakTable<DocumentId' SyntaxTreeContextInfo>()); " is 161.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,LoadAsync,The length of the statement  "            info = await LoadAsync(document' PersistenceName' SerializationFormat' ReadFrom' cancellationToken).ConfigureAwait(false); " is 122.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,LoadAsync,The length of the statement  "                // save it in the cache. persisted info is always from primary branch. no reason to save it to the branched document cache. " is 123.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,SaveAsync,The length of the statement  "            var infoTable = s_cache.GetValue(document.Project.Solution.BranchId' _ => new ConditionalWeakTable<DocumentId' SyntaxTreeContextInfo>()); " is 137.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,SaveAsync,The length of the statement  "            var primaryInfoTable = s_cache.GetValue(document.Project.Solution.Workspace.PrimaryBranchId' _ => new ConditionalWeakTable<DocumentId' SyntaxTreeContextInfo>()); " is 161.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeIdentifierInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeIdentifierInfo.cs,LoadAsync,The length of the statement  "            var info = await LoadAsync(document' ReadFrom' s_cache' PersistenceName' SerializationFormat' cancellationToken).ConfigureAwait(false); " is 135.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeInfo.cs,GetContextInfoAsync,The length of the statement  "            return GetInfoAsync(document' s_contextSnapshotCache' SyntaxTreeContextInfo.LoadAsync' tuple => tuple.Item2' cancellationToken); " is 128.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeInfo.cs,GetIdentifierInfoAsync,The length of the statement  "            return GetInfoAsync(document' s_identifierSnapshotCache' SyntaxTreeIdentifierInfo.LoadAsync' tuple => tuple.Item1' cancellationToken); " is 134.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeInfo.cs,GetDeclarationInfoAsync,The length of the statement  "            return GetInfoAsync(document' s_declaredSymbolsSnapshotCache' SyntaxTreeDeclarationInfo.LoadAsync' tuple => tuple.Item3' cancellationToken); " is 140.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeInfo.cs,CreateInfoAsync,The length of the statement  "                            containsThisConstructorInitializer = containsThisConstructorInitializer || syntaxFacts.IsThisConstructorInitializer(token); " is 123.
Long Statement,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeInfo.cs,CreateInfoAsync,The length of the statement  "                            containsBaseConstructorInitializer = containsBaseConstructorInitializer || syntaxFacts.IsBaseConstructorInitializer(token); " is 123.
Long Statement,Microsoft.CodeAnalysis.Internal.Log,Logger,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Log\Logger.LogBlock.cs,LogBlock,The length of the statement  "            return CreateLogBlock(functionId' LogMessage.Create(messageGetter' arg0' arg1' arg2' arg3)' GetNextUniqueBlockId()' token); " is 123.
Long Statement,Microsoft.CodeAnalysis.Internal.Log,Logger,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Log\Logger.LogBlock.cs,GetLoggingChecker,The length of the statement  "            var functionIdOptions = functionIds.ToDictionary(id => id' id => optionService.GetOption(FunctionIdOptions.GetOption(id))); " is 123.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,TextDocumentExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\TextDocumentExtensions.cs,WithAdditionalDocumentText,The length of the statement  "            return textDocument.Project.Solution.WithAdditionalDocumentText(textDocument.Id' text' PreservationMode.PreserveIdentity).GetTextDocument(textDocument.Id); " is 155.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ITypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,FindImplementationsForInterfaceMember,The length of the statement  "                            (IEventSymbol eventSymbol) => FindImplementations(currentType' eventSymbol' workspace' e => e.ExplicitInterfaceImplementations)' " is 128.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ITypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,FindImplementationsForInterfaceMember,The length of the statement  "                            (IMethodSymbol methodSymbol) => FindImplementations(currentType' methodSymbol' workspace' m => m.ExplicitInterfaceImplementations)' " is 131.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ITypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,FindImplementationsForInterfaceMember,The length of the statement  "                            (IPropertySymbol propertySymbol) => FindImplementations(currentType' propertySymbol' workspace' p => p.ExplicitInterfaceImplementations)); " is 138.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ITypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,FindImplementations,The length of the statement  "                      SignatureComparer.Instance.HaveSameSignatureAndConstraintsAndReturnTypeAndAccessors(member' interfaceSymbol' syntaxFacts.IsCaseSensitive) " is 137.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ITypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,InheritsFromOrEqualsIgnoringConstruction,The length of the statement  "            return type.GetBaseTypesAndThis().Contains(t => SymbolEquivalenceComparer.Instance.Equals(t.OriginalDefinition' originalBaseType)); " is 131.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ITypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,ImplementsIgnoringConstruction,The length of the statement  "            return type.AllInterfaces.Any(t => SymbolEquivalenceComparer.Instance.Equals(t.OriginalDefinition' originalInterfaceType)); " is 123.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ITypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,ReplaceTypeParametersBasedOnTypeConstraints,The length of the statement  "            return type?.Accept(new ReplaceTypeParameterBasedOnTypeConstraintVisitor(compilation' availableTypeParameters.Select(t => t.Name).ToSet()' solution' cancellationToken)); " is 169.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ReplaceTypeParameterBasedOnTypeConstraintVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,VisitTypeParameter,The length of the statement  "                                return ((INamedTypeSymbol)ct).FindDerivedClassesAsync(_solution' immutableProjects' _cancellationToken).WaitAndGetResult(_cancellationToken) " is 140.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ReplaceTypeParameterBasedOnTypeConstraintVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,VisitTypeParameter,The length of the statement  "                                       .Concat(((INamedTypeSymbol)ct).FindImplementingTypesAsync(_solution' immutableProjects' _cancellationToken).WaitAndGetResult(_cancellationToken)) " is 145.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ReplaceTypeParameterBasedOnTypeConstraintVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,VisitTypeParameter,The length of the statement  "                                var knownsimilarTypesInCompilation = SymbolFinder.FindSimilarSymbols(typeConstraintConvertedType' _compilation' _cancellationToken); " is 132.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ReplaceTypeParameterBasedOnTypeConstraintVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,VisitTypeParameter,The length of the statement  "                                var resultantSimilarKnownTypes = SymbolFinder.FindSimilarSymbols(resultantIntersectingType' _compilation' _cancellationToken); " is 126.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,DocumentExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\DocumentExtensions.cs,GetSemanticModelForSpanAsync,The length of the statement  "            return await GetSemanticModelForNodeAsync(semanticModelService' syntaxFactService' document' node' span' cancellationToken).ConfigureAwait(false); " is 146.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,DocumentExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\DocumentExtensions.cs,GetSemanticModelForNodeAsync,The length of the statement  "            return GetSemanticModelForNodeAsync(semanticModelService' syntaxFactService' document' node' node.FullSpan' cancellationToken); " is 127.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,DocumentExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\DocumentExtensions.cs,HasAnyErrors,The length of the statement  "            return semanticModel.GetDiagnostics(cancellationToken: cancellationToken).Any(diag => diag.Severity == DiagnosticSeverity.Error && " is 130.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ICodeDefinitionFactoryExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ICodeDefinitionFactoryExtensions.cs,OverrideProperty,The length of the statement  "                getBody = codeFactory.CreateThrowNotImplementStatement(document.Project.GetCompilationAsync(cancellationToken).WaitAndGetResult(cancellationToken)); " is 148.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ICodeDefinitionFactoryExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ICodeDefinitionFactoryExtensions.cs,OverrideMethod,The length of the statement  "                    statements: new[] { codeFactory.CreateThrowNotImplementStatement(newDocument.Project.GetCompilationAsync(cancellationToken).WaitAndGetResult(cancellationToken)) }); " is 164.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ICodeDefinitionFactoryExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ICodeDefinitionFactoryExtensions.cs,CreateEqualsMethod,The length of the statement  "                parameters: new[] { CodeGenerationSymbolFactory.CreateParameterSymbol(compilation.GetSpecialType(SpecialType.System_Object)' ObjName) }' " is 136.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ICodeDefinitionFactoryExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ICodeDefinitionFactoryExtensions.cs,CreateEqualsMethodStatements,The length of the statement  "                var localDeclaration = factory.LocalDeclarationStatement(localName' factory.CastExpression(containingType' objNameExpression)); " is 127.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ICodeDefinitionFactoryExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ICodeDefinitionFactoryExtensions.cs,CreateEqualsMethodStatements,The length of the statement  "                var localDeclaration = factory.LocalDeclarationStatement(localName' factory.TryCastExpression(objNameExpression' containingType)); " is 130.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ICodeDefinitionFactoryExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ICodeDefinitionFactoryExtensions.cs,CreateEqualsMethodStatements,The length of the statement  "                var thisSymbol = factory.MemberAccessExpression(factory.ThisExpression()' symbolNameExpression).WithAdditionalAnnotations(Simplification.Simplifier.Annotation); " is 160.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,IFindReferencesResultExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\IFindReferencesResultExtensions.cs,FilterNonMatchingMethodNamesWorker,The length of the statement  "                var isCaseSensitive = solution.Workspace.Services.GetLanguageServices(reference.Definition.Language).GetService<ISyntaxFactsService>().IsCaseSensitive; " is 151.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,IMethodSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\IMethodSymbolExtensions.cs,RenameTypeParameters,The length of the statement  "                    CodeGenerationSymbolFactory.CreateParameterSymbol(p.GetAttributes()' p.RefKind' p.IsParams' p.Type.SubstituteTypes(mapping' typeGenerator)' p.Name' p.IsOptional' " is 161.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,IMethodSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\IMethodSymbolExtensions.cs,RenameTypeParameters,The length of the statement  "                newTypeParameter.ConstraintTypes = ImmutableArray.CreateRange(newTypeParameter.ConstraintTypes' t => t.SubstituteTypes(mapping' typeGenerator)); " is 144.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,INamedTypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\INamedTypeSymbolExtensions.cs,GetAllUnimplementedMembers,The length of the statement  "            var typesToImplement = GetTypesToImplement(classOrStructType' interfacesOrAbstractClasses' allowReimplementation' cancellationToken); " is 133.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,INamedTypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\INamedTypeSymbolExtensions.cs,GetAllUnimplementedMembers,The length of the statement  "            return typesToImplement.Select(s => Tuple.Create(s' GetUnimplementedMembers(classOrStructType' s' isImplemented' isValidImplementation' interfaceMemberGetter' cancellationToken))) " is 179.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,INamespaceOrTypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\INamespaceOrTypeSymbolExtensions.cs,GetNameParts,The length of the statement  "            if (namespaceOrTypeSymbol == null || (namespaceOrTypeSymbol.IsNamespace && ((INamespaceSymbol)namespaceOrTypeSymbol).IsGlobalNamespace)) " is 136.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,IsModuleMember,The length of the statement  "            return symbol != null && symbol.ContainingSymbol is INamedTypeSymbol && symbol.ContainingType.TypeKind == TypeKind.Module; " is 122.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,IsBrowsingProhibited,The length of the statement  "            return IsBrowsingProhibitedByEditorBrowsableAttribute(symbol' attributes' hideAdvancedMembers' compilation' editorBrowsableAttributeConstructor) " is 144.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,VerifyGetAwaiter,The length of the statement  "            if (!returnType.GetMembers().OfType<IPropertySymbol>().Any(p => p.Name == WellKnownMemberNames.IsCompleted && p.Type.SpecialType == SpecialType.System_Boolean && p.GetMethod != null)) " is 183.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,VerifyGetAwaiter,The length of the statement  "            if (!methods.Any(x => x.Name == WellKnownMemberNames.OnCompleted && x.ReturnsVoid && x.Parameters.Length == 1 && x.Parameters.First().Type.TypeKind == TypeKind.Delegate)) " is 170.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,InferAwaitableReturnType,The length of the statement  "            var potentialGetAwaiters = semanticModel.LookupSymbols(position' container: returnType' name: WellKnownMemberNames.GetAwaiter' includeReducedExtensionMethods: true); " is 165.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,InferAwaitableReturnType,The length of the statement  "            var getResults = getAwaiters.SelectMany(g => semanticModel.LookupSymbols(position' container: g.ReturnType' name: WellKnownMemberNames.GetResult)); " is 147.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,FilterToVisibleAndBrowsableSymbols,The length of the statement  "            var editorBrowsableAttributeConstructor = EditorBrowsableHelpers.GetSpecialEditorBrowsableAttributeConstructor(compilation); " is 124.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,IsSymbolAccessibleCore,The length of the statement  "                        return IsSymbolAccessibleCore(((IPointerTypeSymbol)symbol.ContainingSymbol).PointedAtType' within' null' out failedThroughTypeCheck); " is 133.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,IsSymbolAccessibleCore,The length of the statement  "                    return IsMemberAccessible(symbol.ContainingType' symbol.DeclaredAccessibility' within' throughTypeOpt' out failedThroughTypeCheck); " is 131.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,IsMemberAccessible,The length of the statement  "                    return IsProtectedSymbolAccessible(withinNamedType' withinAssembly' throughTypeOpt' originalContainingType' out failedThroughTypeCheck); " is 136.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,IsMemberAccessible,The length of the statement  "                    return IsProtectedSymbolAccessible(withinNamedType' withinAssembly' throughTypeOpt' originalContainingType' out failedThroughTypeCheck); " is 136.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,IsMemberAccessible,The length of the statement  "                    return IsProtectedSymbolAccessible(withinNamedType' withinAssembly' throughTypeOpt' originalContainingType' out failedThroughTypeCheck); " is 136.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,ITypeInferenceServiceExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeInferenceServiceExtensions.cs,InferDelegateType,The length of the statement  "            var type = typeInferenceService.InferType(semanticModel' expression' objectAsDefault: false' cancellationToken: cancellationToken); " is 131.
Long Statement,Microsoft.CodeAnalysis.Shared.Extensions,StringExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\StringExtensions.cs,AppendToAliasNameSet,The length of the statement  "            Contract.Requires(builder.KeyComparer == StringComparer.Ordinal || builder.KeyComparer == StringComparer.OrdinalIgnoreCase); " is 124.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,Reader,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\XmlFragmentParser.cs,Read,The length of the statement  "                _position += EncodeAndAdvance(_text' _position - s_rootStart.Length - s_currentStart.Length' buffer' ref index' ref count); " is 123.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,Reader,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\XmlFragmentParser.cs,Read,The length of the statement  "                _position += EncodeAndAdvance(s_currentEnd' _position - s_rootStart.Length - s_currentStart.Length - _text.Length' buffer' ref index' ref count); " is 145.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,AliasSymbolCache,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\AliasSymbolCache.cs,AddAliasSymbols,The length of the statement  "            // the compilation is alive. In the current design' a node can come and go even if compilation is alive through recoverable tree. " is 129.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,CommonFormattingHelpers,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\CommonFormattingHelpers.cs,ConvertToTokenPairs,The length of the statement  "                    previousOne = ValueTuple.Create(previousOne.Item1' previousOne.Item2.Span.End < currentOne.Item2.Span.End ? currentOne.Item2 : previousOne.Item2); " is 146.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,CommonFormattingHelpers,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\CommonFormattingHelpers.cs,GetText,The length of the statement  "            return (token1.RawKind == 0) ? text.ToString(TextSpan.FromBounds(0' token2.SpanStart)) : text.ToString(TextSpan.FromBounds(token1.Span.End' token2.SpanStart)); " is 159.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,CommonFormattingHelpers,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\CommonFormattingHelpers.cs,AppendTextBetween,The length of the statement  "            for (var token = token1.GetNextToken(includeZeroWidth: true); token.FullSpan.End <= token2.FullSpan.Start; token = token.GetNextToken(includeZeroWidth: true)) " is 158.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,CommonFormattingHelpers,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\CommonFormattingHelpers.cs,GetSpanIncludingTrailingAndLeadingTriviaOfAdjacentTokens,The length of the statement  "            // most of cases we can just ask previous and next token to create the span' but in some corner cases such as omitted token case' " is 129.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,CommonFormattingHelpers,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\CommonFormattingHelpers.cs,HasAnyWhitespaceElasticTrivia,The length of the statement  "            return previousToken.TrailingTrivia.HasAnyWhitespaceElasticTrivia() || currentToken.LeadingTrivia.HasAnyWhitespaceElasticTrivia(); " is 130.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,CommentBuilder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\DocumentationComment.cs,ParseInternal,The length of the statement  "                _comment.ParameterNames = _parameterNamesBuilder == null ? ImmutableArray<string>.Empty : _parameterNamesBuilder.ToImmutable(); " is 127.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,CommentBuilder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\DocumentationComment.cs,ParseInternal,The length of the statement  "                _comment.TypeParameterNames = _typeParameterNamesBuilder == null ? ImmutableArray<string>.Empty : _typeParameterNamesBuilder.ToImmutable(); " is 139.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,CommentBuilder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\DocumentationComment.cs,ParseInternal,The length of the statement  "                _comment.ExceptionTypes = _exceptionTypesBuilder == null ? ImmutableArray<string>.Empty : _exceptionTypesBuilder.ToImmutable(); " is 127.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,CommentBuilder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\DocumentationComment.cs,ParseCallback,The length of the statement  "                                (_exceptionTextBuilders ?? (_exceptionTextBuilders = new Dictionary<string' ImmutableArray<string>.Builder>())).Add(type' ImmutableArray.CreateBuilder<string>()); " is 162.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,FindTokenHelper,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\FindTokenHelper.cs,FindTokenOnRightOfPosition,The length of the statement  "                        : token.GetNextToken(includeZeroWidth: false' includeSkipped: includeSkipped' includeDirectives: includeDirectives' includeDocumentationComments: includeDocumentationComments); " is 176.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,FindTokenHelper,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\FindTokenHelper.cs,FindTokenOnLeftOfPosition,The length of the statement  "                        : token.GetPreviousToken(includeZeroWidth: false' includeSkipped: includeSkipped' includeDirectives: includeDirectives' includeDocumentationComments: includeDocumentationComments); " is 180.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,FindTokenHelper,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\FindTokenHelper.cs,GetInitialToken,The length of the statement  "                : root.GetLastToken(includeZeroWidth: true' includeSkipped: true' includeDirectives: true' includeDocumentationComments: true) " is 126.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,FindTokenHelper,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\FindTokenHelper.cs,GetInitialToken,The length of the statement  "                      .GetPreviousToken(includeZeroWidth: false' includeSkipped: includeSkipped' includeDirectives: includeDirectives' includeDocumentationComments: includeDocumentationComments); " is 173.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,FindTokenHelper,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\FindTokenHelper.cs,FindSkippedTokenBackward,The length of the statement  "            var skippedTokenContainingPosition = skippedTokenList.LastOrDefault(skipped => skipped.Span.Length > 0 && skipped.SpanStart <= position); " is 137.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,FindTokenHelper,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\FindTokenHelper.cs,FindSkippedTokenForward,The length of the statement  "            var skippedTokenContainingPosition = skippedTokenList.FirstOrDefault(skipped => skipped.Span.Length > 0 && position <= skipped.Span.End); " is 137.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,SignatureComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SignatureComparer.cs,HaveSameSignature,The length of the statement  "                if (!_symbolEquivalenceComparer.ParameterEquivalenceComparer.Equals(parameters1[i]' parameters2[i]' compareParameterName' isCaseSensitive)) " is 139.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,SymbolEquivalenceComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.cs,GetHashCode,The length of the statement  "            return GetGetHashCodeVisitor(compareMethodTypeParametersByIndex: false' objectAndDynamicCompareEqually: false).GetHashCode(x' currentHash: 0); " is 142.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,AreEquivalent,The length of the statement  "                           ((yKind == SymbolKind.DynamicType && xKind == SymbolKind.NamedType && ((ITypeSymbol)x).SpecialType == SpecialType.System_Object) || " is 131.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,AreEquivalent,The length of the statement  "                            (xKind == SymbolKind.DynamicType && yKind == SymbolKind.NamedType && ((ITypeSymbol)y).SpecialType == SpecialType.System_Object)); " is 129.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,AreEquivalentWorker,The length of the statement  "                        return TypeParametersAreEquivalent((ITypeParameterSymbol)x' (ITypeParameterSymbol)y' equivalentTypesWithDifferingAssemblies); " is 125.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,HandleNamedTypesWorker,The length of the statement  "                // If we are ignoring assemblies and containing assemblies are different' add {x' y} to equivalentTypesWithDifferingAssemblies map. " is 131.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,ParametersAreEquivalent,The length of the statement  "                    if (!_symbolEquivalenceComparer.ParameterEquivalenceComparer.Equals(xParameters[i]' yParameters[i]' equivalentTypesWithDifferingAssemblies' compareParameterName' isParameterNameCaseSensitive)) " is 192.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,ParameterSymbolEqualityComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.ParameterSymbolEqualityComparer.cs,Equals,The length of the statement  "                    _symbolEqualityComparer.SignatureTypeEquivalenceComparer.Equals(x.Type' y.Type' equivalentTypesWithDifferingAssemblies); " is 120.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,SignatureTypeSymbolEquivalenceComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.SignatureTypeSymbolEquivalenceComparer.cs,Equals,The length of the statement  "                return _symbolEquivalenceComparer.GetEquivalenceVisitor(compareMethodTypeParametersByIndex: true' objectAndDynamicCompareEqually: true).AreEquivalent(x' y' equivalentTypesWithDifferingAssemblies); " is 196.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,SignatureTypeSymbolEquivalenceComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.SignatureTypeSymbolEquivalenceComparer.cs,GetHashCode,The length of the statement  "                return _symbolEquivalenceComparer.GetGetHashCodeVisitor(compareMethodTypeParametersByIndex: true' objectAndDynamicCompareEqually: true).GetHashCode(x' currentHash: 0); " is 167.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,EnsureReplacedExpressionAndSemanticRoot,The length of the statement  "                _lazySemanticRootOfReplacedExpression = GetSemanticRootOfReplacedExpression(this.SemanticRootOfOriginalExpression' annotatedExpression); " is 136.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,EnsureReplacedExpressionAndSemanticRoot,The length of the statement  "                _lazyReplacedExpression = (TExpressionSyntax)_lazySemanticRootOfReplacedExpression.GetAnnotatedNodesAndTokens(annotation).Single().AsNode(); " is 140.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,EnsureSpeculativeSemanticModel,The length of the statement  "                _lazySpeculativeSemanticModel = CreateSpeculativeSemanticModel(this.SemanticRootOfOriginalExpression' nodeToSpeculate' _semanticModel); " is 135.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,ImplicitConversionsAreCompatible,The length of the statement  "            return ConversionsAreCompatible(this.OriginalSemanticModel' originalExpression' this.SpeculativeSemanticModel' newExpression); " is 126.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,SymbolInfosAreCompatible,The length of the statement  "                SymbolsAreCompatibleCore(originalSymbolInfo.Symbol' newSymbolInfo.Symbol' performEquivalenceCheck' requireNonNullSymbols); " is 122.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,SymbolInfosAreCompatible,The length of the statement  "            return SymbolInfosAreCompatible(originalSymbolInfo' newSymbolInfo' performEquivalenceCheck: !_isNewSemanticModelSpeculativeModel' requireNonNullSymbols: requireNonNullSymbols); " is 176.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,SymbolsAreCompatible,The length of the statement  "            return SymbolsAreCompatibleCore(symbol' newSymbol' performEquivalenceCheck: !_isNewSemanticModelSpeculativeModel' requireNonNullSymbols: requireNonNullSymbols); " is 160.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,SymbolsAreCompatibleCore,The length of the statement  "            // TODO: Lambda function comparison performs syntax equality' hence is non-trivial to compare lambda methods across different compilations. " is 139.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,ReplacementChangesSemanticsForNode,The length of the statement  "            else if (ReplacementChangesSemanticsForNodeLanguageSpecific(currentOriginalNode' currentReplacedNode' previousOriginalNode' previousReplacedNode)) " is 146.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,ReplacementBreaksForEachStatement,The length of the statement  "                !ForEachConversionsAreCompatible(this.OriginalSemanticModel' forEachStatement' this.SpeculativeSemanticModel' newForEachStatement) || " is 133.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,ReplacementBreaksForEachGetEnumerator,The length of the statement  "                    var expressionType = this.SpeculativeSemanticModel.GetTypeInfo(newForEachStatementExpression' _cancellationToken).ConvertedType; " is 128.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,ReplacementBreaksThrowStatement,The length of the statement  "            // C# language specification requires that type of the expression passed to ThrowStatement is or derives from System.Exception. " is 127.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,ReplacementBreaksTypeResolution,The length of the statement  "                var bindingOption = IsInNamespaceOrTypeContext(type) ? SpeculativeBindingOption.BindAsTypeOrNamespace : SpeculativeBindingOption.BindAsExpression; " is 146.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,ReplacementBreaksInvocableExpression,The length of the statement  "            if (_failOnOverloadResolutionFailuresInOriginalCode && originalSymbolInfo.CandidateReason == CandidateReason.OverloadResolutionFailure) " is 135.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,ReplacementBreaksInvocableExpression,The length of the statement  "                // However' if the symbols are interface members and if the receiver symbol for one of the expressions is a possible ValueType type parameter' " is 142.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,ReplacementBreaksInvocableExpression,The length of the statement  "                // and the other one is not' then there might be a boxing conversion at runtime which causes different runtime behavior. " is 120.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,ReplacementBreaksInvocableExpression,The length of the statement  "            // Allow speculated invocation expression to bind to a different method symbol if the method's containing type is a delegate type " is 129.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,IsCompatibleInterfaceMemberImplementation,The length of the statement  "            //     * The new member is on an effectively sealed class' i.e. at least one of the following is true for the containing type: " is 126.
Long Statement,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,IsEffectivelySealedClass,The length of the statement  "                    !namedType.ContainingType.GetTypeMembers().Any(nestedType => nestedType.TypeKind == TypeKind.Class && namedType != nestedType)) " is 127.
Long Statement,Microsoft.CodeAnalysis.Simplification,AbstractSimplificationService<TExpressionSyntax;TStatementSyntax;TCrefSyntax>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\AbstractSimplificationService.cs,ReduceAsync,The length of the statement  "                // Chaining of the Speculative SemanticModel (i.e. Generating a speculative SemanticModel from an existing Speculative SemanticModel) is not supported " is 150.
Long Statement,Microsoft.CodeAnalysis.Simplification,AbstractSimplificationService<TExpressionSyntax;TStatementSyntax;TCrefSyntax>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\AbstractSimplificationService.cs,ReduceAsync,The length of the statement  "                root = await this.ReduceAsync(document' root' semanticModel' spans' optionSet' reducers' cancellationToken).ConfigureAwait(false); " is 130.
Long Statement,Microsoft.CodeAnalysis.Simplification,AbstractSimplificationService<TExpressionSyntax;TStatementSyntax;TCrefSyntax>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\AbstractSimplificationService.cs,ReduceAsync,The length of the statement  "                        await document.VerifyNoErrorsAsync("Error introduced by Simplification Service"' cancellationToken).ConfigureAwait(false); " is 122.
Long Statement,Microsoft.CodeAnalysis.Simplification,AbstractSimplificationService<TExpressionSyntax;TStatementSyntax;TCrefSyntax>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\AbstractSimplificationService.cs,ReduceAsync,The length of the statement  "            ImmutableArray<NodeOrTokenToReduce> nodesAndTokensToReduce = this.GetNodesAndTokensToReduce(root' isNodeOrTokenOutsideSimplifySpans); " is 133.
Long Statement,Microsoft.CodeAnalysis.Simplification,AbstractSimplificationService<TExpressionSyntax;TStatementSyntax;TCrefSyntax>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\AbstractSimplificationService.cs,ReduceAsync,The length of the statement  "                await this.ReduceAsync(document' root' nodesAndTokensToReduce' reducers' optionSet' semanticModel' reducedNodesMap' reducedTokensMap' cancellationToken).ConfigureAwait(false); " is 175.
Long Statement,Microsoft.CodeAnalysis.Simplification,Simplifier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\Simplifier.cs,ExpandAsync,The length of the statement  "            return Expand(node' semanticModel' document.Project.Solution.Workspace' expandInsideNode' expandParameter' cancellationToken); " is 126.
Long Statement,Microsoft.CodeAnalysis.Simplification,Simplifier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\Simplifier.cs,Expand,The length of the statement  "                .Expand(node' semanticModel' annotationForReplacedAliasIdentifier: null' expandInsideNode: expandInsideNode' expandParameter: expandParameter' cancellationToken: cancellationToken); " is 181.
Long Statement,Microsoft.CodeAnalysis.Simplification,Simplifier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\Simplifier.cs,ReduceAsync,The length of the statement  "            return await ReduceAsync(document' root.GetAnnotatedNodesAndTokens(annotation).Select(t => t.FullSpan)' optionSet' cancellationToken).ConfigureAwait(false); " is 156.
Long Statement,Microsoft.CodeAnalysis.Simplification,Simplifier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\Simplifier.cs,ReduceAsync,The length of the statement  "            return document.Project.LanguageServices.GetService<ISimplificationService>().ReduceAsync(document' spans' optionSet' cancellationToken: cancellationToken); " is 156.
Long Statement,Microsoft.CodeAnalysis.Simplification,Simplifier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\Simplifier.cs,ReduceAsync,The length of the statement  "                .ReduceAsync(document' SpecializedCollections.SingletonEnumerable(root.FullSpan)' optionSet' reducers' cancellationToken).ConfigureAwait(false); " is 144.
Long Statement,Microsoft.CodeAnalysis.Versions,Extensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Versions\Extensions.cs,CanReusePersistedSemanticVersion,The length of the statement  "                project' projectVersion' semanticVersion' persistedVersion' (s' p' v) => s.GetInitialProjectVersionFromSemanticVersion(p' v)); " is 126.
Long Statement,Microsoft.CodeAnalysis.Versions,Extensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Versions\Extensions.cs,CanReusePersistedDependentSemanticVersion,The length of the statement  "                project' dependentProjectVersion' dependentSemanticVersion' persistedVersion' (s' p' v) => s.GetInitialDependentProjectVersionFromDependentSemanticVersion(p' v)); " is 162.
Long Statement,Microsoft.CodeAnalysis.Host,Service,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Host\Caching\ProjectCacheServiceFactory.cs,GetReference,The length of the statement  "                return MetadataReference.CreateFromFile(resolvedPath' properties' _documentationService.GetDocumentationProvider(resolvedPath)); " is 128.
Long Statement,Microsoft.CodeAnalysis.Host,RecoverableSyntaxRoot<TRoot>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Host\SyntaxTreeFactory\AbstractSyntaxTreeFactoryService.AbstractRecoverableSyntaxRoot.cs,SaveAsync,The length of the statement  "                    _storage = _service.LanguageServices.WorkspaceServices.GetService<ITemporaryStorageService>().CreateTemporaryStreamStorage(cancellationToken); " is 142.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractMemberScopedReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractMemberScopedReferenceFinder.cs,FindReferencesInDocumentAsync,The length of the statement  "                return await FindReferencesInTokensWithSymbolNameAsync(symbol' document' tokens' cancellationToken).ConfigureAwait(false); " is 122.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractMemberScopedReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractMemberScopedReferenceFinder.cs,FindReferencesInTokensWithSymbolNameAsync,The length of the statement  "            var symbolsMatch = GetStandardSymbolsMatchFunction(symbol' findParentNode' document.Project.Solution' cancellationToken); " is 121.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractMemberScopedReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractMemberScopedReferenceFinder.cs,FindReferencesInContainerAsync,The length of the statement  "            var symbolsMatch = GetStandardSymbolsMatchFunction(symbol' findParentNode' document.Project.Solution' cancellationToken); " is 121.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractMethodOrPropertyOrEventSymbolReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractMethodOrPropertyOrEventSymbolReferenceFinder.cs,DetermineCascadedSymbolsAsync,The length of the statement  "                    return await SymbolFinder.FindImplementationsAsync(symbol' solution' projects' cancellationToken).ConfigureAwait(false); " is 120.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractMethodOrPropertyOrEventSymbolReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractMethodOrPropertyOrEventSymbolReferenceFinder.cs,DetermineCascadedSymbolsAsync,The length of the statement  "                    var interfaceMembersImplemented = await SymbolFinder.FindImplementedInterfaceMembersAsync(symbol' solution' projects' cancellationToken).ConfigureAwait(false); " is 159.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractMethodOrPropertyOrEventSymbolReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractMethodOrPropertyOrEventSymbolReferenceFinder.cs,DetermineCascadedSymbolsAsync,The length of the statement  "                    var overrides = await SymbolFinder.FindOverridesAsync(symbol' solution' projects' cancellationToken).ConfigureAwait(false); " is 123.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindReferencesInDocumentUsingIdentifierAsync,The length of the statement  "            var symbolsMatch = GetStandardSymbolsMatchFunction(symbol' findParentNode' document.Project.Solution' cancellationToken); " is 121.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindReferencesInDocumentUsingIdentifierAsync,The length of the statement  "            var tokens = await document.GetIdentifierOrGlobalNamespaceTokensWithTextAsync(identifier' cancellationToken).ConfigureAwait(false); " is 131.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,GetStandardSymbolsNodeMatchFunction,The length of the statement  "                    if (OriginalSymbolsMatch(searchSymbol' symbolInfoToMatch.Symbol' solution' ref searchSymbolCompilation' symbolToMatchCompilation' cancellationToken)) " is 149.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,GetStandardSymbolsNodeMatchFunction,The length of the statement  "                    else if (symbolInfoToMatch.CandidateSymbols.Any(s => OriginalSymbolsMatch(searchSymbol' s' solution' ref searchSymbolCompilation' symbolToMatchCompilation' cancellationToken))) " is 176.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,OriginalSymbolsMatch,The length of the statement  "            if (OriginalSymbolsMatchCore(searchSymbol' symbolToMatch' solution' ref searchSymbolCompilation' symbolToMatchCompilation' cancellationToken)) " is 142.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,OriginalSymbolsMatch,The length of the statement  "                return OriginalSymbolsMatch(searchSymbol' symbolToMatch.ContainingType' solution' ref searchSymbolCompilation' symbolToMatchCompilation' cancellationToken); " is 156.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,OriginalSymbolsMatchCore,The length of the statement  "            //  1)  We compare the given symbols using the SymbolEquivalenceComparer.IgnoreAssembliesInstance' which ignores the containing assemblies for named types equivalence checks. " is 174.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,OriginalSymbolsMatchCore,The length of the statement  "            //  3)  Otherwise' if the symbols ARE equivalent ignoring assemblies' they may or may not be equivalent if containing assemblies are NOT ignored. " is 145.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,OriginalSymbolsMatchCore,The length of the statement  "            //      (a) If IgnoreAssembliesInstance.Equals equivalence visitor encountered any pair of non-nested named types which were equivalent in all aspects' " is 151.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,OriginalSymbolsMatchCore,The length of the statement  "            //          except that they resided in different assemblies' we need to ensure that all such pairs are indeed equivalent types. " is 128.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,OriginalSymbolsMatchCore,The length of the statement  "            //          Such a pair of named types is equivalent if and only if one of them is a type defined in either searchSymbolCompilation(C1) or symbolToMatchCompilation(C2)' " is 168.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,OriginalSymbolsMatchCore,The length of the statement  "            //          say defined in reference assembly A (version v1) in compilation C1' and the other type is a forwarded type' such that it is forwarded from " is 150.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,OriginalSymbolsMatchCore,The length of the statement  "            using (var equivalentTypesWithDifferingAssemblies = SharedPools.Default<Dictionary<INamedTypeSymbol' INamedTypeSymbol>>().GetPooledObject()) " is 140.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,OriginalSymbolsMatchCore,The length of the statement  "                if (!SymbolEquivalenceComparer.IgnoreAssembliesInstance.Equals(searchSymbol' symbolToMatch' equivalentTypesWithDifferingAssemblies.Object)) " is 139.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,OriginalSymbolsMatchCore,The length of the statement  "                // 3) If the symbols ARE equivalent ignoring assemblies' they may or may not be equivalent if containing assemblies are NOT ignored. " is 132.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,VerifyForwardedTypes,The length of the statement  "                verifiedCount = VerifyForwardedTypes(equivalentTypesWithDifferingAssemblies' searchSymbolCompilation' verifiedKeys' isSearchSymbolCompilation: true); " is 149.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,VerifyForwardedTypes,The length of the statement  "            verifiedCount += VerifyForwardedTypes(equivalentTypesWithDifferingAssemblies' symbolToMatchCompilation' verifiedKeys' isSearchSymbolCompilation: false); " is 152.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,VerifyForwardedTypes,The length of the statement  "            Contract.ThrowIfFalse(equivalentTypesWithDifferingAssemblies.All(kvp => !SymbolEquivalenceComparer.Instance.Equals(kvp.Key.ContainingAssembly' kvp.Value.ContainingAssembly))); " is 175.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,VerifyForwardedTypes,The length of the statement  "                            fullyQualifiedTypeName = originalType.ContainingNamespace.ToDisplayString(SymbolDisplayFormats.SignatureFormat) + "." + fullyQualifiedTypeName; " is 143.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindReferencesInTokensAsync,The length of the statement  "            var symbolsMatch = GetStandardSymbolsMatchFunction(symbol' findParentNode' document.Project.Solution' cancellationToken); " is 121.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindReferencesInDocumentAsync,The length of the statement  "            var symbolsMatch = GetStandardSymbolsMatchFunction(symbol' findParentNode' document.Project.Solution' cancellationToken); " is 121.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindReferencesInDocumentAsync,The length of the statement  "            // Now that we have Doc Comments in place' We are searching for References in the Trivia as well by setting descendIntoTrivia: true " is 131.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindReferencesInDocumentAsync,The length of the statement  "            return await FindReferencesInTokensAsync(document' tokens' tokensMatch' symbolsMatch' cancellationToken).ConfigureAwait(false); " is 127.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindAliasReferencesAsync,The length of the statement  "            var aliasSymbols = await GetAliasSymbolsAsync(document' nonAliasReferences.ToList()' cancellationToken).ConfigureAwait(false); " is 126.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindAliasReferencesAsync,The length of the statement  "            return await FindReferencesThroughAliasSymbolsAsync(symbol' document' aliasSymbols' findParentNode' cancellationToken).ConfigureAwait(false); " is 141.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindAliasReferencesAsync,The length of the statement  "            return await FindReferencesThroughAliasSymbolsAsync(symbol' document' aliasSymbols' symbolsMatch' cancellationToken).ConfigureAwait(false); " is 139.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindReferencesThroughAliasSymbolsAsync,The length of the statement  "                var aliasReferences = await FindReferencesInDocumentUsingIdentifierAsync(symbol' aliasSymbol.Name' document' cancellationToken' findParentNode).ConfigureAwait(false); " is 166.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindReferencesThroughAliasSymbolsAsync,The length of the statement  "                // the alias may reference an attribute and the alias name may end with an "Attribute" suffix. In this case search for the " is 122.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindReferencesThroughAliasSymbolsAsync,The length of the statement  "                    aliasReferences = await FindReferencesInDocumentUsingIdentifierAsync(symbol' simpleName' document' cancellationToken).ConfigureAwait(false); " is 140.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindReferencesThroughAliasSymbolsAsync,The length of the statement  "                var aliasReferences = await FindReferencesInDocumentUsingIdentifierAsync(aliasSymbol.Name' document' symbolsMatch' cancellationToken).ConfigureAwait(false); " is 156.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindReferencesThroughAliasSymbolsAsync,The length of the statement  "                // the alias may reference an attribute and the alias name may end with an "Attribute" suffix. In this case search for the " is 122.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindReferencesThroughAliasSymbolsAsync,The length of the statement  "                    aliasReferences = await FindReferencesInDocumentUsingIdentifierAsync(simpleName' document' symbolsMatch' cancellationToken).ConfigureAwait(false); " is 146.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,ConstructorInitializerSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\ConstructorInitializerSymbolReferenceFinder.cs,FindReferencesInDocumentAsync,The length of the statement  "                tokens = tokens.Concat(await document.GetIdentifierOrGlobalNamespaceTokensWithTextAsync("New"' cancellationToken).ConfigureAwait(false)).Distinct(); " is 148.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,ConstructorSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\ConstructorSymbolReferenceFinder.cs,DetermineDocumentsToSearchAsync,The length of the statement  "            var documentsWithName = await FindDocumentsAsync(project' documents' cancellationToken' typeName).ConfigureAwait(false); " is 120.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,ConstructorSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\ConstructorSymbolReferenceFinder.cs,DetermineDocumentsToSearchAsync,The length of the statement  "            var documentsWithType = await FindDocumentsAsync(project' documents' symbol.ContainingType.SpecialType.ToPredefinedType()' cancellationToken).ConfigureAwait(false); " is 164.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,ConstructorSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\ConstructorSymbolReferenceFinder.cs,DetermineDocumentsToSearchAsync,The length of the statement  "            var documentsWithAttribute = TryGetNameWithoutAttributeSuffix(typeName' project.LanguageServices.GetService<ISyntaxFactsService>()' out simpleName) " is 147.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,ConstructorSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\ConstructorSymbolReferenceFinder.cs,FindReferencesInDocumentAsync,The length of the statement  "            var normalReferences = await FindReferencesInDocumentWorkerAsync(methodSymbol' document' findParentNode' cancellationToken).ConfigureAwait(false); " is 146.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,ConstructorSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\ConstructorSymbolReferenceFinder.cs,FindReferencesInDocumentAsync,The length of the statement  "            var nonAliasTypeReferences = await NamedTypeSymbolReferenceFinder.FindNonAliasReferencesAsync(methodSymbol.ContainingType' document' cancellationToken).ConfigureAwait(false); " is 174.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,ConstructorSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\ConstructorSymbolReferenceFinder.cs,FindReferencesInDocumentAsync,The length of the statement  "            var aliasReferences = await FindAliasReferencesAsync(nonAliasTypeReferences' methodSymbol' document' cancellationToken' findParentNode).ConfigureAwait(false); " is 158.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,ConstructorSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\ConstructorSymbolReferenceFinder.cs,FindReferencesInDocumentWorkerAsync,The length of the statement  "            var ordinaryRefs = await FindOrdinaryReferencesAsync(symbol' document' findParentNode' cancellationToken).ConfigureAwait(false); " is 128.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,ConstructorSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\ConstructorSymbolReferenceFinder.cs,FindReferencesInDocumentWorkerAsync,The length of the statement  "            var predefinedTypeRefs = await FindPredefinedTypeReferencesAsync(symbol' document' cancellationToken).ConfigureAwait(false); " is 124.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,EventSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\EventSymbolReferenceFinder.cs,DetermineCascadedSymbolsAsync,The length of the statement  "            var baseSymbols = await base.DetermineCascadedSymbolsAsync(symbol' solution' projects' cancellationToken).ConfigureAwait(false); " is 128.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,EventSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\EventSymbolReferenceFinder.cs,DetermineCascadedSymbolsAsync,The length of the statement  "            var backingField = symbol.ContainingType.GetMembers().OfType<IFieldSymbol>().Where(f => symbol.Equals(f.AssociatedSymbol)); " is 123.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,MethodTypeParameterSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\MethodTypeParameterSymbolReferenceFinder.cs,DetermineCascadedSymbolsAsync,The length of the statement  "                    return Task.FromResult(SpecializedCollections.SingletonEnumerable((ISymbol)method.PartialDefinitionPart.TypeParameters[ordinal])); " is 130.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,MethodTypeParameterSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\MethodTypeParameterSymbolReferenceFinder.cs,DetermineCascadedSymbolsAsync,The length of the statement  "                    return Task.FromResult(SpecializedCollections.SingletonEnumerable((ISymbol)method.PartialImplementationPart.TypeParameters[ordinal])); " is 134.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,NamedTypeSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\NamedTypeSymbolReferenceFinder.cs,DetermineDocumentsToSearchAsync,The length of the statement  "            var documentsWithName = await FindDocumentsAsync(project' documents' cancellationToken' symbol.Name).ConfigureAwait(false); " is 123.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,NamedTypeSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\NamedTypeSymbolReferenceFinder.cs,DetermineDocumentsToSearchAsync,The length of the statement  "            var documentsWithType = await FindDocumentsAsync(project' documents' symbol.SpecialType.ToPredefinedType()' cancellationToken).ConfigureAwait(false); " is 149.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,NamedTypeSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\NamedTypeSymbolReferenceFinder.cs,DetermineDocumentsToSearchAsync,The length of the statement  "            var documentsWithAttribute = TryGetNameWithoutAttributeSuffix(symbol.Name' project.LanguageServices.GetService<ISyntaxFactsService>()' out simpleName) " is 150.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,NamedTypeSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\NamedTypeSymbolReferenceFinder.cs,FindReferencesInDocumentAsync,The length of the statement  "            var nonAliasReferences = await FindNonAliasReferencesAsync(namedType' document' cancellationToken).ConfigureAwait(false); " is 121.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,NamedTypeSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\NamedTypeSymbolReferenceFinder.cs,FindReferencesInDocumentAsync,The length of the statement  "            var aliasReferences = await FindAliasReferencesAsync(nonAliasReferences' namedType' document' symbolsMatch' cancellationToken).ConfigureAwait(false); " is 149.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,NamedTypeSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\NamedTypeSymbolReferenceFinder.cs,FindNonAliasReferencesAsync,The length of the statement  "            var predefinedTypeRefs = await FindPredefinedTypeReferencesAsync(symbol' document' cancellationToken).ConfigureAwait(false); " is 124.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,NamespaceSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\NamespaceSymbolReferenceFinder.cs,FindReferencesInDocumentAsync,The length of the statement  "                await document.GetIdentifierOrGlobalNamespaceTokensWithTextAsync(identifierName' cancellationToken).ConfigureAwait(false)' " is 122.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,NamespaceSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\NamespaceSymbolReferenceFinder.cs,FindReferencesInDocumentAsync,The length of the statement  "            var aliasReferences = await FindAliasReferencesAsync(nonAliasReferences' symbol' document' cancellationToken).ConfigureAwait(false); " is 132.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,OrdinaryMethodReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\OrdinaryMethodReferenceFinder.cs,DetermineCascadedSymbolsAsync,The length of the statement  "                var baseCascadedSymbols = await base.DetermineCascadedSymbolsAsync(symbol' solution' projects' cancellationToken).ConfigureAwait(false); " is 136.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,OrdinaryMethodReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\OrdinaryMethodReferenceFinder.cs,DetermineDocumentsToSearchAsync,The length of the statement  "            var ordinaryDocuments = await FindDocumentsAsync(project' documents' cancellationToken' methodSymbol.Name).ConfigureAwait(false); " is 129.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,ParameterSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\ParameterSymbolReferenceFinder.cs,DetermineCascadedSymbolsAsync,The length of the statement  "            var anonymousFunctionParameterCascades = await CascadeBetweenAnonymousFunctionParametersAsync(solution' parameter' cancellationToken).ConfigureAwait(false); " is 156.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,ParameterSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\ParameterSymbolReferenceFinder.cs,DetermineCascadedSymbolsAsync,The length of the statement  "            var propertyOrEventOrAccessorParameterCascades = await CascadeBetweenPropertyOrEventAndAccessorParameterAsync(solution' parameter' cancellationToken).ConfigureAwait(false); " is 172.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,ParameterSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\ParameterSymbolReferenceFinder.cs,CascadeBetweenAnonymousFunctionParametersAsync,The length of the statement  "                            var lambdaNode = parameter.ContainingSymbol.DeclaringSyntaxReferences.Select(r => r.GetSyntax(cancellationToken)).FirstOrDefault(); " is 131.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,ParameterSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\ParameterSymbolReferenceFinder.cs,CascadeBetweenAnonymousFunctionParameters,The length of the statement  "                        SignatureComparer.Instance.HaveSameSignatureAndConstraintsAndReturnTypeAndAccessors(parameter.ContainingSymbol' symbol.ContainingSymbol' syntaxFacts.IsCaseSensitive) && " is 168.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,ParameterSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\ParameterSymbolReferenceFinder.cs,CascadeBetweenAnonymousFunctionParameters,The length of the statement  "                        var lambdaNode = symbol.ContainingSymbol.DeclaringSyntaxReferences.Select(r => r.GetSyntax(cancellationToken)).FirstOrDefault(); " is 128.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,ParameterSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\ParameterSymbolReferenceFinder.cs,CascadeBetweenPropertyOrEventAndAccessorParameterAsync,The length of the statement  "                        var eventNode = namedType.AssociatedSymbol.DeclaringSyntaxReferences.Select(r => r.GetSyntax(cancellationToken)).FirstOrDefault(); " is 130.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,PropertyAccessorSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\PropertyAccessorSymbolReferenceFinder.cs,DetermineCascadedSymbolsAsync,The length of the statement  "            var result = await base.DetermineCascadedSymbolsAsync(symbol' solution' projects' cancellationToken).ConfigureAwait(false); " is 123.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,PropertySymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\PropertySymbolReferenceFinder.cs,DetermineCascadedSymbolsAsync,The length of the statement  "            var baseSymbols = await base.DetermineCascadedSymbolsAsync(symbol' solution' projects' cancellationToken).ConfigureAwait(false); " is 128.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,PropertySymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\PropertySymbolReferenceFinder.cs,DetermineCascadedSymbolsAsync,The length of the statement  "            var backingField = symbol.ContainingType.GetMembers().OfType<IFieldSymbol>().Where(f => symbol.Equals(f.AssociatedSymbol)); " is 123.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,PropertySymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\PropertySymbolReferenceFinder.cs,DetermineDocumentsToSearchAsync,The length of the statement  "            var ordinaryDocuments = await FindDocumentsAsync(project' documents' cancellationToken' symbol.Name).ConfigureAwait(false); " is 123.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,PropertySymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\PropertySymbolReferenceFinder.cs,FindReferencesInDocumentAsync,The length of the statement  "            var nameReferences = await FindReferencesInDocumentUsingSymbolNameAsync(symbol' document' cancellationToken).ConfigureAwait(false); " is 131.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,PropertySymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\PropertySymbolReferenceFinder.cs,FindReferencesInDocumentAsync,The length of the statement  "                ? await FindElementAccessReferencesAndIndexerMemberCrefReferencesAsync(symbol' document' cancellationToken).ConfigureAwait(false) " is 129.
Long Statement,Microsoft.CodeAnalysis.FindSymbols.Finders,PropertySymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\PropertySymbolReferenceFinder.cs,FindElementAccessReferencesAndIndexerMemberCrefReferencesAsync,The length of the statement  "            // Now that we have Doc Comments in place' We are searching for References in the Trivia as well by setting descendIntoTrivia: true " is 131.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractSyntaxFormattingService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\AbstractSyntaxFormattingService.cs,FormatMergedSpan,The length of the statement  "            return CreateAggregatedFormattingResult(node' new List<AbstractFormattingResult>(1) { result }' SimpleIntervalTree.Create(TextSpanIntervalIntrospector.Instance' spanToFormat)); " is 176.
Long Statement,Microsoft.CodeAnalysis.Formatting,BottomUpBaseIndentationFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\BottomUpBaseIndentationFinder.cs,GetIndentationOfCurrentPosition,The length of the statement  "            return GetIndentationOfCurrentPosition(root' token' list' token.SpanStart' /* extracSpaces */ 0' tokenColumnGetter' cancellationToken); " is 135.
Long Statement,Microsoft.CodeAnalysis.Formatting,BottomUpBaseIndentationFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\BottomUpBaseIndentationFinder.cs,GetIndentationOfCurrentPosition,The length of the statement  "                // If the SmartIndenter created this IndentationFinder then tokenStream will be a null hence we should do a null check on the tokenStream " is 137.
Long Statement,Microsoft.CodeAnalysis.Formatting,FormattingContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Context\FormattingContext.AnchorData.cs,AddIndentBlockOperations,The length of the statement  "            // merge indentation operations from two places (initial operations for current selection' and nodes inside of selections) " is 122.
Long Statement,Microsoft.CodeAnalysis.Formatting,FormattingContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Context\FormattingContext.AnchorData.cs,AddIndentBlockOperation,The length of the statement  "                var inseparableRegionStartingPosition = operation.Option.IsOn(IndentBlockOption.RelativeToFirstTokenOnBaseTokenLine) ? 0 : operation.BaseToken.FullSpan.Start; " is 158.
Long Statement,Microsoft.CodeAnalysis.Formatting,FormattingContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Context\FormattingContext.AnchorData.cs,AddIndentBlockOperation,The length of the statement  "                    var indentationDelta = operation.IndentationDeltaOrPosition * this.OptionSet.GetOption(FormattingOptions.IndentationSize' _language); " is 133.
Long Statement,Microsoft.CodeAnalysis.Formatting,FormattingContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Context\FormattingContext.AnchorData.cs,AddIndentBlockOperation,The length of the statement  "                    var baseIndentation = _tokenStream.GetCurrentColumn(operation.Option.IsOn(IndentBlockOption.RelativeToFirstTokenOnBaseTokenLine) ? " is 130.
Long Statement,Microsoft.CodeAnalysis.Formatting,FormattingContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Context\FormattingContext.AnchorData.cs,AddIndentBlockOperation,The length of the statement  "                var relativeIndentationData = new RelativeIndentationData(inseparableRegionStartingPosition' intervalTreeSpan' operation' relativeIndentationGetter); " is 149.
Long Statement,Microsoft.CodeAnalysis.Formatting,FormattingContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Context\FormattingContext.AnchorData.cs,AddIndentBlockOperation,The length of the statement  "                var indentation = operation.IndentationDeltaOrPosition * this.OptionSet.GetOption(FormattingOptions.IndentationSize' _language); " is 128.
Long Statement,Microsoft.CodeAnalysis.Formatting,FormattingContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Context\FormattingContext.AnchorData.cs,AddIndentBlockOperation,The length of the statement  "                var indentationDelta = operation.IndentationDeltaOrPosition * this.OptionSet.GetOption(FormattingOptions.IndentationSize' _language); " is 133.
Long Statement,Microsoft.CodeAnalysis.Formatting,FormattingContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Context\FormattingContext.AnchorData.cs,GetAllRelativeIndentBlockOperations,The length of the statement  "            return _relativeIndentationTree.GetIntersectingInOrderIntervals(this.TreeData.StartPosition' this.TreeData.EndPosition' this).Select(i => i.Operation); " is 151.
Long Statement,Microsoft.CodeAnalysis.Formatting,ContextIntervalTree<T>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\ContextIntervalTree.cs,GetSmallestContainingIntervalWorker,The length of the statement  "            // 1. find a sub tree that has biggest "start" position that is smaller than given "start" by going down right side of a tree " is 125.
Long Statement,Microsoft.CodeAnalysis.Formatting,ContextIntervalTree<T>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\ContextIntervalTree.cs,GetSmallestContainingIntervalWorker,The length of the statement  "            // 2. once it encounters a right sub tree that it can't go down anymore' move down to left sub tree once and try #1 again " is 121.
Long Statement,Microsoft.CodeAnalysis.Formatting,ContextIntervalTree<T>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\ContextIntervalTree.cs,GetSmallestContainingIntervalWorker,The length of the statement  "            // 4. move up the spin until it finds one that contains the "span" which should be smallest span that contains the given "span" " is 127.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractAggregatedFormattingResult,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractAggregatedFormattingResult.cs,GetFormattingSpans,The length of the statement  "            return _formattingSpans ?? SimpleIntervalTree.Create(TextSpanIntervalIntrospector.Instance' _formattingResults.Select(r => r.FormattedSpan)); " is 141.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractAggregatedFormattingResult,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractAggregatedFormattingResult.cs,CreateFormattedRoot,The length of the statement  "                _formattingResults.Do(result => result.GetChanges(cancellationToken).Do(change => map.Add(change.Item1' change.Item2))); " is 120.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,Format,The length of the statement  "                ApplyTokenOperations(context' tokenStream' anchorContextTask' nodeOperations' tokenOperationTask.WaitAndGetResult(cancellationToken)' cancellationToken); " is 153.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,CreateNodeOperationTasks,The length of the statement  "                    return AddOperations<IndentBlockOperation>(task.Result' (l' n) => _formattingRules.AddIndentBlockOperations(l' n)' cancellationToken); " is 134.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,CreateNodeOperationTasks,The length of the statement  "                    return AddOperations<SuppressOperation>(task.Result' (l' n) => _formattingRules.AddSuppressOperations(l' n)' cancellationToken); " is 128.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,CreateNodeOperationTasks,The length of the statement  "                    var operations = AddOperations<AlignTokensOperation>(task.Result' (l' n) => _formattingRules.AddAlignTokensOperations(l' n)' cancellationToken); " is 144.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,CreateNodeOperationTasks,The length of the statement  "                    return AddOperations<AnchorIndentationOperation>(task.Result' (l' n) => _formattingRules.AddAnchorIndentationOperations(l' n)' cancellationToken); " is 146.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,CreateNodeOperationTasks,The length of the statement  "            return new NodeOperations(indentBlockOperationTask' suppressOperationTask' anchorIndentationOperationsTask' alignmentOperationTask); " is 132.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,ApplyBeginningOfTreeTriviaOperation,The length of the statement  "            var triviaInfo = tokenStream.GetTriviaDataAtBeginningOfTree().WithIndentation(0' context' _formattingRules' cancellationToken); " is 127.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,ApplyEndOfTreeTriviaOperation,The length of the statement  "            var triviaInfo = tokenStream.GetTriviaDataAtEndOfTree().WithIndentation(0' context' _formattingRules' cancellationToken); " is 121.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,ApplySpecialOperations,The length of the statement  "                    applier.ApplyBaseTokenIndentationChangesFromTo(FindCorrectBaseTokenOfRelativeIndentBlockOperation(o' tokenStream)' o.StartToken' o.EndToken' previousChangesMap' cancellationToken); " is 180.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,ApplyAnchorOperations,The length of the statement  "                    applier.ApplyBaseTokenIndentationChangesFromTo(FindCorrectBaseTokenOfRelativeIndentBlockOperation(o' tokenStream)' o.StartToken' o.EndToken' previousChangesMap' cancellationToken); " is 180.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,ApplySpaceAndWrappingOperations,The length of the statement  "                var partitions = partitioner.GetPartitions(this.TaskExecutor == TaskExecutor.Synchronous ? 1 : Environment.ProcessorCount + 1); " is 127.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,ApplySpaceAndWrappingOperations,The length of the statement  "                    partition.Do(operationPair => ApplySpaceAndWrappingOperationsBody(context' tokenStream' operationPair' applier' cancellationToken)); " is 132.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,BuildContext,The length of the statement  "                var indentationScopeTask = this.TaskExecutor.ContinueWith(nodeOperations.IndentBlockOperationTask' task => context.AddIndentBlockOperations(task.Result' cancellationToken)' cancellationToken); " is 192.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,BuildContext,The length of the statement  "                var suppressWrappingScopeTask = this.TaskExecutor.ContinueWith(nodeOperations.SuppressOperationTask' task => context.AddSuppressOperations(task.Result' cancellationToken)' cancellationToken); " is 191.
Long Statement,Microsoft.CodeAnalysis.Formatting,OperationApplier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.OperationApplier.cs,ApplyDynamicSpacesOperation,The length of the statement  "                var endColumnOfPreviousToken = multipleLines ? tokenLength : _tokenStream.GetCurrentColumn(previousToken) + tokenLength; " is 120.
Long Statement,Microsoft.CodeAnalysis.Formatting,OperationApplier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.OperationApplier.cs,ApplyDynamicSpacesOperation,The length of the statement  "                    _tokenStream.ApplyChange(pairIndex' triviaInfo.WithSpace(indentation - endColumnOfPreviousToken' _context' _formattingRules)); " is 126.
Long Statement,Microsoft.CodeAnalysis.Formatting,OperationApplier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.OperationApplier.cs,ApplyForceLinesOperation,The length of the statement  "                _tokenStream.ApplyChange(pairIndex' triviaInfo.WithLine(operation.Line' indentation' _context' _formattingRules' cancellationToken)); " is 133.
Long Statement,Microsoft.CodeAnalysis.Formatting,OperationApplier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.OperationApplier.cs,ApplyPreserveLinesOperation,The length of the statement  "                    _tokenStream.ApplyChange(pairIndex' triviaInfo.WithLine(operation.Line' indentation' _context' _formattingRules' cancellationToken)); " is 133.
Long Statement,Microsoft.CodeAnalysis.Formatting,OperationApplier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.OperationApplier.cs,ApplyPreserveLinesOperation,The length of the statement  "                    _tokenStream.ApplyChange(pairIndex' triviaInfo.WithIndentation(indentation' _context' _formattingRules' cancellationToken)); " is 124.
Long Statement,Microsoft.CodeAnalysis.Formatting,OperationApplier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.OperationApplier.cs,ApplyIndentationDeltaFromTo,The length of the statement  "                    this.ApplyIndentationDelta(pairIndex' currentToken' indentationDelta' triviaInfo' previousChangesMap' cancellationToken); " is 121.
Long Statement,Microsoft.CodeAnalysis.Formatting,OperationApplier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.OperationApplier.cs,ApplyIndentationDelta,The length of the statement  "                _tokenStream.ApplyChange(pairIndex' triviaInfo.WithIndentation(indentation' _context' _formattingRules' cancellationToken)); " is 124.
Long Statement,Microsoft.CodeAnalysis.Formatting,OperationApplier,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.OperationApplier.cs,ApplyAnchorIndentation,The length of the statement  "                    _tokenStream.ApplyChange(pairIndex' triviaInfo.WithIndentation(indentation' _context' _formattingRules' cancellationToken)); " is 124.
Long Statement,Microsoft.CodeAnalysis.Formatting,Partitioner,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.Partitioner.cs,GetPartitions,The length of the statement  "                    var nextToken = _context.GetEndTokenForRelativeIndentationSpan(_operationPairs[nextPartitionStartOperationIndex].Token1); " is 121.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractFormattingResult,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormattingResult.cs,CreateTextChange,The length of the statement  "            var span = TextSpan.FromBounds(token1.RawKind == 0 ? this.TreeInfo.StartPosition : token1.Span.End' token2.RawKind == 0 ? this.TreeInfo.EndPosition : token2.SpanStart); " is 168.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractFormattingResult,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormattingResult.cs,CreateTextChange,The length of the statement  "                var oldText = (change.Span == span) ? originalString : originalString.Substring(change.Span.Start - span.Start' change.Span.Length); " is 132.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractFormattingResult,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormattingResult.cs,CreateFormattedRoot,The length of the statement  "                using (var pooledObject = SharedPools.Default<Dictionary<ValueTuple<SyntaxToken' SyntaxToken>' TriviaData>>().GetPooledObject()) " is 128.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractFormattingResult,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormattingResult.cs,GetChanges,The length of the statement  "            return this.TaskExecutor.Filter(this.TokenStream.GetTriviaDataWithTokenPair(cancellationToken)' d => d.Item2.ContainsChanges' d => d' cancellationToken); " is 153.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractTriviaDataFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractTriviaDataFactory.AbstractComplexTrivia.cs,GetWhitespaceTriviaData,The length of the statement  "            //  #2. analysis (Item1) didn't find anything preventing us from using cache such as trailing whitespace before new line " is 120.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractTriviaDataFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractTriviaDataFactory.AbstractComplexTrivia.cs,GetWhitespaceTriviaData,The length of the statement  "                int indentationLevel = indentation / this.OptionSet.GetOption(FormattingOptions.IndentationSize' this.TreeInfo.Root.Language); " is 126.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractTriviaDataFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractTriviaDataFactory.AbstractComplexTrivia.cs,EnsureWhitespaceTriviaInfo,The length of the statement  "                var indentation = indentationLevel * this.OptionSet.GetOption(FormattingOptions.IndentationSize' this.TreeInfo.Root.Language); " is 126.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractTriviaDataFactory,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractTriviaDataFactory.AbstractComplexTrivia.cs,EnsureWhitespaceTriviaInfo,The length of the statement  "                var triviaInfo = new Whitespace(this.OptionSet' lineBreaks: lineIndex + 1' indentation: indentation' elastic: false' language: this.TreeInfo.Root.Language); " is 156.
Long Statement,Microsoft.CodeAnalysis.Formatting,FormattedWhitespace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractTriviaDataFactory.FormattedWhitespace.cs,CreateString,The length of the statement  "                    builder.Append(this.Spaces.CreateIndentationString(this.OptionSet.GetOption(FormattingOptions.UseTabs' this.Language)' this.OptionSet.GetOption(FormattingOptions.TabSize' this.Language))); " is 188.
Long Statement,Microsoft.CodeAnalysis.Formatting,ModifiedWhitespace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractTriviaDataFactory.ModifiedWhitespace.cs,Format,The length of the statement  "                formattingResultApplier(tokenPairIndex' new FormattedWhitespace(this.OptionSet' this.LineBreaks' this.Spaces' this.Language)); " is 126.
Long Statement,Microsoft.CodeAnalysis.Formatting,Whitespace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractTriviaDataFactory.Whitespace.cs,WithIndentation,The length of the statement  "                return new ModifiedWhitespace(this.OptionSet' this' this.LineBreaks' indentation' elastic: false' language: this.Language); " is 123.
Long Statement,Microsoft.CodeAnalysis.Formatting,TokenStream,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\TokenStream.Changes.cs,TwoTokensOnSameLineWorker,The length of the statement  "            // this has potential to be very expansive if everything is on same line in a big file. but chances to that happen are very low " is 127.
Long Statement,Microsoft.CodeAnalysis.Formatting,TokenStream,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\TokenStream.Changes.cs,GetTokenLength,The length of the statement  "                length = text.GetTextColumn(_optionSet.GetOption(FormattingOptions.TabSize' _treeData.Root.Language)' initialColumn: 0); " is 120.
Long Statement,Microsoft.CodeAnalysis.Formatting,TokenStream,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\TokenStream.Changes.cs,GetTokenLength,The length of the statement  "                var initialColumn = _treeData.GetOriginalColumn(_optionSet.GetOption(FormattingOptions.TabSize' _treeData.Root.Language)' token); " is 129.
Long Statement,Microsoft.CodeAnalysis.Formatting,TokenStream,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\TokenStream.Changes.cs,GetTokenLength,The length of the statement  "                length = text.ConvertTabToSpace(_optionSet.GetOption(FormattingOptions.TabSize' _treeData.Root.Language)' initialColumn' text.Length); " is 134.
Long Statement,Microsoft.CodeAnalysis.Formatting,TokenStream,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\TokenStream.Changes.cs,GetTriviaData,The length of the statement  "            Contract.Requires(token1.IndexInStream < 0 || token2.IndexInStream < 0 || (token1.IndexInStream + 1 == token2.IndexInStream)); " is 126.
Long Statement,Microsoft.CodeAnalysis.Formatting,TokenStream,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\TokenStream.Changes.cs,GetTriviaData,The length of the statement  "            Contract.Requires((token1.IndexInStream >= 0 && token2.IndexInStream >= 0) || token1.Token.Equals(token2.Token.GetPreviousToken(includeZeroWidth: true)) || token2.Token.LeadingTrivia.Span.Contains(token1.Token.Span)); " is 217.
Long Statement,Microsoft.CodeAnalysis.Formatting,TokenStream,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\TokenStream.Changes.cs,GetOriginalTriviaData,The length of the statement  "            Contract.Requires(token1.IndexInStream < 0 || token2.IndexInStream < 0 || (token1.IndexInStream + 1 == token2.IndexInStream)); " is 126.
Long Statement,Microsoft.CodeAnalysis.Formatting,TokenStream,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\TokenStream.Changes.cs,GetOriginalTriviaData,The length of the statement  "            Contract.Requires((token1.IndexInStream >= 0 && token2.IndexInStream >= 0) || token1.Token.Equals(token2.Token.GetPreviousToken(includeZeroWidth: true)) || token2.Token.LeadingTrivia.Span.Contains(token1.Token.Span)); " is 217.
Long Statement,Microsoft.CodeAnalysis.Formatting,Formatter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Formatter.cs,FormatAsync,The length of the statement  "            return document.WithSyntaxRoot(Format(root' spans' document.Project.Solution.Workspace' options' rules' cancellationToken)); " is 124.
Long Statement,Microsoft.CodeAnalysis.Formatting,Formatter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Formatter.cs,FormatAsync,The length of the statement  "            return document.WithSyntaxRoot(Format(root' annotation' document.Project.Solution.Workspace' options' rules' cancellationToken)); " is 129.
Long Statement,Microsoft.CodeAnalysis.Formatting,Formatter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Formatter.cs,GetAnnotatedSpans,The length of the statement  "                var firstToken = nodeOrToken.IsNode ? nodeOrToken.AsNode().GetFirstToken(includeZeroWidth: true) : nodeOrToken.AsToken(); " is 121.
Long Statement,Microsoft.CodeAnalysis.Formatting,FormattingExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\FormattingExtensions.cs,ContainsElasticTrivia,The length of the statement  "            return tokenStream.GetTriviaData(startToken' nextToken).TreatAsElastic || tokenStream.GetTriviaData(previousToken' endToken).TreatAsElastic; " is 140.
Long Statement,Microsoft.CodeAnalysis.Formatting,FormattingExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\FormattingExtensions.cs,ProcessTextBetweenTokens,The length of the statement  "            var initialColumn = baseToken.RawKind == 0 ? 0 /* the very begining of the file */ : treeInfo.GetOriginalColumn(tabSize' baseToken); " is 132.
Long Statement,Microsoft.CodeAnalysis.Formatting,FormattingExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\FormattingExtensions.cs,ProcessTextBetweenTokens,The length of the statement  "            spaceOrIndentation = text.ConvertTabToSpace(tabSize' baseToken.ToString().GetTextColumn(tabSize' initialColumn)' text.Length); " is 126.
Long Statement,Microsoft.CodeAnalysis.Formatting,FormattingExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\FormattingExtensions.cs,AdjustIndentForXmlDocExteriorTrivia,The length of the statement  "            var newIndentation = GetNewIndentationForComments(triviaText' nonWhitespaceCharIndex' forceIndentation' indentation' indentationDelta' tabSize); " is 144.
Long Statement,Microsoft.CodeAnalysis.Formatting,FormattingExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\FormattingExtensions.cs,ReindentStartOfXmlDocumentationComment,The length of the statement  "                    var newIndentation = GetNewIndentationForComments(line' nonWhitespaceCharIndex' forceIndentation' indentation' indentationDelta' tabSize); " is 138.
Long Statement,Microsoft.CodeAnalysis.Formatting,ConcurrentExecutor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TaskExecutor.cs,ContinueWith,The length of the statement  "                return previousTask.ContinueWith(nextAction' cancellationToken' TaskContinuationOptions.OnlyOnRanToCompletion' TaskScheduler.Default); " is 134.
Long Statement,Microsoft.CodeAnalysis.Formatting,ConcurrentExecutor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TaskExecutor.cs,ContinueWith,The length of the statement  "                return previousTask.ContinueWith(nextAction' cancellationToken' TaskContinuationOptions.OnlyOnRanToCompletion' TaskScheduler.Default); " is 134.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractTriviaFormatter<TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\AbstractTriviaFormatter.cs,FormatFirstTriviaAndWhitespaceAfter,The length of the statement  "                    lineColumnBeforeTrivia1 : lineColumnBeforeTrivia1.With(format(lineColumnBeforeTrivia1' trivia1' changes' cancellationToken)); " is 125.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractTriviaFormatter<TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\AbstractTriviaFormatter.cs,FormatFirstTriviaAndWhitespaceAfter,The length of the statement  "            var whitespaceDelta = Apply(lineColumnBeforeTrivia1' trivia1' lineColumnAfterTrivia1' existingWhitespaceBetween' trivia2' rule); " is 128.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractTriviaFormatter<TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\AbstractTriviaFormatter.cs,Apply,The length of the statement  "            var spaceOrIndentations = GetRuleSpacesOrIndentation(lineColumnBeforeTrivia1' trivia1' lineColumnAfterTrivia1' existingWhitespaceBetween' trivia2' rule); " is 153.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractTriviaFormatter<TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\AbstractTriviaFormatter.cs,GetRuleLines,The length of the statement  "            return (rule.LineOperation == LineColumnRule.LineOperations.Preserve) ? Math.Max(adjustedRuleLines' existingWhitespaceBetween.Lines) : adjustedRuleLines; " is 153.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractTriviaFormatter<TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\AbstractTriviaFormatter.cs,GetIndentation,The length of the statement  "            var position = lastText.ConvertTabToSpace(this.OptionSet.GetOption(FormattingOptions.TabSize' this.Language)' initialColumn' index); " is 132.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractTriviaFormatter<TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\AbstractTriviaFormatter.cs,GetIndentation,The length of the statement  "            var tokenPosition = lastText.ConvertTabToSpace(this.OptionSet.GetOption(FormattingOptions.TabSize' this.Language)' initialColumn' lastText.Length); " is 147.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractTriviaFormatter<TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\AbstractTriviaFormatter.cs,AddWhitespaceTrivia,The length of the statement  "            changes.Add(CreateWhitespace(GetSpacesOrTabs(lineColumn.Column' delta.Spaces' useTabs && !useTabOnlyForIndentation' tabSize))); " is 127.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractTriviaFormatter<TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\AbstractTriviaFormatter.cs,GetLineColumnOfWhitespace,The length of the statement  "                spaces: text.ConvertTabToSpace(this.OptionSet.GetOption(FormattingOptions.TabSize' this.Language)' lineColumn.With(whitespaceBetween).Column' text.Length)' " is 155.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractTriviaFormatter<TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\AbstractTriviaFormatter.cs,GetLineColumnDelta,The length of the statement  "                    spaces: lineText.GetColumnFromLineOffset(lineText.Length' this.OptionSet.GetOption(FormattingOptions.TabSize' this.Language))' " is 126.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractTriviaFormatter<TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\AbstractTriviaFormatter.cs,GetLineColumnDelta,The length of the statement  "                spaces: text.ConvertTabToSpace(this.OptionSet.GetOption(FormattingOptions.TabSize' this.Language)' initialColumn' text.Length)' " is 127.
Long Statement,Microsoft.CodeAnalysis.Formatting,AbstractTriviaFormatter<TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\AbstractTriviaFormatter.cs,GetSpacesOrTabs,The length of the statement  "                return new string('\t'' numberOfTabsToIntroduce) + new string(' '' numberOfTabsToIntroduce == 0 ? numberOfSpaces - preceedingSpace : numberOfSpaces); " is 149.
Long Statement,Microsoft.CodeAnalysis.Formatting.Rules,BaseIndentationFormattingRule,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Rules\BaseIndentationFormattingRule.cs,CloneAndAdjustFormattingOperation,The length of the statement  "                    return FormattingOperations.CreateRelativeIndentBlockOperation(operation.BaseToken' operation.StartToken' operation.EndToken' AdjustTextSpan(operation.TextSpan)' operation.IndentationDeltaOrPosition' operation.Option); " is 218.
Long Statement,Microsoft.CodeAnalysis.Formatting.Rules,BaseIndentationFormattingRule,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Rules\BaseIndentationFormattingRule.cs,CloneAndAdjustFormattingOperation,The length of the statement  "                    return FormattingOperations.CreateIndentBlockOperation(operation.StartToken' operation.EndToken' AdjustTextSpan(operation.TextSpan)' operation.IndentationDeltaOrPosition' operation.Option); " is 189.
Long Statement,Microsoft.CodeAnalysis.Formatting.Rules,FormattingOperations,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Rules\Operations\FormattingOperations.cs,CreateAnchorIndentationOperation,The length of the statement  "            return CreateAnchorIndentationOperation(startToken' startToken' endToken' TextSpan.FromBounds(startToken.Span.End' endToken.Span.End)); " is 135.
Long Statement,Microsoft.CodeAnalysis.Formatting.Rules,FormattingOperations,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Rules\Operations\FormattingOperations.cs,CreateSuppressOperation,The length of the statement  "            return CreateSuppressOperation(startToken' endToken' TextSpan.FromBounds(startToken.SpanStart' endToken.Span.End)' option); " is 123.
Long Statement,Microsoft.CodeAnalysis.Host.Mef,MefHostServices,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Host\Mef\MefHostServices.cs,TryLoadNearbyAssembly,The length of the statement  "            var assemblyName = new AssemblyName(string.Format("{0}' Version={1}' Culture=neutral' PublicKeyToken={2}"' assemblySimpleName' assemblyVersion' publicKeyToken)); " is 161.
Long Statement,Microsoft.CodeAnalysis.Host.Mef,MefWorkspaceServices,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Host\Mef\MefWorkspaceServices.cs,GetSupportedLanguages,The length of the statement  "                var list = _exportProvider.GetExports<ILanguageService' LanguageServiceMetadata>().Select(lz => lz.Metadata.Language).Concat( " is 125.
Long Statement,Microsoft.CodeAnalysis.Host.Mef,MefWorkspaceServices,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Host\Mef\MefWorkspaceServices.cs,GetLanguageServices,The length of the statement  "                languageServices = ImmutableInterlocked.GetOrAdd(ref _languageServicesMap' languageName' _ => new MefLanguageServices(this' languageName)); " is 139.
Long Statement,Microsoft.CodeAnalysis.Recommendations,Recommender,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Recommendations\Recommender.cs,GetRecommendedSymbolsAtPosition,The length of the statement  "            var languageRecommender = workspace.Services.GetLanguageServices(semanticModel.Language).GetService<IRecommendationService>(); " is 126.
Long Statement,Microsoft.CodeAnalysis.Recommendations,Recommender,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Recommendations\Recommender.cs,GetRecommendedSymbolsAtPosition,The length of the statement  "            return languageRecommender.GetRecommendedSymbolsAtPosition(workspace' semanticModel' position' options' cancellationToken); " is 123.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolution.cs,RemoveAllRenameAnnotations,The length of the statement  "                        computeReplacementNode: (original' updated) => annotationSet.WithoutAnnotations(updated' annotationSet.GetAnnotations(updated).ToArray())' " is 138.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolution.cs,RemoveAllRenameAnnotations,The length of the statement  "                        computeReplacementToken: (original' updated) => annotationSet.WithoutAnnotations(updated' annotationSet.GetAnnotations(updated).ToArray())' " is 139.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolution.cs,RemoveAllRenameAnnotations,The length of the statement  "                    _intermediateSolutionContainingOnlyModifiedDocuments = _intermediateSolutionContainingOnlyModifiedDocuments.WithDocumentSyntaxRoot(documentId' newRoot' PreservationMode.PreserveIdentity); " is 187.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolution.cs,AddOrReplaceRelatedLocation,The length of the statement  "            var existingRelatedLocation = _relatedLocations.Where(rl => rl.ConflictCheckSpan == location.ConflictCheckSpan && rl.DocumentId == location.DocumentId).FirstOrDefault(); " is 169.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,ResolveConflictsAsync,The length of the statement  "                throw new ArgumentException(string.Format(WorkspacesResources.RenameSymbolIsNotFromSource' renameLocationSet.Symbol.Name)); " is 123.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,ResolveConflictsAsync,The length of the statement  "            var session = new Session(renameLocationSet' renameSymbolDeclarationLocation' originalText' replacementText' optionSet' cancellationToken); " is 139.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,IsRenameValid,The length of the statement  "            return conflictResolution.ReplacementTextValid && renamedSymbol != null && renamedSymbol.Locations.Any(loc => loc.IsInSource); " is 126.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,AddImplicitConflicts,The length of the statement  "                var renameRewriterService = conflictResolution.NewSolution.Workspace.Services.GetLanguageServices(renamedSymbol.Language).GetService<IRenameRewriterLanguageService>(); " is 167.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,AddImplicitConflicts,The length of the statement  "                var implicitUsageConflicts = renameRewriterService.ComputePossibleImplicitUsageConflicts(renamedSymbol' semanticModel' originalDeclarationLocation' newDeclarationLocationStartingPosition' cancellationToken); " is 207.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,AddImplicitConflicts,The length of the statement  "                    conflictResolution.AddOrReplaceRelatedLocation(new RelatedLocation(implicitUsageConflict.SourceSpan' conflictResolution.OldSolution.GetDocument(implicitUsageConflict.SourceTree).Id' RelatedLocationType.UnresolvableConflict)); " is 225.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,AddImplicitConflicts,The length of the statement  "            foreach (var implicitReferenceLocationsPerLanguage in implicitReferenceLocations.GroupBy(loc => loc.Document.Project.Language)) " is 127.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,AddImplicitConflicts,The length of the statement  "                var renameRewriterService = implicitReferenceLocationsPerLanguage.First().Document.Project.LanguageServices.GetService<IRenameRewriterLanguageService>(); " is 153.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,AddImplicitConflicts,The length of the statement  "                    conflictResolution.AddRelatedLocation(new RelatedLocation(implicitConflict.SourceSpan' conflictResolution.OldSolution.GetDocument(implicitConflict.SourceTree).Id' RelatedLocationType.UnresolvableConflict)); " is 206.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,AddDeclarationConflictsAsync,The length of the statement  "                                                       .Where(s => !s.Equals(renamedSymbol) && string.Equals(s.MetadataName' renamedSymbol.MetadataName' StringComparison.Ordinal) && " is 126.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,AddDeclarationConflictsAsync,The length of the statement  "                    conflictResolution.AddOrReplaceRelatedLocation(new RelatedLocation(languageConflict.SourceSpan' conflictResolution.OldSolution.GetDocument(languageConflict.SourceTree).Id' RelatedLocationType.UnresolvableConflict)); " is 215.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,AddConflictingParametersOfProperties,The length of the statement  "            // Note: referencedSymbols come from the original solution' so there is no need to reverse map the locations of the parameters " is 126.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,AddConflictingParametersOfProperties,The length of the statement  "                var conflictingParameter = prop.Parameters.FirstOrDefault(param => string.Compare(param.Name' newPropertyName' StringComparison.OrdinalIgnoreCase) == 0); " is 153.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,AddConflictingSymbolLocations,The length of the statement  "                            conflictResolution.AddOrReplaceRelatedLocation(new RelatedLocation(oldLocation.SourceSpan' conflictResolution.OldSolution.GetDocument(oldLocation.SourceTree).Id' RelatedLocationType.UnresolvableConflict)); " is 205.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,CreateDeclarationLocationAnnotationsAsync,The length of the statement  "                        overriddenSymbol = await SymbolFinder.FindSourceDefinitionAsync(overriddenSymbol' solution' cancellationToken).ConfigureAwait(false); " is 133.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,CreateDeclarationLocationAnnotationsAsync,The length of the statement  "                    renameDeclarationLocations[symbolIndex] = new RenameDeclarationLocationReference(solution.GetDocumentId(location.SourceTree)' location.SourceSpan' overriddenFromMetadata' locations.Count()); " is 190.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,GetSymbolLocationAsync,The length of the statement  "            var originalsourcesymbol = await SymbolFinder.FindSourceDefinitionAsync(symbol' solution' cancellationToken).ConfigureAwait(false); " is 131.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,ConflictResolver,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.cs,HeuristicMetadataNameEquivalenceCheck,The length of the statement  "                    newMetadataNameBuilder.Append(newMetadataName' index + replacementText.Length' newMetadataName.Length - (index + replacementText.Length)); " is 138.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,ResolveConflictsAsync,The length of the statement  "                _replacementTextValid = IsIdentifierValid_Worker(baseSolution' _replacementText' documentsGroupedByTopologicallySortedProjectId.Select(g => g.Key)' _cancellationToken); " is 168.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,ResolveConflictsAsync,The length of the statement  "                var conflictResolution = new ConflictResolution(baseSolution' renamedSpansTracker' _replacementText' _replacementTextValid); " is 124.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,ResolveConflictsAsync,The length of the statement  "                        //      We complexify and resolve locations that were resolvable and for the other locations we perform the normal token replacement like the first the phase. " is 158.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,ResolveConflictsAsync,The length of the statement  "                            //    If the node happens to contain a token that needs to be renamed then we annotate it and rename it after expansion else just expand and proceed " is 148.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,ResolveConflictsAsync,The length of the statement  "                            // 3. Through the whole process we maintain a map of the oldspan to newspan. In case of expansion & rename' we map the expanded node and the renamed token " is 154.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,ResolveConflictsAsync,The length of the statement  "                                    .Where(loc => (documentIdsThatGetsAnnotatedAndRenamed.Contains(loc.DocumentId) && loc.Type == RelatedLocationType.PossibilyResolvableConflict && loc.IsReference)) " is 162.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,ResolveConflictsAsync,The length of the statement  "                                    .Where(loc => documentIdsThatGetsAnnotatedAndRenamed.Contains(loc.DocumentId) && loc.Type == RelatedLocationType.PossibilyResolvableConflict) " is 141.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,ResolveConflictsAsync,The length of the statement  "                                _conflictLocations = _conflictLocations.Where(l => !unresolvedLocations.Any(c => c.Item2 == l.DocumentId && c.Item1.Contains(l.OriginalIdentifierSpan))).ToSet(); " is 161.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,ResolveConflictsAsync,The length of the statement  "                        conflictResolution.UpdateCurrentSolution(await renamedSpansTracker.SimplifyAsync(conflictResolution.NewSolution' documentsByProject' _replacementTextValid' _renameAnnotations' _cancellationToken).ConfigureAwait(false)); " is 219.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,ResolveConflictsAsync,The length of the statement  "                ISymbol renamedSymbolInNewSolution = await GetRenamedSymbolInCurrentSolutionAsync(conflictResolution).ConfigureAwait(false); " is 124.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,ResolveConflictsAsync,The length of the statement  "                        await conflictResolution.NewSolution.GetDocument(_documentIdOfRenameSymbolDeclaration).GetSemanticModelAsync(_cancellationToken).ConfigureAwait(false)' " is 151.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,ResolveConflictsAsync,The length of the statement  "                        renamedSpansTracker.GetAdjustedPosition(_renameSymbolDeclarationLocation.SourceSpan.Start' _documentIdOfRenameSymbolDeclaration)' " is 129.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,DebugVerifyNoErrors,The length of the statement  "                    documentIdErrorStateLookup.Add(documentId' originalDoc.HasAnyErrors(_cancellationToken).WaitAndGetResult(_cancellationToken)); " is 126.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,DebugVerifyNoErrors,The length of the statement  "                if (conflictResolution.ReplacementTextValid && conflictResolution.RelatedLocations.All(loc => (loc.Type & RelatedLocationType.UnresolvableConflict) == 0)) " is 154.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,DebugVerifyNoErrors,The length of the statement  "                            conflictResolution.NewSolution.GetDocument(documentId).VerifyNoErrorsAsync("Rename introduced errors in error-free code"' _cancellationToken' ignoreErrorCodes).Wait(_cancellationToken); " is 185.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,IdentifyConflictsAsync,The length of the statement  "                ISymbol renamedSymbolInNewSolution = await GetRenamedSymbolInCurrentSolutionAsync(conflictResolution).ConfigureAwait(false); " is 124.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,IdentifyConflictsAsync,The length of the statement  "                                conflictResolution.AddRelatedLocation(new RelatedLocation(nodeOrToken.Item2.OriginalSpan' documentId' RelatedLocationType.UnresolvedConflict)); " is 143.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,IdentifyConflictsAsync,The length of the statement  "                            newDocumentSemanticModel = newDocumentSemanticModel ?? await newDocument.GetSemanticModelAsync(_cancellationToken).ConfigureAwait(false); " is 137.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,IdentifyConflictsAsync,The length of the statement  "                            var newReferencedSymbols = GetSymbolsInNewSolution(newDocument' newDocumentSemanticModel' conflictAnnotation' tokenOrNode); " is 123.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,IdentifyConflictsAsync,The length of the statement  "                            // The semantic correctness' after rename' for each token of interest in the rename context is performed by getting the symbol pointed by " is 137.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,IdentifyConflictsAsync,The length of the statement  "                            // each token and obtain the Symbol's First Ordered Location's  Span-Start and check to see if it is the same as before from the base solution. " is 143.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,IdentifyConflictsAsync,The length of the statement  "                            // During rename' the spans would have been modified and so we need to adjust the old position to the new position for which we use the renameSpanTracker' which " is 160.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,IdentifyConflictsAsync,The length of the statement  "                            hasConflict = await CheckForConflictAsync(conflictResolution' renamedSymbolInNewSolution' newDocument' conflictAnnotation' newReferencedSymbols).ConfigureAwait(false); " is 167.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,IdentifyConflictsAsync,The length of the statement  "                                    complexifiedLocationSpanForThisDocument.Contains(originalLocation) ? RelatedLocationType.ResolvedReferenceConflict : RelatedLocationType.NoConflict' " is 148.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,IdentifyConflictsAsync,The length of the statement  "                                complexifiedTarget != null ? RelatedLocationType.PossibilyResolvableConflict : RelatedLocationType.UnresolvableConflict' " is 120.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,IdentifyConflictsAsync,The length of the statement  "                    await AddDeclarationConflictsAsync(renamedSymbolInNewSolution' renameSymbol' referencedSymbols' conflictResolution' reverseMappedLocations' _cancellationToken).ConfigureAwait(false); " is 182.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,CheckForConflictAsync,The length of the statement  "                else if (!conflictAnnotation.IsRenameLocation && conflictAnnotation.IsOriginalTextLocation && conflictAnnotation.RenameDeclarationLocationReferences.Length > 1 && newReferencedSymbols.Count() == 1) " is 197.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,CheckForConflictAsync,The length of the statement  "                        if (conflictAnnotation.RenameDeclarationLocationReferences[symbolIndex].SymbolLocationsCount != symbol.Locations.Count()) " is 121.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,CheckForConflictAsync,The length of the statement  "                            var newAdjustedStartPosition = conflictResolution.GetAdjustedTokenStartingPosition(renameDeclarationLocationReference.TextSpan.Start' renameDeclarationLocationReference.DocumentId); " is 181.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,CheckForConflictAsync,The length of the statement  "                                var overridingSymbol = await SymbolFinder.FindSymbolAtPositionAsync(solution.GetDocument(newLocation.SourceTree)' newLocation.SourceSpan.Start' cancellationToken: _cancellationToken).ConfigureAwait(false); " is 205.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,GetSymbolsInNewSolution,The length of the statement  "                var newReferencedSymbols = RenameUtilities.GetSymbolsTouchingPosition(tokenOrNode.Span.Start' newDocumentSemanticModel' newDocument.Project.Solution.Workspace' _cancellationToken); " is 180.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,GetSymbolsInNewSolution,The length of the statement  "                        invocationReferencedSymbols = SymbolsForEnclosingInvocationExpressionWorker((SyntaxNode)tokenOrNode' newDocumentSemanticModel' _cancellationToken); " is 147.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,GetRenamedSymbolInCurrentSolutionAsync,The length of the statement  "                    ? conflictResolution.RenamedSpansTracker.GetAdjustedPosition(_renameSymbolDeclarationLocation.SourceSpan.Start' _documentIdOfRenameSymbolDeclaration) " is 149.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,GetRenamedSymbolInCurrentSolutionAsync,The length of the statement  "                var newSymbol = await SymbolFinder.FindSymbolAtPositionAsync(document' start' cancellationToken: _cancellationToken).ConfigureAwait(false); " is 139.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,FindDocumentsAndPossibleNameConflicts,The length of the statement  "                var allRenamedDocuments = _renameLocationSet.Locations.Select(loc => loc.Location.SourceTree).Distinct().Select(solution.GetDocument); " is 134.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,FindDocumentsAndPossibleNameConflicts,The length of the statement  "                var documentsFromAffectedProjects = RenameUtilities.GetDocumentsAffectedByRename(symbol' solution' _renameLocationSet.Locations); " is 129.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,AnnotateAndRename_WorkerAsync,The length of the statement  "                        .Where(l => l.DocumentId == documentId && !l.IsRenameInStringOrComment && (renameLocations.Count() == 1 || !l.IsCandidateLocation)) " is 131.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,AnnotateAndRename_WorkerAsync,The length of the statement  "                        partiallyRenamedSolution = partiallyRenamedSolution.WithDocumentSyntaxRoot(documentId' newRoot' PreservationMode.PreserveIdentity); " is 131.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,DeclarationConflictHelpers,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\DeclarationConflictHelpers.cs,GetMembersWithConflictingSignatures,The length of the statement  "            var signatureToConflictingMember = new Dictionary<List<ITypeSymbol>' IMethodSymbol>(new ConflictingSignatureComparer()); " is 120.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,RenamedSpansTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\RenamedSpansTracker.cs,ContainsResolvedNonReferenceLocation,The length of the statement  "            return // (this.documentToModifiedSpansMap.Contains(documentId) && this.documentToModifiedSpansMap[documentId].Contains(t => t.Item1 == originalLocation.SourceSpan)) || " is 168.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,RenamedSpansTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\RenamedSpansTracker.cs,SimplifyAsync,The length of the statement  "                        document = await Simplifier.ReduceAsync(document' Simplifier.Annotation' optionSet' cancellationToken).ConfigureAwait(false); " is 125.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,RenamedSpansTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\RenamedSpansTracker.cs,SimplifyAsync,The length of the statement  "                        document = await Formatter.FormatAsync(document' Formatter.Annotation' cancellationToken: cancellationToken).ConfigureAwait(false); " is 131.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,RenamedSpansTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\RenamedSpansTracker.cs,SimplifyAsync,The length of the statement  "                        .Select(x => Tuple.Create(renameAnnotations.GetAnnotations<RenameNodeSimplificationAnnotation>(x).First()' (SyntaxNode)x)); " is 123.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,RenamedSpansTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\RenamedSpansTracker.cs,SimplifyAsync,The length of the statement  "                               .Select(x => Tuple.Create(renameAnnotations.GetAnnotations<RenameTokenSimplificationAnnotation>(x).First()' (SyntaxToken)x)); " is 125.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,RenamedSpansTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\RenamedSpansTracker.cs,SimplifyAsync,The length of the statement  "                        .Select(x => Tuple.Create(renameAnnotations.GetAnnotations<RenameTokenSimplificationAnnotation>(x).First()' (SyntaxToken)x)); " is 125.
Long Statement,Microsoft.CodeAnalysis.Rename.ConflictEngine,RenamedSpansTracker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\RenamedSpansTracker.cs,SimplifyAsync,The length of the statement  "                        .Select(x => Tuple.Create(renameAnnotations.GetAnnotations<RenameTokenSimplificationAnnotation>(x).First()' (SyntaxTrivia)x)); " is 126.
Long Statement,Microsoft.CodeAnalysis.Rename,RenameLocationSet,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,FindAsync,The length of the statement  "                symbol = await ReferenceProcessing.FindDefinitionSymbolAsync(symbol' solution' cancellationToken).ConfigureAwait(false); " is 120.
Long Statement,Microsoft.CodeAnalysis.Rename,RenameLocationSet,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,FindAsync,The length of the statement  "                var originalSymbolResult = await AddLocationsReferenceSymbolsAsync(symbol' solution' cancellationToken).ConfigureAwait(false); " is 126.
Long Statement,Microsoft.CodeAnalysis.Rename,RenameLocationSet,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,FindAsync,The length of the statement  "                var intermediateResult = new RenameLocationSet(symbol' solution' optionSet' originalSymbolResult' overloadsResult: null' stringsResult: null' commentsResult: null); " is 164.
Long Statement,Microsoft.CodeAnalysis.Rename,RenameLocationSet,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,GetOverloadsAsync,The length of the statement  "                overloadsResult.Add(await AddLocationsReferenceSymbolsAsync(overloadedSymbol' solution' cancellationToken).ConfigureAwait(false)); " is 130.
Long Statement,Microsoft.CodeAnalysis.Rename,RenameLocationSet,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,GetOverloadedSymbols,The length of the statement  "                        if (string.Equals(member.MetadataName' symbol.MetadataName' StringComparison.Ordinal) && member is IMethodSymbol && !member.Equals(symbol)) " is 139.
Long Statement,Microsoft.CodeAnalysis.Rename,RenameLocationSet,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,AddLocationsReferenceSymbolsAsync,The length of the statement  "            var referenceSymbols = await SymbolFinder.FindRenamableReferencesAsync(symbol' solution' cancellationToken).ConfigureAwait(false); " is 130.
Long Statement,Microsoft.CodeAnalysis.Rename,RenameLocationSet,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,AddLocationsReferenceSymbolsAsync,The length of the statement  "                    await ReferenceProcessing.GetRenamableDefinitionLocationsAsync(referencedSymbol.Definition' symbol' solution' cancellationToken).ConfigureAwait(false)); " is 152.
Long Statement,Microsoft.CodeAnalysis.Rename,RenameLocationSet,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,AddLocationsReferenceSymbolsAsync,The length of the statement  "            var implicitLocations = new List<ReferenceLocation>(referenceSymbols.SelectMany(refSym => refSym.Locations).Where(loc => loc.IsImplicit)); " is 138.
Long Statement,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,GetRenamableSymbolAsync,The length of the statement  "                var symbol = await SymbolFinder.FindSymbolAtPositionAsync(document' position' cancellationToken: cancellationToken).ConfigureAwait(false); " is 138.
Long Statement,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,GetRenamableSymbolAsync,The length of the statement  "                var definitionSymbol = await FindDefinitionSymbolAsync(symbol' document.Project.Solution' cancellationToken).ConfigureAwait(false); " is 131.
Long Statement,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,FindDefinitionSymbolAsync,The length of the statement  "                var foundSymbol = await SymbolFinder.FindSourceDefinitionAsync(symbol' solution' cancellationToken).ConfigureAwait(false); " is 122.
Long Statement,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,ShouldIncludeSymbolAsync,The length of the statement  "                if (referencedSymbol.Kind == SymbolKind.Field && originalSymbol.Equals(((IFieldSymbol)referencedSymbol).AssociatedSymbol)) " is 122.
Long Statement,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,ShouldIncludeSymbolAsync,The length of the statement  "                        string.Compare(TrimNameToAfterLastDot(referencedSymbol.Name)' TrimNameToAfterLastDot(originalSymbol.Name)' StringComparison.OrdinalIgnoreCase) == 0 && " is 150.
Long Statement,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,GetPropertyFromAccessorOrAnOverride,The length of the statement  "                    var originalSourceSymbol = await SymbolFinder.FindSourceDefinitionAsync(symbol.OverriddenMember()' solution' cancellationToken).ConfigureAwait(false); " is 150.
Long Statement,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,GetPropertyFromAccessorOrAnOverride,The length of the statement  "                        return await GetPropertyFromAccessorOrAnOverride(originalSourceSymbol' solution' cancellationToken).ConfigureAwait(false); " is 122.
Long Statement,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,GetPropertyFromAccessorOrAnOverride,The length of the statement  "                    var methodImplementors = await SymbolFinder.FindImplementationsAsync(symbol' solution' cancellationToken: cancellationToken).ConfigureAwait(false); " is 147.
Long Statement,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,GetPropertyFromAccessorOrAnOverride,The length of the statement  "                        var propertyAccessorOrAnOverride = await GetPropertyFromAccessorOrAnOverride(methodImplementor' solution' cancellationToken).ConfigureAwait(false); " is 147.
Long Statement,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,GetRenamableDefinitionLocationsAsync,The length of the statement  "                var shouldIncludeSymbol = await ShouldIncludeSymbolAsync(referencedSymbol' originalSymbol' solution' false' cancellationToken).ConfigureAwait(false); " is 149.
Long Statement,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,GetRenamableDefinitionLocationsAsync,The length of the statement  "                var isRenamableAccessor = await IsPropertyAccessorOrAnOverride(referencedSymbol' solution' cancellationToken).ConfigureAwait(false); " is 132.
Long Statement,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,GetRenamableDefinitionLocationsAsync,The length of the statement  "                        results.Add(new RenameLocation(location' solution.GetDocument(location.SourceTree).Id' isRenamableAccessor: isRenamableAccessor)); " is 130.
Long Statement,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,GetRenamableReferenceLocationsAsync,The length of the statement  "                var shouldIncludeSymbol = await ShouldIncludeSymbolAsync(referencedSymbol' originalSymbol' solution' true' cancellationToken).ConfigureAwait(false); " is 148.
Long Statement,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,GetRenamableReferenceLocationsAsync,The length of the statement  "                            results.Add(new RenameLocation(location.Location' location.Document.Id' isCandidateLocation: location.IsCandidateLocation' isRenamableAliasUsage: true)); " is 153.
Long Statement,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,GetRenamableReferenceLocationsAsync,The length of the statement  "                        results.Add(new RenameLocation(location.Location' location.Document.Id' isCandidateLocation: location.IsCandidateLocation' isRenamableAccessor: await IsPropertyAccessorOrAnOverride(referencedSymbol' solution' cancellationToken).ConfigureAwait(false))); " is 252.
Long Statement,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,GetRenamableLocationsInStringsAndCommentsAsync,The length of the statement  "                foreach (var documentsGroupedByLanguage in RenameUtilities.GetDocumentsAffectedByRename(originalSymbol' solution' renameLocations).GroupBy(d => d.Project.Language)) " is 164.
Long Statement,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,GetRenamableLocationsInStringsAndCommentsAsync,The length of the statement  "                    var syntaxFactsLanguageService = solution.Workspace.Services.GetLanguageServices(documentsGroupedByLanguage.Key).GetService<ISyntaxFactsService>(); " is 147.
Long Statement,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,GetRenamableLocationsInStringsAndCommentsAsync,The length of the statement  "                            await AddLocationsToRenameInCommentsAsync(document' renameText' commentLocations' cancellationToken).ConfigureAwait(false); " is 123.
Long Statement,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,AddLocationsToRenameInStringsAndComments,The length of the statement  "                        var renameLocation = new RenameLocation(matchLocation' document.Id' containingLocationForStringOrComment: containingSpan); " is 122.
Long Statement,Microsoft.CodeAnalysis.Rename,Renamer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\Renamer.cs,RenameSymbolAsync,The length of the statement  "            var renameLocationSet = await RenameLocationSet.FindAsync(symbol' solution' optionSet' cancellationToken).ConfigureAwait(false); " is 128.
Long Statement,Microsoft.CodeAnalysis.Rename,Renamer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\Renamer.cs,RenameSymbolAsync,The length of the statement  "            var conflictResolution = await ConflictEngine.ConflictResolver.ResolveConflictsAsync(renameLocationSet' symbol.Name' newName' optionSet' cancellationToken).ConfigureAwait(false); " is 178.
Long Statement,Microsoft.CodeAnalysis.Rename,RenameUtilities,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameUtilities.cs,GetSymbolsTouchingPosition,The length of the statement  "            var symbols = semanticModel.GetSymbols(bindableToken' workspace' bindLiteralsToUnderlyingType: false' cancellationToken: cancellationToken); " is 140.
Long Statement,Microsoft.CodeAnalysis.Rename,RenameUtilities,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameUtilities.cs,GetDocumentsAffectedByRename,The length of the statement  "                var documentsOfRenameSymbolDeclaration = symbol.Locations.Where(l => l.IsInSource).Select(l => solution.GetDocument(l.SourceTree)); " is 131.
Long Statement,Microsoft.CodeAnalysis.Rename,RenameUtilities,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameUtilities.cs,GetDocumentsAffectedByRename,The length of the statement  "                    var isSubset = renameLocations.Select(l => l.DocumentId.ProjectId).Distinct().Except(projectIdsOfRenameSymbolDeclaration).IsEmpty(); " is 132.
Long Statement,Microsoft.CodeAnalysis.SemanticModelWorkspaceService,SemanticModelService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SemanticModelWorkspaceService\SemanticModelWorkspaceServiceFactory.cs,GetSemanticModelForNodeAsync,The length of the statement  "                var versionMap = GetVersionMapFromBranchOrPrimary(document.Project.Solution.Workspace' document.Project.Solution.BranchId); " is 123.
Long Statement,Microsoft.CodeAnalysis.SemanticModelWorkspaceService,SemanticModelService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SemanticModelWorkspaceService\SemanticModelWorkspaceServiceFactory.cs,UpdateVersionCacheAsync,The length of the statement  "                    var newSet = await CompilationSet.CreateAsync(project' compilationSet ?? primarySet' cancellationToken).ConfigureAwait(false); " is 126.
Long Statement,Microsoft.CodeAnalysis.SemanticModelWorkspaceService,CompilationSet,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SemanticModelWorkspaceService\SemanticModelWorkspaceServiceFactory.cs,GetCompilation,The length of the statement  "                        return new WeakConstantValueSource<Compilation>(cache.CacheObjectIfCachingEnabledForKey(project.Id' project' compilation)); " is 123.
Long Statement,Roslyn.Collections.Immutable,HashBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,Remove,The length of the statement  "                            return new HashBucket(_hashRoll' RemoveBit(logicalSlot' _used)' _buckets.RemoveAt(physicalSlot)' _count - existing.Count); " is 122.
Long Statement,Roslyn.Collections.Immutable,HashBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,Remove,The length of the statement  "                        return new HashBucket(_hashRoll' _used' _buckets.ReplaceAt(physicalSlot' result)' _count - existing.Count + result.Count); " is 122.
Complex Conditional,Microsoft.CodeAnalysis,DocumentInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\DocumentInfo.cs,With,The conditional expression  "newId == this.Id &&                  newName == this.Name &&                  newFolders == this.Folders &&                  newSourceCodeKind == this.SourceCodeKind &&                  newLoader == this.TextLoader &&                  newFilePath == this.FilePath"  is complex.
Complex Conditional,Microsoft.CodeAnalysis,ProjectInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\ProjectInfo.cs,With,The conditional expression  "newId == this.Id &&                  newVersion == this.Version &&                  newName == this.Name &&                  newAssemblyName == this.AssemblyName &&                  newLanguage == this.Language &&                  newFilepath == this.FilePath &&                  newOutputPath == this.OutputFilePath &&                  newCompilationOptions == this.CompilationOptions &&                  newParseOptions == this.ParseOptions &&                  newDocuments == this.Documents &&                  newProjectReferences == this.ProjectReferences &&                  newMetadataReferences == this.MetadataReferences &&                  newAnalyzerReferences == this.AnalyzerReferences &&                  newAdditionalDocuments == this.AdditionalDocuments &&                  newIsSubmission == this.IsSubmission &&                  newHostObjectType == this.HostObjectType"  is complex.
Complex Conditional,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,Branch,The conditional expression  "branchId == _branchId &&                  projectIds == _projectIds &&                  idToProjectStateMap == _projectIdToProjectStateMap &&                  projectIdToTrackerMap == _projectIdToTrackerMap &&                  linkedFilesMap == _linkedFilesMap &&                  dependencyGraph == _dependencyGraph &&                  version == _version &&                  lazyLatestProjectVersion == _lazyLatestProjectVersion"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.CodeGeneration,AbstractCodeGenerationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractCodeGenerationService.cs,CheckDeclarationNode,The conditional expression  "!(destination is TDeclarationNode1) &&                  !(destination is TDeclarationNode2) &&                  !(destination is TDeclarationNode3) &&                  !(destination is TDeclarationNode4)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Editing,SyntaxGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SyntaxGenerator.cs,Declaration,The conditional expression  "ev.IsAbstract || ev.IsVirtual || ev.AddMethod != null || ev.RemoveMethod != null"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Editing,SyntaxGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SyntaxGenerator.cs,WithTypeParametersAndConstraints,The conditional expression  "tp.HasConstructorConstraint || tp.HasReferenceTypeConstraint || tp.HasValueTypeConstraint || tp.ConstraintTypes.Length > 0"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.FindSymbols,FindReferenceCache,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferenceCache.cs,GetTokensFromText,The conditional expression  "!token.IsMissing && span.Start == index && span.Length == text.Length && candidate(token)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.FindSymbols,FindReferenceCache,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\FindReferenceCache.cs,GetTokensFromText,The conditional expression  "!token.IsMissing && span.Start == index && span.Length == text.Length && candidate(token)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindOverridesAsync,The conditional expression  "member != null &&                              member.IsOverride &&                              member.OverriddenMember() != null &&                             SymbolEquivalenceComparer.Instance.Equals(member.OverriddenMember().OriginalDefinition' symbol.OriginalDefinition)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindImplementedInterfaceMembersAsync,The conditional expression  "symbol.DeclaredAccessibility == Accessibility.Public && !symbol.IsStatic &&                      (symbol.ContainingType.TypeKind == TypeKind.Class || symbol.ContainingType.TypeKind == TypeKind.Struct)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.FindSymbols,SymbolTreeInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolTree\SymbolTreeInfo.cs,Search,The conditional expression  "(isSameName && lastGood) // check for same string instance to avoid invoking predicate when we already know the outcome (assumes no side effects of predicate.)                      || (!string.IsNullOrEmpty(node.Name) // don't consider unnamed things like the global namespace itself.                            && predicate(node.Name))"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Shared.Extensions,ITypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,IsAttribute,The conditional expression  "b.MetadataName == "Attribute" &&                      b.ContainingType == null &&                      b.ContainingNamespace != null &&                      b.ContainingNamespace.Name == "System" &&                      b.ContainingNamespace.ContainingNamespace != null &&                      b.ContainingNamespace.ContainingNamespace.IsGlobalNamespace"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Shared.Extensions,INamedTypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\INamedTypeSymbolExtensions.cs,IsAttributeNamedParameter,The conditional expression  "!propertySymbol.IsReadOnly &&                          !propertySymbol.IsWriteOnly &&                          !propertySymbol.IsStatic &&                          propertySymbol.GetMethod != null &&                          propertySymbol.SetMethod != null &&                          propertySymbol.GetMethod.IsAccessibleWithin(within) &&                          propertySymbol.SetMethod.IsAccessibleWithin(within)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,VerifyGetAwaiter,The conditional expression  "!methods.Any(x => x.Name == WellKnownMemberNames.OnCompleted && x.ReturnsVoid && x.Parameters.Length == 1 && x.Parameters.First().Type.TypeKind == TypeKind.Delegate)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Shared.Utilities,CommonFormattingHelpers,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\CommonFormattingHelpers.cs,HasAnyWhitespaceElasticTrivia,The conditional expression  "(!previousToken.ContainsAnnotations && !currentToken.ContainsAnnotations) ||                  (!previousToken.HasTrailingTrivia && !currentToken.HasLeadingTrivia)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Shared.Utilities,EnumValueUtilities,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\EnumValueUtilities.cs,LooksLikeFlagsEnum,The conditional expression  "existingConstants.Count >= 1 &&                 IntegerUtilities.HasOneBitSet(existingConstants[0]) &&                 Multiply(existingConstants[0]' 2).CompareTo(existingConstants[0]) > 0 &&                 existingConstants.All(GreaterThanOrEqualsZero)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Shared.Utilities,StringBreaker,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\StringBreaker.cs,BreakIntoParts,The conditional expression  "char.IsPunctuation(identifier[i - 1]) ||                      char.IsPunctuation(identifier[i]) ||                      lastIsDigit != currentIsDigit ||                      transitionFromLowerToUpper ||                      transitionFromUpperToLower"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,MethodsAreEquivalent,The conditional expression  "IsPartialMethodDefinitionPart(x) != IsPartialMethodDefinitionPart(y) ||                          IsPartialMethodImplementationPart(x) != IsPartialMethodImplementationPart(y) ||                          x.IsDefinition != y.IsDefinition ||                          IsConstructedFromSelf(x) != IsConstructedFromSelf(y) ||                          x.Arity != y.Arity ||                          x.Parameters.Length != y.Parameters.Length ||                          x.Name != y.Name"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,AreCompatibleMethodKinds,The conditional expression  "(kind1 == MethodKind.Ordinary && kind2.IsPropertyAccessor()) ||                      (kind1.IsPropertyAccessor() && kind2 == MethodKind.Ordinary)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,HandleNamedTypesWorker,The conditional expression  "x.IsDefinition != y.IsDefinition ||                      IsConstructedFromSelf(x) != IsConstructedFromSelf(y) ||                      x.Arity != y.Arity ||                      x.Name != y.Name ||                      x.IsAnonymousType != y.IsAnonymousType ||                      x.IsUnboundGenericType != y.IsUnboundGenericType"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Shared.Utilities,EquivalenceVisitor,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.EquivalenceVisitor.cs,HandleNamedTypesWorker,The conditional expression  "_symbolEquivalenceComparer._assembliesCanDiffer &&                      equivalentTypesWithDifferingAssemblies != null &&                      x.ContainingType == null &&                      x.ContainingAssembly != null &&                      !AssembliesAreEquivalentCore(x.ContainingAssembly' y.ContainingAssembly) &&                      !equivalentTypesWithDifferingAssemblies.ContainsKey(x)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,SymbolsAreCompatibleCore,The conditional expression  "(type != null && type.IsEnumType() &&                           type.EnumUnderlyingType != null && type.EnumUnderlyingType.SpecialType == newType.SpecialType) ||                          (newType != null && newType.IsEnumType() &&                           newType.EnumUnderlyingType != null && newType.EnumUnderlyingType.SpecialType == type.SpecialType)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,IsCompatibleInterfaceMemberImplementation,The conditional expression  "newReceiverType.IsReferenceType &&                  !IsEffectivelySealedClass(newReceiverType) &&                  newSymbolContainingType.SpecialType != SpecialType.System_Array &&                  newSymbolContainingType.SpecialType != SpecialType.System_Delegate &&                  newSymbolContainingType.SpecialType != SpecialType.System_Enum &&                  !IsReceiverUniqueInstance(newReceiver' speculativeSemanticModel)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Shared.Utilities,AbstractSpeculationAnalyzer<TSyntaxNode;TExpressionSyntax;TTypeSyntax;TAttributeSyntax;TArgumentSyntax;TForEachStatementSyntax;TThrowStatementSyntax;TSemanticModel>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\AbstractSpeculationAnalyzer.cs,IsEffectivelySealedClass,The conditional expression  "namedType.DeclaredAccessibility == Accessibility.Private &&                      namedType.ContainingType != null &&                      !namedType.ContainingType.GetTypeMembers().Any(nestedType => nestedType.TypeKind == TypeKind.Class && namedType != nestedType)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Simplification,AbstractSimplificationService<TExpressionSyntax;TStatementSyntax;TCrefSyntax>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Simplification\AbstractSimplificationService.cs,ReduceAsync,The conditional expression  "currentNodeOrToken.Parent == null &&                                  nodeOrToken.Parent != null &&                                  (currentNodeOrToken.IsToken ||                                  currentNodeOrToken.AsNode() is TExpressionSyntax ||                                  currentNodeOrToken.AsNode() is TStatementSyntax ||                                  currentNodeOrToken.AsNode() is TCrefSyntax)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,OriginalSymbolsMatch,The conditional expression  "(namespace1Count > 1 &&                           namespace1.ConstituentNamespaces.Any(n => NamespaceSymbolsMatch(n' namespace2' solution' cancellationToken))) ||                          (namespace2Count > 1 &&                           namespace2.ConstituentNamespaces.Any(n2 => NamespaceSymbolsMatch(namespace1' n2' solution' cancellationToken)))"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.FindSymbols.Finders,AbstractReferenceFinder<TSymbol>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\AbstractReferenceFinder.cs,FindReferencesInForEachStatementsAsync,The conditional expression  "Matches(info.GetEnumeratorMethod' originalUnreducedSymbolDefinition) ||                          Matches(info.MoveNextMethod' originalUnreducedSymbolDefinition) ||                          Matches(info.CurrentProperty' originalUnreducedSymbolDefinition) ||                          Matches(info.DisposeMethod' originalUnreducedSymbolDefinition)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.FindSymbols.Finders,LinkedFileReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\LinkedFileReferenceFinder.cs,DetermineCascadedSymbolsAsync,The conditional expression  "linkedSymbol != null &&                          linkedSymbol.Kind == symbol.Kind &&                          linkedSymbol.Name == symbol.Name &&                          !linkedSymbols.Contains(linkedSymbol)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.FindSymbols.Finders,ParameterSymbolReferenceFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\Finders\ParameterSymbolReferenceFinder.cs,CascadeBetweenAnonymousFunctionParameters,The conditional expression  "symbol is IParameterSymbol &&                          symbol.ContainingSymbol.IsAnonymousFunction() &&                          SignatureComparer.Instance.HaveSameSignatureAndConstraintsAndReturnTypeAndAccessors(parameter.ContainingSymbol' symbol.ContainingSymbol' syntaxFacts.IsCaseSensitive) &&                          ParameterNamesMatch(syntaxFacts' (IMethodSymbol)parameter.ContainingSymbol' (IMethodSymbol)symbol.ContainingSymbol)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Formatting,FormattingContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Context\FormattingContext.AnchorData.cs,AddSpacingSuppressOperation,The conditional expression  "!(option.IsOn(SuppressOption.NoSpacingIfOnSingleLine) && twoTokensOnSameLine) &&                  !(option.IsOn(SuppressOption.NoSpacingIfOnMultipleLine) && !twoTokensOnSameLine)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Formatting,FormattingContext,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Context\FormattingContext.AnchorData.cs,AddWrappingSuppressOperation,The conditional expression  "!(option.IsOn(SuppressOption.NoWrappingIfOnSingleLine) && twoTokensOnSameLine) &&                  !(option.IsOn(SuppressOption.NoWrappingIfOnMultipleLine) && !twoTokensOnSameLine)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Formatting,AbstractTriviaFormatter<TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\AbstractTriviaFormatter.cs,Apply,The conditional expression  "(this.Token1.IsMissing && trivia1.RawKind == 0) ||                  (trivia2.RawKind == 0 && this.Token2.IsMissing)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.GeneratedCodeRecognition,GeneratedCodeRecognitionService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\GeneratedCodeRecognition\GeneratedCodeRecognitionServiceFactory.cs,IsFileNameForGeneratedCode,The conditional expression  "fileName.EndsWith("AssemblyInfo"' StringComparison.OrdinalIgnoreCase) ||                          fileName.EndsWith(".designer"' StringComparison.OrdinalIgnoreCase) ||                          fileName.EndsWith(".generated"' StringComparison.OrdinalIgnoreCase) ||                          fileName.EndsWith(".g"' StringComparison.OrdinalIgnoreCase) ||                          fileName.EndsWith(".g.i"' StringComparison.OrdinalIgnoreCase) ||                          fileName.EndsWith(".AssemblyAttributes"' StringComparison.OrdinalIgnoreCase)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Recommendations,AbstractRecommendationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Recommendations\AbstractRecommendationService.cs,ShouldIncludeSymbol,The conditional expression  "methodSymbol.MethodKind == MethodKind.EventAdd ||                          methodSymbol.MethodKind == MethodKind.EventRemove ||                          methodSymbol.MethodKind == MethodKind.EventRaise ||                          methodSymbol.MethodKind == MethodKind.PropertyGet ||                          methodSymbol.MethodKind == MethodKind.PropertySet"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Recommendations,AbstractRecommendationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Recommendations\AbstractRecommendationService.cs,ShouldIncludeSymbol,The conditional expression  "(context.IsStatementContext || context.IsAnyExpressionContext) &&                  !symbol.IsStatic &&                  isMember &&                  context.GetOuterTypes(cancellationToken).Contains(symbol.ContainingType)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,CheckForConflictAsync,The conditional expression  "!conflictAnnotation.IsRenameLocation && conflictAnnotation.IsOriginalTextLocation && conflictAnnotation.RenameDeclarationLocationReferences.Length > 1 && newReferencedSymbols.Count() == 1"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Rename.ConflictEngine,DeclarationConflictHelpers,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\DeclarationConflictHelpers.cs,GetMembersWithConflictingSignatures,The conditional expression  "!(conflictingSymbol.PartialDefinitionPart != null && conflictingSymbol.PartialDefinitionPart == renamedMethod) &&                          !(conflictingSymbol.PartialImplementationPart != null && conflictingSymbol.PartialImplementationPart == renamedMethod)"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,ShouldIncludeSymbolAsync,The conditional expression  "referencedSymbol.Kind == SymbolKind.Method ||                      referencedSymbol.Kind == SymbolKind.Property ||                      referencedSymbol.Kind == SymbolKind.Event ||                      referencedSymbol.Kind == SymbolKind.TypeParameter ||                      referencedSymbol.Kind == SymbolKind.Field"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,ShouldIncludeSymbolAsync,The conditional expression  "referencedSymbol.ContainingSymbol != null &&                      referencedSymbol.ContainingSymbol.Kind == SymbolKind.NamedType &&                      ((INamedTypeSymbol)referencedSymbol.ContainingSymbol).TypeKind == TypeKind.Interface &&                      !originalSymbol.ExplicitInterfaceImplementations().Any(s => s.Equals(referencedSymbol))"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Rename,ReferenceProcessing,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\RenameLocation.ReferenceProcessing.cs,GetRenamableDefinitionLocationsAsync,The conditional expression  "!method.IsImplicitlyDeclared && (method.MethodKind == MethodKind.Constructor ||                                                        method.MethodKind == MethodKind.StaticConstructor ||                                                        method.MethodKind == MethodKind.Destructor)"  is complex.
Virtual Method Call from Constructor,Microsoft.CodeAnalysis,SolutionServices,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\SolutionServices.cs,SolutionServices,The constructor "SolutionServices" calls a virtual method "GetService".
Virtual Method Call from Constructor,Microsoft.CodeAnalysis,SolutionServices,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\SolutionServices.cs,SolutionServices,The constructor "SolutionServices" calls a virtual method "GetService".
Virtual Method Call from Constructor,Microsoft.CodeAnalysis,SolutionServices,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\SolutionServices.cs,SolutionServices,The constructor "SolutionServices" calls a virtual method "GetService".
Virtual Method Call from Constructor,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,Workspace,The constructor "Workspace" calls a virtual method "CreateWorkspaceServices".
Virtual Method Call from Constructor,Microsoft.CodeAnalysis,Workspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Workspace.cs,Workspace,The constructor "Workspace" calls a virtual method "GetService".
Virtual Method Call from Constructor,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationConstructedMethodSymbol,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationConstructedMethodSymbol.cs,CodeGenerationConstructedMethodSymbol,The constructor "CodeGenerationConstructedMethodSymbol" calls a virtual method "GetReturnTypeAttributes".
Virtual Method Call from Constructor,Microsoft.CodeAnalysis.Formatting,AbstractComplexTrivia<TToken;TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractTriviaDataFactory.AbstractComplexTrivia.cs,AbstractComplexTrivia,The constructor "AbstractComplexTrivia" calls a virtual method "GetTextBetween".
Empty Catch Block,Microsoft.CodeAnalysis,XmlDocumentationProvider,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\Documentation\XmlDocumentationProvider.cs,GetDocumentationForSymbol,The method has an empty catch block.
Empty Catch Block,Microsoft.CodeAnalysis,PrimaryWorkspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\PrimaryWorkspace.cs,Register,The method has an empty catch block.
Empty Catch Block,Microsoft.CodeAnalysis,PrimaryWorkspace,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\PrimaryWorkspace.cs,GetWorkspaceAsync,The method has an empty catch block.
Empty Catch Block,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeDeclarationInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeDeclarationInfo.cs,ReadFrom,The method has an empty catch block.
Empty Catch Block,Microsoft.CodeAnalysis.FindSymbols,SymbolTreeInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolTree\SymbolTreeInfo.cs,ReadFrom,The method has an empty catch block.
Empty Catch Block,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeContextInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeContextInfo.cs,ReadFrom,The method has an empty catch block.
Empty Catch Block,Microsoft.CodeAnalysis.FindSymbols,SyntaxTreeIdentifierInfo,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SyntaxTree\SyntaxTreeIdentifierInfo.cs,ReadFrom,The method has an empty catch block.
Magic Number,Microsoft.CodeAnalysis,ImmutableArrayExtensions,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Collections\ImmutableArrayExtensions.cs,SelectAsArray,The following statement contains a magic number: switch (items.Length)              {                  case 0:                      return ImmutableArray<TResult>.Empty;                    case 1:                      return ImmutableArray.Create(map(items[0]' 0' arg));                    case 2:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg));                    case 3:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg)' map(items[2]' 2' arg));                    case 4:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg)' map(items[2]' 2' arg)' map(items[3]' 3' arg));                    default:                      var builder = ArrayBuilder<TResult>.GetInstance(items.Length);                      for (int i = 0; i < items.Length; i++)                      {                          builder.Add(map(items[i]' i' arg));                      }                        return builder.ToImmutableAndFree();              }
Magic Number,Microsoft.CodeAnalysis,ImmutableArrayExtensions,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Collections\ImmutableArrayExtensions.cs,SelectAsArray,The following statement contains a magic number: switch (items.Length)              {                  case 0:                      return ImmutableArray<TResult>.Empty;                    case 1:                      return ImmutableArray.Create(map(items[0]' 0' arg));                    case 2:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg));                    case 3:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg)' map(items[2]' 2' arg));                    case 4:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg)' map(items[2]' 2' arg)' map(items[3]' 3' arg));                    default:                      var builder = ArrayBuilder<TResult>.GetInstance(items.Length);                      for (int i = 0; i < items.Length; i++)                      {                          builder.Add(map(items[i]' i' arg));                      }                        return builder.ToImmutableAndFree();              }
Magic Number,Microsoft.CodeAnalysis,ImmutableArrayExtensions,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Collections\ImmutableArrayExtensions.cs,SelectAsArray,The following statement contains a magic number: switch (items.Length)              {                  case 0:                      return ImmutableArray<TResult>.Empty;                    case 1:                      return ImmutableArray.Create(map(items[0]' 0' arg));                    case 2:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg));                    case 3:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg)' map(items[2]' 2' arg));                    case 4:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg)' map(items[2]' 2' arg)' map(items[3]' 3' arg));                    default:                      var builder = ArrayBuilder<TResult>.GetInstance(items.Length);                      for (int i = 0; i < items.Length; i++)                      {                          builder.Add(map(items[i]' i' arg));                      }                        return builder.ToImmutableAndFree();              }
Magic Number,Microsoft.CodeAnalysis,ImmutableArrayExtensions,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Collections\ImmutableArrayExtensions.cs,SelectAsArray,The following statement contains a magic number: switch (items.Length)              {                  case 0:                      return ImmutableArray<TResult>.Empty;                    case 1:                      return ImmutableArray.Create(map(items[0]' 0' arg));                    case 2:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg));                    case 3:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg)' map(items[2]' 2' arg));                    case 4:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg)' map(items[2]' 2' arg)' map(items[3]' 3' arg));                    default:                      var builder = ArrayBuilder<TResult>.GetInstance(items.Length);                      for (int i = 0; i < items.Length; i++)                      {                          builder.Add(map(items[i]' i' arg));                      }                        return builder.ToImmutableAndFree();              }
Magic Number,Microsoft.CodeAnalysis,ImmutableArrayExtensions,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Collections\ImmutableArrayExtensions.cs,SelectAsArray,The following statement contains a magic number: switch (items.Length)              {                  case 0:                      return ImmutableArray<TResult>.Empty;                    case 1:                      return ImmutableArray.Create(map(items[0]' 0' arg));                    case 2:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg));                    case 3:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg)' map(items[2]' 2' arg));                    case 4:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg)' map(items[2]' 2' arg)' map(items[3]' 3' arg));                    default:                      var builder = ArrayBuilder<TResult>.GetInstance(items.Length);                      for (int i = 0; i < items.Length; i++)                      {                          builder.Add(map(items[i]' i' arg));                      }                        return builder.ToImmutableAndFree();              }
Magic Number,Microsoft.CodeAnalysis,ImmutableArrayExtensions,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Collections\ImmutableArrayExtensions.cs,SelectAsArray,The following statement contains a magic number: switch (items.Length)              {                  case 0:                      return ImmutableArray<TResult>.Empty;                    case 1:                      return ImmutableArray.Create(map(items[0]' 0' arg));                    case 2:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg));                    case 3:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg)' map(items[2]' 2' arg));                    case 4:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg)' map(items[2]' 2' arg)' map(items[3]' 3' arg));                    default:                      var builder = ArrayBuilder<TResult>.GetInstance(items.Length);                      for (int i = 0; i < items.Length; i++)                      {                          builder.Add(map(items[i]' i' arg));                      }                        return builder.ToImmutableAndFree();              }
Magic Number,Microsoft.CodeAnalysis,ImmutableArrayExtensions,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Collections\ImmutableArrayExtensions.cs,SelectAsArray,The following statement contains a magic number: switch (items.Length)              {                  case 0:                      return ImmutableArray<TResult>.Empty;                    case 1:                      return ImmutableArray.Create(map(items[0]' 0' arg));                    case 2:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg));                    case 3:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg)' map(items[2]' 2' arg));                    case 4:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg)' map(items[2]' 2' arg)' map(items[3]' 3' arg));                    default:                      var builder = ArrayBuilder<TResult>.GetInstance(items.Length);                      for (int i = 0; i < items.Length; i++)                      {                          builder.Add(map(items[i]' i' arg));                      }                        return builder.ToImmutableAndFree();              }
Magic Number,Microsoft.CodeAnalysis,ImmutableArrayExtensions,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Collections\ImmutableArrayExtensions.cs,SelectAsArray,The following statement contains a magic number: switch (items.Length)              {                  case 0:                      return ImmutableArray<TResult>.Empty;                    case 1:                      return ImmutableArray.Create(map(items[0]' 0' arg));                    case 2:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg));                    case 3:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg)' map(items[2]' 2' arg));                    case 4:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg)' map(items[2]' 2' arg)' map(items[3]' 3' arg));                    default:                      var builder = ArrayBuilder<TResult>.GetInstance(items.Length);                      for (int i = 0; i < items.Length; i++)                      {                          builder.Add(map(items[i]' i' arg));                      }                        return builder.ToImmutableAndFree();              }
Magic Number,Microsoft.CodeAnalysis,ImmutableArrayExtensions,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Collections\ImmutableArrayExtensions.cs,SelectAsArray,The following statement contains a magic number: switch (items.Length)              {                  case 0:                      return ImmutableArray<TResult>.Empty;                    case 1:                      return ImmutableArray.Create(map(items[0]' 0' arg));                    case 2:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg));                    case 3:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg)' map(items[2]' 2' arg));                    case 4:                      return ImmutableArray.Create(map(items[0]' 0' arg)' map(items[1]' 1' arg)' map(items[2]' 2' arg)' map(items[3]' 3' arg));                    default:                      var builder = ArrayBuilder<TResult>.GetInstance(items.Length);                      for (int i = 0; i < items.Length; i++)                      {                          builder.Add(map(items[i]' i' arg));                      }                        return builder.ToImmutableAndFree();              }
Magic Number,Microsoft.CodeAnalysis,ImmutableArrayExtensions,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Collections\ImmutableArrayExtensions.cs,Distinct,The following statement contains a magic number: if (array.Length < 2)              {                  return array;              }
Magic Number,Microsoft.CodeAnalysis,ImmutableArrayExtensions,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Collections\ImmutableArrayExtensions.cs,DeOrder,The following statement contains a magic number: if (!array.IsDefault && array.Length >= 2)              {                  T[] copy = array.ToArray();                  int last = copy.Length - 1;                  var temp = copy[0];                  copy[0] = copy[last];                  copy[last] = temp;                  return copy.AsImmutable();              }              else              {                  return array;              }
Magic Number,Microsoft.CodeAnalysis,ImmutableArrayExtensions,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Collections\ImmutableArrayExtensions.cs,HasDuplicates,The following statement contains a magic number: switch (array.Length)              {                  case 0:                  case 1:                      return false;                    case 2:                      return comparer.Equals(array[0]' array[1]);                    default:                      var set = new HashSet<T>(comparer);                      foreach (var i in array)                      {                          if (!set.Add(i))                          {                              return true;                          }                      }                        return false;              }
Magic Number,Microsoft.CodeAnalysis,Parser,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\DocumentationCommentId.cs,ParseDeclaredSymbolId,The following statement contains a magic number: if (id.Length < 2)                  {                      return false;                  }
Magic Number,Microsoft.CodeAnalysis,Parser,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\DocumentationCommentId.cs,ReadNextInteger,The following statement contains a magic number: while (index < id.Length && char.IsDigit(id[index]))                  {                      n = n * 10 + (id[index] - '0');                      index++;                  }
Magic Number,Microsoft.CodeAnalysis,AbstractLinkedFileMergeConflictCommentAdditionService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\LinkedFileDiffMerging\AbstractLinkedFileMergeConflictCommentAdditionService.cs,PartitionChangesForDocument,The following statement contains a magic number: foreach (var change in changes.Skip(1))              {                  // If changes are on adjacent lines' consider them part of the same change.                  var changeStartLine = originalSourceText.Lines.GetLineFromPosition(change.Span.Start);                  if (changeStartLine.LineNumber >= currentPartitionEndLine.LineNumber + 2)                  {                      partitionedChanges.Add(currentPartition);                      currentPartition = new List<TextChange>();                  }                    currentPartition.Add(change);                  currentPartitionEndLine = originalSourceText.Lines.GetLineFromPosition(change.Span.End);              }
Magic Number,Microsoft.CodeAnalysis,Solution,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Workspace\Solution\Solution.CompilationTracker.cs,WithFrozenPartialCompilationIncludingSpecificDocumentAsync,The following statement contains a magic number: try              {                  var doc = this.GetDocument(documentId);                  var tree = await doc.GetSyntaxTreeAsync(cancellationToken).ConfigureAwait(false);                    using (this.StateLock.DisposableWait(cancellationToken))                  {                      // in progress solutions are disabled for some testing                      Workspace ws = this.Workspace as Workspace;                      if (ws != null && ws.TestHookPartialSolutionsDisabled)                      {                          return this;                      }                        Solution currentPartialSolution = null;                      if (_latestSolutionWithPartialCompilation != null)                      {                          _latestSolutionWithPartialCompilation.TryGetTarget(out currentPartialSolution);                      }                        // if we don't have one or it is stale' create a new partial solution                      if (currentPartialSolution == null                          || (DateTime.UtcNow - _timeOfLatestSolutionWithPartialCompilation).TotalSeconds >= 0.1                          || _documentIdOfLatestSolutionWithPartialCompilation != documentId)                      {                          var tracker = this.GetCompilationTracker(documentId.ProjectId);                          var newTracker = tracker.FreezePartialStateWithTree(this' doc.State' tree' cancellationToken);                            var newIdToProjectStateMap = _projectIdToProjectStateMap.SetItem(documentId.ProjectId' newTracker.ProjectState);                          var newIdToTrackerMap = _projectIdToTrackerMap.SetItem(documentId.ProjectId' newTracker);                            currentPartialSolution = this.Branch(                              idToProjectStateMap: newIdToProjectStateMap'                              projectIdToTrackerMap: newIdToTrackerMap'                              dependencyGraph: CreateDependencyGraph(_projectIds' newIdToProjectStateMap));                            _latestSolutionWithPartialCompilation = new WeakReference<Solution>(currentPartialSolution);                          _timeOfLatestSolutionWithPartialCompilation = DateTime.UtcNow;                          _documentIdOfLatestSolutionWithPartialCompilation = documentId;                      }                        return currentPartialSolution;                  }              }              catch (Exception e) when(FatalError.ReportUnlessCanceled(e))              {                  throw ExceptionUtilities.Unreachable;              }
Magic Number,Microsoft.CodeAnalysis,ArrayBuilder<T>,C:\repos\mono_roslyn\src\Compilers\Core\SharedCollections\ArrayBuilder.cs,Free,The following statement contains a magic number: if (pool != null)              {                  // According to the statistics of a C# compiler self-build' the most commonly used builder size is 0.  (808003 uses).                  // The distant second is the Count == 1 (455619)' then 2 (106362) ...                  // After about 50 (just 67) we have a long tail of infrequently used builder sizes.                  // However we have builders with size up to 50K   (just one such thing)                  //                  // We do not want to retain (potentially indefinitely) very large builders                   // while the chance that we will need their size is diminishingly small.                  // It makes sense to constrain the size to some "not too small" number.                   // Overal perf does not seem to be very sensitive to this number' so I picked 128 as a limit.                  if (this.Count < 128)                  {                      if (this.Count != 0)                      {                          this.Clear();                      }                        pool.Free(this);                      return;                  }                  else                  {                      pool.ForgetTrackedObject(this);                  }              }
Magic Number,Microsoft.CodeAnalysis,ArrayBuilder<T>,C:\repos\mono_roslyn\src\Compilers\Core\SharedCollections\ArrayBuilder.cs,CreatePool,The following statement contains a magic number: return CreatePool(128);
Magic Number,Roslyn.Utilities,BitArithmeticUtilities,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\BitArithmeticUtilities.cs,CountBits,The following statement contains a magic number: unchecked              {                  v = v - ((v >> 1) & 0x55555555u);                  v = (v & 0x33333333u) + ((v >> 2) & 0x33333333u);                  return (int)((v + (v >> 4) & 0xF0F0F0Fu) * 0x1010101u) >> 24;              }
Magic Number,Roslyn.Utilities,BitArithmeticUtilities,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\BitArithmeticUtilities.cs,CountBits,The following statement contains a magic number: unchecked              {                  v = v - ((v >> 1) & 0x55555555u);                  v = (v & 0x33333333u) + ((v >> 2) & 0x33333333u);                  return (int)((v + (v >> 4) & 0xF0F0F0Fu) * 0x1010101u) >> 24;              }
Magic Number,Roslyn.Utilities,BitArithmeticUtilities,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\BitArithmeticUtilities.cs,CountBits,The following statement contains a magic number: unchecked              {                  v = v - ((v >> 1) & 0x55555555u);                  v = (v & 0x33333333u) + ((v >> 2) & 0x33333333u);                  return (int)((v + (v >> 4) & 0xF0F0F0Fu) * 0x1010101u) >> 24;              }
Magic Number,Roslyn.Utilities,BitArithmeticUtilities,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\BitArithmeticUtilities.cs,CountBits,The following statement contains a magic number: unchecked              {                  const ulong MASK_01010101010101010101010101010101 = 0x5555555555555555UL;                  const ulong MASK_00110011001100110011001100110011 = 0x3333333333333333UL;                  const ulong MASK_00001111000011110000111100001111 = 0x0F0F0F0F0F0F0F0FUL;                  const ulong MASK_00000000111111110000000011111111 = 0x00FF00FF00FF00FFUL;                  const ulong MASK_00000000000000001111111111111111 = 0x0000FFFF0000FFFFUL;                  const ulong MASK_11111111111111111111111111111111 = 0x00000000FFFFFFFFUL;                  v = (v & MASK_01010101010101010101010101010101) + ((v >> 1) & MASK_01010101010101010101010101010101);                  v = (v & MASK_00110011001100110011001100110011) + ((v >> 2) & MASK_00110011001100110011001100110011);                  v = (v & MASK_00001111000011110000111100001111) + ((v >> 4) & MASK_00001111000011110000111100001111);                  v = (v & MASK_00000000111111110000000011111111) + ((v >> 8) & MASK_00000000111111110000000011111111);                  v = (v & MASK_00000000000000001111111111111111) + ((v >> 16) & MASK_00000000000000001111111111111111);                  v = (v & MASK_11111111111111111111111111111111) + ((v >> 32) & MASK_11111111111111111111111111111111);                  return (int)v;              }
Magic Number,Roslyn.Utilities,BitArithmeticUtilities,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\BitArithmeticUtilities.cs,CountBits,The following statement contains a magic number: unchecked              {                  const ulong MASK_01010101010101010101010101010101 = 0x5555555555555555UL;                  const ulong MASK_00110011001100110011001100110011 = 0x3333333333333333UL;                  const ulong MASK_00001111000011110000111100001111 = 0x0F0F0F0F0F0F0F0FUL;                  const ulong MASK_00000000111111110000000011111111 = 0x00FF00FF00FF00FFUL;                  const ulong MASK_00000000000000001111111111111111 = 0x0000FFFF0000FFFFUL;                  const ulong MASK_11111111111111111111111111111111 = 0x00000000FFFFFFFFUL;                  v = (v & MASK_01010101010101010101010101010101) + ((v >> 1) & MASK_01010101010101010101010101010101);                  v = (v & MASK_00110011001100110011001100110011) + ((v >> 2) & MASK_00110011001100110011001100110011);                  v = (v & MASK_00001111000011110000111100001111) + ((v >> 4) & MASK_00001111000011110000111100001111);                  v = (v & MASK_00000000111111110000000011111111) + ((v >> 8) & MASK_00000000111111110000000011111111);                  v = (v & MASK_00000000000000001111111111111111) + ((v >> 16) & MASK_00000000000000001111111111111111);                  v = (v & MASK_11111111111111111111111111111111) + ((v >> 32) & MASK_11111111111111111111111111111111);                  return (int)v;              }
Magic Number,Roslyn.Utilities,BitArithmeticUtilities,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\BitArithmeticUtilities.cs,CountBits,The following statement contains a magic number: unchecked              {                  const ulong MASK_01010101010101010101010101010101 = 0x5555555555555555UL;                  const ulong MASK_00110011001100110011001100110011 = 0x3333333333333333UL;                  const ulong MASK_00001111000011110000111100001111 = 0x0F0F0F0F0F0F0F0FUL;                  const ulong MASK_00000000111111110000000011111111 = 0x00FF00FF00FF00FFUL;                  const ulong MASK_00000000000000001111111111111111 = 0x0000FFFF0000FFFFUL;                  const ulong MASK_11111111111111111111111111111111 = 0x00000000FFFFFFFFUL;                  v = (v & MASK_01010101010101010101010101010101) + ((v >> 1) & MASK_01010101010101010101010101010101);                  v = (v & MASK_00110011001100110011001100110011) + ((v >> 2) & MASK_00110011001100110011001100110011);                  v = (v & MASK_00001111000011110000111100001111) + ((v >> 4) & MASK_00001111000011110000111100001111);                  v = (v & MASK_00000000111111110000000011111111) + ((v >> 8) & MASK_00000000111111110000000011111111);                  v = (v & MASK_00000000000000001111111111111111) + ((v >> 16) & MASK_00000000000000001111111111111111);                  v = (v & MASK_11111111111111111111111111111111) + ((v >> 32) & MASK_11111111111111111111111111111111);                  return (int)v;              }
Magic Number,Roslyn.Utilities,BitArithmeticUtilities,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\BitArithmeticUtilities.cs,CountBits,The following statement contains a magic number: unchecked              {                  const ulong MASK_01010101010101010101010101010101 = 0x5555555555555555UL;                  const ulong MASK_00110011001100110011001100110011 = 0x3333333333333333UL;                  const ulong MASK_00001111000011110000111100001111 = 0x0F0F0F0F0F0F0F0FUL;                  const ulong MASK_00000000111111110000000011111111 = 0x00FF00FF00FF00FFUL;                  const ulong MASK_00000000000000001111111111111111 = 0x0000FFFF0000FFFFUL;                  const ulong MASK_11111111111111111111111111111111 = 0x00000000FFFFFFFFUL;                  v = (v & MASK_01010101010101010101010101010101) + ((v >> 1) & MASK_01010101010101010101010101010101);                  v = (v & MASK_00110011001100110011001100110011) + ((v >> 2) & MASK_00110011001100110011001100110011);                  v = (v & MASK_00001111000011110000111100001111) + ((v >> 4) & MASK_00001111000011110000111100001111);                  v = (v & MASK_00000000111111110000000011111111) + ((v >> 8) & MASK_00000000111111110000000011111111);                  v = (v & MASK_00000000000000001111111111111111) + ((v >> 16) & MASK_00000000000000001111111111111111);                  v = (v & MASK_11111111111111111111111111111111) + ((v >> 32) & MASK_11111111111111111111111111111111);                  return (int)v;              }
Magic Number,Roslyn.Utilities,BitArithmeticUtilities,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\BitArithmeticUtilities.cs,CountBits,The following statement contains a magic number: unchecked              {                  const ulong MASK_01010101010101010101010101010101 = 0x5555555555555555UL;                  const ulong MASK_00110011001100110011001100110011 = 0x3333333333333333UL;                  const ulong MASK_00001111000011110000111100001111 = 0x0F0F0F0F0F0F0F0FUL;                  const ulong MASK_00000000111111110000000011111111 = 0x00FF00FF00FF00FFUL;                  const ulong MASK_00000000000000001111111111111111 = 0x0000FFFF0000FFFFUL;                  const ulong MASK_11111111111111111111111111111111 = 0x00000000FFFFFFFFUL;                  v = (v & MASK_01010101010101010101010101010101) + ((v >> 1) & MASK_01010101010101010101010101010101);                  v = (v & MASK_00110011001100110011001100110011) + ((v >> 2) & MASK_00110011001100110011001100110011);                  v = (v & MASK_00001111000011110000111100001111) + ((v >> 4) & MASK_00001111000011110000111100001111);                  v = (v & MASK_00000000111111110000000011111111) + ((v >> 8) & MASK_00000000111111110000000011111111);                  v = (v & MASK_00000000000000001111111111111111) + ((v >> 16) & MASK_00000000000000001111111111111111);                  v = (v & MASK_11111111111111111111111111111111) + ((v >> 32) & MASK_11111111111111111111111111111111);                  return (int)v;              }
Magic Number,Roslyn.Utilities,DecimalUtilities,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\DecimalUtilities.cs,GetScale,The following statement contains a magic number: return (int)((bits[3] >> 16) & 31);
Magic Number,Roslyn.Utilities,DecimalUtilities,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\DecimalUtilities.cs,GetScale,The following statement contains a magic number: return (int)((bits[3] >> 16) & 31);
Magic Number,Roslyn.Utilities,DecimalUtilities,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\DecimalUtilities.cs,GetScale,The following statement contains a magic number: return (int)((bits[3] >> 16) & 31);
Magic Number,Roslyn.Utilities,HashAlgorithm,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\HashAlgorithms.cs,HashAlgorithm,The following statement contains a magic number: s_bytesOffsetCountMethod = (from m in methods                               let ps = m.GetParameters()                               where ps.Length == 3 && ps[0].ParameterType == typeof(byte[]) && ps[1].ParameterType == typeof(int) && ps[2].ParameterType == typeof(int)                               select m).Single();
Magic Number,Roslyn.Utilities,HashAlgorithm,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\HashAlgorithms.cs,HashAlgorithm,The following statement contains a magic number: s_bytesOffsetCountMethod = (from m in methods                               let ps = m.GetParameters()                               where ps.Length == 3 && ps[0].ParameterType == typeof(byte[]) && ps[1].ParameterType == typeof(int) && ps[2].ParameterType == typeof(int)                               select m).Single();
Magic Number,Roslyn.Utilities,StringExtensions,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\StringExtensions.cs,LooksLikeInterfaceName,The following statement contains a magic number: return name.Length >= 3 && name[0] == 'I' && char.IsUpper(name[1]) && char.IsLower(name[2]);
Magic Number,Roslyn.Utilities,StringExtensions,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\StringExtensions.cs,LooksLikeInterfaceName,The following statement contains a magic number: return name.Length >= 3 && name[0] == 'I' && char.IsUpper(name[1]) && char.IsLower(name[2]);
Magic Number,Roslyn.Utilities,StringExtensions,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\StringExtensions.cs,LooksLikeTypeParameterName,The following statement contains a magic number: return name.Length >= 3 && name[0] == 'T' && char.IsUpper(name[1]) && char.IsLower(name[2]);
Magic Number,Roslyn.Utilities,StringExtensions,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\StringExtensions.cs,LooksLikeTypeParameterName,The following statement contains a magic number: return name.Length >= 3 && name[0] == 'T' && char.IsUpper(name[1]) && char.IsLower(name[2]);
Magic Number,Roslyn.Utilities,StringExtensions,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\StringExtensions.cs,ConvertCase,The following statement contains a magic number: if (!string.IsNullOrEmpty(shortName))              {                  if (trimLeadingTypePrefix && (shortName.LooksLikeInterfaceName() || shortName.LooksLikeTypeParameterName()))                  {                      return convert(shortName[1]) + shortName.Substring(2);                  }                    if (convert(shortName[0]) != shortName[0])                  {                      return convert(shortName[0]) + shortName.Substring(1);                  }              }
Magic Number,Roslyn.Utilities,StringExtensions,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\StringExtensions.cs,Unquote,The following statement contains a magic number: if (arg.Length > 1 && arg[0] == '"' && arg[arg.Length - 1] == '"')              {                  quoted = true;                  return arg.Substring(1' arg.Length - 2);              }              else              {                  quoted = false;                  return arg;              }
Magic Number,Roslyn.Utilities,ObjectReader,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectReader.cs,ReadCompressedUInt,The following statement contains a magic number: if (marker == Byte1Marker)              {                  return byte0;              }              else if (marker == Byte2Marker)              {                  var byte1 = _reader.ReadByte();                  return (((uint)byte0) << 8) | byte1;              }              else if (marker == Byte4Marker)              {                  var byte1 = _reader.ReadByte();                  var byte2 = _reader.ReadByte();                  var byte3 = _reader.ReadByte();                    return (((uint)byte0) << 24) | (((uint)byte1) << 16) | (((uint)byte2) << 8) | byte3;              }              else              {                  throw ExceptionUtilities.UnexpectedValue(marker);              }
Magic Number,Roslyn.Utilities,ObjectReader,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectReader.cs,ReadCompressedUInt,The following statement contains a magic number: if (marker == Byte1Marker)              {                  return byte0;              }              else if (marker == Byte2Marker)              {                  var byte1 = _reader.ReadByte();                  return (((uint)byte0) << 8) | byte1;              }              else if (marker == Byte4Marker)              {                  var byte1 = _reader.ReadByte();                  var byte2 = _reader.ReadByte();                  var byte3 = _reader.ReadByte();                    return (((uint)byte0) << 24) | (((uint)byte1) << 16) | (((uint)byte2) << 8) | byte3;              }              else              {                  throw ExceptionUtilities.UnexpectedValue(marker);              }
Magic Number,Roslyn.Utilities,ObjectReader,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectReader.cs,ReadCompressedUInt,The following statement contains a magic number: if (marker == Byte1Marker)              {                  return byte0;              }              else if (marker == Byte2Marker)              {                  var byte1 = _reader.ReadByte();                  return (((uint)byte0) << 8) | byte1;              }              else if (marker == Byte4Marker)              {                  var byte1 = _reader.ReadByte();                  var byte2 = _reader.ReadByte();                  var byte3 = _reader.ReadByte();                    return (((uint)byte0) << 24) | (((uint)byte1) << 16) | (((uint)byte2) << 8) | byte3;              }              else              {                  throw ExceptionUtilities.UnexpectedValue(marker);              }
Magic Number,Roslyn.Utilities,ObjectReader,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectReader.cs,ReadCompressedUInt,The following statement contains a magic number: if (marker == Byte1Marker)              {                  return byte0;              }              else if (marker == Byte2Marker)              {                  var byte1 = _reader.ReadByte();                  return (((uint)byte0) << 8) | byte1;              }              else if (marker == Byte4Marker)              {                  var byte1 = _reader.ReadByte();                  var byte2 = _reader.ReadByte();                  var byte3 = _reader.ReadByte();                    return (((uint)byte0) << 24) | (((uint)byte1) << 16) | (((uint)byte2) << 8) | byte3;              }              else              {                  throw ExceptionUtilities.UnexpectedValue(marker);              }
Magic Number,Roslyn.Utilities,ObjectReader,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectReader.cs,ReadArray,The following statement contains a magic number: switch (kind)              {                  case DataKind.Array_0:                      length = 0;                      break;                  case DataKind.Array_1:                      length = 1;                      break;                  case DataKind.Array_2:                      length = 2;                      break;                  case DataKind.Array_3:                      length = 3;                      break;                  case DataKind.Array:                  default:                      length = (int)this.ReadCompressedUInt();                      break;              }
Magic Number,Roslyn.Utilities,ObjectReader,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectReader.cs,ReadArray,The following statement contains a magic number: switch (kind)              {                  case DataKind.Array_0:                      length = 0;                      break;                  case DataKind.Array_1:                      length = 1;                      break;                  case DataKind.Array_2:                      length = 2;                      break;                  case DataKind.Array_3:                      length = 3;                      break;                  case DataKind.Array:                  default:                      length = (int)this.ReadCompressedUInt();                      break;              }
Magic Number,Roslyn.Utilities,ObjectWriter,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectWriter.cs,WriteCompressedUInt,The following statement contains a magic number: if (value <= (byte.MaxValue >> 2))              {                  _writer.Write((byte)value);              }              else if (value <= (ushort.MaxValue >> 2))              {                  byte byte0 = (byte)(((value >> 8) & 0xFF) | Byte2Marker);                  byte byte1 = (byte)(value & 0xFF);                    // high-bytes to low-bytes                  _writer.Write(byte0);                  _writer.Write(byte1);              }              else if (value <= (uint.MaxValue >> 2))              {                  // high-bytes to low-bytes                  byte byte0 = (byte)(((value >> 24) & 0xFF) | Byte4Marker);                  byte byte1 = (byte)((value >> 16) & 0xFF);                  byte byte2 = (byte)((value >> 8) & 0xFF);                  byte byte3 = (byte)(value & 0xFF);                    // hit-bits with 4-byte marker                  _writer.Write(byte0);                  _writer.Write(byte1);                  _writer.Write(byte2);                  _writer.Write(byte3);              }              else              {  #if COMPILERCORE                  throw new ArgumentException(CodeAnalysisResources.ValueTooLargeToBeRepresented);  #else                  throw new ArgumentException(WorkspacesResources.ValueTooLargeToBeRepresented);  #endif              }
Magic Number,Roslyn.Utilities,ObjectWriter,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectWriter.cs,WriteCompressedUInt,The following statement contains a magic number: if (value <= (byte.MaxValue >> 2))              {                  _writer.Write((byte)value);              }              else if (value <= (ushort.MaxValue >> 2))              {                  byte byte0 = (byte)(((value >> 8) & 0xFF) | Byte2Marker);                  byte byte1 = (byte)(value & 0xFF);                    // high-bytes to low-bytes                  _writer.Write(byte0);                  _writer.Write(byte1);              }              else if (value <= (uint.MaxValue >> 2))              {                  // high-bytes to low-bytes                  byte byte0 = (byte)(((value >> 24) & 0xFF) | Byte4Marker);                  byte byte1 = (byte)((value >> 16) & 0xFF);                  byte byte2 = (byte)((value >> 8) & 0xFF);                  byte byte3 = (byte)(value & 0xFF);                    // hit-bits with 4-byte marker                  _writer.Write(byte0);                  _writer.Write(byte1);                  _writer.Write(byte2);                  _writer.Write(byte3);              }              else              {  #if COMPILERCORE                  throw new ArgumentException(CodeAnalysisResources.ValueTooLargeToBeRepresented);  #else                  throw new ArgumentException(WorkspacesResources.ValueTooLargeToBeRepresented);  #endif              }
Magic Number,Roslyn.Utilities,ObjectWriter,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectWriter.cs,WriteCompressedUInt,The following statement contains a magic number: if (value <= (byte.MaxValue >> 2))              {                  _writer.Write((byte)value);              }              else if (value <= (ushort.MaxValue >> 2))              {                  byte byte0 = (byte)(((value >> 8) & 0xFF) | Byte2Marker);                  byte byte1 = (byte)(value & 0xFF);                    // high-bytes to low-bytes                  _writer.Write(byte0);                  _writer.Write(byte1);              }              else if (value <= (uint.MaxValue >> 2))              {                  // high-bytes to low-bytes                  byte byte0 = (byte)(((value >> 24) & 0xFF) | Byte4Marker);                  byte byte1 = (byte)((value >> 16) & 0xFF);                  byte byte2 = (byte)((value >> 8) & 0xFF);                  byte byte3 = (byte)(value & 0xFF);                    // hit-bits with 4-byte marker                  _writer.Write(byte0);                  _writer.Write(byte1);                  _writer.Write(byte2);                  _writer.Write(byte3);              }              else              {  #if COMPILERCORE                  throw new ArgumentException(CodeAnalysisResources.ValueTooLargeToBeRepresented);  #else                  throw new ArgumentException(WorkspacesResources.ValueTooLargeToBeRepresented);  #endif              }
Magic Number,Roslyn.Utilities,ObjectWriter,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectWriter.cs,WriteCompressedUInt,The following statement contains a magic number: if (value <= (byte.MaxValue >> 2))              {                  _writer.Write((byte)value);              }              else if (value <= (ushort.MaxValue >> 2))              {                  byte byte0 = (byte)(((value >> 8) & 0xFF) | Byte2Marker);                  byte byte1 = (byte)(value & 0xFF);                    // high-bytes to low-bytes                  _writer.Write(byte0);                  _writer.Write(byte1);              }              else if (value <= (uint.MaxValue >> 2))              {                  // high-bytes to low-bytes                  byte byte0 = (byte)(((value >> 24) & 0xFF) | Byte4Marker);                  byte byte1 = (byte)((value >> 16) & 0xFF);                  byte byte2 = (byte)((value >> 8) & 0xFF);                  byte byte3 = (byte)(value & 0xFF);                    // hit-bits with 4-byte marker                  _writer.Write(byte0);                  _writer.Write(byte1);                  _writer.Write(byte2);                  _writer.Write(byte3);              }              else              {  #if COMPILERCORE                  throw new ArgumentException(CodeAnalysisResources.ValueTooLargeToBeRepresented);  #else                  throw new ArgumentException(WorkspacesResources.ValueTooLargeToBeRepresented);  #endif              }
Magic Number,Roslyn.Utilities,ObjectWriter,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectWriter.cs,WriteCompressedUInt,The following statement contains a magic number: if (value <= (byte.MaxValue >> 2))              {                  _writer.Write((byte)value);              }              else if (value <= (ushort.MaxValue >> 2))              {                  byte byte0 = (byte)(((value >> 8) & 0xFF) | Byte2Marker);                  byte byte1 = (byte)(value & 0xFF);                    // high-bytes to low-bytes                  _writer.Write(byte0);                  _writer.Write(byte1);              }              else if (value <= (uint.MaxValue >> 2))              {                  // high-bytes to low-bytes                  byte byte0 = (byte)(((value >> 24) & 0xFF) | Byte4Marker);                  byte byte1 = (byte)((value >> 16) & 0xFF);                  byte byte2 = (byte)((value >> 8) & 0xFF);                  byte byte3 = (byte)(value & 0xFF);                    // hit-bits with 4-byte marker                  _writer.Write(byte0);                  _writer.Write(byte1);                  _writer.Write(byte2);                  _writer.Write(byte3);              }              else              {  #if COMPILERCORE                  throw new ArgumentException(CodeAnalysisResources.ValueTooLargeToBeRepresented);  #else                  throw new ArgumentException(WorkspacesResources.ValueTooLargeToBeRepresented);  #endif              }
Magic Number,Roslyn.Utilities,ObjectWriter,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectWriter.cs,WriteCompressedUInt,The following statement contains a magic number: if (value <= (byte.MaxValue >> 2))              {                  _writer.Write((byte)value);              }              else if (value <= (ushort.MaxValue >> 2))              {                  byte byte0 = (byte)(((value >> 8) & 0xFF) | Byte2Marker);                  byte byte1 = (byte)(value & 0xFF);                    // high-bytes to low-bytes                  _writer.Write(byte0);                  _writer.Write(byte1);              }              else if (value <= (uint.MaxValue >> 2))              {                  // high-bytes to low-bytes                  byte byte0 = (byte)(((value >> 24) & 0xFF) | Byte4Marker);                  byte byte1 = (byte)((value >> 16) & 0xFF);                  byte byte2 = (byte)((value >> 8) & 0xFF);                  byte byte3 = (byte)(value & 0xFF);                    // hit-bits with 4-byte marker                  _writer.Write(byte0);                  _writer.Write(byte1);                  _writer.Write(byte2);                  _writer.Write(byte3);              }              else              {  #if COMPILERCORE                  throw new ArgumentException(CodeAnalysisResources.ValueTooLargeToBeRepresented);  #else                  throw new ArgumentException(WorkspacesResources.ValueTooLargeToBeRepresented);  #endif              }
Magic Number,Roslyn.Utilities,ObjectWriter,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectWriter.cs,WriteCompressedUInt,The following statement contains a magic number: if (value <= (byte.MaxValue >> 2))              {                  _writer.Write((byte)value);              }              else if (value <= (ushort.MaxValue >> 2))              {                  byte byte0 = (byte)(((value >> 8) & 0xFF) | Byte2Marker);                  byte byte1 = (byte)(value & 0xFF);                    // high-bytes to low-bytes                  _writer.Write(byte0);                  _writer.Write(byte1);              }              else if (value <= (uint.MaxValue >> 2))              {                  // high-bytes to low-bytes                  byte byte0 = (byte)(((value >> 24) & 0xFF) | Byte4Marker);                  byte byte1 = (byte)((value >> 16) & 0xFF);                  byte byte2 = (byte)((value >> 8) & 0xFF);                  byte byte3 = (byte)(value & 0xFF);                    // hit-bits with 4-byte marker                  _writer.Write(byte0);                  _writer.Write(byte1);                  _writer.Write(byte2);                  _writer.Write(byte3);              }              else              {  #if COMPILERCORE                  throw new ArgumentException(CodeAnalysisResources.ValueTooLargeToBeRepresented);  #else                  throw new ArgumentException(WorkspacesResources.ValueTooLargeToBeRepresented);  #endif              }
Magic Number,Roslyn.Utilities,ObjectWriter,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectWriter.cs,WriteArray,The following statement contains a magic number: switch (length)              {                  case 0:                      _writer.Write((byte)DataKind.Array_0);                      break;                  case 1:                      _writer.Write((byte)DataKind.Array_1);                      break;                  case 2:                      _writer.Write((byte)DataKind.Array_2);                      break;                  case 3:                      _writer.Write((byte)DataKind.Array_3);                      break;                  default:                      _writer.Write((byte)DataKind.Array);                      this.WriteCompressedUInt((uint)length);                      break;              }
Magic Number,Roslyn.Utilities,ObjectWriter,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectWriter.cs,WriteArray,The following statement contains a magic number: switch (length)              {                  case 0:                      _writer.Write((byte)DataKind.Array_0);                      break;                  case 1:                      _writer.Write((byte)DataKind.Array_1);                      break;                  case 2:                      _writer.Write((byte)DataKind.Array_2);                      break;                  case 3:                      _writer.Write((byte)DataKind.Array_3);                      break;                  default:                      _writer.Write((byte)DataKind.Array);                      this.WriteCompressedUInt((uint)length);                      break;              }
Magic Number,Roslyn.Utilities,ObjectWriterData,C:\repos\mono_roslyn\src\Compilers\Core\Portable\Serialization\ObjectWriterData.cs,Dispose,The following statement contains a magic number: if (_valueToIdMap.Count > 1024)              {                  DictionaryPool.ForgetTrackedObject(_valueToIdMap);                  return;              }
Magic Number,Roslyn.Utilities,EditDistance,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\EditDistance.cs,GetEditDistance,The following statement contains a magic number: for (int row = 1; row < columnHeight; row++)              {                  // Shift the row data upwards' rowBefore2 falls off and the memory is                  // recycled for the current row                  var temp = rowBefore2;                  rowBefore2 = rowBefore1;                  rowBefore1 = rowCurrent;                  rowCurrent = temp;                    // First element of the row represents inserting the new string                  rowCurrent[0] = rowBefore1[0] + Insert;                    for (int column = 1; column < rowWidth; column++)                  {                      // Copy = top left neighbor + cost_copy      if current chars are equal                      //        infinite                           otherwise                      int copyCost = (char.ToLower(oldString[column - 1]) == char.ToLower(newString[row - 1])) ?                                          rowBefore1[column - 1] + Copy :                                          int.MaxValue;                        // Insert = top neighbor + cost_insert                      int insertCost = rowBefore1[column] + Insert;                        // Delete = left neighbor + cost_delete                      int deleteCost = rowCurrent[column - 1] + Delete;                        // Replace = top left neighbor + cost_replace                      int replaceCost = rowBefore1[column - 1] + Replace;                        // Twiddle = top left neighbor of the top left neighbor + cost_twiddle   if chars are swapped                      //           infinite                                                    otherwise                      int twiddleCost = (column > 1 && row > 1 &&                                      char.ToLower(oldString[column - 1]) == char.ToLower(newString[row - 2]) &&                                      char.ToLower(oldString[column - 2]) == char.ToLower(newString[row - 1])) ?                                          rowBefore2[column - 2] + Twiddle :                                          int.MaxValue;                        // Store the smallest of the costs                      rowCurrent[column] = Math.Min(Math.Min(Math.Min(Math.Min(copyCost' insertCost)' deleteCost)' replaceCost)' twiddleCost);                  }              }
Magic Number,Roslyn.Utilities,EditDistance,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\EditDistance.cs,GetEditDistance,The following statement contains a magic number: for (int row = 1; row < columnHeight; row++)              {                  // Shift the row data upwards' rowBefore2 falls off and the memory is                  // recycled for the current row                  var temp = rowBefore2;                  rowBefore2 = rowBefore1;                  rowBefore1 = rowCurrent;                  rowCurrent = temp;                    // First element of the row represents inserting the new string                  rowCurrent[0] = rowBefore1[0] + Insert;                    for (int column = 1; column < rowWidth; column++)                  {                      // Copy = top left neighbor + cost_copy      if current chars are equal                      //        infinite                           otherwise                      int copyCost = (char.ToLower(oldString[column - 1]) == char.ToLower(newString[row - 1])) ?                                          rowBefore1[column - 1] + Copy :                                          int.MaxValue;                        // Insert = top neighbor + cost_insert                      int insertCost = rowBefore1[column] + Insert;                        // Delete = left neighbor + cost_delete                      int deleteCost = rowCurrent[column - 1] + Delete;                        // Replace = top left neighbor + cost_replace                      int replaceCost = rowBefore1[column - 1] + Replace;                        // Twiddle = top left neighbor of the top left neighbor + cost_twiddle   if chars are swapped                      //           infinite                                                    otherwise                      int twiddleCost = (column > 1 && row > 1 &&                                      char.ToLower(oldString[column - 1]) == char.ToLower(newString[row - 2]) &&                                      char.ToLower(oldString[column - 2]) == char.ToLower(newString[row - 1])) ?                                          rowBefore2[column - 2] + Twiddle :                                          int.MaxValue;                        // Store the smallest of the costs                      rowCurrent[column] = Math.Min(Math.Min(Math.Min(Math.Min(copyCost' insertCost)' deleteCost)' replaceCost)' twiddleCost);                  }              }
Magic Number,Roslyn.Utilities,EditDistance,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\EditDistance.cs,GetEditDistance,The following statement contains a magic number: for (int row = 1; row < columnHeight; row++)              {                  // Shift the row data upwards' rowBefore2 falls off and the memory is                  // recycled for the current row                  var temp = rowBefore2;                  rowBefore2 = rowBefore1;                  rowBefore1 = rowCurrent;                  rowCurrent = temp;                    // First element of the row represents inserting the new string                  rowCurrent[0] = rowBefore1[0] + Insert;                    for (int column = 1; column < rowWidth; column++)                  {                      // Copy = top left neighbor + cost_copy      if current chars are equal                      //        infinite                           otherwise                      int copyCost = (char.ToLower(oldString[column - 1]) == char.ToLower(newString[row - 1])) ?                                          rowBefore1[column - 1] + Copy :                                          int.MaxValue;                        // Insert = top neighbor + cost_insert                      int insertCost = rowBefore1[column] + Insert;                        // Delete = left neighbor + cost_delete                      int deleteCost = rowCurrent[column - 1] + Delete;                        // Replace = top left neighbor + cost_replace                      int replaceCost = rowBefore1[column - 1] + Replace;                        // Twiddle = top left neighbor of the top left neighbor + cost_twiddle   if chars are swapped                      //           infinite                                                    otherwise                      int twiddleCost = (column > 1 && row > 1 &&                                      char.ToLower(oldString[column - 1]) == char.ToLower(newString[row - 2]) &&                                      char.ToLower(oldString[column - 2]) == char.ToLower(newString[row - 1])) ?                                          rowBefore2[column - 2] + Twiddle :                                          int.MaxValue;                        // Store the smallest of the costs                      rowCurrent[column] = Math.Min(Math.Min(Math.Min(Math.Min(copyCost' insertCost)' deleteCost)' replaceCost)' twiddleCost);                  }              }
Magic Number,Roslyn.Utilities,SimpleTaskQueue,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\SimpleTaskQueue.cs,ScheduleTaskWorker,The following statement contains a magic number: lock (_gate)              {                  _taskCount++;                  int delay = (_taskCount % 100) == 0 ? 1 : 0;                    var task = taskCreator(delay);                    _latestTask = task;                    return task;              }
Magic Number,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationOperatorSymbol,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\Symbols\CodeGenerationOperatorSymbol.cs,GetParameterCount,The following statement contains a magic number: switch (operatorKind)              {                  case CodeGenerationOperatorKind.Addition:                  case CodeGenerationOperatorKind.BitwiseAnd:                  case CodeGenerationOperatorKind.BitwiseOr:                  case CodeGenerationOperatorKind.Concatenate:                  case CodeGenerationOperatorKind.Division:                  case CodeGenerationOperatorKind.Equality:                  case CodeGenerationOperatorKind.ExclusiveOr:                  case CodeGenerationOperatorKind.Exponent:                  case CodeGenerationOperatorKind.GreaterThan:                  case CodeGenerationOperatorKind.GreaterThanOrEqual:                  case CodeGenerationOperatorKind.Inequality:                  case CodeGenerationOperatorKind.IntegerDivision:                  case CodeGenerationOperatorKind.LeftShift:                  case CodeGenerationOperatorKind.LessThan:                  case CodeGenerationOperatorKind.LessThanOrEqual:                  case CodeGenerationOperatorKind.Like:                  case CodeGenerationOperatorKind.Modulus:                  case CodeGenerationOperatorKind.Multiplication:                  case CodeGenerationOperatorKind.RightShift:                  case CodeGenerationOperatorKind.Subtraction:                      return 2;                  case CodeGenerationOperatorKind.Increment:                  case CodeGenerationOperatorKind.Decrement:                  case CodeGenerationOperatorKind.False:                  case CodeGenerationOperatorKind.LogicalNot:                  case CodeGenerationOperatorKind.OnesComplement:                  case CodeGenerationOperatorKind.True:                  case CodeGenerationOperatorKind.UnaryPlus:                  case CodeGenerationOperatorKind.UnaryNegation:                      return 1;                  default:                      throw ExceptionUtilities.UnexpectedValue(operatorKind);              }
Magic Number,Microsoft.CodeAnalysis.Internal.Log,LogAggregator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Log\LogAggregator.cs,GetStatistics,The following statement contains a magic number: var median = values[values.Count / 2];
Magic Number,Microsoft.CodeAnalysis.Shared.Extensions,ICodeDefinitionFactoryExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ICodeDefinitionFactoryExtensions.cs,CreateGetHashCodeMethodStatements,The following statement contains a magic number: var permuteValue = factory.NegateExpression(                  factory.LiteralExpression(1521134295));
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,BitArrayUtilities,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\BitArrayUtilities.cs,WriteTo,The following statement contains a magic number: Contract.ThrowIfTrue(bitArray.Length % 8 != 0);
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,BitArrayUtilities,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\BitArrayUtilities.cs,WriteTo,The following statement contains a magic number: writer.WriteInt32(bitArray.Length / 8);
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,BitArrayUtilities,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\BitArrayUtilities.cs,WriteTo,The following statement contains a magic number: for (var i = 0; i < bitArray.Length; i++)              {                  if (bitArray[i])                  {                      b = (byte)(0x80 | b >> 1);                  }                  else                  {                      b >>= 1;                  }                    if ((i + 1) % 8 == 0)                  {                      // End of a byte' write out the byte                      writer.WriteByte(b);                  }              }
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,BloomFilter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\BloomFilter.cs,BloomFilter,The following statement contains a magic number: int sizeInEvenBytes = (m + 7) & ~7;
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,BloomFilter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\BloomFilter.cs,BloomFilter,The following statement contains a magic number: int sizeInEvenBytes = (m + 7) & ~7;
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,BloomFilter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\BloomFilter.cs,ComputeM,The following statement contains a magic number: var denominator = Math.Log(1.0 / Math.Pow(2.0' Math.Log(2.0)));
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,BloomFilter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\BloomFilter.cs,ComputeM,The following statement contains a magic number: var denominator = Math.Log(1.0 / Math.Pow(2.0' Math.Log(2.0)));
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,BloomFilter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\BloomFilter.cs,ComputeK,The following statement contains a magic number: var temp = Math.Log(2.0) * m / n;
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,BloomFilter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\BloomFilter.cs,ComputeHash,The following statement contains a magic number: unchecked              {                  // 'm' and 'r' are mixing constants generated offline.                  // The values for m and r are chosen through experimentation and                   // supported by evidence that they work well.                    const uint m = 0x5bd1e995;                  const int r = 24;                    // Initialize the hash to a 'random' value                    var numberOfCharsLeft = key.Length;                  var h = (uint)(seed ^ numberOfCharsLeft);                    // Mix 4 bytes at a time into the hash.  NOTE: 4 bytes is two chars' so we iterate                  // through the string two chars at a time.                  var index = 0;                  while (numberOfCharsLeft >= 2)                  {                      var c1 = GetCharacter(key' index);                      var c2 = GetCharacter(key' index + 1);                        var k = (uint)(c1 | (c2 << 16));                        k *= m;                      k ^= k >> r;                      k *= m;                        h *= m;                      h ^= k;                        index += 2;                      numberOfCharsLeft -= 2;                  }                    // Handle the last char (or 2 bytes) if they exist.  This happens if the original string had                  // odd length.                  if (numberOfCharsLeft == 1)                  {                      h ^= GetCharacter(key' index);                      h *= m;                  }                    // Do a few final mixes of the hash to ensure the last few bytes are well-incorporated.                    h ^= h >> 13;                  h *= m;                  h ^= h >> 15;                    return (int)h;              }
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,BloomFilter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\BloomFilter.cs,ComputeHash,The following statement contains a magic number: unchecked              {                  // 'm' and 'r' are mixing constants generated offline.                  // The values for m and r are chosen through experimentation and                   // supported by evidence that they work well.                    const uint m = 0x5bd1e995;                  const int r = 24;                    // Initialize the hash to a 'random' value                    var numberOfCharsLeft = key.Length;                  var h = (uint)(seed ^ numberOfCharsLeft);                    // Mix 4 bytes at a time into the hash.  NOTE: 4 bytes is two chars' so we iterate                  // through the string two chars at a time.                  var index = 0;                  while (numberOfCharsLeft >= 2)                  {                      var c1 = GetCharacter(key' index);                      var c2 = GetCharacter(key' index + 1);                        var k = (uint)(c1 | (c2 << 16));                        k *= m;                      k ^= k >> r;                      k *= m;                        h *= m;                      h ^= k;                        index += 2;                      numberOfCharsLeft -= 2;                  }                    // Handle the last char (or 2 bytes) if they exist.  This happens if the original string had                  // odd length.                  if (numberOfCharsLeft == 1)                  {                      h ^= GetCharacter(key' index);                      h *= m;                  }                    // Do a few final mixes of the hash to ensure the last few bytes are well-incorporated.                    h ^= h >> 13;                  h *= m;                  h ^= h >> 15;                    return (int)h;              }
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,BloomFilter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\BloomFilter.cs,ComputeHash,The following statement contains a magic number: unchecked              {                  // 'm' and 'r' are mixing constants generated offline.                  // The values for m and r are chosen through experimentation and                   // supported by evidence that they work well.                    const uint m = 0x5bd1e995;                  const int r = 24;                    // Initialize the hash to a 'random' value                    var numberOfCharsLeft = key.Length;                  var h = (uint)(seed ^ numberOfCharsLeft);                    // Mix 4 bytes at a time into the hash.  NOTE: 4 bytes is two chars' so we iterate                  // through the string two chars at a time.                  var index = 0;                  while (numberOfCharsLeft >= 2)                  {                      var c1 = GetCharacter(key' index);                      var c2 = GetCharacter(key' index + 1);                        var k = (uint)(c1 | (c2 << 16));                        k *= m;                      k ^= k >> r;                      k *= m;                        h *= m;                      h ^= k;                        index += 2;                      numberOfCharsLeft -= 2;                  }                    // Handle the last char (or 2 bytes) if they exist.  This happens if the original string had                  // odd length.                  if (numberOfCharsLeft == 1)                  {                      h ^= GetCharacter(key' index);                      h *= m;                  }                    // Do a few final mixes of the hash to ensure the last few bytes are well-incorporated.                    h ^= h >> 13;                  h *= m;                  h ^= h >> 15;                    return (int)h;              }
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,BloomFilter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\BloomFilter.cs,ComputeHash,The following statement contains a magic number: unchecked              {                  // 'm' and 'r' are mixing constants generated offline.                  // The values for m and r are chosen through experimentation and                   // supported by evidence that they work well.                    const uint m = 0x5bd1e995;                  const int r = 24;                    // Initialize the hash to a 'random' value                    var numberOfCharsLeft = key.Length;                  var h = (uint)(seed ^ numberOfCharsLeft);                    // Mix 4 bytes at a time into the hash.  NOTE: 4 bytes is two chars' so we iterate                  // through the string two chars at a time.                  var index = 0;                  while (numberOfCharsLeft >= 2)                  {                      var c1 = GetCharacter(key' index);                      var c2 = GetCharacter(key' index + 1);                        var k = (uint)(c1 | (c2 << 16));                        k *= m;                      k ^= k >> r;                      k *= m;                        h *= m;                      h ^= k;                        index += 2;                      numberOfCharsLeft -= 2;                  }                    // Handle the last char (or 2 bytes) if they exist.  This happens if the original string had                  // odd length.                  if (numberOfCharsLeft == 1)                  {                      h ^= GetCharacter(key' index);                      h *= m;                  }                    // Do a few final mixes of the hash to ensure the last few bytes are well-incorporated.                    h ^= h >> 13;                  h *= m;                  h ^= h >> 15;                    return (int)h;              }
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,BloomFilter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\BloomFilter.cs,ComputeHash,The following statement contains a magic number: unchecked              {                  // 'm' and 'r' are mixing constants generated offline.                  // The values for m and r are chosen through experimentation and                   // supported by evidence that they work well.                    const uint m = 0x5bd1e995;                  const int r = 24;                    // Initialize the hash to a 'random' value                    var numberOfCharsLeft = key.Length;                  var h = (uint)(seed ^ numberOfCharsLeft);                    // Mix 4 bytes at a time into the hash.  NOTE: 4 bytes is two chars' so we iterate                  // through the string two chars at a time.                  var index = 0;                  while (numberOfCharsLeft >= 2)                  {                      var c1 = GetCharacter(key' index);                      var c2 = GetCharacter(key' index + 1);                        var k = (uint)(c1 | (c2 << 16));                        k *= m;                      k ^= k >> r;                      k *= m;                        h *= m;                      h ^= k;                        index += 2;                      numberOfCharsLeft -= 2;                  }                    // Handle the last char (or 2 bytes) if they exist.  This happens if the original string had                  // odd length.                  if (numberOfCharsLeft == 1)                  {                      h ^= GetCharacter(key' index);                      h *= m;                  }                    // Do a few final mixes of the hash to ensure the last few bytes are well-incorporated.                    h ^= h >> 13;                  h *= m;                  h ^= h >> 15;                    return (int)h;              }
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,BloomFilter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\BloomFilter.cs,ComputeHash,The following statement contains a magic number: unchecked              {                  // 'm' and 'r' are mixing constants generated offline.                  // The values for m and r are chosen through experimentation and                   // supported by evidence that they work well.                    const uint m = 0x5bd1e995;                  const int r = 24;                    // Initialize the hash to a 'random' value                    var numberOfCharsLeft = key.Length;                  var h = (uint)(seed ^ numberOfCharsLeft);                    // Mix 4 bytes at a time into the hash.  NOTE: 4 bytes is two chars' so we iterate                  // through the string two chars at a time.                  var index = 0;                  while (numberOfCharsLeft >= 2)                  {                      var c1 = GetCharacter(key' index);                      var c2 = GetCharacter(key' index + 1);                        var k = (uint)(c1 | (c2 << 16));                        k *= m;                      k ^= k >> r;                      k *= m;                        h *= m;                      h ^= k;                        index += 2;                      numberOfCharsLeft -= 2;                  }                    // Handle the last char (or 2 bytes) if they exist.  This happens if the original string had                  // odd length.                  if (numberOfCharsLeft == 1)                  {                      h ^= GetCharacter(key' index);                      h *= m;                  }                    // Do a few final mixes of the hash to ensure the last few bytes are well-incorporated.                    h ^= h >> 13;                  h *= m;                  h ^= h >> 15;                    return (int)h;              }
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,BloomFilter,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\BloomFilter.cs,ComputeHash,The following statement contains a magic number: unchecked              {                  // 'm' and 'r' are mixing constants generated offline.                  // The values for m and r are chosen through experimentation and                   // supported by evidence that they work well.                    const uint m = 0x5bd1e995;                  const int r = 24;                    // Initialize the hash to a 'random' value                    var numberOfCharsLeft = key.Length;                  var h = (uint)(seed ^ numberOfCharsLeft);                    // Mix 4 bytes at a time into the hash.  NOTE: 4 bytes is two chars' so we iterate                  // through the string two chars at a time.                  var index = 0;                  while (numberOfCharsLeft >= 2)                  {                      var c1 = GetCharacter(key' index);                      var c2 = GetCharacter(key' index + 1);                        var k = (uint)(c1 | (c2 << 16));                        k *= m;                      k ^= k >> r;                      k *= m;                        h *= m;                      h ^= k;                        index += 2;                      numberOfCharsLeft -= 2;                  }                    // Handle the last char (or 2 bytes) if they exist.  This happens if the original string had                  // odd length.                  if (numberOfCharsLeft == 1)                  {                      h ^= GetCharacter(key' index);                      h *= m;                  }                    // Do a few final mixes of the hash to ensure the last few bytes are well-incorporated.                    h ^= h >> 13;                  h *= m;                  h ^= h >> 15;                    return (int)h;              }
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,EnumValueUtilities,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\EnumValueUtilities.cs,GetNextEnumValue,The following statement contains a magic number: if (LooksLikeFlagsEnum(enumType' orderedExistingConstants))              {                  if (orderedExistingConstants.Count == 0)                  {                      return CreateOne(enumType.EnumUnderlyingType.SpecialType);                  }                  else                  {                      var largest = orderedExistingConstants[0];                      return Multiply(largest' 2);                  }              }              else if (orderedExistingConstants.Count > 0)              {                  for (uint i = 1; i <= existingConstants.Count; i++)                  {                      var nextValue = Add(orderedExistingConstants[0]' i);                      if (!existingConstants.Contains(nextValue))                      {                          return nextValue;                      }                  }              }
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,EnumValueUtilities,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\EnumValueUtilities.cs,LooksLikeFlagsEnum,The following statement contains a magic number: if (existingConstants.Count >= 1 &&                 IntegerUtilities.HasOneBitSet(existingConstants[0]) &&                 Multiply(existingConstants[0]' 2).CompareTo(existingConstants[0]) > 0 &&                 existingConstants.All(GreaterThanOrEqualsZero))              {                  if (existingConstants.Count == 1)                  {                      return true;                  }                    if (existingConstants[0].Equals(Multiply(existingConstants[1]' 2)))                  {                      // If you only have two values' and they're 1 and 2' then don't assume this is a                      // flags enum.  The person could have been trying to type' 1' 2' 3 instead.                      if (existingConstants[0].Equals(Convert.ChangeType(2' existingConstants[0].GetType())) &&                          existingConstants[1].Equals(Convert.ChangeType(1' existingConstants[1].GetType())))                      {                          return false;                      }                        return true;                  }              }
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,EnumValueUtilities,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\EnumValueUtilities.cs,LooksLikeFlagsEnum,The following statement contains a magic number: if (existingConstants.Count >= 1 &&                 IntegerUtilities.HasOneBitSet(existingConstants[0]) &&                 Multiply(existingConstants[0]' 2).CompareTo(existingConstants[0]) > 0 &&                 existingConstants.All(GreaterThanOrEqualsZero))              {                  if (existingConstants.Count == 1)                  {                      return true;                  }                    if (existingConstants[0].Equals(Multiply(existingConstants[1]' 2)))                  {                      // If you only have two values' and they're 1 and 2' then don't assume this is a                      // flags enum.  The person could have been trying to type' 1' 2' 3 instead.                      if (existingConstants[0].Equals(Convert.ChangeType(2' existingConstants[0].GetType())) &&                          existingConstants[1].Equals(Convert.ChangeType(1' existingConstants[1].GetType())))                      {                          return false;                      }                        return true;                  }              }
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,EnumValueUtilities,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\EnumValueUtilities.cs,LooksLikeFlagsEnum,The following statement contains a magic number: if (existingConstants.Count >= 1 &&                 IntegerUtilities.HasOneBitSet(existingConstants[0]) &&                 Multiply(existingConstants[0]' 2).CompareTo(existingConstants[0]) > 0 &&                 existingConstants.All(GreaterThanOrEqualsZero))              {                  if (existingConstants.Count == 1)                  {                      return true;                  }                    if (existingConstants[0].Equals(Multiply(existingConstants[1]' 2)))                  {                      // If you only have two values' and they're 1 and 2' then don't assume this is a                      // flags enum.  The person could have been trying to type' 1' 2' 3 instead.                      if (existingConstants[0].Equals(Convert.ChangeType(2' existingConstants[0].GetType())) &&                          existingConstants[1].Equals(Convert.ChangeType(1' existingConstants[1].GetType())))                      {                          return false;                      }                        return true;                  }              }
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,NameGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\NameGenerator.cs,EnsureUniquenessInPlace,The following statement contains a magic number: for (var i = 0; i < names.Count; i++)              {                  var name = names[i];                  var collisionIndices = GetCollisionIndices(names' name' isCaseSensitive);                    if (canUse(name) && collisionIndices.Count < 2)                  {                      // no problems with this parameter name' move onto the next one.                      continue;                  }                    HandleCollisions(isFixed' names' name' collisionIndices' canUse' isCaseSensitive);              }
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,SymbolEquivalenceComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.cs,GetVisitorIndex,The following statement contains a magic number: if (compareMethodTypeParametersByIndex)              {                  if (objectAndDynamicCompareEqually)                  {                      return 0;                  }                  else                  {                      return 1;                  }              }              else              {                  if (objectAndDynamicCompareEqually)                  {                      return 2;                  }                  else                  {                      return 3;                  }              }
Magic Number,Microsoft.CodeAnalysis.Shared.Utilities,SymbolEquivalenceComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SymbolEquivalenceComparer.cs,GetVisitorIndex,The following statement contains a magic number: if (compareMethodTypeParametersByIndex)              {                  if (objectAndDynamicCompareEqually)                  {                      return 0;                  }                  else                  {                      return 1;                  }              }              else              {                  if (objectAndDynamicCompareEqually)                  {                      return 2;                  }                  else                  {                      return 3;                  }              }
Magic Number,Microsoft.CodeAnalysis.Formatting,AbstractSyntaxFormattingService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\AbstractSyntaxFormattingService.cs,AllowDisjointSpanMerging,The following statement contains a magic number: if (list.Count <= 3)              {                  // don't collapse formatting spans                  return false;              }
Magic Number,Microsoft.CodeAnalysis.Formatting,AbstractSyntaxFormattingService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\AbstractSyntaxFormattingService.cs,AllowDisjointSpanMerging,The following statement contains a magic number: if (list.Count > 30)              {                  // figuring out base indentation at random place in a file takes about 2ms.                  // doing 30 times will make it cost about 60ms. that is about same cost' for the same file' engine will                  // take to create full formatting context. basically after that' creating full context is cheaper than                  // doing bottom up base indentation calculation for each span.                  return true;              }
Magic Number,Microsoft.CodeAnalysis.Formatting,AbstractSyntaxFormattingService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\AbstractSyntaxFormattingService.cs,AllowDisjointSpanMerging,The following statement contains a magic number: return (formattingSpan.Length / Math.Max(actualFormattingSize' 1)) < 2;
Magic Number,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,CreateNodeOperationTasks,The following statement contains a magic number: var nodeIteratorTask = this.TaskExecutor.StartNew(() =>              {                  using (Logger.LogBlock(FunctionId.Formatting_IterateNodes' cancellationToken))                  {                      const int magicLengthToNodesRatio = 5;                      var result = new List<SyntaxNode>(Math.Max(this.SpanToFormat.Length / magicLengthToNodesRatio' 4));                        foreach (var node in _commonRoot.DescendantNodesAndSelf(this.SpanToFormat))                      {                          cancellationToken.ThrowIfCancellationRequested();                          result.Add(node);                      }                        return result;                  }              }'              cancellationToken);
Magic Number,Microsoft.CodeAnalysis.Formatting,AbstractFormatEngine,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.cs,CreateNodeOperationTasks,The following statement contains a magic number: var nodeIteratorTask = this.TaskExecutor.StartNew(() =>              {                  using (Logger.LogBlock(FunctionId.Formatting_IterateNodes' cancellationToken))                  {                      const int magicLengthToNodesRatio = 5;                      var result = new List<SyntaxNode>(Math.Max(this.SpanToFormat.Length / magicLengthToNodesRatio' 4));                        foreach (var node in _commonRoot.DescendantNodesAndSelf(this.SpanToFormat))                      {                          cancellationToken.ThrowIfCancellationRequested();                          result.Add(node);                      }                        return result;                  }              }'              cancellationToken);
Magic Number,Microsoft.CodeAnalysis.Formatting,Partitioner,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\Engine\AbstractFormatEngine.Partitioner.cs,GetPartitions,The following statement contains a magic number: if (perPartition < 10 || partitionCount <= 1 || _operationPairs.Length < MinimumItemsPerPartition)                  {                      list.Add(GetOperationPairsFromTo(0' _operationPairs.Length));                      return list;                  }
Magic Number,Microsoft.CodeAnalysis.Formatting,AbstractTriviaFormatter<TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\AbstractTriviaFormatter.cs,AbstractTriviaFormatter,The following statement contains a magic number: s_spaceCache = new string[20];
Magic Number,Microsoft.CodeAnalysis.Formatting,AbstractTriviaFormatter<TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\AbstractTriviaFormatter.cs,AbstractTriviaFormatter,The following statement contains a magic number: for (int i = 0; i < 20; i++)              {                  s_spaceCache[i] = new string(' '' i);              }
Magic Number,Microsoft.CodeAnalysis.Formatting,AbstractTriviaFormatter<TTrivia>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Formatting\TriviaEngine\AbstractTriviaFormatter.cs,GetSpacesOrTabs,The following statement contains a magic number: if (space >= 0 && space < 20)              {                  return s_spaceCache[space];              }
Magic Number,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,ResolveConflictsAsync,The following statement contains a magic number: foreach (var documentsByProject in documentsGroupedByTopologicallySortedProjectId)                  {                      var documentIdsThatGetsAnnotatedAndRenamed = new HashSet<DocumentId>(documentsByProject);                      using (baseSolution.Services.CacheService?.EnableCaching(documentsByProject.Key))                      {                          // Rename is going to be in 4 phases.                          // 1st phase - Does a simple token replacement                          // If the 1st phase results in conflict then we perform then:                          //      2nd phase is to expand and simplify only the reference locations with conflicts                          //      3rd phase is to expand and simplify all the conflict locations (both reference and non-reference)                          // If there are unresolved Conflicts after the 3rd phase then in 4th phase'                           //      We complexify and resolve locations that were resolvable and for the other locations we perform the normal token replacement like the first the phase.                          for (int phase = 0; phase < 4; phase++)                          {                              // Step 1:                              // The rename process and annotation for the bookkeeping is performed in one-step                              // The Process in short is'                              // 1. If renaming a token which is no conflict then replace the token and make a map of the oldspan to the newspan                              // 2. If we encounter a node that has to be expanded( because there was a conflict in previous phase)' we expand it.                              //    If the node happens to contain a token that needs to be renamed then we annotate it and rename it after expansion else just expand and proceed                              // 3. Through the whole process we maintain a map of the oldspan to newspan. In case of expansion & rename' we map the expanded node and the renamed token                              conflictResolution.UpdateCurrentSolution(await AnnotateAndRename_WorkerAsync(                                  baseSolution'                                  conflictResolution.NewSolution'                                  documentIdsThatGetsAnnotatedAndRenamed'                                  _renameLocationSet.Locations'                                  renamedSpansTracker'                                  _replacementTextValid).ConfigureAwait(false));                                // Step 2: Check for conflicts in the renamed solution                              bool foundResolvableConflicts = await IdentifyConflictsAsync(                                          documentIdsThatGetsAnnotatedAndRenamed'                                          documentsByProject.Key'                                          conflictResolution).ConfigureAwait(false);                                if (!foundResolvableConflicts || phase == 3)                              {                                  break;                              }                                if (phase == 0)                              {                                  _conflictLocations = conflictResolution.RelatedLocations                                      .Where(loc => (documentIdsThatGetsAnnotatedAndRenamed.Contains(loc.DocumentId) && loc.Type == RelatedLocationType.PossibilyResolvableConflict && loc.IsReference))                                      .Select(loc => new ConflictLocationInfo(loc))                                      .ToSet();                                    // If there were no conflicting locations in references' then the first conflict phase has to be skipped.                                  if (_conflictLocations.Count == 0)                                  {                                      phase++;                                  }                              }                                if (phase == 1)                              {                                  _conflictLocations = _conflictLocations.Concat(conflictResolution.RelatedLocations                                      .Where(loc => documentIdsThatGetsAnnotatedAndRenamed.Contains(loc.DocumentId) && loc.Type == RelatedLocationType.PossibilyResolvableConflict)                                      .Select(loc => new ConflictLocationInfo(loc)))                                      .ToSet();                              }                                // Set the documents with conflicts that need to be processed in the next phase.                              // Note that we need to get the conflictLocations here since we're going to remove some locations below if phase == 2                              documentIdsThatGetsAnnotatedAndRenamed = new HashSet<DocumentId>(_conflictLocations.Select(l => l.DocumentId));                                if (phase == 2)                              {                                  // After phase 2' if there are still conflicts then remove the conflict locations from being expanded                                  var unresolvedLocations = conflictResolution.RelatedLocations                                      .Where(l => (l.Type & RelatedLocationType.UnresolvedConflict) != 0)                                      .Select(l => Tuple.Create(l.ComplexifiedTargetSpan' l.DocumentId)).Distinct();                                    _conflictLocations = _conflictLocations.Where(l => !unresolvedLocations.Any(c => c.Item2 == l.DocumentId && c.Item1.Contains(l.OriginalIdentifierSpan))).ToSet();                              }                                // Clean up side effects from rename before entering the next phase                              conflictResolution.ClearDocuments(documentIdsThatGetsAnnotatedAndRenamed);                          }                            // Step 3: Simplify the project                          conflictResolution.UpdateCurrentSolution(await renamedSpansTracker.SimplifyAsync(conflictResolution.NewSolution' documentsByProject' _replacementTextValid' _renameAnnotations' _cancellationToken).ConfigureAwait(false));                          conflictResolution.RemoveAllRenameAnnotations(documentsByProject' _renameAnnotations' _cancellationToken);                      }                  }
Magic Number,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,ResolveConflictsAsync,The following statement contains a magic number: foreach (var documentsByProject in documentsGroupedByTopologicallySortedProjectId)                  {                      var documentIdsThatGetsAnnotatedAndRenamed = new HashSet<DocumentId>(documentsByProject);                      using (baseSolution.Services.CacheService?.EnableCaching(documentsByProject.Key))                      {                          // Rename is going to be in 4 phases.                          // 1st phase - Does a simple token replacement                          // If the 1st phase results in conflict then we perform then:                          //      2nd phase is to expand and simplify only the reference locations with conflicts                          //      3rd phase is to expand and simplify all the conflict locations (both reference and non-reference)                          // If there are unresolved Conflicts after the 3rd phase then in 4th phase'                           //      We complexify and resolve locations that were resolvable and for the other locations we perform the normal token replacement like the first the phase.                          for (int phase = 0; phase < 4; phase++)                          {                              // Step 1:                              // The rename process and annotation for the bookkeeping is performed in one-step                              // The Process in short is'                              // 1. If renaming a token which is no conflict then replace the token and make a map of the oldspan to the newspan                              // 2. If we encounter a node that has to be expanded( because there was a conflict in previous phase)' we expand it.                              //    If the node happens to contain a token that needs to be renamed then we annotate it and rename it after expansion else just expand and proceed                              // 3. Through the whole process we maintain a map of the oldspan to newspan. In case of expansion & rename' we map the expanded node and the renamed token                              conflictResolution.UpdateCurrentSolution(await AnnotateAndRename_WorkerAsync(                                  baseSolution'                                  conflictResolution.NewSolution'                                  documentIdsThatGetsAnnotatedAndRenamed'                                  _renameLocationSet.Locations'                                  renamedSpansTracker'                                  _replacementTextValid).ConfigureAwait(false));                                // Step 2: Check for conflicts in the renamed solution                              bool foundResolvableConflicts = await IdentifyConflictsAsync(                                          documentIdsThatGetsAnnotatedAndRenamed'                                          documentsByProject.Key'                                          conflictResolution).ConfigureAwait(false);                                if (!foundResolvableConflicts || phase == 3)                              {                                  break;                              }                                if (phase == 0)                              {                                  _conflictLocations = conflictResolution.RelatedLocations                                      .Where(loc => (documentIdsThatGetsAnnotatedAndRenamed.Contains(loc.DocumentId) && loc.Type == RelatedLocationType.PossibilyResolvableConflict && loc.IsReference))                                      .Select(loc => new ConflictLocationInfo(loc))                                      .ToSet();                                    // If there were no conflicting locations in references' then the first conflict phase has to be skipped.                                  if (_conflictLocations.Count == 0)                                  {                                      phase++;                                  }                              }                                if (phase == 1)                              {                                  _conflictLocations = _conflictLocations.Concat(conflictResolution.RelatedLocations                                      .Where(loc => documentIdsThatGetsAnnotatedAndRenamed.Contains(loc.DocumentId) && loc.Type == RelatedLocationType.PossibilyResolvableConflict)                                      .Select(loc => new ConflictLocationInfo(loc)))                                      .ToSet();                              }                                // Set the documents with conflicts that need to be processed in the next phase.                              // Note that we need to get the conflictLocations here since we're going to remove some locations below if phase == 2                              documentIdsThatGetsAnnotatedAndRenamed = new HashSet<DocumentId>(_conflictLocations.Select(l => l.DocumentId));                                if (phase == 2)                              {                                  // After phase 2' if there are still conflicts then remove the conflict locations from being expanded                                  var unresolvedLocations = conflictResolution.RelatedLocations                                      .Where(l => (l.Type & RelatedLocationType.UnresolvedConflict) != 0)                                      .Select(l => Tuple.Create(l.ComplexifiedTargetSpan' l.DocumentId)).Distinct();                                    _conflictLocations = _conflictLocations.Where(l => !unresolvedLocations.Any(c => c.Item2 == l.DocumentId && c.Item1.Contains(l.OriginalIdentifierSpan))).ToSet();                              }                                // Clean up side effects from rename before entering the next phase                              conflictResolution.ClearDocuments(documentIdsThatGetsAnnotatedAndRenamed);                          }                            // Step 3: Simplify the project                          conflictResolution.UpdateCurrentSolution(await renamedSpansTracker.SimplifyAsync(conflictResolution.NewSolution' documentsByProject' _replacementTextValid' _renameAnnotations' _cancellationToken).ConfigureAwait(false));                          conflictResolution.RemoveAllRenameAnnotations(documentsByProject' _renameAnnotations' _cancellationToken);                      }                  }
Magic Number,Microsoft.CodeAnalysis.Rename.ConflictEngine,Session,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Rename\ConflictEngine\ConflictResolver.Session.cs,ResolveConflictsAsync,The following statement contains a magic number: foreach (var documentsByProject in documentsGroupedByTopologicallySortedProjectId)                  {                      var documentIdsThatGetsAnnotatedAndRenamed = new HashSet<DocumentId>(documentsByProject);                      using (baseSolution.Services.CacheService?.EnableCaching(documentsByProject.Key))                      {                          // Rename is going to be in 4 phases.                          // 1st phase - Does a simple token replacement                          // If the 1st phase results in conflict then we perform then:                          //      2nd phase is to expand and simplify only the reference locations with conflicts                          //      3rd phase is to expand and simplify all the conflict locations (both reference and non-reference)                          // If there are unresolved Conflicts after the 3rd phase then in 4th phase'                           //      We complexify and resolve locations that were resolvable and for the other locations we perform the normal token replacement like the first the phase.                          for (int phase = 0; phase < 4; phase++)                          {                              // Step 1:                              // The rename process and annotation for the bookkeeping is performed in one-step                              // The Process in short is'                              // 1. If renaming a token which is no conflict then replace the token and make a map of the oldspan to the newspan                              // 2. If we encounter a node that has to be expanded( because there was a conflict in previous phase)' we expand it.                              //    If the node happens to contain a token that needs to be renamed then we annotate it and rename it after expansion else just expand and proceed                              // 3. Through the whole process we maintain a map of the oldspan to newspan. In case of expansion & rename' we map the expanded node and the renamed token                              conflictResolution.UpdateCurrentSolution(await AnnotateAndRename_WorkerAsync(                                  baseSolution'                                  conflictResolution.NewSolution'                                  documentIdsThatGetsAnnotatedAndRenamed'                                  _renameLocationSet.Locations'                                  renamedSpansTracker'                                  _replacementTextValid).ConfigureAwait(false));                                // Step 2: Check for conflicts in the renamed solution                              bool foundResolvableConflicts = await IdentifyConflictsAsync(                                          documentIdsThatGetsAnnotatedAndRenamed'                                          documentsByProject.Key'                                          conflictResolution).ConfigureAwait(false);                                if (!foundResolvableConflicts || phase == 3)                              {                                  break;                              }                                if (phase == 0)                              {                                  _conflictLocations = conflictResolution.RelatedLocations                                      .Where(loc => (documentIdsThatGetsAnnotatedAndRenamed.Contains(loc.DocumentId) && loc.Type == RelatedLocationType.PossibilyResolvableConflict && loc.IsReference))                                      .Select(loc => new ConflictLocationInfo(loc))                                      .ToSet();                                    // If there were no conflicting locations in references' then the first conflict phase has to be skipped.                                  if (_conflictLocations.Count == 0)                                  {                                      phase++;                                  }                              }                                if (phase == 1)                              {                                  _conflictLocations = _conflictLocations.Concat(conflictResolution.RelatedLocations                                      .Where(loc => documentIdsThatGetsAnnotatedAndRenamed.Contains(loc.DocumentId) && loc.Type == RelatedLocationType.PossibilyResolvableConflict)                                      .Select(loc => new ConflictLocationInfo(loc)))                                      .ToSet();                              }                                // Set the documents with conflicts that need to be processed in the next phase.                              // Note that we need to get the conflictLocations here since we're going to remove some locations below if phase == 2                              documentIdsThatGetsAnnotatedAndRenamed = new HashSet<DocumentId>(_conflictLocations.Select(l => l.DocumentId));                                if (phase == 2)                              {                                  // After phase 2' if there are still conflicts then remove the conflict locations from being expanded                                  var unresolvedLocations = conflictResolution.RelatedLocations                                      .Where(l => (l.Type & RelatedLocationType.UnresolvedConflict) != 0)                                      .Select(l => Tuple.Create(l.ComplexifiedTargetSpan' l.DocumentId)).Distinct();                                    _conflictLocations = _conflictLocations.Where(l => !unresolvedLocations.Any(c => c.Item2 == l.DocumentId && c.Item1.Contains(l.OriginalIdentifierSpan))).ToSet();                              }                                // Clean up side effects from rename before entering the next phase                              conflictResolution.ClearDocuments(documentIdsThatGetsAnnotatedAndRenamed);                          }                            // Step 3: Simplify the project                          conflictResolution.UpdateCurrentSolution(await renamedSpansTracker.SimplifyAsync(conflictResolution.NewSolution' documentsByProject' _replacementTextValid' _renameAnnotations' _cancellationToken).ConfigureAwait(false));                          conflictResolution.RemoveAllRenameAnnotations(documentsByProject' _renameAnnotations' _cancellationToken);                      }                  }
Magic Number,Microsoft.CodeAnalysis.Shared.Collections,IntervalTree<T>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Collections\IntervalTree`1.cs,Balance,The following statement contains a magic number: if (balanceFactor == -2)              {                  int rightBalance = BalanceFactor(node.Right);                  if (rightBalance == -1)                  {                      return node.LeftRotation(inPlace' introspector);                  }                  else                  {                      Contract.Requires(rightBalance == 1);                      return node.InnerRightOuterLeftRotation(inPlace' introspector);                  }              }              else if (balanceFactor == 2)              {                  int leftBalance = BalanceFactor(node.Left);                  if (leftBalance == 1)                  {                      return node.RightRotation(inPlace' introspector);                  }                  else                  {                      Contract.Requires(leftBalance == -1);                      return node.InnerLeftOuterRightRotation(inPlace' introspector);                  }              }
Magic Number,Microsoft.CodeAnalysis.Shared.Collections,IntervalTree<T>,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Collections\IntervalTree`1.cs,Balance,The following statement contains a magic number: if (balanceFactor == -2)              {                  int rightBalance = BalanceFactor(node.Right);                  if (rightBalance == -1)                  {                      return node.LeftRotation(inPlace' introspector);                  }                  else                  {                      Contract.Requires(rightBalance == 1);                      return node.InnerRightOuterLeftRotation(inPlace' introspector);                  }              }              else if (balanceFactor == 2)              {                  int leftBalance = BalanceFactor(node.Left);                  if (leftBalance == 1)                  {                      return node.RightRotation(inPlace' introspector);                  }                  else                  {                      Contract.Requires(leftBalance == -1);                      return node.InnerLeftOuterRightRotation(inPlace' introspector);                  }              }
Magic Number,Roslyn.Collections.Immutable,ListBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,ListBucket,The following statement contains a magic number: Contract.Requires(buckets.Length >= 2);
Magic Number,Roslyn.Collections.Immutable,ListBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,Remove,The following statement contains a magic number: if (this.Hash == hash)                  {                      int pos = this.Find(key' comparer);                      if (pos >= 0)                      {                          if (_buckets.Length == 1)                          {                              return null;                          }                          else if (_buckets.Length == 2)                          {                              return pos == 0 ? _buckets[1] : _buckets[0];                          }                          else                          {                              return new ListBucket(_buckets.RemoveAt(pos));                          }                      }                  }
Magic Number,Roslyn.Collections.Immutable,HashBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,HashBucket,The following statement contains a magic number: _hashRoll = hashRoll & 31;
Magic Number,Roslyn.Collections.Immutable,HashBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,HashBucket,The following statement contains a magic number: for (int i = 0; i < 32; i++)                  {                      _hashRoll = (suggestedHashRoll + i) & 31;                      s1 = this.ComputeLogicalSlot(h1);                      s2 = this.ComputeLogicalSlot(h2);                      if (s1 != s2)                      {                          _count = 2;                          _used = (1u << s1) | (1u << s2);                          _buckets = new Bucket[2];                          _buckets[this.ComputePhysicalSlot(s1)] = bucket1;                          _buckets[this.ComputePhysicalSlot(s2)] = bucket2;                          return;                      }                  }
Magic Number,Roslyn.Collections.Immutable,HashBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,HashBucket,The following statement contains a magic number: for (int i = 0; i < 32; i++)                  {                      _hashRoll = (suggestedHashRoll + i) & 31;                      s1 = this.ComputeLogicalSlot(h1);                      s2 = this.ComputeLogicalSlot(h2);                      if (s1 != s2)                      {                          _count = 2;                          _used = (1u << s1) | (1u << s2);                          _buckets = new Bucket[2];                          _buckets[this.ComputePhysicalSlot(s1)] = bucket1;                          _buckets[this.ComputePhysicalSlot(s2)] = bucket2;                          return;                      }                  }
Magic Number,Roslyn.Collections.Immutable,HashBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,HashBucket,The following statement contains a magic number: for (int i = 0; i < 32; i++)                  {                      _hashRoll = (suggestedHashRoll + i) & 31;                      s1 = this.ComputeLogicalSlot(h1);                      s2 = this.ComputeLogicalSlot(h2);                      if (s1 != s2)                      {                          _count = 2;                          _used = (1u << s1) | (1u << s2);                          _buckets = new Bucket[2];                          _buckets[this.ComputePhysicalSlot(s1)] = bucket1;                          _buckets[this.ComputePhysicalSlot(s2)] = bucket2;                          return;                      }                  }
Magic Number,Roslyn.Collections.Immutable,HashBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,HashBucket,The following statement contains a magic number: for (int i = 0; i < 32; i++)                  {                      _hashRoll = (suggestedHashRoll + i) & 31;                      s1 = this.ComputeLogicalSlot(h1);                      s2 = this.ComputeLogicalSlot(h2);                      if (s1 != s2)                      {                          _count = 2;                          _used = (1u << s1) | (1u << s2);                          _buckets = new Bucket[2];                          _buckets[this.ComputePhysicalSlot(s1)] = bucket1;                          _buckets[this.ComputePhysicalSlot(s2)] = bucket2;                          return;                      }                  }
Magic Number,Roslyn.Collections.Immutable,HashBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,Add,The following statement contains a magic number: if (IsInUse(logicalSlot))                  {                      // if this slot is in use' then add the new item to the one in this slot                      int physicalSlot = ComputePhysicalSlot(logicalSlot);                      var existing = _buckets[physicalSlot];                        // suggest hash roll that will cause any nested hash bucket to use entirely new bits for picking logical slot                      // note: we ignore passed in suggestion' and base new suggestion off current hash roll.                      var added = existing.Add(_hashRoll + 5' bucket' keyComparer' valueComparer' overwriteExistingValue);                      if (added != existing)                      {                          var newBuckets = _buckets.ReplaceAt(physicalSlot' added);                          return new HashBucket(_hashRoll' _used' newBuckets' _count - existing.Count + added.Count);                      }                      else                      {                          return this;                      }                  }                  else                  {                      int physicalSlot = ComputePhysicalSlot(logicalSlot);                      var newBuckets = _buckets.InsertAt(physicalSlot' bucket);                      var newUsed = InsertBit(logicalSlot' _used);                      return new HashBucket(_hashRoll' newUsed' newBuckets' _count + bucket.Count);                  }
Magic Number,Roslyn.Collections.Immutable,HashBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,Remove,The following statement contains a magic number: if (IsInUse(logicalSlot))                  {                      int physicalSlot = ComputePhysicalSlot(logicalSlot);                      var existing = _buckets[physicalSlot];                      Bucket result = existing.Remove(hash' key' comparer);                      if (result == null)                      {                          if (_buckets.Length == 1)                          {                              return null;                          }                          else if (_buckets.Length == 2)                          {                              return physicalSlot == 0 ? _buckets[1] : _buckets[0];                          }                          else                          {                              return new HashBucket(_hashRoll' RemoveBit(logicalSlot' _used)' _buckets.RemoveAt(physicalSlot)' _count - existing.Count);                          }                      }                      else if (_buckets[physicalSlot] != result)                      {                          return new HashBucket(_hashRoll' _used' _buckets.ReplaceAt(physicalSlot' result)' _count - existing.Count + result.Count);                      }                  }
Magic Number,Roslyn.Collections.Immutable,HashBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,ComputeLogicalSlot,The following statement contains a magic number: return unchecked((int)(rotated & 31));
Magic Number,Roslyn.Collections.Immutable,HashBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,RotateRight,The following statement contains a magic number: Contract.Requires(n >= 0 && n < 32);
Magic Number,Roslyn.Collections.Immutable,HashBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,RotateRight,The following statement contains a magic number: return v >> n | (v << (32 - n));
Magic Number,Roslyn.Collections.Immutable,HashBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,ComputePhysicalSlot,The following statement contains a magic number: Contract.Requires(logicalSlot >= 0 && logicalSlot < 32);
Magic Number,Roslyn.Collections.Immutable,HashBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,ComputePhysicalSlot,The following statement contains a magic number: if (_buckets.Length == 32)                  {                      return logicalSlot;                  }
Magic Number,Roslyn.Collections.Immutable,HashBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,ComputePhysicalSlot,The following statement contains a magic number: uint mask = uint.MaxValue >> (32 - logicalSlot);
Magic Number,Roslyn.Collections.Immutable,HashBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,CountBits,The following statement contains a magic number: unchecked                  {                      v = v - ((v >> 1) & 0x55555555u);                      v = (v & 0x33333333u) + ((v >> 2) & 0x33333333u);                      return (int)((v + (v >> 4) & 0xF0F0F0Fu) * 0x1010101u) >> 24;                  }
Magic Number,Roslyn.Collections.Immutable,HashBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,CountBits,The following statement contains a magic number: unchecked                  {                      v = v - ((v >> 1) & 0x55555555u);                      v = (v & 0x33333333u) + ((v >> 2) & 0x33333333u);                      return (int)((v + (v >> 4) & 0xF0F0F0Fu) * 0x1010101u) >> 24;                  }
Magic Number,Roslyn.Collections.Immutable,HashBucket,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Utilities\CompilerUtilities\ImmutableHashMap.cs,CountBits,The following statement contains a magic number: unchecked                  {                      v = v - ((v >> 1) & 0x55555555u);                      v = (v & 0x33333333u) + ((v >> 2) & 0x33333333u);                      return (int)((v + (v >> 4) & 0xF0F0F0Fu) * 0x1010101u) >> 24;                  }
Magic Number,Microsoft.CodeAnalysis.Collections,PooledDictionary<K;V>,C:\repos\mono_roslyn\src\Compilers\Core\SharedCollections\PooledDictionary.cs,CreatePool,The following statement contains a magic number: pool = new ObjectPool<PooledDictionary<K' V>>(() => new PooledDictionary<K' V>(pool)' 128);
Magic Number,Microsoft.CodeAnalysis.Collections,PooledHashSet<T>,C:\repos\mono_roslyn\src\Compilers\Core\SharedCollections\PooledHashSet.cs,CreatePool,The following statement contains a magic number: pool = new ObjectPool<PooledHashSet<T>>(() => new PooledHashSet<T>(pool)' 128);
Missing Default,Microsoft.CodeAnalysis,Parser,C:\repos\mono_roslyn\src\Compilers\Core\Portable\InternalUtilities\DocumentationCommentId.cs,ParseDeclaredId,The following switch statement is missing a default case: switch (kind)                      {                          case SymbolKind.Method:                              GetMatchingMethods(id' ref index' containers' name' arity' compilation' results);                              break;                          case SymbolKind.NamedType:                              GetMatchingTypes(containers' name' arity' results);                              break;                          case SymbolKind.Property:                              GetMatchingProperties(id' ref index' containers' name' compilation' results);                              break;                          case SymbolKind.Event:                              GetMatchingEvents(containers' name' results);                              break;                          case SymbolKind.Field:                              GetMatchingFields(containers' name' results);                              break;                          case SymbolKind.Namespace:                              GetMatchingNamespaces(containers' name' results);                              break;                      }
Missing Default,Microsoft.CodeAnalysis,NamespaceSymbolKey,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\SymbolId\SymbolKey.NamespaceSymbolKey.cs,DetermineContainerKey,The following switch statement is missing a default case: switch (symbol.NamespaceKind)                      {                          case NamespaceKind.Module:                              return GetOrCreate(symbol.ContainingModule' visitor);                          case NamespaceKind.Assembly:                              return GetOrCreate(symbol.ContainingAssembly' visitor);                          case NamespaceKind.Compilation:                              // Store nothing in this case.                              break;                      }
Missing Default,Microsoft.CodeAnalysis.CodeFixes,FixAllLogger,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllLogger.cs,LogContext,The following switch statement is missing a default case: switch (fixAllContext.Scope)                  {                      case CodeFixes.FixAllScope.Project:                          m[s_documentCount] = fixAllContext.Project.DocumentIds.Count;                          break;                        case CodeFixes.FixAllScope.Solution:                          m[s_documentCount] = fixAllContext.Solution.Projects.Sum(p => p.DocumentIds.Count);                          break;                  }
Missing Default,Microsoft.CodeAnalysis.CodeFixes,BatchFixAllProvider,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\BatchFixAllProvider.cs,GetDocumentDiagnosticsToFixAsync,The following switch statement is missing a default case: switch (fixAllContext.Scope)                  {                      case FixAllScope.Document:                          if (document != null && !generatedCodeServices.IsGeneratedCode(document))                          {                              var diagnostics = await fixAllContext.GetDocumentDiagnosticsAsync(document).ConfigureAwait(false);                              var kvp = SpecializedCollections.SingletonEnumerable(KeyValuePair.Create(document' diagnostics));                              return ImmutableDictionary.CreateRange(kvp);                          }                            break;                        case FixAllScope.Project:                          documentsToFix = project.Documents;                          break;                        case FixAllScope.Solution:                          documentsToFix = project.Solution.Projects                              .Where(p => p.Language == project.Language)                              .SelectMany(p => p.Documents);                          break;                  }
Missing Default,Microsoft.CodeAnalysis.CodeFixes,BatchFixAllProvider,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\BatchFixAllProvider.cs,GetProjectDiagnosticsToFixAsync,The following switch statement is missing a default case: switch (fixAllContext.Scope)                      {                          case FixAllScope.Project:                              var diagnostics = await fixAllContext.GetProjectDiagnosticsAsync(project).ConfigureAwait(false);                              var kvp = SpecializedCollections.SingletonEnumerable(KeyValuePair.Create(project' diagnostics));                              return ImmutableDictionary.CreateRange(kvp);                            case FixAllScope.Solution:                              var projectsAndDiagnostics = new ConcurrentDictionary<Project' ImmutableArray<Diagnostic>>();                              var options = new ParallelOptions() { CancellationToken = fixAllContext.CancellationToken };                              Parallel.ForEach(project.Solution.Projects' options' proj =>                              {                                  fixAllContext.CancellationToken.ThrowIfCancellationRequested();                                  var projectDiagnostics = fixAllContext.GetProjectDiagnosticsAsync(proj).WaitAndGetResult(fixAllContext.CancellationToken);                                  if (projectDiagnostics.Any())                                  {                                      projectsAndDiagnostics.TryAdd(proj' projectDiagnostics);                                  }                              });                                return projectsAndDiagnostics.ToImmutableDictionary();                      }
Missing Default,Microsoft.CodeAnalysis.CodeGeneration,AbstractImportsAdder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\AbstractImportsAdder.cs,IsBuiltIn,The following switch statement is missing a default case: switch (type.OriginalDefinition.SpecialType)              {                  case Microsoft.CodeAnalysis.SpecialType.System_Object:                  case Microsoft.CodeAnalysis.SpecialType.System_Void:                  case Microsoft.CodeAnalysis.SpecialType.System_Boolean:                  case Microsoft.CodeAnalysis.SpecialType.System_Char:                  case Microsoft.CodeAnalysis.SpecialType.System_SByte:                  case Microsoft.CodeAnalysis.SpecialType.System_Byte:                  case Microsoft.CodeAnalysis.SpecialType.System_Int16:                  case Microsoft.CodeAnalysis.SpecialType.System_UInt16:                  case Microsoft.CodeAnalysis.SpecialType.System_Int32:                  case Microsoft.CodeAnalysis.SpecialType.System_UInt32:                  case Microsoft.CodeAnalysis.SpecialType.System_Int64:                  case Microsoft.CodeAnalysis.SpecialType.System_UInt64:                  case Microsoft.CodeAnalysis.SpecialType.System_Decimal:                  case Microsoft.CodeAnalysis.SpecialType.System_Single:                  case Microsoft.CodeAnalysis.SpecialType.System_Double:                  case Microsoft.CodeAnalysis.SpecialType.System_String:                  case Microsoft.CodeAnalysis.SpecialType.System_Nullable_T:                      return true;              }
Missing Default,Microsoft.CodeAnalysis.CodeGeneration,CodeGenerationHelpers,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\CodeGeneration\CodeGenerationHelpers.cs,TypesMatch,The following switch statement is missing a default case: switch (type.SpecialType)                  {                      case SpecialType.System_SByte:                          return value is sbyte;                      case SpecialType.System_Byte:                          return value is byte;                      case SpecialType.System_Int16:                          return value is short;                      case SpecialType.System_UInt16:                          return value is ushort;                      case SpecialType.System_Int32:                          return value is int;                      case SpecialType.System_UInt32:                          return value is uint;                      case SpecialType.System_Int64:                          return value is long;                      case SpecialType.System_UInt64:                          return value is ulong;                      case SpecialType.System_Decimal:                          return value is decimal;                      case SpecialType.System_Single:                          return value is float;                      case SpecialType.System_Double:                          return value is double;                  }
Missing Default,Microsoft.CodeAnalysis.Editing,SyntaxGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SyntaxGenerator.cs,Declaration,The following switch statement is missing a default case: switch (symbol.Kind)              {                  case SymbolKind.Field:                      return FieldDeclaration((IFieldSymbol)symbol);                    case SymbolKind.Property:                      var property = (IPropertySymbol)symbol;                      if (property.IsIndexer)                      {                          return IndexerDeclaration(property);                      }                      else                      {                          return PropertyDeclaration(property);                      }                    case SymbolKind.Event:                      var ev = (IEventSymbol)symbol;                      if (ev.IsAbstract || ev.IsVirtual || ev.AddMethod != null || ev.RemoveMethod != null)                      {                          return CustomEventDeclaration(ev);                      }                      else                      {                          return EventDeclaration(ev);                      }                    case SymbolKind.Method:                      var method = (IMethodSymbol)symbol;                      switch (method.MethodKind)                      {                          case MethodKind.Constructor:                          case MethodKind.SharedConstructor:                              return ConstructorDeclaration(method);                            case MethodKind.Ordinary:                              return MethodDeclaration(method);                      }                        break;                    case SymbolKind.Parameter:                      return ParameterDeclaration((IParameterSymbol)symbol);                    case SymbolKind.NamedType:                      var type = (INamedTypeSymbol)symbol;                      SyntaxNode declaration = null;                        switch (type.TypeKind)                      {                          case TypeKind.Class:                              declaration = ClassDeclaration(                                  type.Name'                                  accessibility: type.DeclaredAccessibility'                                  modifiers: DeclarationModifiers.From(type)'                                  baseType: TypeExpression(type.BaseType)'                                  interfaceTypes: type.Interfaces != null ? type.Interfaces.Select(i => TypeExpression(i)) : null'                                  members: type.GetMembers().Select(m => Declaration(m)));                              break;                          case TypeKind.Struct:                              declaration = StructDeclaration(                                  type.Name'                                  accessibility: type.DeclaredAccessibility'                                  modifiers: DeclarationModifiers.From(type)'                                  interfaceTypes: type.Interfaces != null ? type.Interfaces.Select(i => TypeExpression(i)) : null'                                  members: type.GetMembers().Select(m => Declaration(m)));                              break;                          case TypeKind.Interface:                              declaration = InterfaceDeclaration(                                  type.Name'                                  accessibility: type.DeclaredAccessibility'                                  interfaceTypes: type.Interfaces != null ? type.Interfaces.Select(i => TypeExpression(i)) : null'                                  members: type.GetMembers().Select(m => Declaration(m)));                              break;                          case TypeKind.Enum:                              declaration = EnumDeclaration(                                  type.Name'                                  accessibility: type.DeclaredAccessibility'                                  members: type.GetMembers().Select(m => Declaration(m)));                              break;                          case TypeKind.Delegate:                              var invoke = type.GetMembers("Invoke").First() as IMethodSymbol;                                declaration = DelegateDeclaration(                                  type.Name'                                  parameters: invoke.Parameters.Select(p => ParameterDeclaration(p))'                                  returnType: TypeExpression(invoke.ReturnType)'                                  accessibility: type.DeclaredAccessibility'                                  modifiers: DeclarationModifiers.From(type));                              break;                      }                        if (declaration != null)                      {                          return WithTypeParametersAndConstraints(declaration' type.TypeParameters);                      }                        break;              }
Missing Default,Microsoft.CodeAnalysis.Editing,SyntaxGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SyntaxGenerator.cs,Declaration,The following switch statement is missing a default case: switch (method.MethodKind)                      {                          case MethodKind.Constructor:                          case MethodKind.SharedConstructor:                              return ConstructorDeclaration(method);                            case MethodKind.Ordinary:                              return MethodDeclaration(method);                      }
Missing Default,Microsoft.CodeAnalysis.Editing,SyntaxGenerator,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Editing\SyntaxGenerator.cs,Declaration,The following switch statement is missing a default case: switch (type.TypeKind)                      {                          case TypeKind.Class:                              declaration = ClassDeclaration(                                  type.Name'                                  accessibility: type.DeclaredAccessibility'                                  modifiers: DeclarationModifiers.From(type)'                                  baseType: TypeExpression(type.BaseType)'                                  interfaceTypes: type.Interfaces != null ? type.Interfaces.Select(i => TypeExpression(i)) : null'                                  members: type.GetMembers().Select(m => Declaration(m)));                              break;                          case TypeKind.Struct:                              declaration = StructDeclaration(                                  type.Name'                                  accessibility: type.DeclaredAccessibility'                                  modifiers: DeclarationModifiers.From(type)'                                  interfaceTypes: type.Interfaces != null ? type.Interfaces.Select(i => TypeExpression(i)) : null'                                  members: type.GetMembers().Select(m => Declaration(m)));                              break;                          case TypeKind.Interface:                              declaration = InterfaceDeclaration(                                  type.Name'                                  accessibility: type.DeclaredAccessibility'                                  interfaceTypes: type.Interfaces != null ? type.Interfaces.Select(i => TypeExpression(i)) : null'                                  members: type.GetMembers().Select(m => Declaration(m)));                              break;                          case TypeKind.Enum:                              declaration = EnumDeclaration(                                  type.Name'                                  accessibility: type.DeclaredAccessibility'                                  members: type.GetMembers().Select(m => Declaration(m)));                              break;                          case TypeKind.Delegate:                              var invoke = type.GetMembers("Invoke").First() as IMethodSymbol;                                declaration = DelegateDeclaration(                                  type.Name'                                  parameters: invoke.Parameters.Select(p => ParameterDeclaration(p))'                                  returnType: TypeExpression(invoke.ReturnType)'                                  accessibility: type.DeclaredAccessibility'                                  modifiers: DeclarationModifiers.From(type));                              break;                      }
Missing Default,Microsoft.CodeAnalysis.Differencing,SequenceEdit,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Differencing\SequenceEdit.cs,GetDebuggerDisplay,The following switch statement is missing a default case: switch (Kind)              {                  case EditKind.Delete:                      return result + " (" + _oldIndex + ")";                    case EditKind.Insert:                      return result + " (" + _newIndex + ")";                    case EditKind.Update:                      return result + " (" + _oldIndex + " -> " + _newIndex + ")";              }
Missing Default,Microsoft.CodeAnalysis.Differencing,Edit,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Differencing\Edit.cs,GetDebuggerDisplay,The following switch statement is missing a default case: switch (Kind)              {                  case EditKind.Delete:                      return result + " [" + _oldNode.ToString() + "]" + DisplayPosition(_oldNode);                    case EditKind.Insert:                      return result + " [" + _newNode.ToString() + "]" + DisplayPosition(_newNode);                    case EditKind.Update:                      return result + " [" + _oldNode.ToString() + "]" + DisplayPosition(_oldNode) + " -> [" + _newNode.ToString() + "]" + DisplayPosition(_newNode);                    case EditKind.Move:                  case EditKind.Reorder:                      return result + " [" + _oldNode.ToString() + "]" + DisplayPosition(_oldNode) + " -> " + DisplayPosition(_newNode);              }
Missing Default,Microsoft.CodeAnalysis.FindSymbols,DependentProjectsFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\FindReferences\DependentProjectsFinder.cs,FilterDependentProjectsByVisibility,The following switch statement is missing a default case: switch (visibility)              {                  case SymbolVisibility.Internal:                      // Retain dependent projects that have internals access.                      dependentProjects = dependentProjects.Where(dp => dp.HasInternalsAccess);                      break;              }
Missing Default,Microsoft.CodeAnalysis.FindSymbols,SymbolFinder,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\FindSymbols\SymbolFinder.cs,FindSourceDefinitionAsync,The following switch statement is missing a default case: switch (symbol.Kind)                  {                      case SymbolKind.Event:                      case SymbolKind.Field:                      case SymbolKind.Method:                      case SymbolKind.Local:                      case SymbolKind.NamedType:                      case SymbolKind.Parameter:                      case SymbolKind.Property:                      case SymbolKind.TypeParameter:                      case SymbolKind.Namespace:                          return FindSourceDefinitionWorkerAsync(symbol' solution' cancellationToken);                  }
Missing Default,Microsoft.CodeAnalysis.Shared.Extensions,ITypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,IsUnexpressableTypeParameterConstraint,The following switch statement is missing a default case: switch (typeSymbol.TypeKind)              {                  case TypeKind.Array:                  case TypeKind.Delegate:                      return true;              }
Missing Default,Microsoft.CodeAnalysis.Shared.Extensions,ITypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,IsUnexpressableTypeParameterConstraint,The following switch statement is missing a default case: switch (typeSymbol.SpecialType)              {                  case SpecialType.System_Array:                  case SpecialType.System_Delegate:                  case SpecialType.System_MulticastDelegate:                  case SpecialType.System_Enum:                  case SpecialType.System_ValueType:                      return true;              }
Missing Default,Microsoft.CodeAnalysis.Shared.Extensions,ITypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,IsNumericType,The following switch statement is missing a default case: switch (type.SpecialType)                  {                      case SpecialType.System_Byte:                      case SpecialType.System_SByte:                      case SpecialType.System_Int16:                      case SpecialType.System_UInt16:                      case SpecialType.System_Int32:                      case SpecialType.System_UInt32:                      case SpecialType.System_Int64:                      case SpecialType.System_UInt64:                      case SpecialType.System_Single:                      case SpecialType.System_Double:                      case SpecialType.System_Decimal:                          return true;                  }
Missing Default,Microsoft.CodeAnalysis.Shared.Extensions,ITypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs,IsSpecialType,The following switch statement is missing a default case: switch (symbol.SpecialType)                  {                      case SpecialType.System_Object:                      case SpecialType.System_Void:                      case SpecialType.System_Boolean:                      case SpecialType.System_SByte:                      case SpecialType.System_Byte:                      case SpecialType.System_Decimal:                      case SpecialType.System_Single:                      case SpecialType.System_Double:                      case SpecialType.System_Int16:                      case SpecialType.System_Int32:                      case SpecialType.System_Int64:                      case SpecialType.System_Char:                      case SpecialType.System_String:                      case SpecialType.System_UInt16:                      case SpecialType.System_UInt32:                      case SpecialType.System_UInt64:                          return true;                  }
Missing Default,Microsoft.CodeAnalysis.Shared.Extensions,IMethodSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\IMethodSymbolExtensions.cs,TryGetPredefinedComparisonOperator,The following switch statement is missing a default case: switch (op)                  {                      case PredefinedOperator.Equality:                      case PredefinedOperator.Inequality:                      case PredefinedOperator.GreaterThanOrEqual:                      case PredefinedOperator.LessThanOrEqual:                      case PredefinedOperator.GreaterThan:                      case PredefinedOperator.LessThan:                          return true;                  }
Missing Default,Microsoft.CodeAnalysis.Shared.Extensions,INamedTypeSymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\INamedTypeSymbolExtensions.cs,IsAttributeNamedParameter,The following switch statement is missing a default case: switch (symbol.Kind)              {                  case SymbolKind.Field:                      var fieldSymbol = (IFieldSymbol)symbol;                      if (!fieldSymbol.IsConst &&                          !fieldSymbol.IsReadOnly &&                          !fieldSymbol.IsStatic)                      {                          return fieldSymbol;                      }                        break;                    case SymbolKind.Property:                      var propertySymbol = (IPropertySymbol)symbol;                      if (!propertySymbol.IsReadOnly &&                          !propertySymbol.IsWriteOnly &&                          !propertySymbol.IsStatic &&                          propertySymbol.GetMethod != null &&                          propertySymbol.SetMethod != null &&                          propertySymbol.GetMethod.IsAccessibleWithin(within) &&                          propertySymbol.SetMethod.IsAccessibleWithin(within))                      {                          return propertySymbol;                      }                        break;              }
Missing Default,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,GetResultantVisibility,The following switch statement is missing a default case: switch (symbol.Kind)              {                  case SymbolKind.Alias:                      // Aliases are uber private.  They're only visible in the same file that they                      // were declared in.                      return SymbolVisibility.Private;                    case SymbolKind.Parameter:                      // Parameters are only as visible as their containing symbol                      return GetResultantVisibility(symbol.ContainingSymbol);                    case SymbolKind.TypeParameter:                      // Type Parameters are private.                      return SymbolVisibility.Private;              }
Missing Default,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,GetResultantVisibility,The following switch statement is missing a default case: switch (symbol.DeclaredAccessibility)                  {                      // If we see anything private' then the symbol is private.                      case Accessibility.NotApplicable:                      case Accessibility.Private:                          return SymbolVisibility.Private;                        // If we see anything internal' then knock it down from public to                      // internal.                      case Accessibility.Internal:                      case Accessibility.ProtectedAndInternal:                          visibility = SymbolVisibility.Internal;                          break;                            // For anything else (Public' Protected' ProtectedOrInternal)' the                          // symbol stays at the level we've gotten so far.                  }
Missing Default,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,OverriddenMember,The following switch statement is missing a default case: switch (symbol.Kind)              {                  case SymbolKind.Event:                      return ((IEventSymbol)symbol).OverriddenEvent;                    case SymbolKind.Method:                      return ((IMethodSymbol)symbol).OverriddenMethod;                    case SymbolKind.Property:                      return ((IPropertySymbol)symbol).OverriddenProperty;              }
Missing Default,Microsoft.CodeAnalysis.Shared.Extensions,ISymbolExtensions,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Extensions\ISymbolExtensions.cs,GetMemberType,The following switch statement is missing a default case: switch (symbol.Kind)              {                  case SymbolKind.Field:                      return ((IFieldSymbol)symbol).Type;                  case SymbolKind.Property:                      return ((IPropertySymbol)symbol).Type;                  case SymbolKind.Method:                      return ((IMethodSymbol)symbol).ReturnType;                  case SymbolKind.Event:                      return ((IEventSymbol)symbol).Type;              }
Missing Default,Microsoft.CodeAnalysis.Shared.Utilities,SignatureComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SignatureComparer.cs,HaveSameSignature,The following switch statement is missing a default case: switch (symbol1.Kind)              {                  case SymbolKind.Method:                      return HaveSameSignature((IMethodSymbol)symbol1' (IMethodSymbol)symbol2' caseSensitive);                  case SymbolKind.Property:                      return HaveSameSignature((IPropertySymbol)symbol1' (IPropertySymbol)symbol2' caseSensitive);                  case SymbolKind.Event:                      return HaveSameSignature((IEventSymbol)symbol1' (IEventSymbol)symbol2' caseSensitive);              }
Missing Default,Microsoft.CodeAnalysis.Shared.Utilities,SignatureComparer,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Shared\Utilities\SignatureComparer.cs,HaveSameSignatureAndConstraintsAndReturnTypeAndAccessors,The following switch statement is missing a default case: switch (symbol1.Kind)              {                  case SymbolKind.Method:                      var method1 = (IMethodSymbol)symbol1;                      var method2 = (IMethodSymbol)symbol2;                        return HaveSameSignatureAndConstraintsAndReturnType(method1' method2);                  case SymbolKind.Property:                      var property1 = (IPropertySymbol)symbol1;                      var property2 = (IPropertySymbol)symbol2;                        return HaveSameReturnType(property1' property2) && HaveSameAccessors(property1' property2);                  case SymbolKind.Event:                      var ev1 = (IEventSymbol)symbol1;                      var ev2 = (IEventSymbol)symbol2;                        return HaveSameReturnType(ev1' ev2);              }
Missing Default,Microsoft.CodeAnalysis.Recommendations,AbstractRecommendationService,C:\repos\mono_roslyn\src\Workspaces\Core\Portable\Recommendations\AbstractRecommendationService.cs,ShouldIncludeSymbol,The following switch statement is missing a default case: switch (symbol.Kind)              {                  case SymbolKind.NamedType:                      var namedType = (INamedTypeSymbol)symbol;                      if (namedType.SpecialType == SpecialType.System_Void)                      {                          return false;                      }                        break;                    case SymbolKind.Method:                      var methodSymbol = (IMethodSymbol)symbol;                      if (methodSymbol.MethodKind == MethodKind.EventAdd ||                          methodSymbol.MethodKind == MethodKind.EventRemove ||                          methodSymbol.MethodKind == MethodKind.EventRaise ||                          methodSymbol.MethodKind == MethodKind.PropertyGet ||                          methodSymbol.MethodKind == MethodKind.PropertySet)                      {                          return false;                      }                        isMember = true;                      break;                    case SymbolKind.Event:                  case SymbolKind.Field:                  case SymbolKind.Property:                      isMember = true;                      break;                    case SymbolKind.TypeParameter:                      return ((ITypeParameterSymbol)symbol).TypeParameterKind != TypeParameterKind.Cref;              }
