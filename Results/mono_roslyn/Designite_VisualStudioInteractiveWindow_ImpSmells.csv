Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Microsoft.VisualStudio.InteractiveWindow.Shell,VsInteractiveWindow,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindow.cs,VsInteractiveWindow,The method has 5 parameters. Parameters: model' providerId' instanceId' title' evaluator
Long Parameter List,Microsoft.VisualStudio.InteractiveWindow.Shell,VsInteractiveWindow,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindow.cs,Exec,The method has 5 parameters. Parameters: pguidCmdGroup' nCmdID' nCmdexecopt' pvaIn' pvaOut
Long Parameter List,Microsoft.VisualStudio.InteractiveWindow.Shell,VsInteractiveWindow,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindow.cs,Find,The method has 5 parameters. Parameters: pszSearch' grfOptions' fResetStartPoint' pHelper' pResult
Long Parameter List,Microsoft.VisualStudio.InteractiveWindow.Shell,VsInteractiveWindow,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindow.cs,Replace,The method has 6 parameters. Parameters: pszSearch' pszReplace' grfOptions' fResetStartPoint' pHelper' pfReplaced
Long Parameter List,Microsoft.VisualStudio.InteractiveWindow.Shell,VsInteractiveWindowCommandFilter,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindowCommandFilter.cs,Exec,The method has 5 parameters. Parameters: pguidCmdGroup' nCmdID' nCmdexecopt' pvaIn' pvaOut
Long Parameter List,Microsoft.VisualStudio.InteractiveWindow.Shell,VsInteractiveWindowCommandFilter,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindowCommandFilter.cs,PreEditorCommandFilterExec,The method has 5 parameters. Parameters: pguidCmdGroup' nCmdID' nCmdexecopt' pvaIn' pvaOut
Long Parameter List,Microsoft.VisualStudio.InteractiveWindow.Shell,VsInteractiveWindowCommandFilter,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindowCommandFilter.cs,PreLanguageCommandFilterExec,The method has 5 parameters. Parameters: pguidCmdGroup' nCmdID' nCmdexecopt' pvaIn' pvaOut
Long Parameter List,Microsoft.VisualStudio.InteractiveWindow.Shell,CommandFilter,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindowCommandFilter.cs,Exec,The method has 5 parameters. Parameters: pguidCmdGroup' nCmdID' nCmdexecopt' pvaIn' pvaOut
Long Identifier,Microsoft.VisualStudio.InteractiveWindow.Shell,Guids,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\Guids.cs,,The length of the parameter InteractiveWindowPackageIdString is 32.
Long Identifier,Microsoft.VisualStudio.InteractiveWindow.Shell,VsInteractiveWindowCommandFilter,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindowCommandFilter.cs,,The length of the parameter firstLanguageServiceCommandFilter is 33.
Long Statement,Microsoft.VisualStudio.InteractiveWindow.Shell,VsInteractiveWindowEditorFactoryService,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindowEditorFactoryService.cs,SetLanguage,The length of the statement  "                var targetFilter = commandFilter.firstLanguageServiceCommandFilter ?? GetCommandFilter(window).EditorServicesCommandFilter; " is 123.
Long Statement,Microsoft.VisualStudio.InteractiveWindow.Shell,VsInteractiveWindow,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindow.cs,OnToolWindowCreated,The length of the statement  "            ErrorHandler.ThrowOnFailure(toolbarHost.AddToolbar(VSTWT_LOCATION.VSTWT_TOP' ref guidInteractiveCmdSet' (uint)MenuIds.InteractiveWindowToolbar)); " is 145.
Long Statement,Microsoft.VisualStudio.InteractiveWindow.Shell,VsInteractiveWindowCommandFilter,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindowCommandFilter.cs,ShowContextMenu,The length of the statement  "                ErrorHandler.ThrowOnFailure(uishell.ShowContextMenu(0' ref guid' (int)MenuIds.InteractiveWindowContextMenu' position' this)); " is 125.
Complex Conditional,Microsoft.VisualStudio.InteractiveWindow.Shell,VsInteractiveWindowCommandFilter,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindowCommandFilter.cs,PreEditorCommandFilterExec,The conditional expression  "_window.CurrentLanguageBuffer != null && !_window.IsRunning && CaretAtEnd && UseSmartUpDown"  is complex.
Complex Conditional,Microsoft.VisualStudio.InteractiveWindow.Shell,VsInteractiveWindowCommandFilter,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindowCommandFilter.cs,PreEditorCommandFilterExec,The conditional expression  "_window.CurrentLanguageBuffer != null && !_window.IsRunning && CaretAtEnd && UseSmartUpDown"  is complex.
Missing Default,Microsoft.VisualStudio.InteractiveWindow.Shell,VsInteractiveWindowCommandFilter,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindowCommandFilter.cs,PreEditorCommandFilterExec,The following switch statement is missing a default case: switch ((CommandIds)nCmdID)                  {                      case CommandIds.BreakLine:                          if (_window.Operations.BreakLine())                          {                              return VSConstants.S_OK;                          }                          break;                  }
Missing Default,Microsoft.VisualStudio.InteractiveWindow.Shell,VsInteractiveWindowCommandFilter,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindowCommandFilter.cs,PreEditorCommandFilterExec,The following switch statement is missing a default case: switch ((VSConstants.VSStd2KCmdID)nCmdID)                  {                      case VSConstants.VSStd2KCmdID.RETURN:                          if (_window.Operations.Return())                          {                              return VSConstants.S_OK;                          }                          break;                        // TODO:                       //case VSConstants.VSStd2KCmdID.DELETEWORDLEFT:                      //case VSConstants.VSStd2KCmdID.DELETEWORDRIGHT:                      //    break;                        case VSConstants.VSStd2KCmdID.BACKSPACE:                          if (_window.Operations.Backspace())                          {                              return VSConstants.S_OK;                          }                          break;                          case VSConstants.VSStd2KCmdID.UP:                            if (_window.CurrentLanguageBuffer != null && !_window.IsRunning && CaretAtEnd && UseSmartUpDown)                          {                              _window.Operations.HistoryPrevious();                              return VSConstants.S_OK;                          }                          break;                        case VSConstants.VSStd2KCmdID.DOWN:                          if (_window.CurrentLanguageBuffer != null && !_window.IsRunning && CaretAtEnd && UseSmartUpDown)                          {                              _window.Operations.HistoryNext();                              return VSConstants.S_OK;                          }                          break;                        case VSConstants.VSStd2KCmdID.CANCEL:                          if (_window.TextView.Selection.IsEmpty)                          {                              _window.Operations.Cancel();                          }                          break;                        case VSConstants.VSStd2KCmdID.BOL:                          _window.Operations.Home(false);                          return VSConstants.S_OK;                        case VSConstants.VSStd2KCmdID.BOL_EXT:                          _window.Operations.Home(true);                          return VSConstants.S_OK;                        case VSConstants.VSStd2KCmdID.EOL:                          _window.Operations.End(false);                          return VSConstants.S_OK;                        case VSConstants.VSStd2KCmdID.EOL_EXT:                          _window.Operations.End(true);                          return VSConstants.S_OK;                  }
Missing Default,Microsoft.VisualStudio.InteractiveWindow.Shell,VsInteractiveWindowCommandFilter,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindowCommandFilter.cs,PreEditorCommandFilterExec,The following switch statement is missing a default case: switch ((VSConstants.VSStd97CmdID)nCmdID)                  {                      case VSConstants.VSStd97CmdID.Paste:                          _window.Operations.Paste();                          return VSConstants.S_OK;                        case VSConstants.VSStd97CmdID.Cut:                          _window.Operations.Cut();                          return VSConstants.S_OK;                        case VSConstants.VSStd97CmdID.Delete:                          if (_window.Operations.Delete())                          {                              return VSConstants.S_OK;                          }                          break;                        case VSConstants.VSStd97CmdID.SelectAll:                          _window.Operations.SelectAll();                          return VSConstants.S_OK;                  }
Missing Default,Microsoft.VisualStudio.InteractiveWindow.Shell,VsInteractiveWindowCommandFilter,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindowCommandFilter.cs,PreLanguageCommandFilterQueryStatus,The following switch statement is missing a default case: switch ((VSConstants.VSStd97CmdID)prgCmds[0].cmdID)                  {                      case VSConstants.VSStd97CmdID.Undo:                      case VSConstants.VSStd97CmdID.MultiLevelUndo:                      case VSConstants.VSStd97CmdID.MultiLevelUndoList:                      case VSConstants.VSStd97CmdID.Redo:                      case VSConstants.VSStd97CmdID.MultiLevelRedo:                      case VSConstants.VSStd97CmdID.MultiLevelRedoList:                          return currentBufferCommandHandler.QueryStatus(ref pguidCmdGroup' cCmds' prgCmds' pCmdText);                  }
Missing Default,Microsoft.VisualStudio.InteractiveWindow.Shell,VsInteractiveWindowCommandFilter,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindowCommandFilter.cs,PreLanguageCommandFilterExec,The following switch statement is missing a default case: switch ((CommandIds)nCmdID)                  {                      case CommandIds.AbortExecution: _window.AbortCommand(); return VSConstants.S_OK;                      case CommandIds.Reset: _window.Operations.ResetAsync(); return VSConstants.S_OK;                      case CommandIds.SmartExecute: _window.Operations.ExecuteInput(); return VSConstants.S_OK;                      case CommandIds.HistoryNext: _window.Operations.HistoryNext(); return VSConstants.S_OK;                      case CommandIds.HistoryPrevious: _window.Operations.HistoryPrevious(); return VSConstants.S_OK;                      case CommandIds.ClearScreen: _window.Operations.ClearView(); return VSConstants.S_OK;                      case CommandIds.SearchHistoryNext:                          _window.Operations.HistorySearchNext();                          return VSConstants.S_OK;                      case CommandIds.SearchHistoryPrevious:                          _window.Operations.HistorySearchPrevious();                          return VSConstants.S_OK;                  }
Missing Default,Microsoft.VisualStudio.InteractiveWindow.Shell,VsInteractiveWindowCommandFilter,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindowCommandFilter.cs,PreLanguageCommandFilterExec,The following switch statement is missing a default case: switch ((VSConstants.VSStd2KCmdID)nCmdID)                  {                      case VSConstants.VSStd2KCmdID.TYPECHAR:                          _window.Operations.Delete();                          break;                        case VSConstants.VSStd2KCmdID.RETURN:                          if (_window.Operations.TrySubmitStandardInput())                          {                              return VSConstants.S_OK;                          }                          break;                      case VSConstants.VSStd2KCmdID.SHOWCONTEXTMENU:                          ShowContextMenu();                          return VSConstants.S_OK;                  }
Missing Default,Microsoft.VisualStudio.InteractiveWindow.Shell,VsInteractiveWindowCommandFilter,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindowCommandFilter.cs,PreLanguageCommandFilterExec,The following switch statement is missing a default case: switch ((VSConstants.VSStd97CmdID)nCmdID)                  {                      case VSConstants.VSStd97CmdID.Undo:                      case VSConstants.VSStd97CmdID.MultiLevelUndo:                      case VSConstants.VSStd97CmdID.MultiLevelUndoList:                      case VSConstants.VSStd97CmdID.Redo:                      case VSConstants.VSStd97CmdID.MultiLevelRedo:                      case VSConstants.VSStd97CmdID.MultiLevelRedoList:                          return currentBufferCommandHandler.Exec(ref pguidCmdGroup' nCmdID' nCmdexecopt' pvaIn' pvaOut);                  }
Missing Default,Microsoft.VisualStudio.InteractiveWindow.Shell,CommandFilter,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindowCommandFilter.cs,QueryStatus,The following switch statement is missing a default case: switch (_layer)                  {                      case CommandFilterLayer.PreLanguage:                          return _window.PreLanguageCommandFilterQueryStatus(ref pguidCmdGroup' cCmds' prgCmds' pCmdText);                        case CommandFilterLayer.PreEditor:                          return _window.PreEditorCommandFilterQueryStatus(ref pguidCmdGroup' cCmds' prgCmds' pCmdText);                  }
Missing Default,Microsoft.VisualStudio.InteractiveWindow.Shell,CommandFilter,C:\repos\mono_roslyn\src\InteractiveWindow\VisualStudio\VsInteractiveWindowCommandFilter.cs,Exec,The following switch statement is missing a default case: switch (_layer)                  {                      case CommandFilterLayer.PreLanguage:                          return _window.PreLanguageCommandFilterExec(ref pguidCmdGroup' nCmdID' nCmdexecopt' pvaIn' pvaOut);                        case CommandFilterLayer.PreEditor:                          return _window.PreEditorCommandFilterExec(ref pguidCmdGroup' nCmdID' nCmdexecopt' pvaIn' pvaOut);                  }
