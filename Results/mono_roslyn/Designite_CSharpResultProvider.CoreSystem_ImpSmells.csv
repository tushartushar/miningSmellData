Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.CodeAnalysis.CSharp,SyntaxFacts,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\Parser\CharacterInfo.cs,GetKeywordKind,The method has 169 lines of code.
Long Method,Microsoft.CodeAnalysis.CSharp,SyntaxFacts,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\Parser\CharacterInfo.cs,GetText,The method has 396 lines of code.
Complex Method,Microsoft.CodeAnalysis.CSharp,SyntaxFacts,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\Parser\CharacterInfo.cs,GetPrefixUnaryExpression,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.CodeAnalysis.CSharp,SyntaxFacts,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\Parser\CharacterInfo.cs,GetPrimaryFunction,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.CodeAnalysis.CSharp,SyntaxFacts,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\Parser\CharacterInfo.cs,GetLiteralExpression,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis.CSharp,SyntaxFacts,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\Parser\CharacterInfo.cs,GetBinaryExpression,Cyclomatic complexity of the method is 22
Complex Method,Microsoft.CodeAnalysis.CSharp,SyntaxFacts,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\Parser\CharacterInfo.cs,GetAssignmentExpression,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.CodeAnalysis.CSharp,SyntaxFacts,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\Parser\CharacterInfo.cs,GetKeywordKind,Cyclomatic complexity of the method is 82
Complex Method,Microsoft.CodeAnalysis.CSharp,SyntaxFacts,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\Parser\CharacterInfo.cs,GetOperatorKind,Cyclomatic complexity of the method is 27
Complex Method,Microsoft.CodeAnalysis.CSharp,SyntaxFacts,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\Parser\CharacterInfo.cs,GetPreprocessorKeywordKind,Cyclomatic complexity of the method is 21
Complex Method,Microsoft.CodeAnalysis.CSharp,SyntaxFacts,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\Parser\CharacterInfo.cs,GetContextualKeywordKind,Cyclomatic complexity of the method is 34
Complex Method,Microsoft.CodeAnalysis.CSharp,SyntaxFacts,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\Parser\CharacterInfo.cs,GetText,Cyclomatic complexity of the method is 194
Complex Method,Microsoft.CodeAnalysis.CSharp,ObjectDisplay,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\SymbolDisplay\ObjectDisplay.cs,FormatPrimitive,Cyclomatic complexity of the method is 17
Complex Method,Microsoft.CodeAnalysis.CSharp,ObjectDisplay,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\SymbolDisplay\ObjectDisplay.cs,FormatString,Cyclomatic complexity of the method is 19
Complex Method,Microsoft.CodeAnalysis.CSharp.ExpressionEvaluator,CSharpFormatter,C:\research\architectureSmells\repos\mono_roslyn\src\ExpressionEvaluator\CSharp\Source\ResultProvider\CSharpFormatter.TypeNames.cs,RemoveComments,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis.CSharp.ExpressionEvaluator,TypeExtensions,C:\research\architectureSmells\repos\mono_roslyn\src\ExpressionEvaluator\CSharp\Source\ResultProvider\Helpers\TypeExtensions.cs,GetPredefinedTypeName,Cyclomatic complexity of the method is 18
Long Parameter List,Microsoft.CodeAnalysis.CSharp.ExpressionEvaluator,CSharpFormatter,C:\research\architectureSmells\repos\mono_roslyn\src\ExpressionEvaluator\CSharp\Source\ResultProvider\CSharpFormatter.TypeNames.cs,AppendGenericTypeArgumentList,The method has 5 parameters. Parameters: builder' typeArguments' typeArgumentOffset' arity' escapeKeywordIdentifiers
Long Parameter List,Microsoft.CodeAnalysis.CSharp.ExpressionEvaluator,CSharpFormatter,C:\research\architectureSmells\repos\mono_roslyn\src\ExpressionEvaluator\CSharp\Source\ResultProvider\CSharpFormatter.TypeNames.cs,GetNamesForFlagsEnumValue,The method has 5 parameters. Parameters: fields' value' underlyingValue' options' typeToDisplayOpt
Long Parameter List,Microsoft.CodeAnalysis.CSharp.ExpressionEvaluator,CSharpFormatter,C:\research\architectureSmells\repos\mono_roslyn\src\ExpressionEvaluator\CSharp\Source\ResultProvider\CSharpFormatter.TypeNames.cs,GetNameForEnumValue,The method has 5 parameters. Parameters: fields' value' underlyingValue' options' typeToDisplayOpt
Long Statement,Microsoft.CodeAnalysis.CSharp,ObjectDisplay,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\SymbolDisplay\ObjectDisplay.cs,FormatLiteral,The length of the statement  "            return FormatString(value' options.IncludesOption(ObjectDisplayOptions.UseQuotes) ? '"' : '\0'' escapeNonPrintable: true); " is 122.
Long Statement,Microsoft.CodeAnalysis.CSharp,ObjectDisplay,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\SymbolDisplay\ObjectDisplay.cs,FormatLiteral,The length of the statement  "                var codepoint = options.IncludesOption(ObjectDisplayOptions.UseHexadecimalNumbers) ? "0x" + ((int)c).ToString("x4") : ((int)c).ToString(); " is 138.
Long Statement,Microsoft.CodeAnalysis.CSharp,ObjectDisplay,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\SymbolDisplay\ObjectDisplay.cs,ValidateOptions,The length of the statement  "            Debug.Assert(!(options.IncludesOption(ObjectDisplayOptions.UseQuotes) && options.IncludesOption(ObjectDisplayOptions.UseHexadecimalNumbers))); " is 142.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExpressionEvaluator,CSharpFormatter,C:\research\architectureSmells\repos\mono_roslyn\src\ExpressionEvaluator\CSharp\Source\ResultProvider\CSharpFormatter.TypeNames.cs,IsPotentialKeyword,The length of the statement  "            return SyntaxFacts.GetKeywordKind(identifier) != SyntaxKind.None || SyntaxFacts.GetContextualKeywordKind(identifier) != SyntaxKind.None; " is 136.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExpressionEvaluator,CSharpFormatter,C:\research\architectureSmells\repos\mono_roslyn\src\ExpressionEvaluator\CSharp\Source\ResultProvider\CSharpFormatter.TypeNames.cs,FormatString,The length of the statement  "            return ObjectDisplay.FormatString(str' quote: options.IncludesOption(ObjectDisplayOptions.UseQuotes) ? '"' : '\0'' escapeNonPrintable: false); " is 142.
Long Statement,Microsoft.CodeAnalysis.CSharp.ExpressionEvaluator,CSharpFormatter,C:\research\architectureSmells\repos\mono_roslyn\src\ExpressionEvaluator\CSharp\Source\ResultProvider\CSharpFormatter.TypeNames.cs,TrimAndGetFormatSpecifiers,The length of the statement  "            return RemoveLeadingAndTrailingContent(expression' 0' expression.Length' IsWhitespace' ch => ch == ';' || IsWhitespace(ch)); " is 124.
Magic Number,Microsoft.CodeAnalysis.CSharp,SyntaxFacts,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\Parser\CharacterInfo.cs,HexValue,The following statement contains a magic number: return (c >= '0' && c <= '9') ? c - '0' : (c & 0xdf) - 'A' + 10;
Magic Number,Microsoft.CodeAnalysis.CSharp,SyntaxFacts,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\Parser\CharacterInfo.cs,IsWhitespace,The following statement contains a magic number: return ch == ' '                  || ch == '\t'                  || ch == '\v'                  || ch == '\f'                  || ch == '\u00A0' // NO-BREAK SPACE                                    // The native compiler' in ScanToken' recognized both the byte-order                                    // marker '\uFEFF' as well as ^Z '\u001A' as whitespace' although                                    // this is not to spec since neither of these are in Zs. For the                                    // sake of compatibility' we recognize them both here. Note: '\uFEFF'                                    // also happens to be a formatting character (class Cf)' which means                                    // that it is a legal non-initial identifier character. So it's                                    // especially funny' because it will be whitespace UNLESS we happen                                    // to be scanning an identifier or keyword' in which case it winds                                    // up in the identifier or keyword.                  || ch == '\uFEFF'                  || ch == '\u001A'                  || (ch > 255 && CharUnicodeInfo.GetUnicodeCategory(ch) == UnicodeCategory.SpaceSeparator);
Magic Number,Microsoft.CodeAnalysis.CSharp,SyntaxFacts,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\Parser\CharacterInfo.cs,IsFormattingChar,The following statement contains a magic number: return ch > 127 && IsFormattingChar(CharUnicodeInfo.GetUnicodeCategory(ch));
Missing Default,Microsoft.CodeAnalysis.CSharp,SyntaxFacts,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\Parser\CharacterInfo.cs,IsLetterChar,The following switch statement is missing a default case: switch (cat)              {                  case UnicodeCategory.UppercaseLetter:                  case UnicodeCategory.LowercaseLetter:                  case UnicodeCategory.TitlecaseLetter:                  case UnicodeCategory.ModifierLetter:                  case UnicodeCategory.OtherLetter:                  case UnicodeCategory.LetterNumber:                      return true;              }
Missing Default,Microsoft.CodeAnalysis.CSharp,SyntaxFacts,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\Parser\CharacterInfo.cs,IsCombiningChar,The following switch statement is missing a default case: switch (cat)              {                  case UnicodeCategory.NonSpacingMark:                  case UnicodeCategory.SpacingCombiningMark:                      return true;              }
Missing Default,Microsoft.CodeAnalysis.CSharp,SyntaxFacts,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\Parser\CharacterInfo.cs,IsGlobalMemberDeclaration,The following switch statement is missing a default case: switch (kind)              {                  case SyntaxKind.GlobalStatement:                  case SyntaxKind.FieldDeclaration:                  case SyntaxKind.MethodDeclaration:                  case SyntaxKind.PropertyDeclaration:                  case SyntaxKind.EventDeclaration:                  case SyntaxKind.EventFieldDeclaration:                      return true;              }
Missing Default,Microsoft.CodeAnalysis.CSharp,ObjectDisplay,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\SymbolDisplay\ObjectDisplay.cs,FormatString,The following switch statement is missing a default case: switch (CharUnicodeInfo.GetUnicodeCategory(c))                              {                                  case UnicodeCategory.OtherNotAssigned:                                  case UnicodeCategory.ParagraphSeparator:                                  case UnicodeCategory.Control:                                      unicodeEscape = true;                                      break;                              }
Missing Default,Microsoft.CodeAnalysis.CSharp,ObjectDisplay,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\CSharp\Portable\SymbolDisplay\ObjectDisplay.cs,FormatString,The following switch statement is missing a default case: switch (quote)              {                  case '"': return String.Concat("\""' str' "\"");                  case '\'': return String.Concat("'"' str' "'");                  case '\0': return str;              }
