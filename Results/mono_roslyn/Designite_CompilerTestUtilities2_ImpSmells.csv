Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,ChildSiblingSpan,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,TriviaSiblingSpan,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,ZeroWidthOrMissingNonTerminals,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,ZeroWidthOrMissingTokens,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.CodeAnalysis.Test.Utilities,TreeValidator,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\TreeValidator.cs,RegisterRules,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.CodeAnalysis.Test.Utilities,TreeValidator,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\TreeValidator.cs,UnregisterRuleGroup,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.CodeAnalysis.Test.Utilities,TreeValidator,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\TreeValidator.cs,ValidateNonTerminal,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis.Test.Utilities,XmlHelpers,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\XmlHelpers.cs,ToXml,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.CodeAnalysis.Test.Utilities,XmlHelpers,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\XmlHelpers.cs,ToXml,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.CodeAnalysis.Test.Utilities,XmlHelpers,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\XmlHelpers.cs,ToXml,Cyclomatic complexity of the method is 8
Long Parameter List,Microsoft.CodeAnalysis.Test.Utilities,Failure,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\TreeValidator.cs,Failure,The method has 5 parameters. Parameters: file' rule' nodeKind' errorText' location
Long Identifier,Microsoft.CodeAnalysis.Test.Utilities,TrackingDiagnosticAnalyzer<TLanguageKindEnum>,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\Diagnostics\TrackingDiagnosticAnalyzer.cs,VerifyOnCodeBlockCalledForAllSymbolAndMethodKinds,The length of the parameter actualOnCodeBlockStartedArguments is 33.
Long Identifier,Microsoft.CodeAnalysis.Test.Utilities,TrackingDiagnosticAnalyzer<TLanguageKindEnum>,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\Diagnostics\TrackingDiagnosticAnalyzer.cs,VerifyOnCodeBlockCalledForAllSymbolAndMethodKinds,The length of the parameter actualOnCodeBlockEndedArguments is 31.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,TestDiagnosticAnalyzer<TLanguageKindEnum>,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\Diagnostics\TestDiagnosticAnalyzer.cs,GetAllEnumValues,The length of the statement  "            return ImmutableArray<T>.Empty.AddRange(typeof(T).GetFields(BindingFlags.Public | BindingFlags.Static).Select(f => (T)f.GetRawConstantValue())); " is 144.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,NestedCodeBlockAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\Diagnostics\TestDiagnosticAnalyzer.cs,Initialize,The length of the statement  "                context.RegisterSyntaxNodeAction(_container.AnalyzeNode' TestDiagnosticAnalyzer<TLanguageKindEnum>.AllSyntaxKinds.ToArray()); " is 125.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,ThrowingDiagnosticAnalyzer<TLanguageKindEnum>,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\Diagnostics\ThrowingDiagnosticAnalyzer.cs,VerifyAnalyzerEngineIsSafeAgainstExceptions,The length of the statement  "                "  Exceptions thrown by analyzers in these members were *NOT* handled:" + Environment.NewLine + string.Join(Environment.NewLine' membersHandled.Where(mh => mh.Handled == false).Select(mh => mh.Member)) + Environment.NewLine + Environment.NewLine + " is 247.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,ThrowingDiagnosticAnalyzer<TLanguageKindEnum>,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\Diagnostics\ThrowingDiagnosticAnalyzer.cs,VerifyAnalyzerEngineIsSafeAgainstExceptions,The length of the statement  "                "  Exceptions thrown from these members were handled gracefully:" + Environment.NewLine + string.Join(Environment.NewLine' membersHandled.Where(mh => mh.Handled == true).Select(mh => mh.Member)) + Environment.NewLine + Environment.NewLine + " is 240.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,ThrowingDiagnosticAnalyzer<TLanguageKindEnum>,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\Diagnostics\ThrowingDiagnosticAnalyzer.cs,VerifyAnalyzerEngineIsSafeAgainstExceptions,The length of the statement  "                "  These members were not called/accessed by analyzer engine:" + Environment.NewLine + string.Join(Environment.NewLine' membersHandled.Where(mh => mh.Handled == null).Select(mh => mh.Member))); " is 193.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,TrackingDiagnosticAnalyzer<TLanguageKindEnum>,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\Diagnostics\TrackingDiagnosticAnalyzer.cs,VerifyAnalyzeSymbolCalledForAllSymbolKinds,The length of the statement  "            var expectedSymbolKinds = new[] { SymbolKind.Event' SymbolKind.Field' SymbolKind.Method' SymbolKind.NamedType' SymbolKind.Namespace' SymbolKind.Property }; " is 155.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,TrackingDiagnosticAnalyzer<TLanguageKindEnum>,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\Diagnostics\TrackingDiagnosticAnalyzer.cs,VerifyAnalyzeSymbolCalledForAllSymbolKinds,The length of the statement  "            var actualSymbolKinds = _callLog.Where(a => FilterByAbstractName(a' "Symbol")).Where(e => e.SymbolKind.HasValue).Select(e => e.SymbolKind.Value).Distinct(); " is 156.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,TrackingDiagnosticAnalyzer<TLanguageKindEnum>,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\Diagnostics\TrackingDiagnosticAnalyzer.cs,VerifyAnalyzeNodeCalledForAllSyntaxKinds,The length of the statement  "            var actualSyntaxKinds = _callLog.Where(a => FilterByAbstractName(a' "SyntaxNode")).Select(e => e.SyntaxKind).Distinct(); " is 120.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,TrackingDiagnosticAnalyzer<TLanguageKindEnum>,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\Diagnostics\TrackingDiagnosticAnalyzer.cs,VerifyOnCodeBlockCalledForAllSymbolAndMethodKinds,The length of the statement  "                new { SymbolKind = SymbolKind.Method' MethodKind = MethodKind.ExplicitInterfaceImplementation' ReturnsVoid = true }' // C# only " is 127.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,TrackingDiagnosticAnalyzer<TLanguageKindEnum>,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\Diagnostics\TrackingDiagnosticAnalyzer.cs,VerifyOnCodeBlockCalledForAllSymbolAndMethodKinds,The length of the statement  "                .Select(e => new { SymbolKind = e.SymbolKind.Value' MethodKind = e.MethodKind ?? InvalidMethodKind' e.ReturnsVoid }).Distinct(); " is 128.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,TrackingDiagnosticAnalyzer<TLanguageKindEnum>,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\Diagnostics\TrackingDiagnosticAnalyzer.cs,VerifyOnCodeBlockCalledForAllSymbolAndMethodKinds,The length of the statement  "                .Select(e => new { SymbolKind = e.SymbolKind.Value' MethodKind = e.MethodKind ?? InvalidMethodKind' e.ReturnsVoid }).Distinct(); " is 128.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,TrackingDiagnosticAnalyzer<TLanguageKindEnum>,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\Diagnostics\TrackingDiagnosticAnalyzer.cs,VerifyOnCodeBlockCalledForAllSymbolAndMethodKinds,The length of the statement  "                AssertSequenceEqual(expectedArguments' actualOnCodeBlockStartedArguments' items => items.OrderBy(p => p.SymbolKind).ThenBy(p => p.MethodKind).ThenBy(p => p.ReturnsVoid)); " is 170.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,TrackingDiagnosticAnalyzer<TLanguageKindEnum>,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\Diagnostics\TrackingDiagnosticAnalyzer.cs,VerifyOnCodeBlockCalledForAllSymbolAndMethodKinds,The length of the statement  "                AssertSequenceEqual(expectedArguments' actualOnCodeBlockEndedArguments' items => items.OrderBy(p => p.SymbolKind).ThenBy(p => p.MethodKind).ThenBy(p => p.ReturnsVoid)); " is 168.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,TrackingDiagnosticAnalyzer<TLanguageKindEnum>,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\Diagnostics\TrackingDiagnosticAnalyzer.cs,AssertIsSuperset,The length of the statement  "            var missingElements = expectedSubset.GroupJoin(actualSuperset' e => e' a => a' (e' a) => new { Element = e' IsMissing = !a.Any() }) " is 131.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,NodeHelpers,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeHelpers.cs,IsKeyword,The length of the statement  "            return kind.EndsWith("Keyword") || (kind.Contains("Identifier") && n.Parent != null && !n.Parent.GetKind().Contains("Name")); " is 125.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,NodeHelpers,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeHelpers.cs,IsField,The length of the statement  "            if (typeObject == typeof(int) || typeObject == typeof(uint) || typeObject == typeof(long) || typeObject == typeof(ulong) || typeObject == typeof(bool) || typeObject == typeof(string) || typeObject == typeof(float) || typeObject == typeof(double) || typeObject == typeof(char) || typeObject == typeof(DateTime) || typeObject == typeof(decimal) || typeObject.IsEnum) " is 364.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,ParentSpanForNonTerminal,The length of the statement  "                else if (nonTerminal.FullSpan.Start < nonTerminal.Parent.FullSpan.Start || nonTerminal.FullSpan.End > nonTerminal.Parent.FullSpan.End) " is 134.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,FirstChildSpan,The length of the statement  "                errorText = "Start FullSpan of first child of this non-terminal does not coincide with start FullSpan of this non-terminal"; " is 124.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,ChildSpanWidth,The length of the statement  "                errorText = "FullSpan width of this non-terminal (" + nonTerminal.FullSpan.Length + ") does not match sum of FullSpan widths of its children (" + total + ")"; " is 158.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,ChildSiblingSpan,The length of the statement  "                        errorText = "FullSpan of a child of this non-terminal is not adjacent to the FullSpan of this child's preceding sibling"; " is 121.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,TriviaSpan,The length of the statement  "            if (!((trivia.SpanStart <= trivia.Token.SpanStart || trivia.SpanStart >= trivia.Token.Span.End) && (trivia.Span.End >= trivia.Token.Span.End || trivia.Span.End <= trivia.Token.SpanStart))) " is 188.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,TriviaSpan,The length of the statement  "            else if (!((trivia.FullSpan.Start <= trivia.Token.SpanStart || trivia.FullSpan.Start >= trivia.Token.Span.End) && (trivia.FullSpan.End >= trivia.Token.Span.End || trivia.FullSpan.End <= trivia.Token.SpanStart))) " is 211.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,FirstTrailingTriviaSpan,The length of the statement  "                    //Trailing /** (multiline xml doc comment) trivia on the } token has children with their own leading DocumentationCommentExteriorTrivia. " is 136.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,TriviaSpanWidth,The length of the statement  "                    errorText = "FullSpan width of this token (" + token.FullSpan.Length + ") does not match Span width of this token (" + token.Span.Length + ") + sum of FullSpan widths of all leading and trailing trivia of this token (" + total + ")"; " is 233.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,TriviaSiblingSpan,The length of the statement  "                    errorText = "FullSpan of a leading trivia of this token is not adjacent to the FullSpan of this leading trivia's preceding sibling"; " is 132.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,TriviaSiblingSpan,The length of the statement  "                        errorText = "FullSpan of a trailing trivia of this token is not adjacent to the FullSpan of this trailing trivia's preceding sibling"; " is 134.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,SpanAndFullSpanForToken,The length of the statement  "                    errorText = "Span and FullSpan for this token do not match - but they should because this token has no leading or trailing trivia"; " is 131.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,ZeroWidthOrMissingNonTerminals,The length of the statement  "                    if (!(kind == "OmittedArgument" || (kind == "CompilationUnit" && nonTerminal.ChildNodesAndTokens().Count == 1 && nonTerminal.ChildNodesAndTokens().First().GetKind() == "EndOfFileToken"))) " is 187.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,ZeroWidthOrMissingTokens,The length of the statement  "                    if (!(kind == "EndOfFileToken" || kind == "EmptyToken" || kind == "EndOfDocumentationCommentToken" || kind == "EndOfDirectiveToken" || kind.Contains("Bad"))) " is 157.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,ZeroWidthOrMissingTokens,The length of the statement  "                    if (!(kind == "EndOfFileToken" || kind == "EmptyToken" || kind == "EndOfDocumentationCommentToken" || kind == "EndOfDirectiveToken")) " is 133.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,WhiteSpaceInTokens,The length of the statement  "            if (kind != "StatementTerminatorToken" && kind != "DateLiteralToken" && kind != "StringLiteralToken" && kind != "CharacterLiteralToken" && kind != "XmlTextLiteralToken" && kind != "XmlAttributeDataToken" && kind != "XmlCommentDataToken" && kind != "XmlCDataToken" && kind != "XmlProcessingInstructionDataToken" && kind != "XmlTextLiteralNewLineToken" && kind != "LessThanEqualsToken" && kind != "GreaterThanEqualsToken" && kind != "LessThanGreaterThanToken" && kind != "ColonEqualsToken" && kind != "CaretEqualsToken" && kind != "AsteriskEqualsToken" && kind != "PlusEqualsToken" && kind != "MinusEqualsToken" && kind != "SlashEqualsToken" && kind != "BackslashEqualsToken" && kind != "LessThanLessThanToken" && kind != "GreaterThanGreaterThanToken" && kind != "LessThanLessThanEqualsToken" && kind != "GreaterThanGreaterThanEqualsToken" && kind != "AmpersandEqualsToken") " is 872.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,ParseHelpers,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\ParseHelpers.cs,ParseCSTree,The length of the statement  "            SyntaxTree syntaxTree = (SyntaxTree)_CSSyntaxTreeType.InvokeMember(SYNTAX_TREE_PARSE_METHOD' BindingFlags.InvokeMethod' null' null' new[] " is 137.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,ParseHelpers,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\ParseHelpers.cs,ParseVBTree,The length of the statement  "            SyntaxTree syntaxTree = (SyntaxTree)_visualBasicSyntaxTreeType.InvokeMember(SYNTAX_TREE_PARSE_METHOD' BindingFlags.InvokeMethod' null' null' new[] " is 146.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,SourceCodeValidator,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\SourceCodeValidator.cs,ValidateCode,The length of the statement  "                    throw new TimeoutException("Tree validation timed out.  Current timeout is " + TreeValidatorTimeout / 1000 + " seconds."); " is 122.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,TestExceptionUtilities,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\TestExceptionUtilities.cs,UnexpectedValue,The length of the statement  "            string output = String.Format("Unexpected value '{0}' of type '{1}'"' o' (o != null) ? o.GetType().FullName : "<unknown>"); " is 123.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,TreeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\TreeRules.cs,TreeFullSpan,The length of the statement  "                errorText = "FullSpan width of tree (" + tree.GetRoot().FullSpan.Length + ") does not match length of the code (" + codeText.Length + ")"; " is 138.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,TreeValidator,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\TreeValidator.cs,ValidateTree,The length of the statement  "                            failures.Add(new Failure(filename' rule' tree.GetRoot().GetKind()' errorText' new FailureLocation(tree.GetRoot().Span' tree))); " is 127.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,TreeValidator,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\TreeValidator.cs,ValidateNonTerminal,The length of the statement  "                            failures.Add(new Failure(filename' rule' nonTerminal.GetKind()' errorText' new FailureLocation(nonTerminal.Span' tree))); " is 121.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,XmlHelpers,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\XmlHelpers.cs,AddNodeInfo,The length of the statement  "                if (!(f.PropertyName.Contains("Span") || f.PropertyName.Contains("Kind") || f.PropertyName.Contains("Text") || f.PropertyName.Contains("IsMissing"))) " is 149.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,XmlHelpers,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\XmlHelpers.cs,AddErrors,The length of the statement  "                            <%= If(options.Spans' <Span Start=<%= l.SourceSpan.Start %> End=<%= l.SourceSpan.End %> Length=<%= l.SourceSpan.Length %>/>' Nothing) %> " is 136.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,XmlHelpers,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\XmlHelpers.cs,ToXml,The length of the statement  "                    xml.Add(@"<FullSpan Start=<%= node.FullSpan.Start %> End=<%= node.FullSpan.End %> Length=<%= node.FullSpan.Length %>/>"); " is 121.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,XmlHelpers,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\XmlHelpers.cs,ToXml,The length of the statement  "                retVal.Add(@"<FullSpan Start=<%= token.FullSpan.Start %> End=<%= token.FullSpan.End %> Length=<%= token.FullSpan.Length %>/>"); " is 127.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,XmlHelpers,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\XmlHelpers.cs,ToXml,The length of the statement  "                    retVal.Add(@"<TrailingTrivia><%= From t In token.TrailingTrivia Select t.ToXml(syntaxTree' options) %></TrailingTrivia>"); " is 122.
Long Statement,Microsoft.CodeAnalysis.Test.Utilities,XmlHelpers,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\XmlHelpers.cs,ToXml,The length of the statement  "                retVal.Add(@"<FullSpan Start=<%= trivia.FullSpan.Start %> End=<%= trivia.FullSpan.End %> Length=<%= trivia.FullSpan.Length %>/>"); " is 130.
Complex Conditional,Microsoft.CodeAnalysis.Test.Utilities,NodeHelpers,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeHelpers.cs,IsField,The conditional expression  "typeObject == typeof(int) || typeObject == typeof(uint) || typeObject == typeof(long) || typeObject == typeof(ulong) || typeObject == typeof(bool) || typeObject == typeof(string) || typeObject == typeof(float) || typeObject == typeof(double) || typeObject == typeof(char) || typeObject == typeof(DateTime) || typeObject == typeof(decimal) || typeObject.IsEnum"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,TriviaSpan,The conditional expression  "!((trivia.SpanStart <= trivia.Token.SpanStart || trivia.SpanStart >= trivia.Token.Span.End) && (trivia.Span.End >= trivia.Token.Span.End || trivia.Span.End <= trivia.Token.SpanStart))"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,TriviaSpan,The conditional expression  "!((trivia.FullSpan.Start <= trivia.Token.SpanStart || trivia.FullSpan.Start >= trivia.Token.Span.End) && (trivia.FullSpan.End >= trivia.Token.Span.End || trivia.FullSpan.End <= trivia.Token.SpanStart))"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,ZeroWidthOrMissingNonTerminals,The conditional expression  "!(kind == "OmittedArgument" || kind.Contains("Bad") ||                          (kind == "CompilationUnit" &&                          nonTerminal.ChildNodesAndTokens().Count == 1 &&                          nonTerminal.ChildNodesAndTokens().First().GetKind() == "EndOfFileToken"))"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,ZeroWidthOrMissingNonTerminals,The conditional expression  "!(kind == "OmittedArgument" || (kind == "CompilationUnit" && nonTerminal.ChildNodesAndTokens().Count == 1 && nonTerminal.ChildNodesAndTokens().First().GetKind() == "EndOfFileToken"))"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,ZeroWidthOrMissingTokens,The conditional expression  "!(kind == "EndOfFileToken" || kind == "EmptyToken" || kind == "EndOfDocumentationCommentToken" || kind == "EndOfDirectiveToken" || kind.Contains("Bad"))"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,ZeroWidthOrMissingTokens,The conditional expression  "!(kind == "EndOfFileToken" || kind == "EmptyToken" || kind == "EndOfDocumentationCommentToken" || kind == "EndOfDirectiveToken")"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,WhiteSpaceInTokens,The conditional expression  "kind != "StatementTerminatorToken" && kind != "DateLiteralToken" && kind != "StringLiteralToken" && kind != "CharacterLiteralToken" && kind != "XmlTextLiteralToken" && kind != "XmlAttributeDataToken" && kind != "XmlCommentDataToken" && kind != "XmlCDataToken" && kind != "XmlProcessingInstructionDataToken" && kind != "XmlTextLiteralNewLineToken" && kind != "LessThanEqualsToken" && kind != "GreaterThanEqualsToken" && kind != "LessThanGreaterThanToken" && kind != "ColonEqualsToken" && kind != "CaretEqualsToken" && kind != "AsteriskEqualsToken" && kind != "PlusEqualsToken" && kind != "MinusEqualsToken" && kind != "SlashEqualsToken" && kind != "BackslashEqualsToken" && kind != "LessThanLessThanToken" && kind != "GreaterThanGreaterThanToken" && kind != "LessThanLessThanEqualsToken" && kind != "GreaterThanGreaterThanEqualsToken" && kind != "AmpersandEqualsToken""  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Test.Utilities,NodeRules,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\NodeRules.cs,WhiteSpaceInTokens,The conditional expression  "(text.Contains(" ") || text.Contains('\t') || text.Contains('\r') || text.Contains('\n') || text.Contains("\r\n"))"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Test.Utilities,TreeValidator,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\TreeValidator.cs,RegisterRules,The conditional expression  "m.IsStatic && !m.IsAbstract && !m.IsConstructor && !m.IsGenericMethod && m.ReturnType == typeof(bool) &&                              (m.GetParameters()[0].ParameterType == typeof(SyntaxTree) ||                              m.GetParameters()[0].ParameterType == typeof(SyntaxNode) ||                              m.GetParameters()[0].ParameterType == typeof(SyntaxToken) ||                              m.GetParameters()[0].ParameterType == typeof(SyntaxTrivia))"  is complex.
Complex Conditional,Microsoft.CodeAnalysis.Test.Utilities,XmlHelpers,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\XmlHelpers.cs,AddNodeInfo,The conditional expression  "!(f.PropertyName.Contains("Span") || f.PropertyName.Contains("Kind") || f.PropertyName.Contains("Text") || f.PropertyName.Contains("IsMissing"))"  is complex.
Magic Number,Microsoft.CodeAnalysis.Test.Utilities,ProgressDialog,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\ProgressDialog.cs,InitializeComponent,The following statement contains a magic number: this.Label1.Location = new Point(12' 50);
Magic Number,Microsoft.CodeAnalysis.Test.Utilities,ProgressDialog,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\ProgressDialog.cs,InitializeComponent,The following statement contains a magic number: this.Label1.Location = new Point(12' 50);
Magic Number,Microsoft.CodeAnalysis.Test.Utilities,ProgressDialog,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\ProgressDialog.cs,InitializeComponent,The following statement contains a magic number: this.Label1.Size = new Size(60' 13);
Magic Number,Microsoft.CodeAnalysis.Test.Utilities,ProgressDialog,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\ProgressDialog.cs,InitializeComponent,The following statement contains a magic number: this.Label1.Size = new Size(60' 13);
Magic Number,Microsoft.CodeAnalysis.Test.Utilities,ProgressDialog,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\ProgressDialog.cs,InitializeComponent,The following statement contains a magic number: this.Label2.Location = new Point(78' 50);
Magic Number,Microsoft.CodeAnalysis.Test.Utilities,ProgressDialog,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\ProgressDialog.cs,InitializeComponent,The following statement contains a magic number: this.Label2.Location = new Point(78' 50);
Magic Number,Microsoft.CodeAnalysis.Test.Utilities,ProgressDialog,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\ProgressDialog.cs,InitializeComponent,The following statement contains a magic number: this.Label2.Size = new Size(39' 13);
Magic Number,Microsoft.CodeAnalysis.Test.Utilities,ProgressDialog,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\ProgressDialog.cs,InitializeComponent,The following statement contains a magic number: this.Label2.Size = new Size(39' 13);
Magic Number,Microsoft.CodeAnalysis.Test.Utilities,ProgressDialog,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\ProgressDialog.cs,InitializeComponent,The following statement contains a magic number: this.ProgressBar1.Location = new Point(12' 14);
Magic Number,Microsoft.CodeAnalysis.Test.Utilities,ProgressDialog,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\ProgressDialog.cs,InitializeComponent,The following statement contains a magic number: this.ProgressBar1.Location = new Point(12' 14);
Magic Number,Microsoft.CodeAnalysis.Test.Utilities,ProgressDialog,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\ProgressDialog.cs,InitializeComponent,The following statement contains a magic number: this.ProgressBar1.Size = new Size(211' 24);
Magic Number,Microsoft.CodeAnalysis.Test.Utilities,ProgressDialog,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\ProgressDialog.cs,InitializeComponent,The following statement contains a magic number: this.ProgressBar1.Size = new Size(211' 24);
Magic Number,Microsoft.CodeAnalysis.Test.Utilities,ProgressDialog,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\ProgressDialog.cs,InitializeComponent,The following statement contains a magic number: this.ProgressBar1.TabIndex = 2;
Magic Number,Microsoft.CodeAnalysis.Test.Utilities,ProgressDialog,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\ProgressDialog.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new SizeF(6' 13);
Magic Number,Microsoft.CodeAnalysis.Test.Utilities,ProgressDialog,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\ProgressDialog.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new SizeF(6' 13);
Magic Number,Microsoft.CodeAnalysis.Test.Utilities,ProgressDialog,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\ProgressDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new Size(235' 75);
Magic Number,Microsoft.CodeAnalysis.Test.Utilities,ProgressDialog,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\ProgressDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new Size(235' 75);
Magic Number,Microsoft.CodeAnalysis.Test.Utilities,SourceCodeValidator,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\SourceCodeValidator.cs,ValidateCode,The following statement contains a magic number: throw new TimeoutException("Parsing timed out.  Current timeout is " + ParserTimeout / 1000 + " seconds.");
Magic Number,Microsoft.CodeAnalysis.Test.Utilities,SourceCodeValidator,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\SourceCodeValidator.cs,ValidateCode,The following statement contains a magic number: throw new TimeoutException("Tree validation timed out.  Current timeout is " + TreeValidatorTimeout / 1000 + " seconds.");
Missing Default,Microsoft.CodeAnalysis.UnitTests,SpeculativeSemanticModelTestsBase,C:\research\architectureSmells\repos\mono_roslyn\src\Compilers\Test\Utilities\Core2\SpeculativeSemanticModelTestsBase.cs,CheckAllMembers,The following switch statement is missing a default case: switch (m.MemberType)                      {                          case MemberTypes.Field:                              ((FieldInfo)m).GetValue(instance);                              break;                          case MemberTypes.Property:                              ((PropertyInfo)m).GetValue(instance);                              break;                          case MemberTypes.Method:                              var method = (MethodInfo)m;                              if (method.IsStatic)                                  continue;                              method.Invoke(instance' method.GetParameters().Select(p =>                                  (valueProviders.GetValueOrDefault(p.ParameterType) ?? (() => null))()).ToArray());                              break;                      }
