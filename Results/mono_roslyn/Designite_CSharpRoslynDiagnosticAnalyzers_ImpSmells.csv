Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Microsoft.CodeAnalysis.Performance,CSharpEmptyArrayCodeFixProvider,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\Roslyn\CSharp\Performance\CSharpEmptyArrayCodeFixProvider.cs,GetUpdatedDocumentAsync,The method has 6 parameters. Parameters: document' model' root' nodeToFix' diagnosticId' cancellationToken
Long Parameter List,Roslyn.Diagnostics.Analyzers.CSharp.Performance,LinqAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\Roslyn\CSharp\Performance\LinqAnalyzer.cs,TryGetTargetTypeInfo,The method has 5 parameters. Parameters: semanticModel' invokeSyntax' memberSyntax' enumerableType' typeInfo
Long Identifier,Roslyn.Diagnostics.Analyzers.CSharp.ApiDesign,MyCodeAction,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\Roslyn\CSharp\ApiDesign\CancellationTokenMustBeLastCodeFixProvider.cs,GetChangedDocumentAsync,The length of the parameter nonCancellationTokenParameters is 30.
Long Identifier,Roslyn.Diagnostics.Analyzers.CSharp,CSharpSymbolDeclaredEventAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\Roslyn\CSharp\Reliability\CSharpSymbolDeclaredEventAnalyzer.cs,,The length of the parameter s_symbolTypesWithExpectedSymbolDeclaredEvent is 44.
Long Identifier,Roslyn.Diagnostics.Analyzers.CSharp.Performance,LinqAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\Roslyn\CSharp\Performance\LinqAnalyzer.cs,,The length of the parameter DoNotCallLastOnIndexableDescriptor is 34.
Long Identifier,Roslyn.Diagnostics.Analyzers.CSharp.Reliability,ImmutableCollectionAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\Roslyn\CSharp\Reliability\ImmutableCollectionAnalyzer.cs,,The length of the parameter DoNotCallToImmutableArrayDescriptor is 35.
Long Statement,Roslyn.Diagnostics.Analyzers.CSharp.ApiDesign,CancellationTokenMustBeLastCodeFixProvider,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\Roslyn\CSharp\ApiDesign\CancellationTokenMustBeLastCodeFixProvider.cs,RegisterCodeFixesAsync,The length of the statement  "            var declaration = root.FindToken(diagnosticSpan.Start).Parent.AncestorsAndSelf().OfType<MethodDeclarationSyntax>().First(); " is 123.
Long Statement,Roslyn.Diagnostics.Analyzers.CSharp,CSharpUnusedDeclarationsAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\Roslyn\CSharp\Maintainability\CSharpUnusedDeclarationsAnalyzer.cs,GetLocalDeclarationNodes,The length of the statement  "            var variables = (locals.Declaration == null) ? (SeparatedSyntaxList<VariableDeclaratorSyntax>?)null : locals.Declaration.Variables; " is 131.
Long Statement,Roslyn.Diagnostics.Analyzers.CSharp,CodeBlockStartedAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\Roslyn\CSharp\Performance\CSharpCodeActionCreateAnalyzer.cs,GetSyntaxAnalyzer,The length of the statement  "                context.RegisterSyntaxNodeAction(new SyntaxAnalyzer(genericEnumerableSymbol' genericEmptyEnumerableSymbol).AnalyzeNode' SyntaxKind.ReturnStatement); " is 148.
Long Statement,Roslyn.Diagnostics.Analyzers.CSharp,SyntaxAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\Roslyn\CSharp\Performance\CSharpCodeActionCreateAnalyzer.cs,AnalyzeNode,The length of the statement  "                AnalyzeInvocationExpression(invocation.Expression' context.SemanticModel' context.ReportDiagnostic' context.CancellationToken); " is 127.
Long Statement,Roslyn.Diagnostics.Analyzers.CSharp,SyntaxAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\Roslyn\CSharp\Performance\CSharpCodeActionCreateAnalyzer.cs,AnalyzeNode,The length of the statement  "                var expressionsToAnalyze = context.Node.DescendantNodes().Where(n => ShouldAnalyzeExpression(n' context.SemanticModel)); " is 120.
Long Statement,Roslyn.Diagnostics.Analyzers.CSharp,SyntaxAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\Roslyn\CSharp\Performance\CSharpCodeActionCreateAnalyzer.cs,AnalyzeNode,The length of the statement  "                            AnalyzeInitializerExpression(((ImplicitArrayCreationExpressionSyntax)expression).Initializer' context.ReportDiagnostic); " is 120.
Long Statement,Roslyn.Diagnostics.Analyzers.CSharp,SyntaxAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\Roslyn\CSharp\Performance\CSharpCodeActionCreateAnalyzer.cs,AnalyzeNode,The length of the statement  "                            AnalyzeMemberAccessName(((MemberAccessExpressionSyntax)expression).Name' context.SemanticModel' context.ReportDiagnostic); " is 122.
Long Statement,Roslyn.Diagnostics.Analyzers.CSharp,CSharpSpecializedEnumerableCreationAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\Roslyn\CSharp\Performance\CSharpSpecializedEnumerableCreationAnalyzer.cs,GetCodeBlockStartedAnalyzer,The length of the statement  "            context.RegisterCodeBlockStartAction<SyntaxKind>(new CodeBlockStartedAnalyzer(genericEnumerableSymbol' genericEmptyEnumerableSymbol).Initialize); " is 145.
Long Statement,Microsoft.CodeAnalysis.Performance,CSharpEmptyArrayDiagnosticAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\Roslyn\CSharp\Performance\CSharpEmptyArrayDiagnosticAnalyzer.cs,RegisterSyntaxNodeAction,The length of the statement  "                        LiteralExpressionSyntax sizeSpecifier = rankSpecifier.ChildNodes().FirstOrDefault(child => child.Kind() == SyntaxKind.NumericLiteralExpression) as LiteralExpressionSyntax; " is 171.
Long Statement,Microsoft.CodeAnalysis.Performance,CSharpEmptyArrayCodeFixProvider,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\Roslyn\CSharp\Performance\CSharpEmptyArrayCodeFixProvider.cs,GetArrayType,The length of the statement  "            //     ((nodeToFix as InitializerExpressionSyntax)?.Parent?.Parent?.Parent as VariableDeclarationSyntax)?.Type as ArrayTypeSyntax; " is 130.
Long Statement,Roslyn.Diagnostics.Analyzers.CSharp.Performance,LinqAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\Roslyn\CSharp\Performance\LinqAnalyzer.cs,OnCompilationStart,The length of the statement  "                context.RegisterSyntaxNodeAction(nodeContext => AnalyzeCall(nodeContext' enumerableType' readonlyListType' listType)' SyntaxKind.InvocationExpression); " is 151.
Long Statement,Roslyn.Diagnostics.Analyzers.CSharp.Reliability,ImmutableCollectionAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\Roslyn\CSharp\Reliability\ImmutableCollectionAnalyzer.cs,OnCompilationStart,The length of the statement  "                context.RegisterSyntaxNodeAction(syntaxContext => AnalyzeCall(syntaxContext' immutableArrayType)' SyntaxKind.InvocationExpression); " is 131.
Magic Number,Microsoft.CodeAnalysis.Performance,CSharpEmptyArrayCodeFixProvider,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\Roslyn\CSharp\Performance\CSharpEmptyArrayCodeFixProvider.cs,GetArrayType,The following statement contains a magic number: i < 3 && sn != null
Missing Default,Roslyn.Diagnostics.Analyzers.CSharp,SyntaxAnalyzer,C:\research\architectureSmells\repos\mono_roslyn\src\Diagnostics\Roslyn\CSharp\Performance\CSharpCodeActionCreateAnalyzer.cs,AnalyzeNode,The following switch statement is missing a default case: switch (expression.Kind())                      {                          case SyntaxKind.ArrayCreationExpression:                              AnalyzeArrayCreationExpression((ArrayCreationExpressionSyntax)expression' context.ReportDiagnostic);                              break;                          case SyntaxKind.ImplicitArrayCreationExpression:                              AnalyzeInitializerExpression(((ImplicitArrayCreationExpressionSyntax)expression).Initializer' context.ReportDiagnostic);                              break;                          case SyntaxKind.SimpleMemberAccessExpression:                              AnalyzeMemberAccessName(((MemberAccessExpressionSyntax)expression).Name' context.SemanticModel' context.ReportDiagnostic);                              break;                      }
