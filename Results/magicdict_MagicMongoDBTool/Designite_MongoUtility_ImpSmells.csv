Implementation smell,Namespace,Class,File,Method,Description
Long Method,MongoUtility.Aggregation,SqlHelper,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Aggregation\SqlHelper.cs,ConvertQuerySql,The method has 100 lines of code.
Long Method,MongoUtility.Aggregation,SqlHelper,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Aggregation\SqlHelper.cs,SetQueryCondition,The method has 132 lines of code.
Long Method,MongoUtility.Core,RuntimeMongoDbContext,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Core\RuntimeMongoDBContext.cs,CreateMongoClientSettingsByConfig,The method has 111 lines of code.
Complex Method,MongoUtility.Aggregation,QueryHelper,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Aggregation\QueryHelper.cs,GetQuery,Cyclomatic complexity of the method is 8
Complex Method,MongoUtility.Aggregation,SqlHelper,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Aggregation\SqlHelper.cs,ConvertQuerySql,Cyclomatic complexity of the method is 14
Complex Method,MongoUtility.Aggregation,SqlHelper,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Aggregation\SqlHelper.cs,SetQueryCondition,Cyclomatic complexity of the method is 22
Complex Method,MongoUtility.Basic,BsonValueEx,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Basic\BsonValueEx.cs,BsonValueEx,Cyclomatic complexity of the method is 11
Complex Method,MongoUtility.Basic,BsonValueEx,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Basic\BsonValueEx.cs,GetBsonValue,Cyclomatic complexity of the method is 10
Complex Method,MongoUtility.Basic,BsonValueEx,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Basic\BsonValueEx.cs,GetInitValue,Cyclomatic complexity of the method is 15
Complex Method,MongoUtility.Basic,BsonValueEx,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Basic\BsonValueEx.cs,GetBsonValueBasicType,Cyclomatic complexity of the method is 13
Complex Method,MongoUtility.Basic,EnumMgr,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Basic\EnumMgr.cs,GetKeyString,Cyclomatic complexity of the method is 8
Complex Method,MongoUtility.Command,Operater,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Command\Collection.cs,CreateIndex,Cyclomatic complexity of the method is 9
Complex Method,MongoUtility.Command,ElementHelper,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Command\ElementHelper.cs,GetLastParentDocument,Cyclomatic complexity of the method is 10
Complex Method,MongoUtility.Command,Gfs,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Command\GFS.cs,UpLoadFile,Cyclomatic complexity of the method is 10
Complex Method,MongoUtility.Core,ReadWrite,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Core\ReadWrite.cs,SetReadPreferenceWriteConcern,Cyclomatic complexity of the method is 15
Complex Method,MongoUtility.Core,RuntimeMongoDbContext,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Core\RuntimeMongoDBContext.cs,CreateMongoClientSettingsByConfig,Cyclomatic complexity of the method is 18
Complex Method,MongoUtility.Security,MongoAction,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Security\MongoAction.cs,JudgeRightByBuildInRole,Cyclomatic complexity of the method is 9
Complex Method,MongoUtility.ToolKit,MongodbDosCommand,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\ToolKit\MongodbDosCommand.cs,GetMongodCommandLine,Cyclomatic complexity of the method is 13
Long Parameter List,MongoUtility.Aggregation,QueryHelper,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Aggregation\QueryHelper.cs,SearchText,The method has 5 parameters. Parameters: key' caseSensitive' diacriticSensitive' limit' language
Long Parameter List,MongoUtility.Command,DataBaseCommand,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Command\DataBaseCommand.cs,AddSharding,The method has 5 parameters. Parameters: routeSvr' replicaSetName' lstAddress' name' maxSize
Long Parameter List,MongoUtility.Command,DataBaseCommand,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Command\DataBaseCommand.cs,updateZoneKeyRange,The method has 6 parameters. Parameters: routeSvr' nameSpace' FieldName' min' max' zone
Long Parameter List,MongoUtility.Command,ElementHelper,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Command\ElementHelper.cs,CutValue,The method has 5 parameters. Parameters: elementPath' valueIndex' val' currentDocument' currentCollection
Long Parameter List,MongoUtility.Command,ElementHelper,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Command\ElementHelper.cs,ModifyElement,The method has 5 parameters. Parameters: elementPath' newValue' el' currentDocument' currentCollection
Long Parameter List,MongoUtility.Command,ElementHelper,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Command\ElementHelper.cs,ModifyArrayValue,The method has 5 parameters. Parameters: elementPath' newValue' valueIndex' currentDocument' currentCollection
Long Statement,MongoUtility.Aggregation,DataViewInfo,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Aggregation\DataViewInfo.cs,GetDataList,The length of the statement  "            MongoCollection mongoCol = mServer.GetDatabase(PathArray[(int)EnumMgr.PathLevel.Database]).GetCollection(PathArray[(int)EnumMgr.PathLevel.CollectionAndView]); " is 158.
Long Statement,MongoUtility.Command,Operater,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Command\Collection.cs,CreateIndex,The length of the statement  "                        "if the field holds an array' and there are multiple date-typed data in the index' the document will expire when the lowest (i.e. earliest) matches the expiration threshold."; " is 175.
Long Statement,MongoUtility.Command,CommandExecute,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Command\CommandExecute.cs,IsShellOk,The length of the statement  "            return result.Response.ToBsonDocument().GetElement("retval").Value.AsBsonDocument.GetElement("ok").Value.ToString() == "1"; " is 123.
Long Statement,MongoUtility.Core,RuntimeMongoDbContext,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Core\RuntimeMongoDBContext.cs,CreateMongoClientSettingsByConfig,The length of the statement  "                            mongoClientSetting.Credentials = new[] { MongoCredential.CreateMongoCRCredential(ConstMgr.DatabaseNameAdmin' config.UserName' config.Password) }; " is 145.
Long Statement,MongoUtility.Core,RuntimeMongoDbContext,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Core\RuntimeMongoDBContext.cs,CreateMongoClientSettingsByConfig,The length of the statement  "                            mongoClientSetting.Credentials = new[] { MongoCredential.CreateMongoCRCredential(config.DataBaseName' config.UserName' config.Password) }; " is 138.
Long Statement,MongoUtility.Core,RuntimeMongoDbContext,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Core\RuntimeMongoDBContext.cs,CreateMongoClientSettingsByConfig,The length of the statement  "                            mongoClientSetting.Credentials = new[] { MongoCredential.CreateCredential(ConstMgr.DatabaseNameAdmin' config.UserName' config.Password) }; " is 138.
Long Statement,MongoUtility.Core,RuntimeMongoDbContext,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Core\RuntimeMongoDBContext.cs,CreateMongoClientSettingsByConfig,The length of the statement  "                            mongoClientSetting.Credentials = new[] { MongoCredential.CreateCredential(config.DataBaseName' config.UserName' config.Password) }; " is 131.
Complex Conditional,MongoUtility.Security,MongoAction,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Security\MongoAction.cs,JudgeRightByBuildInRole,The conditional expression  "roles.Contains(Role.UserRoleReadWriteAnyDatabase) &&                          roles.Contains(Role.UserRoleUserAdminAnyDatabase) &&                          roles.Contains(Role.UserRoleDbAdminAnyDatabase) &&                          roles.Contains(Role.UserRoleClusterAdmin)"  is complex.
Empty Catch Block,MongoUtility.Command,ShellMethod,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Command\ShellMethod.cs,AddToReplsetServer,The method has an empty catch block.
Empty Catch Block,MongoUtility.Command,ShellMethod,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Command\ShellMethod.cs,RemoveFromReplsetServer,The method has an empty catch block.
Empty Catch Block,MongoUtility.Command,ShellMethod,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Command\ShellMethod.cs,ReconfigReplsetServer,The method has an empty catch block.
Magic Number,MongoUtility.Aggregation,SqlHelper,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Aggregation\SqlHelper.cs,SetQueryOrder,The following statement contains a magic number: sqlContent = sqlContent.Substring(3);
Magic Number,MongoUtility.Command,Operater,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Command\Collection.cs,LoadJavascript,The following statement contains a magic number: return js.IndexOf("new "' StringComparison.Ordinal) != -1 ? js.Substring(20' js.Length - 22) : js;
Magic Number,MongoUtility.Command,Operater,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Command\Collection.cs,LoadJavascript,The following statement contains a magic number: return js.IndexOf("new "' StringComparison.Ordinal) != -1 ? js.Substring(20' js.Length - 22) : js;
Magic Number,MongoUtility.Core,RuntimeMongoDbContext,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Core\RuntimeMongoDBContext.cs,CreateMongoClientSettingsByConfig,The following statement contains a magic number: mongoClientSetting.SocketTimeout = new TimeSpan(0' 0' (int)(config.SocketTimeoutMs / 1000));
Magic Number,MongoUtility.Core,RuntimeMongoDbContext,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Core\RuntimeMongoDBContext.cs,CreateMongoClientSettingsByConfig,The following statement contains a magic number: mongoClientSetting.ConnectTimeout = new TimeSpan(0' 0' (int)(config.ConnectTimeoutMs / 1000));
Magic Number,MongoUtility.Core,RuntimeMongoDbContext,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Core\RuntimeMongoDBContext.cs,CreateMongoClientSettingsByConfig,The following statement contains a magic number: item.Split(":".ToCharArray()).Length == 2
Magic Number,MongoUtility.Core,RuntimeMongoDbContext,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Core\RuntimeMongoDBContext.cs,SetCurrentCollection,The following statement contains a magic number: t.Length == 3
Magic Number,MongoUtility.Core,TagInfo,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Core\TagInfo.cs,GetTagPath,The following statement contains a magic number: return objectTag.Split(":".ToCharArray()).Length == 2 ? objectTag.Split(":".ToCharArray())[1] : string.Empty;
Magic Number,MongoUtility.ToolKit,MongoHelper,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\ToolKit\MongoHelper.cs,GetCollectionSchame,The following statement contains a magic number: var checkRecordCnt = 100;
Magic Number,MongoUtility.ToolKit,MongoHelper,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\ToolKit\MongoHelper.cs,GetSize,The following statement contains a magic number: byte unitOrder = 2;
Magic Number,MongoUtility.ToolKit,MongoHelper,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\ToolKit\MongoHelper.cs,GetSize,The following statement contains a magic number: var tempSize = size / Math.Pow(2' 20);
Magic Number,MongoUtility.ToolKit,MongoHelper,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\ToolKit\MongoHelper.cs,GetSize,The following statement contains a magic number: var tempSize = size / Math.Pow(2' 20);
Magic Number,MongoUtility.ToolKit,MongoHelper,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\ToolKit\MongoHelper.cs,GetSize,The following statement contains a magic number: tempSize = tempSize * 1024;
Magic Number,MongoUtility.ToolKit,MongoHelper,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\ToolKit\MongoHelper.cs,GetSize,The following statement contains a magic number: tempSize < 0.1
Magic Number,MongoUtility.ToolKit,MongoHelper,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\ToolKit\MongoHelper.cs,GetSize,The following statement contains a magic number: !(tempSize > 0.1 & tempSize < 1000)
Magic Number,MongoUtility.ToolKit,MongoHelper,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\ToolKit\MongoHelper.cs,GetSize,The following statement contains a magic number: !(tempSize > 0.1 & tempSize < 1000)
Missing Default,MongoUtility.Aggregation,QueryHelper,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Aggregation\QueryHelper.cs,GetSort,The following switch statement is missing a default case: switch (item.SortType)                  {                      case DataFilter.SortType.NoSort:                          break;                      case DataFilter.SortType.Ascending:                          sort.Ascending(item.ColName);                          break;                      case DataFilter.SortType.Descending:                          sort.Descending(item.ColName);                          break;                  }
Missing Default,MongoUtility.Aggregation,SqlHelper,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Aggregation\SqlHelper.cs,ConvertQuerySql,The following switch statement is missing a default case: switch (sqlToken[i].ToLower())                  {                      case "select":                          selectStartIndex = i;                          break;                      case "from":                          fromStartIndex = i;                          break;                      case "where":                          whereStartIndex = i;                          break;                      case "group":                          groupByStartIndex = i;                          break;                      case "order":                          orderByStartIndex = i;                          break;                  }
Missing Default,MongoUtility.Basic,BsonValueEx,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Basic\BsonValueEx.cs,GetBsonValue,The following switch statement is missing a default case: switch (mBsonType)              {                  case BasicType.BsonString:                      value = new BsonString(mBsonString);                      break;                  case BasicType.BsonInt32:                      value = new BsonInt32(mBsonInt32);                      break;                  case BasicType.BsonInt64:                      value = new BsonInt64(mBsonInt64);                      break;                  case BasicType.BsonDecimal128:                      value = new BsonDecimal128(mBSonDecimal128);                      break;                  case BasicType.BsonDouble:                      value = new BsonDouble(mBsonDouble);                      break;                  case BasicType.BsonDateTime:                      value = new BsonDateTime(mBsonDateTime);                      break;                  case BasicType.BsonBoolean:                      value = mBsonBoolean ? BsonBoolean.True : BsonBoolean.False;                      break;                    case BasicType.BsonMaxKey:                      value = BsonMaxKey.Value;                      break;                  case BasicType.BsonMinKey:                      value = BsonMinKey.Value;                      break;                  case BasicType.BsonBinary:                      value = new BsonBinaryData(mBsonBinary);                      break;              }
Missing Default,MongoUtility.Basic,EnumMgr,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Basic\EnumMgr.cs,GetKeyString,The following switch statement is missing a default case: switch (key.Value.ToString())                  {                      case "1":                          keyString += IndexType.Ascending.ToString();                          break;                      case "-1":                          keyString += IndexType.Descending.ToString();                          break;                      case "2d":                          keyString += IndexType.GeoSpatial.ToString();                          break;                      case "2dsphere":                          keyString += IndexType.GeoSpatialSpherical.ToString();                          break;                      case "geoHaystack":                          keyString += IndexType.GeoSpatialHaystack.ToString();                          break;                      case "hashed":                          keyString += IndexType.Hashed.ToString();                          break;                      case "text":                          keyString += IndexType.Text.ToString();                          break;                  }
Missing Default,MongoUtility.Command,Operater,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Command\Collection.cs,IsSystemDataBase,The following switch statement is missing a default case: switch (dataBaseName)              {                  case ConstMgr.DatabaseNameLocal:                  case ConstMgr.DatabaseNameConfig:                  case ConstMgr.DatabaseNameAdmin:                      return true;              }
Missing Default,MongoUtility.Command,CommandExecute,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Command\CommandExecute.cs,ExecuteMongoCommand,The following switch statement is missing a default case: switch (mMongoCommand.RunLevel)              {                  case EnumMgr.PathLevel.CollectionAndView:                      if (string.IsNullOrEmpty(mMongoCommand.CommandString))                      {                          mCommandResult = ExecuteMongoColCommand(mMongoCommand.CmdDocument'                              RuntimeMongoDbContext.GetCurrentCollection());                      }                      else                      {                          mCommandResult = ExecuteMongoColCommand(mMongoCommand.CommandString'                              RuntimeMongoDbContext.GetCurrentCollection());                      }                      break;                  case EnumMgr.PathLevel.Database:                      if (string.IsNullOrEmpty(mMongoCommand.DatabaseName))                      {                          mCommandResult = ExecuteMongoDBCommand(mMongoCommand.CmdDocument' RuntimeMongoDbContext.GetCurrentDataBase());                      }                      else                      {                          var db = RuntimeMongoDbContext.GetCurrentClient().GetDatabase(mMongoCommand.DatabaseName);                          mCommandResult = ExecuteMongoDBCommand(mMongoCommand.CmdDocument' db);                      }                      break;                  case EnumMgr.PathLevel.Instance:                      mCommandResult = ExecuteMongoSvrCommand(mMongoCommand.CmdDocument'                          RuntimeMongoDbContext.GetCurrentServer());                      break;              }
Missing Default,MongoUtility.Command,ExportImport,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Command\ExportImport.cs,ExportToFile,The following switch statement is missing a default case: switch (exportType)              {                  case EnumMgr.ExportType.Text:                      ExportToJson(dataList' excelFileName' MongoHelper.JsonWriterSettings);                      break;                  case EnumMgr.ExportType.Excel:                  case EnumMgr.ExportType.Xml:                      break;              }
Missing Default,MongoUtility.Command,Gfs,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Command\GFS.cs,UpLoadFile,The following switch statement is missing a default case: switch (option.AlreadyOpt)              {                  case EnumGfsAlready.JustAddIt:                      gfs.Upload(strFileName' remoteName);                      return UploadResult.Complete;                  case EnumGfsAlready.RenameIt:                      var extendName = new FileInfo(strFileName).Extension;                      var mainName = remoteName.Substring(0' remoteName.Length - extendName.Length);                      var i = 1;                      while (gfs.Exists(mainName + i + extendName))                      {                          i++;                      }                      gfs.Upload(strFileName' mainName + i + extendName);                      return UploadResult.Complete;                  case EnumGfsAlready.SkipIt:                      return UploadResult.Skip;                  case EnumGfsAlready.OverwriteIt:                      gfs.Delete(remoteName);                      gfs.Upload(strFileName' remoteName);                      return UploadResult.Complete;                  case EnumGfsAlready.Stop:                      return UploadResult.Skip;              }
Missing Default,MongoUtility.Core,TagInfo,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Core\TagInfo.cs,TagType2PathLevel,The following switch statement is missing a default case: switch (strTagType)              {                  case ConstMgr.ConnectionTag:                      level = EnumMgr.PathLevel.Connection;                      break;                  case ConstMgr.DatabaseTag:                      level = EnumMgr.PathLevel.Database;                      break;                  case ConstMgr.CollectionTag:                  case ConstMgr.ViewTag:                      level = EnumMgr.PathLevel.CollectionAndView;                      break;              }
Missing Default,MongoUtility.Security,MongoResource,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\Security\MongoResource.cs,GetBsonDoc,The following switch statement is missing a default case: switch (Type)              {                  case ResourceType.DataBase:                      ResourceContent = new BsonDocument("db"' DataBaseName)                      {                          { "collection"' CollectionName }                      };                      break;                  case ResourceType.Cluster:                      ResourceContent = new BsonDocument("cluster"' BsonBoolean.True);                      break;                  case ResourceType.Any:                      ResourceContent = new BsonDocument("anyResource"'BsonBoolean.True);                      break;              }
Missing Default,MongoUtility.ToolKit,MongodbDosCommand,D:\research\architectureSmells\repos\magicdict_MagicMongoDBTool\MongoUtility\ToolKit\MongodbDosCommand.cs,GetMongodCommandLine,The following switch statement is missing a default case: switch (mongod.LogLv)                  {                      case MongologLevel.Quiet:                          dosCommand += " --quiet ";                          break;                      case MongologLevel.V:                          dosCommand += " --verbose ";                          break;                      case MongologLevel.Vv:                          dosCommand += " --vv ";                          break;                      case MongologLevel.Vvv:                          dosCommand += " --vvv ";                          break;                      case MongologLevel.Vvvv:                          dosCommand += " --vvvv ";                          break;                      case MongologLevel.Vvvvv:                          dosCommand += " --vvvvv ";                          break;                  }
