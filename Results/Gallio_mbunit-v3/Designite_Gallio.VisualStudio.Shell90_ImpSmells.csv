Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Gallio.VisualStudio.Shell.Core,ShellHooks,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Core\ShellHooks.cs,HandleExec,The method has 5 parameters. Parameters: commandName' executeOption' variantIn' variantOut' handled
Long Parameter List,Gallio.VisualStudio.Shell.Core,ShellAddInHandler,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Core\ShellAddInHandler.cs,Exec,The method has 5 parameters. Parameters: commandName' executeOption' variantIn' variantOut' handled
Long Parameter List,Gallio.VisualStudio.Shell.UI.Commands,DefaultCommandManager,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\UI\Commands\DefaultCommandManager.cs,Exec,The method has 5 parameters. Parameters: commandName' executeOption' variantIn' variantOut' handled
Long Identifier,Gallio.Loader,LoaderImpl,C:\repos\Gallio_mbunit-v3\src\SDK\Loader\Gallio.Loader.cs,,The length of the parameter BootstrapInstallAssemblyLoaderMethodName is 40.
Long Identifier,Gallio.Loader,LoaderImpl,C:\repos\Gallio_mbunit-v3\src\SDK\Loader\Gallio.Loader.cs,,The length of the parameter BootstrapSetupRuntimeMethodName is 31.
Long Identifier,Gallio.Loader,LoaderImpl,C:\repos\Gallio_mbunit-v3\src\SDK\Loader\Gallio.Loader.cs,,The length of the parameter BootstrapAddHintDirectoryMethodName is 35.
Long Statement,Gallio.Loader,VersionPolicy,C:\repos\Gallio_mbunit-v3\src\SDK\Loader\Gallio.Loader.VersionPolicy.cs,GetVersionNumber,The length of the statement  "            var attribs = (AssemblyFileVersionAttribute[]) assembly.GetCustomAttributes(typeof(AssemblyFileVersionAttribute)' false); " is 121.
Long Statement,Gallio.VisualStudio.Shell.Core,ShellAddInHandler,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Core\ShellAddInHandler.cs,QueryStatus,The length of the statement  "            ShellProxy.Instance.InvokeHook(hooks => hooks.HandleQueryStatus(commandName' neededText' ref statusOptionCopy' ref commandTextCopy)); " is 133.
Long Statement,Gallio.VisualStudio.Shell.Core,ShellAddInHandler,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Core\ShellAddInHandler.cs,Exec,The length of the statement  "            ShellProxy.Instance.InvokeHook(hooks => hooks.HandleExec(commandName' executeOption' ref variantInCopy' ref variantOutCopy' ref handledCopy)); " is 142.
Long Statement,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,LoadAssemblyFromImpl,The length of the statement  "            throw new NotSupportedException("The Visual Studio CodeModel metadata policy does not support loading assemblies from files."); " is 127.
Long Statement,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,GetFieldAttributes,The length of the statement  "            ReflectorFlagsUtils.AddFlagIfTrue(ref flags' FieldAttributes.InitOnly' fieldHandle.ConstKind == vsCMConstKind.vsCMConstKindReadOnly); " is 133.
Long Statement,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,GetFieldAttributes,The length of the statement  "            ReflectorFlagsUtils.AddFlagIfTrue(ref flags' FieldAttributes.Literal' fieldHandle.ConstKind == vsCMConstKind.vsCMConstKindConst); " is 129.
Long Statement,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,GetFunctionAttributes,The length of the statement  "            ReflectorFlagsUtils.AddFlagIfTrue(ref flags' MethodAttributes.Abstract' (functionHandle.OverrideKind & vsCMOverrideKind.vsCMOverrideKindAbstract) != 0); " is 152.
Long Statement,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,GetFunctionAttributes,The length of the statement  "            ReflectorFlagsUtils.AddFlagIfTrue(ref flags' MethodAttributes.Final' (functionHandle.OverrideKind & vsCMOverrideKind.vsCMOverrideKindSealed) != 0); " is 147.
Long Statement,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,GetFunctionAttributes,The length of the statement  "            ReflectorFlagsUtils.AddFlagIfTrue(ref flags' MethodAttributes.Virtual' (functionHandle.OverrideKind & vsCMOverrideKind.vsCMOverrideKindVirtual) != 0); " is 150.
Long Statement,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,GetFunctionAttributes,The length of the statement  "            ReflectorFlagsUtils.AddFlagIfTrue(ref flags' MethodAttributes.NewSlot' (functionHandle.OverrideKind & vsCMOverrideKind.vsCMOverrideKindOverride) == 0); " is 151.
Long Statement,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,GetFunctionParameters,The length of the statement  "            return ConvertCodeElementsToArray<CodeParameter2' StaticParameterWrapper>(functionHandle.Parameters' delegate(CodeParameter2 parameter) " is 135.
Long Statement,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,GetParameterAttributes,The length of the statement  "            ReflectorFlagsUtils.AddFlagIfTrue(ref flags' ParameterAttributes.In' (kind & vsCMParameterKind.vsCMParameterKindIn) != 0); " is 122.
Long Statement,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,GetParameterAttributes,The length of the statement  "            ReflectorFlagsUtils.AddFlagIfTrue(ref flags' ParameterAttributes.Out' (kind & vsCMParameterKind.vsCMParameterKindOut) != 0); " is 124.
Long Statement,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,GetParameterAttributes,The length of the statement  "            ReflectorFlagsUtils.AddFlagIfTrue(ref flags' ParameterAttributes.Optional' (kind & vsCMParameterKind.vsCMParameterKindOptional) != 0); " is 134.
Long Statement,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,GetParameterType,The length of the statement  "            if ((parameterHandle.ParameterKind & (vsCMParameterKind.vsCMParameterKindRef | vsCMParameterKind.vsCMParameterKindOut)) != 0) " is 125.
Long Statement,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,GetTypeAttributes,The length of the statement  "            ReflectorFlagsUtils.AddFlagIfTrue(ref flags' TypeAttributes.Interface' typeHandle.Kind == vsCMElement.vsCMElementInterface); " is 124.
Long Statement,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,WrapAccessor,The length of the statement  "            return accessorHandle != null ? new StaticMethodWrapper(this' accessorHandle' member.DeclaringType' member.ReflectedType' member.Substitution) : null; " is 150.
Complex Conditional,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,GetTypeNestedTypes,The conditional expression  "kind == vsCMElement.vsCMElementClass                      || kind == vsCMElement.vsCMElementDelegate                      || kind == vsCMElement.vsCMElementEnum                      || kind == vsCMElement.vsCMElementEvent                      || kind == vsCMElement.vsCMElementInterface                      || kind == vsCMElement.vsCMElementStruct"  is complex.
Empty Catch Block,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,GetAssemblyType,The method has an empty catch block.
Empty Catch Block,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,GetProjectAssemblyName,The method has an empty catch block.
Empty Catch Block,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,GetProjectTargetPath,The method has an empty catch block.
Magic Number,Gallio.VisualStudio.Shell.UI.Commands,DefaultCommandManager,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\UI\Commands\DefaultCommandManager.cs,InstallActions,The following statement contains a magic number: foreach (var commandHandle in commandHandles)              {                  CommandTraits traits = commandHandle.GetTraits();                    Commands2 commands = (Commands2) shell.DTE.Commands;                    Command command;                  try                  {                      command = commands.Item(traits.CommandName' 0);                  }                  catch                  {                      object[] contextGuids = null;                      command = commands.AddNamedCommand2(shell.ShellAddIn'                          traits.CommandName'                          traits.Caption'                          traits.Tooltip'                          true' 59' ref contextGuids'                          (int) ToVsCommandStatus(traits.Status)'                          (int) ToVsCommandStyle(traits.Style)'                          ToVsCommandControlType(traits.ControlType));                  }                    CommandBarButton[] controls = GenericCollectionUtils.ConvertAllToArray(traits.CommandBarPaths'                      commandBarPath =>                      {                          CommandBar commandBar = GetCommandBar(commandBarPath);                          CommandBarButton commandBarButton = GetOrCreateCommandBarButton(commandBar' command' commands);                          return commandBarButton;                      });                    CommandPresentation presentation = new CommandPresentation(commandHandle' command' controls);                  presentation.Icon = traits.Icon;                  presentation.Caption = traits.Caption;                  presentation.Tooltip = traits.Tooltip;                  presentation.Status = traits.Status;                    commandPresentations.Add(traits.CommandName' presentation);              }
Missing Default,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,Wrap,The following switch statement is missing a default case: switch (target.Kind)              {                  case vsCMElement.vsCMElementClass:                  case vsCMElement.vsCMElementStruct:                  case vsCMElement.vsCMElementInterface:                  case vsCMElement.vsCMElementDelegate:                  case vsCMElement.vsCMElementEnum:                      return Wrap((CodeType)target);                  case vsCMElement.vsCMElementFunction:                      return Wrap((CodeFunction2) target);                  case vsCMElement.vsCMElementProperty:                      return Wrap((CodeProperty2) target);                  case vsCMElement.vsCMElementVariable:                      return Wrap((CodeVariable2) target);                  case vsCMElement.vsCMElementEvent:                      return Wrap((CodeEvent)target);                  case vsCMElement.vsCMElementParameter:                      return Wrap((CodeParameter2) target);              }
Missing Default,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,GetMemberCustomAttributes,The following switch statement is missing a default case: switch (memberHandle.Kind)              {                  case vsCMElement.vsCMElementClass:                      return WrapAttributes(((CodeClass2)memberHandle).Attributes);                  case vsCMElement.vsCMElementStruct:                      return WrapAttributes(((CodeStruct2)memberHandle).Attributes);                  case vsCMElement.vsCMElementInterface:                      return WrapAttributes(((CodeInterface2)memberHandle).Attributes);                  case vsCMElement.vsCMElementDelegate:                      return WrapAttributes(((CodeDelegate2)memberHandle).Attributes);                  case vsCMElement.vsCMElementEnum:                      return WrapAttributes(((CodeEnum)memberHandle).Attributes);                  case vsCMElement.vsCMElementFunction:                      return WrapAttributes(((CodeFunction2)memberHandle).Attributes);                  case vsCMElement.vsCMElementProperty:                      return WrapAttributes(((CodeProperty2)memberHandle).Attributes);                  case vsCMElement.vsCMElementVariable:                      return WrapAttributes(((CodeVariable2)memberHandle).Attributes);                  case vsCMElement.vsCMElementEvent:                      return WrapAttributes(((CodeEvent)memberHandle).Attributes);              }
Missing Default,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,GetFieldAttributes,The following switch statement is missing a default case: switch (fieldHandle.Access)              {                  case vsCMAccess.vsCMAccessPublic:                      flags |= FieldAttributes.Public;                      break;                  case vsCMAccess.vsCMAccessPrivate:                      flags |= FieldAttributes.Private;                      break;                  case vsCMAccess.vsCMAccessDefault:                  case vsCMAccess.vsCMAccessProject:                      flags |= FieldAttributes.Assembly;                      break;                  case vsCMAccess.vsCMAccessProtected:                      flags |= FieldAttributes.Family;                      break;                  case vsCMAccess.vsCMAccessAssemblyOrFamily:                  case vsCMAccess.vsCMAccessProjectOrProtected:                      flags |= FieldAttributes.FamORAssem;                      break;              }
Missing Default,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,GetFunctionAttributes,The following switch statement is missing a default case: switch (functionHandle.Access)              {                  case vsCMAccess.vsCMAccessPublic:                      flags |= MethodAttributes.Public;                      break;                  case vsCMAccess.vsCMAccessPrivate:                      flags |= MethodAttributes.Private;                      break;                  case vsCMAccess.vsCMAccessDefault:                  case vsCMAccess.vsCMAccessProject:                      flags |= MethodAttributes.Assembly;                      break;                  case vsCMAccess.vsCMAccessProtected:                      flags |= MethodAttributes.Family;                      break;                  case vsCMAccess.vsCMAccessAssemblyOrFamily:                  case vsCMAccess.vsCMAccessProjectOrProtected:                      flags |= MethodAttributes.FamORAssem;                      break;              }
Missing Default,Gallio.VisualStudio.Shell.Reflection,CodeModelReflectionPolicy,C:\repos\Gallio_mbunit-v3\src\Extensions\VisualStudio\Gallio.VisualStudio.Shell\Reflection\CodeModelReflectionPolicy.cs,GetTypeAttributes,The following switch statement is missing a default case: switch (typeHandle.Access)              {                  case vsCMAccess.vsCMAccessPublic:                      flags |= isNested ? TypeAttributes.NestedPublic : TypeAttributes.Public;                      break;                  case vsCMAccess.vsCMAccessPrivate:                      flags |= isNested ? TypeAttributes.NestedPrivate : TypeAttributes.NotPublic;                      break;                  case vsCMAccess.vsCMAccessDefault:                  case vsCMAccess.vsCMAccessProject:                      flags |= isNested ? TypeAttributes.NestedAssembly : TypeAttributes.NotPublic;                      break;                  case vsCMAccess.vsCMAccessProtected:                      flags |= isNested ? TypeAttributes.NestedFamily : TypeAttributes.NotPublic;                      break;                  case vsCMAccess.vsCMAccessAssemblyOrFamily:                  case vsCMAccess.vsCMAccessProjectOrProtected:                      flags |= isNested ? TypeAttributes.NestedFamORAssem : TypeAttributes.NotPublic;                      break;              }
