Implementation smell,Namespace,Class,File,Method,Description
Long Method,MbUnit.Tests.Framework,AssertTest_Xml_Exists,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Xml_Exists.cs,GetTestCases,The method has 184 lines of code.
Long Method,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The method has 118 lines of code.
Long Parameter List,MbUnit.Tests.Framework,CatchExceptionAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\CatchExceptionAttributeTest.cs,CatchExceptionOutcome,The method has 5 parameters. Parameters: testMethodName' expectedOutcomeStatus' expectedOutcomeCategory' logStreamName' expectedLogOutput
Long Parameter List,MbUnit.Tests.Framework,AssertTest_Xml_Exists,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Xml_Exists.cs,Assert_Exists,The method has 6 parameters. Parameters: description' xml' path' expectedValue' options' shouldPass
Long Parameter List,MbUnit.Tests.Framework.ContractVerifiers,ImmutableSample,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\ImmutabilityContractTest.cs,ImmutableSample,The method has 5 parameters. Parameters: number' text' subSample' digit' function
Long Identifier,MbUnit.Tests.Framework,SampleObject,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,,The length of the parameter instanceCustomEventAddRemoveCount is 33.
Long Identifier,MbUnit.Tests.Framework,SampleObject,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,,The length of the parameter staticCustomEventAddRemoveCount is 31.
Long Statement,MbUnit.Tests.Framework,AssertTest_Count,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Count.cs,Count_fail,The length of the statement  "            Assert.Like(failures[0].Description' @"^Expected the sequence to contain a certain number of elements but \d+ counting strateg(y has|ies have) failed.$"); " is 154.
Long Statement,MbUnit.Tests.Framework,AssertTest_HasAttribute,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_HasAttribute.cs,AssertCommonFailureLabeledValues,The length of the statement  "            Assert.AreEqual("MbUnit.Tests.Framework.AssertTest_HasAttribute." + target' failure.LabeledValues[0].FormattedValue.ToString()); " is 128.
Long Statement,MbUnit.Tests.Framework,AssertTest_HasAttribute,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_HasAttribute.cs,AssertCommonFailureLabeledValues,The length of the statement  "            Assert.AreEqual("MbUnit.Tests.Framework.AssertTest_HasAttribute." + attribute' failure.LabeledValues[1].FormattedValue.ToString()); " is 131.
Long Statement,MbUnit.Tests.Framework,AssertTest_HasAttribute,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_HasAttribute.cs,HasAttribute_on_reflected_object_should_fail,The length of the statement  "            Assert.AreEqual("Expected the searched attribute to decorate the target object; but none was found."' failures[0].Description); " is 127.
Long Statement,MbUnit.Tests.Framework,AssertTest_HasAttribute,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_HasAttribute.cs,GetMemberSetFromSampleType,The length of the statement  "            yield return new object[] { Mirror.ForType(type)["SampleProperty"]' "Hello from property"' "' Property:SampleProperty" }; " is 121.
Long Statement,MbUnit.Tests.Framework,AssertTest_HasAttribute,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_HasAttribute.cs,HasAttribute_on_mirrored_object_should_fail,The length of the statement  "            Assert.AreEqual("Expected the searched attribute to decorate the target object; but none was found."' failures[0].Description); " is 127.
Long Statement,MbUnit.Tests.Framework,AssertTest_HasAttribute,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_HasAttribute.cs,HasAttributes_on_reflected_object_should_pass,The length of the statement  "            Assert.AreElementsEqualIgnoringOrder(attributes.Select(x => x.Text)' Enumerable.Range(1' 3).Select(i => expectedMessage + " #" + i)); " is 133.
Long Statement,MbUnit.Tests.Framework,AssertTest_HasAttribute,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_HasAttribute.cs,HasAttributes_on_mirroed_object_should_pass,The length of the statement  "            Assert.AreElementsEqualIgnoringOrder(attributes.Select(x => x.Text)' Enumerable.Range(1' 3).Select(i => expectedMessage + " #" + i)); " is 133.
Long Statement,MbUnit.Tests.Framework,AssertTest_HasAttribute,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_HasAttribute.cs,HasAttributes_on_reflected_object_with_exectedCount_should_pass,The length of the statement  "            Assert.AreElementsEqualIgnoringOrder(attributes.Select(x => x.Text)' Enumerable.Range(1' 3).Select(i => expectedMessage + " #" + i)); " is 133.
Long Statement,MbUnit.Tests.Framework,AssertTest_HasAttribute,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_HasAttribute.cs,HasAttributes_on_mirroed_object_with_exectedCount_should_pass,The length of the statement  "            Assert.AreElementsEqualIgnoringOrder(attributes.Select(x => x.Text)' Enumerable.Range(1' 3).Select(i => expectedMessage + " #" + i)); " is 133.
Long Statement,MbUnit.Tests.Framework,AssertTest_HasAttribute,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_HasAttribute.cs,HasAttributes_finds_derived_types_as_well,The length of the statement  "            Assert.AreElementsEqualIgnoringOrder(new[] { "Foo #1"' "Foo #2"' "Child Foo #1"' "Child Foo #2" }' attributes.Select(x => x.Text)); " is 131.
Long Statement,MbUnit.Tests.Framework,ImpersonateAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ImpersonateAttributeTest.cs,Test,The length of the statement  "            var run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(ImpersonateAttributeSample).GetMethod("Test"))); " is 125.
Long Statement,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_IndexedProperty,The length of the statement  "            Assert.AreEqual("Could not find a unique matching member 'Item' of type 'MbUnit.Tests.Framework.MirrorTest+SampleObject'.  There were 2 matches out of 2 members with the same name.  Try providing additional information to narrow down the choices."' ex.Message); " is 261.
Long Statement,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_IndexedProperty,The length of the statement  "            Assert.AreEqual(2' ((PropertyInfo)mirror["Item"].WithSignature(typeof(int)' typeof(int)).MemberInfo).GetIndexParameters().Length); " is 130.
Long Statement,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod,The length of the statement  "            Assert.AreEqual("Could not find a unique matching member 'InstanceMethod' of type 'MbUnit.Tests.Framework.MirrorTest+SampleObject'.  There were 5 matches out of 5 members with the same name.  Try providing additional information to narrow down the choices."' ex.Message); " is 271.
Long Statement,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod,The length of the statement  "            Assert.AreEqual(0' ((MethodInfo)mirror["InstanceMethod"].WithGenericArgs().WithSignature().MemberInfo).GetParameters().Length); " is 127.
Long Statement,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod,The length of the statement  "            Assert.AreEqual("InstanceMethod"' mirror["InstanceMethod"].WithGenericArgs().WithSignature(typeof(int)).MemberInfo.Name); " is 121.
Long Statement,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod,The length of the statement  "            Assert.AreEqual(1' ((MethodInfo)mirror["InstanceMethod"].WithGenericArgs().WithSignature(typeof(int)).MemberInfo).GetParameters().Length); " is 138.
Long Statement,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod,The length of the statement  "            Assert.AreEqual(2' ((MethodInfo)mirror["InstanceMethod"].WithSignature(typeof(int)' typeof(int)).MemberInfo).GetParameters().Length); " is 133.
Long Statement,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod,The length of the statement  "            Assert.AreEqual("InstanceMethod"' mirror["InstanceMethod"].WithGenericArgs(typeof(int)).WithSignature().MemberInfo.Name); " is 121.
Long Statement,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod,The length of the statement  "            Assert.AreEqual(0' ((MethodInfo)mirror["InstanceMethod"].WithGenericArgs(typeof(int)).WithSignature().MemberInfo).GetParameters().Length); " is 138.
Long Statement,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod,The length of the statement  "            Assert.AreEqual("InstanceMethod"' mirror["InstanceMethod"].WithGenericArgs(typeof(int)).WithSignature(typeof(int)).MemberInfo.Name); " is 132.
Long Statement,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod,The length of the statement  "            Assert.AreEqual(1' ((MethodInfo)mirror["InstanceMethod"].WithGenericArgs(typeof(int)).WithSignature(typeof(int)).MemberInfo).GetParameters().Length); " is 149.
Long Statement,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod_with_null_arguments,The length of the statement  "            Assert.AreEqual("Could not find a unique matching member 'InstanceMethodForNull' of type 'MbUnit.Tests.Framework.MirrorTest+SampleObject'.  There were 2 matches out of 2 members with the same name.  Try providing additional information to narrow down the choices."' ex.Message); " is 278.
Long Statement,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod_with_null_arguments,The length of the statement  "            Assert.AreEqual("InstanceMethodForNull"' mirror["InstanceMethodForNull"].WithSignature(typeof(string)).MemberInfo.Name); " is 120.
Long Statement,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod_with_null_arguments,The length of the statement  "            Assert.AreEqual(1' ((MethodInfo)mirror["InstanceMethodForNull"].WithSignature(typeof(string)).MemberInfo).GetParameters().Length); " is 130.
Long Statement,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod_with_null_arguments,The length of the statement  "            Assert.AreEqual(1' ((MethodInfo)mirror["InstanceMethodForNull"].WithSignature(typeof(int)).MemberInfo).GetParameters().Length); " is 127.
Long Statement,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticMethod,The length of the statement  "            Assert.AreEqual("Could not find a unique matching member 'StaticMethod' of type 'MbUnit.Tests.Framework.MirrorTest+SampleObject'.  There were 5 matches out of 5 members with the same name.  Try providing additional information to narrow down the choices."' ex.Message); " is 269.
Long Statement,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticMethod,The length of the statement  "            Assert.AreEqual(0' ((MethodInfo)mirror["StaticMethod"].WithGenericArgs().WithSignature().MemberInfo).GetParameters().Length); " is 125.
Long Statement,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticMethod,The length of the statement  "            Assert.AreEqual(1' ((MethodInfo)mirror["StaticMethod"].WithGenericArgs().WithSignature(typeof(int)).MemberInfo).GetParameters().Length); " is 136.
Long Statement,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticMethod,The length of the statement  "            Assert.AreEqual(2' ((MethodInfo)mirror["StaticMethod"].WithSignature(typeof(int)' typeof(int)).MemberInfo).GetParameters().Length); " is 131.
Long Statement,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_Constructor,The length of the statement  "            Assert.AreEqual("Could not find a unique matching member '.ctor' of type 'MbUnit.Tests.Framework.MirrorTest+SampleObject'.  There were 2 matches out of 2 members with the same name.  Try providing additional information to narrow down the choices."' ex.Message); " is 262.
Long Statement,MbUnit.Tests.Framework,SharedDataSetTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\SharedDataSetTest.cs,UseInstanceParameters,The length of the statement  "            TestStepRun[] runs = Runner.GetTestStepRuns(CodeReference.CreateFromMember(typeof(SharedParamFixtureTest).GetMethod("UseInstanceParameters"))).ToArray(); " is 153.
Long Statement,MbUnit.Tests.Framework,RepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RepeatTest.cs,RunTestRepeatedly,The length of the statement  "            TestStepRun testRun = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(RepeatTestSample).GetMethod("Test"))); " is 127.
Long Statement,MbUnit.Tests.Framework,ThreadedRepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ThreadedRepeatTest.cs,RunTestRepeatedly,The length of the statement  "            TestStepRun testRun = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(ThreadedRepeatTestSample).GetMethod("Test"))); " is 135.
Long Statement,MbUnit.Tests.Framework,ThreadedRepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ThreadedRepeatTest.cs,RunFixtureRepeatedly,The length of the statement  "            TestStepRun fixtureRun = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromType(typeof(ThreadedRepeatFixtureSample))); " is 121.
Long Statement,MbUnit.Tests.Framework,CatchExceptionAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\CatchExceptionAttributeTest.cs,CatchExceptionOutcome,The length of the statement  "            var run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(CatchExceptionSample).GetMethod(testMethodName))); " is 127.
Long Statement,MbUnit.Tests.Framework,CatchExceptionSample,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\CatchExceptionAttributeTest.cs,CatchExceptionExample4,The length of the statement  "                //throw new TimeoutException("A deadlock occurred."); //outcome would be: new TestOutcome(TestStatus.Inconclusive' "deadlock") " is 126.
Long Statement,MbUnit.Tests.Framework,CatchExceptionSample,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\CatchExceptionAttributeTest.cs,CatchExceptionExample4,The length of the statement  "                //throw new TimeoutException("The server is not responding."); //outcome would be: new TestOutcome(TestStatus.Inconclusive' "timeout") " is 134.
Long Statement,MbUnit.Tests.Framework,AssertExceptionAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertExceptionAttributeTest.cs,AssertExceptionOutcome,The length of the statement  "            var run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(AssertExceptionSample).GetMethod(testMethodName))); " is 128.
Long Statement,MbUnit.Tests.Framework,AssertExceptionSample,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertExceptionAttributeTest.cs,AssertExceptionExample3,The length of the statement  "                //throw new TimeoutException("A deadlock occurred."); //outcome would be: new TestOutcome(TestStatus.Inconclusive' "deadlock") " is 126.
Long Statement,MbUnit.Tests.Framework,AssertExceptionSample,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertExceptionAttributeTest.cs,AssertExceptionExample3,The length of the statement  "                //throw new TimeoutException("The server is not responding."); //outcome would be: new TestOutcome(TestStatus.Inconclusive' "timeout") " is 134.
Long Statement,MbUnit.Tests.Framework,AssertImplementationConsistencyTest<TAssert>,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertImplementationConsistencyTest.cs,EachAssertHasFlavorsWithAndWithoutMessageFormatAndArgs,The length of the statement  "                    typeof(TAssert).GetMethods(BindingFlags.Static | BindingFlags.Instance | BindingFlags.Public | BindingFlags.DeclaredOnly)) " is 122.
Long Statement,MbUnit.Tests.Framework,AssertImplementationConsistencyTest<TAssert>,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertImplementationConsistencyTest.cs,EachAssertHasFlavorsWithAndWithoutMessageFormatAndArgs,The length of the statement  "                Assert.Contains(asserts' counterpart' "Assert type {0} should contain a counterpart for its '{1}' assert with / without a custom message format and arguments."' " is 160.
Long Statement,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,Pairs_Failure_AtIndex,The length of the statement  "            Assert.AreEqual("Assertion failed on two values at a particular index within both sequences."' failures[0].Description); " is 120.
Long Statement,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,Pairs_Failure_LeftNullButNotRight,The length of the statement  "            Assert.AreEqual("Expected the left and right sequences to either both be null or both be non-null."' failures[0].Description); " is 126.
Long Statement,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,Pairs_Failure_RightNullButNotLeft,The length of the statement  "            Assert.AreEqual("Expected the left and right sequences to either both be null or both be non-null."' failures[0].Description); " is 126.
Long Statement,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,KeyedPairs_Failure_LeftNullButNotRight,The length of the statement  "            Assert.AreEqual("Expected the left and right dictionaries to either both be null or both be non-null."' failures[0].Description); " is 129.
Long Statement,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,KeyedPairs_Failure_RightNullButNotLeft,The length of the statement  "            Assert.AreEqual("Expected the left and right dictionaries to either both be null or both be non-null."' failures[0].Description); " is 129.
Long Statement,MbUnit.Tests.Framework,AssertTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest.cs,Terminate_with_message,The length of the statement  "            var ex = Assert.Throws<TestTerminatedException>(() => Assert.Terminate(TestOutcome.Explicit' "{0} {1}."' "MbUnit"' "message")); " is 127.
Long Statement,MbUnit.Tests.Framework,AssertTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest.cs,TerminateSilently_with_message,The length of the statement  "            var ex = Assert.Throws<SilentTestException>(() => Assert.TerminateSilently(TestOutcome.Error' "{0} {1}."' "MbUnit"' "message")); " is 128.
Long Statement,MbUnit.Tests.Framework,AssertTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest.cs,Multiple_reports_summary_of_a_single_failure,The length of the statement  "            Assert.AreEqual(0' failures[0].InnerFailures.Count' "Should not contain inner failures because they are logged immediately."); " is 126.
Long Statement,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsNotEqual_fails_when_elements_are_in_different_order,The length of the statement  "            Assert.AreEqual("Expected the unexpected and actual sequence to have different elements but all elements were equal."' failures[0].Description); " is 144.
Long Statement,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsSame_fails_when_elements_are_in_different_order,The length of the statement  "            Assert.AreEqual("Expected elements to be referentially equal but they differ in at least one position."' failures[0].Description); " is 130.
Long Statement,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsSame_fails_with_custom_message,The length of the statement  "            AssertionFailure[] failures = Capture(() => Assert.AreElementsSame(new[] { o1 }' new[] { o2 }' "{0} message"' "custom")); " is 121.
Long Statement,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsNotSame_fails_with_custom_message,The length of the statement  "            AssertionFailure[] failures = Capture(() => Assert.AreElementsNotSame(new[] { o }' new[] { o }' "{0} message"' "custom")); " is 122.
Long Statement,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsSameIgnoringOrder_fails_when_excess_or_missing_elements,The length of the statement  "                => Assert.AreElementsSameIgnoringOrder(new[] { o1' o2' o3' o2' o3' o1 }' new List<object> { o4' o2' o1' o1' o4' o1' o4 })); " is 123.
Long Statement,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsSameIgnoringOrder_fails_when_excess_or_missing_elements,The length of the statement  "            Assert.AreEqual("Expected elements to be referentially equal but possibly in a different order."' failures[0].Description); " is 123.
Long Statement,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsSameIgnoringOrder_fails_with_custom_message,The length of the statement  "            AssertionFailure[] failures = Capture(() => Assert.AreElementsSameIgnoringOrder(new[] { o1 }' new[] { o2 }' "{0} message"' "custom")); " is 134.
Long Statement,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,ForAll_should_fail,The length of the statement  "            Assert.AreEqual("Expected all the elements of the sequence to meet the specified condition' but at least one failed."' failures[0].Description); " is 144.
Long Statement,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,ForAllAction_should_fail,The length of the statement  "            Assert.AreEqual("Expected all the elements of the sequence to pass assert validations' but at least one failed."' failures[0].Description); " is 139.
Long Statement,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,ForAllActionIndex_should_fail,The length of the statement  "            Assert.AreEqual("Expected all the elements of the sequence to pass assert validations' but at least one failed."' failures[0].Description); " is 139.
Long Statement,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,ForAllActionIndex_should_fail,The length of the statement  "            Assert.Count(1' failures[0].InnerFailures); // The D'Artagnan should not be checked because only the first three entries are validated. " is 135.
Long Statement,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,Exists_should_fail,The length of the statement  "            Assert.AreEqual("Expected at least one element of the sequence to meet the specified condition' but none passed."' failures[0].Description); " is 140.
Long Statement,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,DoesNotExist_should_fail,The length of the statement  "            Assert.AreEqual("Expected none of the elements of the sequence to meet the specified condition' but one did."' failures[0].Description); " is 136.
Long Statement,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,IsEmpty_should_fail,The length of the statement  "            Assert.Like(failures[0].Description' @"^Expected the sequence to be empty but \d+ counting strateg(y has|ies have) failed.$"); " is 126.
Long Statement,MbUnit.Tests.Framework,AssertTest_Exceptions,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Exceptions.cs,Throws_passes_and_returns_exception_when_expected_exception_occurs,The length of the statement  "            InvalidOperationException ex = Assert.Throws<InvalidOperationException>(() => { throw new InvalidOperationException("Exception"); }); " is 133.
Long Statement,MbUnit.Tests.Framework,AssertTest_Exceptions,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Exceptions.cs,Throws_with_message_passes_and_returns_exception_when_expected_exception_occurs,The length of the statement  "            InvalidOperationException ex = Assert.Throws<InvalidOperationException>(() => { throw new InvalidOperationException("Exception"); }' "Foo"); " is 140.
Long Statement,MbUnit.Tests.Framework,AssertTest_Exceptions,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Exceptions.cs,Throws_with_type_passes_and_returns_exception_when_expected_exception_occurs,The length of the statement  "            Exception ex = Assert.Throws(typeof(InvalidOperationException)' () => { throw new InvalidOperationException("Exception"); }); " is 125.
Long Statement,MbUnit.Tests.Framework,AssertTest_Exceptions,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Exceptions.cs,Throws_with_type_with_message_passes_and_returns_exception_when_expected_exception_occurs,The length of the statement  "            Exception ex = Assert.Throws(typeof(InvalidOperationException)' () => { throw new InvalidOperationException("Exception"); }' "Foo"); " is 132.
Long Statement,MbUnit.Tests.Framework,AssertTest_Exceptions,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Exceptions.cs,Throws_fails_if_no_inner_exception,The length of the statement  "            Assert.AreEqual("The block threw an exception of the expected type' but having no inner expection."' failures[0].Description); " is 126.
Long Statement,MbUnit.Tests.Framework,AssertTest_Exceptions,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Exceptions.cs,Throws_fails_if_inner_exception_does_not_match,The length of the statement  "            Assert.AreEqual("The block threw an exception of the expected type' but having an unexpected inner expection."' failures[0].Description); " is 137.
Long Statement,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,IsAssignableFrom_fails_when_type_is_not_assignable_for_classes,The length of the statement  "            Assert.AreEqual("MbUnit.Tests.Framework.AssertTest_Reflection.Unrelated"' failures[0].LabeledValues[0].FormattedValue.ToString()); " is 130.
Long Statement,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,IsAssignableFrom_fails_when_type_is_not_assignable_for_classes,The length of the statement  "            Assert.AreEqual("MbUnit.Tests.Framework.AssertTest_Reflection.Parent"' failures[0].LabeledValues[1].FormattedValue.ToString()); " is 127.
Long Statement,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,Generic_IsAssignableFrom_fails_when_type_is_not_assignable_for_classes,The length of the statement  "            Assert.AreEqual("MbUnit.Tests.Framework.AssertTest_Reflection.Unrelated"' failures[0].LabeledValues[0].FormattedValue.ToString()); " is 130.
Long Statement,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,Generic_IsAssignableFrom_fails_when_type_is_not_assignable_for_classes,The length of the statement  "            Assert.AreEqual("MbUnit.Tests.Framework.AssertTest_Reflection.Parent"' failures[0].LabeledValues[1].FormattedValue.ToString()); " is 127.
Long Statement,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,IsNotAssignableFrom_fails_when_types_are_same,The length of the statement  "            Assert.AreEqual("MbUnit.Tests.Framework.AssertTest_Reflection.Parent"' failures[0].LabeledValues[0].FormattedValue.ToString()); " is 127.
Long Statement,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,IsNotAssignableFrom_fails_when_types_are_same,The length of the statement  "            Assert.AreEqual("MbUnit.Tests.Framework.AssertTest_Reflection.Parent"' failures[0].LabeledValues[1].FormattedValue.ToString()); " is 127.
Long Statement,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,IsNotAssignableFrom_fails_when_type_is_assignable_for_classes,The length of the statement  "            Assert.AreEqual("MbUnit.Tests.Framework.AssertTest_Reflection.Child"' failures[0].LabeledValues[0].FormattedValue.ToString()); " is 126.
Long Statement,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,IsNotAssignableFrom_fails_when_type_is_assignable_for_classes,The length of the statement  "            Assert.AreEqual("MbUnit.Tests.Framework.AssertTest_Reflection.Parent"' failures[0].LabeledValues[1].FormattedValue.ToString()); " is 127.
Long Statement,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,Generic_IsNotAssignableFrom_fails_when_type_is_assignable_for_classes,The length of the statement  "            Assert.AreEqual("MbUnit.Tests.Framework.AssertTest_Reflection.Child"' failures[0].LabeledValues[0].FormattedValue.ToString()); " is 126.
Long Statement,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,Generic_IsNotAssignableFrom_fails_when_type_is_assignable_for_classes,The length of the statement  "            Assert.AreEqual("MbUnit.Tests.Framework.AssertTest_Reflection.Parent"' failures[0].LabeledValues[1].FormattedValue.ToString()); " is 127.
Long Statement,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,GreaterThan_should_fail_when_type_is_not_IComparable,The length of the statement  "            Assert.AreEqual("System.InvalidOperationException: No ordering comparison defined on values of type System.Exception and System.Exception." " is 139.
Long Statement,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,GreaterThanOrEqual_with_comparer_and_message_test,The length of the statement  "            Assert.GreaterThanOrEqualTo(0' 0' new Comparer<int>((left' right) => left.CompareTo(0) + right.CompareTo(0))' "custom compare"); " is 128.
Long Statement,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,Between_with_delegate_test,The length of the statement  "            Assert.Between("banana"' "APPLE"' "COOKIES"' (left' right) => string.Compare(left' right' StringComparison.InvariantCultureIgnoreCase)); " is 136.
Long Statement,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,Between_with_comparer_test,The length of the statement  "            Assert.Between("banana"' "APPLE"' "COOKIES"' new Comparer<string>((left' right) => string.Compare(left' right' StringComparison.InvariantCultureIgnoreCase))); " is 158.
Long Statement,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,NotBetween_with_delegate_test,The length of the statement  "            Assert.NotBetween("APPLE"' "banana"' "COOKIES"' (left' right) => string.Compare(left' right' StringComparison.InvariantCultureIgnoreCase)); " is 139.
Long Statement,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,NotBetween_with_comparer_test,The length of the statement  "            Assert.NotBetween("APPLE"' "banana"' "COOKIES"' new Comparer<string>((left' right) => string.Compare(left' right' StringComparison.InvariantCultureIgnoreCase))); " is 161.
Long Statement,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,DoesNotContain_with_comparison_type_fail_test_with_custom_message,The length of the statement  "            AssertionFailure[] failures = Capture(() => Assert.DoesNotContain("ABCDEF"' "bcD"' StringComparison.OrdinalIgnoreCase' "{0} message"' "custom")); " is 145.
Long Statement,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,AreEqualIgnoreCase_fails_when_simple_values_different,The length of the statement  "            AssertionFailure[] failures = AssertTest.Capture(() => Assert.AreEqual("test"' "tEsm"' StringComparison.InvariantCultureIgnoreCase)); " is 133.
Long Statement,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,AreEqualIgnoreCase_fails_when_one_of_the_values_is_null,The length of the statement  "            AssertionFailure[] failures = AssertTest.Capture(() => Assert.AreEqual("test"' null' StringComparison.InvariantCultureIgnoreCase)); " is 131.
Long Statement,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,AreEqualIgnoreCase_fails_with_custom_message,The length of the statement  "            AssertionFailure[] failures = AssertTest.Capture(() => Assert.AreEqual(null' "test"' "{0} message {1}"' "MB1"' "Mb2"' StringComparison.InvariantCultureIgnoreCase)); " is 164.
Long Statement,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,FullMatch_fail_test_with_custom_message,The length of the statement  "            AssertionFailure[] failures = AssertTest.Capture(() => Assert.FullMatch("mbTest"' new Regex(@"[\w]{7}")' "{0} message {1}"' "MB1"' "Mb2")); " is 139.
Long Statement,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,Like_fails_when_testValue_does_not_match_regex_pattern,The length of the statement  "            Assert.AreEqual("Expected a string to contain a full or partial match of a regular expression pattern."' failures[0].Description); " is 130.
Long Statement,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,Like_fail_test_with_custom_message,The length of the statement  "            AssertionFailure[] failures = AssertTest.Capture(() => Assert.Like("mbTest"' new Regex(@"[\w]{7}")' "{0} message {1}"' "MB1"' "Mb2")); " is 134.
Long Statement,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,NotLike_fails_when_testValue_does_not_match_regex_pattern,The length of the statement  "            Assert.AreEqual("Expected a string to not contain a full or partial match of a regular expression pattern."' failures[0].Description); " is 134.
Long Statement,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,NotLike_fail_test_with_custom_message,The length of the statement  "            AssertionFailure[] failures = AssertTest.Capture(() => Assert.NotLike("mbTest"' new Regex(@"[\w]{6}")' "{0} message {1}"' "MB1"' "Mb2")); " is 137.
Long Statement,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,StartsWith_fail_test_with_custom_message,The length of the statement  "            AssertionFailure[] failures = AssertTest.Capture(() => Assert.StartsWith("mbTest"' "jb"' "{0} message {1}"' "MB1"' "Mb2")); " is 123.
Long Statement,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,StartsWith_with_comparison_type_fails_when_testValue_does_not_start_with_pattern,The length of the statement  "            AssertionFailure[] failures = AssertTest.Capture(() => Assert.StartsWith("mbTest"' "jb"' StringComparison.OrdinalIgnoreCase)); " is 126.
Long Statement,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,EndsWith_fail_test_with_custom_message,The length of the statement  "            AssertionFailure[] failures = AssertTest.Capture(() => Assert.EndsWith("mbTest"' "jb"' "{0} message {1}"' "MB1"' "Mb2")); " is 121.
Long Statement,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,EndsWith_with_comparison_type_fails_when_testValue_does_not_start_with_pattern,The length of the statement  "            AssertionFailure[] failures = AssertTest.Capture(() => Assert.EndsWith("mbTest"' "jb"' StringComparison.OrdinalIgnoreCase)); " is 124.
Long Statement,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,EndsWith_with_comparison_type_fail_test_with_custom_message,The length of the statement  "            AssertionFailure[] failures = AssertTest.Capture(() => Assert.EndsWith("mbTest"' "jb"' StringComparison.OrdinalIgnoreCase' "{0} message {1}"' "MB1"' "Mb2")); " is 157.
Long Statement,MbUnit.Tests.Framework,AssertTest_Serialization,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Serialization.cs,IsXmlSerializableType_fails_if_type_is_non_serializable,The length of the statement  "            Assert.AreEqual("Expected the type to support Xml serialization but an exception was thrown while constructing an XmlSerializer."' failures[0].Description); " is 156.
Long Statement,MbUnit.Tests.Framework,AssertTest_Serialization,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Serialization.cs,XmlSerialize_passes_and_returns_xml_if_serializable,The length of the statement  "                "<XmlSerializableClass xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"><Token>Abc</Token></XmlSerializableClass>"' " is 169.
Long Statement,MbUnit.Tests.Framework,AssertTest_Serialization,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Serialization.cs,XmlDeserialize_passes_and_returns_value_if_deserializable,The length of the statement  "            var value = Assert.XmlDeserialize<XmlSerializableClass>("<XmlSerializableClass xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"><Token>Abc</Token></XmlSerializableClass>"); " is 226.
Long Statement,MbUnit.Tests.Framework,AssertTest_Serialization,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Serialization.cs,IsSerializableType_fails_if_type_is_non_serializable,The length of the statement  "            Assert.AreEqual("Expected the type to support binary serialization but it lacks the [Serializable] attribute."' failures[0].Description); " is 137.
Long Statement,MbUnit.Tests.Framework,AssertTest_Serialization,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Serialization.cs,IsSerializableType_fails_if_type_is_custom_serializable_but_missing_deserialization_constructor,The length of the statement  "            AssertionFailure[] failures = Capture(() => Assert.IsSerializableType(typeof(CustomBinarySerializableClassMissingDeserializationConstructor))); " is 143.
Long Statement,MbUnit.Tests.Framework,AssertTest_Serialization,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Serialization.cs,IsSerializableType_fails_if_type_is_custom_serializable_but_missing_deserialization_constructor,The length of the statement  "            Assert.AreEqual("Expected the type to support binary serialization but it implements ISerializable and is missing a deserialization constructor with signature .ctor(SerializationInfo' StreamingContext)."' failures[0].Description); " is 230.
Long Statement,MbUnit.Tests.Framework,AssertTest_Serialization,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Serialization.cs,Serialize_fails_if_value_is_not_serializable,The length of the statement  "            AssertionFailure[] failures = Capture(() => Assert.Serialize(new NonSerializableClass()' CreateObjectSerializationFormatter())); " is 128.
Long Statement,MbUnit.Tests.Framework,AssertTest_Serialization,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Serialization.cs,Serialize_passes_and_returns_stream_if_serializable,The length of the statement  "            MemoryStream stream = Assert.Serialize(new SerializableClass() { Token = "Abc" }' CreateObjectSerializationFormatter()); " is 120.
Long Statement,MbUnit.Tests.Framework,AssertTest_Serialization,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Serialization.cs,Deserialize_fails_if_stream_is_null,The length of the statement  "            AssertionFailure[] failures = Capture(() => Assert.Deserialize<SerializableClass>(null' CreateObjectSerializationFormatter())); " is 127.
Long Statement,MbUnit.Tests.Framework,AssertTest_Serialization,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Serialization.cs,Deserialize_fails_if_value_is_not_deserializable,The length of the statement  "            AssertionFailure[] failures = Capture(() => Assert.Deserialize<SerializableClass>(new MemoryStream()' CreateObjectSerializationFormatter())); " is 141.
Long Statement,MbUnit.Tests.Framework,AssertTest_Serialization,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Serialization.cs,Deserialize_passes_and_returns_value_if_deserializable,The length of the statement  "            MemoryStream stream = Assert.Serialize(new SerializableClass() { Token = "Abc" }' CreateObjectSerializationFormatter()); " is 120.
Long Statement,MbUnit.Tests.Framework,AssertTest_Serialization,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Serialization.cs,SerializeThenDeserialize_fails_if_value_is_null,The length of the statement  "            AssertionFailure[] failures = Capture(() => Assert.SerializeThenDeserialize<object>(null' CreateObjectSerializationFormatter())); " is 129.
Long Statement,MbUnit.Tests.Framework,AssertTest_Serialization,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Serialization.cs,SerializeThenDeserialize_fails_if_value_is_not_serializable,The length of the statement  "            AssertionFailure[] failures = Capture(() => Assert.SerializeThenDeserialize(new NonSerializableClass()' CreateObjectSerializationFormatter())); " is 143.
Long Statement,MbUnit.Tests.Framework,AssertTest_Serialization,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Serialization.cs,SerializeThenDeserialize_passes_and_returns_value_if_serializable,The length of the statement  "            var value = Assert.SerializeThenDeserialize(new SerializableClass() { Token = "Abc" }' CreateObjectSerializationFormatter()); " is 125.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(int)' new int[] { 1' 2' 2' 3 }' SortOrder.StrictlyIncreasing' ExpectedResult.Unsorted }; " is 123.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(int)' new int[] { 1' 2' 3' 4 }' SortOrder.StrictlyIncreasing' ExpectedResult.Sorted }; " is 121.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(int)' new int[] { 3' 2' 2' 1 }' SortOrder.StrictlyDecreasing' ExpectedResult.Unsorted }; " is 123.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(int)' new int[] { 4' 3' 2' 1 }' SortOrder.StrictlyDecreasing' ExpectedResult.Sorted }; " is 121.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(string)' new string[] { "cat"' "dog"' "dog"' "pig" }' SortOrder.Increasing' ExpectedResult.Sorted }; " is 135.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(string)' new string[] { "cat"' "dog"' "pig"' "rat" }' SortOrder.Increasing' ExpectedResult.Sorted }; " is 135.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(string)' new string[] { "rat"' "pig"' "dog"' "cat" }' SortOrder.Increasing' ExpectedResult.Unsorted }; " is 137.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(string)' new string[] { "cat"' "dog"' "dog"' "pig" }' SortOrder.StrictlyIncreasing' ExpectedResult.Unsorted }; " is 145.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(string)' new string[] { "cat"' "dog"' "pig"' "rat" }' SortOrder.StrictlyIncreasing' ExpectedResult.Sorted }; " is 143.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(string)' new string[] { "pig"' "dog"' "dog"' "cat" }' SortOrder.Decreasing' ExpectedResult.Sorted }; " is 135.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(string)' new string[] { "rat"' "pig"' "dog"' "cat" }' SortOrder.Decreasing' ExpectedResult.Sorted }; " is 135.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(string)' new string[] { "cat"' "dog"' "pig"' "rat" }' SortOrder.Decreasing' ExpectedResult.Unsorted }; " is 137.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(string)' new string[] { "pig"' "dog"' "dog"' "cat" }' SortOrder.StrictlyDecreasing' ExpectedResult.Unsorted }; " is 145.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(string)' new string[] { "rat"' "pig"' "dog"' "cat" }' SortOrder.StrictlyDecreasing' ExpectedResult.Sorted }; " is 143.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(2)' new Foo1(3) }' SortOrder.Increasing' ExpectedResult.Sorted }; " is 155.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(3)' new Foo1(4) }' SortOrder.Increasing' ExpectedResult.Sorted }; " is 155.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(4)' new Foo1(3)' new Foo1(2)' new Foo1(1) }' SortOrder.Increasing' ExpectedResult.Unsorted }; " is 157.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(2)' new Foo1(3) }' SortOrder.StrictlyIncreasing' ExpectedResult.Unsorted }; " is 165.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(3)' new Foo1(4) }' SortOrder.StrictlyIncreasing' ExpectedResult.Sorted }; " is 163.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(3)' new Foo1(2)' new Foo1(2)' new Foo1(1) }' SortOrder.Decreasing' ExpectedResult.Sorted }; " is 155.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(4)' new Foo1(3)' new Foo1(2)' new Foo1(1) }' SortOrder.Decreasing' ExpectedResult.Sorted }; " is 155.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(3)' new Foo1(4) }' SortOrder.Decreasing' ExpectedResult.Unsorted }; " is 157.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(3)' new Foo1(2)' new Foo1(2)' new Foo1(1) }' SortOrder.StrictlyDecreasing' ExpectedResult.Unsorted }; " is 165.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(4)' new Foo1(3)' new Foo1(2)' new Foo1(1) }' SortOrder.StrictlyDecreasing' ExpectedResult.Sorted }; " is 163.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(2)' new Foo2(3) }' SortOrder.Increasing' ExpectedResult.Sorted }; " is 155.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(3)' new Foo2(4) }' SortOrder.Increasing' ExpectedResult.Sorted }; " is 155.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(4)' new Foo2(3)' new Foo2(2)' new Foo2(1) }' SortOrder.Increasing' ExpectedResult.Unsorted }; " is 157.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(2)' new Foo2(3) }' SortOrder.StrictlyIncreasing' ExpectedResult.Unsorted }; " is 165.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(3)' new Foo2(4) }' SortOrder.StrictlyIncreasing' ExpectedResult.Sorted }; " is 163.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(3)' new Foo2(2)' new Foo2(2)' new Foo2(1) }' SortOrder.Decreasing' ExpectedResult.Sorted }; " is 155.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(4)' new Foo2(3)' new Foo2(2)' new Foo2(1) }' SortOrder.Decreasing' ExpectedResult.Sorted }; " is 155.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(3)' new Foo2(4) }' SortOrder.Decreasing' ExpectedResult.Unsorted }; " is 157.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(3)' new Foo2(2)' new Foo2(2)' new Foo2(1) }' SortOrder.StrictlyDecreasing' ExpectedResult.Unsorted }; " is 165.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(4)' new Foo2(3)' new Foo2(2)' new Foo2(1) }' SortOrder.StrictlyDecreasing' ExpectedResult.Sorted }; " is 163.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The length of the statement  "            yield return new object[] { typeof(Foo3)' new Foo3[] { new Foo3(1)' new Foo3(2)' new Foo3(2)' new Foo3(3) }' SortOrder.Increasing' ExpectedResult.Uncomparable }; " is 161.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,Sorted_with_implicit_comparer,The length of the statement  "                    Assert.AreEqual("Expected the elements to be sorted in a specific order but the sequence of values mismatches at one position at least."' failures[0].Description); " is 163.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,Sorted_with_implicit_comparer,The length of the statement  "                    Assert.AreEqual("Expected the elements to be sorted in a specific order but no implicit ordering comparison can be found for the subject type."' failures[0].Description); " is 170.
Long Statement,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,Sorted_with_explicit_comparer,The length of the statement  "                    Assert.AreEqual("Expected the elements to be sorted in a specific order but the sequence of values mismatches at one position at least."' failures[0].Description); " is 163.
Long Statement,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The length of the statement  "            yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(3)' new Foo2(2)' new Foo2(2)' new Foo2(2)' new Foo2(3) }' 2 }; " is 139.
Long Statement,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,Distinct_ok,The length of the statement  "                Assert.AreEqual("Expected the elements to be distinct but several instances represents the same value."' failures[0].Description); " is 130.
Long Statement,MbUnit.Tests.Framework,AssertTest_Xml_IsUnique,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Xml_IsUnique.cs,Assert_IsUnique_fails_because_the_searched_item_does_not_exist,The length of the statement  "            AssertionFailure[] failures = Capture(() => Assert.Xml.IsUnique(xml' XmlPath.Element("SolarSystem").Element("Moons")' XmlOptions.Default)); " is 139.
Long Statement,MbUnit.Tests.Framework,AssertTest_Xml_IsUnique,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Xml_IsUnique.cs,Assert_IsUnique_fails_because_the_searched_item_does_not_exist,The length of the statement  "            Assert.AreEqual("Expected the XML fragment to contain only once the searched XML element or attribute' but none was found."' failures[0].Description); " is 150.
Long Statement,MbUnit.Tests.Framework,AssertTest_Xml_IsUnique,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Xml_IsUnique.cs,Assert_IsUnique_fails_because_the_searched_item_exists_several_times,The length of the statement  "            AssertionFailure[] failures = Capture(() => Assert.Xml.IsUnique(xml' XmlPath.Element("SolarSystem").Element("Planets").Element("Planet")' XmlOptions.Default)); " is 159.
Long Statement,MbUnit.Tests.Framework,AssertTest_Xml_IsUnique,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Xml_IsUnique.cs,Assert_IsUnique_fails_because_the_searched_item_exists_several_times,The length of the statement  "            Assert.AreEqual("Expected the XML fragment to contain only once the searched XML element or attribute' But several were found."' failures[0].Description); " is 154.
Long Statement,MbUnit.Tests.Framework,ConverterAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ConverterAttributeTest.cs,Run,The length of the statement  "            TestStepRun testRun = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(NonConvertibleStubSample).GetMethod("Test"))); " is 135.
Long Statement,MbUnit.Tests.Framework,ComparerAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ComparerAttributeTest.cs,Run,The length of the statement  "            TestStepRun testRun = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(NonComparableStubSample).GetMethod("Test"))); " is 134.
Long Statement,MbUnit.Tests.Framework,BinaryDataAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\BinaryDataAttributeTest.cs,VerifySampleOutput,The length of the statement  "            TestStepRun run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(BinaryDataSample).GetMethod(sampleName))); " is 127.
Long Statement,MbUnit.Tests.Framework,TextDataAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\TextDataAttributeTest.cs,VerifySampleOutput,The length of the statement  "            TestStepRun run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(TextDataSample).GetMethod(sampleName))); " is 125.
Long Statement,MbUnit.Tests.Framework,EqualityComparerAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\EqualityComparerAttributeTest.cs,Run,The length of the statement  "            TestStepRun testRun = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(NonEquatableStubSample).GetMethod("Test"))); " is 133.
Long Statement,MbUnit.Tests.Framework,DataAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataAttributeTest.cs,ExpectedExceptionOutcome,The length of the statement  "            var run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(ExpectedExceptionSample).GetMethod(testMethodName))); " is 130.
Long Statement,MbUnit.Tests.Framework,DataAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataAttributeTest.cs,ExpectedInnerExceptionOutcome,The length of the statement  "            var run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(ExpectedInnerExceptionSample).GetMethod(testMethodName))); " is 135.
Long Statement,MbUnit.Tests.Framework,ExpectedExceptionAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ExpectedExceptionAttributeTest.cs,ExpectedExceptionOutcome,The length of the statement  "            var run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(ExpectedExceptionSample).GetMethod(testMethodName))); " is 130.
Long Statement,MbUnit.Tests.Framework,ExpectedExceptionAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ExpectedExceptionAttributeTest.cs,ExpectedInnerExceptionOutcome,The length of the statement  "            var run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(ExpectedInnerExceptionSample).GetMethod(testMethodName))); " is 135.
Long Statement,MbUnit.Tests.Framework,MultipleCultureAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MultipleCultureAttributeTest.cs,RunMultipleCultureWithThreads,The length of the statement  "            Assert.AreElementsEqualIgnoringOrder(new[] { "en-US"' "en-US"' "fr-FR"' "fr-FR" }' cultures' (x' y) => y.StartsWith(x)); " is 120.
Long Statement,MbUnit.Tests.Framework,PrincipalAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\PrincipalAttributeTest.cs,Test,The length of the statement  "            TestStepRun test1Run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(PrincipalAttributeSampleFixture).GetMethod("Impersonate"))); " is 150.
Long Statement,MbUnit.Tests.Framework,RandomStringsAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RandomStringsAttributeTest.cs,GetActualValues,The length of the statement  "            var run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(RandomStringsSample).GetMethod(testMethod))); " is 122.
Long Statement,MbUnit.Tests.Framework,SequentialNumbersAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\SequentialNumbersAttributeTest.cs,GenerateSequence,The length of the statement  "            var run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(SequentiaNumbersSample).GetMethod(testMethod))); " is 125.
Long Statement,MbUnit.Tests.Framework,SequentialNumbersAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\SequentialNumbersAttributeTest.cs,GenerateSequence,The length of the statement  "            Assert.AreElementsEqual(expectedOutput' lines.Select(x => Decimal.Parse(Regex.Match(x' @"\[(?<value>-?(\d*\.)?\d+)\]").Groups["value"].Value))); " is 144.
Long Statement,MbUnit.Tests.Framework,RandomNumbersAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RandomNumbersAttributeTest.cs,GetActualValues,The length of the statement  "            var run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(RandomNumbersSample).GetMethod(testMethod))); " is 122.
Long Statement,MbUnit.Tests.Framework,DependsOnTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DependsOnTest.cs,DependentTestsRunInOrderByDependency,The length of the statement  "            TestStepRun test1Run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(DependsOnSample).GetMethod("Test1_DependsOnTest2_Fail"))); " is 148.
Long Statement,MbUnit.Tests.Framework,DependsOnTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DependsOnTest.cs,DependentTestsRunInOrderByDependency,The length of the statement  "            TestStepRun test2Run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(DependsOnSample).GetMethod("Test2_Pass"))); " is 133.
Long Statement,MbUnit.Tests.Framework,DependsOnTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DependsOnTest.cs,DependentTestsRunInOrderByDependency,The length of the statement  "            TestStepRun test3Run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(DependsOnSample).GetMethod("Test3_DependsOnTest1_Fail"))); " is 148.
Long Statement,MbUnit.Tests.Framework,DependsOnTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DependsOnTest.cs,DependentTestsRunInOrderByDependency,The length of the statement  "            TestStepRun test4Run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(DependsOnSample).GetMethod("Test4_DependsOnTest2_Pass"))); " is 148.
Long Statement,MbUnit.Tests.Framework,DependsOnTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DependsOnTest.cs,DependentTestsRunIfTheirDependenciesPasses,The length of the statement  "            TestStepRun test1Run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(DependsOnSample).GetMethod("Test1_DependsOnTest2_Fail"))); " is 148.
Long Statement,MbUnit.Tests.Framework,DependsOnTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DependsOnTest.cs,DependentTestsRunIfTheirDependenciesPasses,The length of the statement  "            TestStepRun test4Run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(DependsOnSample).GetMethod("Test4_DependsOnTest2_Pass"))); " is 148.
Long Statement,MbUnit.Tests.Framework,DependsOnTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DependsOnTest.cs,DependentTestsSkippedIfTheirDependenciesFail,The length of the statement  "            TestStepRun test3Run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(DependsOnSample).GetMethod("Test3_DependsOnTest1_Fail"))); " is 148.
Long Statement,MbUnit.Tests.Framework,DependsOnTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DependsOnTest.cs,DependentTestsSkippedIfTheirTransitiveDependenciesFail,The length of the statement  "            TestStepRun test5Run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(DependsOnSample).GetMethod("Test5_DependsOnTest3_Skipped"))); " is 151.
Long Statement,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,Complex_comparers_with_nested_enumerations,The length of the statement  "                { x => x.Children' new StructuralEqualityComparer<ChildFoo> { { x => x.Tag } }' StructuralEqualityComparerOptions.IgnoreEnumerableOrder } " is 137.
Long Statement,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,Compare_null_enumerations_ignoring_order,The length of the statement  "                { x => x.Children' new StructuralEqualityComparer<ChildFoo> { x => x.Tag }' StructuralEqualityComparerOptions.IgnoreEnumerableOrder } " is 133.
Long Statement,MbUnit.Tests.Framework,CsvDataTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\CsvDataTest.cs,VerifySampleOutput,The length of the statement  "            TestStepRun run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(CsvDataSample).GetMethod(sampleName))); " is 124.
Long Statement,MbUnit.Tests.Framework,CsvDataTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\CsvDataTest.cs,OnFileError,The length of the statement  "            TestStepRun run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(CsvDataSample).GetMethod(sampleName))); " is 124.
Long Statement,MbUnit.Tests.Framework,CsvDataTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\CsvDataTest.cs,Metadata,The length of the statement  "            TestStepRun run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(CsvDataSample).GetMethod("FileWithHeader"))); " is 130.
Long Statement,MbUnit.Tests.Framework,RollbackAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RollbackAttributeTest.cs,NoRollback,The length of the statement  "            TestStepRun run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(RollbackSample).GetMethod("NoRollback"))); " is 127.
Long Statement,MbUnit.Tests.Framework,RollbackAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RollbackAttributeTest.cs,NoRollback,The length of the statement  "            AssertLogContains(run' "SetUp: Prepare\nSetUp: Commit\nTest: Prepare\nTest: Commit\nTearDown: Prepare\nTearDown: Commit"); " is 122.
Long Statement,MbUnit.Tests.Framework,RollbackAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RollbackAttributeTest.cs,IncludeSetUpAndTearDown,The length of the statement  "            TestStepRun run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(RollbackSample).GetMethod("IncludeSetUpAndTearDown"))); " is 140.
Long Statement,MbUnit.Tests.Framework,RollbackAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RollbackAttributeTest.cs,ExcludeSetUpAndTearDown,The length of the statement  "            TestStepRun run = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromMember(typeof(RollbackSample).GetMethod("ExcludeSetUpAndTearDown"))); " is 140.
Long Statement,MbUnit.Tests.Framework,RollbackSample,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RollbackAttributeTest.cs,Enlist,The length of the statement  "                Transaction.Current.EnlistVolatile(new StubEnlistmentNotification(phase)' EnlistmentOptions.EnlistDuringPrepareRequired); " is 121.
Long Statement,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassCollectionTest.cs,Adds_classes_Ok,The length of the statement  "            Assert.AreElementsEqualIgnoringOrder(new[] { typeof(ArgumentOutOfRangeException)' typeof(ArgumentException)' typeof(InvalidOperationException) }' collection.Select(x => x.ExpectedExceptionType));         " is 195.
Long Statement,MbUnit.Tests.Integration,WorkingDirectoryAndApplicationBaseTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Integration\WorkingDirectoryAndApplicationBaseTest.cs,WorkingDirectoryIsSameAsDirectoryContainingTestAssembly,The length of the statement  "                CodeReference.CreateFromMember(typeof(WorkingDirectoryAndApplicationBaseSample).GetMethod("WorkingDirectoryIsSameAsDirectoryContainingTestAssembly"))); " is 151.
Long Statement,MbUnit.Tests.Integration,WorkingDirectoryAndApplicationBaseTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Integration\WorkingDirectoryAndApplicationBaseTest.cs,ApplicationBaseIsSameAsDirectoryContainingTestAssembly,The length of the statement  "                CodeReference.CreateFromMember(typeof(WorkingDirectoryAndApplicationBaseSample).GetMethod("ApplicationBaseIsSameAsDirectoryContainingTestAssembly"))); " is 150.
Long Statement,MbUnit.Tests.Integration,ConstructorFixtureInitializerAndDisposeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Integration\ConstructorFixtureInitializerAndDisposeTest.cs,WhenNoFailure_FixturePasses,The length of the statement  "                AssertLogContains(fixtureRun' "[Constructor] Outcome: passed\n[FixtureInitializer] Outcome: passed\n[Dispose] Outcome: passed"); " is 128.
Long Statement,MbUnit.Tests.Integration,ConstructorFixtureInitializerAndDisposeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Integration\ConstructorFixtureInitializerAndDisposeTest.cs,WhenFixtureInitializerFails_FixtureFailsAndBecomesATestCase,The length of the statement  "            var fixtureRun = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromType(typeof(FixtureWithFailingFixtureInitializer))); " is 122.
Long Statement,MbUnit.Tests.Integration,ConstructorFixtureInitializerAndDisposeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Integration\ConstructorFixtureInitializerAndDisposeTest.cs,WhenFixtureInitializerFails_FixtureFailsAndBecomesATestCase,The length of the statement  "                AssertLogContains(fixtureRun' "[Constructor] Outcome: passed\n[FixtureInitializer] Outcome: passed\n[Dispose] Outcome: failed"); " is 128.
Long Statement,MbUnit.Tests.Integration,ConstructorFixtureInitializerAndDisposeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Integration\ConstructorFixtureInitializerAndDisposeTest.cs,WhenFixtureInitializerFails_TestDoesNotRun,The length of the statement  "            var fixtureRun = Runner.GetPrimaryTestStepRun(CodeReference.CreateFromType(typeof(FixtureWithFailingFixtureInitializer))); " is 122.
Long Statement,MbUnit.Tests.Integration,ConstructorFixtureInitializerAndDisposeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Integration\ConstructorFixtureInitializerAndDisposeTest.cs,WhenTestFails_FixtureFails,The length of the statement  "                AssertLogContains(fixtureRun' "[Constructor] Outcome: passed\n[FixtureInitializer] Outcome: passed\n[Dispose] Outcome: failed"); " is 128.
Long Statement,MbUnit.Tests.Integration,ConstructorFixtureInitializerAndDisposeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Integration\ConstructorFixtureInitializerAndDisposeTest.cs,WhenDisposeFails_FixtureFails,The length of the statement  "                AssertLogContains(fixtureRun' "[Constructor] Outcome: passed\n[FixtureInitializer] Outcome: passed\n[Dispose] Outcome: passed"); " is 128.
Long Statement,MbUnit.Tests.Integration,DataDrivenTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Integration\DataDrivenTest.cs,WhenNoData_MarksTestAsSkipped,The length of the statement  "                AssertLogContains(run' "Test skipped because it is parameterized but no data was provided."' MarkupStreamNames.Warnings); " is 121.
Long Statement,MbUnit.Tests.Model,MbUnitTestFrameworkTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Model\MbUnitTestFrameworkTest.cs,PopulateTestTree_WhenAssemblyReferencesMbUnit_ContainsSimpleTest,The length of the statement  "            Assert.AreEqual(CodeReference.CreateFromMember(typeof(SimpleTest).GetMethod("Pass"))' passTest.CodeElement.CodeReference); " is 122.
Long Statement,MbUnit.Tests.Model,MbUnitTestFrameworkTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Model\MbUnitTestFrameworkTest.cs,PopulateTestTree_WhenAssemblyReferencesMbUnit_ContainsSimpleTest,The length of the statement  "            Assert.AreEqual(CodeReference.CreateFromMember(typeof(SimpleTest).GetMethod("Fail"))' failTest.CodeElement.CodeReference); " is 122.
Long Statement,MbUnit.Tests.Model,MbUnitTestFrameworkTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Model\MbUnitTestFrameworkTest.cs,MetadataImport_XmlDocumentation_TestParameters,The length of the statement  "            Assert.AreEqual("<summary>\nA field parameter.\n</summary>"' fieldParameter.Metadata.GetValue(MetadataKeys.XmlDocumentation)); " is 126.
Long Statement,MbUnit.Tests.Model,MbUnitTestFrameworkTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Model\MbUnitTestFrameworkTest.cs,MetadataImport_XmlDocumentation_TestParameters,The length of the statement  "            Assert.AreEqual("<summary>\nA property parameter.\n</summary>"' propertyParameter.Metadata.GetValue(MetadataKeys.XmlDocumentation)); " is 132.
Magic Number,MbUnit.Tests.Framework,AssertTest_Count,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Count.cs,Count_pass,The following statement contains a magic number: Assert.Count(4' values);
Magic Number,MbUnit.Tests.Framework,AssertTest_Count,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Count.cs,Count_fail,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.Count(666' values));
Magic Number,MbUnit.Tests.Framework,AssertTest_HasAttribute,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_HasAttribute.cs,HasAttributes_on_reflected_object_should_pass,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(attributes.Select(x => x.Text)' Enumerable.Range(1' 3).Select(i => expectedMessage + " #" + i));
Magic Number,MbUnit.Tests.Framework,AssertTest_HasAttribute,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_HasAttribute.cs,HasAttributes_on_mirroed_object_should_pass,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(attributes.Select(x => x.Text)' Enumerable.Range(1' 3).Select(i => expectedMessage + " #" + i));
Magic Number,MbUnit.Tests.Framework,AssertTest_HasAttribute,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_HasAttribute.cs,HasAttributes_on_reflected_object_with_exectedCount_should_pass,The following statement contains a magic number: FooAttribute[] attributes = Assert.HasAttributes<FooAttribute>(target' 3);
Magic Number,MbUnit.Tests.Framework,AssertTest_HasAttribute,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_HasAttribute.cs,HasAttributes_on_reflected_object_with_exectedCount_should_pass,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(attributes.Select(x => x.Text)' Enumerable.Range(1' 3).Select(i => expectedMessage + " #" + i));
Magic Number,MbUnit.Tests.Framework,AssertTest_HasAttribute,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_HasAttribute.cs,HasAttributes_on_mirroed_object_with_exectedCount_should_pass,The following statement contains a magic number: FooAttribute[] attributes = Assert.HasAttributes<FooAttribute>(target' 3);
Magic Number,MbUnit.Tests.Framework,AssertTest_HasAttribute,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_HasAttribute.cs,HasAttributes_on_mirroed_object_with_exectedCount_should_pass,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(attributes.Select(x => x.Text)' Enumerable.Range(1' 3).Select(i => expectedMessage + " #" + i));
Magic Number,MbUnit.Tests.Framework,AssertTest_HasAttribute,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_HasAttribute.cs,HasAttributes_on_reflected_object_with_exectedCount_should_fail,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.HasAttributes<FooAttribute>(target' 4));
Magic Number,MbUnit.Tests.Framework,AssertTest_HasAttribute,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_HasAttribute.cs,HasAttributes_on_mirroed_object_with_exectedCount_should_fail,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.HasAttributes<FooAttribute>(target' 4));
Magic Number,MbUnit.Tests.Framework,AssertTest_HasAttribute,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_HasAttribute.cs,HasAttributes_finds_derived_types_as_well,The following statement contains a magic number: FooAttribute[] attributes = Assert.HasAttributes<FooAttribute>(typeof(SampleTypeWithChildFoo)' 4);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin,The following statement contains a magic number: var actual = DataGenerators.Join(new[] { "A"' "B"' "C"' "D" }' new[] { 1' 2' 3 }' JoinStrategy.Combinatorial);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin,The following statement contains a magic number: var actual = DataGenerators.Join(new[] { "A"' "B"' "C"' "D" }' new[] { 1' 2' 3 }' JoinStrategy.Combinatorial);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new Pair<string' int>("A"' 1)'                  new Pair<string' int>("A"' 2)'                  new Pair<string' int>("A"' 3)'                  new Pair<string' int>("B"' 1)'                  new Pair<string' int>("B"' 2)'                  new Pair<string' int>("B"' 3)'                  new Pair<string' int>("C"' 1)'                  new Pair<string' int>("C"' 2)'                  new Pair<string' int>("C"' 3)'                  new Pair<string' int>("D"' 1)'                  new Pair<string' int>("D"' 2)'                  new Pair<string' int>("D"' 3)              }' actual);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new Pair<string' int>("A"' 1)'                  new Pair<string' int>("A"' 2)'                  new Pair<string' int>("A"' 3)'                  new Pair<string' int>("B"' 1)'                  new Pair<string' int>("B"' 2)'                  new Pair<string' int>("B"' 3)'                  new Pair<string' int>("C"' 1)'                  new Pair<string' int>("C"' 2)'                  new Pair<string' int>("C"' 3)'                  new Pair<string' int>("D"' 1)'                  new Pair<string' int>("D"' 2)'                  new Pair<string' int>("D"' 3)              }' actual);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new Pair<string' int>("A"' 1)'                  new Pair<string' int>("A"' 2)'                  new Pair<string' int>("A"' 3)'                  new Pair<string' int>("B"' 1)'                  new Pair<string' int>("B"' 2)'                  new Pair<string' int>("B"' 3)'                  new Pair<string' int>("C"' 1)'                  new Pair<string' int>("C"' 2)'                  new Pair<string' int>("C"' 3)'                  new Pair<string' int>("D"' 1)'                  new Pair<string' int>("D"' 2)'                  new Pair<string' int>("D"' 3)              }' actual);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new Pair<string' int>("A"' 1)'                  new Pair<string' int>("A"' 2)'                  new Pair<string' int>("A"' 3)'                  new Pair<string' int>("B"' 1)'                  new Pair<string' int>("B"' 2)'                  new Pair<string' int>("B"' 3)'                  new Pair<string' int>("C"' 1)'                  new Pair<string' int>("C"' 2)'                  new Pair<string' int>("C"' 3)'                  new Pair<string' int>("D"' 1)'                  new Pair<string' int>("D"' 2)'                  new Pair<string' int>("D"' 3)              }' actual);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new Pair<string' int>("A"' 1)'                  new Pair<string' int>("A"' 2)'                  new Pair<string' int>("A"' 3)'                  new Pair<string' int>("B"' 1)'                  new Pair<string' int>("B"' 2)'                  new Pair<string' int>("B"' 3)'                  new Pair<string' int>("C"' 1)'                  new Pair<string' int>("C"' 2)'                  new Pair<string' int>("C"' 3)'                  new Pair<string' int>("D"' 1)'                  new Pair<string' int>("D"' 2)'                  new Pair<string' int>("D"' 3)              }' actual);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new Pair<string' int>("A"' 1)'                  new Pair<string' int>("A"' 2)'                  new Pair<string' int>("A"' 3)'                  new Pair<string' int>("B"' 1)'                  new Pair<string' int>("B"' 2)'                  new Pair<string' int>("B"' 3)'                  new Pair<string' int>("C"' 1)'                  new Pair<string' int>("C"' 2)'                  new Pair<string' int>("C"' 3)'                  new Pair<string' int>("D"' 1)'                  new Pair<string' int>("D"' 2)'                  new Pair<string' int>("D"' 3)              }' actual);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new Pair<string' int>("A"' 1)'                  new Pair<string' int>("A"' 2)'                  new Pair<string' int>("A"' 3)'                  new Pair<string' int>("B"' 1)'                  new Pair<string' int>("B"' 2)'                  new Pair<string' int>("B"' 3)'                  new Pair<string' int>("C"' 1)'                  new Pair<string' int>("C"' 2)'                  new Pair<string' int>("C"' 3)'                  new Pair<string' int>("D"' 1)'                  new Pair<string' int>("D"' 2)'                  new Pair<string' int>("D"' 3)              }' actual);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new Pair<string' int>("A"' 1)'                  new Pair<string' int>("A"' 2)'                  new Pair<string' int>("A"' 3)'                  new Pair<string' int>("B"' 1)'                  new Pair<string' int>("B"' 2)'                  new Pair<string' int>("B"' 3)'                  new Pair<string' int>("C"' 1)'                  new Pair<string' int>("C"' 2)'                  new Pair<string' int>("C"' 3)'                  new Pair<string' int>("D"' 1)'                  new Pair<string' int>("D"' 2)'                  new Pair<string' int>("D"' 3)              }' actual);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,SequentialJoin,The following statement contains a magic number: var actual = DataGenerators.Join(new[] { "A"' "B"' "C"' "D" }' new[] { 1' 2' 3' 4 }' JoinStrategy.Sequential);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,SequentialJoin,The following statement contains a magic number: var actual = DataGenerators.Join(new[] { "A"' "B"' "C"' "D" }' new[] { 1' 2' 3' 4 }' JoinStrategy.Sequential);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,SequentialJoin,The following statement contains a magic number: var actual = DataGenerators.Join(new[] { "A"' "B"' "C"' "D" }' new[] { 1' 2' 3' 4 }' JoinStrategy.Sequential);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,SequentialJoin,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new Pair<string' int>("A"' 1)'                  new Pair<string' int>("B"' 2)'                  new Pair<string' int>("C"' 3)'                  new Pair<string' int>("D"' 4)'              }' actual);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,SequentialJoin,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new Pair<string' int>("A"' 1)'                  new Pair<string' int>("B"' 2)'                  new Pair<string' int>("C"' 3)'                  new Pair<string' int>("D"' 4)'              }' actual);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,SequentialJoin,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new Pair<string' int>("A"' 1)'                  new Pair<string' int>("B"' 2)'                  new Pair<string' int>("C"' 3)'                  new Pair<string' int>("D"' 4)'              }' actual);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,PairwiseJoin,The following statement contains a magic number: var actual = DataGenerators.Join(new[] { "A"' "B" }' new[] { 1' 2 }' new[] { 5.0' 9.0 }' JoinStrategy.Pairwise);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,PairwiseJoin,The following statement contains a magic number: var actual = DataGenerators.Join(new[] { "A"' "B" }' new[] { 1' 2 }' new[] { 5.0' 9.0 }' JoinStrategy.Pairwise);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,PairwiseJoin,The following statement contains a magic number: var actual = DataGenerators.Join(new[] { "A"' "B" }' new[] { 1' 2 }' new[] { 5.0' 9.0 }' JoinStrategy.Pairwise);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,PairwiseJoin,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new Triple<string' int' double>("A"' 1' 9.0)'                  new Triple<string' int' double>("B"' 2' 9.0)'                  new Triple<string' int' double>("A"' 2' 5.0)'                  new Triple<string' int' double>("B"' 1' 5.0)'              }' actual);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,PairwiseJoin,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new Triple<string' int' double>("A"' 1' 9.0)'                  new Triple<string' int' double>("B"' 2' 9.0)'                  new Triple<string' int' double>("A"' 2' 5.0)'                  new Triple<string' int' double>("B"' 1' 5.0)'              }' actual);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,PairwiseJoin,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new Triple<string' int' double>("A"' 1' 9.0)'                  new Triple<string' int' double>("B"' 2' 9.0)'                  new Triple<string' int' double>("A"' 2' 5.0)'                  new Triple<string' int' double>("B"' 1' 5.0)'              }' actual);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,PairwiseJoin,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new Triple<string' int' double>("A"' 1' 9.0)'                  new Triple<string' int' double>("B"' 2' 9.0)'                  new Triple<string' int' double>("A"' 2' 5.0)'                  new Triple<string' int' double>("B"' 1' 5.0)'              }' actual);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,PairwiseJoin,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new Triple<string' int' double>("A"' 1' 9.0)'                  new Triple<string' int' double>("B"' 2' 9.0)'                  new Triple<string' int' double>("A"' 2' 5.0)'                  new Triple<string' int' double>("B"' 1' 5.0)'              }' actual);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,PairwiseJoin,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new Triple<string' int' double>("A"' 1' 9.0)'                  new Triple<string' int' double>("B"' 2' 9.0)'                  new Triple<string' int' double>("A"' 2' 5.0)'                  new Triple<string' int' double>("B"' 1' 5.0)'              }' actual);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: var x = new[] { 1' 2' 3 };
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: var x = new[] { 1' 2' 3 };
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: var y = new[] { 5.0' 9.0 };
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: var y = new[] { 5.0' 9.0 };
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,DataGeneratorsTest_Join,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DataGeneratorsTest_Join.cs,CombinatorialJoin_with_high_rank,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[]               {                   new object[] { "A"' 1' 5.0' 'U' }'                  new object[] { "A"' 1' 5.0' 'V' }'                  new object[] { "A"' 1' 9.0' 'U' }'                  new object[] { "A"' 1' 9.0' 'V' }'                  new object[] { "A"' 2' 5.0' 'U' }'                  new object[] { "A"' 2' 5.0' 'V' }'                  new object[] { "A"' 2' 9.0' 'U' }'                  new object[] { "A"' 2' 9.0' 'V' }'                  new object[] { "A"' 3' 5.0' 'U' }'                  new object[] { "A"' 3' 5.0' 'V' }'                  new object[] { "A"' 3' 9.0' 'U' }'                  new object[] { "A"' 3' 9.0' 'V' }'                  new object[] { "B"' 1' 5.0' 'U' }'                  new object[] { "B"' 1' 5.0' 'V' }'                  new object[] { "B"' 1' 9.0' 'U' }'                  new object[] { "B"' 1' 9.0' 'V' }'                  new object[] { "B"' 2' 5.0' 'U' }'                  new object[] { "B"' 2' 5.0' 'V' }'                  new object[] { "B"' 2' 9.0' 'U' }'                  new object[] { "B"' 2' 9.0' 'V' }'                  new object[] { "B"' 3' 5.0' 'U' }'                  new object[] { "B"' 3' 5.0' 'V' }'                  new object[] { "B"' 3' 9.0' 'U' }'                  new object[] { "B"' 3' 9.0' 'V' }'             }' actual'              (u' v) => u.Length == v.Length                  && u.Length == 4                  && (string)u[0] == (string)v[0]                 && (int)u[1] == (int)v[1]                 && (double)u[2] == (double)v[2]                 && (char)u[3] == (char)v[3]);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceField,The following statement contains a magic number: mirror["InstanceField"].Value = 5;
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceField,The following statement contains a magic number: Assert.AreEqual(5' obj.InstanceField);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceField,The following statement contains a magic number: Assert.AreEqual(5' mirror["InstanceField"].Value);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceField,The following statement contains a magic number: Assert.AreEqual(5' mirror["InstanceField"].ValueAsMirror.Instance);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticField,The following statement contains a magic number: mirror["StaticField"].Value = 5;
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticField,The following statement contains a magic number: Assert.AreEqual(5' SampleObject.StaticField);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticField,The following statement contains a magic number: Assert.AreEqual(5' mirror["StaticField"].Value);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticField,The following statement contains a magic number: Assert.AreEqual(5' mirror["StaticField"].ValueAsMirror.Instance);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceProperty,The following statement contains a magic number: mirror["InstanceProperty"].Value = 5;
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceProperty,The following statement contains a magic number: Assert.AreEqual(5' obj.InstanceProperty);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceProperty,The following statement contains a magic number: Assert.AreEqual(5' mirror["InstanceProperty"].Value);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceProperty,The following statement contains a magic number: Assert.AreEqual(5' mirror["InstanceProperty"].ValueAsMirror.Instance);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticProperty,The following statement contains a magic number: mirror["StaticProperty"].Value = 5;
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticProperty,The following statement contains a magic number: Assert.AreEqual(5' SampleObject.StaticProperty);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticProperty,The following statement contains a magic number: Assert.AreEqual(5' mirror["StaticProperty"].Value);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticProperty,The following statement contains a magic number: Assert.AreEqual(5' mirror["StaticProperty"].ValueAsMirror.Instance);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_IndexedProperty,The following statement contains a magic number: Assert.AreEqual(2' ((PropertyInfo)mirror["Item"].WithSignature(typeof(int)' typeof(int)).MemberInfo).GetIndexParameters().Length);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_IndexedProperty,The following statement contains a magic number: Assert.AreEqual(8' mirror["Item"][4].Value);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_IndexedProperty,The following statement contains a magic number: Assert.AreEqual(8' mirror["Item"][4].Value);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_IndexedProperty,The following statement contains a magic number: Assert.AreEqual(28' mirror["Item"][4' 7].Value);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_IndexedProperty,The following statement contains a magic number: Assert.AreEqual(28' mirror["Item"][4' 7].Value);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_IndexedProperty,The following statement contains a magic number: Assert.AreEqual(28' mirror["Item"][4' 7].Value);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_IndexedProperty,The following statement contains a magic number: Assert.AreEqual(8' mirror["Item"][4].ValueAsMirror.Instance);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_IndexedProperty,The following statement contains a magic number: Assert.AreEqual(8' mirror["Item"][4].ValueAsMirror.Instance);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_IndexedProperty,The following statement contains a magic number: Assert.AreEqual(28' mirror["Item"][4' 7].ValueAsMirror.Instance);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_IndexedProperty,The following statement contains a magic number: Assert.AreEqual(28' mirror["Item"][4' 7].ValueAsMirror.Instance);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_IndexedProperty,The following statement contains a magic number: Assert.AreEqual(28' mirror["Item"][4' 7].ValueAsMirror.Instance);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_IndexedProperty,The following statement contains a magic number: mirror["Item"][4].Value = 2;
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_IndexedProperty,The following statement contains a magic number: mirror["Item"][4].Value = 2;
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_IndexedProperty,The following statement contains a magic number: Assert.AreEqual(8' obj.indexerLastSetValue);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_IndexedProperty,The following statement contains a magic number: mirror["Item"][4' 7].Value = 2;
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_IndexedProperty,The following statement contains a magic number: mirror["Item"][4' 7].Value = 2;
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_IndexedProperty,The following statement contains a magic number: mirror["Item"][4' 7].Value = 2;
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_IndexedProperty,The following statement contains a magic number: Assert.AreEqual(56' obj.indexerLastSetValue);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceEvent,The following statement contains a magic number: Assert.AreEqual(6' obj.instanceCustomEventAddRemoveCount);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceEvent,The following statement contains a magic number: Assert.AreEqual(9' obj.instanceCustomEventAddRemoveCount);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceEvent,The following statement contains a magic number: Assert.AreEqual(3' handled);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceEvent,The following statement contains a magic number: Assert.AreEqual(10' obj.instanceCustomEventAddRemoveCount);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceEvent,The following statement contains a magic number: Assert.AreEqual(5' handled);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticEvent,The following statement contains a magic number: Assert.AreEqual(6' SampleObject.staticCustomEventAddRemoveCount);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticEvent,The following statement contains a magic number: Assert.AreEqual(9' SampleObject.staticCustomEventAddRemoveCount);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticEvent,The following statement contains a magic number: Assert.AreEqual(3' handled);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticEvent,The following statement contains a magic number: Assert.AreEqual(10' SampleObject.staticCustomEventAddRemoveCount);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticEvent,The following statement contains a magic number: Assert.AreEqual(5' handled);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod,The following statement contains a magic number: Assert.AreEqual(2' ((MethodInfo)mirror["InstanceMethod"].WithSignature(typeof(int)' typeof(int)).MemberInfo).GetParameters().Length);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod,The following statement contains a magic number: Assert.AreEqual(5' mirror["InstanceMethod"].WithGenericArgs().Invoke());
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod,The following statement contains a magic number: Assert.AreEqual(8' mirror["InstanceMethod"].WithGenericArgs().Invoke(4));
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod,The following statement contains a magic number: Assert.AreEqual(8' mirror["InstanceMethod"].WithGenericArgs().Invoke(4));
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod,The following statement contains a magic number: Assert.AreEqual(28' mirror["InstanceMethod"].Invoke(4' 7));
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod,The following statement contains a magic number: Assert.AreEqual(28' mirror["InstanceMethod"].Invoke(4' 7));
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod,The following statement contains a magic number: Assert.AreEqual(28' mirror["InstanceMethod"].Invoke(4' 7));
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod,The following statement contains a magic number: Assert.AreEqual(4' mirror["InstanceMethod"].WithGenericArgs(typeof(int)).Invoke(4));
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod,The following statement contains a magic number: Assert.AreEqual(4' mirror["InstanceMethod"].WithGenericArgs(typeof(int)).Invoke(4));
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod_with_null_arguments,The following statement contains a magic number: Assert.AreEqual(25' mirror["InstanceMethodForNull"].Invoke(25));
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod_with_null_arguments,The following statement contains a magic number: Assert.AreEqual(25' mirror["InstanceMethodForNull"].Invoke(25));
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_InstanceMethod_with_null_arguments,The following statement contains a magic number: Assert.AreEqual(6' mirror["InstanceMethodForNull"].Invoke("abcdef"));
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticMethod,The following statement contains a magic number: Assert.AreEqual(2' ((MethodInfo)mirror["StaticMethod"].WithSignature(typeof(int)' typeof(int)).MemberInfo).GetParameters().Length);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticMethod,The following statement contains a magic number: Assert.AreEqual(5' mirror["StaticMethod"].WithGenericArgs().Invoke());
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticMethod,The following statement contains a magic number: Assert.AreEqual(8' mirror["StaticMethod"].WithGenericArgs().Invoke(4));
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticMethod,The following statement contains a magic number: Assert.AreEqual(8' mirror["StaticMethod"].WithGenericArgs().Invoke(4));
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticMethod,The following statement contains a magic number: Assert.AreEqual(28' mirror["StaticMethod"].Invoke(4' 7));
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticMethod,The following statement contains a magic number: Assert.AreEqual(28' mirror["StaticMethod"].Invoke(4' 7));
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticMethod,The following statement contains a magic number: Assert.AreEqual(28' mirror["StaticMethod"].Invoke(4' 7));
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticMethod,The following statement contains a magic number: Assert.AreEqual(4' mirror["StaticMethod"].WithGenericArgs(typeof(int)).Invoke(4));
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_StaticMethod,The following statement contains a magic number: Assert.AreEqual(4' mirror["StaticMethod"].WithGenericArgs(typeof(int)).Invoke(4));
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_Constructor,The following statement contains a magic number: Assert.AreEqual(4' ((SampleObject)mirror.Constructor.Invoke(4)).constructorArg);
Magic Number,MbUnit.Tests.Framework,MirrorTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,Syntax_Constructor,The following statement contains a magic number: Assert.AreEqual(4' ((SampleObject)mirror.Constructor.Invoke(4)).constructorArg);
Magic Number,MbUnit.Tests.Framework,SampleObject,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,InstanceMethod,The following statement contains a magic number: return 5;
Magic Number,MbUnit.Tests.Framework,SampleObject,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,InstanceMethod,The following statement contains a magic number: return x* 2;
Magic Number,MbUnit.Tests.Framework,SampleObject,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,StaticMethod,The following statement contains a magic number: return 5;
Magic Number,MbUnit.Tests.Framework,SampleObject,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\MirrorTest.cs,StaticMethod,The following statement contains a magic number: return x * 2;
Magic Number,MbUnit.Tests.Framework,RetryTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RetryTest.cs,Retry_Repeat_Until_Condition_with_Action,The following statement contains a magic number: DoRetry(true' () =>                  Retry.WithClock(mockClock)                       .Repeat(10)                       .DoBetween(() => count++)                       .Until(() => count >= 8));
Magic Number,MbUnit.Tests.Framework,RetryTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RetryTest.cs,Retry_Repeat_Until_Condition_with_Action,The following statement contains a magic number: DoRetry(true' () =>                  Retry.WithClock(mockClock)                       .Repeat(10)                       .DoBetween(() => count++)                       .Until(() => count >= 8));
Magic Number,MbUnit.Tests.Framework,RetryTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RetryTest.cs,Retry_Times_Until_WaitHandle,The following statement contains a magic number: DoRetry(signaled' () =>                   Retry.WithClock(mockClock)                       .Repeat(5)                       .Until(handle));
Magic Number,MbUnit.Tests.Framework,RetryTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RetryTest.cs,Retry_until_thread_terminates,The following statement contains a magic number: DoRetry(true' () =>                  Retry.Repeat(5)                       .Until(thread));
Magic Number,MbUnit.Tests.Framework,RetryTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RetryTest.cs,Retry_WithTimeout_Until_Condition,The following statement contains a magic number: mockClock.Expect(x => x.Elapsed).Repeat.Times(0' 1).Return(TimeSpan.FromMilliseconds(200));
Magic Number,MbUnit.Tests.Framework,RetryTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RetryTest.cs,Retry_WithTimeout_Until_Condition,The following statement contains a magic number: mockClock.Expect(x => x.Elapsed).Repeat.Times(0' 1).Return(TimeSpan.FromMilliseconds(400));
Magic Number,MbUnit.Tests.Framework,RetryTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RetryTest.cs,Retry_WithTimeout_Until_Condition,The following statement contains a magic number: mockClock.Expect(x => x.Elapsed).Repeat.Times(0' 1).Return(TimeSpan.FromMilliseconds(600));
Magic Number,MbUnit.Tests.Framework,RetryTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RetryTest.cs,Retry_WithTimeout_Until_Condition,The following statement contains a magic number: DoRetry(expectedSucceeded' () =>                  Retry.WithClock(mockClock)                       .WithTimeout(timeout)                       .Until(() => count++ >= 2));
Magic Number,MbUnit.Tests.Framework,RetryTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RetryTest.cs,Retry_with_negative_polling_time_should_throw_exception,The following statement contains a magic number: Retry.WithClock(mockClock).WithPolling(-100);
Magic Number,MbUnit.Tests.Framework,RetryTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RetryTest.cs,Retry_Repeat_twice_should_throw_exception,The following statement contains a magic number: Retry.WithClock(mockClock).Repeat(10).Repeat(10);
Magic Number,MbUnit.Tests.Framework,RetryTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RetryTest.cs,Retry_Repeat_twice_should_throw_exception,The following statement contains a magic number: Retry.WithClock(mockClock).Repeat(10).Repeat(10);
Magic Number,MbUnit.Tests.Framework,RetryTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RetryTest.cs,Retry_WithPolling_twice_should_throw_exception,The following statement contains a magic number: Retry.WithClock(mockClock).WithPolling(10).WithPolling(10);
Magic Number,MbUnit.Tests.Framework,RetryTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RetryTest.cs,Retry_WithPolling_twice_should_throw_exception,The following statement contains a magic number: Retry.WithClock(mockClock).WithPolling(10).WithPolling(10);
Magic Number,MbUnit.Tests.Framework,RetryTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RetryTest.cs,Retry_WithTimeout_twice_should_throw_exception,The following statement contains a magic number: Retry.WithClock(mockClock).WithTimeout(10).WithTimeout(10);
Magic Number,MbUnit.Tests.Framework,RetryTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RetryTest.cs,Retry_WithTimeout_twice_should_throw_exception,The following statement contains a magic number: Retry.WithClock(mockClock).WithTimeout(10).WithTimeout(10);
Magic Number,MbUnit.Tests.Framework,SharedDataSetTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\SharedDataSetTest.cs,UseInstanceParameters,The following statement contains a magic number: Assert.Count(2' runs);
Magic Number,MbUnit.Tests.Framework,RepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RepeatTest.cs,RunTestRepeatedly,The following statement contains a magic number: Assert.Count(4' testSteps' "Expected 4 repetitions represented as steps.");
Magic Number,MbUnit.Tests.Framework,RepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RepeatTest.cs,RunTestRepeatedly,The following statement contains a magic number: Assert.AreEqual("Repetition #3"' testSteps[2].Step.Name);
Magic Number,MbUnit.Tests.Framework,RepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RepeatTest.cs,RunTestRepeatedly,The following statement contains a magic number: AssertLogContains(testSteps[2]' "Run: Repetition #3");
Magic Number,MbUnit.Tests.Framework,RepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RepeatTest.cs,RunTestRepeatedly,The following statement contains a magic number: Assert.AreEqual(TestOutcome.Passed' testSteps[2].Result.Outcome);
Magic Number,MbUnit.Tests.Framework,RepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RepeatTest.cs,RunTestRepeatedly,The following statement contains a magic number: Assert.AreEqual("Repetition #4"' testSteps[3].Step.Name);
Magic Number,MbUnit.Tests.Framework,RepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RepeatTest.cs,RunTestRepeatedly,The following statement contains a magic number: AssertLogContains(testSteps[3]' "Run: Repetition #4");
Magic Number,MbUnit.Tests.Framework,RepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RepeatTest.cs,RunTestRepeatedly,The following statement contains a magic number: Assert.AreEqual(TestOutcome.Passed' testSteps[3].Result.Outcome);
Magic Number,MbUnit.Tests.Framework,RepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RepeatTest.cs,RunFixtureRepeatedly,The following statement contains a magic number: Assert.Count(4' fixtureSteps' "Expected 4 repetitions represented as steps.");
Magic Number,MbUnit.Tests.Framework,RepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RepeatTest.cs,RunFixtureRepeatedly,The following statement contains a magic number: Assert.AreEqual("Repetition #3"' fixtureSteps[2].Step.Name);
Magic Number,MbUnit.Tests.Framework,RepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RepeatTest.cs,RunFixtureRepeatedly,The following statement contains a magic number: Assert.AreEqual(TestOutcome.Passed' fixtureSteps[2].Result.Outcome);
Magic Number,MbUnit.Tests.Framework,RepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RepeatTest.cs,RunFixtureRepeatedly,The following statement contains a magic number: Assert.Count(1' fixtureSteps[2].Children);
Magic Number,MbUnit.Tests.Framework,RepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RepeatTest.cs,RunFixtureRepeatedly,The following statement contains a magic number: Assert.AreEqual("Test"' fixtureSteps[2].Children[0].Step.Name);
Magic Number,MbUnit.Tests.Framework,RepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RepeatTest.cs,RunFixtureRepeatedly,The following statement contains a magic number: AssertLogContains(fixtureSteps[2].Children[0]' "Run: Repetition #3");
Magic Number,MbUnit.Tests.Framework,RepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RepeatTest.cs,RunFixtureRepeatedly,The following statement contains a magic number: Assert.AreEqual(TestOutcome.Passed' fixtureSteps[2].Children[0].Result.Outcome);
Magic Number,MbUnit.Tests.Framework,RepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RepeatTest.cs,RunFixtureRepeatedly,The following statement contains a magic number: Assert.AreEqual("Repetition #4"' fixtureSteps[3].Step.Name);
Magic Number,MbUnit.Tests.Framework,RepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RepeatTest.cs,RunFixtureRepeatedly,The following statement contains a magic number: Assert.AreEqual(TestOutcome.Passed' fixtureSteps[3].Result.Outcome);
Magic Number,MbUnit.Tests.Framework,RepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RepeatTest.cs,RunFixtureRepeatedly,The following statement contains a magic number: Assert.Count(1' fixtureSteps[3].Children);
Magic Number,MbUnit.Tests.Framework,RepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RepeatTest.cs,RunFixtureRepeatedly,The following statement contains a magic number: Assert.AreEqual("Test"' fixtureSteps[3].Children[0].Step.Name);
Magic Number,MbUnit.Tests.Framework,RepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RepeatTest.cs,RunFixtureRepeatedly,The following statement contains a magic number: AssertLogContains(fixtureSteps[3].Children[0]' "Run: Repetition #4");
Magic Number,MbUnit.Tests.Framework,RepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RepeatTest.cs,RunFixtureRepeatedly,The following statement contains a magic number: Assert.AreEqual(TestOutcome.Passed' fixtureSteps[3].Children[0].Result.Outcome);
Magic Number,MbUnit.Tests.Framework,SimpleUseCases,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\FactoryTest.cs,SimpleUseCases,The following statement contains a magic number: FactoryInstanceField = new object[][]                  {                      new object[] { typeof(int)' 123' this' "InstanceField" }'                      new object[] { typeof(string)' "abc"' this' "InstanceField" }                  };
Magic Number,MbUnit.Tests.Framework,SimpleUseCases,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\FactoryTest.cs,FactoryInstanceMethod,The following statement contains a magic number: yield return new object[] { typeof(int)' 123' this' "InstanceMethod" };
Magic Number,MbUnit.Tests.Framework,SimpleUseCases,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\FactoryTest.cs,FactoryStaticMethod,The following statement contains a magic number: yield return new object[] { typeof(int)' 123' "StaticMethod" };
Magic Number,MbUnit.Tests.Framework,GenericUseCases<TOuter>,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\FactoryTest.cs,GenericUseCases,The following statement contains a magic number: FactoryInstanceField = new object[][]                  {                      new object[] { typeof(int)' 123' this' "InstanceField" }'                      new object[] { typeof(string)' "abc"' this' "InstanceField" }                  };
Magic Number,MbUnit.Tests.Framework,GenericUseCases<TOuter>,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\FactoryTest.cs,FactoryInstanceMethod,The following statement contains a magic number: yield return new object[] { typeof(int)' 123' this' "InstanceMethod" };
Magic Number,MbUnit.Tests.Framework,GenericUseCases<TOuter>,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\FactoryTest.cs,FactoryStaticMethod,The following statement contains a magic number: yield return new object[] { typeof(int)' 123' "StaticMethod" };
Magic Number,MbUnit.Tests.Framework,ExternalFactories,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\FactoryTest.cs,Method,The following statement contains a magic number: yield return new object[] { typeof(int)' 123' "ExternalMethod" };
Magic Number,MbUnit.Tests.Framework,IndirectInstanceUseCases,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\FactoryTest.cs,IndirectStaticMethod,The following statement contains a magic number: yield return 123;
Magic Number,MbUnit.Tests.Framework,IndirectInstanceUseCases,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\FactoryTest.cs,IndirectStaticMethod,The following statement contains a magic number: yield return 456;
Magic Number,MbUnit.Tests.Framework,IndirectInstanceUseCases,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\FactoryTest.cs,IndirectStaticMethod,The following statement contains a magic number: yield return 789;
Magic Number,MbUnit.Tests.Framework,ThreadedRepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ThreadedRepeatTest.cs,RunTestRepeatedly,The following statement contains a magic number: Assert.Count(10' testSteps' "Expected 10 repetitions represented as steps.");
Magic Number,MbUnit.Tests.Framework,ThreadedRepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ThreadedRepeatTest.cs,RunTestRepeatedly,The following statement contains a magic number: i < 10
Magic Number,MbUnit.Tests.Framework,ThreadedRepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ThreadedRepeatTest.cs,RunFixtureRepeatedly,The following statement contains a magic number: Assert.Count(10' fixtureSteps' "Expected 10 repetitions represented as steps.");
Magic Number,MbUnit.Tests.Framework,ThreadedRepeatTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ThreadedRepeatTest.cs,RunFixtureRepeatedly,The following statement contains a magic number: i < 10
Magic Number,MbUnit.Tests.Framework,CatchExceptionSample,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\CatchExceptionAttributeTest.cs,CatchExceptionExample3,The following statement contains a magic number: bool randomBool = new Random().Next() % 2 == 0;
Magic Number,MbUnit.Tests.Framework,AssertExceptionSample,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertExceptionAttributeTest.cs,AssertExceptionExample2,The following statement contains a magic number: bool randomBool = new Random().Next() % 2 == 0;
Magic Number,MbUnit.Tests.Framework,AssertExTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertExTest.cs,That_Failure,The following statement contains a magic number: int x = 4;
Magic Number,MbUnit.Tests.Framework,AssertExTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertExTest.cs,That_Failure,The following statement contains a magic number: AssertionFailure[] failures = Capture(                  () => AssertEx.That(() => x == 5'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertExTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertExTest.cs,Examples,The following statement contains a magic number: Assert.Multiple(() =>              {                  AssertEx.That(() => false);                  int x = 4;                  AssertEx.That(() => x == 5);                  AssertEx.That(() => ! (x == 4));                  AssertEx.That(() => !! (x == 5));                  AssertEx.That(() => new StringBuilder("abc").ToString() == "abcd");                    int[] vals = new int[] { 0' 1' 1' 2' 3' 5' 8' 12' 20 };                  for (int i = 2; i < vals.Length; i++)                      AssertEx.That(() => vals[i] == vals[i - 1] + vals[i - 2]);                    for (int i = 0; i < 15; i++)                      AssertEx.That(() => vals[i] > 0);                    vals = null;                  AssertEx.That(() => vals[0] > 0);              });
Magic Number,MbUnit.Tests.Framework,AssertExTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertExTest.cs,Examples,The following statement contains a magic number: Assert.Multiple(() =>              {                  AssertEx.That(() => false);                  int x = 4;                  AssertEx.That(() => x == 5);                  AssertEx.That(() => ! (x == 4));                  AssertEx.That(() => !! (x == 5));                  AssertEx.That(() => new StringBuilder("abc").ToString() == "abcd");                    int[] vals = new int[] { 0' 1' 1' 2' 3' 5' 8' 12' 20 };                  for (int i = 2; i < vals.Length; i++)                      AssertEx.That(() => vals[i] == vals[i - 1] + vals[i - 2]);                    for (int i = 0; i < 15; i++)                      AssertEx.That(() => vals[i] > 0);                    vals = null;                  AssertEx.That(() => vals[0] > 0);              });
Magic Number,MbUnit.Tests.Framework,AssertExTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertExTest.cs,Examples,The following statement contains a magic number: Assert.Multiple(() =>              {                  AssertEx.That(() => false);                  int x = 4;                  AssertEx.That(() => x == 5);                  AssertEx.That(() => ! (x == 4));                  AssertEx.That(() => !! (x == 5));                  AssertEx.That(() => new StringBuilder("abc").ToString() == "abcd");                    int[] vals = new int[] { 0' 1' 1' 2' 3' 5' 8' 12' 20 };                  for (int i = 2; i < vals.Length; i++)                      AssertEx.That(() => vals[i] == vals[i - 1] + vals[i - 2]);                    for (int i = 0; i < 15; i++)                      AssertEx.That(() => vals[i] > 0);                    vals = null;                  AssertEx.That(() => vals[0] > 0);              });
Magic Number,MbUnit.Tests.Framework,AssertExTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertExTest.cs,Examples,The following statement contains a magic number: Assert.Multiple(() =>              {                  AssertEx.That(() => false);                  int x = 4;                  AssertEx.That(() => x == 5);                  AssertEx.That(() => ! (x == 4));                  AssertEx.That(() => !! (x == 5));                  AssertEx.That(() => new StringBuilder("abc").ToString() == "abcd");                    int[] vals = new int[] { 0' 1' 1' 2' 3' 5' 8' 12' 20 };                  for (int i = 2; i < vals.Length; i++)                      AssertEx.That(() => vals[i] == vals[i - 1] + vals[i - 2]);                    for (int i = 0; i < 15; i++)                      AssertEx.That(() => vals[i] > 0);                    vals = null;                  AssertEx.That(() => vals[0] > 0);              });
Magic Number,MbUnit.Tests.Framework,AssertExTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertExTest.cs,Examples,The following statement contains a magic number: Assert.Multiple(() =>              {                  AssertEx.That(() => false);                  int x = 4;                  AssertEx.That(() => x == 5);                  AssertEx.That(() => ! (x == 4));                  AssertEx.That(() => !! (x == 5));                  AssertEx.That(() => new StringBuilder("abc").ToString() == "abcd");                    int[] vals = new int[] { 0' 1' 1' 2' 3' 5' 8' 12' 20 };                  for (int i = 2; i < vals.Length; i++)                      AssertEx.That(() => vals[i] == vals[i - 1] + vals[i - 2]);                    for (int i = 0; i < 15; i++)                      AssertEx.That(() => vals[i] > 0);                    vals = null;                  AssertEx.That(() => vals[0] > 0);              });
Magic Number,MbUnit.Tests.Framework,AssertExTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertExTest.cs,Examples,The following statement contains a magic number: Assert.Multiple(() =>              {                  AssertEx.That(() => false);                  int x = 4;                  AssertEx.That(() => x == 5);                  AssertEx.That(() => ! (x == 4));                  AssertEx.That(() => !! (x == 5));                  AssertEx.That(() => new StringBuilder("abc").ToString() == "abcd");                    int[] vals = new int[] { 0' 1' 1' 2' 3' 5' 8' 12' 20 };                  for (int i = 2; i < vals.Length; i++)                      AssertEx.That(() => vals[i] == vals[i - 1] + vals[i - 2]);                    for (int i = 0; i < 15; i++)                      AssertEx.That(() => vals[i] > 0);                    vals = null;                  AssertEx.That(() => vals[0] > 0);              });
Magic Number,MbUnit.Tests.Framework,AssertExTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertExTest.cs,Examples,The following statement contains a magic number: Assert.Multiple(() =>              {                  AssertEx.That(() => false);                  int x = 4;                  AssertEx.That(() => x == 5);                  AssertEx.That(() => ! (x == 4));                  AssertEx.That(() => !! (x == 5));                  AssertEx.That(() => new StringBuilder("abc").ToString() == "abcd");                    int[] vals = new int[] { 0' 1' 1' 2' 3' 5' 8' 12' 20 };                  for (int i = 2; i < vals.Length; i++)                      AssertEx.That(() => vals[i] == vals[i - 1] + vals[i - 2]);                    for (int i = 0; i < 15; i++)                      AssertEx.That(() => vals[i] > 0);                    vals = null;                  AssertEx.That(() => vals[0] > 0);              });
Magic Number,MbUnit.Tests.Framework,AssertExTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertExTest.cs,Examples,The following statement contains a magic number: Assert.Multiple(() =>              {                  AssertEx.That(() => false);                  int x = 4;                  AssertEx.That(() => x == 5);                  AssertEx.That(() => ! (x == 4));                  AssertEx.That(() => !! (x == 5));                  AssertEx.That(() => new StringBuilder("abc").ToString() == "abcd");                    int[] vals = new int[] { 0' 1' 1' 2' 3' 5' 8' 12' 20 };                  for (int i = 2; i < vals.Length; i++)                      AssertEx.That(() => vals[i] == vals[i - 1] + vals[i - 2]);                    for (int i = 0; i < 15; i++)                      AssertEx.That(() => vals[i] > 0);                    vals = null;                  AssertEx.That(() => vals[0] > 0);              });
Magic Number,MbUnit.Tests.Framework,AssertExTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertExTest.cs,Examples,The following statement contains a magic number: Assert.Multiple(() =>              {                  AssertEx.That(() => false);                  int x = 4;                  AssertEx.That(() => x == 5);                  AssertEx.That(() => ! (x == 4));                  AssertEx.That(() => !! (x == 5));                  AssertEx.That(() => new StringBuilder("abc").ToString() == "abcd");                    int[] vals = new int[] { 0' 1' 1' 2' 3' 5' 8' 12' 20 };                  for (int i = 2; i < vals.Length; i++)                      AssertEx.That(() => vals[i] == vals[i - 1] + vals[i - 2]);                    for (int i = 0; i < 15; i++)                      AssertEx.That(() => vals[i] > 0);                    vals = null;                  AssertEx.That(() => vals[0] > 0);              });
Magic Number,MbUnit.Tests.Framework,AssertExTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertExTest.cs,Examples,The following statement contains a magic number: Assert.Multiple(() =>              {                  AssertEx.That(() => false);                  int x = 4;                  AssertEx.That(() => x == 5);                  AssertEx.That(() => ! (x == 4));                  AssertEx.That(() => !! (x == 5));                  AssertEx.That(() => new StringBuilder("abc").ToString() == "abcd");                    int[] vals = new int[] { 0' 1' 1' 2' 3' 5' 8' 12' 20 };                  for (int i = 2; i < vals.Length; i++)                      AssertEx.That(() => vals[i] == vals[i - 1] + vals[i - 2]);                    for (int i = 0; i < 15; i++)                      AssertEx.That(() => vals[i] > 0);                    vals = null;                  AssertEx.That(() => vals[0] > 0);              });
Magic Number,MbUnit.Tests.Framework,AssertExTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertExTest.cs,Examples,The following statement contains a magic number: Assert.Multiple(() =>              {                  AssertEx.That(() => false);                  int x = 4;                  AssertEx.That(() => x == 5);                  AssertEx.That(() => ! (x == 4));                  AssertEx.That(() => !! (x == 5));                  AssertEx.That(() => new StringBuilder("abc").ToString() == "abcd");                    int[] vals = new int[] { 0' 1' 1' 2' 3' 5' 8' 12' 20 };                  for (int i = 2; i < vals.Length; i++)                      AssertEx.That(() => vals[i] == vals[i - 1] + vals[i - 2]);                    for (int i = 0; i < 15; i++)                      AssertEx.That(() => vals[i] > 0);                    vals = null;                  AssertEx.That(() => vals[0] > 0);              });
Magic Number,MbUnit.Tests.Framework,AssertExTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertExTest.cs,Examples,The following statement contains a magic number: Assert.Multiple(() =>              {                  AssertEx.That(() => false);                  int x = 4;                  AssertEx.That(() => x == 5);                  AssertEx.That(() => ! (x == 4));                  AssertEx.That(() => !! (x == 5));                  AssertEx.That(() => new StringBuilder("abc").ToString() == "abcd");                    int[] vals = new int[] { 0' 1' 1' 2' 3' 5' 8' 12' 20 };                  for (int i = 2; i < vals.Length; i++)                      AssertEx.That(() => vals[i] == vals[i - 1] + vals[i - 2]);                    for (int i = 0; i < 15; i++)                      AssertEx.That(() => vals[i] > 0);                    vals = null;                  AssertEx.That(() => vals[0] > 0);              });
Magic Number,MbUnit.Tests.Framework,AssertExTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertExTest.cs,Examples,The following statement contains a magic number: Assert.Multiple(() =>              {                  AssertEx.That(() => false);                  int x = 4;                  AssertEx.That(() => x == 5);                  AssertEx.That(() => ! (x == 4));                  AssertEx.That(() => !! (x == 5));                  AssertEx.That(() => new StringBuilder("abc").ToString() == "abcd");                    int[] vals = new int[] { 0' 1' 1' 2' 3' 5' 8' 12' 20 };                  for (int i = 2; i < vals.Length; i++)                      AssertEx.That(() => vals[i] == vals[i - 1] + vals[i - 2]);                    for (int i = 0; i < 15; i++)                      AssertEx.That(() => vals[i] > 0);                    vals = null;                  AssertEx.That(() => vals[0] > 0);              });
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,Pairs_Success_AllPassAssertion,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.Pairs(new[] { 1' 2' 3 }' new[] { -1' 2' 0 }' Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,Pairs_Success_AllPassAssertion,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.Pairs(new[] { 1' 2' 3 }' new[] { -1' 2' 0 }' Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,Pairs_Success_AllPassAssertion,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.Pairs(new[] { 1' 2' 3 }' new[] { -1' 2' 0 }' Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,Pairs_Failure_AtIndex,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.Pairs(new[] { 1' 2' 3 }' new[] { -1' 2' 4 }' Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,Pairs_Failure_AtIndex,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.Pairs(new[] { 1' 2' 3 }' new[] { -1' 2' 4 }' Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,Pairs_Failure_AtIndex,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.Pairs(new[] { 1' 2' 3 }' new[] { -1' 2' 4 }' Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,Pairs_Failure_AtIndex,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.Pairs(new[] { 1' 2' 3 }' new[] { -1' 2' 4 }' Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,Pairs_Failure_LeftShorterThanRight,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.Pairs(new[] { 1' 2 }' new[] { -1' 2' 4 }' Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,Pairs_Failure_LeftShorterThanRight,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.Pairs(new[] { 1' 2 }' new[] { -1' 2' 4 }' Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,Pairs_Failure_LeftShorterThanRight,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.Pairs(new[] { 1' 2 }' new[] { -1' 2' 4 }' Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,Pairs_Failure_LeftLongerThanRight,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.Pairs(new[] { 1' 2' 5' 0 }' new[] { -1' 2' 4 }' Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,Pairs_Failure_LeftLongerThanRight,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.Pairs(new[] { 1' 2' 5' 0 }' new[] { -1' 2' 4 }' Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,Pairs_Failure_LeftLongerThanRight,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.Pairs(new[] { 1' 2' 5' 0 }' new[] { -1' 2' 4 }' Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,Pairs_Failure_LeftLongerThanRight,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.Pairs(new[] { 1' 2' 5' 0 }' new[] { -1' 2' 4 }' Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,Pairs_Failure_LeftNullButNotRight,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.Pairs((int[])null' new[] { -1' 2' 4 }' Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,Pairs_Failure_LeftNullButNotRight,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.Pairs((int[])null' new[] { -1' 2' 4 }' Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,Pairs_Failure_RightNullButNotLeft,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.Pairs(new[] { -1' 2' 4 }' (int[])null' Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,Pairs_Failure_RightNullButNotLeft,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.Pairs(new[] { -1' 2' 4 }' (int[])null' Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,KeyedPairs_Success_AllPassAssertion,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.KeyedPairs(                      new Dictionary<int' string> { { 1' "a" }' { 2' "c" }}'                      new Dictionary<int' string> { { 1' "a" }' { 2' "b" } }'                      Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,KeyedPairs_Success_AllPassAssertion,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.KeyedPairs(                      new Dictionary<int' string> { { 1' "a" }' { 2' "c" }}'                      new Dictionary<int' string> { { 1' "a" }' { 2' "b" } }'                      Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,KeyedPairs_Failure_AtIndex,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.KeyedPairs(                      new Dictionary<int' string> { { 1' "a" }' { 2' "b" } }'                      new Dictionary<int' string> { { 1' "a" }' { 2' "c" } }'                      Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,KeyedPairs_Failure_AtIndex,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.KeyedPairs(                      new Dictionary<int' string> { { 1' "a" }' { 2' "b" } }'                      new Dictionary<int' string> { { 1' "a" }' { 2' "c" } }'                      Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,KeyedPairs_Failure_LeftShorterThanRight,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.KeyedPairs(                      new Dictionary<int' string> { { 2' "b" } }'                      new Dictionary<int' string> { { 1' "a" }' { 2' "b" } }'                      Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,KeyedPairs_Failure_LeftShorterThanRight,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.KeyedPairs(                      new Dictionary<int' string> { { 2' "b" } }'                      new Dictionary<int' string> { { 1' "a" }' { 2' "b" } }'                      Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,KeyedPairs_Failure_LeftLongerThanRight,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.KeyedPairs(                      new Dictionary<int' string> { { 1' "a" }' { 2' "b" } }'                      new Dictionary<int' string> { { 2' "b" } }'                      Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertOverSyntaxTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertOverSyntaxTest.cs,KeyedPairs_Failure_LeftLongerThanRight,The following statement contains a magic number: AssertionFailure[] failures = AssertTest.Capture(                  () => Assert.Over.KeyedPairs(                      new Dictionary<int' string> { { 1' "a" }' { 2' "b" } }'                      new Dictionary<int' string> { { 2' "b" } }'                      Assert.GreaterThanOrEqualTo'                      "Hello {0}."' "World"));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqual_with_different_types,The following statement contains a magic number: Assert.AreElementsEqual(new[] { 1' 2 }' new List<int> { 1' 2 });
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqual_with_different_types,The following statement contains a magic number: Assert.AreElementsEqual(new[] { 1' 2 }' new List<int> { 1' 2 });
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqual_with_custom_comparer,The following statement contains a magic number: Assert.AreElementsEqual("12"' "34"' (expected' actual) => expected + 2 == actual);
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqual_fails_when_elements_are_in_different_order,The following statement contains a magic number: AssertionFailure[] failures = Capture(()                  => Assert.AreElementsEqual(new[] { 1' 2 }' new List<int> { 2' 1 }));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqual_fails_when_elements_are_in_different_order,The following statement contains a magic number: AssertionFailure[] failures = Capture(()                  => Assert.AreElementsEqual(new[] { 1' 2 }' new List<int> { 2' 1 }));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqual_fails_when_elements_are_in_different_order,The following statement contains a magic number: Assert.AreEqual("Element Index"' failures[0].LabeledValues[2].Label);
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqual_fails_when_elements_are_in_different_order,The following statement contains a magic number: Assert.AreEqual("0"' failures[0].LabeledValues[2].FormattedValue.ToString());
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqual_fails_when_elements_are_in_different_order,The following statement contains a magic number: Assert.AreEqual("Expected Element"' failures[0].LabeledValues[3].Label);
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqual_fails_when_elements_are_in_different_order,The following statement contains a magic number: Assert.AreEqual("1"' failures[0].LabeledValues[3].FormattedValue.ToString());
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqual_fails_when_elements_are_in_different_order,The following statement contains a magic number: Assert.AreEqual("Actual Element"' failures[0].LabeledValues[4].Label);
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqual_fails_when_elements_are_in_different_order,The following statement contains a magic number: Assert.AreEqual("2"' failures[0].LabeledValues[4].FormattedValue.ToString());
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsNotEqual_with_different_types,The following statement contains a magic number: Assert.AreElementsNotEqual(new[] { 1' 2 }' new List<int> { 1' 3 });
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsNotEqual_with_different_types,The following statement contains a magic number: Assert.AreElementsNotEqual(new[] { 1' 2 }' new List<int> { 1' 3 });
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsNotEqual_with_custom_comparer,The following statement contains a magic number: Assert.AreElementsNotEqual("12"' "12"' (expected' actual) => expected + 2 == actual);
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsNotEqual_fails_when_elements_are_in_different_order,The following statement contains a magic number: AssertionFailure[] failures = Capture(()                  => Assert.AreElementsNotEqual(new[] { 1' 2 }' new List<int> { 1' 2 }));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsNotEqual_fails_when_elements_are_in_different_order,The following statement contains a magic number: AssertionFailure[] failures = Capture(()                  => Assert.AreElementsNotEqual(new[] { 1' 2 }' new List<int> { 1' 2 }));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqualIgnoringOrder_with_different_types,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[] { 2' 2' 3' 1 }' new List<int> { 1' 3' 2' 2 });
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqualIgnoringOrder_with_different_types,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[] { 2' 2' 3' 1 }' new List<int> { 1' 3' 2' 2 });
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqualIgnoringOrder_with_different_types,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[] { 2' 2' 3' 1 }' new List<int> { 1' 3' 2' 2 });
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqualIgnoringOrder_with_different_types,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[] { 2' 2' 3' 1 }' new List<int> { 1' 3' 2' 2 });
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqualIgnoringOrder_with_different_types,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[] { 2' 2' 3' 1 }' new List<int> { 1' 3' 2' 2 });
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqualIgnoringOrder_with_different_types,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[] { 2' 2' 3' 1 }' new List<int> { 1' 3' 2' 2 });
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqualIgnoringOrder_with_custom_comparer,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder("12"' "43"' (expected' actual) => expected + 2 == actual);
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqualIgnoringOrder_fails_when_excess_or_missing_elements,The following statement contains a magic number: AssertionFailure[] failures = Capture(()                  => Assert.AreElementsEqualIgnoringOrder(new[] { 1' 2' 3' 2' 3' 1 }' new List<int> { 4' 2' 1' 1' 4' 1' 4 }));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqualIgnoringOrder_fails_when_excess_or_missing_elements,The following statement contains a magic number: AssertionFailure[] failures = Capture(()                  => Assert.AreElementsEqualIgnoringOrder(new[] { 1' 2' 3' 2' 3' 1 }' new List<int> { 4' 2' 1' 1' 4' 1' 4 }));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqualIgnoringOrder_fails_when_excess_or_missing_elements,The following statement contains a magic number: AssertionFailure[] failures = Capture(()                  => Assert.AreElementsEqualIgnoringOrder(new[] { 1' 2' 3' 2' 3' 1 }' new List<int> { 4' 2' 1' 1' 4' 1' 4 }));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqualIgnoringOrder_fails_when_excess_or_missing_elements,The following statement contains a magic number: AssertionFailure[] failures = Capture(()                  => Assert.AreElementsEqualIgnoringOrder(new[] { 1' 2' 3' 2' 3' 1 }' new List<int> { 4' 2' 1' 1' 4' 1' 4 }));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqualIgnoringOrder_fails_when_excess_or_missing_elements,The following statement contains a magic number: AssertionFailure[] failures = Capture(()                  => Assert.AreElementsEqualIgnoringOrder(new[] { 1' 2' 3' 2' 3' 1 }' new List<int> { 4' 2' 1' 1' 4' 1' 4 }));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqualIgnoringOrder_fails_when_excess_or_missing_elements,The following statement contains a magic number: AssertionFailure[] failures = Capture(()                  => Assert.AreElementsEqualIgnoringOrder(new[] { 1' 2' 3' 2' 3' 1 }' new List<int> { 4' 2' 1' 1' 4' 1' 4 }));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqualIgnoringOrder_fails_when_excess_or_missing_elements,The following statement contains a magic number: AssertionFailure[] failures = Capture(()                  => Assert.AreElementsEqualIgnoringOrder(new[] { 1' 2' 3' 2' 3' 1 }' new List<int> { 4' 2' 1' 1' 4' 1' 4 }));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqualIgnoringOrder_fails_when_excess_or_missing_elements,The following statement contains a magic number: AssertionFailure[] failures = Capture(()                  => Assert.AreElementsEqualIgnoringOrder(new[] { 1' 2' 3' 2' 3' 1 }' new List<int> { 4' 2' 1' 1' 4' 1' 4 }));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqualIgnoringOrder_fails_when_excess_or_missing_elements,The following statement contains a magic number: Assert.AreEqual("Missing Elements"' failures[0].LabeledValues[2].Label);
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,AreElementsEqualIgnoringOrder_fails_when_excess_or_missing_elements,The following statement contains a magic number: Assert.AreEqual("[2' 3' 3]"' failures[0].LabeledValues[2].FormattedValue.ToString());
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,Contains_generic_ICollection_int_test,The following statement contains a magic number: Assert.Contains(new List<int>(new[] { 1' 2' 3 })' 2);
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,Contains_generic_ICollection_int_test,The following statement contains a magic number: Assert.Contains(new List<int>(new[] { 1' 2' 3 })' 2);
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,Contains_generic_ICollection_int_test,The following statement contains a magic number: Assert.Contains(new List<int>(new[] { 1' 2' 3 })' 2);
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,Contains_fails_when_test_value_is_not_in_the_list,The following statement contains a magic number: AssertionFailure[] failures = Capture(() =>                  Assert.Contains(new List<int>(listItems)' 4));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,ContainsKey_dictionary_int_test,The following statement contains a magic number: Assert.ContainsKey(new Dictionary<int' int>                {                    {1' 1}'                    {2' 2}                }' 2);
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,ContainsKey_dictionary_int_test,The following statement contains a magic number: Assert.ContainsKey(new Dictionary<int' int>                {                    {1' 1}'                    {2' 2}                }' 2);
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,ContainsKey_dictionary_int_test,The following statement contains a magic number: Assert.ContainsKey(new Dictionary<int' int>                {                    {1' 1}'                    {2' 2}                }' 2);
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,ContainsKey_fails_when_test_value_is_not_in_the_dictionary,The following statement contains a magic number: var dictionary = new Dictionary<int' string>                                   {                  { 1' "1" }'                  { 2' "2`" }'              };
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,Contains_fails_when_test_value_is_not_in_the_dictionary_key_is_reference_type,The following statement contains a magic number: var dictionary = new Dictionary<List<int>' string>                                   {                  { new List<int>(new[] {1' 2})' "1" }'                  { new List<int>(new[] {3' 4})' "2`" }'              };
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,Contains_fails_when_test_value_is_not_in_the_dictionary_key_is_reference_type,The following statement contains a magic number: var dictionary = new Dictionary<List<int>' string>                                   {                  { new List<int>(new[] {1' 2})' "1" }'                  { new List<int>(new[] {3' 4})' "2`" }'              };
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,Contains_fails_when_test_value_is_not_in_the_dictionary_key_is_reference_type,The following statement contains a magic number: var dictionary = new Dictionary<List<int>' string>                                   {                  { new List<int>(new[] {1' 2})' "1" }'                  { new List<int>(new[] {3' 4})' "2`" }'              };
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,Contains_fails_when_test_value_is_not_in_the_dictionary_key_is_reference_type,The following statement contains a magic number: AssertionFailure[] failures = Capture(() =>                  Assert.ContainsKey(dictionary' new List<int>(new[] { 5 })));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,Contains_fails_with_custom_message,The following statement contains a magic number: AssertionFailure[] failures = Capture(() =>                  Assert.Contains(new List<int>(new[] { 1' 2' 3 })' 5' "{0} message."' "custom"));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,Contains_fails_with_custom_message,The following statement contains a magic number: AssertionFailure[] failures = Capture(() =>                  Assert.Contains(new List<int>(new[] { 1' 2' 3 })' 5' "{0} message."' "custom"));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,Contains_fails_with_custom_message,The following statement contains a magic number: AssertionFailure[] failures = Capture(() =>                  Assert.Contains(new List<int>(new[] { 1' 2' 3 })' 5' "{0} message."' "custom"));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,ForAllAction_should_fail,The following statement contains a magic number: Assert.Count(2' failures[0].InnerFailures);
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,ForAllActionIndex_should_fail,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.ForAll(data' (value' index) =>              {                  if (index < 3)                      Assert.StartsWith(value' "A");              }));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,IsEmpty_should_fail,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.IsEmpty(new[] { 123' 456' 789 }));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,IsEmpty_should_fail,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.IsEmpty(new[] { 123' 456' 789 }));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,IsEmpty_should_fail,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.IsEmpty(new[] { 123' 456' 789 }));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,IsEmpty_should_fail_with_custom_message,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.IsEmpty(new[] { 13' 46' 79 }' "{0} message."' "Custom"));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,IsEmpty_should_fail_with_custom_message,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.IsEmpty(new[] { 13' 46' 79 }' "{0} message."' "Custom"));
Magic Number,MbUnit.Tests.Framework,AssertTest_Collections,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Collections.cs,IsEmpty_should_fail_with_custom_message,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.IsEmpty(new[] { 13' 46' 79 }' "{0} message."' "Custom"));
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_when_simple_values_different,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.AreEqual(1' 2));
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_custom_message,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.AreEqual(1' 2' "{0} message"' "custom"));
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_with_multidimensional_arrays,The following statement contains a magic number: var array1 = new['] {{1' 2}' {3' 4}' {5' 6}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_with_multidimensional_arrays,The following statement contains a magic number: var array1 = new['] {{1' 2}' {3' 4}' {5' 6}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_with_multidimensional_arrays,The following statement contains a magic number: var array1 = new['] {{1' 2}' {3' 4}' {5' 6}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_with_multidimensional_arrays,The following statement contains a magic number: var array1 = new['] {{1' 2}' {3' 4}' {5' 6}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_with_multidimensional_arrays,The following statement contains a magic number: var array1 = new['] {{1' 2}' {3' 4}' {5' 6}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_with_multidimensional_arrays,The following statement contains a magic number: var array2 = new['] {{1' 2}' {3' 4}' {5' 6}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_with_multidimensional_arrays,The following statement contains a magic number: var array2 = new['] {{1' 2}' {3' 4}' {5' 6}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_with_multidimensional_arrays,The following statement contains a magic number: var array2 = new['] {{1' 2}' {3' 4}' {5' 6}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_with_multidimensional_arrays,The following statement contains a magic number: var array2 = new['] {{1' 2}' {3' 4}' {5' 6}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_with_multidimensional_arrays,The following statement contains a magic number: var array2 = new['] {{1' 2}' {3' 4}' {5' 6}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_ranks,The following statement contains a magic number: Array array1 = new['] {{1' 2}' {3' 4}' {5' 6}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_ranks,The following statement contains a magic number: Array array1 = new['] {{1' 2}' {3' 4}' {5' 6}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_ranks,The following statement contains a magic number: Array array1 = new['] {{1' 2}' {3' 4}' {5' 6}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_ranks,The following statement contains a magic number: Array array1 = new['] {{1' 2}' {3' 4}' {5' 6}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_ranks,The following statement contains a magic number: Array array1 = new['] {{1' 2}' {3' 4}' {5' 6}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_ranks,The following statement contains a magic number: Array array2 = new[''] {{{1' 2}}' {{3' 4}}' {{5' 6}}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_ranks,The following statement contains a magic number: Array array2 = new[''] {{{1' 2}}' {{3' 4}}' {{5' 6}}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_ranks,The following statement contains a magic number: Array array2 = new[''] {{{1' 2}}' {{3' 4}}' {{5' 6}}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_ranks,The following statement contains a magic number: Array array2 = new[''] {{{1' 2}}' {{3' 4}}' {{5' 6}}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_ranks,The following statement contains a magic number: Array array2 = new[''] {{{1' 2}}' {{3' 4}}' {{5' 6}}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_dimensional_lengths,The following statement contains a magic number: Array array1 = new['] {{1' 2}' {3' 4}' {5' 6}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_dimensional_lengths,The following statement contains a magic number: Array array1 = new['] {{1' 2}' {3' 4}' {5' 6}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_dimensional_lengths,The following statement contains a magic number: Array array1 = new['] {{1' 2}' {3' 4}' {5' 6}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_dimensional_lengths,The following statement contains a magic number: Array array1 = new['] {{1' 2}' {3' 4}' {5' 6}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_dimensional_lengths,The following statement contains a magic number: Array array1 = new['] {{1' 2}' {3' 4}' {5' 6}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_dimensional_lengths,The following statement contains a magic number: Array array2 = new['] {{1' 2' 3}' {4' 5' 6}' {7' 8' 9}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_dimensional_lengths,The following statement contains a magic number: Array array2 = new['] {{1' 2' 3}' {4' 5' 6}' {7' 8' 9}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_dimensional_lengths,The following statement contains a magic number: Array array2 = new['] {{1' 2' 3}' {4' 5' 6}' {7' 8' 9}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_dimensional_lengths,The following statement contains a magic number: Array array2 = new['] {{1' 2' 3}' {4' 5' 6}' {7' 8' 9}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_dimensional_lengths,The following statement contains a magic number: Array array2 = new['] {{1' 2' 3}' {4' 5' 6}' {7' 8' 9}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_dimensional_lengths,The following statement contains a magic number: Array array2 = new['] {{1' 2' 3}' {4' 5' 6}' {7' 8' 9}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_dimensional_lengths,The following statement contains a magic number: Array array2 = new['] {{1' 2' 3}' {4' 5' 6}' {7' 8' 9}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_dimensional_lengths,The following statement contains a magic number: Array array2 = new['] {{1' 2' 3}' {4' 5' 6}' {7' 8' 9}};
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_values,The following statement contains a magic number: Array array1 = new['] { { 1' 2 }' { 3' 4 }' { 5' 6 } };
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_values,The following statement contains a magic number: Array array1 = new['] { { 1' 2 }' { 3' 4 }' { 5' 6 } };
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_values,The following statement contains a magic number: Array array1 = new['] { { 1' 2 }' { 3' 4 }' { 5' 6 } };
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_values,The following statement contains a magic number: Array array1 = new['] { { 1' 2 }' { 3' 4 }' { 5' 6 } };
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_values,The following statement contains a magic number: Array array1 = new['] { { 1' 2 }' { 3' 4 }' { 5' 6 } };
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_values,The following statement contains a magic number: Array array2 = new['] { { 1' 2 }' { 3' 444 }' { 5' 6 } };
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_values,The following statement contains a magic number: Array array2 = new['] { { 1' 2 }' { 3' 444 }' { 5' 6 } };
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_values,The following statement contains a magic number: Array array2 = new['] { { 1' 2 }' { 3' 444 }' { 5' 6 } };
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_values,The following statement contains a magic number: Array array2 = new['] { { 1' 2 }' { 3' 444 }' { 5' 6 } };
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreEqual_fails_with_multidimensional_arrays_having_different_values,The following statement contains a magic number: Array array2 = new['] { { 1' 2 }' { 3' 444 }' { 5' 6 } };
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreApproximatelyEqual_simple_test,The following statement contains a magic number: Assert.AreApproximatelyEqual(2.4' 2.5' 0.2);
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreApproximatelyEqual_simple_test,The following statement contains a magic number: Assert.AreApproximatelyEqual(2.4' 2.5' 0.2);
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreApproximatelyEqual_simple_test,The following statement contains a magic number: Assert.AreApproximatelyEqual(2.4' 2.5' 0.2);
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreApproximatelyEqual_fail,The following statement contains a magic number: AssertionFailure[] failures = Capture(() =>                  Assert.AreApproximatelyEqual(2.4' 2.5' 0.05));
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreApproximatelyEqual_fail,The following statement contains a magic number: AssertionFailure[] failures = Capture(() =>                  Assert.AreApproximatelyEqual(2.4' 2.5' 0.05));
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreApproximatelyEqual_fail,The following statement contains a magic number: AssertionFailure[] failures = Capture(() =>                  Assert.AreApproximatelyEqual(2.4' 2.5' 0.05));
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreApproximatelyEqual_fail,The following statement contains a magic number: Assert.AreEqual("0.05"' failures[0].LabeledValues[2].FormattedValue.ToString());
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreApproximatelyEqual_fail_with_custom_message,The following statement contains a magic number: AssertionFailure[] failures = Capture(() =>                  Assert.AreApproximatelyEqual(2.4' 2.5' 0.05' "{0} message"' "custom"));
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreApproximatelyEqual_fail_with_custom_message,The following statement contains a magic number: AssertionFailure[] failures = Capture(() =>                  Assert.AreApproximatelyEqual(2.4' 2.5' 0.05' "{0} message"' "custom"));
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreApproximatelyEqual_fail_with_custom_message,The following statement contains a magic number: AssertionFailure[] failures = Capture(() =>                  Assert.AreApproximatelyEqual(2.4' 2.5' 0.05' "{0} message"' "custom"));
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreApproximatelyEqual_fail_with_custom_message,The following statement contains a magic number: Assert.AreEqual("0.05"' failures[0].LabeledValues[2].FormattedValue.ToString());
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreNotApproximatelyEqual_simple_test,The following statement contains a magic number: Assert.AreNotApproximatelyEqual(2.4' 2.5' 0.05);
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreNotApproximatelyEqual_simple_test,The following statement contains a magic number: Assert.AreNotApproximatelyEqual(2.4' 2.5' 0.05);
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreNotApproximatelyEqual_simple_test,The following statement contains a magic number: Assert.AreNotApproximatelyEqual(2.4' 2.5' 0.05);
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreNotApproximatelyEqual_fail,The following statement contains a magic number: AssertionFailure[] failures = Capture(() =>                  Assert.AreNotApproximatelyEqual(2.4' 2.5' 0.2));
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreNotApproximatelyEqual_fail,The following statement contains a magic number: AssertionFailure[] failures = Capture(() =>                  Assert.AreNotApproximatelyEqual(2.4' 2.5' 0.2));
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreNotApproximatelyEqual_fail,The following statement contains a magic number: AssertionFailure[] failures = Capture(() =>                  Assert.AreNotApproximatelyEqual(2.4' 2.5' 0.2));
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreNotApproximatelyEqual_fail,The following statement contains a magic number: Assert.AreEqual("0.2"' failures[0].LabeledValues[2].FormattedValue.ToString());
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreNotApproximatelyEqual_fail_with_custom_message,The following statement contains a magic number: AssertionFailure[] failures = Capture(() =>                  Assert.AreNotApproximatelyEqual(2.4' 2.5' 0.2' "{0} message"' "custom"));
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreNotApproximatelyEqual_fail_with_custom_message,The following statement contains a magic number: AssertionFailure[] failures = Capture(() =>                  Assert.AreNotApproximatelyEqual(2.4' 2.5' 0.2' "{0} message"' "custom"));
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreNotApproximatelyEqual_fail_with_custom_message,The following statement contains a magic number: AssertionFailure[] failures = Capture(() =>                  Assert.AreNotApproximatelyEqual(2.4' 2.5' 0.2' "{0} message"' "custom"));
Magic Number,MbUnit.Tests.Framework,AssertTest_Comparisons,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Comparisons.cs,AreNotApproximatelyEqual_fail_with_custom_message,The following statement contains a magic number: Assert.AreEqual("0.2"' failures[0].LabeledValues[2].FormattedValue.ToString());
Magic Number,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,IsInstanceOfType_with_null_expectedType_and_non_null_actual_value_should_fail,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.IsInstanceOfType(null' 123));
Magic Number,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,IsInstanceOfType_with_null_expectedType_and_non_null_actual_value_should_fail,The following statement contains a magic number: Assert.AreEqual("Actual Value"' failures[0].LabeledValues[2].Label);
Magic Number,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,IsInstanceOfType_with_null_expectedType_and_non_null_actual_value_should_fail,The following statement contains a magic number: Assert.AreEqual("123"' failures[0].LabeledValues[2].FormattedValue.ToString());
Magic Number,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,Generic_IsInstanceOfType_with_custom_message_failed,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.IsInstanceOfType<string>(123));
Magic Number,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,Generic_IsInstanceOfType_with_custom_message_failed,The following statement contains a magic number: Assert.AreEqual("Actual Value"' failures[0].LabeledValues[2].Label);
Magic Number,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,Generic_IsInstanceOfType_with_custom_message_failed,The following statement contains a magic number: Assert.AreEqual("123"' failures[0].LabeledValues[2].FormattedValue.ToString());
Magic Number,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,IsInstanceOfType_with_custom_message_failed,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.IsInstanceOfType(typeof(string)' 123));
Magic Number,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,IsInstanceOfType_with_custom_message_failed,The following statement contains a magic number: Assert.AreEqual("Actual Value"' failures[0].LabeledValues[2].Label);
Magic Number,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,IsInstanceOfType_with_custom_message_failed,The following statement contains a magic number: Assert.AreEqual("123"' failures[0].LabeledValues[2].FormattedValue.ToString());
Magic Number,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,IsNotInstanceOfType_with_null_expectedType_and_non_null_actualValue_should_pass,The following statement contains a magic number: Assert.IsNotInstanceOfType(null' 123);
Magic Number,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,Generic_IsNotInstanceOfType_with_custom_message_failed,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.IsNotInstanceOfType<int>(123));
Magic Number,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,Generic_IsNotInstanceOfType_with_custom_message_failed,The following statement contains a magic number: Assert.AreEqual("Actual Value"' failures[0].LabeledValues[2].Label);
Magic Number,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,Generic_IsNotInstanceOfType_with_custom_message_failed,The following statement contains a magic number: Assert.AreEqual("123"' failures[0].LabeledValues[2].FormattedValue.ToString());
Magic Number,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,IsNotInstanceOfType_with_custom_message_failed,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.IsNotInstanceOfType(typeof(int)' 123));
Magic Number,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,IsNotInstanceOfType_with_custom_message_failed,The following statement contains a magic number: Assert.AreEqual("Actual Value"' failures[0].LabeledValues[2].Label);
Magic Number,MbUnit.Tests.Framework,AssertTest_Reflection,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Reflection.cs,IsNotInstanceOfType_with_custom_message_failed,The following statement contains a magic number: Assert.AreEqual("123"' failures[0].LabeledValues[2].FormattedValue.ToString());
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,GreaterThan_int_test,The following statement contains a magic number: Assert.GreaterThan(5' 4);
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,GreaterThan_int_test,The following statement contains a magic number: Assert.GreaterThan(5' 4);
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,GreaterThan_fails_when_left_value_is_not_greater_than_right,The following statement contains a magic number: AssertionFailure[] failures = Capture(() =>                  Assert.GreaterThan(5' 5));
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,GreaterThan_fails_when_left_value_is_not_greater_than_right,The following statement contains a magic number: AssertionFailure[] failures = Capture(() =>                  Assert.GreaterThan(5' 5));
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,GreaterThan_double_test,The following statement contains a magic number: Assert.GreaterThan(0.001' 0.0001);
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,GreaterThan_double_test,The following statement contains a magic number: Assert.GreaterThan(0.001' 0.0001);
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,GreaterThan_with_delegate_test,The following statement contains a magic number: Assert.GreaterThan(4' 3' (left' right) => left.CompareTo(0) + right.CompareTo(0));
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,GreaterThan_with_delegate_test,The following statement contains a magic number: Assert.GreaterThan(4' 3' (left' right) => left.CompareTo(0) + right.CompareTo(0));
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,GreaterThan_with_comparer_test,The following statement contains a magic number: Assert.GreaterThan(4' 3' new Comparer<int>((left' right) => left.CompareTo(0) + right.CompareTo(0)));
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,GreaterThan_with_comparer_test,The following statement contains a magic number: Assert.GreaterThan(4' 3' new Comparer<int>((left' right) => left.CompareTo(0) + right.CompareTo(0)));
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,GreaterThanOrEqual_fails_when_left_value_is_not_greater_or_equal_than_right,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.GreaterThanOrEqualTo(5' 6));
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,GreaterThanOrEqual_fails_when_left_value_is_not_greater_or_equal_than_right,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.GreaterThanOrEqualTo(5' 6));
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,GreaterThanOrEqual_double_test,The following statement contains a magic number: Assert.GreaterThanOrEqualTo(0.001' 0.0001);
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,GreaterThanOrEqual_double_test,The following statement contains a magic number: Assert.GreaterThanOrEqualTo(0.001' 0.0001);
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,GreaterThanOrEqual_with_delegate_test,The following statement contains a magic number: Assert.GreaterThanOrEqualTo(4' 4' (left' right) => left.CompareTo(0) + right.CompareTo(0));
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,GreaterThanOrEqual_with_delegate_test,The following statement contains a magic number: Assert.GreaterThanOrEqualTo(4' 4' (left' right) => left.CompareTo(0) + right.CompareTo(0));
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,GreaterThanOrEqual_with_comparer_test,The following statement contains a magic number: Assert.GreaterThanOrEqualTo(4' 4' new Comparer<int>((left' right) => left.CompareTo(0) + right.CompareTo(0)));
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,GreaterThanOrEqual_with_comparer_test,The following statement contains a magic number: Assert.GreaterThanOrEqualTo(4' 4' new Comparer<int>((left' right) => left.CompareTo(0) + right.CompareTo(0)));
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThan_int_test,The following statement contains a magic number: Assert.LessThan(3' 4);
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThan_int_test,The following statement contains a magic number: Assert.LessThan(3' 4);
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThan_fail_when_left_value_is_null_with_custom_message,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.LessThan(5' 1.1' "custom message."));
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThan_fail_when_left_value_is_null_with_custom_message,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.LessThan(5' 1.1' "custom message."));
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThan_double_test,The following statement contains a magic number: Assert.LessThan(0.0001' 0.001);
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThan_double_test,The following statement contains a magic number: Assert.LessThan(0.0001' 0.001);
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThan_with_delegate_test,The following statement contains a magic number: Assert.LessThan(3' 4' (left' right) => left - right);
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThan_with_delegate_test,The following statement contains a magic number: Assert.LessThan(3' 4' (left' right) => left - right);
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThan_with_delegate_and_message_test,The following statement contains a magic number: Assert.LessThan(-5' 3' (left' right) => left - right' "custom message");
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThan_with_delegate_and_message_test,The following statement contains a magic number: Assert.LessThan(-5' 3' (left' right) => left - right' "custom message");
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThan_with_comparer_test,The following statement contains a magic number: Assert.LessThan(3' 4' new Comparer<int>((left' right) => left - right));
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThan_with_comparer_test,The following statement contains a magic number: Assert.LessThan(3' 4' new Comparer<int>((left' right) => left - right));
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThan_with_comparer_and_message_test,The following statement contains a magic number: Assert.LessThan(-5' 3' new Comparer<int>((left' right) => left - right)' "custom message");
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThan_with_comparer_and_message_test,The following statement contains a magic number: Assert.LessThan(-5' 3' new Comparer<int>((left' right) => left - right)' "custom message");
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThanOrEqual_double_test,The following statement contains a magic number: Assert.LessThanOrEqualTo(0.0001' 0.001);
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThanOrEqual_double_test,The following statement contains a magic number: Assert.LessThanOrEqualTo(0.0001' 0.001);
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThanOrEqual_with_message_test,The following statement contains a magic number: Assert.LessThanOrEqualTo(-6' 6' "custom message");
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThanOrEqual_with_message_test,The following statement contains a magic number: Assert.LessThanOrEqualTo(-6' 6' "custom message");
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThanOrEqual_with_delegate_test,The following statement contains a magic number: Assert.LessThanOrEqualTo(3' 4' (left' right) => left - right);
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThanOrEqual_with_delegate_test,The following statement contains a magic number: Assert.LessThanOrEqualTo(3' 4' (left' right) => left - right);
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThanOrEqual_with_delegate_and_message_test,The following statement contains a magic number: Assert.LessThanOrEqualTo(3' 4' (left' right) => left - right' "custom message");
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThanOrEqual_with_delegate_and_message_test,The following statement contains a magic number: Assert.LessThanOrEqualTo(3' 4' (left' right) => left - right' "custom message");
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThanOrEqual_with_comparer_test,The following statement contains a magic number: Assert.LessThanOrEqualTo(3' 4' new Comparer<int>((left' right) => left - right));
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThanOrEqual_with_comparer_test,The following statement contains a magic number: Assert.LessThanOrEqualTo(3' 4' new Comparer<int>((left' right) => left - right));
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThanOrEqual_with_comparer_and_message_test,The following statement contains a magic number: Assert.LessThanOrEqualTo(3' 4' new Comparer<int>((left' right) => left - right)' "custom message");
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,LessThanOrEqual_with_comparer_and_message_test,The following statement contains a magic number: Assert.LessThanOrEqualTo(3' 4' new Comparer<int>((left' right) => left - right)' "custom message");
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,Between_nullable_int_test,The following statement contains a magic number: Assert.Between(test' left' 6);
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,Between_fails_when_test_value_is_left_of_the_range,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.Between(0' 1' 3));
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,Between_fails_when_test_value_is_left_of_the_range,The following statement contains a magic number: Assert.AreEqual("Maximum Value"' failures[0].LabeledValues[2].Label);
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,Between_fails_when_test_value_is_left_of_the_range,The following statement contains a magic number: Assert.AreEqual("3"' failures[0].LabeledValues[2].FormattedValue.ToString());
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,NotBetween_fails_when_test_value_is_left_of_the_range,The following statement contains a magic number: AssertionFailure[] failures = Capture(() => Assert.NotBetween(1' 1' 3));
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,NotBetween_fails_when_test_value_is_left_of_the_range,The following statement contains a magic number: Assert.AreEqual("Maximum Value"' failures[0].LabeledValues[2].Label);
Magic Number,MbUnit.Tests.Framework,AssertTest_Relations,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Relations.cs,NotBetween_fails_when_test_value_is_left_of_the_range,The following statement contains a magic number: Assert.AreEqual("3"' failures[0].LabeledValues[2].FormattedValue.ToString());
Magic Number,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,DoesNotContain_with_comparison_type_fail_test_with_custom_message,The following statement contains a magic number: Assert.AreEqual("\"ABCDEF\""' failures[0].LabeledValues[2].FormattedValue.ToString());
Magic Number,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,AreEqualIgnoreCase_fails_when_simple_values_different,The following statement contains a magic number: Assert.AreEqual("Actual Value"' failures[0].LabeledValues[2].Label);
Magic Number,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,AreEqualIgnoreCase_fails_when_simple_values_different,The following statement contains a magic number: Assert.AreEqual("\"tEsm\""' failures[0].LabeledValues[2].FormattedValue.ToString());
Magic Number,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,AreEqualIgnoreCase_fails_when_one_of_the_values_is_null,The following statement contains a magic number: Assert.AreEqual("null"' failures[0].LabeledValues[2].FormattedValue.ToString());
Magic Number,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,StartsWith_with_comparison_type_fails_when_testValue_does_not_start_with_pattern,The following statement contains a magic number: Assert.AreEqual("Expected Text"' failures[0].LabeledValues[2].Label);
Magic Number,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,StartsWith_with_comparison_type_fails_when_testValue_does_not_start_with_pattern,The following statement contains a magic number: Assert.AreEqual("\"jb\""' failures[0].LabeledValues[2].FormattedValue.ToString());
Magic Number,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,EndsWith_with_comparison_type_fails_when_testValue_does_not_start_with_pattern,The following statement contains a magic number: Assert.AreEqual("Expected Text"' failures[0].LabeledValues[2].Label);
Magic Number,MbUnit.Tests.Framework,AssertTest_Strings,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Strings.cs,EndsWith_with_comparison_type_fails_when_testValue_does_not_start_with_pattern,The following statement contains a magic number: Assert.AreEqual("\"jb\""' failures[0].LabeledValues[2].FormattedValue.ToString());
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 1' 2' 2' 3 }' SortOrder.Increasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 1' 2' 2' 3 }' SortOrder.Increasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 1' 2' 2' 3 }' SortOrder.Increasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 1' 2' 3' 4 }' SortOrder.Increasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 1' 2' 3' 4 }' SortOrder.Increasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 1' 2' 3' 4 }' SortOrder.Increasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 4' 3' 2' 1 }' SortOrder.Increasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 4' 3' 2' 1 }' SortOrder.Increasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 4' 3' 2' 1 }' SortOrder.Increasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 1' 2' 2' 3 }' SortOrder.StrictlyIncreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 1' 2' 2' 3 }' SortOrder.StrictlyIncreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 1' 2' 2' 3 }' SortOrder.StrictlyIncreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 1' 2' 3' 4 }' SortOrder.StrictlyIncreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 1' 2' 3' 4 }' SortOrder.StrictlyIncreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 1' 2' 3' 4 }' SortOrder.StrictlyIncreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 3' 2' 2' 1 }' SortOrder.Decreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 3' 2' 2' 1 }' SortOrder.Decreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 3' 2' 2' 1 }' SortOrder.Decreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 4' 3' 2' 1 }' SortOrder.Decreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 4' 3' 2' 1 }' SortOrder.Decreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 4' 3' 2' 1 }' SortOrder.Decreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 1' 2' 3' 4 }' SortOrder.Decreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 1' 2' 3' 4 }' SortOrder.Decreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 1' 2' 3' 4 }' SortOrder.Decreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 3' 2' 2' 1 }' SortOrder.StrictlyDecreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 3' 2' 2' 1 }' SortOrder.StrictlyDecreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 3' 2' 2' 1 }' SortOrder.StrictlyDecreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 4' 3' 2' 1 }' SortOrder.StrictlyDecreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 4' 3' 2' 1 }' SortOrder.StrictlyDecreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 4' 3' 2' 1 }' SortOrder.StrictlyDecreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(2)' new Foo1(3) }' SortOrder.Increasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(2)' new Foo1(3) }' SortOrder.Increasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(2)' new Foo1(3) }' SortOrder.Increasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(3)' new Foo1(4) }' SortOrder.Increasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(3)' new Foo1(4) }' SortOrder.Increasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(3)' new Foo1(4) }' SortOrder.Increasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(4)' new Foo1(3)' new Foo1(2)' new Foo1(1) }' SortOrder.Increasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(4)' new Foo1(3)' new Foo1(2)' new Foo1(1) }' SortOrder.Increasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(4)' new Foo1(3)' new Foo1(2)' new Foo1(1) }' SortOrder.Increasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(2)' new Foo1(3) }' SortOrder.StrictlyIncreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(2)' new Foo1(3) }' SortOrder.StrictlyIncreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(2)' new Foo1(3) }' SortOrder.StrictlyIncreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(3)' new Foo1(4) }' SortOrder.StrictlyIncreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(3)' new Foo1(4) }' SortOrder.StrictlyIncreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(3)' new Foo1(4) }' SortOrder.StrictlyIncreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(3)' new Foo1(2)' new Foo1(2)' new Foo1(1) }' SortOrder.Decreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(3)' new Foo1(2)' new Foo1(2)' new Foo1(1) }' SortOrder.Decreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(3)' new Foo1(2)' new Foo1(2)' new Foo1(1) }' SortOrder.Decreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(4)' new Foo1(3)' new Foo1(2)' new Foo1(1) }' SortOrder.Decreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(4)' new Foo1(3)' new Foo1(2)' new Foo1(1) }' SortOrder.Decreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(4)' new Foo1(3)' new Foo1(2)' new Foo1(1) }' SortOrder.Decreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(3)' new Foo1(4) }' SortOrder.Decreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(3)' new Foo1(4) }' SortOrder.Decreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(3)' new Foo1(4) }' SortOrder.Decreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(3)' new Foo1(2)' new Foo1(2)' new Foo1(1) }' SortOrder.StrictlyDecreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(3)' new Foo1(2)' new Foo1(2)' new Foo1(1) }' SortOrder.StrictlyDecreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(3)' new Foo1(2)' new Foo1(2)' new Foo1(1) }' SortOrder.StrictlyDecreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(4)' new Foo1(3)' new Foo1(2)' new Foo1(1) }' SortOrder.StrictlyDecreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(4)' new Foo1(3)' new Foo1(2)' new Foo1(1) }' SortOrder.StrictlyDecreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(4)' new Foo1(3)' new Foo1(2)' new Foo1(1) }' SortOrder.StrictlyDecreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(2)' new Foo2(3) }' SortOrder.Increasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(2)' new Foo2(3) }' SortOrder.Increasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(2)' new Foo2(3) }' SortOrder.Increasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(3)' new Foo2(4) }' SortOrder.Increasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(3)' new Foo2(4) }' SortOrder.Increasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(3)' new Foo2(4) }' SortOrder.Increasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(4)' new Foo2(3)' new Foo2(2)' new Foo2(1) }' SortOrder.Increasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(4)' new Foo2(3)' new Foo2(2)' new Foo2(1) }' SortOrder.Increasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(4)' new Foo2(3)' new Foo2(2)' new Foo2(1) }' SortOrder.Increasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(2)' new Foo2(3) }' SortOrder.StrictlyIncreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(2)' new Foo2(3) }' SortOrder.StrictlyIncreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(2)' new Foo2(3) }' SortOrder.StrictlyIncreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(3)' new Foo2(4) }' SortOrder.StrictlyIncreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(3)' new Foo2(4) }' SortOrder.StrictlyIncreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(3)' new Foo2(4) }' SortOrder.StrictlyIncreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(3)' new Foo2(2)' new Foo2(2)' new Foo2(1) }' SortOrder.Decreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(3)' new Foo2(2)' new Foo2(2)' new Foo2(1) }' SortOrder.Decreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(3)' new Foo2(2)' new Foo2(2)' new Foo2(1) }' SortOrder.Decreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(4)' new Foo2(3)' new Foo2(2)' new Foo2(1) }' SortOrder.Decreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(4)' new Foo2(3)' new Foo2(2)' new Foo2(1) }' SortOrder.Decreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(4)' new Foo2(3)' new Foo2(2)' new Foo2(1) }' SortOrder.Decreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(3)' new Foo2(4) }' SortOrder.Decreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(3)' new Foo2(4) }' SortOrder.Decreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(3)' new Foo2(4) }' SortOrder.Decreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(3)' new Foo2(2)' new Foo2(2)' new Foo2(1) }' SortOrder.StrictlyDecreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(3)' new Foo2(2)' new Foo2(2)' new Foo2(1) }' SortOrder.StrictlyDecreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(3)' new Foo2(2)' new Foo2(2)' new Foo2(1) }' SortOrder.StrictlyDecreasing' ExpectedResult.Unsorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(4)' new Foo2(3)' new Foo2(2)' new Foo2(1) }' SortOrder.StrictlyDecreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(4)' new Foo2(3)' new Foo2(2)' new Foo2(1) }' SortOrder.StrictlyDecreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(4)' new Foo2(3)' new Foo2(2)' new Foo2(1) }' SortOrder.StrictlyDecreasing' ExpectedResult.Sorted };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo3)' new Foo3[] { new Foo3(1)' new Foo3(2)' new Foo3(2)' new Foo3(3) }' SortOrder.Increasing' ExpectedResult.Uncomparable };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo3)' new Foo3[] { new Foo3(1)' new Foo3(2)' new Foo3(2)' new Foo3(3) }' SortOrder.Increasing' ExpectedResult.Uncomparable };
Magic Number,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,ProvideSortedTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo3)' new Foo3[] { new Foo3(1)' new Foo3(2)' new Foo3(2)' new Foo3(3) }' SortOrder.Increasing' ExpectedResult.Uncomparable };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 1' 2' 3 }' 0 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 1' 2' 3 }' 0 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 1' 2' 2 }' 1 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 1' 2' 2 }' 1 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 2' 1' 2' 2' 2' 2' 2' 2 }' 1 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 2' 1' 2' 2' 2' 2' 2' 2 }' 1 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 2' 1' 2' 2' 2' 2' 2' 2 }' 1 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 2' 1' 2' 2' 2' 2' 2' 2 }' 1 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 2' 1' 2' 2' 2' 2' 2' 2 }' 1 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 2' 1' 2' 2' 2' 2' 2' 2 }' 1 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 2' 1' 2' 2' 2' 2' 2' 2 }' 1 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 2' 1' 4' 2' 3' 2' 2' 3 }' 2 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 2' 1' 4' 2' 3' 2' 2' 3 }' 2 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 2' 1' 4' 2' 3' 2' 2' 3 }' 2 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 2' 1' 4' 2' 3' 2' 2' 3 }' 2 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 2' 1' 4' 2' 3' 2' 2' 3 }' 2 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 2' 1' 4' 2' 3' 2' 2' 3 }' 2 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 2' 1' 4' 2' 3' 2' 2' 3 }' 2 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(int)' new int[] { 2' 1' 4' 2' 3' 2' 2' 3 }' 2 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(string)' new string[] { "1"' "2"' "2"' "3"' "2"' "3" }' 2 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(string)' new string[] { "1"' "2"' "4"' "2"' "3"' "2"' "3"' "4" }' 3 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(3) }' 0 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(3) }' 0 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(2) }' 1 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(2) }' 1 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(2)' new Foo1(1) }' 2 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(2)' new Foo1(1) }' 2 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo1)' new Foo1[] { new Foo1(1)' new Foo1(2)' new Foo1(2)' new Foo1(1) }' 2 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(3) }' 0 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(3) }' 0 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(2) }' 1 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(2)' new Foo2(2) }' 1 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(3)' new Foo2(2)' new Foo2(2)' new Foo2(2)' new Foo2(3) }' 2 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(3)' new Foo2(2)' new Foo2(2)' new Foo2(2)' new Foo2(3) }' 2 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(3)' new Foo2(2)' new Foo2(2)' new Foo2(2)' new Foo2(3) }' 2 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(3)' new Foo2(2)' new Foo2(2)' new Foo2(2)' new Foo2(3) }' 2 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(3)' new Foo2(2)' new Foo2(2)' new Foo2(2)' new Foo2(3) }' 2 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo2)' new Foo2[] { new Foo2(1)' new Foo2(3)' new Foo2(2)' new Foo2(2)' new Foo2(2)' new Foo2(3) }' 2 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo3)' new Foo3[] { new Foo3(1)' new Foo3(2)' new Foo3(3) }' 0 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo3)' new Foo3[] { new Foo3(1)' new Foo3(2)' new Foo3(3) }' 0 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo3)' new Foo3[] { new Foo3(1)' new Foo3(2)' new Foo3(2) }' 0 };
Magic Number,MbUnit.Tests.Framework,AssertTest_Distinct,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Distinct.cs,ProvideTestData,The following statement contains a magic number: yield return new object[] { typeof(Foo3)' new Foo3[] { new Foo3(1)' new Foo3(2)' new Foo3(2) }' 0 };
Magic Number,MbUnit.Tests.Framework,RecordingSample,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AutoEmbedRecordingAttributeTest.cs,Triggered,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,MbUnit.Tests.Framework,NonComparableStubSample,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ComparerAttributeTest.cs,Test,The following statement contains a magic number: var stub1 = new NonComparableStub(123);
Magic Number,MbUnit.Tests.Framework,NonComparableStubSample,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ComparerAttributeTest.cs,Test,The following statement contains a magic number: var stub2 = new NonComparableStub(456);
Magic Number,MbUnit.Tests.Framework,FormatterAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\FormatterAttributeTest.cs,Run,The following statement contains a magic number: var stub = new FormattableStub(123);
Magic Number,MbUnit.Tests.Framework,RandomStringsAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RandomStringsAttributeTest.cs,GenerateRandomValuesFromRegularExpression,The following statement contains a magic number: Assert.Count(100' values);
Magic Number,MbUnit.Tests.Framework,RandomStringsAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RandomStringsAttributeTest.cs,GenerateFilteredRandomValuesFromRegularExpression,The following statement contains a magic number: Assert.Count(100' values);
Magic Number,MbUnit.Tests.Framework,RandomNumbersAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RandomNumbersAttributeTest.cs,GenerateRandomFilteredValues,The following statement contains a magic number: Assert.Count(500' values);
Magic Number,MbUnit.Tests.Framework,RandomNumbersAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RandomNumbersAttributeTest.cs,GenerateRandomFilteredValues,The following statement contains a magic number: Assert.Multiple(() =>              {                  foreach (decimal value in values)                  {                      Assert.AreEqual(0' ((int)value) % 2);                  }              });
Magic Number,MbUnit.Tests.Framework,RandomNumbersSample,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\RandomNumbersAttributeTest.cs,IsOdd,The following statement contains a magic number: return 0 == n % 2;
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,Compare_Int32_parity,The following statement contains a magic number: var comparer = new StructuralEqualityComparer<int>              {                  { x => x % 2' (x' y) => x == y }              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,Compare_String_length_and_first_characters,The following statement contains a magic number: var comparer = new StructuralEqualityComparer<string>              {                  { x => x.Length' (x' y) => x == y }'                  { x => x.Substring(0' 3)' (x' y) => String.Compare(x' y' true) == 0 }              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 123' Text = "HELLO"' Duration = TimeSpan.FromMinutes(600) }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 123' Text = "HELLO"' Duration = TimeSpan.FromMinutes(600) }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 123' Text = "HELLO"' Duration = TimeSpan.FromMinutes(600) }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 123' Text = "HELLO"' Duration = TimeSpan.FromMinutes(600) }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(630) }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(630) }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(630) }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(630) }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 456' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 456' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 456' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 456' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 123' Text = "abcde"' Duration = TimeSpan.FromMinutes(600) }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 123' Text = "abcde"' Duration = TimeSpan.FromMinutes(600) }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 123' Text = "abcde"' Duration = TimeSpan.FromMinutes(600) }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 123' Text = "abcde"' Duration = TimeSpan.FromMinutes(600) }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(661) }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(661) }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(661) }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData1,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) }'                  new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(661) }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,Compare_null_references,The following statement contains a magic number: var foo = new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,Compare_null_references,The following statement contains a magic number: var foo = new Foo() { Number = 123' Text = "Hello"' Duration = TimeSpan.FromMinutes(600) };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 99' 4' 5} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 99' 4' 5} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 99' 4' 5} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 99' 4' 5} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 99' 4' 5} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 99' 4' 5} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 99' 4' 5} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 99' 4' 5} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 99' 4' 5} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 99' 4' 5} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData2,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 3' 2' 4' 5' 1} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 3' 2' 4' 5' 1} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 3' 2' 4' 5' 1} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 3' 2' 4' 5' 1} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 3' 2' 4' 5' 1} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 3' 2' 4' 5' 1} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 3' 2' 4' 5' 1} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 3' 2' 4' 5' 1} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 3' 2' 4' 5' 1} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  new Foo() { Number = 123' Values = new int[] { 3' 2' 4' 5' 1} }'                  true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData3,The following statement contains a magic number: yield return new object[]               {                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5' 6} }'                  new Foo() { Number = 123' Values = new int[] { 1' 2' 3' 4' 5} }'                  false              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    true              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 252'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 252'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 252'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 252'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 252'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 252'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 252'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 252'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 252'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 252'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 252'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 252'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 252'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 252'                       Text = "HELLO"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 2' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "Hello!"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "Hello!"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "Hello!"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "Hello!"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "Hello!"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "Hello!"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "Hello!"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "Hello!"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "Hello!"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "Hello!"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "Hello!"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "Hello!"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "Hello!"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The following statement contains a magic number: yield return new object[]               {                  new Foo()                   {                       Number = 123'                       Text = "Hello"'                       Values = new int[] { 1' 2' 3' 4' 5 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 1' Name = "ABC" }'                          new ChildFoo() { Tag = 2' Name = "DEF" }'                          new ChildFoo() { Tag = 3' Name = "GHI" }                      }                  }'                                    new Foo()                   {                       Number = 321'                       Text = "Hello!"'                       Values = new int[] { 5' 4' 3' 2' 1 } '                      Children = new[]                       {                           new ChildFoo() { Tag = 3' Name = "JKL" }'                          new ChildFoo() { Tag = 1' Name = "MNO" }'                          new ChildFoo() { Tag = 4' Name = "PQR" }                      }                  }'                    false'              };
Magic Number,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,Complex_comparers_with_nested_enumerations,The following statement contains a magic number: var comparer = new StructuralEqualityComparer<Foo>              {                  { x => x.Number % 2 }'                  { x => x.Text' (x' y) => String.Compare(x' y' true) == 0 }'                  { x => x.Values' StructuralEqualityComparer<int>.Default' StructuralEqualityComparerOptions.IgnoreEnumerableOrder }'                  { x => x.Children' new StructuralEqualityComparer<ChildFoo> { { x => x.Tag } }' StructuralEqualityComparerOptions.IgnoreEnumerableOrder }              };
Magic Number,MbUnit.Tests.Framework,TimeoutAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\TimeoutAttributeTest.cs,TimeoutIsEvaluatedInSeconds,The following statement contains a magic number: var attrib = new TimeoutAttribute(120);
Magic Number,MbUnit.Tests.Framework,TimeoutAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\TimeoutAttributeTest.cs,TimeoutIsEvaluatedInSeconds,The following statement contains a magic number: Assert.AreEqual(120' attrib.TimeoutSeconds);
Magic Number,MbUnit.Tests.Framework,TimeoutAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\TimeoutAttributeTest.cs,TimeoutIsEvaluatedInSeconds,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(120)' attrib.Timeout);
Magic Number,MbUnit.Tests.Framework,CsvDataTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\CsvDataTest.cs,Metadata,The following statement contains a magic number: Assert.AreEqual(@"..\Framework\CsvDataTest.csv(4)"' run.Children[2].Step.Metadata.GetValue(MetadataKeys.DataLocation));
Magic Number,MbUnit.Tests.Framework,CsvDataTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\CsvDataTest.cs,Metadata,The following statement contains a magic number: Assert.AreEqual(@"Cookie Monster"' run.Children[2].Step.Metadata.GetValue("ConsumedBy"));
Magic Number,MbUnit.Tests.Framework,DefaultTestCaseTimeoutAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DefaultTestCaseTimeoutAttributeTest.cs,AttributeShouldSetExecutionParameterAtRuntime,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromMinutes(9)' TestAssemblyExecutionParameters.DefaultTestCaseTimeout);
Magic Number,MbUnit.Tests.Framework,DefaultTestCaseTimeoutAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DefaultTestCaseTimeoutAttributeTest.cs,TimeoutIsEvaluatedInSeconds,The following statement contains a magic number: var attrib = new DefaultTestCaseTimeoutAttribute(120);
Magic Number,MbUnit.Tests.Framework,DefaultTestCaseTimeoutAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DefaultTestCaseTimeoutAttributeTest.cs,TimeoutIsEvaluatedInSeconds,The following statement contains a magic number: Assert.AreEqual(120' attrib.TimeoutSeconds);
Magic Number,MbUnit.Tests.Framework,DefaultTestCaseTimeoutAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DefaultTestCaseTimeoutAttributeTest.cs,TimeoutIsEvaluatedInSeconds,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(120)' attrib.Timeout);
Magic Number,MbUnit.Tests.Framework,DegreeOfParallelismAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DegreeOfParallelismAttributeTest.cs,AttributeShouldSetExecutionParameterAtRuntime,The following statement contains a magic number: Assert.AreEqual(3' TestAssemblyExecutionParameters.DegreeOfParallelism);
Magic Number,MbUnit.Tests.Framework,DegreeOfParallelismAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DegreeOfParallelismAttributeTest.cs,ConstructorSetsField,The following statement contains a magic number: attrib = new DegreeOfParallelismAttribute(5);
Magic Number,MbUnit.Tests.Framework,DegreeOfParallelismAttributeTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\DegreeOfParallelismAttributeTest.cs,ConstructorSetsField,The following statement contains a magic number: Assert.AreEqual(5' attrib.DegreeOfParallelism);
Magic Number,MbUnit.Tests.Framework,XmlDataTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\XmlDataTest.cs,Metadata,The following statement contains a magic number: Assert.AreEqual(@"..\Framework\XmlDataTest.xml"' run.Children[2].Step.Metadata.GetValue(MetadataKeys.DataLocation));
Magic Number,MbUnit.Tests.Framework,XmlDataTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\XmlDataTest.cs,Metadata,The following statement contains a magic number: Assert.AreEqual(@"Cookie Monster"' run.Children[2].Step.Metadata.GetValue("ConsumedBy"));
Magic Number,MbUnit.Tests.Framework,ParallelizableTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ParallelizableTest.cs,IncreaseDegreeOfParallelism,The following statement contains a magic number: TestAssemblyExecutionParameters.DegreeOfParallelism = 16;
Magic Number,MbUnit.Tests.Framework,Tests,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ParallelizableTest.cs,DecrementAndWriteCounterOnExit,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,MbUnit.Tests.Framework,TestSuiteTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\TestSuiteTest.cs,TimeoutMustBeNullOrPositive,The following statement contains a magic number: testSuite.Timeout = TimeSpan.FromSeconds(5);
Magic Number,MbUnit.Tests.Framework,TestSuiteTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\TestSuiteTest.cs,TimeoutMustBeNullOrPositive,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(5)' testSuite.Timeout);
Magic Number,MbUnit.Tests.Framework,TestSuiteTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\TestSuiteTest.cs,DynamicRun,The following statement contains a magic number: Assert.Count(3' suiteRun.Children);
Magic Number,MbUnit.Tests.Framework,TestSuiteTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\TestSuiteTest.cs,DynamicRun,The following statement contains a magic number: TestStepRun test2Run = suiteRun.Children[2];
Magic Number,MbUnit.Tests.Framework,TestSuiteTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\TestSuiteTest.cs,StaticRun,The following statement contains a magic number: Assert.Count(3' suiteData.Children);
Magic Number,MbUnit.Tests.Framework,TestSuiteTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\TestSuiteTest.cs,StaticRun,The following statement contains a magic number: TestData test2Data = suiteData.Children[2];
Magic Number,MbUnit.Tests.Framework,TestSuiteTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\TestSuiteTest.cs,StaticRun,The following statement contains a magic number: Assert.Count(3' suiteRun.Children);
Magic Number,MbUnit.Tests.Framework,TestSuiteTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\TestSuiteTest.cs,StaticRun,The following statement contains a magic number: TestStepRun test2Run = suiteRun.Children[2];
Magic Number,MbUnit.Tests.Framework,TestCaseTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\TestCaseTest.cs,TimeoutMustBeNullOrPositive,The following statement contains a magic number: testCase.Timeout = TimeSpan.FromSeconds(5);
Magic Number,MbUnit.Tests.Framework,TestCaseTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\TestCaseTest.cs,TimeoutMustBeNullOrPositive,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(5)' testCase.Timeout);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreResultTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreResultTest.cs,Constructs_ok,The following statement contains a magic number: var result = new HashStoreResult(123' 456d' 789d);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreResultTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreResultTest.cs,Constructs_ok,The following statement contains a magic number: var result = new HashStoreResult(123' 456d' 789d);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreResultTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreResultTest.cs,Constructs_ok,The following statement contains a magic number: var result = new HashStoreResult(123' 456d' 789d);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreResultTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreResultTest.cs,Constructs_ok,The following statement contains a magic number: Assert.AreEqual(123' result.StatisticalPopulation);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreResultTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreResultTest.cs,Constructs_ok,The following statement contains a magic number: Assert.AreEqual(456d' result.CollisionProbability);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreResultTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreResultTest.cs,Constructs_ok,The following statement contains a magic number: Assert.AreEqual(789d' result.UniformDistributionDeviationProbability);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreTest.cs,AddHashCodes,The following statement contains a magic number: var store = new HashStore(new[] { 123' 456' 123' 456' 789' 123' 123 });
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreTest.cs,AddHashCodes,The following statement contains a magic number: var store = new HashStore(new[] { 123' 456' 123' 456' 789' 123' 123 });
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreTest.cs,AddHashCodes,The following statement contains a magic number: var store = new HashStore(new[] { 123' 456' 123' 456' 789' 123' 123 });
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreTest.cs,AddHashCodes,The following statement contains a magic number: var store = new HashStore(new[] { 123' 456' 123' 456' 789' 123' 123 });
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreTest.cs,AddHashCodes,The following statement contains a magic number: var store = new HashStore(new[] { 123' 456' 123' 456' 789' 123' 123 });
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreTest.cs,AddHashCodes,The following statement contains a magic number: var store = new HashStore(new[] { 123' 456' 123' 456' 789' 123' 123 });
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreTest.cs,AddHashCodes,The following statement contains a magic number: var store = new HashStore(new[] { 123' 456' 123' 456' 789' 123' 123 });
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreTest.cs,AddHashCodes,The following statement contains a magic number: Assert.AreEqual(7' store.Result.StatisticalPopulation);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreTest.cs,AddHashCodes,The following statement contains a magic number: Assert.AreEqual(4' store[123]);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreTest.cs,AddHashCodes,The following statement contains a magic number: Assert.AreEqual(4' store[123]);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreTest.cs,AddHashCodes,The following statement contains a magic number: Assert.AreEqual(2' store[456]);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreTest.cs,AddHashCodes,The following statement contains a magic number: Assert.AreEqual(2' store[456]);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreTest.cs,AddHashCodes,The following statement contains a magic number: Assert.AreEqual(1' store[789]);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreTest.cs,AddHashCodes,The following statement contains a magic number: Assert.AreEqual(0' store[666]);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreTest.cs,CalculateCollisionProbability,The following statement contains a magic number: Assert.AreApproximatelyEqual(expectedProbability' actualProbability' 0.0001);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreTest.cs,CalculateCollisionProbabilityWithHighLoad,The following statement contains a magic number: var store = new HashStore(GenerateHashLoad(Enumerable.Range(0' 10000)' 5000));
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreTest.cs,CalculateCollisionProbabilityWithHighLoad,The following statement contains a magic number: var store = new HashStore(GenerateHashLoad(Enumerable.Range(0' 10000)' 5000));
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreTest.cs,CalculateCollisionProbabilityWithHighLoad,The following statement contains a magic number: Assert.AreApproximatelyEqual(9.998E-5' actualProbability' 1E-5);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreTest.cs,CalculateCollisionProbabilityWithHighLoad,The following statement contains a magic number: Assert.AreApproximatelyEqual(9.998E-5' actualProbability' 1E-5);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers.Core,HashStoreTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\Core\HashStoreTest.cs,DistributionDeviationProbability,The following statement contains a magic number: Assert.AreApproximatelyEqual(expectedProbability' actual' 0.000001);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,EquivalenceClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\EquivalenceClassCollectionTest.cs,ConstructWithListInitializer,The following statement contains a magic number: var collection = new EquivalenceClassCollection              {                  {1' "2"' 3}'                  {4' 5d' "6"' 7}'                  {8' 9m}              };
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,EquivalenceClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\EquivalenceClassCollectionTest.cs,ConstructWithListInitializer,The following statement contains a magic number: var collection = new EquivalenceClassCollection              {                  {1' "2"' 3}'                  {4' 5d' "6"' 7}'                  {8' 9m}              };
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,EquivalenceClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\EquivalenceClassCollectionTest.cs,ConstructWithListInitializer,The following statement contains a magic number: var collection = new EquivalenceClassCollection              {                  {1' "2"' 3}'                  {4' 5d' "6"' 7}'                  {8' 9m}              };
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,EquivalenceClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\EquivalenceClassCollectionTest.cs,ConstructWithListInitializer,The following statement contains a magic number: var collection = new EquivalenceClassCollection              {                  {1' "2"' 3}'                  {4' 5d' "6"' 7}'                  {8' 9m}              };
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,EquivalenceClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\EquivalenceClassCollectionTest.cs,ConstructWithListInitializer,The following statement contains a magic number: var collection = new EquivalenceClassCollection              {                  {1' "2"' 3}'                  {4' 5d' "6"' 7}'                  {8' 9m}              };
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,EquivalenceClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\EquivalenceClassCollectionTest.cs,ConstructWithListInitializer,The following statement contains a magic number: var collection = new EquivalenceClassCollection              {                  {1' "2"' 3}'                  {4' 5d' "6"' 7}'                  {8' 9m}              };
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,EquivalenceClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\EquivalenceClassCollectionTest.cs,ConstructWithListInitializer,The following statement contains a magic number: Assert.Count(3' collection);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,EquivalenceClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\EquivalenceClassCollectionTest.cs,ConstructWithListInitializer,The following statement contains a magic number: Assert.AreElementsEqual(new object[] { 1' "2"' 3 }' collection[0].Cast<object>());
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,EquivalenceClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\EquivalenceClassCollectionTest.cs,ConstructWithListInitializer,The following statement contains a magic number: Assert.AreElementsEqual(new object[] { 4' 5d' "6"' 7 }' collection[1].Cast<object>());
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,EquivalenceClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\EquivalenceClassCollectionTest.cs,ConstructWithListInitializer,The following statement contains a magic number: Assert.AreElementsEqual(new object[] { 4' 5d' "6"' 7 }' collection[1].Cast<object>());
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,EquivalenceClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\EquivalenceClassCollectionTest.cs,ConstructWithListInitializer,The following statement contains a magic number: Assert.AreElementsEqual(new object[] { 4' 5d' "6"' 7 }' collection[1].Cast<object>());
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,EquivalenceClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\EquivalenceClassCollectionTest.cs,ConstructWithListInitializer,The following statement contains a magic number: Assert.AreElementsEqual(new object[] { 8' 9m }' collection[2].Cast<object>());
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,EquivalenceClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\EquivalenceClassCollectionTest.cs,ConstructWithListInitializer,The following statement contains a magic number: Assert.AreElementsEqual(new object[] { 8' 9m }' collection[2].Cast<object>());
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,EquivalenceClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\EquivalenceClassCollectionTest.cs,ConstructWithListInitializer,The following statement contains a magic number: Assert.AreElementsEqual(new object[] { 8' 9m }' collection[2].Cast<object>());
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,EquivalenceClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\EquivalenceClassCollectionTest.cs,ConstructWithParameter,The following statement contains a magic number: var collection = new EquivalenceClassCollection(new object[] { 1' "2"' 3d });
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,EquivalenceClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\EquivalenceClassCollectionTest.cs,ConstructWithParameter,The following statement contains a magic number: Assert.Count(3' collection);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,EquivalenceClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\EquivalenceClassCollectionTest.cs,ConstructWithParameter,The following statement contains a magic number: Assert.AreElementsEqual(new object[] { 3d }' collection[2].Cast<object>());
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,EquivalenceClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\EquivalenceClassCollectionTest.cs,ConstructWithParameter,The following statement contains a magic number: Assert.AreElementsEqual(new object[] { 3d }' collection[2].Cast<object>());
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassCollectionTest.cs,Adds_null_exception_type_should_throw_exception,The following statement contains a magic number: collection.Add(null' 1' 2' 3);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassCollectionTest.cs,Adds_null_exception_type_should_throw_exception,The following statement contains a magic number: collection.Add(null' 1' 2' 3);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassCollectionTest.cs,Adds_several_times_classes_arguments_associated_with_same_exception_type_should_throw_exception,The following statement contains a magic number: collection.Add(typeof(ArgumentOutOfRangeException)' 1' 2' 3);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassCollectionTest.cs,Adds_several_times_classes_arguments_associated_with_same_exception_type_should_throw_exception,The following statement contains a magic number: collection.Add(typeof(ArgumentOutOfRangeException)' 1' 2' 3);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassCollectionTest.cs,Adds_several_times_classes_arguments_associated_with_same_exception_type_should_throw_exception,The following statement contains a magic number: collection.Add(typeof(ArgumentOutOfRangeException)' 4' 5' 6);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassCollectionTest.cs,Adds_several_times_classes_arguments_associated_with_same_exception_type_should_throw_exception,The following statement contains a magic number: collection.Add(typeof(ArgumentOutOfRangeException)' 4' 5' 6);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassCollectionTest.cs,Adds_several_times_classes_arguments_associated_with_same_exception_type_should_throw_exception,The following statement contains a magic number: collection.Add(typeof(ArgumentOutOfRangeException)' 4' 5' 6);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassCollectionTest.cs,Adds_classes_Ok,The following statement contains a magic number: collection.Add(typeof(ArgumentOutOfRangeException)' 1' 2' 3);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassCollectionTest.cs,Adds_classes_Ok,The following statement contains a magic number: collection.Add(typeof(ArgumentOutOfRangeException)' 1' 2' 3);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassCollectionTest.cs,Adds_classes_Ok,The following statement contains a magic number: collection.Add(new InvalidValuesClass<int>(typeof(ArgumentException)) { 4' 5' 6 });
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassCollectionTest.cs,Adds_classes_Ok,The following statement contains a magic number: collection.Add(new InvalidValuesClass<int>(typeof(ArgumentException)) { 4' 5' 6 });
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassCollectionTest.cs,Adds_classes_Ok,The following statement contains a magic number: collection.Add(new InvalidValuesClass<int>(typeof(ArgumentException)) { 4' 5' 6 });
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassCollectionTest.cs,Adds_classes_Ok,The following statement contains a magic number: collection.Add(typeof(InvalidOperationException)' 7' 8' 9);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassCollectionTest.cs,Adds_classes_Ok,The following statement contains a magic number: collection.Add(typeof(InvalidOperationException)' 7' 8' 9);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassCollectionTest.cs,Adds_classes_Ok,The following statement contains a magic number: collection.Add(typeof(InvalidOperationException)' 7' 8' 9);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassCollectionTest.cs,Adds_classes_Ok,The following statement contains a magic number: Assert.Count(3' collection);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassTest.cs,Constructs_with_initializer_and_null_exception_type_should_throw_exception,The following statement contains a magic number: new InvalidValuesClass<int>(null' new[] { 123' 456 });
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassTest.cs,Constructs_with_initializer_and_null_exception_type_should_throw_exception,The following statement contains a magic number: new InvalidValuesClass<int>(null' new[] { 123' 456 });
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassTest.cs,Constructs_with_initializer_and_invalid_exception_type_should_throw_exception,The following statement contains a magic number: new InvalidValuesClass<int>(typeof(MyErroneousException)' new[] { 123' 456 });
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassTest.cs,Constructs_with_initializer_and_invalid_exception_type_should_throw_exception,The following statement contains a magic number: new InvalidValuesClass<int>(typeof(MyErroneousException)' new[] { 123' 456 });
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassTest.cs,Adds_doublet_value_type_should_throw_exception,The following statement contains a magic number: collection.Add(123);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassTest.cs,Adds_doublet_value_type_should_throw_exception,The following statement contains a magic number: collection.Add(123);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassTest.cs,Populates_explicitely_the_collection_ok,The following statement contains a magic number: collection.Add(123);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassTest.cs,Populates_explicitely_the_collection_ok,The following statement contains a magic number: collection.Add(456);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassTest.cs,Populates_explicitely_the_collection_ok,The following statement contains a magic number: collection.Add(789);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassTest.cs,Populates_explicitely_the_collection_ok,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[] { 123' 456' 789 }' collection);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassTest.cs,Populates_explicitely_the_collection_ok,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[] { 123' 456' 789 }' collection);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassTest.cs,Populates_explicitely_the_collection_ok,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[] { 123' 456' 789 }' collection);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassTest.cs,Populates_within_constructor_ok,The following statement contains a magic number: var collection = new InvalidValuesClass<int>(typeof(ArgumentException)' new[] { 123' 456' 789 });
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassTest.cs,Populates_within_constructor_ok,The following statement contains a magic number: var collection = new InvalidValuesClass<int>(typeof(ArgumentException)' new[] { 123' 456' 789 });
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassTest.cs,Populates_within_constructor_ok,The following statement contains a magic number: var collection = new InvalidValuesClass<int>(typeof(ArgumentException)' new[] { 123' 456' 789 });
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassTest.cs,Populates_within_constructor_ok,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[] { 123' 456' 789 }' collection);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassTest.cs,Populates_within_constructor_ok,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[] { 123' 456' 789 }' collection);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,InvalidValuesClassTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\InvalidValuesClassTest.cs,Populates_within_constructor_ok,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[] { 123' 456' 789 }' collection);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,DistinctInstanceCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\DistinctInstanceCollectionTest.cs,AddsDoubletValueTypeShouldThrowException,The following statement contains a magic number: collection.Add(123);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,DistinctInstanceCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\DistinctInstanceCollectionTest.cs,AddsDoubletValueTypeShouldThrowException,The following statement contains a magic number: collection.Add(123);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,DistinctInstanceCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\DistinctInstanceCollectionTest.cs,PopulatesExplicitelyTheCollection,The following statement contains a magic number: collection.Add(123);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,DistinctInstanceCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\DistinctInstanceCollectionTest.cs,PopulatesExplicitelyTheCollection,The following statement contains a magic number: collection.Add(456);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,DistinctInstanceCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\DistinctInstanceCollectionTest.cs,PopulatesExplicitelyTheCollection,The following statement contains a magic number: collection.Add(789);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,DistinctInstanceCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\DistinctInstanceCollectionTest.cs,PopulatesExplicitelyTheCollection,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[] { 123' 456' 789 }' collection);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,DistinctInstanceCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\DistinctInstanceCollectionTest.cs,PopulatesExplicitelyTheCollection,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[] { 123' 456' 789 }' collection);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,DistinctInstanceCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\DistinctInstanceCollectionTest.cs,PopulatesExplicitelyTheCollection,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[] { 123' 456' 789 }' collection);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,DistinctInstanceCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\DistinctInstanceCollectionTest.cs,PopulatesWithListInitializerSyntax,The following statement contains a magic number: var collection = new DistinctInstanceCollection<int> { 123' 456' 789 };
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,DistinctInstanceCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\DistinctInstanceCollectionTest.cs,PopulatesWithListInitializerSyntax,The following statement contains a magic number: var collection = new DistinctInstanceCollection<int> { 123' 456' 789 };
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,DistinctInstanceCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\DistinctInstanceCollectionTest.cs,PopulatesWithListInitializerSyntax,The following statement contains a magic number: var collection = new DistinctInstanceCollection<int> { 123' 456' 789 };
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,DistinctInstanceCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\DistinctInstanceCollectionTest.cs,PopulatesWithListInitializerSyntax,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[] { 123' 456' 789 }' collection);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,DistinctInstanceCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\DistinctInstanceCollectionTest.cs,PopulatesWithListInitializerSyntax,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[] { 123' 456' 789 }' collection);
Magic Number,MbUnit.Tests.Framework.ContractVerifiers,DistinctInstanceCollectionTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\ContractVerifiers\DistinctInstanceCollectionTest.cs,PopulatesWithListInitializerSyntax,The following statement contains a magic number: Assert.AreElementsEqualIgnoringOrder(new[] { 123' 456' 789 }' collection);
Magic Number,MbUnit.Tests.Model,MbUnitTestFrameworkTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Model\MbUnitTestFrameworkTest.cs,PopulateTestTree_WhenAssemblyReferencesMbUnit_ContainsSimpleTest,The following statement contains a magic number: Assert.Count(2' typeTest.Children);
Duplicate Code,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The method contains a code clone-set at the following line numbers (starting from the method definition): ((2' 25)' (33' 56))
Duplicate Code,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The method contains a code clone-set at the following line numbers (starting from the method definition): ((31' 50)' (93' 112))
Duplicate Code,MbUnit.Tests.Framework,StructuralEqualityComparerTest,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\StructuralEqualityComparerTest.cs,ProvideTestData4,The method contains a code clone-set at the following line numbers (starting from the method definition): ((58' 80)' (89' 111))
Missing Default,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,Sorted_with_implicit_comparer,The following switch statement is missing a default case: switch (expectedResult)              {                  case ExpectedResult.Sorted:                      Assert.IsEmpty(failures);                      break;                                    case ExpectedResult.Unsorted:                      Assert.Count(1' failures);                      Assert.AreEqual("Expected the elements to be sorted in a specific order but the sequence of values mismatches at one position at least."' failures[0].Description);                      break;                                    case ExpectedResult.Uncomparable:                      Assert.Count(1' failures);                      Assert.AreEqual("Expected the elements to be sorted in a specific order but no implicit ordering comparison can be found for the subject type."' failures[0].Description);                      break;              }
Missing Default,MbUnit.Tests.Framework,AssertTest_Sorting,D:\research\architectureSmells\repos\Gallio_mbunit-v3\src\MbUnit\MbUnit.Tests\Framework\AssertTest_Sorting.cs,Sorted_with_explicit_comparer,The following switch statement is missing a default case: switch (expectedResult)              {                  case ExpectedResult.Sorted:                      Assert.IsEmpty(failures);                      break;                    case ExpectedResult.Unsorted:                      Assert.Count(1' failures);                      Assert.AreEqual("Expected the elements to be sorted in a specific order but the sequence of values mismatches at one position at least."' failures[0].Description);                      break;              }
