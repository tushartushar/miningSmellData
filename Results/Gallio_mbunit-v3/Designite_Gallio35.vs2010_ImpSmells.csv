Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Gallio.Common.Linq,Rewriter,C:\repos\Gallio_mbunit-v3\src\Gallio\Gallio35\Common\Linq\ExpressionInstrumentor.cs,RewriteExpression,The length of the statement  "                    "The rewritten expression node type '{0}' should equal the original expression node type '{1}'."' rewrittenExpr.NodeType' expr.NodeType)); " is 138.
Long Statement,Gallio.Runtime.Formatting,ExpressionFormatter,C:\repos\Gallio_mbunit-v3\src\Gallio\Gallio35\Runtime\Formatting\ExpressionFormattingRule.cs,AppendListInitializer,The length of the statement  "                            throw new NotImplementedException("Don't know how to handle case where multiple arguments are passed to a list initializer method."); " is 133.
Missing Default,Gallio.Common.Linq,Rewriter,C:\repos\Gallio_mbunit-v3\src\Gallio\Gallio35\Common\Linq\ExpressionInstrumentor.cs,RewriteBindings,The following switch statement is missing a default case: switch (binding.BindingType)                      {                          case MemberBindingType.Assignment:                              yield return Expression.Bind(binding.Member' RewriteExpression(((MemberAssignment)binding).Expression));                              break;                          case MemberBindingType.ListBinding:                              yield return Expression.ListBind(binding.Member' RewriteInitializers(((MemberListBinding)binding).Initializers));                              break;                          case MemberBindingType.MemberBinding:                              yield return Expression.MemberBind(binding.Member' RewriteBindings(((MemberMemberBinding)binding).Bindings));                              break;                      }
Missing Default,Gallio.Runtime.Formatting,ExpressionFormatter,C:\repos\Gallio_mbunit-v3\src\Gallio\Gallio35\Runtime\Formatting\ExpressionFormattingRule.cs,AppendObjectInitializer,The following switch statement is missing a default case: switch (binding.BindingType)                          {                              case MemberBindingType.Assignment:                                  Visit(((MemberAssignment)binding).Expression);                                  break;                                case MemberBindingType.ListBinding:                                  AppendListInitializer(((MemberListBinding)binding).Initializers);                                  break;                                case MemberBindingType.MemberBinding:                                  AppendObjectInitializer(((MemberMemberBinding)binding).Bindings);                                  break;                          }
