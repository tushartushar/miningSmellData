Implementation smell,Namespace,Class,File,Method,Description
Long Statement,SimpleChat.UI,LoginWindow,C:\repos\mitko100_CSharp\WebAPI\SimpleChat\SimpleChat.UI\LoginWindow.xaml.cs,buttonRegister_Click,The length of the statement  "		NetworkDriver.Register (this.textRegisterUsername.Text' this.passwordRegisterPass.Password' this.passwordRegisterConfirmPass.Password); " is 135.
Long Statement,SimpleChat.UI.Network,NetworkDriver,C:\repos\mitko100_CSharp\WebAPI\SimpleChat\SimpleChat.UI\Network\NetworkDriver.cs,ChangeUserStatus,The length of the statement  "	var response = client.PutAsync (CHANGE_USER_STATUS_END_POINT + string.Format ("?status={0}"' status.ToString ())' null).Result; " is 127.
Magic Number,SimpleChat.UI,MainWindow,C:\repos\mitko100_CSharp\WebAPI\SimpleChat\SimpleChat.UI\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Task.Factory.StartNew (() =>  {  	while (true) {  		System.Console.WriteLine ("Get Contacts Running...");  		var contacts = NetworkDriver.GetAllContacts ();  		foreach (var item in contacts) {  			var contact = (from c in this.listContactsViewModels  			where c.UserId == item.UserId  			select c).FirstOrDefault ();  			this.Dispatcher.Invoke (() =>  {  				if (contact != null) {  					contact.Status = item.Status;  					this.listContacts.Items.Refresh ();  					System.Console.WriteLine (contact.Status);  				}  				else {  					this.listContactsViewModels.Add (item);  				}  			});  		}  		Thread.Sleep (5000);  	}  });  
Magic Number,SimpleChat.UI,MainWindow,C:\repos\mitko100_CSharp\WebAPI\SimpleChat\SimpleChat.UI\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: while (true) {  	System.Console.WriteLine ("Get Contacts Running...");  	var contacts = NetworkDriver.GetAllContacts ();  	foreach (var item in contacts) {  		var contact = (from c in this.listContactsViewModels  		where c.UserId == item.UserId  		select c).FirstOrDefault ();  		this.Dispatcher.Invoke (() =>  {  			if (contact != null) {  				contact.Status = item.Status;  				this.listContacts.Items.Refresh ();  				System.Console.WriteLine (contact.Status);  			}  			else {  				this.listContactsViewModels.Add (item);  			}  		});  	}  	Thread.Sleep (5000);  }  
Magic Number,SimpleChat.UI,MainWindow,C:\repos\mitko100_CSharp\WebAPI\SimpleChat\SimpleChat.UI\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Thread.Sleep (5000);  
Magic Number,SimpleChat.UI,MainWindow,C:\repos\mitko100_CSharp\WebAPI\SimpleChat\SimpleChat.UI\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Task.Factory.StartNew (() =>  {  	while (true) {  		System.Console.WriteLine ("Message background service running...");  		var messages = NetworkDriver.GetNewMessages ();  		foreach (var msg in messages) {  			System.Console.WriteLine (string.Format ("{0} {1} {2}"' msg.ChatId' msg.Content' msg.MessageId));  			if (this.listChatWindows.Count > 0) {  				var window = this.listChatWindows [msg.ChatId];  				this.Dispatcher.Invoke (() =>  {  					if (!window.ListMessages.Any (x => x.MessageId == msg.MessageId)) {  						window.ListMessages.Add (msg);  						System.Console.WriteLine ("msg added " + msg.Content);  						if (msg.SenderId != NetworkDriver.LoggedUserId) {  							NetworkDriver.ChangeMessageStatus (msg.MessageId' Models.MessageStatus.Received);  							System.Console.WriteLine ("message status has been changed to received");  						}  					}  				});  			}  			else {  				var contact = this.listContactsViewModels.FirstOrDefault (x => x.UserId == msg.SenderId);  				//there aren't open chat window  				this.Dispatcher.Invoke (() =>  {  					if (contact != null) {  						contact.VisibleString = "Visible";  						this.listContacts.Items.Refresh ();  					}  				});  			}  		}  		Thread.Sleep (3000);  	}  });  
Magic Number,SimpleChat.UI,MainWindow,C:\repos\mitko100_CSharp\WebAPI\SimpleChat\SimpleChat.UI\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: while (true) {  	System.Console.WriteLine ("Message background service running...");  	var messages = NetworkDriver.GetNewMessages ();  	foreach (var msg in messages) {  		System.Console.WriteLine (string.Format ("{0} {1} {2}"' msg.ChatId' msg.Content' msg.MessageId));  		if (this.listChatWindows.Count > 0) {  			var window = this.listChatWindows [msg.ChatId];  			this.Dispatcher.Invoke (() =>  {  				if (!window.ListMessages.Any (x => x.MessageId == msg.MessageId)) {  					window.ListMessages.Add (msg);  					System.Console.WriteLine ("msg added " + msg.Content);  					if (msg.SenderId != NetworkDriver.LoggedUserId) {  						NetworkDriver.ChangeMessageStatus (msg.MessageId' Models.MessageStatus.Received);  						System.Console.WriteLine ("message status has been changed to received");  					}  				}  			});  		}  		else {  			var contact = this.listContactsViewModels.FirstOrDefault (x => x.UserId == msg.SenderId);  			//there aren't open chat window  			this.Dispatcher.Invoke (() =>  {  				if (contact != null) {  					contact.VisibleString = "Visible";  					this.listContacts.Items.Refresh ();  				}  			});  		}  	}  	Thread.Sleep (3000);  }  
Magic Number,SimpleChat.UI,MainWindow,C:\repos\mitko100_CSharp\WebAPI\SimpleChat\SimpleChat.UI\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Thread.Sleep (3000);  
