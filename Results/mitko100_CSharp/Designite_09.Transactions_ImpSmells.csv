Implementation smell,Namespace,Class,File,Method,Description
Magic Number,_09.Transactions,Program,C:\repos\mitko100_CSharp\Databases\06.Entity Framework\09.Transactions\Program.cs,Main,The following statement contains a magic number: using (entities) {  	using (var dbContextTransaction = entities.Database.BeginTransaction ()) {  		try {  			Order order = new Order ();  			order.CustomerID = "Mitko";  			order.EmployeeID = 4;  			entities.Orders.Add (order);  			entities.SaveChanges ();  			Order retrievedOrder = entities.Orders.Where (o => o.CustomerID == "MITKO" && o.EmployeeID == 4).FirstOrDefault ();  			Console.WriteLine (retrievedOrder.CustomerID);  			dbContextTransaction.Commit ();  		}  		catch (Exception e) {  			Console.WriteLine (e.Message);  			dbContextTransaction.Rollback ();  		}  	}  }  
Magic Number,_09.Transactions,Program,C:\repos\mitko100_CSharp\Databases\06.Entity Framework\09.Transactions\Program.cs,Main,The following statement contains a magic number: using (entities) {  	using (var dbContextTransaction = entities.Database.BeginTransaction ()) {  		try {  			Order order = new Order ();  			order.CustomerID = "Mitko";  			order.EmployeeID = 4;  			entities.Orders.Add (order);  			entities.SaveChanges ();  			Order retrievedOrder = entities.Orders.Where (o => o.CustomerID == "MITKO" && o.EmployeeID == 4).FirstOrDefault ();  			Console.WriteLine (retrievedOrder.CustomerID);  			dbContextTransaction.Commit ();  		}  		catch (Exception e) {  			Console.WriteLine (e.Message);  			dbContextTransaction.Rollback ();  		}  	}  }  
Magic Number,_09.Transactions,Program,C:\repos\mitko100_CSharp\Databases\06.Entity Framework\09.Transactions\Program.cs,Main,The following statement contains a magic number: using (var dbContextTransaction = entities.Database.BeginTransaction ()) {  	try {  		Order order = new Order ();  		order.CustomerID = "Mitko";  		order.EmployeeID = 4;  		entities.Orders.Add (order);  		entities.SaveChanges ();  		Order retrievedOrder = entities.Orders.Where (o => o.CustomerID == "MITKO" && o.EmployeeID == 4).FirstOrDefault ();  		Console.WriteLine (retrievedOrder.CustomerID);  		dbContextTransaction.Commit ();  	}  	catch (Exception e) {  		Console.WriteLine (e.Message);  		dbContextTransaction.Rollback ();  	}  }  
Magic Number,_09.Transactions,Program,C:\repos\mitko100_CSharp\Databases\06.Entity Framework\09.Transactions\Program.cs,Main,The following statement contains a magic number: using (var dbContextTransaction = entities.Database.BeginTransaction ()) {  	try {  		Order order = new Order ();  		order.CustomerID = "Mitko";  		order.EmployeeID = 4;  		entities.Orders.Add (order);  		entities.SaveChanges ();  		Order retrievedOrder = entities.Orders.Where (o => o.CustomerID == "MITKO" && o.EmployeeID == 4).FirstOrDefault ();  		Console.WriteLine (retrievedOrder.CustomerID);  		dbContextTransaction.Commit ();  	}  	catch (Exception e) {  		Console.WriteLine (e.Message);  		dbContextTransaction.Rollback ();  	}  }  
Magic Number,_09.Transactions,Program,C:\repos\mitko100_CSharp\Databases\06.Entity Framework\09.Transactions\Program.cs,Main,The following statement contains a magic number: try {  	Order order = new Order ();  	order.CustomerID = "Mitko";  	order.EmployeeID = 4;  	entities.Orders.Add (order);  	entities.SaveChanges ();  	Order retrievedOrder = entities.Orders.Where (o => o.CustomerID == "MITKO" && o.EmployeeID == 4).FirstOrDefault ();  	Console.WriteLine (retrievedOrder.CustomerID);  	dbContextTransaction.Commit ();  }  catch (Exception e) {  	Console.WriteLine (e.Message);  	dbContextTransaction.Rollback ();  }  
Magic Number,_09.Transactions,Program,C:\repos\mitko100_CSharp\Databases\06.Entity Framework\09.Transactions\Program.cs,Main,The following statement contains a magic number: try {  	Order order = new Order ();  	order.CustomerID = "Mitko";  	order.EmployeeID = 4;  	entities.Orders.Add (order);  	entities.SaveChanges ();  	Order retrievedOrder = entities.Orders.Where (o => o.CustomerID == "MITKO" && o.EmployeeID == 4).FirstOrDefault ();  	Console.WriteLine (retrievedOrder.CustomerID);  	dbContextTransaction.Commit ();  }  catch (Exception e) {  	Console.WriteLine (e.Message);  	dbContextTransaction.Rollback ();  }  
Magic Number,_09.Transactions,Program,C:\repos\mitko100_CSharp\Databases\06.Entity Framework\09.Transactions\Program.cs,Main,The following statement contains a magic number: order.EmployeeID = 4;  
