Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BookstoreConsoleClient,Program,C:\repos\mitko100_CSharp\Databases\12.ExamExamples\Bookstore\BookstoreConsoleClient\Program.cs,ParseXml,Cyclomatic complexity of the method is 16
Magic Number,BookstoreConsoleClient,Program,C:\repos\mitko100_CSharp\Databases\12.ExamExamples\Bookstore\BookstoreConsoleClient\Program.cs,ParseXml,The following statement contains a magic number: foreach (XmlNode book in root) {  	var currentBook = new Book ();  	if (book ["title"] == null) {  		throw new InvalidOperationException ();  	}  	currentBook.Title = book ["title"].InnerText;  	if (book ["web-site"] != null) {  		currentBook.WebSite = book ["web-site"].InnerText;  	}  	if (book ["price"] != null) {  		currentBook.Price = decimal.Parse (book ["price"].InnerText);  	}  	if (book ["isbn"] != null) {  		string isbn = book ["isbn"].InnerText;  		if (isbn.Length != 13) {  			throw new ArgumentException ("wrong isbn length");  		}  		bool isbnExists = (from b in bookstore.Books  		where b.ISBN == isbn  		select b).Any ();  		if (isbnExists) {  			throw new InvalidOperationException ("isbn exists");  		}  		currentBook.ISBN = isbn;  	}  	if (book ["authors"] != null) {  		var authorsList = book ["authors"].ChildNodes;  		foreach (XmlNode listItem in authorsList) {  			string authorName = listItem.InnerText;  			var author = (from a in bookstore.Authors  			where a.Name == authorName  			select a).FirstOrDefault ();  			if (author == null) {  				author = new Author ();  				author.Name = authorName;  			}  			currentBook.Authors.Add (author);  		}  	}  	if (book ["reviews"] != null) {  		var reviewsList = book ["reviews"].ChildNodes;  		foreach (XmlNode reviewItem in reviewsList) {  			Review review = new Review ();  			review.Content = reviewItem.InnerText.Trim ();  			if (reviewItem.Attributes ["date"] != null) {  				review.CreationTime = DateTime.Parse (reviewItem.Attributes ["date"].InnerText);  			}  			else {  				review.CreationTime = DateTime.Now;  			}  			if (reviewItem.Attributes ["author"] != null) {  				string authorName = reviewItem.Attributes ["author"].InnerText;  				var author = (from a in bookstore.Authors  				where a.Name == authorName  				select a).FirstOrDefault ();  				if (author == null) {  					author = new Author ();  					author.Name = authorName;  				}  				review.Author = author;  			}  			currentBook.Reviews.Add (review);  		}  	}  	bookstore.Books.Add (currentBook);  	bookstore.SaveChanges ();  }  
Magic Number,BookstoreConsoleClient,Program,C:\repos\mitko100_CSharp\Databases\12.ExamExamples\Bookstore\BookstoreConsoleClient\Program.cs,ParseXml,The following statement contains a magic number: if (book ["isbn"] != null) {  	string isbn = book ["isbn"].InnerText;  	if (isbn.Length != 13) {  		throw new ArgumentException ("wrong isbn length");  	}  	bool isbnExists = (from b in bookstore.Books  	where b.ISBN == isbn  	select b).Any ();  	if (isbnExists) {  		throw new InvalidOperationException ("isbn exists");  	}  	currentBook.ISBN = isbn;  }  
Magic Number,BookstoreConsoleClient,Program,C:\repos\mitko100_CSharp\Databases\12.ExamExamples\Bookstore\BookstoreConsoleClient\Program.cs,ParseXml,The following statement contains a magic number: if (isbn.Length != 13) {  	throw new ArgumentException ("wrong isbn length");  }  
