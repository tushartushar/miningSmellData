Implementation smell,Namespace,Class,File,Method,Description
Magic Number,_03.TransactionLog,Program,C:\repos\mitko100_CSharp\Databases\10.Transactions\03.TransactionLog\Program.cs,Main,The following statement contains a magic number: using (db) {  	var transaction = db.Database.BeginTransaction (IsolationLevel.RepeatableRead);  	string cardNumber = "2222222222";  	string cardPin = "2222";  	int cardId = 2;  	decimal money = 500;  	CardAccount card = (from c in db.CardAccounts  	where (c.CardNumber == cardNumber && c.CardPin == cardPin)  	select c).First ();  	//check card pin and number  	if (card.CardAccountId != cardId) {  		throw new InvalidOperationException ("wrong card number or pin");  	}  	//check ballance  	if (card.CardCash < money) {  		throw new InvalidOperationException ("not enought money in account");  	}  	card.CardCash -= money;  	//create new transaction log  	TransactionHistory log = new TransactionHistory (card.CardNumber' money);  	log.CardAccountId = card.CardAccountId;  	//add log in database  	db.Transactions.Add (log);  	//finish transaction  	transaction.Commit ();  	db.SaveChanges ();  }  
Magic Number,_03.TransactionLog,Program,C:\repos\mitko100_CSharp\Databases\10.Transactions\03.TransactionLog\Program.cs,Main,The following statement contains a magic number: using (db) {  	var transaction = db.Database.BeginTransaction (IsolationLevel.RepeatableRead);  	string cardNumber = "2222222222";  	string cardPin = "2222";  	int cardId = 2;  	decimal money = 500;  	CardAccount card = (from c in db.CardAccounts  	where (c.CardNumber == cardNumber && c.CardPin == cardPin)  	select c).First ();  	//check card pin and number  	if (card.CardAccountId != cardId) {  		throw new InvalidOperationException ("wrong card number or pin");  	}  	//check ballance  	if (card.CardCash < money) {  		throw new InvalidOperationException ("not enought money in account");  	}  	card.CardCash -= money;  	//create new transaction log  	TransactionHistory log = new TransactionHistory (card.CardNumber' money);  	log.CardAccountId = card.CardAccountId;  	//add log in database  	db.Transactions.Add (log);  	//finish transaction  	transaction.Commit ();  	db.SaveChanges ();  }  
