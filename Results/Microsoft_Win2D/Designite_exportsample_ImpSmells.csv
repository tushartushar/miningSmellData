Implementation smell,Namespace,Class,File,Method,Description
Complex Method,exportsample,Configuration,D:\research\architectureSmells\repos\Microsoft_Win2D\tools\exportsample\ConfigFile.cs,Configuration,Cyclomatic complexity of the method is 9
Long Statement,exportsample,ProjectProcessor,D:\research\architectureSmells\repos\Microsoft_Win2D\tools\exportsample\ProjectProcessor.cs,GetEnsureNuGetPackageBuildImportsTarget,The length of the statement  "            errorText.Value = "This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information' see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}."; " is 242.
Long Statement,exportsample,ProjectProcessor,D:\research\architectureSmells\repos\Microsoft_Win2D\tools\exportsample\ProjectProcessor.cs,FlattenConditions,The length of the statement  "            const string clauseRegex = propertyRegex + " " + operatorRegex + " " + valueRegex;  // matches: '$(property)' == 'value' " is 120.
Long Statement,exportsample,ProjectProcessor,D:\research\architectureSmells\repos\Microsoft_Win2D\tools\exportsample\ProjectProcessor.cs,FlattenConditions,The length of the statement  "            const string conditionRegex = "^(?:" + clauseRegex + "(?: And |$))+";               // matches: one or more clauses' separated by And " is 133.
Magic Number,exportsample,ProjectProcessor,D:\research\architectureSmells\repos\Microsoft_Win2D\tools\exportsample\ProjectProcessor.cs,FlattenConditions,The following statement contains a magic number: var clauses = from i in Enumerable.Range(0' match.Groups[1].Captures.Count)                                    select new                                    {                                        Property = match.Groups[1].Captures[i].Value'                                        Operator = match.Groups[2].Captures[i].Value'                                        Value    = match.Groups[3].Captures[i].Value'                                    };
Magic Number,exportsample,ProjectProcessor,D:\research\architectureSmells\repos\Microsoft_Win2D\tools\exportsample\ProjectProcessor.cs,FlattenConditions,The following statement contains a magic number: var clauses = from i in Enumerable.Range(0' match.Groups[1].Captures.Count)                                    select new                                    {                                        Property = match.Groups[1].Captures[i].Value'                                        Operator = match.Groups[2].Captures[i].Value'                                        Value    = match.Groups[3].Captures[i].Value'                                    };
Missing Default,exportsample,Configuration,D:\research\architectureSmells\repos\Microsoft_Win2D\tools\exportsample\ConfigFile.cs,Configuration,The following switch statement is missing a default case: switch (element.Name.ToString())                  {                      case "Property":                          Properties.Add(                              element.Attribute("Name").Value'                              Path.GetFullPath(Path.Combine(options.Root' element.Attribute("Value").Value)));                          break;                        case "Sample":                          Samples.Add(new SampleDirectory(element' options.Root' options.Dest));                          break;                        case "InlineImport":                          InlineImports.Add(new InlineImport(element));                          break;                        case "DuplicateIntoSample":                          DuplicateFiles.Add(                              Path.GetFullPath(Path.Combine(options.Root' element.Attribute("Source").Value))'                              element.Attribute("Destination").Value);                          break;                        case "MSBuildPropertyIsFileReference":                          FileReferenceProperties.Add(element.Attribute("Name").Value);                          break;                        case "Win2DProject":                          Win2DProjects.Add(element.Attribute("Name").Value);                          break;                        case "File":                          FilesToCopy.Add(element.Attribute("Source").Value);                          break;                        case "FlattenCondition":                          PropertiesToFlatten.Add(element.Attribute("Property").Value);                          break;                  }
Missing Default,exportsample,ProjectProcessor,D:\research\architectureSmells\repos\Microsoft_Win2D\tools\exportsample\ProjectProcessor.cs,GetTargetPlatformIdentifier,The following switch statement is missing a default case: switch (targetPlatformIdentifier.Value)              {                  case "Windows":                      return TargetPlatformIdentifier.Windows;                    case "WindowsPhoneApp":                      return TargetPlatformIdentifier.WindowsPhone;                    case "UAP":                      return TargetPlatformIdentifier.UAP;              }
