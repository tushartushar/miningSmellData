Implementation smell,Namespace,Class,File,Method,Description
Magic Number,JavaScriptEngineSwitcher.V8,AssemblyResolver,C:\repos\Taritsyn_JavaScriptEngineSwitcher\src\JavaScriptEngineSwitcher.V8\AssemblyResolver.cs,AssemblyResolveHandler,The following statement contains a magic number: if (args.Name.StartsWith(ASSEMBLY_NAME' StringComparison.OrdinalIgnoreCase))  			{  				var currentDomain = (AppDomain)sender;  				string baseDirectoryPath = currentDomain.SetupInformation.PrivateBinPath;  				if (string.IsNullOrEmpty(baseDirectoryPath))  				{  					// `PrivateBinPath` property is empty in test scenarios' so  					// need to use the `BaseDirectory` property  					baseDirectoryPath = currentDomain.BaseDirectory;  				}    				string platformName;  				int platformBitness;  				if (Environment.Is64BitProcess)  				{  					platformName = "x64";  					platformBitness = 64;  				}  				else  				{  					platformName = "x86";  					platformBitness = 32;  				}    				string assemblyDirectoryPath = Path.Combine(baseDirectoryPath' platformName);  				string assemblyFileName = string.Format("{0}-{1}.dll"' ASSEMBLY_NAME' platformBitness);  				string assemblyFilePath = Path.Combine(assemblyDirectoryPath' assemblyFileName);  				bool assemblyFileExists = File.Exists(assemblyFilePath);    				if (!assemblyFileExists)  				{  					throw new FileNotFoundException(  						string.Format(Strings.Engines_ClearScriptV8AssemblyFileNotFound'  							assemblyFileName' platformName));  				}    				return Assembly.LoadFile(assemblyFilePath);  			}
Magic Number,JavaScriptEngineSwitcher.V8,AssemblyResolver,C:\repos\Taritsyn_JavaScriptEngineSwitcher\src\JavaScriptEngineSwitcher.V8\AssemblyResolver.cs,AssemblyResolveHandler,The following statement contains a magic number: if (args.Name.StartsWith(ASSEMBLY_NAME' StringComparison.OrdinalIgnoreCase))  			{  				var currentDomain = (AppDomain)sender;  				string baseDirectoryPath = currentDomain.SetupInformation.PrivateBinPath;  				if (string.IsNullOrEmpty(baseDirectoryPath))  				{  					// `PrivateBinPath` property is empty in test scenarios' so  					// need to use the `BaseDirectory` property  					baseDirectoryPath = currentDomain.BaseDirectory;  				}    				string platformName;  				int platformBitness;  				if (Environment.Is64BitProcess)  				{  					platformName = "x64";  					platformBitness = 64;  				}  				else  				{  					platformName = "x86";  					platformBitness = 32;  				}    				string assemblyDirectoryPath = Path.Combine(baseDirectoryPath' platformName);  				string assemblyFileName = string.Format("{0}-{1}.dll"' ASSEMBLY_NAME' platformBitness);  				string assemblyFilePath = Path.Combine(assemblyDirectoryPath' assemblyFileName);  				bool assemblyFileExists = File.Exists(assemblyFilePath);    				if (!assemblyFileExists)  				{  					throw new FileNotFoundException(  						string.Format(Strings.Engines_ClearScriptV8AssemblyFileNotFound'  							assemblyFileName' platformName));  				}    				return Assembly.LoadFile(assemblyFilePath);  			}
Magic Number,JavaScriptEngineSwitcher.V8,V8Settings,C:\repos\Taritsyn_JavaScriptEngineSwitcher\src\JavaScriptEngineSwitcher.V8\V8Settings.cs,V8Settings,The following statement contains a magic number: DebugPort = 9222;
