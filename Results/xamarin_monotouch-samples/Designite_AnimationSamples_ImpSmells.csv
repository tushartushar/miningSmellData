Implementation smell,Namespace,Class,File,Method,Description
Long Statement,AnimationSamples,DemoViewTransition,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\DemoViewTransition.cs,ViewDidLoad,The length of the statement  "			fromView.AddGestureRecognizer (new UITapGestureRecognizer (() => UIView.Transition (fromView' toView' 2' options' () => Console.WriteLine ("transition complete")))); " is 165.
Magic Number,AnimationSamples,DemoViewTransition,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\DemoViewTransition.cs,ViewDidLoad,The following statement contains a magic number: fromView.AddGestureRecognizer (new UITapGestureRecognizer (() => UIView.Transition (fromView' toView' 2' options' () => Console.WriteLine ("transition complete"))));
Magic Number,AnimationSamples,ImplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ImplicitLayerAnimation.cs,ViewDidLoad,The following statement contains a magic number: layer = new CALayer {  				Bounds = new CGRect (50' 50' 50' 50)'  				Position = new CGPoint (150' 50)'  				Contents = UIImage.FromFile ("monkey1.png").CGImage'  				ContentsGravity = CALayer.GravityResize'  				BorderWidth = 1.5f'  				BorderColor = UIColor.Green.CGColor  			};
Magic Number,AnimationSamples,ImplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ImplicitLayerAnimation.cs,ViewDidLoad,The following statement contains a magic number: layer = new CALayer {  				Bounds = new CGRect (50' 50' 50' 50)'  				Position = new CGPoint (150' 50)'  				Contents = UIImage.FromFile ("monkey1.png").CGImage'  				ContentsGravity = CALayer.GravityResize'  				BorderWidth = 1.5f'  				BorderColor = UIColor.Green.CGColor  			};
Magic Number,AnimationSamples,ImplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ImplicitLayerAnimation.cs,ViewDidLoad,The following statement contains a magic number: layer = new CALayer {  				Bounds = new CGRect (50' 50' 50' 50)'  				Position = new CGPoint (150' 50)'  				Contents = UIImage.FromFile ("monkey1.png").CGImage'  				ContentsGravity = CALayer.GravityResize'  				BorderWidth = 1.5f'  				BorderColor = UIColor.Green.CGColor  			};
Magic Number,AnimationSamples,ImplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ImplicitLayerAnimation.cs,ViewDidLoad,The following statement contains a magic number: layer = new CALayer {  				Bounds = new CGRect (50' 50' 50' 50)'  				Position = new CGPoint (150' 50)'  				Contents = UIImage.FromFile ("monkey1.png").CGImage'  				ContentsGravity = CALayer.GravityResize'  				BorderWidth = 1.5f'  				BorderColor = UIColor.Green.CGColor  			};
Magic Number,AnimationSamples,ImplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ImplicitLayerAnimation.cs,ViewDidLoad,The following statement contains a magic number: layer = new CALayer {  				Bounds = new CGRect (50' 50' 50' 50)'  				Position = new CGPoint (150' 50)'  				Contents = UIImage.FromFile ("monkey1.png").CGImage'  				ContentsGravity = CALayer.GravityResize'  				BorderWidth = 1.5f'  				BorderColor = UIColor.Green.CGColor  			};
Magic Number,AnimationSamples,ImplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ImplicitLayerAnimation.cs,ViewDidLoad,The following statement contains a magic number: layer = new CALayer {  				Bounds = new CGRect (50' 50' 50' 50)'  				Position = new CGPoint (150' 50)'  				Contents = UIImage.FromFile ("monkey1.png").CGImage'  				ContentsGravity = CALayer.GravityResize'  				BorderWidth = 1.5f'  				BorderColor = UIColor.Green.CGColor  			};
Magic Number,AnimationSamples,ImplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ImplicitLayerAnimation.cs,ViewDidLoad,The following statement contains a magic number: layer = new CALayer {  				Bounds = new CGRect (50' 50' 50' 50)'  				Position = new CGPoint (150' 50)'  				Contents = UIImage.FromFile ("monkey1.png").CGImage'  				ContentsGravity = CALayer.GravityResize'  				BorderWidth = 1.5f'  				BorderColor = UIColor.Green.CGColor  			};
Magic Number,AnimationSamples,ImplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ImplicitLayerAnimation.cs,ViewDidAppear,The following statement contains a magic number: CATransaction.AnimationDuration = 10;
Magic Number,AnimationSamples,ImplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ImplicitLayerAnimation.cs,ViewDidAppear,The following statement contains a magic number: layer.Position = new CGPoint (150' 550);
Magic Number,AnimationSamples,ImplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ImplicitLayerAnimation.cs,ViewDidAppear,The following statement contains a magic number: layer.Position = new CGPoint (150' 550);
Magic Number,AnimationSamples,ImplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ImplicitLayerAnimation.cs,ViewDidAppear,The following statement contains a magic number: layer.BorderWidth = 5.0f;
Magic Number,AnimationSamples,ExplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ExplicitLayerAnimation.cs,ViewDidLoad,The following statement contains a magic number: layer = new CALayer {  				Bounds = new CGRect (0' 0' 50' 50)'  				Position = new CGPoint (50' 50)'  				Contents = UIImage.FromFile ("monkey2.png").CGImage'  				ContentsGravity = CALayer.GravityResize'  				BorderWidth = 1.5f'  				BorderColor = UIColor.Green.CGColor  			};
Magic Number,AnimationSamples,ExplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ExplicitLayerAnimation.cs,ViewDidLoad,The following statement contains a magic number: layer = new CALayer {  				Bounds = new CGRect (0' 0' 50' 50)'  				Position = new CGPoint (50' 50)'  				Contents = UIImage.FromFile ("monkey2.png").CGImage'  				ContentsGravity = CALayer.GravityResize'  				BorderWidth = 1.5f'  				BorderColor = UIColor.Green.CGColor  			};
Magic Number,AnimationSamples,ExplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ExplicitLayerAnimation.cs,ViewDidLoad,The following statement contains a magic number: layer = new CALayer {  				Bounds = new CGRect (0' 0' 50' 50)'  				Position = new CGPoint (50' 50)'  				Contents = UIImage.FromFile ("monkey2.png").CGImage'  				ContentsGravity = CALayer.GravityResize'  				BorderWidth = 1.5f'  				BorderColor = UIColor.Green.CGColor  			};
Magic Number,AnimationSamples,ExplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ExplicitLayerAnimation.cs,ViewDidLoad,The following statement contains a magic number: layer = new CALayer {  				Bounds = new CGRect (0' 0' 50' 50)'  				Position = new CGPoint (50' 50)'  				Contents = UIImage.FromFile ("monkey2.png").CGImage'  				ContentsGravity = CALayer.GravityResize'  				BorderWidth = 1.5f'  				BorderColor = UIColor.Green.CGColor  			};
Magic Number,AnimationSamples,ExplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ExplicitLayerAnimation.cs,ViewDidLoad,The following statement contains a magic number: layer = new CALayer {  				Bounds = new CGRect (0' 0' 50' 50)'  				Position = new CGPoint (50' 50)'  				Contents = UIImage.FromFile ("monkey2.png").CGImage'  				ContentsGravity = CALayer.GravityResize'  				BorderWidth = 1.5f'  				BorderColor = UIColor.Green.CGColor  			};
Magic Number,AnimationSamples,ExplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ExplicitLayerAnimation.cs,ViewDidAppear,The following statement contains a magic number: layer.Position = new CGPoint (200' 300);
Magic Number,AnimationSamples,ExplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ExplicitLayerAnimation.cs,ViewDidAppear,The following statement contains a magic number: layer.Position = new CGPoint (200' 300);
Magic Number,AnimationSamples,ExplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ExplicitLayerAnimation.cs,ViewDidAppear,The following statement contains a magic number: path.AddLines (new []{ fromPt' new CGPoint (50' 300)' new CGPoint (200' 50)' new CGPoint (200' 300) });
Magic Number,AnimationSamples,ExplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ExplicitLayerAnimation.cs,ViewDidAppear,The following statement contains a magic number: path.AddLines (new []{ fromPt' new CGPoint (50' 300)' new CGPoint (200' 50)' new CGPoint (200' 300) });
Magic Number,AnimationSamples,ExplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ExplicitLayerAnimation.cs,ViewDidAppear,The following statement contains a magic number: path.AddLines (new []{ fromPt' new CGPoint (50' 300)' new CGPoint (200' 50)' new CGPoint (200' 300) });
Magic Number,AnimationSamples,ExplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ExplicitLayerAnimation.cs,ViewDidAppear,The following statement contains a magic number: path.AddLines (new []{ fromPt' new CGPoint (50' 300)' new CGPoint (200' 50)' new CGPoint (200' 300) });
Magic Number,AnimationSamples,ExplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ExplicitLayerAnimation.cs,ViewDidAppear,The following statement contains a magic number: path.AddLines (new []{ fromPt' new CGPoint (50' 300)' new CGPoint (200' 50)' new CGPoint (200' 300) });
Magic Number,AnimationSamples,ExplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ExplicitLayerAnimation.cs,ViewDidAppear,The following statement contains a magic number: path.AddLines (new []{ fromPt' new CGPoint (50' 300)' new CGPoint (200' 50)' new CGPoint (200' 300) });
Magic Number,AnimationSamples,ExplicitLayerAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ExplicitLayerAnimation.cs,ViewDidAppear,The following statement contains a magic number: animPosition.Duration = 2;
Magic Number,AnimationSamples,ViewPropertyAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ViewPropertyAnimation.cs,ViewDidLoad,The following statement contains a magic number: imgView = new UIImageView (new CGRect (50' 50' 150' 150)) {  				ContentMode = UIViewContentMode.ScaleAspectFit'  				Image = img  			};
Magic Number,AnimationSamples,ViewPropertyAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ViewPropertyAnimation.cs,ViewDidLoad,The following statement contains a magic number: imgView = new UIImageView (new CGRect (50' 50' 150' 150)) {  				ContentMode = UIViewContentMode.ScaleAspectFit'  				Image = img  			};
Magic Number,AnimationSamples,ViewPropertyAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ViewPropertyAnimation.cs,ViewDidLoad,The following statement contains a magic number: imgView = new UIImageView (new CGRect (50' 50' 150' 150)) {  				ContentMode = UIViewContentMode.ScaleAspectFit'  				Image = img  			};
Magic Number,AnimationSamples,ViewPropertyAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ViewPropertyAnimation.cs,ViewDidLoad,The following statement contains a magic number: imgView = new UIImageView (new CGRect (50' 50' 150' 150)) {  				ContentMode = UIViewContentMode.ScaleAspectFit'  				Image = img  			};
Magic Number,AnimationSamples,ViewPropertyAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ViewPropertyAnimation.cs,ViewDidLoad,The following statement contains a magic number: animateButton = new UIButton (UIButtonType.System) {  				Frame = new CGRect (50' 300' 300' 100)  			};
Magic Number,AnimationSamples,ViewPropertyAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ViewPropertyAnimation.cs,ViewDidLoad,The following statement contains a magic number: animateButton = new UIButton (UIButtonType.System) {  				Frame = new CGRect (50' 300' 300' 100)  			};
Magic Number,AnimationSamples,ViewPropertyAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ViewPropertyAnimation.cs,ViewDidLoad,The following statement contains a magic number: animateButton = new UIButton (UIButtonType.System) {  				Frame = new CGRect (50' 300' 300' 100)  			};
Magic Number,AnimationSamples,ViewPropertyAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ViewPropertyAnimation.cs,ViewDidLoad,The following statement contains a magic number: animateButton = new UIButton (UIButtonType.System) {  				Frame = new CGRect (50' 300' 300' 100)  			};
Magic Number,AnimationSamples,ViewPropertyAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ViewPropertyAnimation.cs,ViewDidLoad,The following statement contains a magic number: animateButton.TouchUpInside += (sender' e) => UIView.Animate (2' 0' options' () => {  				imgView.Center = new CGPoint (UIScreen.MainScreen.Bounds.Right - imgView.Frame.Width / 2' imgView.Center.Y);  			}' () => {  				imgView.Center = pt;  			});
Magic Number,AnimationSamples,ViewPropertyAnimation,D:\research\architectureSmells\repos\xamarin_monotouch-samples\GraphicsAndAnimation\CoreAnimation\AnimationSamples\ViewPropertyAnimation.cs,ViewDidLoad,The following statement contains a magic number: animateButton.TouchUpInside += (sender' e) => UIView.Animate (2' 0' options' () => {  				imgView.Center = new CGPoint (UIScreen.MainScreen.Bounds.Right - imgView.Frame.Width / 2' imgView.Center.Y);  			}' () => {  				imgView.Center = pt;  			});
