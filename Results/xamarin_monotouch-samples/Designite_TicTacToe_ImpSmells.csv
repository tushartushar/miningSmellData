Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,TicTacToe,TTTGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Model\TTTGame.cs,GetWinningPlayer,The method has 7 parameters. Parameters: playerOut' startXPosition' startYPosition' endXPosition' endYPosition' xPositions' yPositions
Long Parameter List,TicTacToe,TTTGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Model\TTTGame.cs,GetWinningPlayer,The method has 6 parameters. Parameters: player' startXPosition' startYPosition' endXPosition' endYPosition' xPosition
Long Parameter List,TicTacToe,TTTGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Model\TTTGame.cs,GetWinningPlayer,The method has 6 parameters. Parameters: player' startXPosition' startYPosition' endXPosition' endYPosition' yPosition
Long Parameter List,TicTacToe,TTTGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Model\TTTGame.cs,GetWinningPlayer,The method has 6 parameters. Parameters: player' startXPosition' startYPosition' endXPosition' endYPosition' direction
Long Parameter List,TicTacToe,TTTGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Model\TTTGame.cs,GetWinningPlayer,The method has 5 parameters. Parameters: player' startXPosition' startYPosition' endXPosition' endYPosition
Magic Number,TicTacToe,TTTMove,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Model\TTTMove.cs,GetHashCode,The following statement contains a magic number: hash = 31 * hash + (int)Player;
Magic Number,TicTacToe,TTTMove,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Model\TTTMove.cs,GetHashCode,The following statement contains a magic number: hash = 31 * hash + (int)XPosition + 1;
Magic Number,TicTacToe,TTTMove,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Model\TTTMove.cs,GetHashCode,The following statement contains a magic number: hash = 31 * hash + (int)YPosition + 1;
Magic Number,TicTacToe,TTTGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Model\TTTGame.cs,GetWinningPlayer,The following statement contains a magic number: yPositions [2] = TTTMoveYPosition.Bottom;
Magic Number,TicTacToe,TTTGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Model\TTTGame.cs,GetWinningPlayer,The following statement contains a magic number: xPositions [2] = TTTMoveXPosition.Right;
Magic Number,TicTacToe,TTTGameView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\View\TTTGameView.cs,tapGame,The following statement contains a magic number: normalizedPoint.X -= bounds.X + bounds.Size.Width / 2;
Magic Number,TicTacToe,TTTGameView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\View\TTTGameView.cs,tapGame,The following statement contains a magic number: normalizedPoint.X *= 3 / bounds.Size.Width;
Magic Number,TicTacToe,TTTGameView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\View\TTTGameView.cs,tapGame,The following statement contains a magic number: normalizedPoint.Y -= bounds.Y + bounds.Size.Height / 2;
Magic Number,TicTacToe,TTTGameView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\View\TTTGameView.cs,tapGame,The following statement contains a magic number: normalizedPoint.Y *= 3 / bounds.Size.Height;
Magic Number,TicTacToe,TTTGameView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\View\TTTGameView.cs,pointForPosition,The following statement contains a magic number: CGPoint point = new CGPoint (bounds.X + bounds.Size.Width / 2'  			                           bounds.Y + bounds.Size.Height / 2);
Magic Number,TicTacToe,TTTGameView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\View\TTTGameView.cs,pointForPosition,The following statement contains a magic number: CGPoint point = new CGPoint (bounds.X + bounds.Size.Width / 2'  			                           bounds.Y + bounds.Size.Height / 2);
Magic Number,TicTacToe,TTTGameView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\View\TTTGameView.cs,pointForPosition,The following statement contains a magic number: point.X += (int)xPosition * bounds.Size.Width / 3;
Magic Number,TicTacToe,TTTGameView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\View\TTTGameView.cs,pointForPosition,The following statement contains a magic number: point.Y += (int)yPosition * bounds.Size.Height / 3;
Magic Number,TicTacToe,TTTGameView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\View\TTTGameView.cs,LayoutSubviews,The following statement contains a magic number: view.Center = new CGPoint (bounds.X + bounds.Size.Width / 2'  				                          (float)Math.Round (bounds.Size.Height * (i + 1) / 3));
Magic Number,TicTacToe,TTTGameView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\View\TTTGameView.cs,LayoutSubviews,The following statement contains a magic number: view.Center = new CGPoint (bounds.X + bounds.Size.Width / 2'  				                          (float)Math.Round (bounds.Size.Height * (i + 1) / 3));
Magic Number,TicTacToe,TTTGameView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\View\TTTGameView.cs,LayoutSubviews,The following statement contains a magic number: view.Center = new CGPoint ((float)Math.Round (bounds.Size.Width * (i + 1) / 3)'  				                          bounds.Y + bounds.Size.Height / 2);
Magic Number,TicTacToe,TTTGameView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\View\TTTGameView.cs,LayoutSubviews,The following statement contains a magic number: view.Center = new CGPoint ((float)Math.Round (bounds.Size.Width * (i + 1) / 3)'  				                          bounds.Y + bounds.Size.Height / 2);
Magic Number,TicTacToe,TTTGameLineView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\View\TTTGameView.cs,TTTGameLineView,The following statement contains a magic number: shapeLayer.LineWidth = 2f;
Magic Number,TicTacToe,TTTCountView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\View\TTTCountView.cs,Draw,The following statement contains a magic number: path.MoveTo (  						new CGPoint (x + 0.5f * LineWidth'  					             bounds.Top + 0.5f * LineWidth));
Magic Number,TicTacToe,TTTCountView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\View\TTTCountView.cs,Draw,The following statement contains a magic number: path.MoveTo (  						new CGPoint (x + 0.5f * LineWidth'  					             bounds.Top + 0.5f * LineWidth));
Magic Number,TicTacToe,TTTCountView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\View\TTTCountView.cs,Draw,The following statement contains a magic number: path.AddLineTo (  						new CGPoint (x + 0.5f * LineWidth + LineGroupCount * LineMargin'  					             bounds.Bottom - 0.5f * LineWidth));
Magic Number,TicTacToe,TTTCountView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\View\TTTCountView.cs,Draw,The following statement contains a magic number: path.AddLineTo (  						new CGPoint (x + 0.5f * LineWidth + LineGroupCount * LineMargin'  					             bounds.Bottom - 0.5f * LineWidth));
Magic Number,TicTacToe,TTTPlayViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTPlayViewController.cs,newGame,The following statement contains a magic number: UIView.Animate (0.3f' delegate {  				gameView.Game = Profile.StartNewGame ();  				saveProfile ();  				updateBackground ();  			});
Magic Number,TicTacToe,TTTPlayViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTPlayViewController.cs,togglePause,The following statement contains a magic number: UIView.Animate (0.3f' delegate {  				gameView.Alpha = (paused ? 0.25f : 1f);  			});
Magic Number,TicTacToe,TTTPlayViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTPlayViewController.cs,togglePause,The following statement contains a magic number: UIView.Animate (0.3f' delegate {  				gameView.Alpha = (paused ? 0.25f : 1f);  			});
Magic Number,TicTacToe,TTTPlayViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTPlayViewController.cs,DidSelect,The following statement contains a magic number: UIView.Animate (0.3' delegate {  				gameView.Game.AddMove (xPosition' yPosition);  				gameView.UpdateGameState ();  				saveProfile ();  				updateBackground ();  			});
Magic Number,TicTacToe,TTTPlayViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTPlayViewController.cs,updateBackground,The following statement contains a magic number: View.BackgroundColor = (gameOver ? UIColor.Black : UIColor.White).ColorWithAlpha (0.75f);
Magic Number,TicTacToe,TTTNewMessageViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTNewMessageViewController.cs,LoadView,The following statement contains a magic number: baseView.BackgroundColor = UIColor.FromWhiteAlpha (0f' .15f);
Magic Number,TicTacToe,TTTNewMessageViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTNewMessageViewController.cs,LoadView,The following statement contains a magic number: UIView view = new UIView (new CGRect (-100f' -50f' 240f' 120f)) {  				AutoresizingMask = UIViewAutoresizing.FlexibleLeftMargin |  				UIViewAutoresizing.FlexibleBottomMargin |  				UIViewAutoresizing.FlexibleTopMargin |  				UIViewAutoresizing.FlexibleRightMargin'  				BackgroundColor = UIColor.FromPatternImage (UIImage.FromBundle ("barBackground"))  			};
Magic Number,TicTacToe,TTTNewMessageViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTNewMessageViewController.cs,LoadView,The following statement contains a magic number: UIView view = new UIView (new CGRect (-100f' -50f' 240f' 120f)) {  				AutoresizingMask = UIViewAutoresizing.FlexibleLeftMargin |  				UIViewAutoresizing.FlexibleBottomMargin |  				UIViewAutoresizing.FlexibleTopMargin |  				UIViewAutoresizing.FlexibleRightMargin'  				BackgroundColor = UIColor.FromPatternImage (UIImage.FromBundle ("barBackground"))  			};
Magic Number,TicTacToe,TTTNewMessageViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTNewMessageViewController.cs,LoadView,The following statement contains a magic number: UIView view = new UIView (new CGRect (-100f' -50f' 240f' 120f)) {  				AutoresizingMask = UIViewAutoresizing.FlexibleLeftMargin |  				UIViewAutoresizing.FlexibleBottomMargin |  				UIViewAutoresizing.FlexibleTopMargin |  				UIViewAutoresizing.FlexibleRightMargin'  				BackgroundColor = UIColor.FromPatternImage (UIImage.FromBundle ("barBackground"))  			};
Magic Number,TicTacToe,TTTNewMessageViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTNewMessageViewController.cs,LoadView,The following statement contains a magic number: UIView view = new UIView (new CGRect (-100f' -50f' 240f' 120f)) {  				AutoresizingMask = UIViewAutoresizing.FlexibleLeftMargin |  				UIViewAutoresizing.FlexibleBottomMargin |  				UIViewAutoresizing.FlexibleTopMargin |  				UIViewAutoresizing.FlexibleRightMargin'  				BackgroundColor = UIColor.FromPatternImage (UIImage.FromBundle ("barBackground"))  			};
Magic Number,TicTacToe,TTTNewMessageViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTNewMessageViewController.cs,PresentFromViewController,The following statement contains a magic number: UIView.Animate (0.3f' delegate {  				View.Alpha = 1f;  				currentMessageSourceWindow.TintAdjustmentMode = UIViewTintAdjustmentMode.Dimmed;  			});
Magic Number,TicTacToe,TTTNewMessageViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTNewMessageViewController.cs,close,The following statement contains a magic number: UIView.Animate (0.3f' delegate {  				View.Alpha = 0f;  				currentMessageSourceWindow.TintAdjustmentMode = UIViewTintAdjustmentMode.Automatic;  			}'  			                delegate {  				currentMessageWindow = null;  				currentMessageSourceWindow.MakeKeyAndVisible ();  			});
Magic Number,TicTacToe,TTTProfileViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTProfileViewController.cs,RowsInSection,The following statement contains a magic number: switch (section) {  			case (int)Section.Icon:  			case (int)Section.History:  				return 1;  			case (int)Section.Statistics:  				return 3;  			}
Magic Number,TicTacToe,TTTProfileViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTProfileViewController.cs,WillDisplay,The following statement contains a magic number: switch (section) {  			case (int)Section.Icon:  				if (iconCell == null) {  					iconCell = (TTTProfileIconTableViewCell)cell;  					iconCell.SegmentedControl.ValueChanged += ChangeIcon;  				}    				iconCell.SelectionStyle = UITableViewCellSelectionStyle.None;  				iconCell.SegmentedControl.SelectedSegment = (int)Profile.Icon;  				break;  			case (int)Section.Statistics:  				cell.SelectionStyle = UITableViewCellSelectionStyle.None;  				if (row == 0) {  					cell.TextLabel.Text = "Victories";  					cell.ImageView.Image = UIImage.FromBundle ("victory").  						ImageWithRenderingMode (UIImageRenderingMode.AlwaysTemplate);  					((TTTProfileStatisticsTableViewCell)cell).CountView.Count =  						Profile.NumberOfGamesWithResult (TTTGameResult.Victory);  				} else if (row == 1) {  					cell.TextLabel.Text = "Defeats";  					cell.ImageView.Image = UIImage.FromBundle ("defeat").  						ImageWithRenderingMode (UIImageRenderingMode.AlwaysTemplate);  					((TTTProfileStatisticsTableViewCell)cell).CountView.Count =  						Profile.NumberOfGamesWithResult (TTTGameResult.Defeat);  				} else if (row == 2) {  					cell.TextLabel.Text = "Draws";  					cell.ImageView.Image = UIImage.FromBundle ("draw").  						ImageWithRenderingMode (UIImageRenderingMode.AlwaysTemplate);  					((TTTProfileStatisticsTableViewCell)cell).CountView.Count =  						Profile.NumberOfGamesWithResult (TTTGameResult.Draw);  				}  				break;  			case (int)Section.History:  				cell.TextLabel.Text = "Show History";  				cell.TextLabel.TextAlignment = UITextAlignment.Center;  				break;  			}
Magic Number,TicTacToe,TTTProfileViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTProfileViewController.cs,GetHeightForRow,The following statement contains a magic number: return 100f;
Magic Number,TicTacToe,TTTProfileIconTableViewCell,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTProfileViewController.cs,TTTProfileIconTableViewCell,The following statement contains a magic number: SegmentedControl = new UISegmentedControl (new object[] { x' o }) {  				Frame = new CGRect (UIScreen.MainScreen.Bounds.Width / 2 - 120' 0' 240' 80)'  				AutoresizingMask = UIViewAutoresizing.FlexibleTopMargin |  					UIViewAutoresizing.FlexibleBottomMargin  			};
Magic Number,TicTacToe,TTTProfileIconTableViewCell,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTProfileViewController.cs,TTTProfileIconTableViewCell,The following statement contains a magic number: SegmentedControl = new UISegmentedControl (new object[] { x' o }) {  				Frame = new CGRect (UIScreen.MainScreen.Bounds.Width / 2 - 120' 0' 240' 80)'  				AutoresizingMask = UIViewAutoresizing.FlexibleTopMargin |  					UIViewAutoresizing.FlexibleBottomMargin  			};
Magic Number,TicTacToe,TTTProfileIconTableViewCell,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTProfileViewController.cs,TTTProfileIconTableViewCell,The following statement contains a magic number: SegmentedControl = new UISegmentedControl (new object[] { x' o }) {  				Frame = new CGRect (UIScreen.MainScreen.Bounds.Width / 2 - 120' 0' 240' 80)'  				AutoresizingMask = UIViewAutoresizing.FlexibleTopMargin |  					UIViewAutoresizing.FlexibleBottomMargin  			};
Magic Number,TicTacToe,TTTProfileIconTableViewCell,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTProfileViewController.cs,TTTProfileIconTableViewCell,The following statement contains a magic number: SegmentedControl = new UISegmentedControl (new object[] { x' o }) {  				Frame = new CGRect (UIScreen.MainScreen.Bounds.Width / 2 - 120' 0' 240' 80)'  				AutoresizingMask = UIViewAutoresizing.FlexibleTopMargin |  					UIViewAutoresizing.FlexibleBottomMargin  			};
Magic Number,TicTacToe,TTTProfileIconTableViewCell,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTProfileViewController.cs,TTTProfileIconTableViewCell,The following statement contains a magic number: UIEdgeInsets capInsets = new UIEdgeInsets (6f' 6f' 6f' 6f);
Magic Number,TicTacToe,TTTProfileIconTableViewCell,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTProfileViewController.cs,TTTProfileIconTableViewCell,The following statement contains a magic number: UIEdgeInsets capInsets = new UIEdgeInsets (6f' 6f' 6f' 6f);
Magic Number,TicTacToe,TTTProfileIconTableViewCell,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTProfileViewController.cs,TTTProfileIconTableViewCell,The following statement contains a magic number: UIEdgeInsets capInsets = new UIEdgeInsets (6f' 6f' 6f' 6f);
Magic Number,TicTacToe,TTTProfileIconTableViewCell,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTProfileViewController.cs,TTTProfileIconTableViewCell,The following statement contains a magic number: UIEdgeInsets capInsets = new UIEdgeInsets (6f' 6f' 6f' 6f);
Magic Number,TicTacToe,TTTProfileStatisticsTableViewCell,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTProfileViewController.cs,TTTProfileStatisticsTableViewCell,The following statement contains a magic number: CountView = new TTTCountView (new CGRect (0' 0' 160' 20));
Magic Number,TicTacToe,TTTProfileStatisticsTableViewCell,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTProfileViewController.cs,TTTProfileStatisticsTableViewCell,The following statement contains a magic number: CountView = new TTTCountView (new CGRect (0' 0' 160' 20));
Magic Number,TicTacToe,TTTGameHistoryViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTGameHistoryViewController.cs,TTTGameHistoryViewController,The following statement contains a magic number: ratingControl = new TTTRatingControl (new CGRect (0' 0' 150' 30));
Magic Number,TicTacToe,TTTGameHistoryViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTGameHistoryViewController.cs,TTTGameHistoryViewController,The following statement contains a magic number: ratingControl = new TTTRatingControl (new CGRect (0' 0' 150' 30));
Missing Default,TicTacToe,TTTProfileViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTProfileViewController.cs,RowsInSection,The following switch statement is missing a default case: switch (section) {  			case (int)Section.Icon:  			case (int)Section.History:  				return 1;  			case (int)Section.Statistics:  				return 3;  			}
Missing Default,TicTacToe,TTTProfileViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTProfileViewController.cs,GetCell,The following switch statement is missing a default case: switch (indexPath.Section) {  			case (int)Section.Icon:  				return tableView.DequeueReusableCell (IconIdentifier' indexPath);  			case (int)Section.Statistics:  				return tableView.DequeueReusableCell (StatisticsIdentifier' indexPath);  			case (int)Section.History:  				return tableView.DequeueReusableCell (HistoryIdentifier' indexPath);  			}
Missing Default,TicTacToe,TTTProfileViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\TicTacToe\TicTacToe\Controller\TTTProfileViewController.cs,WillDisplay,The following switch statement is missing a default case: switch (section) {  			case (int)Section.Icon:  				if (iconCell == null) {  					iconCell = (TTTProfileIconTableViewCell)cell;  					iconCell.SegmentedControl.ValueChanged += ChangeIcon;  				}    				iconCell.SelectionStyle = UITableViewCellSelectionStyle.None;  				iconCell.SegmentedControl.SelectedSegment = (int)Profile.Icon;  				break;  			case (int)Section.Statistics:  				cell.SelectionStyle = UITableViewCellSelectionStyle.None;  				if (row == 0) {  					cell.TextLabel.Text = "Victories";  					cell.ImageView.Image = UIImage.FromBundle ("victory").  						ImageWithRenderingMode (UIImageRenderingMode.AlwaysTemplate);  					((TTTProfileStatisticsTableViewCell)cell).CountView.Count =  						Profile.NumberOfGamesWithResult (TTTGameResult.Victory);  				} else if (row == 1) {  					cell.TextLabel.Text = "Defeats";  					cell.ImageView.Image = UIImage.FromBundle ("defeat").  						ImageWithRenderingMode (UIImageRenderingMode.AlwaysTemplate);  					((TTTProfileStatisticsTableViewCell)cell).CountView.Count =  						Profile.NumberOfGamesWithResult (TTTGameResult.Defeat);  				} else if (row == 2) {  					cell.TextLabel.Text = "Draws";  					cell.ImageView.Image = UIImage.FromBundle ("draw").  						ImageWithRenderingMode (UIImageRenderingMode.AlwaysTemplate);  					((TTTProfileStatisticsTableViewCell)cell).CountView.Count =  						Profile.NumberOfGamesWithResult (TTTGameResult.Draw);  				}  				break;  			case (int)Section.History:  				cell.TextLabel.Text = "Show History";  				cell.TextLabel.TextAlignment = UITextAlignment.Center;  				break;  			}
