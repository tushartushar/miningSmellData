Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ARKitAudio,Utilities,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\Extensions\Utilities.cs,WorldPositionFromScreenPosition,Cyclomatic complexity of the method is 8
Long Parameter List,ARKitAudio,ARSCNViewExtensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\Extensions\ARSCNViewExtensions.cs,HitTestWithFeatures,The method has 6 parameters. Parameters: view' point' coneOpeningAngleInDegrees' minDistance' maxDistance' maxResults
Long Identifier,ARKitAudio,ARSCNViewExtensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\Extensions\ARSCNViewExtensions.cs,HitTestRayFromScreenPosition,The length of the parameter screenPositionOnFarClippingPlane is 32.
Long Identifier,ARKitAudio,Utilities,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\Extensions\Utilities.cs,WorldPositionFromScreenPosition,The length of the parameter highQualityFeatureHitTestResult is 31.
Long Identifier,ARKitAudio,Utilities,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\Extensions\Utilities.cs,WorldPositionFromScreenPosition,The length of the parameter highQualityfeatureHitTestResults is 32.
Long Identifier,ARKitAudio,Utilities,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\Extensions\Utilities.cs,WorldPositionFromScreenPosition,The length of the parameter unfilteredFeatureHitTestResults is 31.
Long Statement,ARKitAudio,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\ViewController.cs,ResetTracking,The length of the statement  "            this.sceneView.Session.Run(configuration' ARSessionRunOptions.ResetTracking | ARSessionRunOptions.RemoveExistingAnchors); " is 121.
Long Statement,ARKitAudio,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\ViewController.cs,UpdatePreviewNode,The length of the statement  "                var (worldPosition' planeAnchor' _) = Utilities.WorldPositionFromScreenPosition(this.screenCenter' this.sceneView' this.previewNode.Position); " is 142.
Magic Number,ARKitAudio,PreviewNode,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\PreviewNode.cs,PreviewNode,The following statement contains a magic number: this.Opacity = 0.5f;
Magic Number,ARKitAudio,PreviewNode,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\PreviewNode.cs,UpdateTransform,The following statement contains a magic number: this.recentPreviewNodePositions.KeepLast(8);
Magic Number,ARKitAudio,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\ViewController.cs,ViewDidLoad,The following statement contains a magic number: this.sceneView.ContentScaleFactor = 1.3f;
Magic Number,ARKitAudio,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\ViewController.cs,ViewWillTransitionToSize,The following statement contains a magic number: this.screenCenter = new CGPoint(toSize.Width / 2f' toSize.Height / 2f);
Magic Number,ARKitAudio,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\ViewController.cs,ViewWillTransitionToSize,The following statement contains a magic number: this.screenCenter = new CGPoint(toSize.Width / 2f' toSize.Height / 2f);
Magic Number,ARKitAudio,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\ViewController.cs,UpdateLightEstimate,The following statement contains a magic number: this.sceneView.Scene.LightingEnvironment.Intensity = lightEstimate.AmbientIntensity / 40f;
Magic Number,ARKitAudio,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\ViewController.cs,SetNewVirtualObjectToAnchor,The following statement contains a magic number: cameraToPosition *= 10f;
Magic Number,ARKitAudio,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\ViewController.cs,SetNewVirtualObjectToAnchor,The following statement contains a magic number: cameraToPosition.Length > 10f
Magic Number,ARKitAudio,ARSCNViewExtensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\Extensions\ARSCNViewExtensions.cs,HitTestWithInfiniteHorizontalPlane,The following statement contains a magic number: ray.Value.Direction.Y <= -0.03f
Magic Number,ARKitAudio,ARSCNViewExtensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\Extensions\ARSCNViewExtensions.cs,HitTestWithFeatures,The following statement contains a magic number: var maxAngleInDegrees = Math.Min(coneOpeningAngleInDegrees' 360f) / 2f;
Magic Number,ARKitAudio,ARSCNViewExtensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\Extensions\ARSCNViewExtensions.cs,HitTestWithFeatures,The following statement contains a magic number: var maxAngleInDegrees = Math.Min(coneOpeningAngleInDegrees' 360f) / 2f;
Magic Number,ARKitAudio,ARSCNViewExtensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\Extensions\ARSCNViewExtensions.cs,HitTestWithFeatures,The following statement contains a magic number: var maxAngle = (maxAngleInDegrees / 180f) * Math.PI;
Magic Number,ARKitAudio,Utilities,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\Extensions\Utilities.cs,WorldPositionFromScreenPosition,The following statement contains a magic number: var highQualityfeatureHitTestResults = sceneView.HitTestWithFeatures(position' 18f' 0.2f' 2f);
Magic Number,ARKitAudio,Utilities,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\Extensions\Utilities.cs,WorldPositionFromScreenPosition,The following statement contains a magic number: var highQualityfeatureHitTestResults = sceneView.HitTestWithFeatures(position' 18f' 0.2f' 2f);
Magic Number,ARKitAudio,Utilities,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\Extensions\Utilities.cs,WorldPositionFromScreenPosition,The following statement contains a magic number: var highQualityfeatureHitTestResults = sceneView.HitTestWithFeatures(position' 18f' 0.2f' 2f);
Missing Default,ARKitAudio,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\ViewController.cs,CameraDidChangeTrackingState,The following switch statement is missing a default case: switch (camera.TrackingState)              {                  case ARTrackingState.NotAvailable:                      message = "Tracking unavailable";                      break;                    case ARTrackingState.Limited:                      switch (camera.TrackingStateReason)                      {                          case ARTrackingStateReason.ExcessiveMotion:                              message = "Tracking limited - Too much camera movement";                              break;                          case ARTrackingStateReason.InsufficientFeatures:                              message = "Tracking limited - Not enough surface detail";                              break;                          case ARTrackingStateReason.Initializing:                              message = "Initializing AR Session";                              break;                      }                      break;                    case ARTrackingState.Normal:                      message = "Tracking normal";                      break;              }
Missing Default,ARKitAudio,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\ARKitAudio\ARKitAudio\ViewController.cs,CameraDidChangeTrackingState,The following switch statement is missing a default case: switch (camera.TrackingStateReason)                      {                          case ARTrackingStateReason.ExcessiveMotion:                              message = "Tracking limited - Too much camera movement";                              break;                          case ARTrackingStateReason.InsufficientFeatures:                              message = "Tracking limited - Not enough surface detail";                              break;                          case ARTrackingStateReason.Initializing:                              message = "Initializing AR Session";                              break;                      }
