Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PhotoProgress,PhotosViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios9\PhotoProgress\PhotoProgress\ViewControllers\PhotosViewController.cs,ReleaseDesignerOutlets,Cyclomatic complexity of the method is 8
Long Statement,PhotoProgress,PhotoCollectionViewCell,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios9\PhotoProgress\PhotoProgress\ViewControllers\PhotoCollectionViewCell.cs,UpdateImageView,The length of the statement  "			NSOperationQueue.MainQueue.AddOperation (() => UIView.Transition (ImageView' 0.5' UIViewAnimationOptions.TransitionCrossDissolve' () => { " is 137.
Long Statement,PhotoProgress,PhotoDownload,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios9\PhotoProgress\PhotoProgress\Album\Operations\PhotoDownload.cs,Start,The length of the statement  "					var delay = new DispatchTime (DispatchTime.Now' (long)(TimerInterval * NanosecondsPerSecond - randomMilliseconds * NanosecondsPerMillisecond)); " is 143.
Magic Number,PhotoProgress,PhotoCollectionViewCell,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios9\PhotoProgress\PhotoProgress\ViewControllers\PhotoCollectionViewCell.cs,UpdateImageView,The following statement contains a magic number: NSOperationQueue.MainQueue.AddOperation (() => UIView.Transition (ImageView' 0.5' UIViewAnimationOptions.TransitionCrossDissolve' () => {  				ImageView.Image = Photo.Image;  			}' null));
Magic Number,PhotoProgress,PhotosViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios9\PhotoProgress\PhotoProgress\ViewControllers\PhotosViewController.cs,UpdateProgressView,The following statement contains a magic number: UIView.Animate (0.2' () => {  					ProgressContainerView.Alpha = shouldHide ? 0 : 1;  				});
Magic Number,PhotoProgress,PhotoImport,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios9\PhotoProgress\PhotoProgress\Album\Operations\PhotoImport.cs,PhotoImport,The following statement contains a magic number: progress = new PhotoProgress {  				TotalUnitCount = 10  			};
Magic Number,PhotoProgress,PhotoImport,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios9\PhotoProgress\PhotoProgress\Album\Operations\PhotoImport.cs,Start,The following statement contains a magic number: progress.AddChild (download.Progress' 9);
Magic Number,PhotoProgress,PhotoDownload,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios9\PhotoProgress\PhotoProgress\Album\Operations\PhotoDownload.cs,Start,The following statement contains a magic number: downloadState.Queue.DispatchAsync (() => {  				try {  					var data = NSData.FromUrl (downloadURL);    					downloadState.DownloadTimer = new DispatchSource.Timer (downloadState.Queue);  					int downloadedBytes = 0;  					int randomMilliseconds = new Random ().Next (0' 500);  					var delay = new DispatchTime (DispatchTime.Now' (long)(TimerInterval * NanosecondsPerSecond - randomMilliseconds * NanosecondsPerMillisecond));  					downloadState.DownloadTimer.SetTimer (delay' (long)TimerInterval * NanosecondsPerSecond' 0);    					downloadState.DownloadTimer.SetEventHandler (() => {  						downloadedBytes += (int)(BatchSize * TimerInterval);    						if (downloadedBytes >= (int)data.Length) {  							downloadState.DownloadTimer.Cancel ();  							return;  						}    						DidDownloadData (downloadedBytes);  					});    					downloadState.DownloadTimer.SetCancelHandler (() => {  						if (downloadedBytes >= (int)data.Length)  							DidFinishDownload (data);  						else  							DidFailDownloadWithError (downloadState.DownloadError);    						downloadState.DownloadTimer = null;  					});    					WillBeginDownload ((int)data.Length);  					downloadState.DownloadTimer.Resume ();  				} catch (Exception) {  					var error = new NSError (NSError.CocoaErrorDomain' 0' null);  					DidFailDownloadWithError (error);  				}  			});
Missing Default,PhotoProgress,PhotoProgress,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios9\PhotoProgress\PhotoProgress\Album\Operations\PhotoProgress.cs,WillChangeValue,The following switch statement is missing a default case: switch (forKey) {  			case "fractionCompleted":  				FractionCompletedChanged?.Invoke (null' null);  				break;  			case "completedUnitCount":  				CompletedUnitCountChanged?.Invoke (null' null);  				break;  			case "totalUnitCount":  				TotalUnitCountChanged?.Invoke (null' null);  				break;  			}
