Implementation smell,Namespace,Class,File,Method,Description
Long Method,CustomTransitions,CheckboardTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Checkboard\CheckboardTransitionAnimator.cs,AnimateTransition,The method has 117 lines of code.
Long Identifier,CustomTransitions,SwipeFirstViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Swipe\SwipeFirstViewController.cs,ViewDidLoad,The length of the parameter interactiveTransitionRecognizer is 31.
Long Identifier,CustomTransitions,SwipeSecondViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Swipe\SwipeSecondViewController.cs,ViewDidLoad,The length of the parameter interactiveTransitionRecognizer is 31.
Long Identifier,CustomTransitions,CheckboardFirstViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Checkboard\CheckboardFirstViewController.cs,GetAnimationControllerForOperation,The length of the parameter animationControllerForOperation is 31.
Long Identifier,CustomTransitions,CustomPresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\CustomPresentation\CustomPresentationController.cs,PresentationTransitionWillBegin,The length of the parameter presentedViewControllerWrapperView is 34.
Long Identifier,CustomTransitions,SlideTransitionInteractionController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Slide\SlideTransitionInteractionController.cs,,The length of the parameter initialTranslationInContainerView is 33.
Long Statement,CustomTransitions,SwipeFirstViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Swipe\SwipeFirstViewController.cs,ViewDidLoad,The length of the statement  "			interactiveTransitionRecognizer.AddTarget (() => InteractiveTransitionRecognizerAction(interactiveTransitionRecognizer)); " is 121.
Long Statement,CustomTransitions,SwipeSecondViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Swipe\SwipeSecondViewController.cs,ViewDidLoad,The length of the statement  "			interactiveTransitionRecognizer.AddTarget (() => InteractiveTransitionRecognizerAction (interactiveTransitionRecognizer)); " is 122.
Long Statement,CustomTransitions,SwipeTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Swipe\SwipeTransitionAnimator.cs,AnimateTransition,The length of the statement  "				toView.Frame = new CGRect (toFrame.X + (toFrame.Size.Width * offset.dx * -1)' toFrame.Y + (toFrame.Size.Height * offset.dy * -1)' toFrame.Size.Width' toFrame.Size.Height); " is 171.
Long Statement,CustomTransitions,SwipeTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Swipe\SwipeTransitionAnimator.cs,AnimateTransition,The length of the statement  "					toFrame : new CGRect (fromFrame.X + (fromFrame.Size.Width * offset.dx)' fromFrame.Y + (fromFrame.Size.Height * offset.dy)' fromFrame.Size.Width' fromFrame.Size.Height); " is 168.
Long Statement,CustomTransitions,CustomPresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\CustomPresentation\CustomPresentationController.cs,PresentationTransitionWillBegin,The length of the statement  "			var presentationRoundedCornerView = new UIView (UIEdgeInsetsInsetRect (presentationWrapperView.Bounds' new UIEdgeInsets (0F' 0F' -cornerRadius' 0))); " is 149.
Long Statement,CustomTransitions,CustomPresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\CustomPresentation\CustomPresentationController.cs,PresentationTransitionWillBegin,The length of the statement  "			var presentedViewControllerWrapperView = new UIView (UIEdgeInsetsInsetRect (presentationRoundedCornerView.Bounds' new UIEdgeInsets (0F' 0F' cornerRadius' 0F))); " is 160.
Long Statement,CustomTransitions,CustomPresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\CustomPresentation\CustomPresentationController.cs,PresentationTransitionWillBegin,The length of the statement  "			presentedViewControllerWrapperView.AutoresizingMask = (UIViewAutoresizing.FlexibleWidth | UIViewAutoresizing.FlexibleHeight); " is 125.
Long Statement,CustomTransitions,CustomPresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\CustomPresentation\CustomPresentationController.cs,AnimateTransition,The length of the statement  "				fromViewFinalFrame = new CGRect (fromView.Frame.X' fromView.Frame.Y + fromView.Frame.Height' fromViewFinalFrame.Width' fromViewFinalFrame.Height); " is 146.
Long Statement,CustomTransitions,AdaptivePresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\AdaptivePresentation\AdaptivePresentationController.cs,PresentationTransitionWillBegin,The length of the statement  "			dismissButtonAux.AddTarget ((object sender' System.EventArgs e) => DismissButtonTapped (dismissButtonAux)' UIControlEvent.TouchUpInside); " is 137.
Long Statement,CustomTransitions,AdaptivePresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\AdaptivePresentation\AdaptivePresentationController.cs,ContainerViewWillLayoutSubviews,The length of the statement  "			dismissButton.Center = new CGPoint (PresentedViewController.View.Frame.GetMinX ()' PresentedViewController.View.Frame.GetMinY ()); " is 130.
Long Statement,CustomTransitions,SlideTransitionDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Slide\SlideTransitionDelegate.cs,GetInteractionControllerForAnimationController,The length of the statement  "			if (PanGestureRecognizer.State == UIGestureRecognizerState.Began || PanGestureRecognizer.State == UIGestureRecognizerState.Changed) " is 131.
Long Statement,CustomTransitions,CheckboardTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Checkboard\CheckboardTransitionAnimator.cs,AnimateTransition,The length of the statement  "			bool isPush = Array.IndexOf (toViewController.NavigationController.ViewControllers' toViewController) > Array.IndexOf (fromViewController.NavigationController.ViewControllers' fromViewController); " is 196.
Long Statement,CustomTransitions,CheckboardTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Checkboard\CheckboardTransitionAnimator.cs,AnimateTransition,The length of the statement  "			var transitionVectorLength = (nfloat)Math.Sqrt (transitionVector.dx * transitionVector.dx + transitionVector.dy * transitionVector.dy); " is 135.
Long Statement,CustomTransitions,CheckboardTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Checkboard\CheckboardTransitionAnimator.cs,AnimateTransition,The length of the statement  "			var transitionUnitVector = new CGVector (transitionVector.dx / transitionVectorLength' transitionVector.dy / new nfloat(transitionVectorLength)); " is 145.
Long Statement,CustomTransitions,CheckboardTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Checkboard\CheckboardTransitionAnimator.cs,AnimateTransition,The length of the statement  "					toContentLayer.Frame = new CGRect (x * sliceSize * -1f' y * sliceSize * -1f' containerView.Bounds.Width' containerView.Bounds.Height); " is 134.
Long Statement,CustomTransitions,CheckboardTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Checkboard\CheckboardTransitionAnimator.cs,AnimateTransition,The length of the statement  "						sliceOriginVector = new CGVector (fromCheckboardSquareView.Frame.GetMinX () - transitionContainer.Bounds.GetMinX ()' fromCheckboardSquareView.Frame.GetMinY () - transitionContainer.Bounds.GetMinY ()); " is 200.
Long Statement,CustomTransitions,CheckboardTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Checkboard\CheckboardTransitionAnimator.cs,AnimateTransition,The length of the statement  "						sliceOriginVector = new CGVector (fromCheckboardSquareView.Frame.GetMaxX () - transitionContainer.Bounds.GetMaxX ()' fromCheckboardSquareView.Frame.GetMaxY () - transitionContainer.Bounds.GetMaxY ()); " is 200.
Long Statement,CustomTransitions,CheckboardTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Checkboard\CheckboardTransitionAnimator.cs,AnimateTransition,The length of the statement  "					var projection = new CGVector (transitionUnitVector.dx * dot / transitionVectorLength' transitionUnitVector.dy * dot / transitionVectorLength); " is 143.
Long Statement,CustomTransitions,CheckboardTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Checkboard\CheckboardTransitionAnimator.cs,AnimateTransition,The length of the statement  "					double duration = ((projectionLength + transitionSpacing) / (transitionVectorLength + transitionSpacing) * transitionDuration) - startTime; " is 139.
Complex Conditional,CustomTransitions,SlideTransitionInteractionController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Slide\SlideTransitionInteractionController.cs,PercentForGesture,The conditional expression  "translationInContainerView.X > 0f && initialTranslationInContainerView.X < 0f  				&& translationInContainerView.X < 0f && initialTranslationInContainerView.X > 0f"  is complex.
Magic Number,CustomTransitions,CrossDissolveTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\CrossDissolve\CrossDissolveTransitionAnimator.cs,TransitionDuration,The following statement contains a magic number: return 0.35;
Magic Number,CustomTransitions,CPSecondViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\CustomPresentation\CPSecondViewController.cs,UpdatePreferredContentSizeWithTraitCollection,The following statement contains a magic number: float sizeHeigt = traitCollection.VerticalSizeClass == UIUserInterfaceSizeClass.Compact ? 270f : 420f;
Magic Number,CustomTransitions,CPSecondViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\CustomPresentation\CPSecondViewController.cs,UpdatePreferredContentSizeWithTraitCollection,The following statement contains a magic number: float sizeHeigt = traitCollection.VerticalSizeClass == UIUserInterfaceSizeClass.Compact ? 270f : 420f;
Magic Number,CustomTransitions,CPSecondViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\CustomPresentation\CPSecondViewController.cs,UpdatePreferredContentSizeWithTraitCollection,The following statement contains a magic number: slider.MinValue = 220f;
Magic Number,CustomTransitions,SwipeTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Swipe\SwipeTransitionAnimator.cs,TransitionDuration,The following statement contains a magic number: return 0.35;
Magic Number,CustomTransitions,SwipeTransitionInteractionController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Swipe\SwipeTransitionInteractionController.cs,GestureRecognizeDidUpdate,The following statement contains a magic number: switch (sender.State) {  				case UIGestureRecognizerState.Changed:  					UpdateInteractiveTransition (PercentForGesture (sender));  					break;  				case UIGestureRecognizerState.Ended:  					if (PercentForGesture (sender) >= 0.5)  						FinishInteractiveTransition ();  					else  						CancelInteractiveTransition ();  					break;  				default:  					CancelInteractiveTransition ();  					break;  			}
Magic Number,CustomTransitions,CustomPresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\CustomPresentation\CustomPresentationController.cs,CustomPresentationController,The following statement contains a magic number: cornerRadius = 16f;
Magic Number,CustomTransitions,CustomPresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\CustomPresentation\CustomPresentationController.cs,PresentationTransitionWillBegin,The following statement contains a magic number: presentationWrapperView.Layer.ShadowOpacity = .44f;
Magic Number,CustomTransitions,CustomPresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\CustomPresentation\CustomPresentationController.cs,PresentationTransitionWillBegin,The following statement contains a magic number: presentationWrapperView.Layer.ShadowRadius = 13f;
Magic Number,CustomTransitions,CustomPresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\CustomPresentation\CustomPresentationController.cs,PresentationTransitionWillBegin,The following statement contains a magic number: presentationWrapperView.Layer.ShadowOffset = new CGSize (0f' -6f);
Magic Number,CustomTransitions,CustomPresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\CustomPresentation\CustomPresentationController.cs,PresentationTransitionWillBegin,The following statement contains a magic number: transitionCoordinator.AnimateAlongsideTransition ((obj) => dimmingView.Alpha = .5f' (obj) => {});
Magic Number,CustomTransitions,CustomPresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\CustomPresentation\CustomPresentationController.cs,TransitionDuration,The following statement contains a magic number: return transitionContext.IsAnimated ? 0.35 : 0;
Magic Number,CustomTransitions,AdaptivePresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\AdaptivePresentation\AdaptivePresentationController.cs,PresentationTransitionWillBegin,The following statement contains a magic number: presentationWrapperView.Layer.ShadowOpacity = .63f;
Magic Number,CustomTransitions,AdaptivePresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\AdaptivePresentation\AdaptivePresentationController.cs,PresentationTransitionWillBegin,The following statement contains a magic number: presentationWrapperView.Layer.ShadowRadius = 17f;
Magic Number,CustomTransitions,AdaptivePresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\AdaptivePresentation\AdaptivePresentationController.cs,PresentationTransitionWillBegin,The following statement contains a magic number: var dismissButtonAux = new UIButton (UIButtonType.Custom) {  				Frame = new CGRect (0f' 0f' 26f' 26f)  			};
Magic Number,CustomTransitions,AdaptivePresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\AdaptivePresentation\AdaptivePresentationController.cs,PresentationTransitionWillBegin,The following statement contains a magic number: var dismissButtonAux = new UIButton (UIButtonType.Custom) {  				Frame = new CGRect (0f' 0f' 26f' 26f)  			};
Magic Number,CustomTransitions,AdaptivePresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\AdaptivePresentation\AdaptivePresentationController.cs,ViewWillTransitionToSize,The following statement contains a magic number: coordinator.AnimateAlongsideTransition ((obj) => {}' (obj) => {  				presentationWrappingView.ClipsToBounds = false;  				presentationWrappingView.Layer.ShadowOpacity = .63f;  				presentationWrappingView.Layer.ShadowRadius = 17f;  			});
Magic Number,CustomTransitions,AdaptivePresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\AdaptivePresentation\AdaptivePresentationController.cs,ViewWillTransitionToSize,The following statement contains a magic number: coordinator.AnimateAlongsideTransition ((obj) => {}' (obj) => {  				presentationWrappingView.ClipsToBounds = false;  				presentationWrappingView.Layer.ShadowOpacity = .63f;  				presentationWrappingView.Layer.ShadowRadius = 17f;  			});
Magic Number,CustomTransitions,AdaptivePresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\AdaptivePresentation\AdaptivePresentationController.cs,GetSizeForChildContentContainer,The following statement contains a magic number: return new CGSize (parentContainerSize.Width / 2f' parentContainerSize.Height / 2f);
Magic Number,CustomTransitions,AdaptivePresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\AdaptivePresentation\AdaptivePresentationController.cs,GetSizeForChildContentContainer,The following statement contains a magic number: return new CGSize (parentContainerSize.Width / 2f' parentContainerSize.Height / 2f);
Magic Number,CustomTransitions,AdaptivePresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\AdaptivePresentation\AdaptivePresentationController.cs,ContainerViewWillLayoutSubviews,The following statement contains a magic number: PresentedViewController.View.Frame = presentationWrappingView.Bounds.Inset (20f' 20f);
Magic Number,CustomTransitions,AdaptivePresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\AdaptivePresentation\AdaptivePresentationController.cs,ContainerViewWillLayoutSubviews,The following statement contains a magic number: PresentedViewController.View.Frame = presentationWrappingView.Bounds.Inset (20f' 20f);
Magic Number,CustomTransitions,AdaptivePresentationController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\AdaptivePresentation\AdaptivePresentationController.cs,TransitionDuration,The following statement contains a magic number: return transitionContext.IsAnimated ? 0 : 0.35;
Magic Number,CustomTransitions,SlideTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Slide\SlideTransitionAnimator.cs,TransitionDuration,The following statement contains a magic number: return 0.35;
Magic Number,CustomTransitions,SlideTransitionInteractionController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Slide\SlideTransitionInteractionController.cs,GestureRecognizeDidUpdate,The following statement contains a magic number: switch (sender.State) {  				case UIGestureRecognizerState.Changed:  					if (PercentForGesture(sender) < 0f)  						CancelInteractiveTransition ();  					else  						UpdateInteractiveTransition (PercentForGesture (sender));  					break;  				case UIGestureRecognizerState.Ended:  					if (PercentForGesture(gestureRecognizer) >= .4f) {  						FinishInteractiveTransition ();  					} else {  						CancelInteractiveTransition ();  					}  					break;  				default:  					CancelInteractiveTransition ();  					break;  			}
Magic Number,CustomTransitions,CheckboardTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Checkboard\CheckboardTransitionAnimator.cs,TransitionDuration,The following statement contains a magic number: return 3.0;
Magic Number,CustomTransitions,CheckboardTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Checkboard\CheckboardTransitionAnimator.cs,AnimateTransition,The following statement contains a magic number: t.m34 = 1f / -900f;
Magic Number,CustomTransitions,CheckboardTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Checkboard\CheckboardTransitionAnimator.cs,AnimateTransition,The following statement contains a magic number: var sliceSize = Math.Round (transitionContainer.Frame.Width / 10f);
Magic Number,CustomTransitions,CheckboardTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Checkboard\CheckboardTransitionAnimator.cs,AnimateTransition,The following statement contains a magic number: float transitionSpacing = 160f;
Magic Number,CustomTransitions,CheckboardTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Checkboard\CheckboardTransitionAnimator.cs,AnimateTransition,The following statement contains a magic number: double toIndex = y * horizontalSileces * 2f + (x * 2);
Magic Number,CustomTransitions,CheckboardTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Checkboard\CheckboardTransitionAnimator.cs,AnimateTransition,The following statement contains a magic number: double toIndex = y * horizontalSileces * 2f + (x * 2);
Magic Number,CustomTransitions,CheckboardTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Checkboard\CheckboardTransitionAnimator.cs,AnimateTransition,The following statement contains a magic number: double fromIndex = y * horizontalSileces * 2f + (x * 2 + 1);
Magic Number,CustomTransitions,CheckboardTransitionAnimator,D:\research\architectureSmells\repos\xamarin_monotouch-samples\CustomTransitions\CustomTransitions\Checkboard\CheckboardTransitionAnimator.cs,AnimateTransition,The following statement contains a magic number: double fromIndex = y * horizontalSileces * 2f + (x * 2 + 1);
