Implementation smell,Namespace,Class,File,Method,Description
Magic Number,WatchPuzzle.WatchKitAppExtension,GameNodes,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,GameNodes,The following statement contains a magic number: CongratulationsLabel = new SKLabelNode ("Chalkduster") {  				FontColor = GameColors.DefaultFont'  				Text = "You Win!"'  				FontSize = 45  			};
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,StartGame,The following statement contains a magic number: var startSequence = SCNAction.Sequence (new SCNAction [] {  					// Wait for 1 second.  					SCNAction.Wait (1)'  					SCNAction.Group (new SCNAction[] {  						SCNAction.FadeIn (0.3)'    						// Start the game.  						SCNAction.Run (node => {  							if (!gameNodes.HasValue)  								return;  							var gNodes = gameNodes.Value;    							var rnd = new Random ();    							// Compute a random orientation for the object3D.  							var theta = (float)(Math.PI * rnd.NextDouble ());  							var phi = (float) (Math.Acos (2 * rnd.NextDouble () - 1) / NMath.PI);    							var axis = new Vector3 {  								X = (float)(Math.Cos (theta) * Math.Sin (phi))'  								Y = (float)(Math.Sin (theta) * Math.Sin (phi))'  								Z = (float)Math.Cos (theta)  							};  							var angle = (float)(2 * Math.PI * rnd.NextDouble());    							SCNTransaction.Begin ();  							SCNTransaction.AnimationDuration = 0.3;  							SCNTransaction.SetCompletionBlock (() => gameStarted = true);    							gNodes.ObjectMaterial.Transparency = 1;  							gNodes.Object.Transform = SCNMatrix4.CreateFromAxisAngle (axis' angle);    							SCNTransaction.Commit ();  						})  					})  				});
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,StartGame,The following statement contains a magic number: var startSequence = SCNAction.Sequence (new SCNAction [] {  					// Wait for 1 second.  					SCNAction.Wait (1)'  					SCNAction.Group (new SCNAction[] {  						SCNAction.FadeIn (0.3)'    						// Start the game.  						SCNAction.Run (node => {  							if (!gameNodes.HasValue)  								return;  							var gNodes = gameNodes.Value;    							var rnd = new Random ();    							// Compute a random orientation for the object3D.  							var theta = (float)(Math.PI * rnd.NextDouble ());  							var phi = (float) (Math.Acos (2 * rnd.NextDouble () - 1) / NMath.PI);    							var axis = new Vector3 {  								X = (float)(Math.Cos (theta) * Math.Sin (phi))'  								Y = (float)(Math.Sin (theta) * Math.Sin (phi))'  								Z = (float)Math.Cos (theta)  							};  							var angle = (float)(2 * Math.PI * rnd.NextDouble());    							SCNTransaction.Begin ();  							SCNTransaction.AnimationDuration = 0.3;  							SCNTransaction.SetCompletionBlock (() => gameStarted = true);    							gNodes.ObjectMaterial.Transparency = 1;  							gNodes.Object.Transform = SCNMatrix4.CreateFromAxisAngle (axis' angle);    							SCNTransaction.Commit ();  						})  					})  				});
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,StartGame,The following statement contains a magic number: var startSequence = SCNAction.Sequence (new SCNAction [] {  					// Wait for 1 second.  					SCNAction.Wait (1)'  					SCNAction.Group (new SCNAction[] {  						SCNAction.FadeIn (0.3)'    						// Start the game.  						SCNAction.Run (node => {  							if (!gameNodes.HasValue)  								return;  							var gNodes = gameNodes.Value;    							var rnd = new Random ();    							// Compute a random orientation for the object3D.  							var theta = (float)(Math.PI * rnd.NextDouble ());  							var phi = (float) (Math.Acos (2 * rnd.NextDouble () - 1) / NMath.PI);    							var axis = new Vector3 {  								X = (float)(Math.Cos (theta) * Math.Sin (phi))'  								Y = (float)(Math.Sin (theta) * Math.Sin (phi))'  								Z = (float)Math.Cos (theta)  							};  							var angle = (float)(2 * Math.PI * rnd.NextDouble());    							SCNTransaction.Begin ();  							SCNTransaction.AnimationDuration = 0.3;  							SCNTransaction.SetCompletionBlock (() => gameStarted = true);    							gNodes.ObjectMaterial.Transparency = 1;  							gNodes.Object.Transform = SCNMatrix4.CreateFromAxisAngle (axis' angle);    							SCNTransaction.Commit ();  						})  					})  				});
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,StartGame,The following statement contains a magic number: var startSequence = SCNAction.Sequence (new SCNAction [] {  					// Wait for 1 second.  					SCNAction.Wait (1)'  					SCNAction.Group (new SCNAction[] {  						SCNAction.FadeIn (0.3)'    						// Start the game.  						SCNAction.Run (node => {  							if (!gameNodes.HasValue)  								return;  							var gNodes = gameNodes.Value;    							var rnd = new Random ();    							// Compute a random orientation for the object3D.  							var theta = (float)(Math.PI * rnd.NextDouble ());  							var phi = (float) (Math.Acos (2 * rnd.NextDouble () - 1) / NMath.PI);    							var axis = new Vector3 {  								X = (float)(Math.Cos (theta) * Math.Sin (phi))'  								Y = (float)(Math.Sin (theta) * Math.Sin (phi))'  								Z = (float)Math.Cos (theta)  							};  							var angle = (float)(2 * Math.PI * rnd.NextDouble());    							SCNTransaction.Begin ();  							SCNTransaction.AnimationDuration = 0.3;  							SCNTransaction.SetCompletionBlock (() => gameStarted = true);    							gNodes.ObjectMaterial.Transparency = 1;  							gNodes.Object.Transform = SCNMatrix4.CreateFromAxisAngle (axis' angle);    							SCNTransaction.Commit ();  						})  					})  				});
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,StartGame,The following statement contains a magic number: countdown = 30;
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,StartGame,The following statement contains a magic number: gameNodes.Value.CountdownLabel.Position = new CGPoint (ContentFrame.Width / 2' ContentFrame.Height - 30);
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,StartGame,The following statement contains a magic number: gameNodes.Value.CountdownLabel.Position = new CGPoint (ContentFrame.Width / 2' ContentFrame.Height - 30);
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,UpdateText,The following statement contains a magic number: countdown < 10
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,EndGame,The following statement contains a magic number: SCNTransaction.AnimationDuration = 0.5;
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,EndGame,The following statement contains a magic number: SCNTransaction.SetCompletionBlock (() => {  				SCNTransaction.Begin ();  				SCNTransaction.AnimationDuration = 0.3;  				SCNTransaction.SetCompletionBlock (() => {  					ShowCongratulation ();  					gNodes.ObjectMaterial.Emission.Contents = UIColor.Black;  					gameStarted = false;  				});  				SCNTransaction.Commit ();  			});
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,ScreenProjection,The following statement contains a magic number: var aspectRatioCorrection = (h - w) / 2;
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,ScreenProjection,The following statement contains a magic number: var screenCoord = new CGPoint (location.X / w * 2 - 1'  										   (h - location.Y - aspectRatioCorrection) / w * 2 - 1);
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,ScreenProjection,The following statement contains a magic number: var screenCoord = new CGPoint (location.X / w * 2 - 1'  										   (h - location.Y - aspectRatioCorrection) / w * 2 - 1);
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,EndGameOnCorrectOrientation,The following statement contains a magic number: float toleranceDegree = 10;
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,EndGameOnCorrectOrientation,The following statement contains a magic number: var max_cos_angle = Math.Cos (toleranceDegree * Math.PI / 180);
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,ShowCongratulation,The following statement contains a magic number: particleRemovalTimer = NSTimer.CreateScheduledTimer (30' RemoveParticles);
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,ShowCongratulation,The following statement contains a magic number: gNodes.CongratulationsLabel.Position = new CGPoint (ContentFrame.Width / 2' ContentFrame.Height / 2);
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,ShowCongratulation,The following statement contains a magic number: gNodes.CongratulationsLabel.Position = new CGPoint (ContentFrame.Width / 2' ContentFrame.Height / 2);
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,ShowCongratulation,The following statement contains a magic number: gNodes.CongratulationsLabel.RunAction (SKAction.Group (new SKAction []{  					SKAction.FadeInWithDuration (0.25)'  					SKAction.Sequence (new SKAction []{  						SKAction.ScaleTo (0.7f' 0.25)'  						SKAction.ScaleTo (0.8f' 0.2)  					})  				}));
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,ShowCongratulation,The following statement contains a magic number: gNodes.CongratulationsLabel.RunAction (SKAction.Group (new SKAction []{  					SKAction.FadeInWithDuration (0.25)'  					SKAction.Sequence (new SKAction []{  						SKAction.ScaleTo (0.7f' 0.25)'  						SKAction.ScaleTo (0.8f' 0.2)  					})  				}));
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,ShowCongratulation,The following statement contains a magic number: gNodes.CongratulationsLabel.RunAction (SKAction.Group (new SKAction []{  					SKAction.FadeInWithDuration (0.25)'  					SKAction.Sequence (new SKAction []{  						SKAction.ScaleTo (0.7f' 0.25)'  						SKAction.ScaleTo (0.8f' 0.2)  					})  				}));
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,ShowCongratulation,The following statement contains a magic number: gNodes.CongratulationsLabel.RunAction (SKAction.Group (new SKAction []{  					SKAction.FadeInWithDuration (0.25)'  					SKAction.Sequence (new SKAction []{  						SKAction.ScaleTo (0.7f' 0.25)'  						SKAction.ScaleTo (0.8f' 0.2)  					})  				}));
Magic Number,WatchPuzzle.WatchKitAppExtension,InterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\WatchPuzzle\WatchPuzzle.WatchKitAppExtension\InterfaceController.cs,ShowCongratulation,The following statement contains a magic number: gNodes.CongratulationsLabel.RunAction (SKAction.Group (new SKAction []{  					SKAction.FadeInWithDuration (0.25)'  					SKAction.Sequence (new SKAction []{  						SKAction.ScaleTo (0.7f' 0.25)'  						SKAction.ScaleTo (0.8f' 0.2)  					})  				}));
