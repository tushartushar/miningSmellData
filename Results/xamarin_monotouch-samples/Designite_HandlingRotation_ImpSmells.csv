Implementation smell,Namespace,Class,File,Method,Description
Long Statement,HandlingRotation.Screens.iPad.Home,HomeScreenPad,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Home\HomeScreenPad.xib.cs,ViewDidLoad,The length of the statement  "			btnMethod1.TouchUpInside += delegate { NavigationController.PushViewController (new Method1Autosize.AutosizeScreenPad ()' true); }; " is 131.
Long Statement,HandlingRotation.Screens.iPad.Home,HomeScreenPad,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Home\HomeScreenPad.xib.cs,ViewDidLoad,The length of the statement  "			btnMethod2.TouchUpInside += delegate { NavigationController.PushViewController (new Method2MoveControls.Controller ()' true); }; " is 128.
Long Statement,HandlingRotation.Screens.iPad.Home,HomeScreenPad,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Home\HomeScreenPad.xib.cs,ViewDidLoad,The length of the statement  "			btnMethod3.TouchUpInside += delegate { NavigationController.PushViewController (new Method3SwapViews.Controller ()' true); }; " is 125.
Magic Number,HandlingRotation.Screens.iPhone.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' image.Frame.Width' image.Frame.Height);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPhone.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' image.Frame.Width' image.Frame.Height);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPhone.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' image.Frame.Width' image.Frame.Height);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPhone.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' image.Frame.Width' image.Frame.Height);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPhone.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' image.Frame.Width' image.Frame.Height);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPhone.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' image.Frame.Width' image.Frame.Height);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPhone.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' image.Frame.Width' image.Frame.Height);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPhone.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' image.Frame.Width' image.Frame.Height);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPhone.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' image.Frame.Width' image.Frame.Height);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPhone.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' image.Frame.Width' image.Frame.Height);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPhone.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' image.Frame.Width' image.Frame.Height);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPhone.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' image.Frame.Width' image.Frame.Height);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPhone.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' image.Frame.Width' image.Frame.Height);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPhone.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' image.Frame.Width' image.Frame.Height);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPhone.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' image.Frame.Width' image.Frame.Height);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPhone.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' image.Frame.Width' image.Frame.Height);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPhone.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' image.Frame.Width' image.Frame.Height);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPhone.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' image.Frame.Width' image.Frame.Height);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPhone.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' image.Frame.Width' image.Frame.Height);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPhone.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' image.Frame.Width' image.Frame.Height);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPad.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switchign to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' this.image.Frame.Width' this.image.Frame.Height);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPad.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switchign to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' this.image.Frame.Width' this.image.Frame.Height);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPad.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switchign to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' this.image.Frame.Width' this.image.Frame.Height);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPad.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switchign to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' this.image.Frame.Width' this.image.Frame.Height);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPad.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switchign to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' this.image.Frame.Width' this.image.Frame.Height);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPad.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switchign to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' this.image.Frame.Width' this.image.Frame.Height);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPad.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switchign to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' this.image.Frame.Width' this.image.Frame.Height);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPad.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switchign to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' this.image.Frame.Width' this.image.Frame.Height);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPad.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switchign to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' this.image.Frame.Width' this.image.Frame.Height);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPad.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switchign to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' this.image.Frame.Width' this.image.Frame.Height);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPad.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switchign to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' this.image.Frame.Width' this.image.Frame.Height);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPad.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switchign to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' this.image.Frame.Width' this.image.Frame.Height);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPad.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switchign to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' this.image.Frame.Width' this.image.Frame.Height);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPad.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switchign to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' this.image.Frame.Width' this.image.Frame.Height);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPad.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switchign to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' this.image.Frame.Width' this.image.Frame.Height);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPad.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switchign to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' this.image.Frame.Width' this.image.Frame.Height);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPad.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switchign to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' this.image.Frame.Width' this.image.Frame.Height);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPad.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switchign to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' this.image.Frame.Width' this.image.Frame.Height);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPad.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switchign to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' this.image.Frame.Width' this.image.Frame.Height);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Magic Number,HandlingRotation.Screens.iPad.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method2MoveControls\Controller.cs,PositionControls,The following statement contains a magic number: switch (toInterfaceOrientation) {  				// if we're switchign to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' this.image.Frame.Width' this.image.Frame.Height);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Missing Default,HandlingRotation,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\AppDelegate.cs,FinishedLaunching,The following switch statement is missing a default case: switch (CurrentDevice)  			{  				case DeviceType.iPhone:  					iPhoneHome = new HandlingRotation.Screens.iPhone.Home.HomeScreen ();  					mainNavController.PushViewController (iPhoneHome' false);  					break;    				case DeviceType.iPad:  					iPadHome = new HandlingRotation.Screens.iPad.Home.HomeScreenPad ();  					mainNavController.PushViewController (iPadHome' false);  					break;  			}
Missing Default,HandlingRotation.Screens.iPhone.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method2MoveControls\Controller.cs,PositionControls,The following switch statement is missing a default case: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' image.Frame.Width' image.Frame.Height);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Missing Default,HandlingRotation.Screens.iPhone.Method3SwapViews,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method3SwapViews\Controller.cs,LoadView,The following switch statement is missing a default case: switch (InterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					NSBundle.MainBundle.LoadNib ("LandscapeView"' this' null);    					break;    				// we're switching back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					NSBundle.MainBundle.LoadNib ("PortraitView"' this' null);    					break;  			}
Missing Default,HandlingRotation.Screens.iPhone.Method3SwapViews,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPhone\Method3SwapViews\Controller.cs,WillAnimateRotation,The following switch statement is missing a default case: switch (toInterfaceOrientation) {  				// if we're switching to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					NSBundle.MainBundle.LoadNib ("LandscapeView"' this' null);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					NSBundle.MainBundle.LoadNib ("PortraitView"' this' null);    					break;  			}
Missing Default,HandlingRotation.Screens.iPad.Method2MoveControls,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method2MoveControls\Controller.cs,PositionControls,The following switch statement is missing a default case: switch (toInterfaceOrientation) {  				// if we're switchign to landscape  				case UIInterfaceOrientation.LandscapeLeft:  				case UIInterfaceOrientation.LandscapeRight:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (10' 200' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (240' 25' this.image.Frame.Width' this.image.Frame.Height);    					break;    				// we're switch back to portrait  				case UIInterfaceOrientation.Portrait:  				case UIInterfaceOrientation.PortraitUpsideDown:    					// reposition the buttons  					button1.Frame = new CoreGraphics.CGRect (10' 10' 100' 33);  					button2.Frame = new CoreGraphics.CGRect (200' 10' 100' 33);    					// reposition the image  					image.Frame = new CoreGraphics.CGRect (20' 150' this.image.Frame.Width' this.image.Frame.Height);    					break;  			}
Missing Default,HandlingRotation.Screens.iPad.Method3SwapViews,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method3SwapViews\Controller.cs,ViewDidLoad,The following switch statement is missing a default case: switch (InterfaceOrientation) {  			case UIInterfaceOrientation.LandscapeLeft:  			case UIInterfaceOrientation.LandscapeRight:  				NSBundle.MainBundle.LoadNib ("LandscapeView"' this' null);  				break;  			case UIInterfaceOrientation.Portrait:  			case UIInterfaceOrientation.PortraitUpsideDown:  				NSBundle.MainBundle.LoadNib ("PortraitView"' this' null);  				break;  			}
Missing Default,HandlingRotation.Screens.iPad.Method3SwapViews,Controller,D:\research\architectureSmells\repos\xamarin_monotouch-samples\Rotation\HandlingRotation\Screens\iPad\Method3SwapViews\Controller.cs,WillAnimateRotation,The following switch statement is missing a default case: switch (toInterfaceOrientation) {  			case UIInterfaceOrientation.LandscapeLeft:  			case UIInterfaceOrientation.LandscapeRight:  				NSBundle.MainBundle.LoadNib ("LandscapeView"' this' null);  				break;  			case UIInterfaceOrientation.Portrait:  			case UIInterfaceOrientation.PortraitUpsideDown:  				NSBundle.MainBundle.LoadNib ("PortraitView"' this' null);  				break;  			}
