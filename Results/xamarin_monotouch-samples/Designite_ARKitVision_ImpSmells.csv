Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ARKitVision,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ARKitVision\ARKitVision\ViewController.cs,ViewDidLoad,The length of the statement  "            this.statusViewController = this.ChildViewControllers.FirstOrDefault(controller => controller is StatusViewController) as StatusViewController; " is 143.
Long Statement,ARKitVision,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ARKitVision\ARKitVision\ViewController.cs,DidUpdateFrame,The length of the statement  "            // The camera stream has only a finite amount of buffers available; holding too many buffers for analysis would starve the camera. " is 130.
Long Statement,ARKitVision,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ARKitVision\ARKitVision\ViewController.cs,ClassifyCurrentImage,The length of the statement  "            // Most computer vision tasks are not rotation agnostic so it is important to pass in the orientation of the image with respect to device. " is 138.
Long Statement,ARKitVision,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ARKitVision\ARKitVision\ViewController.cs,placeLabelInLocationWithSender,The length of the statement  "            var result = this.sceneView.HitTest(hitLocationInView' ARHitTestResultType.FeaturePoint | ARHitTestResultType.EstimatedHorizontalPlane).FirstOrDefault(); " is 153.
Long Statement,ARKitVision,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ARKitVision\ARKitVision\ViewController.cs,RestartSession,The length of the statement  "            this.sceneView.Session.Run(configuration' ARSessionRunOptions.ResetTracking | ARSessionRunOptions.RemoveExistingAnchors); " is 121.
Magic Number,ARKitVision,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ARKitVision\ARKitVision\ViewController.cs,ProcessClassifications,The following statement contains a magic number: var bestResult = classifications.FirstOrDefault(result => result.Confidence > 0.5f);
Magic Number,ARKitVision,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ARKitVision\ARKitVision\ViewController.cs,DisplayClassifierResults,The following statement contains a magic number: var message = $"Detected {this.identifierString} with {this.confidence * 100f}% confidence";
Magic Number,ARKitVision,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ARKitVision\ARKitVision\ViewController.cs,CameraDidChangeTrackingState,The following statement contains a magic number: switch (camera.TrackingState)              {                  case ARTrackingState.NotAvailable:                  case ARTrackingState.Limited:                      this.statusViewController.EscalateFeedback(camera' 3.0);                      break;                    case ARTrackingState.Normal:                      this.statusViewController.CancelScheduledMessage(MessageType.TrackingStateEscalation);                      // Unhide content after successful relocalization.                      this.SetOverlaysHidden(false);                      break;              }
Magic Number,ARKitVision,StatusViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ARKitVision\ARKitVision\StatusViewController.cs,SetMessageHidden,The following statement contains a magic number: UIView.Animate(0.2d'                                 0d'                                 UIViewAnimationOptions.BeginFromCurrentState'                                 () => this.messagePanel.Alpha = hide ? 0f : 1f'                                 null);
Missing Default,ARKitVision,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ARKitVision\ARKitVision\ViewController.cs,CameraDidChangeTrackingState,The following switch statement is missing a default case: switch (camera.TrackingState)              {                  case ARTrackingState.NotAvailable:                  case ARTrackingState.Limited:                      this.statusViewController.EscalateFeedback(camera' 3.0);                      break;                    case ARTrackingState.Normal:                      this.statusViewController.CancelScheduledMessage(MessageType.TrackingStateEscalation);                      // Unhide content after successful relocalization.                      this.SetOverlaysHidden(false);                      break;              }
Missing Default,ARKitVision,ARTrackingStateExtensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ARKitVision\ARKitVision\Utilities.cs,GetPresentationString,The following switch statement is missing a default case: switch (self.TrackingState)              {                  case ARTrackingState.NotAvailable:                      result = "TRACKING UNAVAILABLE";                      break;                    case ARTrackingState.Normal:                      result = "TRACKING NORMAL";                      break;                    case ARTrackingState.Limited:                      switch (self.TrackingStateReason)                      {                          case ARTrackingStateReason.ExcessiveMotion:                              result = "TRACKING LIMITED\nExcessive motion";                              break;                          case ARTrackingStateReason.InsufficientFeatures:                              result = "TRACKING LIMITED\nLow detail";                              break;                          case ARTrackingStateReason.Initializing:                              result = "Initializing";                              break;                          case ARTrackingStateReason.Relocalizing:                              result = "Recovering from interruption";                              break;                      }                      break;              }
Missing Default,ARKitVision,ARTrackingStateExtensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ARKitVision\ARKitVision\Utilities.cs,GetPresentationString,The following switch statement is missing a default case: switch (self.TrackingStateReason)                      {                          case ARTrackingStateReason.ExcessiveMotion:                              result = "TRACKING LIMITED\nExcessive motion";                              break;                          case ARTrackingStateReason.InsufficientFeatures:                              result = "TRACKING LIMITED\nLow detail";                              break;                          case ARTrackingStateReason.Initializing:                              result = "Initializing";                              break;                          case ARTrackingStateReason.Relocalizing:                              result = "Recovering from interruption";                              break;                      }
Missing Default,ARKitVision,ARTrackingStateExtensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ARKitVision\ARKitVision\Utilities.cs,GetRecommendation,The following switch statement is missing a default case: switch (self.TrackingState)              {                  case ARTrackingState.Limited:                      switch (self.TrackingStateReason)                      {                          case ARTrackingStateReason.ExcessiveMotion:                              result = "Try slowing down your movement' or reset the session.";                              break;                          case ARTrackingStateReason.InsufficientFeatures:                              result = "Try pointing at a flat surface' or reset the session.";                              break;                          case ARTrackingStateReason.Relocalizing:                              result = "Return to the location where you left off or try resetting the session.";                              break;                      }                      break;              }
Missing Default,ARKitVision,ARTrackingStateExtensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ARKitVision\ARKitVision\Utilities.cs,GetRecommendation,The following switch statement is missing a default case: switch (self.TrackingStateReason)                      {                          case ARTrackingStateReason.ExcessiveMotion:                              result = "Try slowing down your movement' or reset the session.";                              break;                          case ARTrackingStateReason.InsufficientFeatures:                              result = "Try pointing at a flat surface' or reset the session.";                              break;                          case ARTrackingStateReason.Relocalizing:                              result = "Return to the location where you left off or try resetting the session.";                              break;                      }
