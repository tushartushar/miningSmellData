Implementation smell,Namespace,Class,File,Method,Description
Long Statement,HttpClient.Core,NetHttpProvider,D:\research\architectureSmells\repos\xamarin_monotouch-samples\HttpClient\HttpClient\Core\NetHttpProvider.cs,GetHandlerType,The length of the statement  "                result = typeof(System.Net.Http.HttpMessageInvoker).GetField("handler"' System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.NonPublic)?.GetValue(client).GetType(); " is 184.
Magic Number,HttpClient.Core,Cocoa,D:\research\architectureSmells\repos\xamarin_monotouch-samples\HttpClient\HttpClient\Core\CocoaProvider.cs,ExecuteAsync,The following statement contains a magic number: var req = new NSUrlRequest(new NSUrl(NetworkProvider.WisdomUrl)' NSUrlRequestCachePolicy.ReloadIgnoringCacheData' 10);
Missing Default,HttpClient,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\HttpClient\HttpClient\ViewController.cs,PrepareForSegue,The following switch statement is missing a default case: switch (selectedConfiguration.Type)                      {                          case RequestType.WebRequestHttp:                              provider = new DotNetProvider(false);                              break;                          case RequestType.WebRequestHttps:                              provider = new DotNetProvider(true);                              break;                          case RequestType.NSUrlConnectionHttp:                              provider = new CocoaProvider();                              break;                          case RequestType.HttpClientHttp:                              provider = new NetHttpProvider(false);                              break;                          case RequestType.HttpClientHttps:                              provider = new NetHttpProvider(true);                              break;                      }
