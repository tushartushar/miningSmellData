Implementation smell,Namespace,Class,File,Method,Description
Long Method,VisionObjectTrack,VisionTrackerProcessor,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\Helpers\VisionTrackerProcessor.cs,PerformTracking,The method has 115 lines of code.
Complex Method,VisionObjectTrack,TrackingViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\TrackingViewController.cs,ReleaseDesignerOutlets,Cyclomatic complexity of the method is 10
Complex Method,VisionObjectTrack,VisionTrackerProcessor,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\Helpers\VisionTrackerProcessor.cs,PerformTracking,Cyclomatic complexity of the method is 16
Long Identifier,VisionObjectTrack,AssetsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\AssetsViewController.cs,,The length of the parameter ShowTrackingViewSegueIdentifier is 31.
Long Identifier,VisionObjectTrack,VisionTrackerProcessor,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\Helpers\VisionTrackerProcessor.cs,PerformTracking,The length of the parameter trackingFailedForAtLeastOneObject is 33.
Long Statement,VisionObjectTrack,AssetsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\AssetsViewController.cs,LoadAssetsFromLibrary,The length of the statement  "            assetsOptions.IncludeAssetSourceTypes = PHAssetSourceType.CloudShared | PHAssetSourceType.UserLibrary | PHAssetSourceType.iTunesSynced; " is 135.
Long Statement,VisionObjectTrack,TrackingViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\TrackingViewController.cs,ShouldReceiveTouch,The length of the statement  "            return this.trackingView.IsPointWithinDrawingArea(locationInView) && this.trackedObjectType == TrackedObjectType.Object;" is 120.
Long Statement,VisionObjectTrack,TrackingViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\TrackingViewController.cs,DisplayFrame,The length of the statement  "                this.trackingView.PolyRects = rects?.ToList() ?? (this.trackedObjectType == TrackedObjectType.Object ? this.objectsToTrack" is 122.
Long Statement,VisionObjectTrack,VisionTrackerProcessor,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\Helpers\VisionTrackerProcessor.cs,PerformTracking,The length of the statement  "                    error = trackingFailedForAtLeastOneObject ? new VisionTrackerProcessorError(VisionTrackerProcessorErrorType.FirstFrameReadFailed) " is 129.
Magic Number,VisionObjectTrack,AssetsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\AssetsViewController.cs,RecalculateItemSize,The following statement contains a magic number: var desiredItemCount = this.TraitCollection.HorizontalSizeClass == UIUserInterfaceSizeClass.Compact ? 4 : 6;
Magic Number,VisionObjectTrack,AssetsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\AssetsViewController.cs,RecalculateItemSize,The following statement contains a magic number: var desiredItemCount = this.TraitCollection.HorizontalSizeClass == UIUserInterfaceSizeClass.Compact ? 4 : 6;
Magic Number,VisionObjectTrack,TrackingViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\TrackingViewController.cs,ViewDidLoad,The following statement contains a magic number: backplateLayer.CornerRadius = backplateLayer.Bounds.Height / 2f;
Magic Number,VisionObjectTrack,TrackingViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\TrackingViewController.cs,ViewDidLoad,The following statement contains a magic number: this.frameCounterLabel.Font = UIFont.MonospacedDigitSystemFontOfSize(16' UIFontWeight.Light);
Magic Number,VisionObjectTrack,TrackingViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\TrackingViewController.cs,HandleStateChange,The following statement contains a magic number: UIView.Animate(0.5d' () =>              {                  this.View.LayoutIfNeeded();                  this.NavigationItem.RightBarButtonItem = newBarButton;                  this.frameCounterLabelBackplate.Hidden = frameCounterHidden;              });
Magic Number,VisionObjectTrack,TrackedObjectsPalette,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\Helpers\CommonTypes.cs,RandomColor,The following statement contains a magic number: return Random.Next(256) / 255f;
Magic Number,VisionObjectTrack,TrackedObjectsPalette,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\Helpers\CommonTypes.cs,RandomColor,The following statement contains a magic number: return Random.Next(256) / 255f;
Magic Number,VisionObjectTrack,VisionTrackerProcessor,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\Helpers\VisionTrackerProcessor.cs,ReadAndDisplayFirstFrame,The following statement contains a magic number: var rectangleDetectionRequest = new VNDetectRectanglesRequest(null)                          {                              MinimumAspectRatio = 0.2f'                              MaximumAspectRatio = 1f'                              MinimumSize = 0.1f'                              MaximumObservations = 10                          };
Magic Number,VisionObjectTrack,VisionTrackerProcessor,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\Helpers\VisionTrackerProcessor.cs,ReadAndDisplayFirstFrame,The following statement contains a magic number: var rectangleDetectionRequest = new VNDetectRectanglesRequest(null)                          {                              MinimumAspectRatio = 0.2f'                              MaximumAspectRatio = 1f'                              MinimumSize = 0.1f'                              MaximumObservations = 10                          };
Magic Number,VisionObjectTrack,VisionTrackerProcessor,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\Helpers\VisionTrackerProcessor.cs,ReadAndDisplayFirstFrame,The following statement contains a magic number: var rectangleDetectionRequest = new VNDetectRectanglesRequest(null)                          {                              MinimumAspectRatio = 0.2f'                              MaximumAspectRatio = 1f'                              MinimumSize = 0.1f'                              MaximumObservations = 10                          };
Magic Number,VisionObjectTrack,VisionTrackerProcessor,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\Helpers\VisionTrackerProcessor.cs,PerformTracking,The following statement contains a magic number: var rectStyle = observation.Confidence > 0.5f ? TrackedPolyRectStyle.Solid : TrackedPolyRectStyle.Dashed;
Magic Number,VisionObjectTrack,VisionTrackerProcessor,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\Helpers\VisionTrackerProcessor.cs,PerformTracking,The following statement contains a magic number: var miliseconds = videoReader.FrameRateInSeconds / 1000;
Magic Number,VisionObjectTrack,TrackingImageView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\Helpers\TrackingImageView.cs,Draw,The following statement contains a magic number: context.SetLineWidth(2f);
Magic Number,VisionObjectTrack,TrackingImageView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\Helpers\TrackingImageView.cs,ScaleImage,The following statement contains a magic number: var imageY = Math.Floor((viewSize.Height - imageSizeOption1.Height) / 2f);
Magic Number,VisionObjectTrack,TrackingImageView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\Helpers\TrackingImageView.cs,ScaleImage,The following statement contains a magic number: var imageX = Math.Floor((viewSize.Width - imageSizeOption2.Width) / 2f);
Missing Default,VisionObjectTrack,TrackingViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\TrackingViewController.cs,HandleError,The following switch statement is missing a default case: switch (processorError.Type)                      {                          case VisionTrackerProcessorErrorType.FirstFrameReadFailed:                              message = "Cannot read the first frame from selected video.";                              break;                            case VisionTrackerProcessorErrorType.ObjectTrackingFailed:                              message = "Tracking of one or more objects failed.";                              break;                            case VisionTrackerProcessorErrorType.ReaderInitializationFailed:                              message = "Cannot create a Video Reader for selected video.";                              break;                          case VisionTrackerProcessorErrorType.RectangleDetectionFailed:                              message = "Rectagle Detector failed to detect rectangles on the first frame of selected video.";                              break;                      }
Missing Default,VisionObjectTrack,TrackingViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\TrackingViewController.cs,HandleStateChange,The following switch statement is missing a default case: switch (this.state)              {                  case State.Stopped:                      navBarHidden = false;                      frameCounterHidden = true;                       // reveal settings view                      this.trackingViewTopConstraint.Constant = 0;                      this.entitySelector.Enabled = true;                      newBarButton = new UIBarButtonItem(UIBarButtonSystemItem.Play' (s' e) => this.handleStartStopButton(null));                      break;                  case State.Tracking:                      navBarHidden = true;                      frameCounterHidden = false;                       // cover settings view                      this.trackingViewTopConstraint.Constant = -settingsView.Frame.Height;                      this.entitySelector.Enabled = false;                      newBarButton = new UIBarButtonItem(UIBarButtonSystemItem.Stop' (s' e) => this.handleStartStopButton(null));                      break;              }
Missing Default,VisionObjectTrack,TrackingViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\TrackingViewController.cs,handleEntitySelection,The following switch statement is missing a default case: switch (sender.SelectedSegment)              {                  case 0:                      this.trackedObjectType = TrackedObjectType.Object;                      this.NavigationItem.Prompt = "Drag to select objects";                      this.clearRectsButton.Enabled = true;                      break;                    case 1:                      this.trackedObjectType = TrackedObjectType.Rectangle;                      this.NavigationItem.Prompt = "Rectangles are detected automatically";                      this.clearRectsButton.Enabled = false;                      break;              }
Missing Default,VisionObjectTrack,TrackingViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\TrackingViewController.cs,handleModeSelection,The following switch statement is missing a default case: switch (sender.SelectedSegment)              {                  case 0:                      this.visionProcessor.TrackingLevel = VNRequestTrackingLevel.Fast;                      break;                    case 1:                      this.visionProcessor.TrackingLevel = VNRequestTrackingLevel.Accurate;                      break;              }
Missing Default,VisionObjectTrack,TrackingViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\TrackingViewController.cs,handleStartStopButton,The following switch statement is missing a default case: switch (this.state)              {                  case State.Tracking:                      // stop tracking                      this.visionProcessor.CancelTracking();                      this.State = State.Stopped;                      this.workQueue.DispatchAsync(() => this.DisplayFirstVideoFrame());                      break;                    case State.Stopped:                      // initialize processor and start tracking                      this.State = State.Tracking;                      this.visionProcessor.ObjectsToTrack = this.objectsToTrack;                      this.workQueue.DispatchAsync(() => this.StartTracking());                      break;              }
Missing Default,VisionObjectTrack,TrackingViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\TrackingViewController.cs,handlePan,The following switch statement is missing a default case: switch (gestureRecognizer.State)              {                  case UIGestureRecognizerState.Began:                      // Initiate object selection                      var locationInView = gestureRecognizer.LocationInView(this.trackingView);                      if (this.trackingView.IsPointWithinDrawingArea(locationInView))                      {                          this.trackingView.RubberbandingStart = locationInView; // start new rubberbanding                      }                      break;                  case UIGestureRecognizerState.Changed:                      // Process resizing of the object's bounding box                      var translationPoint = gestureRecognizer.TranslationInView(this.trackingView);                      var translation = CGAffineTransform.MakeTranslation(translationPoint.X' translationPoint.Y);                      var endPoint = translation.TransformPoint(this.trackingView.RubberbandingStart);                        if (this.trackingView.IsPointWithinDrawingArea(endPoint))                      {                          this.trackingView.RubberbandingVector = translationPoint;                          this.trackingView.SetNeedsDisplay();                      }                      break;                    case UIGestureRecognizerState.Ended:                      // Finish resizing of the object's boundong box                      var selectedBBox = this.trackingView.RubberbandingRectNormalized;                      if (selectedBBox.Width > 0 && selectedBBox.Height > 0)                      {                          var rectColor = TrackedObjectsPalette.Color(this.objectsToTrack.Count);                          this.objectsToTrack.Add(new TrackedPolyRect(selectedBBox' rectColor));                            this.DisplayFrame(null' CGAffineTransform.MakeIdentity()' this.objectsToTrack);                      }                      break;              }
Missing Default,VisionObjectTrack,VisionTrackerProcessor,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\Helpers\VisionTrackerProcessor.cs,PerformTracking,The following switch statement is missing a default case: switch (type)                      {                          case TrackedObjectType.Object:                              foreach (var rect in this.ObjectsToTrack)                              {                                  var inputObservation = VNDetectedObjectObservation.FromBoundingBox(rect.BoundingBox);                                  inputObservations[inputObservation.Uuid] = inputObservation;                                  trackedObjects[inputObservation.Uuid] = rect;                              }                              break;                            case TrackedObjectType.Rectangle:                              foreach (var rectangleObservation in this.initialRectObservations)                              {                                  inputObservations[rectangleObservation.Uuid] = rectangleObservation;                                  var rectColor = TrackedObjectsPalette.Color(trackedObjects.Count);                                  trackedObjects[rectangleObservation.Uuid] = new TrackedPolyRect(rectangleObservation' rectColor);                              }                              break;                      }
Missing Default,VisionObjectTrack,VisionTrackerProcessor,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\Helpers\VisionTrackerProcessor.cs,PerformTracking,The following switch statement is missing a default case: switch (type)                              {                                  case TrackedObjectType.Object:                                      request = new VNTrackObjectRequest(inputObservation.Value);                                      break;                                    case TrackedObjectType.Rectangle:                                      if (inputObservation.Value is VNRectangleObservation rectObservation)                                      {                                          request = new VNTrackRectangleRequest(rectObservation);                                      }                                      else                                      {                                          continue;                                      }                                      break;                              }
Missing Default,VisionObjectTrack,VisionTrackerProcessor,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\Helpers\VisionTrackerProcessor.cs,PerformTracking,The following switch statement is missing a default case: switch (type)                                  {                                      case TrackedObjectType.Object:                                          rects.Add(new TrackedPolyRect(observation' knownRect.Color' rectStyle));                                          break;                                        case TrackedObjectType.Rectangle:                                          if (observation is VNRectangleObservation rectObservation)                                          {                                              rects.Add(new TrackedPolyRect(rectObservation' knownRect.Color' rectStyle));                                          }                                          break;                                  }
Missing Default,VisionObjectTrack,TrackingImageView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\VisionObjectTrack\VisionObjectTrack\Helpers\TrackingImageView.cs,Draw,The following switch statement is missing a default case: switch (polyRect.Style)                      {                          case TrackedPolyRectStyle.Solid:                              context.SetLineDash(this.dashedPhase' new nfloat[] { });                              break;                          case TrackedPolyRectStyle.Dashed:                              context.SetLineDash(this.dashedPhase' this.dashedLinesLengths);                              break;                      }
