Implementation smell,Namespace,Class,File,Method,Description
Long Statement,AddingTheSignInWithAppleFlowToYourApp,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios13\AddingTheSignInWithAppleFlowToYourApp\AddingTheSignInWithAppleFlowToYourApp\AppDelegate.cs,DidEnterBackground,The length of the statement  "			// If your application supports background execution this method is called instead of WillTerminate when the user quits." is 120.
Long Statement,AddingTheSignInWithAppleFlowToYourApp,LoginViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios13\AddingTheSignInWithAppleFlowToYourApp\AddingTheSignInWithAppleFlowToYourApp\LoginViewController.cs,SetupProviderLoginView,The length of the statement  "			var authorizationButton = new ASAuthorizationAppleIdButton (ASAuthorizationAppleIdButtonType.Default' ASAuthorizationAppleIdButtonStyle.White); " is 143.
Long Statement,AddingTheSignInWithAppleFlowToYourApp,LoginViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios13\AddingTheSignInWithAppleFlowToYourApp\AddingTheSignInWithAppleFlowToYourApp\LoginViewController.cs,DidComplete,The length of the statement  "			if (authorization.GetCredential<ASAuthorizationAppleIdCredential> () is ASAuthorizationAppleIdCredential appleIdCredential) { " is 125.
Long Statement,AddingTheSignInWithAppleFlowToYourApp,LoginViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios13\AddingTheSignInWithAppleFlowToYourApp\AddingTheSignInWithAppleFlowToYourApp\LoginViewController.cs,DidComplete,The length of the statement  "					var message = $"The app has received your selected credential from the keychain. \n\n Username: {username}\n Password: {password}"; " is 131.
Missing Default,AddingTheSignInWithAppleFlowToYourApp,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios13\AddingTheSignInWithAppleFlowToYourApp\AddingTheSignInWithAppleFlowToYourApp\AppDelegate.cs,FinishedLaunching,The following switch statement is missing a default case: switch (credentialState) { 				case ASAuthorizationAppleIdProviderCredentialState.Authorized: 					// The Apple ID credential is valid. 					break; 				case ASAuthorizationAppleIdProviderCredentialState.Revoked: 					// The Apple ID credential is revoked. 					break; 				case ASAuthorizationAppleIdProviderCredentialState.NotFound: 					// No credential was found' so show the sign-in UI. 					InvokeOnMainThread (() => { 						var storyboard = UIStoryboard.FromName ("Main"' null);  						if (!(storyboard.InstantiateViewController (nameof (LoginViewController)) is LoginViewController viewController)) 							return;  						viewController.ModalPresentationStyle = UIModalPresentationStyle.FormSheet; 						viewController.ModalInPresentation = true; 						Window?.RootViewController?.PresentViewController (viewController' true' null); 					}); 					break; 				}
