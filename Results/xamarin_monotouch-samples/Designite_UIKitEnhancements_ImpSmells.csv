Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,MonoTouch.UIKit,AlertView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\Classes\AlertView.cs,PresentTextInputAlert,The method has 6 parameters. Parameters: title' description' placeholder' text' controller' action
Long Statement,UIKitEnhancements,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\AppDelegate.cs,FinishedLaunching,The length of the statement  "			monkeyMessageCategory.SetActions (new UIUserNotificationAction[]{ acceptAction' replyAction' trashAction }' UIUserNotificationActionContext.Default); " is 149.
Long Statement,UIKitEnhancements,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\AppDelegate.cs,FinishedLaunching,The length of the statement  "			monkeyMessageCategory.SetActions (new UIUserNotificationAction[]{ acceptAction' trashAction }' UIUserNotificationActionContext.Minimal); " is 136.
Long Statement,UIKitEnhancements,MainMenuTableViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\MainMenuTableViewController.cs,ViewDidLoad,The length of the statement  "			SearchController.SearchBar.Frame = new CGRect (SearchController.SearchBar.Frame.X' SearchController.SearchBar.Frame.Y' SearchController.SearchBar.Frame.Width' 44f); " is 164.
Long Statement,UIKitEnhancements,MainMenuTableSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\MainMenuTableSource.cs,LoadData,The length of the statement  "			_items.Add (new MenuItem ("Collection View Changes"' "New Collection View Features"'"WebSegue"'"http://blog.xamarin.com/new-collection-view-features-in-ios-8/")); " is 162.
Long Statement,UIKitEnhancements,MainMenuTableSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\MainMenuTableSource.cs,LoadData,The length of the statement  "			_items.Add (new MenuItem ("Split View Controller"' "Now Supported on iPhone"'"WebSegue"'"https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UISplitViewController_class/index.html#//apple_ref/occ/cl/UISplitViewController")); " is 253.
Long Statement,UIKitEnhancements,MainMenuTableSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\MainMenuTableSource.cs,LoadData,The length of the statement  "			_items.Add (new MenuItem ("Visual Effects"' "Adding Visual Effects in iOS 8"'"WebSegue"'"http://blog.xamarin.com/adding-view-effects-in-ios-8/")); " is 146.
Long Statement,UIKitEnhancements,AlertViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\AlertViewController.cs,OKAlert_TouchUpInside,The length of the statement  "			var okAlertController = UIAlertController.Create("OK Alert"'"This is a sample alert with an OK button."' UIAlertControllerStyle.Alert); " is 135.
Long Statement,UIKitEnhancements,AlertViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\AlertViewController.cs,OKCancelAlert_TouchUpInside,The length of the statement  "			var okCancelAlertController = UIAlertController.Create("OK / Cancel Alert"' "This is a sample alert with an OK / Cancel Button"' UIAlertControllerStyle.Alert); " is 159.
Long Statement,UIKitEnhancements,AlertViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\AlertViewController.cs,OKCancelAlert_TouchUpInside,The length of the statement  "			okCancelAlertController.AddAction(UIAlertAction.Create("Okay"' UIAlertActionStyle.Default' alert => Console.WriteLine ("Okay was clicked"))); " is 141.
Long Statement,UIKitEnhancements,AlertViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\AlertViewController.cs,OKCancelAlert_TouchUpInside,The length of the statement  "			okCancelAlertController.AddAction(UIAlertAction.Create("Cancel"' UIAlertActionStyle.Cancel' alert => Console.WriteLine ("Cancel was clicked"))); " is 144.
Long Statement,UIKitEnhancements,AlertViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\AlertViewController.cs,TextInputAlert_TouchUpInside,The length of the statement  "			var textInputAlertController = UIAlertController.Create("Text Input Alert"' "Hey' input some text"' UIAlertControllerStyle.Alert); " is 130.
Long Statement,UIKitEnhancements,AlertViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\AlertViewController.cs,TextInputAlert_TouchUpInside,The length of the statement  "			var cancelAction = UIAlertAction.Create ("Cancel"' UIAlertActionStyle.Cancel' alertAction => Console.WriteLine ("Cancel was Pressed")); " is 135.
Long Statement,UIKitEnhancements,AlertViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\AlertViewController.cs,TextInputAlert_TouchUpInside,The length of the statement  "			var okayAction = UIAlertAction.Create ("Okay"' UIAlertActionStyle.Default' alertAction => Console.WriteLine ("The user entered '{0}'"' textInputAlertController.TextFields[0].Text)); " is 181.
Long Statement,UIKitEnhancements,AlertViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\AlertViewController.cs,ActionSheet_TouchUpInside,The length of the statement  "			UIAlertController alert = UIAlertController.Create("Action Sheet"' "Select an item from below"' UIAlertControllerStyle.ActionSheet); " is 132.
Magic Number,UIKitEnhancements,MainMenuTableViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\MainMenuTableViewController.cs,ViewDidLoad,The following statement contains a magic number: SearchController.SearchBar.Frame = new CGRect (SearchController.SearchBar.Frame.X' SearchController.SearchBar.Frame.Y' SearchController.SearchBar.Frame.Width' 44f);
Magic Number,UIKitEnhancements,MainMenuTableSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\MainMenuTableSource.cs,GetHeightForRow,The following statement contains a magic number: return 44;
Magic Number,UIKitEnhancements,WebViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\WebViewController.cs,ShowBusy,The following statement contains a magic number: Loading.Alpha = 0.5f;
Magic Number,UIKitEnhancements,NotificationViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\NotificationViewController.cs,ViewDidLoad,The following statement contains a magic number: SendButton.TouchUpInside += (sender' e) => {  				// Create a new local notification  				UILocalNotification notification = new UILocalNotification(){  					AlertBody = "Go Bananas - You've got Monkey Mail!"'  					AlertAction = null'  					ApplicationIconBadgeNumber = 1'  					Category = "MONKEYMESSAGE_ID"'  					FireDate = NSDate.FromTimeIntervalSinceNow(15) // Fire message in 15 seconds  				};    				// Schedule the notification  				UIApplication.SharedApplication.ScheduleLocalNotification(notification);  				Console.WriteLine("Notification scheduled...");  			};
Magic Number,UIKitEnhancements,PopoverViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\PopoverViewController.cs,ViewDidLoad,The following statement contains a magic number: ShowButton.TouchUpInside += (sender' e) => {  				// Create a UIImage view to show in the popover  				UIImageView  monkeyIcon = new UIImageView(new CGRect(0'0'256'256));  				monkeyIcon.Image = UIImage.FromFile("MonkeyIcon.png");  				monkeyIcon.UserInteractionEnabled = true;    				// Create a view controller to act as the popover  				UIViewController popover = new UIViewController();  				popover.View = monkeyIcon;  				popover.ModalPresentationStyle = UIModalPresentationStyle.Popover;    				// Grab Image  				var image = UIImage.FromFile("298-circlex.png");    				// Add a close button  				var closeButton = new ImageButton(new CGRect(popover.View.Frame.Size.Width'20'image.Size.Width'image.Size.Height));  				closeButton.UserInteractionEnabled = true;  				closeButton.Image = image;  				monkeyIcon.AddSubview(closeButton);    				// Wireup the close button  				closeButton.Touched += (button) => {  					popover.DismissViewController(true'null);  				};    				// Present the popover  				PresentViewController(popover'true'null);    				// Configure the popover for the iPad' the popover displays as a modal view on the  				// iPhone  				UIPopoverPresentationController presentationPopover = popover.PopoverPresentationController;  				if (presentationPopover!=null) {  					presentationPopover.SourceView = this.View;  					presentationPopover.PermittedArrowDirections = UIPopoverArrowDirection.Up;  					presentationPopover.SourceRect = ShowButton.Frame;  				}    			};
Magic Number,UIKitEnhancements,PopoverViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\PopoverViewController.cs,ViewDidLoad,The following statement contains a magic number: ShowButton.TouchUpInside += (sender' e) => {  				// Create a UIImage view to show in the popover  				UIImageView  monkeyIcon = new UIImageView(new CGRect(0'0'256'256));  				monkeyIcon.Image = UIImage.FromFile("MonkeyIcon.png");  				monkeyIcon.UserInteractionEnabled = true;    				// Create a view controller to act as the popover  				UIViewController popover = new UIViewController();  				popover.View = monkeyIcon;  				popover.ModalPresentationStyle = UIModalPresentationStyle.Popover;    				// Grab Image  				var image = UIImage.FromFile("298-circlex.png");    				// Add a close button  				var closeButton = new ImageButton(new CGRect(popover.View.Frame.Size.Width'20'image.Size.Width'image.Size.Height));  				closeButton.UserInteractionEnabled = true;  				closeButton.Image = image;  				monkeyIcon.AddSubview(closeButton);    				// Wireup the close button  				closeButton.Touched += (button) => {  					popover.DismissViewController(true'null);  				};    				// Present the popover  				PresentViewController(popover'true'null);    				// Configure the popover for the iPad' the popover displays as a modal view on the  				// iPhone  				UIPopoverPresentationController presentationPopover = popover.PopoverPresentationController;  				if (presentationPopover!=null) {  					presentationPopover.SourceView = this.View;  					presentationPopover.PermittedArrowDirections = UIPopoverArrowDirection.Up;  					presentationPopover.SourceRect = ShowButton.Frame;  				}    			};
Magic Number,UIKitEnhancements,PopoverViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\PopoverViewController.cs,ViewDidLoad,The following statement contains a magic number: ShowButton.TouchUpInside += (sender' e) => {  				// Create a UIImage view to show in the popover  				UIImageView  monkeyIcon = new UIImageView(new CGRect(0'0'256'256));  				monkeyIcon.Image = UIImage.FromFile("MonkeyIcon.png");  				monkeyIcon.UserInteractionEnabled = true;    				// Create a view controller to act as the popover  				UIViewController popover = new UIViewController();  				popover.View = monkeyIcon;  				popover.ModalPresentationStyle = UIModalPresentationStyle.Popover;    				// Grab Image  				var image = UIImage.FromFile("298-circlex.png");    				// Add a close button  				var closeButton = new ImageButton(new CGRect(popover.View.Frame.Size.Width'20'image.Size.Width'image.Size.Height));  				closeButton.UserInteractionEnabled = true;  				closeButton.Image = image;  				monkeyIcon.AddSubview(closeButton);    				// Wireup the close button  				closeButton.Touched += (button) => {  					popover.DismissViewController(true'null);  				};    				// Present the popover  				PresentViewController(popover'true'null);    				// Configure the popover for the iPad' the popover displays as a modal view on the  				// iPhone  				UIPopoverPresentationController presentationPopover = popover.PopoverPresentationController;  				if (presentationPopover!=null) {  					presentationPopover.SourceView = this.View;  					presentationPopover.PermittedArrowDirections = UIPopoverArrowDirection.Up;  					presentationPopover.SourceRect = ShowButton.Frame;  				}    			};
Magic Number,UIKitEnhancements,SearchResultsTableSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\Classes\SearchResultsTableSource.cs,GetHeightForRow,The following statement contains a magic number: return 44;
Missing Default,UIKitEnhancements,MainMenuTableViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\MainMenuTableViewController.cs,PrepareForSegue,The following switch statement is missing a default case: switch (segue.Identifier) {  			case "WebSegue":  				var webView = segue.DestinationViewController as WebViewController;  				webView.URL = MenuItem.URL;  				break;  			}
Missing Default,UIKitEnhancements,NavBarViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\NavBarViewController.cs,ViewWillAppear,The following switch statement is missing a default case: switch(NavBarMode.SelectedSegment) {  				case 0:  					this.NavigationController.HidesBarsOnTap = true;  					this.NavigationController.HidesBarsOnSwipe = false;  					break;  				case 1:  					this.NavigationController.HidesBarsOnTap = false;  					this.NavigationController.HidesBarsOnSwipe = true;  					break;  				}
Missing Default,UIKitEnhancements,DetailsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\UIKitEnhancements\UIKitEnhancements\DetailsViewController.cs,PrepareForSegue,The following switch statement is missing a default case: switch (segue.Identifier) {  			case "WebSegue":  				var webView = segue.DestinationViewController as WebViewController;  				webView.URL = MenuItem.URL;  				break;  			}
