Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ScanningAndDetecting3DObjects,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewController.cs,ReleaseDesignerOutlets,Cyclomatic complexity of the method is 14
Complex Method,ScanningAndDetecting3DObjects,ViewControllerApplicationState,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewControllerApplicationState.cs,SwitchToNextState,Cyclomatic complexity of the method is 8
Complex Method,ScanningAndDetecting3DObjects,ViewControllerApplicationState,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewControllerApplicationState.cs,SwitchToPreviousState,Cyclomatic complexity of the method is 9
Complex Method,ScanningAndDetecting3DObjects,Scan,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\Scan.cs,DidOneFingerPan,Cyclomatic complexity of the method is 9
Complex Method,ScanningAndDetecting3DObjects,Scan,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\Scan.cs,DidTwoFingerPan,Cyclomatic complexity of the method is 11
Complex Method,ScanningAndDetecting3DObjects,Scan,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\Scan.cs,DidLongPress,Cyclomatic complexity of the method is 9
Complex Method,ScanningAndDetecting3DObjects,Scan,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\Scan.cs,DidPinch,Cyclomatic complexity of the method is 9
Complex Method,ScanningAndDetecting3DObjects,Scan,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\Scan.cs,UpdateOnEveryFrame,Cyclomatic complexity of the method is 9
Complex Method,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,FitOverPointCloud,Cyclomatic complexity of the method is 8
Complex Method,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,HighlightCurrentTitle,Cyclomatic complexity of the method is 8
Complex Method,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,UpdateCapturingProcess,Cyclomatic complexity of the method is 14
Complex Method,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,TryToAlignWithPlanes,Cyclomatic complexity of the method is 10
Complex Method,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,SnapToBoundingBoxSide,Cyclomatic complexity of the method is 10
Complex Method,ScanningAndDetecting3DObjects,ViewControllerSessionDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewControllerSessionDelegate.cs,CameraDidChangeTrackingState,Cyclomatic complexity of the method is 9
Complex Method,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,BoundingBoxSide,Cyclomatic complexity of the method is 12
Long Parameter List,ScanningAndDetecting3DObjects,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewController.cs,ShowAlert,The method has 5 parameters. Parameters: title' message' buttonTitle' showCancel' handler
Long Parameter List,ScanningAndDetecting3DObjects,ObjectOriginAxis,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOriginAxis.cs,ObjectOriginAxis,The method has 5 parameters. Parameters: axis' length' thickness' radius' handleSize
Long Identifier,ScanningAndDetecting3DObjects,ViewControllerApplicationState,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewControllerApplicationState.cs,,The length of the parameter ApplicationStateChangedNotificationName is 39.
Long Identifier,ScanningAndDetecting3DObjects,Scan,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\Scan.cs,,The length of the parameter ScanningStateChangedNotificationName is 36.
Long Identifier,ScanningAndDetecting3DObjects,TestRun,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\TestRun.cs,,The length of the parameter averageDetectionDelayInSeconds is 30.
Long Identifier,ScanningAndDetecting3DObjects,ScannedObject,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedObject.cs,,The length of the parameter PositionChangedNotificationName is 31.
Long Identifier,ScanningAndDetecting3DObjects,ScannedObject,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedObject.cs,,The length of the parameter BoundingBoxCreatedNotificationName is 34.
Long Identifier,ScanningAndDetecting3DObjects,ScannedObject,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedObject.cs,,The length of the parameter GhostBoundingBoxCreatedNotificationName is 39.
Long Identifier,ScanningAndDetecting3DObjects,ScannedObject,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedObject.cs,,The length of the parameter GhostBoundingBoxRemovedNotificationName is 39.
Long Identifier,ScanningAndDetecting3DObjects,ScannedPointCloud,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedPointCloud.cs,,The length of the parameter notificationObservationHandles is 30.
Long Identifier,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,,The length of the parameter ScanPercentageChangedNotificationName is 37.
Long Identifier,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,,The length of the parameter PositionChangedNotificationName is 31.
Long Identifier,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,,The length of the parameter PositionChangedNotificationName is 31.
Long Identifier,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,,The length of the parameter MovedOutsideBoxNotificiationName is 32.
Long Identifier,ScanningAndDetecting3DObjects,DetectedObject,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\DetectedObject.cs,,The length of the parameter detectedObjectVisualizationTimer is 32.
Long Statement,ScanningAndDetecting3DObjects,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\AppDelegate.cs,FinishedLaunching,The length of the statement  "			//Note regarding the compiler warning: These are valid C# warnings' as these will resolve against ARConfiguration's static property. Needs library fix.  " is 151.
Long Statement,ScanningAndDetecting3DObjects,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewController.cs,ViewDidLoad,The length of the statement  "			// Member initialization order is important! Primirily because there is logic assoc'd w changing the state. (see EnterState* functions) " is 135.
Long Statement,ScanningAndDetecting3DObjects,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewController.cs,ViewDidLoad,The length of the statement  "			navigationBarController = new ViewControllerNavigationBar(this.navigationBar' PreviousButtonTapped' RestartButtonTapped); " is 121.
Long Statement,ScanningAndDetecting3DObjects,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewController.cs,ViewDidLoad,The length of the statement  "			notificationCenter.AddObserver(ScannedObject.GhostBoundingBoxCreatedNotificationName' State.GhostBoundingBoxWasCreated); " is 120.
Long Statement,ScanningAndDetecting3DObjects,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewController.cs,ViewDidLoad,The length of the statement  "			notificationCenter.AddObserver(ScannedObject.GhostBoundingBoxRemovedNotificationName' State.GhostBoundingBoxWasRemoved); " is 120.
Long Statement,ScanningAndDetecting3DObjects,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewController.cs,EnterStateScanningContinue,The length of the statement  "			DisplayInstruction(new Message("Scan the object from all sides in which you are interested. Do not move the object while scanning!")); " is 134.
Long Statement,ScanningAndDetecting3DObjects,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewController.cs,EnterStateDefineBoundingBox,The length of the statement  "			DisplayInstruction(new Message("Position and resize bounding box using gestures.\nLong press sides to push/pull them in or out.")); " is 131.
Long Statement,ScanningAndDetecting3DObjects,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewController.cs,EnterStateScanReady,The length of the statement  "				DisplayInstruction(new Message("Tap 'Next' to create an approximate bounding box around the object you want to scan.")); " is 120.
Long Statement,ScanningAndDetecting3DObjects,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewController.cs,LoadModelButtonTouched,The length of the statement  "			var documentPicker = new UIDocumentPickerViewController(new[] { "com.pixar.universal-scene-description-mobile" }' UIDocumentPickerMode.Import); " is 143.
Long Statement,ScanningAndDetecting3DObjects,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewController.cs,TestObjectDetection,The length of the statement  "					DisplayInstruction(new Message("Test detection of the object from different angles. Consider moving the object to different environments and test there.")); " is 156.
Long Statement,ScanningAndDetecting3DObjects,ThresholdPanGestureRecognizer,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Gesture_Recognizers\ThresholdPanGestureRecognizer.cs,LocationInView,The length of the statement  "					var correctedLocation = new CGPoint(initialLocation.X + TranslationInView(view).X' initialLocation.Y + TranslationInView(view).Y); " is 130.
Long Statement,ScanningAndDetecting3DObjects,ViewControllerApplicationState,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewControllerApplicationState.cs,GhostBoundingBoxWasCreated,The length of the statement  "					source.DisplayInstruction(new Message("Tap 'Next' to create an approximate bounding box around the object you want to scan")); " is 126.
Long Statement,ScanningAndDetecting3DObjects,Scan,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\Scan.cs,UpdateOnEveryFrame,The length of the statement  "			// Note: unlike gesture recognizer handlers above' this function is not structured with a switch' since multiple clauses execute  " is 128.
Long Statement,ScanningAndDetecting3DObjects,Scan,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\Scan.cs,UpdateOnEveryFrame,The length of the statement  "						sceneView.Session.CreateReferenceObject(boundingBox.WorldTransform.ToNMatrix4()' new OpenTK.NVector3()' boundingBox.Extent' (referenceObject' error) => " is 151.
Long Statement,ScanningAndDetecting3DObjects,Scan,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\Scan.cs,CreateReferenceObject,The length of the statement  "			sceneView.Session.CreateReferenceObject(boundingBox.WorldTransform.ToNMatrix4()' new OpenTK.NVector3()' boundingBox.Extent' (referenceObject' err) => " is 149.
Long Statement,ScanningAndDetecting3DObjects,TestRun,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\TestRun.cs,SuccessfulDetection,The length of the statement  "			averageDetectionDelayInSeconds = (averageDetectionDelayInSeconds * (1.0 * detections - 1) + lastDetectionDelayInSeconds) / (1.0 * detections); " is 142.
Long Statement,ScanningAndDetecting3DObjects,TestRun,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\TestRun.cs,StartNoDetectionTimer,The length of the statement  "				sessionInfo.DisplayMessage("Unable to detect the object. Please point the device at the scanned object or rescan."' 5.0); " is 121.
Long Statement,ScanningAndDetecting3DObjects,ScannedObject,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedObject.cs,UpdateOrCreateGhostBoundingBox,The length of the statement  "				// unless the `Scan` object has passed a reference to the ghostBoundingBox in to the asynch function `CreateReferenceObject`" is 124.
Long Statement,ScanningAndDetecting3DObjects,ScannedPointCloud,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedPointCloud.cs,UpdateOnEveryFrame,The length of the statement  "			pointNode.Geometry = PointCloud.CreateVisualization(renderedPoints.Select(p => p.ToNVector3()).ToArray()' Utilities.AppYellow' 12); " is 131.
Long Statement,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,StartSideDrag,The length of the statement  "					var sideNormalInWorld = ConvertVectorToNode(side.Normal' null).Normalized() - ConvertVectorToNode(SCNVector3.Zero' null); " is 121.
Long Statement,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,StartSidePlaneDrag,The length of the statement  "					var sideNormalInWorld = (ConvertVectorToNode(side.DragAxis.Normal().ToSCNVector3()' null) - ConvertVectorToNode(SCNVector3.Zero' null)).Normalized(); " is 149.
Long Statement,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,UpdateCapturingProcess,The length of the statement  "				var notification = NSNotification.FromName(BoundingBox.ScanPercentageChangedNotificationName' this' NSDictionary.FromObjectAndKey(new NSNumber(progressPercentage)' BoundingBox.ScanPercentageUserKey)); " is 200.
Long Statement,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,UpdateAxisDrag,The length of the statement  "			NSNotificationCenter.DefaultCenter.PostNotification(NSNotification.FromName(ObjectOrigin.PositionChangedNotificationName' this)); " is 129.
Long Statement,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,UpdateAxisDrag,The length of the statement  "				NSNotificationCenter.DefaultCenter.PostNotification(NSNotification.FromName(ObjectOrigin.MovedOutsideBoxNotificiationName' this)); " is 130.
Long Statement,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,OutsideBoundingBox,The length of the statement  "			var extent = new SCNVector3(boundingBox.Extent.X + threshold' boundingBox.Extent.Y + threshold' boundingBox.Extent.Z + threshold); " is 130.
Long Statement,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The length of the statement  "			Action<SCNNode'float' float' float> xlat = (node' extentX' extentY' extentZ) => node.LocalTranslate(new SCNVector3(extentX' extentY' extentZ)); " is 143.
Complex Conditional,ScanningAndDetecting3DObjects,ScannedPointCloud,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedPointCloud.cs,UpdateOnEveryFrame,The conditional expression  "localPoint.X >= min.X && localPoint.X <= max.X  					&& localPoint.Y >= min.Y && localPoint.Y <= max.Y  					&& localPoint.Z >= min.Z && localPoint.Z <= max.Z"  is complex.
Complex Conditional,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,TryToAlignWithPlanes,The conditional expression  "bottomCenterInPlaneCoords.X < minX || bottomCenterInPlaneCoords.X > maxX   				   || bottomCenterInPlaneCoords.Z < minZ || bottomCenterInPlaneCoords.Z > minZ"  is complex.
Magic Number,ScanningAndDetecting3DObjects,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewController.cs,StartLimitedTrackingTimer,The following statement contains a magic number: limitedTrackingTimer = NSTimer.CreateScheduledTimer(2.0' (_) =>  			{  				CancelLimitedTrackingTimer();  				if (scan == null)  				{  					return;  				}  				if (scan.State == Scan.ScanState.DefineBoundingBox  					|| scan.State == Scan.ScanState.Scanning  					|| scan.State == Scan.ScanState.AdjustingOrigin  				   )  				{  					var title = "Limited Tracking";  					var message = "Low tracking quality - it is unlikely that a good reference object can be generated from this scan.";  					var buttonTitle = "Restart Scan";    					ShowAlert(title' message' buttonTitle' true' (x) => State.CurrentState = AppState.StartARSession);  				}  			});
Magic Number,ScanningAndDetecting3DObjects,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewController.cs,StartMaxScanTimeTimer,The following statement contains a magic number: var timeout = 60.0 * 5;
Magic Number,ScanningAndDetecting3DObjects,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewController.cs,StartMaxScanTimeTimer,The following statement contains a magic number: var timeout = 60.0 * 5;
Magic Number,ScanningAndDetecting3DObjects,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewController.cs,ObjectOriginPositionChanged,The following statement contains a magic number: sessionInfo.DisplayMessage(message' 1.5);
Magic Number,ScanningAndDetecting3DObjects,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewController.cs,BoundingBoxPositionChanged,The following statement contains a magic number: sessionInfo.DisplayMessage($"Current bounding box distance: ({distanceFromCamera}) m"' 1.5);
Magic Number,ScanningAndDetecting3DObjects,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewController.cs,BoundingBoxExtentChanged,The following statement contains a magic number: sessionInfo.DisplayMessage(message' 1.5);
Magic Number,ScanningAndDetecting3DObjects,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewController.cs,ScanPercentageChanged,The following statement contains a magic number: percentage >= 100.0
Magic Number,ScanningAndDetecting3DObjects,ThresholdPinchGestureRecognizer,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Gesture_Recognizers\ThresholdPinchGestureRecognizer.cs,TouchesMoved,The following statement contains a magic number: touches.Count != 2
Magic Number,ScanningAndDetecting3DObjects,Message,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Views\MessageLabel.cs,Message,The following statement contains a magic number: Text.AddAttribute(new NSString("NSFont")' UIFont.BoldSystemFontOfSize(17)' titleRange);
Magic Number,ScanningAndDetecting3DObjects,RoundedButton,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Views\RoundedButton.cs,Setup,The following statement contains a magic number: Layer.CornerRadius = 8;
Magic Number,ScanningAndDetecting3DObjects,RoundedButton,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Views\RoundedButton.cs,Setup,The following statement contains a magic number: TitleLabel.Font = UIFont.BoldSystemFontOfSize(17);
Magic Number,ScanningAndDetecting3DObjects,Scan,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\Scan.cs,DidTwoFingerPan,The following statement contains a magic number: Action<Action> RunIfTwoTouch = (fn) =>  			{  				if (gesture.NumberOfTouches == 2) fn();  			};
Magic Number,ScanningAndDetecting3DObjects,Scan,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\Scan.cs,UpdateOnEveryFrame,The following statement contains a magic number: lightEstimate.AmbientIntensity < 500 && !hasWarnedAboutLowLight
Magic Number,ScanningAndDetecting3DObjects,Scan,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\Scan.cs,IsReasonablySized,The following statement contains a magic number: Func<double' bool> validSizeRange = (sz) => sz > 0.01 && sz < 5.0;
Magic Number,ScanningAndDetecting3DObjects,Scan,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\Scan.cs,IsReasonablySized,The following statement contains a magic number: Func<double' bool> validSizeRange = (sz) => sz > 0.01 && sz < 5.0;
Magic Number,ScanningAndDetecting3DObjects,Scan,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\Scan.cs,IsReasonablySized,The following statement contains a magic number: return volume >= 0.0005;
Magic Number,ScanningAndDetecting3DObjects,TestRun,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\TestRun.cs,StartNoDetectionTimer,The following statement contains a magic number: noDetectionTimer = NSTimer.CreateScheduledTimer(5.0' (timer) =>  			{  				CancelNoDetectionTimer();  				sessionInfo.DisplayMessage("Unable to detect the object. Please point the device at the scanned object or rescan."' 5.0);  			});
Magic Number,ScanningAndDetecting3DObjects,TestRun,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\TestRun.cs,StartNoDetectionTimer,The following statement contains a magic number: noDetectionTimer = NSTimer.CreateScheduledTimer(5.0' (timer) =>  			{  				CancelNoDetectionTimer();  				sessionInfo.DisplayMessage("Unable to detect the object. Please point the device at the scanned object or rescan."' 5.0);  			});
Magic Number,ScanningAndDetecting3DObjects,ViewControllerSessionInfo,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewControllerSessionInfo.cs,UpdateSessionInfoLabel,The following statement contains a magic number: switch (camera.TrackingState)  			{  				case ARTrackingState.NotAvailable :  					message = $"{stateString} not possible : {camera.PresentationString()}";  					startTimeOfLastMessage = DateTime.Now;  					expirationTimeOfLastMessage = 3.0;  					break;  				case ARTrackingState.Limited :  					message = $"{stateString} might not work : {camera.PresentationString()}";  					startTimeOfLastMessage = DateTime.Now;  					expirationTimeOfLastMessage = 3.0;  					break;  				default :  					// No feedback needed when tracking is normal.  					// Defer clearing the info label if the last message hasn't reached its expiration time.  					var now = DateTime.Now;  					if ((now - startTimeOfLastMessage).TotalSeconds < expirationTimeOfLastMessage)  					{  						var timeToKeepLastMessageOnScreen = expirationTimeOfLastMessage - (now - startTimeOfLastMessage).TotalSeconds;  						StartMessageExpirationTimer(timeToKeepLastMessageOnScreen);  					}  					else  					{  						// Otherwise hide the info label immediately  						source.ShowSessionInfo(""' false);  					}  					//Note return not break  					return;  			}
Magic Number,ScanningAndDetecting3DObjects,ViewControllerSessionInfo,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewControllerSessionInfo.cs,UpdateSessionInfoLabel,The following statement contains a magic number: switch (camera.TrackingState)  			{  				case ARTrackingState.NotAvailable :  					message = $"{stateString} not possible : {camera.PresentationString()}";  					startTimeOfLastMessage = DateTime.Now;  					expirationTimeOfLastMessage = 3.0;  					break;  				case ARTrackingState.Limited :  					message = $"{stateString} might not work : {camera.PresentationString()}";  					startTimeOfLastMessage = DateTime.Now;  					expirationTimeOfLastMessage = 3.0;  					break;  				default :  					// No feedback needed when tracking is normal.  					// Defer clearing the info label if the last message hasn't reached its expiration time.  					var now = DateTime.Now;  					if ((now - startTimeOfLastMessage).TotalSeconds < expirationTimeOfLastMessage)  					{  						var timeToKeepLastMessageOnScreen = expirationTimeOfLastMessage - (now - startTimeOfLastMessage).TotalSeconds;  						StartMessageExpirationTimer(timeToKeepLastMessageOnScreen);  					}  					else  					{  						// Otherwise hide the info label immediately  						source.ShowSessionInfo(""' false);  					}  					//Note return not break  					return;  			}
Magic Number,ScanningAndDetecting3DObjects,ScannedObject,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedObject.cs,CreateBoundingBox,The following statement contains a magic number: var newExtent = (float)result.Distance / 3;
Magic Number,ScanningAndDetecting3DObjects,ScannedObject,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedObject.cs,CreateBoundingBox,The following statement contains a magic number: var boundingBoxOffset = normalizedDirection * (float)newExtent / 2;
Magic Number,ScanningAndDetecting3DObjects,ScannedObject,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedObject.cs,UpdateOrCreateGhostBoundingBox,The following statement contains a magic number: var newExtent = (float)result.Distance / 3;
Magic Number,ScanningAndDetecting3DObjects,ScannedObject,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedObject.cs,UpdateOrCreateGhostBoundingBox,The following statement contains a magic number: var boundingBoxOffset = normalizedDirection * newExtent / 2;
Magic Number,ScanningAndDetecting3DObjects,ScannedObject,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedObject.cs,MoveOriginToBottomOfBoundingBox,The following statement contains a magic number: Origin.Position = new SCNVector3(Position.X' -boundingBox.Extent.Y / 2' Position.Z);
Magic Number,ScanningAndDetecting3DObjects,ScannedObject,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedObject.cs,ScaleBoundingBox,The following statement contains a magic number: boundingBox.WorldPosition = new SCNVector3(bbwp.X' bbwp.Y - diffOnY / 2' bbwp.Z);
Magic Number,ScanningAndDetecting3DObjects,ScannedPointCloud,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedPointCloud.cs,ScannedPointCloud,The following statement contains a magic number: notificationObservationHandles = new NSObject[4];
Magic Number,ScanningAndDetecting3DObjects,ScannedPointCloud,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedPointCloud.cs,ScannedPointCloud,The following statement contains a magic number: notificationObservationHandles[2] = NSNotificationCenter.DefaultCenter.AddObserver(BoundingBox.PositionChangedNotificationName' BoundingBoxPositionOrExtentChanged);
Magic Number,ScanningAndDetecting3DObjects,ScannedPointCloud,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedPointCloud.cs,ScannedPointCloud,The following statement contains a magic number: notificationObservationHandles[3] = NSNotificationCenter.DefaultCenter.AddObserver(ScannedObject.PositionChangedNotificationName' ScannedObjectPositionChanged);
Magic Number,ScanningAndDetecting3DObjects,ScannedPointCloud,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedPointCloud.cs,UpdateOnEveryFrame,The following statement contains a magic number: var min = -boundingBox.Extent.ToSCNVector3() / 2;
Magic Number,ScanningAndDetecting3DObjects,ScannedPointCloud,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedPointCloud.cs,UpdateOnEveryFrame,The following statement contains a magic number: var max = boundingBox.Extent.ToSCNVector3() / 2;
Magic Number,ScanningAndDetecting3DObjects,ScannedPointCloud,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedPointCloud.cs,UpdateOnEveryFrame,The following statement contains a magic number: pointNode.Geometry = PointCloud.CreateVisualization(renderedPoints.Select(p => p.ToNVector3()).ToArray()' Utilities.AppYellow' 12);
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,FitOverPointCloud,The following statement contains a magic number: nearbyPoints >= 3
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,FitOverPointCloud,The following statement contains a magic number: otherPoint != point && point.Distance(otherPoint) < 0.03
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,FitOverPointCloud,The following statement contains a magic number: var localMin = extent.Times(-0.5f);
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,FitOverPointCloud,The following statement contains a magic number: var localMax = extent.Times(0.5f);
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,FitOverPointCloud,The following statement contains a magic number: Position = Position.Plus(localMin.Plus(localMax).Times(0.5f));
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,UpdateSides,The following statement contains a magic number: sides.Count != 6
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,UpdateSideDrag,The following statement contains a magic number: var originOffset = (drag.PlaneTransform.Column0 * (movementAlongRay / 2)).Xyz;
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,HighlightCurrentTitle,The following statement contains a magic number: var ray = new Ray(camera' 5.0f);
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,UpdateCapturingProcess,The following statement contains a magic number: var currentRay = new Ray(camera' 5.0F);
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,UpdateCapturingProcess,The following statement contains a magic number: frameCounter % 20 == 0
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,UpdateCapturingProcess,The following statement contains a magic number: frameCounter % 10 != 0 || updatingCaptureProcess
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,UpdateCapturingProcess,The following statement contains a magic number: sum += side.Completion / 5.0;
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,UpdateCapturingProcess,The following statement contains a magic number: var progressPercentage = (int)Math.Min((int)Math.Floor(sum * 100)' 100);
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,UpdateCapturingProcess,The following statement contains a magic number: var progressPercentage = (int)Math.Min((int)Math.Floor(sum * 100)' 100);
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,HitLocationDifferentFromPreviousRayHitTests,The following statement contains a magic number: var distThreshold = 0.03;
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,TryToAlignWithPlanes,The following statement contains a magic number: var bottomCenter = new SCNVector3(Position.X' Position.Y - Extent.Y / 2' Position.Z);
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,TryToAlignWithPlanes,The following statement contains a magic number: var tolerance = 0.1;
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,TryToAlignWithPlanes,The following statement contains a magic number: var minX = plane.Center.X - plane.Extent.X / 2 - plane.Extent.X * tolerance;
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,TryToAlignWithPlanes,The following statement contains a magic number: var maxX = plane.Center.X + plane.Extent.X / 2 + plane.Extent.X * tolerance;
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,TryToAlignWithPlanes,The following statement contains a magic number: var minZ = plane.Center.Z - plane.Extent.Z / 2 - plane.Extent.Z * tolerance;
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,TryToAlignWithPlanes,The following statement contains a magic number: var maxZ = plane.Center.Z + plane.Extent.Z / 2 + plane.Extent.Z * tolerance;
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,TryToAlignWithPlanes,The following statement contains a magic number: var epsilon = 0.001;
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,TryToAlignWithPlanes,The following statement contains a magic number: var maxDistance = Extent.Y / 2;
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,TryToAlignWithPlanes,The following statement contains a magic number: Position = new SCNVector3(Position.X' Position.Y - offsetToNearestPlaneOnY / 2' Position.Z);
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,Contains,The following statement contains a magic number: var localMin = Extent.Times(-0.5F);
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,Contains,The following statement contains a magic number: var localMax = Extent.Times(0.5F);
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,SnapToHorizontalPlane,The following statement contains a magic number: var snapThreshold = 0.01;
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,SnapToHorizontalPlane,The following statement contains a magic number: var bottomY = WorldPosition.Y - Extent.Y / 2;
Magic Number,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,SnapToHorizontalPlane,The following statement contains a magic number: WorldPosition = new SCNVector3(WorldPosition.X' anchor.Transform.Position().Y + Extent.Y / 2' WorldPosition.Z);
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,ObjectOrigin,The following statement contains a magic number: var thickness = (axisLength / 100.0F) * axisThickness;
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,ObjectOrigin,The following statement contains a magic number: var radius = axisThickness / 2;
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,ObjectOrigin,The following statement contains a magic number: var handleSize = axisLength / 4;
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,ObjectOrigin,The following statement contains a magic number: notificationObserverHandles = new NSObject[2];
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,AdjustToExtent,The following statement contains a magic number: var modelExtent = radius * 2;
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,RotateWithSnappingOnYAxis,The following statement contains a magic number: var snapInterval = PI / 2;
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,RotateWithSnappingOnYAxis,The following statement contains a magic number: var snapThreshold = PI / 30;
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,OutsideBoundingBox,The following statement contains a magic number: var threshold = 0.002F;
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,OutsideBoundingBox,The following statement contains a magic number: return pos.X < -extent.X / 2  				|| pos.Y < -extent.Y / 2  				|| pos.Z < -extent.Z / 2 				|| pos.X > extent.X / 2 				|| pos.Y > extent.Y / 2 				|| pos.Z > extent.Z / 2;
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,OutsideBoundingBox,The following statement contains a magic number: return pos.X < -extent.X / 2  				|| pos.Y < -extent.Y / 2  				|| pos.Z < -extent.Z / 2 				|| pos.X > extent.X / 2 				|| pos.Y > extent.Y / 2 				|| pos.Z > extent.Z / 2;
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,OutsideBoundingBox,The following statement contains a magic number: return pos.X < -extent.X / 2  				|| pos.Y < -extent.Y / 2  				|| pos.Z < -extent.Z / 2 				|| pos.X > extent.X / 2 				|| pos.Y > extent.Y / 2 				|| pos.Z > extent.Z / 2;
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,OutsideBoundingBox,The following statement contains a magic number: return pos.X < -extent.X / 2  				|| pos.Y < -extent.Y / 2  				|| pos.Z < -extent.Z / 2 				|| pos.X > extent.X / 2 				|| pos.Y > extent.Y / 2 				|| pos.Z > extent.Z / 2;
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,OutsideBoundingBox,The following statement contains a magic number: return pos.X < -extent.X / 2  				|| pos.Y < -extent.Y / 2  				|| pos.Z < -extent.Z / 2 				|| pos.X > extent.X / 2 				|| pos.Y > extent.Y / 2 				|| pos.Z > extent.Z / 2;
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,OutsideBoundingBox,The following statement contains a magic number: return pos.X < -extent.X / 2  				|| pos.Y < -extent.Y / 2  				|| pos.Z < -extent.Z / 2 				|| pos.X > extent.X / 2 				|| pos.Y > extent.Y / 2 				|| pos.Z > extent.Z / 2;
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,SnapToBoundingBoxSide,The following statement contains a magic number: var snapThreshold = 0.01;
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,SnapToBoundingBoxSide,The following statement contains a magic number: Position = new SCNVector3(extent.X / 2' Position.Y' Position.Z);
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,SnapToBoundingBoxSide,The following statement contains a magic number: Abs(extent.X / 2 - Position.X) < snapThreshold
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,SnapToBoundingBoxSide,The following statement contains a magic number: Position = new SCNVector3(Position.X' extent.Y / 2' Position.Z);
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,SnapToBoundingBoxSide,The following statement contains a magic number: Abs(extent.Y / 2 - Position.Y) < snapThreshold
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,SnapToBoundingBoxSide,The following statement contains a magic number: Position = new SCNVector3(Position.X' Position.Y' extent.Z / 2);
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,SnapToBoundingBoxSide,The following statement contains a magic number: Abs(extent.Z / 2 - Position.Z) < snapThreshold
Magic Number,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,SnapToBoundingBoxCenter,The following statement contains a magic number: var snapThreshold = 0.01F;
Magic Number,ScanningAndDetecting3DObjects,Utilities,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Utility_Extensions\Utilities.cs,Load3DModel,The following statement contains a magic number: var ambientLight = new SCNLight  				{  					LightType = SCNLightType.Ambient'  					Intensity = 100  				};
Magic Number,ScanningAndDetecting3DObjects,Utilities,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Utility_Extensions\Utilities.cs,Load3DModel,The following statement contains a magic number: var directionLight = new SCNLight  				{  					LightType = SCNLightType.Directional'  					Intensity = 500  				};
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,BoundingBoxSide,The following statement contains a magic number: float quarterTurn = (float)Math.PI / 2;
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,BoundingBoxSide,The following statement contains a magic number: switch(face)  			{  				case PositionName.Front : 					LocalTranslate(new SCNVector3(0' 0' extent.Z / 2));  					break;  				case PositionName.Back :  					LocalTranslate(new SCNVector3(0' 0' -extent.Z / 2));  					LocalRotate(SCNQuaternion.FromAxisAngle(yAxis' halfTurn));  					break;  				case PositionName.Left :  					LocalTranslate(new SCNVector3(-extent.X / 2' 0' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(yAxis' -quarterTurn));  					break;  				case PositionName.Right :  					LocalTranslate(new SCNVector3(extent.X / 2' 0' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(yAxis' quarterTurn));  					break;  				case PositionName.Bottom : 					LocalTranslate(new SCNVector3(0' -extent.Y / 2' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(xAxis' halfTurn));  					break;  				case PositionName.Top :  					LocalTranslate(new SCNVector3(0' extent.Y / 2' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(xAxis' -quarterTurn));  					break;  			}
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,BoundingBoxSide,The following statement contains a magic number: switch(face)  			{  				case PositionName.Front : 					LocalTranslate(new SCNVector3(0' 0' extent.Z / 2));  					break;  				case PositionName.Back :  					LocalTranslate(new SCNVector3(0' 0' -extent.Z / 2));  					LocalRotate(SCNQuaternion.FromAxisAngle(yAxis' halfTurn));  					break;  				case PositionName.Left :  					LocalTranslate(new SCNVector3(-extent.X / 2' 0' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(yAxis' -quarterTurn));  					break;  				case PositionName.Right :  					LocalTranslate(new SCNVector3(extent.X / 2' 0' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(yAxis' quarterTurn));  					break;  				case PositionName.Bottom : 					LocalTranslate(new SCNVector3(0' -extent.Y / 2' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(xAxis' halfTurn));  					break;  				case PositionName.Top :  					LocalTranslate(new SCNVector3(0' extent.Y / 2' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(xAxis' -quarterTurn));  					break;  			}
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,BoundingBoxSide,The following statement contains a magic number: switch(face)  			{  				case PositionName.Front : 					LocalTranslate(new SCNVector3(0' 0' extent.Z / 2));  					break;  				case PositionName.Back :  					LocalTranslate(new SCNVector3(0' 0' -extent.Z / 2));  					LocalRotate(SCNQuaternion.FromAxisAngle(yAxis' halfTurn));  					break;  				case PositionName.Left :  					LocalTranslate(new SCNVector3(-extent.X / 2' 0' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(yAxis' -quarterTurn));  					break;  				case PositionName.Right :  					LocalTranslate(new SCNVector3(extent.X / 2' 0' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(yAxis' quarterTurn));  					break;  				case PositionName.Bottom : 					LocalTranslate(new SCNVector3(0' -extent.Y / 2' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(xAxis' halfTurn));  					break;  				case PositionName.Top :  					LocalTranslate(new SCNVector3(0' extent.Y / 2' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(xAxis' -quarterTurn));  					break;  			}
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,BoundingBoxSide,The following statement contains a magic number: switch(face)  			{  				case PositionName.Front : 					LocalTranslate(new SCNVector3(0' 0' extent.Z / 2));  					break;  				case PositionName.Back :  					LocalTranslate(new SCNVector3(0' 0' -extent.Z / 2));  					LocalRotate(SCNQuaternion.FromAxisAngle(yAxis' halfTurn));  					break;  				case PositionName.Left :  					LocalTranslate(new SCNVector3(-extent.X / 2' 0' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(yAxis' -quarterTurn));  					break;  				case PositionName.Right :  					LocalTranslate(new SCNVector3(extent.X / 2' 0' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(yAxis' quarterTurn));  					break;  				case PositionName.Bottom : 					LocalTranslate(new SCNVector3(0' -extent.Y / 2' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(xAxis' halfTurn));  					break;  				case PositionName.Top :  					LocalTranslate(new SCNVector3(0' extent.Y / 2' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(xAxis' -quarterTurn));  					break;  			}
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,BoundingBoxSide,The following statement contains a magic number: switch(face)  			{  				case PositionName.Front : 					LocalTranslate(new SCNVector3(0' 0' extent.Z / 2));  					break;  				case PositionName.Back :  					LocalTranslate(new SCNVector3(0' 0' -extent.Z / 2));  					LocalRotate(SCNQuaternion.FromAxisAngle(yAxis' halfTurn));  					break;  				case PositionName.Left :  					LocalTranslate(new SCNVector3(-extent.X / 2' 0' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(yAxis' -quarterTurn));  					break;  				case PositionName.Right :  					LocalTranslate(new SCNVector3(extent.X / 2' 0' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(yAxis' quarterTurn));  					break;  				case PositionName.Bottom : 					LocalTranslate(new SCNVector3(0' -extent.Y / 2' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(xAxis' halfTurn));  					break;  				case PositionName.Top :  					LocalTranslate(new SCNVector3(0' extent.Y / 2' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(xAxis' -quarterTurn));  					break;  			}
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,BoundingBoxSide,The following statement contains a magic number: switch(face)  			{  				case PositionName.Front : 					LocalTranslate(new SCNVector3(0' 0' extent.Z / 2));  					break;  				case PositionName.Back :  					LocalTranslate(new SCNVector3(0' 0' -extent.Z / 2));  					LocalRotate(SCNQuaternion.FromAxisAngle(yAxis' halfTurn));  					break;  				case PositionName.Left :  					LocalTranslate(new SCNVector3(-extent.X / 2' 0' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(yAxis' -quarterTurn));  					break;  				case PositionName.Right :  					LocalTranslate(new SCNVector3(extent.X / 2' 0' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(yAxis' quarterTurn));  					break;  				case PositionName.Bottom : 					LocalTranslate(new SCNVector3(0' -extent.Y / 2' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(xAxis' halfTurn));  					break;  				case PositionName.Top :  					LocalTranslate(new SCNVector3(0' extent.Y / 2' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(xAxis' -quarterTurn));  					break;  			}
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,BoundingBoxSide,The following statement contains a magic number: index == 2 || index == 3
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,BoundingBoxSide,The following statement contains a magic number: index == 2 || index == 3
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,BoundingBoxSide,The following statement contains a magic number: index < 4
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,BoundingBoxSide,The following statement contains a magic number: index < 12
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,Cylinder,The following statement contains a magic number: var cylinderGeometry = SCNCylinder.Create((nfloat) width / 2' (nfloat) height);
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,UpdateExtensions,The following statement contains a magic number: xAxisExtLines.Count != 4 || yAxisExtLines.Count != 4 || zAxisExtLines.Count != 4
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,UpdateExtensions,The following statement contains a magic number: xAxisExtLines.Count != 4 || yAxisExtLines.Count != 4 || zAxisExtLines.Count != 4
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,UpdateExtensions,The following statement contains a magic number: xAxisExtLines.Count != 4 || yAxisExtLines.Count != 4 || zAxisExtLines.Count != 4
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,UpdateExtensions,The following statement contains a magic number: var halfWidth = (float) size.Width / 2;
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,UpdateExtensions,The following statement contains a magic number: var halfHeight = (float) size.Height / 2;
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,UpdateExtensions,The following statement contains a magic number: var halfLength = (float) extensionLength / 2;
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,UpdateExtensions,The following statement contains a magic number: xAxisExtLines[2].Position = new SCNVector3(halfWidth + halfLength' -halfHeight' 0);
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,UpdateExtensions,The following statement contains a magic number: yAxisExtLines[2].Position = new SCNVector3(halfWidth' -halfHeight - halfLength' 0);
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,UpdateExtensions,The following statement contains a magic number: zAxisExtLines[2].Position = new SCNVector3(halfWidth' -halfHeight' halfLength);
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,UpdateExtensions,The following statement contains a magic number: xAxisExtLines[3].Position = new SCNVector3(halfWidth + halfLength' halfHeight' 0);
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,UpdateExtensions,The following statement contains a magic number: yAxisExtLines[3].Position = new SCNVector3(halfWidth' halfHeight + halfLength' 0);
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,UpdateExtensions,The following statement contains a magic number: zAxisExtLines[3].Position = new SCNVector3(halfWidth' halfHeight' halfLength);
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,UpdateBoundingBoxExtent,The following statement contains a magic number: switch (face)  			{  				case PositionName.Front :   					Position = new SCNVector3(0' 0' extent.Z / 2); 					break;  				case PositionName.Back :  					Position = new SCNVector3(0' 0' -extent.Z / 2);  					break;  				case PositionName.Left :  					Position = new SCNVector3(-extent.X / 2' 0' 0);  					break;  				case PositionName.Right : 					Position = new SCNVector3(extent.X / 2' 0' 0);  					break;  				case PositionName.Bottom : 					Position = new SCNVector3(0' -extent.Y / 2' 0);  					break;  				case PositionName.Top : 					Position = new SCNVector3(0' extent.Y / 2' 0);  					break;  			}
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,UpdateBoundingBoxExtent,The following statement contains a magic number: switch (face)  			{  				case PositionName.Front :   					Position = new SCNVector3(0' 0' extent.Z / 2); 					break;  				case PositionName.Back :  					Position = new SCNVector3(0' 0' -extent.Z / 2);  					break;  				case PositionName.Left :  					Position = new SCNVector3(-extent.X / 2' 0' 0);  					break;  				case PositionName.Right : 					Position = new SCNVector3(extent.X / 2' 0' 0);  					break;  				case PositionName.Bottom : 					Position = new SCNVector3(0' -extent.Y / 2' 0);  					break;  				case PositionName.Top : 					Position = new SCNVector3(0' extent.Y / 2' 0);  					break;  			}
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,UpdateBoundingBoxExtent,The following statement contains a magic number: switch (face)  			{  				case PositionName.Front :   					Position = new SCNVector3(0' 0' extent.Z / 2); 					break;  				case PositionName.Back :  					Position = new SCNVector3(0' 0' -extent.Z / 2);  					break;  				case PositionName.Left :  					Position = new SCNVector3(-extent.X / 2' 0' 0);  					break;  				case PositionName.Right : 					Position = new SCNVector3(extent.X / 2' 0' 0);  					break;  				case PositionName.Bottom : 					Position = new SCNVector3(0' -extent.Y / 2' 0);  					break;  				case PositionName.Top : 					Position = new SCNVector3(0' extent.Y / 2' 0);  					break;  			}
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,UpdateBoundingBoxExtent,The following statement contains a magic number: switch (face)  			{  				case PositionName.Front :   					Position = new SCNVector3(0' 0' extent.Z / 2); 					break;  				case PositionName.Back :  					Position = new SCNVector3(0' 0' -extent.Z / 2);  					break;  				case PositionName.Left :  					Position = new SCNVector3(-extent.X / 2' 0' 0);  					break;  				case PositionName.Right : 					Position = new SCNVector3(extent.X / 2' 0' 0);  					break;  				case PositionName.Bottom : 					Position = new SCNVector3(0' -extent.Y / 2' 0);  					break;  				case PositionName.Top : 					Position = new SCNVector3(0' extent.Y / 2' 0);  					break;  			}
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,UpdateBoundingBoxExtent,The following statement contains a magic number: switch (face)  			{  				case PositionName.Front :   					Position = new SCNVector3(0' 0' extent.Z / 2); 					break;  				case PositionName.Back :  					Position = new SCNVector3(0' 0' -extent.Z / 2);  					break;  				case PositionName.Left :  					Position = new SCNVector3(-extent.X / 2' 0' 0);  					break;  				case PositionName.Right : 					Position = new SCNVector3(extent.X / 2' 0' 0);  					break;  				case PositionName.Bottom : 					Position = new SCNVector3(0' -extent.Y / 2' 0);  					break;  				case PositionName.Top : 					Position = new SCNVector3(0' extent.Y / 2' 0);  					break;  			}
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,UpdateBoundingBoxExtent,The following statement contains a magic number: switch (face)  			{  				case PositionName.Front :   					Position = new SCNVector3(0' 0' extent.Z / 2); 					break;  				case PositionName.Back :  					Position = new SCNVector3(0' 0' -extent.Z / 2);  					break;  				case PositionName.Left :  					Position = new SCNVector3(-extent.X / 2' 0' 0);  					break;  				case PositionName.Right : 					Position = new SCNVector3(extent.X / 2' 0' 0);  					break;  				case PositionName.Bottom : 					Position = new SCNVector3(0' -extent.Y / 2' 0);  					break;  				case PositionName.Top : 					Position = new SCNVector3(0' extent.Y / 2' 0);  					break;  			}
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,SetupTiles,The following statement contains a magic number: var xPos = -size.Width / 2 + plane.Width / 2 + col * plane.Width;
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,SetupTiles,The following statement contains a magic number: var xPos = -size.Width / 2 + plane.Width / 2 + col * plane.Width;
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,SetupTiles,The following statement contains a magic number: var yPos = size.Height / 2 - plane.Height / 2 - row * plane.Height;
Magic Number,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,SetupTiles,The following statement contains a magic number: var yPos = size.Height / 2 - plane.Height / 2 - row * plane.Height;
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Wireframe,The following statement contains a magic number: i <= 12
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: var halfX = extent.X / 2;
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: var halfY = extent.Y / 2;
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: var halfZ = extent.Z / 2;
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: Action<SCNNode' float' float' float' Axis> xlatAndRot = (node' extentX' extentY' extentZ' axis) =>  			{  				xlat(node' extentX' extentY' extentZ);  				node.LocalRotate(SCNQuaternion.FromAxisAngle(axis.Normal().ToSCNVector3()' (float) -Math.PI / 2));  			};
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: var halfWidth = extent.X / 2;
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: var halfHeight = extent.Y / 2;
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: var halfDepth = extent.Z / 2;
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: xlatAndRot( lineNodes[2]'          0' -halfHeight'  halfDepth' Axis.Z);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: xlatAndRot( lineNodes[3]'  halfWidth' -halfHeight'          0' Axis.X);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: xlat(       lineNodes[4]'  -extent.X'           0' -halfDepth);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: xlat(       lineNodes[5]' -halfWidth'           0'  halfDepth);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: xlat(       lineNodes[6]'  halfWidth'           0' -halfDepth);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: xlat(       lineNodes[7]'  halfWidth'           0'  halfDepth);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: xlatAndRot( lineNodes[8]'          0'  halfHeight' -halfDepth' Axis.Z);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: xlatAndRot( lineNodes[9]' -halfWidth'  halfHeight'          0' Axis.X);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: xlatAndRot(lineNodes[10]'          0'  halfHeight'  halfDepth' Axis.Z);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: xlatAndRot(lineNodes[11]'  halfWidth'  halfHeight'          0' Axis.X);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: lineNodes[2].Geometry = Cylinder(extent.X);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: lineNodes[3].Geometry = Cylinder(extent.Z);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: lineNodes[4].Geometry = Cylinder(extent.Y);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: lineNodes[5].Geometry = Cylinder(extent.Y);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: lineNodes[6].Geometry = Cylinder(extent.Y);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: lineNodes[7].Geometry = Cylinder(extent.Y);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: lineNodes[8].Geometry = Cylinder(extent.X);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: lineNodes[9].Geometry = Cylinder(extent.Z);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: lineNodes[10].Geometry = Cylinder(extent.X);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Setup,The following statement contains a magic number: lineNodes[11].Geometry = Cylinder(extent.Z);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Cylinder,The following statement contains a magic number: var radius = width == null ? (float)lineThickness / 2 : width.Value / 2;
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Cylinder,The following statement contains a magic number: var radius = width == null ? (float)lineThickness / 2 : width.Value / 2;
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: lineNodes.Count != 12
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: var halfWidth = extent.X / 2;
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: var halfHeight = extent.Y / 2;
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: var halfDepth = extent.Z / 2;
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: lineNodes[2].Position = new SCNVector3(0' -halfHeight' halfDepth);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: lineNodes[3].Position = new SCNVector3(halfWidth' -halfHeight' 0);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: lineNodes[4].Position = new SCNVector3(-halfWidth' 0' -halfDepth);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: lineNodes[5].Position = new SCNVector3(-halfWidth' 0' halfDepth);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: lineNodes[6].Position = new SCNVector3(halfWidth' 0' -halfDepth);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: lineNodes[7].Position = new SCNVector3(halfWidth' 0' halfDepth);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: lineNodes[8].Position = new SCNVector3(0' halfHeight' -halfDepth);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: lineNodes[9].Position = new SCNVector3(-halfWidth' halfHeight' 0);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: lineNodes[10].Position = new SCNVector3(0' halfHeight' halfDepth);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: lineNodes[11].Position = new SCNVector3(halfWidth' halfHeight' 0);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: ht(lineNodes[2]' extent.X);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: ht(lineNodes[3]' extent.Z);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: ht(lineNodes[4]' extent.Y);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: ht(lineNodes[5]' extent.Y);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: ht(lineNodes[6]' extent.Y);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: ht(lineNodes[7]' extent.Y);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: ht(lineNodes[8]' extent.X);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: ht(lineNodes[9]' extent.Z);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: ht(lineNodes[10]' extent.X);
Magic Number,ScanningAndDetecting3DObjects,Wireframe,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Wireframe.cs,Update,The following statement contains a magic number: ht(lineNodes[11]' extent.Z);
Magic Number,ScanningAndDetecting3DObjects,Tile,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Tile.cs,Tile,The following statement contains a magic number: innerPlane.Materials = new[] { Utilities.Material(Utilities.AppBrown.ColorWithAlpha(0.8F)' false' false) };
Magic Number,ScanningAndDetecting3DObjects,Tile,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Tile.cs,UpdateVisualization,The following statement contains a magic number: var newOpacity = Captured ? 0.5 : 0.0;
Magic Number,ScanningAndDetecting3DObjects,Tile,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\Tile.cs,UpdateVisualization,The following statement contains a magic number: newOpacity += Highlighted ? 0.35 : 0.0;
Magic Number,ScanningAndDetecting3DObjects,DetectedBoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\DetectedBoundingBox.cs,DetectedBoundingBox,The following statement contains a magic number: Position = Position + (localMax + localMin) / 2;
Magic Number,ScanningAndDetecting3DObjects,DetectedPointCloud,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\DetectedPointCloud.cs,DetectedPointCloud,The following statement contains a magic number: referenceObjectPoints.Geometry = PointCloud.CreateVisualization(referenceObjectPointCloud.Points' Utilities.AppYellow' 12);
Magic Number,ScanningAndDetecting3DObjects,DetectedPointCloud,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\DetectedPointCloud.cs,UpdateVisualization,The following statement contains a magic number: var min = Position + Center - Extent / 2;
Magic Number,ScanningAndDetecting3DObjects,DetectedPointCloud,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\DetectedPointCloud.cs,UpdateVisualization,The following statement contains a magic number: var max = Position + Center + Extent / 2;
Magic Number,ScanningAndDetecting3DObjects,DetectedPointCloud,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\DetectedPointCloud.cs,UpdateVisualization,The following statement contains a magic number: Geometry = PointCloud.CreateVisualization(currentPointCloudInliers' Utilities.AppGreen' 12);
Magic Number,ScanningAndDetecting3DObjects,ObjectOriginAxis,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOriginAxis.cs,ObjectOriginAxis,The following statement contains a magic number: var position = new SCNVector3((float)(axis.Normal().X * (length / 2.0))' (float)(axis.Normal().Y * (length / 2.0))' (float)(axis.Normal().Z * (length / 2.0)));
Magic Number,ScanningAndDetecting3DObjects,ObjectOriginAxis,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOriginAxis.cs,ObjectOriginAxis,The following statement contains a magic number: var position = new SCNVector3((float)(axis.Normal().X * (length / 2.0))' (float)(axis.Normal().Y * (length / 2.0))' (float)(axis.Normal().Z * (length / 2.0)));
Magic Number,ScanningAndDetecting3DObjects,ObjectOriginAxis,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOriginAxis.cs,ObjectOriginAxis,The following statement contains a magic number: var position = new SCNVector3((float)(axis.Normal().X * (length / 2.0))' (float)(axis.Normal().Y * (length / 2.0))' (float)(axis.Normal().Z * (length / 2.0)));
Magic Number,ScanningAndDetecting3DObjects,ObjectOriginAxis,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOriginAxis.cs,ObjectOriginAxis,The following statement contains a magic number: var padding = handleSize * 0.8F;
Magic Number,ScanningAndDetecting3DObjects,ObjectOriginAxis,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOriginAxis.cs,UpdateRenderOrder,The following statement contains a magic number: node.RenderingOrder = isOnTop ? 2 : 0;
Magic Number,ScanningAndDetecting3DObjects,PointCloud,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\PointCloud.cs,CreateVisualization,The following statement contains a magic number: var stride = sizeof(float) * 3;
Magic Number,ScanningAndDetecting3DObjects,PointCloud,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\PointCloud.cs,CreateVisualization,The following statement contains a magic number: var source = SCNGeometrySource.FromData(  						pointData'  						SCNGeometrySourceSemantics.Vertex'  						points.Length'  						true'  						3'  						sizeof(float)'  						0'  						stride  					);
Magic Number,ScanningAndDetecting3DObjects,PointCloud,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\PointCloud.cs,CreateVisualization,The following statement contains a magic number: element.PointSize = 0.001F;
Magic Number,ScanningAndDetecting3DObjects,SCNVector3_Extensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Utility_Extensions\SCNVector3_Extensions.cs,Distance,The following statement contains a magic number: var distanceSquared = Pow(self.X - other.X' 2) + Pow(self.Y - other.Y' 2) + Pow(self.Z - other.Z' 2);
Magic Number,ScanningAndDetecting3DObjects,SCNVector3_Extensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Utility_Extensions\SCNVector3_Extensions.cs,Distance,The following statement contains a magic number: var distanceSquared = Pow(self.X - other.X' 2) + Pow(self.Y - other.Y' 2) + Pow(self.Z - other.Z' 2);
Magic Number,ScanningAndDetecting3DObjects,SCNVector3_Extensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Utility_Extensions\SCNVector3_Extensions.cs,Distance,The following statement contains a magic number: var distanceSquared = Pow(self.X - other.X' 2) + Pow(self.Y - other.Y' 2) + Pow(self.Z - other.Z' 2);
Magic Number,ScanningAndDetecting3DObjects,NVector3_Extensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Utility_Extensions\NVector3_Extensions.cs,Distance,The following statement contains a magic number: var distanceSquared = Pow(self.X - other.X' 2) + Pow(self.Y - other.Y' 2) + Pow(self.Z - other.Z' 2);
Magic Number,ScanningAndDetecting3DObjects,NVector3_Extensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Utility_Extensions\NVector3_Extensions.cs,Distance,The following statement contains a magic number: var distanceSquared = Pow(self.X - other.X' 2) + Pow(self.Y - other.Y' 2) + Pow(self.Z - other.Z' 2);
Magic Number,ScanningAndDetecting3DObjects,NVector3_Extensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Utility_Extensions\NVector3_Extensions.cs,Distance,The following statement contains a magic number: var distanceSquared = Pow(self.X - other.X' 2) + Pow(self.Y - other.Y' 2) + Pow(self.Z - other.Z' 2);
Magic Number,ScanningAndDetecting3DObjects,ARSCNView_Extensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Utility_Extensions\ARSCNView_Extensions.cs,SmartHitTest,The following statement contains a magic number: result.Distance > 0.2 && result.Distance < 3
Magic Number,ScanningAndDetecting3DObjects,ARSCNView_Extensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Utility_Extensions\ARSCNView_Extensions.cs,SmartHitTest,The following statement contains a magic number: result.Distance > 0.2 && result.Distance < 3
Missing Default,ScanningAndDetecting3DObjects,ViewControllerApplicationState,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewControllerApplicationState.cs,SwitchToNextState,The following switch statement is missing a default case: switch (CurrentState)  			{  				case AppState.StartARSession :  					CurrentState = AppState.NotReady;  					break;  				case AppState.NotReady :  					CurrentState = AppState.Scanning;  					break;  				case AppState.Scanning :  					var scan = source.CurrentScan;   					if (scan != null)  					{  						switch (scan.State)  						{  							case Scan.ScanState.Ready :  								scan.State = Scan.ScanState.DefineBoundingBox;  								break;  							case Scan.ScanState.DefineBoundingBox :  								scan.State = Scan.ScanState.Scanning;  								break;  							case Scan.ScanState.Scanning :  								scan.State = Scan.ScanState.AdjustingOrigin;  								break;  							case Scan.ScanState.AdjustingOrigin :  								CurrentState = AppState.Testing;  								break;  						}  					}  					break;  				case AppState.Testing :  					// Testing is the last state' show the share sheet at the end.  					source.CreateAndShareReferenceObject();  					break;  			}
Missing Default,ScanningAndDetecting3DObjects,ViewControllerApplicationState,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewControllerApplicationState.cs,SwitchToNextState,The following switch statement is missing a default case: switch (scan.State)  						{  							case Scan.ScanState.Ready :  								scan.State = Scan.ScanState.DefineBoundingBox;  								break;  							case Scan.ScanState.DefineBoundingBox :  								scan.State = Scan.ScanState.Scanning;  								break;  							case Scan.ScanState.Scanning :  								scan.State = Scan.ScanState.AdjustingOrigin;  								break;  							case Scan.ScanState.AdjustingOrigin :  								CurrentState = AppState.Testing;  								break;  						}
Missing Default,ScanningAndDetecting3DObjects,ViewControllerApplicationState,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewControllerApplicationState.cs,SwitchToPreviousState,The following switch statement is missing a default case: switch (CurrentState)  			{  				case AppState.StartARSession : break;  				case AppState.NotReady :  					CurrentState = AppState.StartARSession;  					break;  				case AppState.Scanning :  					var scan = source.CurrentScan;  					if (scan != null)  					{  						switch (scan.State)  						{  							case Scan.ScanState.Ready :  								source.RestartButtonTapped(this' new EventArgs());  								break;  							case Scan.ScanState.DefineBoundingBox :  								scan.State = Scan.ScanState.Ready;  								break;  							case Scan.ScanState.Scanning :  								scan.State = Scan.ScanState.DefineBoundingBox;  								break;  							case Scan.ScanState.AdjustingOrigin :  								scan.State = Scan.ScanState.Scanning;  								break;  						}  					}  					break;  				case AppState.Testing :  					CurrentState = AppState.Scanning;  					var scanT = source.CurrentScan;  					if (scanT != null)  					{  						scanT.State = Scan.ScanState.AdjustingOrigin;  					}  					break;  			}
Missing Default,ScanningAndDetecting3DObjects,ViewControllerApplicationState,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewControllerApplicationState.cs,SwitchToPreviousState,The following switch statement is missing a default case: switch (scan.State)  						{  							case Scan.ScanState.Ready :  								source.RestartButtonTapped(this' new EventArgs());  								break;  							case Scan.ScanState.DefineBoundingBox :  								scan.State = Scan.ScanState.Ready;  								break;  							case Scan.ScanState.Scanning :  								scan.State = Scan.ScanState.DefineBoundingBox;  								break;  							case Scan.ScanState.AdjustingOrigin :  								scan.State = Scan.ScanState.Scanning;  								break;  						}
Missing Default,ScanningAndDetecting3DObjects,ViewControllerApplicationState,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewControllerApplicationState.cs,ScanningStateChanged,The following switch statement is missing a default case: switch(scanState.Value)  				{  					case Scan.ScanState.Ready :  						Console.WriteLine("State: Ready to scan");  						source.EnterStateScanReady();  						break;  					case Scan.ScanState.DefineBoundingBox :  						Console.WriteLine("State : Define bounding box");  						source.EnterStateDefineBoundingBox();  						break;  					case Scan.ScanState.Scanning :  						source.EnterStateScanningContinue();  						break;  					case Scan.ScanState.AdjustingOrigin :  						Console.WriteLine("State : Adjusting origin");  						source.EnterStateAdjustingOrigin();  						break;  				}
Missing Default,ScanningAndDetecting3DObjects,Scan,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\Scan.cs,DidRotate,The following switch statement is missing a default case: switch (State)  			{  				case ScanState.Ready:  					State = ScanState.DefineBoundingBox;  					// Recurse (note that state has changed' so DefineBoundingBox clause will execute)  					DidRotate(gesture);  					break;  				case ScanState.DefineBoundingBox:  				case ScanState.Scanning:  					if (gesture.State == UIGestureRecognizerState.Changed)  					{  						scannedObject.RotateOnYAxis((float)-gesture.RotationDelta);  					}  					break;  				case ScanState.AdjustingOrigin:  					if (gesture.State == UIGestureRecognizerState.Changed)  					{  						scannedObject.Origin?.RotateWithSnappingOnYAxis((float)-gesture.RotationDelta);  					}  					break;  			}
Missing Default,ScanningAndDetecting3DObjects,ScannedObject,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedObject.cs,ScanningStateChanged,The following switch statement is missing a default case: switch (state.Value)  			{  				case Scan.ScanState.Ready:  					boundingBox?.RemoveFromParentNode();  					boundingBox?.Dispose();  					boundingBox = null;  					break;  				case Scan.ScanState.DefineBoundingBox: 					if (boundingBox == null)  					{  						CreateBoundingBoxFromGhost();  					}  					ghostBoundingBox?.RemoveFromParentNode();  					Console.WriteLine("Disposing ghostBoundingBox because I am defining the real bounding box");  					ghostBoundingBox?.Dispose();  					ghostBoundingBox = null;  					break;  				case Scan.ScanState.Scanning: 					break;  				case Scan.ScanState.AdjustingOrigin: 					MoveOriginToBottomOfBoundingBox();  					break;  			}
Missing Default,ScanningAndDetecting3DObjects,ScannedPointCloud,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ScannedPointCloud.cs,ScanningStateChanged,The following switch statement is missing a default case: switch (state.Value)  			{  				case Scan.ScanState.Ready:  				case Scan.ScanState.Scanning:  				case Scan.ScanState.DefineBoundingBox:  					Hidden = false;  					break;  				case Scan.ScanState.AdjustingOrigin:  					Hidden = true;  					break;  			}
Missing Default,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,ScanningStateChanged,The following switch statement is missing a default case: switch (scanState.Value)  			{  				case Scan.ScanState.Ready:  				case Scan.ScanState.DefineBoundingBox:  					ResetCapturingProgress();  					foreach (var s in sides.Values)  					{  						s.Hidden = false;  					}  					break;  				case Scan.ScanState.Scanning:  					foreach (var s in sides.Values)  					{  						s.Hidden = false;  					}  					break;  				case Scan.ScanState.AdjustingOrigin:  					// Hide the sides while adjusting the origin  					foreach (var s in sides.Values)  					{  						s.Hidden = true;  					}  					break;  			}
Missing Default,ScanningAndDetecting3DObjects,BoundingBox,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBox.cs,SidesForAxis,The following switch statement is missing a default case: switch (axis)  			{  				case Axis.X: return new[] { sides[BoundingBoxSide.PositionName.Left]' sides[BoundingBoxSide.PositionName.Right] };  				case Axis.Y: return new[] { sides[BoundingBoxSide.PositionName.Top]' sides[BoundingBoxSide.PositionName.Bottom] };  				case Axis.Z: return new[] { sides[BoundingBoxSide.PositionName.Front]' sides[BoundingBoxSide.PositionName.Back] };  			}
Missing Default,ScanningAndDetecting3DObjects,ObjectOrigin,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOrigin.cs,ScanningStateChanged,The following switch statement is missing a default case: switch (state.Value)  			{  				case Scan.ScanState.Ready:  				case Scan.ScanState.DefineBoundingBox:  				case Scan.ScanState.Scanning: 					Hidden = true;  					break;  				case Scan.ScanState.AdjustingOrigin: 					Hidden = false;  					break;  			}
Missing Default,ScanningAndDetecting3DObjects,ViewControllerSessionDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewControllerSessionDelegate.cs,CameraDidChangeTrackingState,The following switch statement is missing a default case: switch (camera.TrackingState)  			{  				case ARTrackingState.NotAvailable :  					appState.CurrentState = AppState.NotReady;  					break;  				case ARTrackingState.Limited :  					switch (appState.CurrentState)  					{  						case AppState.StartARSession:  							appState.CurrentState = AppState.NotReady;  							break;  						case AppState.NotReady:  						case AppState.Testing:  							break;  						case AppState.Scanning:  							var scan = source.CurrentScan;  							if (scan != null)  							{  								switch (scan.State)  								{  									case Scan.ScanState.Ready:  										appState.CurrentState = AppState.NotReady;  										break;  									case Scan.ScanState.DefineBoundingBox:  									case Scan.ScanState.Scanning:  									case Scan.ScanState.AdjustingOrigin:  										var reason = camera.TrackingStateReason;  										if (reason == ARTrackingStateReason.Relocalizing)  										{  											// If ARKit is relocalizing we should abort the current scan  											// as this can cause unpredictable distortions of the map.  											Console.WriteLine("Warning: ARKit is relocalizing");    											var title = "Warning: Scan may be broken";  											var message = "A gap in tracking has occurred. It is recommended to restart the scan.";  											var buttonTitle = "Restart Scan";  											source.ShowAlert(title' message' buttonTitle' true' (_) =>  											{  												appState.CurrentState = AppState.NotReady;  											});    										}  										else  										{  											// Suggest the user restart tracking after a while  											source.StartLimitedTrackingTimer();  										}  										break;  								}  							}  							break;  					}  					break;  				case ARTrackingState.Normal :  					source.CancelLimitedTrackingTimer();    					switch (appState.CurrentState)  					{  						case AppState.StartARSession :  						case AppState.NotReady :  							appState.CurrentState = AppState.Scanning;  							break;  						case AppState.Scanning :   						case AppState.Testing :  							break;      					}  					break;  			}
Missing Default,ScanningAndDetecting3DObjects,ViewControllerSessionDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewControllerSessionDelegate.cs,CameraDidChangeTrackingState,The following switch statement is missing a default case: switch (appState.CurrentState)  					{  						case AppState.StartARSession:  							appState.CurrentState = AppState.NotReady;  							break;  						case AppState.NotReady:  						case AppState.Testing:  							break;  						case AppState.Scanning:  							var scan = source.CurrentScan;  							if (scan != null)  							{  								switch (scan.State)  								{  									case Scan.ScanState.Ready:  										appState.CurrentState = AppState.NotReady;  										break;  									case Scan.ScanState.DefineBoundingBox:  									case Scan.ScanState.Scanning:  									case Scan.ScanState.AdjustingOrigin:  										var reason = camera.TrackingStateReason;  										if (reason == ARTrackingStateReason.Relocalizing)  										{  											// If ARKit is relocalizing we should abort the current scan  											// as this can cause unpredictable distortions of the map.  											Console.WriteLine("Warning: ARKit is relocalizing");    											var title = "Warning: Scan may be broken";  											var message = "A gap in tracking has occurred. It is recommended to restart the scan.";  											var buttonTitle = "Restart Scan";  											source.ShowAlert(title' message' buttonTitle' true' (_) =>  											{  												appState.CurrentState = AppState.NotReady;  											});    										}  										else  										{  											// Suggest the user restart tracking after a while  											source.StartLimitedTrackingTimer();  										}  										break;  								}  							}  							break;  					}
Missing Default,ScanningAndDetecting3DObjects,ViewControllerSessionDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewControllerSessionDelegate.cs,CameraDidChangeTrackingState,The following switch statement is missing a default case: switch (scan.State)  								{  									case Scan.ScanState.Ready:  										appState.CurrentState = AppState.NotReady;  										break;  									case Scan.ScanState.DefineBoundingBox:  									case Scan.ScanState.Scanning:  									case Scan.ScanState.AdjustingOrigin:  										var reason = camera.TrackingStateReason;  										if (reason == ARTrackingStateReason.Relocalizing)  										{  											// If ARKit is relocalizing we should abort the current scan  											// as this can cause unpredictable distortions of the map.  											Console.WriteLine("Warning: ARKit is relocalizing");    											var title = "Warning: Scan may be broken";  											var message = "A gap in tracking has occurred. It is recommended to restart the scan.";  											var buttonTitle = "Restart Scan";  											source.ShowAlert(title' message' buttonTitle' true' (_) =>  											{  												appState.CurrentState = AppState.NotReady;  											});    										}  										else  										{  											// Suggest the user restart tracking after a while  											source.StartLimitedTrackingTimer();  										}  										break;  								}
Missing Default,ScanningAndDetecting3DObjects,ViewControllerSessionDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Controllers\ViewControllerSessionDelegate.cs,CameraDidChangeTrackingState,The following switch statement is missing a default case: switch (appState.CurrentState)  					{  						case AppState.StartARSession :  						case AppState.NotReady :  							appState.CurrentState = AppState.Scanning;  							break;  						case AppState.Scanning :   						case AppState.Testing :  							break;      					}
Missing Default,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,BoundingBoxSide,The following switch statement is missing a default case: switch(face)  			{  				case PositionName.Front : 					LocalTranslate(new SCNVector3(0' 0' extent.Z / 2));  					break;  				case PositionName.Back :  					LocalTranslate(new SCNVector3(0' 0' -extent.Z / 2));  					LocalRotate(SCNQuaternion.FromAxisAngle(yAxis' halfTurn));  					break;  				case PositionName.Left :  					LocalTranslate(new SCNVector3(-extent.X / 2' 0' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(yAxis' -quarterTurn));  					break;  				case PositionName.Right :  					LocalTranslate(new SCNVector3(extent.X / 2' 0' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(yAxis' quarterTurn));  					break;  				case PositionName.Bottom : 					LocalTranslate(new SCNVector3(0' -extent.Y / 2' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(xAxis' halfTurn));  					break;  				case PositionName.Top :  					LocalTranslate(new SCNVector3(0' extent.Y / 2' 0));  					LocalRotate(SCNQuaternion.FromAxisAngle(xAxis' -quarterTurn));  					break;  			}
Missing Default,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,Size,The following switch statement is missing a default case: switch (face)  			{  				case PositionName.Front :  				case PositionName. Back:  					return new CGSize(extent.X' extent.Y);  				case PositionName.Left :   				case PositionName.Right :  					return new CGSize(extent.Z' extent.Y);  				case PositionName.Bottom :   				case PositionName.Top :  					return new CGSize(extent.X' extent.Z);    			}
Missing Default,ScanningAndDetecting3DObjects,BoundingBoxSide,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\BoundingBoxSide.cs,UpdateBoundingBoxExtent,The following switch statement is missing a default case: switch (face)  			{  				case PositionName.Front :   					Position = new SCNVector3(0' 0' extent.Z / 2); 					break;  				case PositionName.Back :  					Position = new SCNVector3(0' 0' -extent.Z / 2);  					break;  				case PositionName.Left :  					Position = new SCNVector3(-extent.X / 2' 0' 0);  					break;  				case PositionName.Right : 					Position = new SCNVector3(extent.X / 2' 0' 0);  					break;  				case PositionName.Bottom : 					Position = new SCNVector3(0' -extent.Y / 2' 0);  					break;  				case PositionName.Top : 					Position = new SCNVector3(0' extent.Y / 2' 0);  					break;  			}
Missing Default,ScanningAndDetecting3DObjects,Axis_Extensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Utility_Extensions\Axis.cs,Normal,The following switch statement is missing a default case: switch(self)  			{  				case Axis.X : return new NVector3(1' 0' 0);  				case Axis.Y : return new NVector3(0' 1' 0);  				case Axis.Z : return new NVector3(0' 0' 1);  			}
Missing Default,ScanningAndDetecting3DObjects,ObjectOriginAxis,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\3D_UI\ObjectOriginAxis.cs,ObjectOriginAxis,The following switch statement is missing a default case: switch(axis)  			{  				case Axis.X :  					color = UIColor.Red;  					texture = UIImage.FromFile("handle_red");  					dimensions = new SCNVector3(length' thickness' thickness);  					break;  				case Axis.Y :  					color = UIColor.Green;  					texture = UIImage.FromFile("handle_green");  					dimensions = new SCNVector3(thickness' length' thickness);  					break;  				case Axis.Z :  					color = UIColor.Blue;  					texture = UIImage.FromFile("handle_blue");  					dimensions = new SCNVector3(thickness' thickness' length);  					break;  			}
Missing Default,ScanningAndDetecting3DObjects,ARCamera_Extensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Utility_Extensions\ARCamera_Extensions.cs,PresentationString,The following switch statement is missing a default case: switch (tracking)  			{  				case ARTrackingState.NotAvailable: return "ARKit tracking UNAVAILABLE";  				case ARTrackingState.Normal: return "ARKit tracking NORMAL";  				case ARTrackingState.Limited:  					switch (self.TrackingStateReason)  					{  						case ARTrackingStateReason.ExcessiveMotion: return "ARKit tracking LIMITED : Excessive motion";  						case ARTrackingStateReason.InsufficientFeatures: return "ARKit tracking LIMITED : Low detail";  						case ARTrackingStateReason.Initializing: return "ARKit is initializing";  						case ARTrackingStateReason.Relocalizing: return "ARKit is relocalizing";  					}  					break;  			}
Missing Default,ScanningAndDetecting3DObjects,ARCamera_Extensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Utility_Extensions\ARCamera_Extensions.cs,PresentationString,The following switch statement is missing a default case: switch (self.TrackingStateReason)  					{  						case ARTrackingStateReason.ExcessiveMotion: return "ARKit tracking LIMITED : Excessive motion";  						case ARTrackingStateReason.InsufficientFeatures: return "ARKit tracking LIMITED : Low detail";  						case ARTrackingStateReason.Initializing: return "ARKit is initializing";  						case ARTrackingStateReason.Relocalizing: return "ARKit is relocalizing";  					}
Missing Default,ScanningAndDetecting3DObjects,ARCamera_Extensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios12\ScanningAndDetecting3DObjects\ScanningApp\Utility_Extensions\ARCamera_Extensions.cs,Recommendation,The following switch statement is missing a default case: switch (self.TrackingStateReason)  				{  					case ARTrackingStateReason.ExcessiveMotion: return "Try slowing down your movement or reset the session.";  					case ARTrackingStateReason.InsufficientFeatures: return "Try pointing at a flat surface or reset the session.";  					case ARTrackingStateReason.Initializing: return "Try moving left or right or reset the session.";  					case ARTrackingStateReason.Relocalizing: return "Try returning to the location where you left off.";  				}
