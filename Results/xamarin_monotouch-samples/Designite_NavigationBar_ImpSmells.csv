Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ApplyImageBackgroundToTheNavigationBar,The length of the parameter backgroundImageForDefaultBarMetrics is 35.
Long Identifier,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ApplyImageBackgroundToTheNavigationBar,The length of the parameter backgroundImageForLandscapePhoneBarMetrics is 42.
Long Statement,NavigationBar,CustomRightViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomRightViewController.cs,ChangeRightBarItem,The length of the statement  "                    var segmentedControl = new UISegmentedControl(new UIImage[] { UIImage.FromBundle("UpArrow")' UIImage.FromBundle("DownArrow") }); " is 128.
Long Statement,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ApplyTransparentBackgroundToTheNavigationBar,The length of the statement  "            /* let navigationBarAppearance = UINavigationBar.appearance(whenContainedInInstancesOf: [UINavigationController.self]) */ " is 121.
Long Statement,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ApplyBarTintColorToTheNavigationBar,The length of the statement  "            /* let navigationBarAppearance = UINavigationBar.appearance(whenContainedInInstancesOf: [UINavigationController.self]) */ " is 121.
Long Statement,NavigationBar,CustomBackButtonViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomBackButtonViewController.cs,ViewDidLoad,The length of the statement  "            backButtonBackgroundImage = backButtonBackgroundImage.CreateResizableImage(new UIEdgeInsets(0f' backButtonBackgroundImage.Size.Width - 1f' 0f' 0f)); " is 148.
Magic Number,NavigationBar,MainViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\MainViewController.cs,StyleAction,The following statement contains a magic number: alertController.AddAction(UIAlertAction.Create(blackOpaqueTitle' UIAlertActionStyle.Default' (_) =>              {                  // Change to black-opaque.                  base.NavigationController.NavigationBar.BarStyle = UIBarStyle.Black;                  base.NavigationController.NavigationBar.Translucent = false;                  base.NavigationController.NavigationBar.TintColor = UIColor.FromRGBA(1f' 0.99997437f' 0.9999912977f' 1f);              }));
Magic Number,NavigationBar,MainViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\MainViewController.cs,StyleAction,The following statement contains a magic number: alertController.AddAction(UIAlertAction.Create(blackOpaqueTitle' UIAlertActionStyle.Default' (_) =>              {                  // Change to black-opaque.                  base.NavigationController.NavigationBar.BarStyle = UIBarStyle.Black;                  base.NavigationController.NavigationBar.Translucent = false;                  base.NavigationController.NavigationBar.TintColor = UIColor.FromRGBA(1f' 0.99997437f' 0.9999912977f' 1f);              }));
Magic Number,NavigationBar,MainViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\MainViewController.cs,StyleAction,The following statement contains a magic number: alertController.AddAction(UIAlertAction.Create(blackTranslucentTitle' UIAlertActionStyle.Default' (_) =>              {                  // Change to black-translucent.                  base.NavigationController.NavigationBar.BarStyle = UIBarStyle.Black;                  base.NavigationController.NavigationBar.Translucent = true;                  base.NavigationController.NavigationBar.TintColor = UIColor.FromRGBA(1f' 0.99997437f' 0.9999912977f' 1f);              }));
Magic Number,NavigationBar,MainViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\MainViewController.cs,StyleAction,The following statement contains a magic number: alertController.AddAction(UIAlertAction.Create(blackTranslucentTitle' UIAlertActionStyle.Default' (_) =>              {                  // Change to black-translucent.                  base.NavigationController.NavigationBar.BarStyle = UIBarStyle.Black;                  base.NavigationController.NavigationBar.Translucent = true;                  base.NavigationController.NavigationBar.TintColor = UIColor.FromRGBA(1f' 0.99997437f' 0.9999912977f' 1f);              }));
Magic Number,NavigationBar,CustomRightViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomRightViewController.cs,ChangeRightBarItem,The following statement contains a magic number: switch (sender.SelectedSegment)              {                  case 0:                      // Add a custom add button as the nav bar's custom right view                      var addButton = new UIBarButtonItem(NSBundle.MainBundle.GetLocalizedString("AddTitle")'                                                          UIBarButtonItemStyle.Plain'                                                          this.Action);                        base.NavigationItem.RightBarButtonItem = addButton;                      break;                    case 1:                      // Add a custom add button as the nav bar's custom right view                      var emailButton = new UIBarButtonItem(UIImage.FromBundle("Email")'                                                            UIBarButtonItemStyle.Plain'                                                            this.Action);                        base.NavigationItem.RightBarButtonItem = emailButton;                      break;                    case 2:                      // "Segmented" control to the right                      var segmentedControl = new UISegmentedControl(new UIImage[] { UIImage.FromBundle("UpArrow")' UIImage.FromBundle("DownArrow") });                        segmentedControl.AddTarget(this.Action' UIControlEvent.ValueChanged);                      segmentedControl.Frame = new CGRect(0f' 0f' 90f' 30f);                      segmentedControl.Momentary = true;                        // Add a custom add button as the nav bar's custom right view                      var segmentBarItem = new UIBarButtonItem(segmentedControl);                        base.NavigationItem.RightBarButtonItem = segmentBarItem;                      break;              }
Magic Number,NavigationBar,CustomRightViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomRightViewController.cs,ChangeRightBarItem,The following statement contains a magic number: switch (sender.SelectedSegment)              {                  case 0:                      // Add a custom add button as the nav bar's custom right view                      var addButton = new UIBarButtonItem(NSBundle.MainBundle.GetLocalizedString("AddTitle")'                                                          UIBarButtonItemStyle.Plain'                                                          this.Action);                        base.NavigationItem.RightBarButtonItem = addButton;                      break;                    case 1:                      // Add a custom add button as the nav bar's custom right view                      var emailButton = new UIBarButtonItem(UIImage.FromBundle("Email")'                                                            UIBarButtonItemStyle.Plain'                                                            this.Action);                        base.NavigationItem.RightBarButtonItem = emailButton;                      break;                    case 2:                      // "Segmented" control to the right                      var segmentedControl = new UISegmentedControl(new UIImage[] { UIImage.FromBundle("UpArrow")' UIImage.FromBundle("DownArrow") });                        segmentedControl.AddTarget(this.Action' UIControlEvent.ValueChanged);                      segmentedControl.Frame = new CGRect(0f' 0f' 90f' 30f);                      segmentedControl.Momentary = true;                        // Add a custom add button as the nav bar's custom right view                      var segmentBarItem = new UIBarButtonItem(segmentedControl);                        base.NavigationItem.RightBarButtonItem = segmentBarItem;                      break;              }
Magic Number,NavigationBar,CustomRightViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomRightViewController.cs,ChangeRightBarItem,The following statement contains a magic number: switch (sender.SelectedSegment)              {                  case 0:                      // Add a custom add button as the nav bar's custom right view                      var addButton = new UIBarButtonItem(NSBundle.MainBundle.GetLocalizedString("AddTitle")'                                                          UIBarButtonItemStyle.Plain'                                                          this.Action);                        base.NavigationItem.RightBarButtonItem = addButton;                      break;                    case 1:                      // Add a custom add button as the nav bar's custom right view                      var emailButton = new UIBarButtonItem(UIImage.FromBundle("Email")'                                                            UIBarButtonItemStyle.Plain'                                                            this.Action);                        base.NavigationItem.RightBarButtonItem = emailButton;                      break;                    case 2:                      // "Segmented" control to the right                      var segmentedControl = new UISegmentedControl(new UIImage[] { UIImage.FromBundle("UpArrow")' UIImage.FromBundle("DownArrow") });                        segmentedControl.AddTarget(this.Action' UIControlEvent.ValueChanged);                      segmentedControl.Frame = new CGRect(0f' 0f' 90f' 30f);                      segmentedControl.Momentary = true;                        // Add a custom add button as the nav bar's custom right view                      var segmentBarItem = new UIBarButtonItem(segmentedControl);                        base.NavigationItem.RightBarButtonItem = segmentBarItem;                      break;              }
Magic Number,NavigationBar,CustomTitleViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomTitleViewController.cs,ViewDidLoad,The following statement contains a magic number: segmentedControl.Frame = new CGRect(0f' 0f' 400f' 30f);
Magic Number,NavigationBar,CustomTitleViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomTitleViewController.cs,ViewDidLoad,The following statement contains a magic number: segmentedControl.Frame = new CGRect(0f' 0f' 400f' 30f);
Magic Number,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ApplyBarTintColorToTheNavigationBar,The following statement contains a magic number: var barTintColor = UIColor.FromRGBA(176f / 255f' 226f / 255f' 172f / 255f' 1f);
Magic Number,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ApplyBarTintColorToTheNavigationBar,The following statement contains a magic number: var barTintColor = UIColor.FromRGBA(176f / 255f' 226f / 255f' 172f / 255f' 1f);
Magic Number,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ApplyBarTintColorToTheNavigationBar,The following statement contains a magic number: var barTintColor = UIColor.FromRGBA(176f / 255f' 226f / 255f' 172f / 255f' 1f);
Magic Number,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ApplyBarTintColorToTheNavigationBar,The following statement contains a magic number: var barTintColor = UIColor.FromRGBA(176f / 255f' 226f / 255f' 172f / 255f' 1f);
Magic Number,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ApplyBarTintColorToTheNavigationBar,The following statement contains a magic number: var barTintColor = UIColor.FromRGBA(176f / 255f' 226f / 255f' 172f / 255f' 1f);
Magic Number,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ApplyBarTintColorToTheNavigationBar,The following statement contains a magic number: var barTintColor = UIColor.FromRGBA(176f / 255f' 226f / 255f' 172f / 255f' 1f);
Magic Number,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ApplyBarTintColorToTheNavigationBar,The following statement contains a magic number: var darkendBarTintColor = UIColor.FromRGBA(176f / 255f - 0.05f' 226f / 255f - 0.02f' 172f / 255f - 0.05f' 1f);
Magic Number,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ApplyBarTintColorToTheNavigationBar,The following statement contains a magic number: var darkendBarTintColor = UIColor.FromRGBA(176f / 255f - 0.05f' 226f / 255f - 0.02f' 172f / 255f - 0.05f' 1f);
Magic Number,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ApplyBarTintColorToTheNavigationBar,The following statement contains a magic number: var darkendBarTintColor = UIColor.FromRGBA(176f / 255f - 0.05f' 226f / 255f - 0.02f' 172f / 255f - 0.05f' 1f);
Magic Number,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ApplyBarTintColorToTheNavigationBar,The following statement contains a magic number: var darkendBarTintColor = UIColor.FromRGBA(176f / 255f - 0.05f' 226f / 255f - 0.02f' 172f / 255f - 0.05f' 1f);
Magic Number,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ApplyBarTintColorToTheNavigationBar,The following statement contains a magic number: var darkendBarTintColor = UIColor.FromRGBA(176f / 255f - 0.05f' 226f / 255f - 0.02f' 172f / 255f - 0.05f' 1f);
Magic Number,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ApplyBarTintColorToTheNavigationBar,The following statement contains a magic number: var darkendBarTintColor = UIColor.FromRGBA(176f / 255f - 0.05f' 226f / 255f - 0.02f' 172f / 255f - 0.05f' 1f);
Magic Number,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ApplyBarTintColorToTheNavigationBar,The following statement contains a magic number: var darkendBarTintColor = UIColor.FromRGBA(176f / 255f - 0.05f' 226f / 255f - 0.02f' 172f / 255f - 0.05f' 1f);
Magic Number,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ApplyBarTintColorToTheNavigationBar,The following statement contains a magic number: var darkendBarTintColor = UIColor.FromRGBA(176f / 255f - 0.05f' 226f / 255f - 0.02f' 172f / 255f - 0.05f' 1f);
Magic Number,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ApplyBarTintColorToTheNavigationBar,The following statement contains a magic number: var darkendBarTintColor = UIColor.FromRGBA(176f / 255f - 0.05f' 226f / 255f - 0.02f' 172f / 255f - 0.05f' 1f);
Magic Number,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ConfigureNewNavigationBarBackground,The following statement contains a magic number: switch (sender.SelectedSegment)              {                  case 0: // Transparent Background                      this.ApplyImageBackgroundToTheNavigationBar();                      break;                    case 1: // Transparent                      this.ApplyTransparentBackgroundToTheNavigationBar(0.87f);                      break;                    case 2: // Colored                      this.ApplyBarTintColorToTheNavigationBar();                      break;              }
Magic Number,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ConfigureNewNavigationBarBackground,The following statement contains a magic number: switch (sender.SelectedSegment)              {                  case 0: // Transparent Background                      this.ApplyImageBackgroundToTheNavigationBar();                      break;                    case 1: // Transparent                      this.ApplyTransparentBackgroundToTheNavigationBar(0.87f);                      break;                    case 2: // Colored                      this.ApplyBarTintColorToTheNavigationBar();                      break;              }
Magic Number,NavigationBar,LargeTitleViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\LargeTitleViewController.cs,ViewDidLoad,The following statement contains a magic number: UIDevice.CurrentDevice.CheckSystemVersion(11' 0)
Magic Number,NavigationBar,LargeTitleViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\LargeTitleViewController.cs,PrepareForSegue,The following statement contains a magic number: UIDevice.CurrentDevice.CheckSystemVersion(11' 0)
Missing Default,NavigationBar,CustomRightViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomRightViewController.cs,ChangeRightBarItem,The following switch statement is missing a default case: switch (sender.SelectedSegment)              {                  case 0:                      // Add a custom add button as the nav bar's custom right view                      var addButton = new UIBarButtonItem(NSBundle.MainBundle.GetLocalizedString("AddTitle")'                                                          UIBarButtonItemStyle.Plain'                                                          this.Action);                        base.NavigationItem.RightBarButtonItem = addButton;                      break;                    case 1:                      // Add a custom add button as the nav bar's custom right view                      var emailButton = new UIBarButtonItem(UIImage.FromBundle("Email")'                                                            UIBarButtonItemStyle.Plain'                                                            this.Action);                        base.NavigationItem.RightBarButtonItem = emailButton;                      break;                    case 2:                      // "Segmented" control to the right                      var segmentedControl = new UISegmentedControl(new UIImage[] { UIImage.FromBundle("UpArrow")' UIImage.FromBundle("DownArrow") });                        segmentedControl.AddTarget(this.Action' UIControlEvent.ValueChanged);                      segmentedControl.Frame = new CGRect(0f' 0f' 90f' 30f);                      segmentedControl.Momentary = true;                        // Add a custom add button as the nav bar's custom right view                      var segmentBarItem = new UIBarButtonItem(segmentedControl);                        base.NavigationItem.RightBarButtonItem = segmentBarItem;                      break;              }
Missing Default,NavigationBar,CustomAppearanceViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\NavigationBar\NavigationBar\CustomAppearanceViewController.cs,ConfigureNewNavigationBarBackground,The following switch statement is missing a default case: switch (sender.SelectedSegment)              {                  case 0: // Transparent Background                      this.ApplyImageBackgroundToTheNavigationBar();                      break;                    case 1: // Transparent                      this.ApplyTransparentBackgroundToTheNavigationBar(0.87f);                      break;                    case 2: // Colored                      this.ApplyBarTintColorToTheNavigationBar();                      break;              }
