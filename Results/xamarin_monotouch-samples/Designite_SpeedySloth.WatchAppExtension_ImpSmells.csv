Implementation smell,Namespace,Class,File,Method,Description
Long Statement,SpeedySloth.WatchAppExtension,HealthStoreManager,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\SpeedySloth\SpeedySloth.WatchAppExtension\HealthStoreManager.cs,AddSamples,The length of the statement  "            var totalEnergyBurnedSample = HKQuantitySample.FromType(HKQuantityType.Create(HKQuantityTypeIdentifier.ActiveEnergyBurned)' " is 123.
Long Statement,SpeedySloth.WatchAppExtension,HealthStoreManager,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\SpeedySloth\SpeedySloth.WatchAppExtension\HealthStoreManager.cs,AddSamples,The length of the statement  "            var totalDistanceSample = HKQuantitySample.FromType(HKQuantityType.Create(HKQuantityTypeIdentifier.DistanceWalkingRunning)' " is 123.
Long Statement,SpeedySloth.WatchAppExtension,HealthStoreManager,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\SpeedySloth\SpeedySloth.WatchAppExtension\HealthStoreManager.cs,AddSamples,The length of the statement  "            this.healthStore.AddSamples(new HKSample[] { totalEnergyBurnedSample' totalDistanceSample }' workout' (isSuccess' error) => " is 123.
Long Statement,SpeedySloth.WatchAppExtension,HealthStoreManager,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\SpeedySloth\SpeedySloth.WatchAppExtension\HealthStoreManager.cs,LocationsUpdated,The length of the statement  "            var filtredLocations = locations.Where(location => location.HorizontalAccuracy <= CLLocation.AccuracyNearestTenMeters).ToArray(); " is 129.
Long Statement,SpeedySloth.WatchAppExtension,ConfigurationInterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\SpeedySloth\SpeedySloth.WatchAppExtension\ConfigurationInterfaceController.cs,MakeWorkoutsSlothy,The length of the statement  "            var routeQuery = new HKSampleQuery(routeType' workoutPredicate' HKSampleQuery.NoLimit' null' (sender' results' error) => " is 120.
Long Statement,SpeedySloth.WatchAppExtension,Utilities,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\SpeedySloth\SpeedySloth.WatchAppExtension\Utilities\Utilities.cs,ComputeDurationOfWorkout,The length of the statement  "                    var events = workoutEvents.Where(@event => @event.Type == HKWorkoutEventType.Pause || @event.Type == HKWorkoutEventType.Resume).ToList(); " is 137.
Magic Number,SpeedySloth.WatchAppExtension,ConfigurationInterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\SpeedySloth\SpeedySloth.WatchAppExtension\ConfigurationInterfaceController.cs,SlothifyRouteLocations,The following statement contains a magic number: var radius = 0.0001;
Magic Number,SpeedySloth.WatchAppExtension,ConfigurationInterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\SpeedySloth\SpeedySloth.WatchAppExtension\ConfigurationInterfaceController.cs,SlothifyRouteLocations,The following statement contains a magic number: theta += Math.PI / 8d;
Magic Number,SpeedySloth.WatchAppExtension,ConfigurationInterfaceController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\SpeedySloth\SpeedySloth.WatchAppExtension\ConfigurationInterfaceController.cs,UpdateWorkoutLocationsRoute,The following statement contains a magic number: workoutRouteBuilder.InsertRouteData(newLocations.ToArray()' (success' error) =>              {                  if (success)                  {                      var syncIdentifier = route.Metadata?.SyncIdentifier;                      if (!string.IsNullOrEmpty(syncIdentifier))                      {                          // new metadata with the same sync identifier and a higher version                          var objects = new NSObject[] { new NSString(syncIdentifier)' NSNumber.FromInt32(2) };                          var keys = new NSString[] { HKMetadataKey.SyncIdentifier' HKMetadataKey.SyncVersion };                            var dictionary = NSDictionary.FromObjectsAndKeys(objects' keys);                          var metadata = new HKMetadata(dictionary);                            // finish the route with updated metadata                          workoutRouteBuilder.FinishRoute(workout' metadata' (workoutRoute' routeRrror) =>                          {                              if (workoutRoute != null)                              {                                  Console.WriteLine($"Workout route updated: ({route})");                              }                              else                              {                                  Console.WriteLine($"An error occurred while finishing the new route: ({error?.LocalizedDescription ?? "Unknown"})");                              }                          });                      }                      else                      {                          throw new ArgumentNullException(nameof(syncIdentifier)' "Missing expected sync identifier on route");                      }                  }                  else                  {                      Console.WriteLine($"An error occurred while inserting route data ({error?.LocalizedDescription ?? "Unknown"})");                  }              });
Missing Default,SpeedySloth.WatchAppExtension,LocationTypeExtensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\SpeedySloth\SpeedySloth.WatchAppExtension\Utilities\LocationTypeExtensions.cs,DisplayString,The following switch statement is missing a default case: switch (locationType)              {                  case LocationType.Indoor:                      result = "Indoor";                      break;                  case LocationType.Outdoor:                      result = "Outdoor";                      break;              }
Missing Default,SpeedySloth.WatchAppExtension,LocationTypeExtensions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\SpeedySloth\SpeedySloth.WatchAppExtension\Utilities\LocationTypeExtensions.cs,Map,The following switch statement is missing a default case: switch (locationType)              {                  case LocationType.Indoor:                      result = HKWorkoutSessionLocationType.Indoor;                      break;                  case LocationType.Outdoor:                      result = HKWorkoutSessionLocationType.Outdoor;                      break;              }
Missing Default,SpeedySloth.WatchAppExtension,Utilities,D:\research\architectureSmells\repos\xamarin_monotouch-samples\watchOS\SpeedySloth\SpeedySloth.WatchAppExtension\Utilities\Utilities.cs,ComputeDurationOfWorkout,The following switch statement is missing a default case: switch (@event.Type)                          {                              case HKWorkoutEventType.Pause:                                  duration += ((DateTime)@event.DateInterval.StartDate - ((DateTime)lastDate)).TotalSeconds;                                  break;                              case HKWorkoutEventType.Resume:                                  lastDate = @event.DateInterval.StartDate;                                  break;                          }
