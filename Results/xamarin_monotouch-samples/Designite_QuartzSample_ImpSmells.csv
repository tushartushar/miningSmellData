Implementation smell,Namespace,Class,File,Method,Description
Magic Number,QuartzSample,QuartzBlendingViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\QuartzSample\QuartzBlendingViewController.xib.cs,ViewDidLoad,The following statement contains a magic number: picker.Select ((int) qbv.BlendMode' 2' false);
Magic Number,QuartzSample,QuartzBlendingViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\QuartzSample\QuartzBlendingViewController.xib.cs,LuminanceForColor,The following statement contains a magic number: switch (cgcolor.ColorSpace.Model){  			case CGColorSpaceModel.Monochrome:  				// For grayscale colors' the luminance is the color value  				luminance = components[0];  				break;    			case CGColorSpaceModel.RGB:  				// For RGB colors' we calculate luminance assuming sRGB Primaries as per  				// http://en.wikipedia.org/wiki/Luminance_(relative)  				luminance = 0.2126f * components[0] + 0.7152f * components[1] + 0.0722f * components[2];  				break;    			default:  				// We don't implement support for non-gray' non-rgb colors at this time.  				// Since our only consumer is colorSortByLuminance' we return a larger than normal  				// value to ensure that these types of colors are sorted to the end of the list.  				luminance = 2.0f;  				break;  			}
Magic Number,QuartzSample,QuartzBlendingViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\QuartzSample\QuartzBlendingViewController.xib.cs,LuminanceForColor,The following statement contains a magic number: switch (cgcolor.ColorSpace.Model){  			case CGColorSpaceModel.Monochrome:  				// For grayscale colors' the luminance is the color value  				luminance = components[0];  				break;    			case CGColorSpaceModel.RGB:  				// For RGB colors' we calculate luminance assuming sRGB Primaries as per  				// http://en.wikipedia.org/wiki/Luminance_(relative)  				luminance = 0.2126f * components[0] + 0.7152f * components[1] + 0.0722f * components[2];  				break;    			default:  				// We don't implement support for non-gray' non-rgb colors at this time.  				// Since our only consumer is colorSortByLuminance' we return a larger than normal  				// value to ensure that these types of colors are sorted to the end of the list.  				luminance = 2.0f;  				break;  			}
Magic Number,QuartzSample,QuartzBlendingViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\QuartzSample\QuartzBlendingViewController.xib.cs,LuminanceForColor,The following statement contains a magic number: switch (cgcolor.ColorSpace.Model){  			case CGColorSpaceModel.Monochrome:  				// For grayscale colors' the luminance is the color value  				luminance = components[0];  				break;    			case CGColorSpaceModel.RGB:  				// For RGB colors' we calculate luminance assuming sRGB Primaries as per  				// http://en.wikipedia.org/wiki/Luminance_(relative)  				luminance = 0.2126f * components[0] + 0.7152f * components[1] + 0.0722f * components[2];  				break;    			default:  				// We don't implement support for non-gray' non-rgb colors at this time.  				// Since our only consumer is colorSortByLuminance' we return a larger than normal  				// value to ensure that these types of colors are sorted to the end of the list.  				luminance = 2.0f;  				break;  			}
Magic Number,QuartzSample,QuartzBlendingViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\QuartzSample\QuartzBlendingViewController.xib.cs,LuminanceForColor,The following statement contains a magic number: switch (cgcolor.ColorSpace.Model){  			case CGColorSpaceModel.Monochrome:  				// For grayscale colors' the luminance is the color value  				luminance = components[0];  				break;    			case CGColorSpaceModel.RGB:  				// For RGB colors' we calculate luminance assuming sRGB Primaries as per  				// http://en.wikipedia.org/wiki/Luminance_(relative)  				luminance = 0.2126f * components[0] + 0.7152f * components[1] + 0.0722f * components[2];  				break;    			default:  				// We don't implement support for non-gray' non-rgb colors at this time.  				// Since our only consumer is colorSortByLuminance' we return a larger than normal  				// value to ensure that these types of colors are sorted to the end of the list.  				luminance = 2.0f;  				break;  			}
Magic Number,QuartzSample,QuartzBlendingViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\QuartzSample\QuartzBlendingViewController.xib.cs,LuminanceForColor,The following statement contains a magic number: switch (cgcolor.ColorSpace.Model){  			case CGColorSpaceModel.Monochrome:  				// For grayscale colors' the luminance is the color value  				luminance = components[0];  				break;    			case CGColorSpaceModel.RGB:  				// For RGB colors' we calculate luminance assuming sRGB Primaries as per  				// http://en.wikipedia.org/wiki/Luminance_(relative)  				luminance = 0.2126f * components[0] + 0.7152f * components[1] + 0.0722f * components[2];  				break;    			default:  				// We don't implement support for non-gray' non-rgb colors at this time.  				// Since our only consumer is colorSortByLuminance' we return a larger than normal  				// value to ensure that these types of colors are sorted to the end of the list.  				luminance = 2.0f;  				break;  			}
Magic Number,QuartzSample,BlendSelector,D:\research\architectureSmells\repos\xamarin_monotouch-samples\QuartzSample\QuartzBlendingViewController.xib.cs,GetComponentCount,The following statement contains a magic number: return 3;
Magic Number,QuartzSample,BlendSelector,D:\research\architectureSmells\repos\xamarin_monotouch-samples\QuartzSample\QuartzBlendingViewController.xib.cs,GetComponentWidth,The following statement contains a magic number: return 48f;
Magic Number,QuartzSample,BlendSelector,D:\research\architectureSmells\repos\xamarin_monotouch-samples\QuartzSample\QuartzBlendingViewController.xib.cs,GetComponentWidth,The following statement contains a magic number: return 192f;
Magic Number,QuartzSample,BlendSelector,D:\research\architectureSmells\repos\xamarin_monotouch-samples\QuartzSample\QuartzBlendingViewController.xib.cs,GetView,The following statement contains a magic number: view = new UIView (new CGRect (0' 0' size.Width-4' size.Height-4)){  							Tag = kColorTag  						};
Magic Number,QuartzSample,BlendSelector,D:\research\architectureSmells\repos\xamarin_monotouch-samples\QuartzSample\QuartzBlendingViewController.xib.cs,GetView,The following statement contains a magic number: view = new UIView (new CGRect (0' 0' size.Width-4' size.Height-4)){  							Tag = kColorTag  						};
Magic Number,QuartzSample,BlendSelector,D:\research\architectureSmells\repos\xamarin_monotouch-samples\QuartzSample\QuartzBlendingViewController.xib.cs,Selected,The following statement contains a magic number: qbv.BlendMode = (CGBlendMode) (int)picker.SelectedRowInComponent (2);
Magic Number,QuartzSample,QuartzBlendingView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\QuartzSample\QuartzBlendingViewController.xib.cs,DrawInContext,The following statement contains a magic number: context.SetFillColor (0.2f' 1);
Magic Number,QuartzSample,QuartzBlendingView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\QuartzSample\QuartzBlendingViewController.xib.cs,DrawInContext,The following statement contains a magic number: context.FillRect(new CGRect (110' 20' 100' 100));
Magic Number,QuartzSample,QuartzBlendingView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\QuartzSample\QuartzBlendingViewController.xib.cs,DrawInContext,The following statement contains a magic number: context.FillRect(new CGRect (110' 20' 100' 100));
Magic Number,QuartzSample,QuartzBlendingView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\QuartzSample\QuartzBlendingViewController.xib.cs,DrawInContext,The following statement contains a magic number: context.FillRect(new CGRect (110' 20' 100' 100));
Magic Number,QuartzSample,QuartzBlendingView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\QuartzSample\QuartzBlendingViewController.xib.cs,DrawInContext,The following statement contains a magic number: context.FillRect(new CGRect (110' 20' 100' 100));
Magic Number,QuartzSample,QuartzBlendingView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\QuartzSample\QuartzBlendingViewController.xib.cs,DrawInContext,The following statement contains a magic number: context.FillRect (new CGRect (60' 45' 200' 50));
Magic Number,QuartzSample,QuartzBlendingView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\QuartzSample\QuartzBlendingViewController.xib.cs,DrawInContext,The following statement contains a magic number: context.FillRect (new CGRect (60' 45' 200' 50));
Magic Number,QuartzSample,QuartzBlendingView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\QuartzSample\QuartzBlendingViewController.xib.cs,DrawInContext,The following statement contains a magic number: context.FillRect (new CGRect (60' 45' 200' 50));
Magic Number,QuartzSample,QuartzBlendingView,D:\research\architectureSmells\repos\xamarin_monotouch-samples\QuartzSample\QuartzBlendingViewController.xib.cs,DrawInContext,The following statement contains a magic number: context.FillRect (new CGRect (60' 45' 200' 50));
