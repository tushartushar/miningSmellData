Implementation smell,Namespace,Class,File,Method,Description
Long Method,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ConfigureSession,The method has 101 lines of code.
Long Method,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,CapturePhoto,The method has 100 lines of code.
Complex Method,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ConfigureSession,Cyclomatic complexity of the method is 9
Complex Method,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ReleaseDesignerOutlets,Cyclomatic complexity of the method is 11
Long Parameter List,AVCam,AVCamPhotoCaptureDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamPhotoCaptureDelegate.cs,DidFinishProcessingLivePhotoMovie,The method has 6 parameters. Parameters: captureOutput' outputFileUrl' duration' photoDisplayTime' resolvedSettings' error
Long Identifier,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,CapturePhoto,The length of the parameter videoPreviewLayerVideoOrientation is 33.
Long Identifier,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,CapturePhoto,The length of the parameter lInProgressLivePhotoCapturesCount is 33.
Long Identifier,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ToggleMovieRecording,The length of the parameter videoPreviewLayerVideoOrientation is 33.
Long Identifier,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,,The length of the parameter inProgressPhotoCaptureDelegates is 31.
Long Identifier,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,,The length of the parameter inProgressLivePhotoCapturesCount is 32.
Long Identifier,AVCam,AVCamPhotoCaptureDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamPhotoCaptureDelegate.cs,DidFinishCapture,The length of the parameter livePhotoCompanionMovieResourceOptions is 38.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ViewWillAppear,The length of the statement  "							var message = NSBundle.MainBundle.LocalizedString (@"AVCam doesn't have permission to use the camera' please change privacy settings"' @"Alert message when the user has denied access to the camera"); " is 199.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ViewWillAppear,The length of the statement  "							var cancelAction = UIAlertAction.Create (NSBundle.MainBundle.LocalizedString (@"OK"' @"Alert OK button")' UIAlertActionStyle.Cancel' null); " is 139.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ViewWillAppear,The length of the statement  "							var settingsAction = UIAlertAction.Create (NSBundle.MainBundle.LocalizedString (@"Settings"' @"Alert button to open Settings")' UIAlertActionStyle.Default'(action) => { " is 168.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ViewWillAppear,The length of the statement  "							var message = NSBundle.MainBundle.LocalizedString (@"Unable to capture media"' @"Alert message when something goes wrong during capture session configuration"); " is 160.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ViewWillAppear,The length of the statement  "							var cancelAction = UIAlertAction.Create (NSBundle.MainBundle.LocalizedString (@"OK"' @"Alert OK button")' UIAlertActionStyle.Cancel' null); " is 139.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ConfigureSession,The length of the statement  "			var videoDevice = AVCaptureDevice.GetDefaultDevice (AVCaptureDeviceType.BuiltInDualCamera' AVMediaType.Video'AVCaptureDevicePosition.Back); " is 139.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ConfigureSession,The length of the statement  "				videoDevice = AVCaptureDevice.GetDefaultDevice (AVCaptureDeviceType.BuiltInWideAngleCamera' AVMediaType.Video' AVCaptureDevicePosition.Back); " is 141.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ConfigureSession,The length of the statement  "				// In some cases where users break their phones' the back wide angle camera is not available. In this case' we should default to the front wide angle camera. " is 157.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ConfigureSession,The length of the statement  "					videoDevice = AVCaptureDevice.GetDefaultDevice (AVCaptureDeviceType.BuiltInWideAngleCamera' AVMediaType.Video' AVCaptureDevicePosition.Front); " is 142.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ConfigureSession,The length of the statement  "				depthDataDeliveryMode = photoOutput.IsDepthDataDeliverySupported () ? AVCamDepthDataDeliveryMode.On : AVCamDepthDataDeliveryMode.Off; " is 133.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ResumeInterruptedSession,The length of the statement  "						var message = NSBundle.MainBundle.LocalizedString (@"Unable to resume"' @"Alert message when unable to resume the session running"); " is 132.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ResumeInterruptedSession,The length of the statement  "						var cancelAction = UIAlertAction.Create (NSBundle.MainBundle.LocalizedString (@"OK"' @"Alert OK button")' UIAlertActionStyle.Cancel' null); " is 139.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ChangeCamera,The length of the statement  "						subjectAreaDidChangeObserver = NSNotificationCenter.DefaultCenter.AddObserver (AVCaptureDevice.SubjectAreaDidChangeNotification' SubjectAreaDidChange' newVideoDevice); " is 167.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,FocusAndExposeTap,The length of the statement  "			var devicePoint = PreviewView.VideoPreviewLayer.CaptureDevicePointOfInterestForPoint (gestureRecognizer.LocationInView (gestureRecognizer.View)); " is 145.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,CapturePhoto,The length of the statement  "					photoSettings = AVCapturePhotoSettings.FromFormat (new NSDictionary<NSString' NSObject> (AVVideo.CodecKey' AVVideo2.CodecHEVC)); " is 128.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,CapturePhoto,The length of the statement  "					photoSettings.PreviewPhotoFormat = new NSDictionary<NSString' NSObject> (CoreVideo.CVPixelBuffer.PixelFormatTypeKey' photoSettings.AvailablePreviewPhotoPixelFormatTypes.First ()); " is 179.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,CapturePhoto,The length of the statement  "					var livePhotoMovieFilePath = NSFileManager.DefaultManager.GetTemporaryDirectory ().Append ($"{livePhotoMovieFileName}.mov"' false); " is 131.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ToggleLivePhotoMode,The length of the statement  "						LivePhotoModeButton.SetTitle (NSBundle.MainBundle.LocalizedString (@"Live Photo Mode: On"' @"Live photo mode button on title")' UIControlState.Normal); " is 151.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ToggleLivePhotoMode,The length of the statement  "						LivePhotoModeButton.SetTitle (NSBundle.MainBundle.LocalizedString (@"Live Photo Mode: Off"' @"Live photo mode button off title")' UIControlState.Normal); " is 153.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ToggleDepthDataDeliveryMode,The length of the statement  "				depthDataDeliveryMode = (depthDataDeliveryMode == AVCamDepthDataDeliveryMode.On) ? AVCamDepthDataDeliveryMode.Off : AVCamDepthDataDeliveryMode.On; " is 146.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ToggleDepthDataDeliveryMode,The length of the statement  "						DepthDataDeliveryButton.SetTitle (NSBundle.MainBundle.LocalizedString (@"Depth Data Delivery: On"' @"Depth Data mode button on title")' UIControlState.Normal); " is 159.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ToggleDepthDataDeliveryMode,The length of the statement  "						DepthDataDeliveryButton.SetTitle (NSBundle.MainBundle.LocalizedString (@"Depth Data Delivery: Off"' @"Depth Data mode button off title")' UIControlState.Normal); " is 161.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ToggleMovieRecording,The length of the statement  "					var livePhotoMovieFilePath = NSFileManager.DefaultManager.GetTemporaryDirectory ().Append ($"{outputFileName}.mov"' false); " is 123.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,DidStartRecording,The length of the statement  "				RecordButton.SetTitle (NSBundle.MainBundle.LocalizedString(@"Stop"' @"Recording button stop title")' UIControlState.Normal); " is 124.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,FinishedRecording,The length of the statement  "				RecordButton.SetTitle (NSBundle.MainBundle.LocalizedString (@"Record"' @"Recording button record title")' UIControlState.Normal); " is 129.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,AddObservers,The length of the statement  "			subjectAreaDidChangeObserver = NSNotificationCenter.DefaultCenter.AddObserver (AVCaptureDevice.SubjectAreaDidChangeNotification' SubjectAreaDidChange' videoDeviceInput.Device); " is 176.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,AddObservers,The length of the statement  "			NSNotificationCenter.DefaultCenter.AddObserver (AVCaptureSession.RuntimeErrorNotification' SessionRuntimeError' session); " is 121.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,AddObservers,The length of the statement  "			NSNotificationCenter.DefaultCenter.AddObserver (AVCaptureSession.WasInterruptedNotification' SessionWasInterrupted' session); " is 125.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,AddObservers,The length of the statement  "			NSNotificationCenter.DefaultCenter.AddObserver (AVCaptureSession.InterruptionEndedNotification' SessionInterruptionEnded' session); " is 131.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ObserveNewSession,The length of the statement  "				LivePhotoModeButton.Hidden = !(isSessionRunning && livePhotoCaptureSupported);DepthDataDeliveryButton.Enabled = isSessionRunning && depthDataDeliveryEnabled; " is 157.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,SubjectAreaDidChange,The length of the statement  "			this.FocusWithMode (AVCaptureFocusMode.ContinuousAutoFocus' AVCaptureExposureMode.ContinuousAutoExposure' devicePoint' false); " is 126.
Long Statement,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,SessionWasInterrupted,The length of the statement  "			var reason = (AVCaptureSessionInterruptionReason)(notification.UserInfo[AVCaptureSession.InterruptionReasonKey] as NSNumber).Int32Value; " is 136.
Long Statement,AVCam,AVCamPhotoCaptureDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamPhotoCaptureDelegate.cs,DidFinishCapture,The length of the statement  "                        creationRequest.AddResource (Photos.PHAssetResourceType.PairedVideo' LivePhotoCompanionMovieUrl' livePhotoCompanionMovieResourceOptions); " is 137.
Long Statement,AVCam,AVCapturePhoto_Ext,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\MissingBindings.cs,FileDataRepresentation,The length of the statement  "            return Runtime.GetNSObject<NSData> (global::ApiDefinition.Messaging.IntPtr_objc_msgSend (This.Handle' Selector.GetHandle ("fileDataRepresentation"))); " is 150.
Long Statement,AVCam,AVCapturePhotoOutput_AVCapturePhotoOutputDepthDataDeliverySupport,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\MissingBindings.cs,IsDepthDataDeliveryEnabled,The length of the statement  "            return global::ApiDefinition.Messaging.bool_objc_msgSend (This.Handle' Selector.GetHandle ("isDepthDataDeliveryEnabled")); " is 122.
Long Statement,AVCam,AVCapturePhotoOutput_AVCapturePhotoOutputDepthDataDeliverySupport,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\MissingBindings.cs,IsDepthDataDeliveryEnabled,The length of the statement  "            global::ApiDefinition.Messaging.void_objc_msgSend_bool (This.Handle' Selector.GetHandle ("setDepthDataDeliveryEnabled:")' enabled); " is 131.
Long Statement,AVCam,AVCapturePhotoOutput_AVCapturePhotoOutputDepthDataDeliverySupport,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\MissingBindings.cs,IsDepthDataDeliverySupported,The length of the statement  "            return global::ApiDefinition.Messaging.bool_objc_msgSend (This.Handle' Selector.GetHandle ("isDepthDataDeliverySupported")); " is 124.
Long Statement,AVCam,AVCapturePhotoSettings_AVCapturePhotoSettings,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\MissingBindings.cs,IsDepthDataDeliveryEnabled,The length of the statement  "            return global::ApiDefinition.Messaging.bool_objc_msgSend (This.Handle' Selector.GetHandle ("isDepthDataDeliveryEnabled")); " is 122.
Long Statement,AVCam,AVCapturePhotoSettings_AVCapturePhotoSettings,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\MissingBindings.cs,IsDepthDataDeliveryEnabled,The length of the statement  "            global::ApiDefinition.Messaging.void_objc_msgSend_bool (This.Handle' Selector.GetHandle ("setDepthDataDeliveryEnabled:")' enabled); " is 131.
Long Statement,AVCam,AVCapturePhotoSettings_AVCapturePhotoSettingsConversions,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\MissingBindings.cs,ProcessedFileType,The length of the statement  "            return NSString.FromHandle (global::ApiDefinition.Messaging.IntPtr_objc_msgSend (This.Handle' Selector.GetHandle ("processedFileType"))); " is 137.
Magic Number,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,CapturePhoto,The following statement contains a magic number: sessionQueue.DispatchAsync (() => {    				// Update the photo output's connection to match the video orientation of the video preview layer.  				var photoOutputConnection = photoOutput.ConnectionFromMediaType (AVMediaType.Video);  				photoOutputConnection.VideoOrientation = videoPreviewLayerVideoOrientation;    				AVCapturePhotoSettings photoSettings;  				// Capture HEIF photo when supported' with flash set to auto and high resolution photo enabled.    				if ( photoOutput.AvailablePhotoCodecTypes.Where (codec => codec == AVVideo2.CodecHEVC).Any ())  				{  					photoSettings = AVCapturePhotoSettings.FromFormat (new NSDictionary<NSString' NSObject> (AVVideo.CodecKey' AVVideo2.CodecHEVC));  				}  				else  				{  					photoSettings = AVCapturePhotoSettings.Create ();  				}    				if (videoDeviceInput.Device.FlashAvailable)  				{  					photoSettings.FlashMode = AVCaptureFlashMode.Auto;  				}  				photoSettings.IsHighResolutionPhotoEnabled = true;  				if (photoSettings.AvailablePreviewPhotoPixelFormatTypes.Count () > 0)  				{  					photoSettings.PreviewPhotoFormat = new NSDictionary<NSString' NSObject> (CoreVideo.CVPixelBuffer.PixelFormatTypeKey' photoSettings.AvailablePreviewPhotoPixelFormatTypes.First ());  				}  				if (livePhotoMode == AVCamLivePhotoMode.On && photoOutput.IsLivePhotoCaptureSupported)  				{   					// Live Photo capture is not supported in movie mode.  					var livePhotoMovieFileName = Guid.NewGuid ().ToString ();  					var livePhotoMovieFilePath = NSFileManager.DefaultManager.GetTemporaryDirectory ().Append ($"{livePhotoMovieFileName}.mov"' false);  					photoSettings.LivePhotoMovieFileUrl = livePhotoMovieFilePath;  				}    				if (depthDataDeliveryMode == AVCamDepthDataDeliveryMode.On && photoOutput.IsDepthDataDeliverySupported ())  				{  					photoSettings.IsDepthDataDeliveryEnabled (true);  				}  				else  				{  					photoSettings.IsDepthDataDeliveryEnabled (false);  				}    				// Use a separate object for the photo capture delegate to isolate each capture life cycle.  				var photoCaptureDelegate = new AVCamPhotoCaptureDelegate (photoSettings' () => {  					DispatchQueue.MainQueue.DispatchAsync (() => {  						PreviewView.VideoPreviewLayer.Opacity = 0.0f;  						UIView.Animate (0.25' () => {  							PreviewView.VideoPreviewLayer.Opacity = 1.0f;  						});  					} );  				}' (bool capturing ) => {  					/*  						Because Live Photo captures can overlap' we need to keep track of the  						number of in progress Live Photo captures to ensure that the  						Live Photo label stays visible during these captures.  					*/  					sessionQueue.DispatchAsync (() => {  						if (capturing)  						{  							inProgressLivePhotoCapturesCount++;  						}  						else  						{  							inProgressLivePhotoCapturesCount--;  						}    						var lInProgressLivePhotoCapturesCount = inProgressLivePhotoCapturesCount;  						DispatchQueue.MainQueue.DispatchAsync (() => {  							if (lInProgressLivePhotoCapturesCount > 0)  							{  								CapturingLivePhotoLabel.Hidden = false;  							}  							else if (lInProgressLivePhotoCapturesCount == 0)  							{  								CapturingLivePhotoLabel.Hidden = true;  							}  							else  							{  								Console.WriteLine (@"Error: In progress live photo capture count is less than 0");  							}  						} );  					} );  				}' (AVCamPhotoCaptureDelegate lPhotoCaptureDelegate ) => {  					// When the capture is complete' remove a reference to the photo capture delegate so it can be deallocated.  					sessionQueue.DispatchAsync (() => {  						inProgressPhotoCaptureDelegates[lPhotoCaptureDelegate.RequestedPhotoSettings.UniqueID] = null;  					} );  				});  		  				/*  					The Photo Output keeps a weak reference to the photo capture delegate so  					we store it in an array to maintain a strong reference to this object  					until the capture is completed.  				*/  				inProgressPhotoCaptureDelegates[photoCaptureDelegate.RequestedPhotoSettings.UniqueID] = photoCaptureDelegate;  				photoOutput.CapturePhoto (photoSettings' photoCaptureDelegate);  			} );
Magic Number,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,SubjectAreaDidChange,The following statement contains a magic number: var devicePoint = new CGPoint (0.5' 0.5);
Magic Number,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,SubjectAreaDidChange,The following statement contains a magic number: var devicePoint = new CGPoint (0.5' 0.5);
Magic Number,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,SessionWasInterrupted,The following statement contains a magic number: UIView.Animate (0.25' () => {  					ResumeButton.Alpha = 1.0f;  				});
Magic Number,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,SessionInterruptionEnded,The following statement contains a magic number: UIView.Animate (0.25' () => {  					ResumeButton.Alpha = 0.0f;  				}'  				() => {  					ResumeButton.Hidden = true;  				});
Magic Number,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,SessionInterruptionEnded,The following statement contains a magic number: UIView.Animate (0.25' () => {  					CameraUnavailableLabel.Alpha = 0.0f;  				}'  				() => {  					CameraUnavailableLabel.Hidden = true;  				});
Missing Default,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ViewWillAppear,The following switch statement is missing a default case: switch (setupResult)  				{  					case AVCamSetupResult.Success:  						// Only setup observers and start the session running if setup succeeded.  						AddObservers ();  						session.StartRunning ();  						sessionRunning = session.Running;  						break;    					case AVCamSetupResult.CameraNotAuthorized:  						sessionQueue.DispatchAsync (() => {  							var message = NSBundle.MainBundle.LocalizedString (@"AVCam doesn't have permission to use the camera' please change privacy settings"' @"Alert message when the user has denied access to the camera");  							var alertController = UIAlertController.Create ( @"AVCam"' message' UIAlertControllerStyle.Alert);  							var cancelAction = UIAlertAction.Create (NSBundle.MainBundle.LocalizedString (@"OK"' @"Alert OK button")' UIAlertActionStyle.Cancel' null);  							alertController.AddAction (cancelAction);  							// Provide quick access to Settings.  							var settingsAction = UIAlertAction.Create (NSBundle.MainBundle.LocalizedString (@"Settings"' @"Alert button to open Settings")' UIAlertActionStyle.Default'(action) => {  								UIApplication.SharedApplication.OpenUrl (new NSUrl (UIApplication.OpenSettingsUrlString));  							});  							alertController.AddAction (settingsAction);  							PresentViewController (alertController' true' null);  						});  						break;  					case AVCamSetupResult.SessionConfigurationFailed:  						sessionQueue.DispatchAsync (() =>  						{  							var message = NSBundle.MainBundle.LocalizedString (@"Unable to capture media"' @"Alert message when something goes wrong during capture session configuration");  							var alertController = UIAlertController.Create (@"AVCam"' message' UIAlertControllerStyle.Alert);  							var cancelAction = UIAlertAction.Create (NSBundle.MainBundle.LocalizedString (@"OK"' @"Alert OK button")' UIAlertActionStyle.Cancel' null);  							alertController.AddAction (cancelAction);  							PresentViewController (alertController' true' null);  						} );  						break;  				}
Missing Default,AVCam,AVCamCameraViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\AVCam\src\AVCamCameraViewController.cs,ChangeCamera,The following switch statement is missing a default case: switch (currentPosition)  				{  					//case AVCaptureDevicePosition.Unspecified:  						//preferredPosition = AVCaptureDevicePosition.Back;  						//preferredDeviceType = AVCaptureDeviceType.BuiltInDualCamera;  						//break;  					case AVCaptureDevicePosition.Unspecified:  					case AVCaptureDevicePosition.Front:  						preferredPosition = AVCaptureDevicePosition.Back;  						preferredDeviceType = AVCaptureDeviceType.BuiltInDualCamera;  						break;  					case AVCaptureDevicePosition.Back:  						preferredPosition = AVCaptureDevicePosition.Front;  						preferredDeviceType = AVCaptureDeviceType.BuiltInWideAngleCamera;  						break;  				}
