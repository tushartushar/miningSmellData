Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ObjectTracker,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\ViewController.cs,ViewDidLayoutSubviews,The length of the statement  "			topBlurView.Frame = new CGRect(previewLayer.Frame.Left' previewLayer.Frame.Top' previewLayer.Frame.Right' oneFifthHeight); " is 122.
Long Statement,ObjectTracker,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\ViewController.cs,ViewDidLayoutSubviews,The length of the statement  "			bottomBlurView.Frame = new CGRect(previewLayer.Frame.Left' previewLayer.Frame.Bottom - oneFifthHeight' previewLayer.Frame.Right' oneFifthHeight); " is 145.
Long Statement,ObjectTracker,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\ViewController.cs,ViewDidLayoutSubviews,The length of the statement  "			overlay.Frame = new CGRect(topBlurView.Frame.Left' topBlurView.Frame.Bottom' topBlurView.Frame.Right' bottomBlurView.Frame.Top - topBlurView.Frame.Bottom); " is 155.
Long Statement,ObjectTracker,VideoCaptureDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\VideoCaptureDelegate.cs,CroppedSampleBuffer,The length of the statement  "			// If the incoming images could change orientation or size during a session' this would need to be reset when that happens. " is 123.
Long Statement,ObjectTracker,VideoCaptureDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\VideoCaptureDelegate.cs,CroppedSampleBuffer,The length of the statement  "					Transform = CGAffineTransform.MakeTranslation(0' (int) (1920.0 / 5) + 60) // Translate down past the cropped area + manual tweak " is 128.
Long Statement,ObjectTracker,VideoCaptureDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\VideoCaptureDelegate.cs,CroppedSampleBuffer,The length of the statement  "				resultBuffer = CVPixelBuffer.Create((nint)targetSize.Width' (nint)targetSize.Height' CVPixelFormatType.CV32BGRA' data' 4 * (nint)targetSize.Width' null);  " is 153.
Long Statement,ObjectTracker,VideoCapture,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\VideoCapture.cs,SetupCamera,The length of the statement  "				new AVCaptureDeviceType[] { AVCaptureDeviceType.BuiltInWideAngleCamera }' AVMediaType.Video' AVCaptureDevicePosition.Back); " is 123.
Long Statement,ObjectTracker,VideoCapture,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\VideoCapture.cs,ImageBufferToUIImage,The length of the statement  "			using (var context = new CGBitmapContext(baseAddress' width' height' 8' bytesPerRow' colorSpace' (CGImageAlphaInfo)bitmapInfo)) " is 127.
Magic Number,ObjectTracker,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\ViewController.cs,ConfigureBufferImageView,The following statement contains a magic number: bufferImageView.Frame = new CGRect(10' 30' 108' 115);
Magic Number,ObjectTracker,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\ViewController.cs,ConfigureBufferImageView,The following statement contains a magic number: bufferImageView.Frame = new CGRect(10' 30' 108' 115);
Magic Number,ObjectTracker,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\ViewController.cs,ConfigureBufferImageView,The following statement contains a magic number: bufferImageView.Frame = new CGRect(10' 30' 108' 115);
Magic Number,ObjectTracker,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\ViewController.cs,ConfigureBufferImageView,The following statement contains a magic number: bufferImageView.Frame = new CGRect(10' 30' 108' 115);
Magic Number,ObjectTracker,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\ViewController.cs,ConfigureOverlay,The following statement contains a magic number: overlay = new Overlay  			{  				Frame = new CGRect(tbv.Frame.Left' tbv.Frame.Bottom + 5' tbv.Frame.Right' bbv.Frame.Top - tbv.Frame.Bottom - 10)'  				BackgroundColor = UIColor.Clear  			};
Magic Number,ObjectTracker,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\ViewController.cs,ConfigureOverlay,The following statement contains a magic number: overlay = new Overlay  			{  				Frame = new CGRect(tbv.Frame.Left' tbv.Frame.Bottom + 5' tbv.Frame.Right' bbv.Frame.Top - tbv.Frame.Bottom - 10)'  				BackgroundColor = UIColor.Clear  			};
Magic Number,ObjectTracker,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\ViewController.cs,ConfigureResetButton,The following statement contains a magic number: resetButton.Frame = new CGRect(View.Frame.Right - 180' 40' 150' 50);
Magic Number,ObjectTracker,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\ViewController.cs,ConfigureResetButton,The following statement contains a magic number: resetButton.Frame = new CGRect(View.Frame.Right - 180' 40' 150' 50);
Magic Number,ObjectTracker,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\ViewController.cs,ConfigureResetButton,The following statement contains a magic number: resetButton.Frame = new CGRect(View.Frame.Right - 180' 40' 150' 50);
Magic Number,ObjectTracker,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\ViewController.cs,ConfigureResetButton,The following statement contains a magic number: resetButton.Frame = new CGRect(View.Frame.Right - 180' 40' 150' 50);
Magic Number,ObjectTracker,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\ViewController.cs,ViewDidLayoutSubviews,The following statement contains a magic number: var oneFifthHeight = previewLayer.Frame.Height / 5;
Magic Number,ObjectTracker,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\ViewController.cs,ViewDidLayoutSubviews,The following statement contains a magic number: resetButton.Frame = new CGRect(View.Frame.Right - 180' 40' 150' 50);
Magic Number,ObjectTracker,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\ViewController.cs,ViewDidLayoutSubviews,The following statement contains a magic number: resetButton.Frame = new CGRect(View.Frame.Right - 180' 40' 150' 50);
Magic Number,ObjectTracker,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\ViewController.cs,ViewDidLayoutSubviews,The following statement contains a magic number: resetButton.Frame = new CGRect(View.Frame.Right - 180' 40' 150' 50);
Magic Number,ObjectTracker,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\ViewController.cs,ViewDidLayoutSubviews,The following statement contains a magic number: resetButton.Frame = new CGRect(View.Frame.Right - 180' 40' 150' 50);
Magic Number,ObjectTracker,VideoCaptureDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\VideoCaptureDelegate.cs,CroppedSampleBuffer,The following statement contains a magic number: cropTransform = new CIAffineTransform  				{  					Transform = CGAffineTransform.MakeTranslation(0' (int) (1920.0 / 5) + 60) // Translate down past the cropped area + manual tweak  				};
Magic Number,ObjectTracker,VideoCaptureDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\VideoCaptureDelegate.cs,CroppedSampleBuffer,The following statement contains a magic number: cropTransform = new CIAffineTransform  				{  					Transform = CGAffineTransform.MakeTranslation(0' (int) (1920.0 / 5) + 60) // Translate down past the cropped area + manual tweak  				};
Magic Number,ObjectTracker,VideoCaptureDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\VideoCaptureDelegate.cs,CroppedSampleBuffer,The following statement contains a magic number: cropTransform = new CIAffineTransform  				{  					Transform = CGAffineTransform.MakeTranslation(0' (int) (1920.0 / 5) + 60) // Translate down past the cropped area + manual tweak  				};
Magic Number,ObjectTracker,VideoCaptureDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\VideoCaptureDelegate.cs,CroppedSampleBuffer,The following statement contains a magic number: var targetSize = new CGSize(1080' 1152);
Magic Number,ObjectTracker,VideoCaptureDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\VideoCaptureDelegate.cs,CroppedSampleBuffer,The following statement contains a magic number: var targetSize = new CGSize(1080' 1152);
Magic Number,ObjectTracker,VideoCaptureDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\VideoCaptureDelegate.cs,CroppedSampleBuffer,The following statement contains a magic number: byte[] data = new byte[(int)targetSize.Height * 4 * (int)targetSize.Width];
Magic Number,ObjectTracker,VideoCaptureDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\VideoCaptureDelegate.cs,CroppedSampleBuffer,The following statement contains a magic number: resultBuffer = CVPixelBuffer.Create((nint)targetSize.Width' (nint)targetSize.Height' CVPixelFormatType.CV32BGRA' data' 4 * (nint)targetSize.Width' null);
Magic Number,ObjectTracker,Overlay,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\Overlay.cs,Draw,The following statement contains a magic number: ctxt.SelectFont("Helvetica"' 32' CGTextEncoding.MacRoman);
Magic Number,ObjectTracker,Overlay,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\Overlay.cs,Draw,The following statement contains a magic number: ctxt.ShowTextAtPoint(25' -25' Message);
Magic Number,ObjectTracker,Overlay,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\Overlay.cs,Draw,The following statement contains a magic number: ctxt.ShowTextAtPoint(25' -25' Message);
Magic Number,ObjectTracker,RectangleScanner,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\RectangleScanner.cs,RectangleScanner,The following statement contains a magic number: rectangleRequest.MaximumObservations = 10;
Magic Number,ObjectTracker,ObjectTracker,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\ObjectTracker.cs,ObjectTracked,The following statement contains a magic number: InvokeOnMainThread(() =>  			{  				overlay.Clear();  				overlay.StrokeColor = UIColor.Green.CGColor;  				var observations = request.GetResults<VNDetectedObjectObservation>();  				var o = observations.FirstOrDefault();  				if (o != null)  				{  					// o is a succesfully tracked object' so draw it on the `overlay`  					overlay.Message = "Locked";  					if (o.Confidence < 0.5)  					{  						overlay.StrokeColor = UIColor.Red.CGColor;  					}  					if (o.Confidence < 0.8)  					{  						overlay.StrokeColor = UIColor.Yellow.CGColor;  					}    					var quad = new[] {  						new CGPoint(o.BoundingBox.Left' o.BoundingBox.Top)'  						new CGPoint(o.BoundingBox.Right' o.BoundingBox.Top)'  						new CGPoint(o.BoundingBox.Right' o.BoundingBox.Bottom)'  						new CGPoint(o.BoundingBox.Left' o.BoundingBox.Bottom)  					};  					ObjectTracked(quad);  					trackedRectangle = o;  				}  			});
Magic Number,ObjectTracker,ObjectTracker,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios11\VisionObjectTracker\ObjectTracker\ObjectTracker.cs,ObjectTracked,The following statement contains a magic number: InvokeOnMainThread(() =>  			{  				overlay.Clear();  				overlay.StrokeColor = UIColor.Green.CGColor;  				var observations = request.GetResults<VNDetectedObjectObservation>();  				var o = observations.FirstOrDefault();  				if (o != null)  				{  					// o is a succesfully tracked object' so draw it on the `overlay`  					overlay.Message = "Locked";  					if (o.Confidence < 0.5)  					{  						overlay.StrokeColor = UIColor.Red.CGColor;  					}  					if (o.Confidence < 0.8)  					{  						overlay.StrokeColor = UIColor.Yellow.CGColor;  					}    					var quad = new[] {  						new CGPoint(o.BoundingBox.Left' o.BoundingBox.Top)'  						new CGPoint(o.BoundingBox.Right' o.BoundingBox.Top)'  						new CGPoint(o.BoundingBox.Right' o.BoundingBox.Bottom)'  						new CGPoint(o.BoundingBox.Left' o.BoundingBox.Bottom)  					};  					ObjectTracked(quad);  					trackedRectangle = o;  				}  			});
