Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,TouchesBegan,Cyclomatic complexity of the method is 8
Complex Method,ButtonTapper3000,MainGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainGame.cs,ReportScore,Cyclomatic complexity of the method is 16
Magic Number,ButtonTapper3000,MainMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainMenu.cs,MainMenu,The following statement contains a magic number: var title = new SKLabelNode ("GillSans-Bold") {  				Text = "Button Tapper"'  				FontSize = 30f'  				Position = new CGPoint (FrameMidX' FrameMidY + 60)  			};
Magic Number,ButtonTapper3000,MainMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainMenu.cs,MainMenu,The following statement contains a magic number: var title = new SKLabelNode ("GillSans-Bold") {  				Text = "Button Tapper"'  				FontSize = 30f'  				Position = new CGPoint (FrameMidX' FrameMidY + 60)  			};
Magic Number,ButtonTapper3000,MainMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainMenu.cs,MainMenu,The following statement contains a magic number: startButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Start Game"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY)  			};
Magic Number,ButtonTapper3000,MainMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainMenu.cs,MainMenu,The following statement contains a magic number: gameCenterButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Game Center"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 60)  			};
Magic Number,ButtonTapper3000,MainMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainMenu.cs,MainMenu,The following statement contains a magic number: gameCenterButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Game Center"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 60)  			};
Magic Number,ButtonTapper3000,MainMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainMenu.cs,MainMenu,The following statement contains a magic number: gameStatsButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Game Stats"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 120)  			};
Magic Number,ButtonTapper3000,MainMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainMenu.cs,MainMenu,The following statement contains a magic number: gameStatsButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Game Stats"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 120)  			};
Magic Number,ButtonTapper3000,MainMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainMenu.cs,MainMenu,The following statement contains a magic number: challengeFriendsButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Challenge Friends"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 180)  			};
Magic Number,ButtonTapper3000,MainMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainMenu.cs,MainMenu,The following statement contains a magic number: challengeFriendsButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Challenge Friends"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 180)  			};
Magic Number,ButtonTapper3000,MainMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainMenu.cs,MainMenu,The following statement contains a magic number: playChallengeButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Play Challenge"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 240)  			};
Magic Number,ButtonTapper3000,MainMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainMenu.cs,MainMenu,The following statement contains a magic number: playChallengeButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Play Challenge"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 240)  			};
Magic Number,ButtonTapper3000,MainMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainMenu.cs,SelectChallenge,The following statement contains a magic number: string timeString = leaderboardSubstring.Substring (0' 9);
Magic Number,ButtonTapper3000,MainMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainMenu.cs,SelectChallenge,The following statement contains a magic number: string modeString = leaderboardSubstring.Substring (9);
Magic Number,ButtonTapper3000,MainMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainMenu.cs,ChallengeFriends,The following statement contains a magic number: GKScore score = new GKScore () {  				LeaderboardIdentifier = MainGame.Prefix + "15secondseasymode"'  				Context = (ulong)GameTypePlayed.Easy15'  				Value = 10  			};
Magic Number,ButtonTapper3000,BasicScene,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\BasicScene.cs,BasicScene,The following statement contains a magic number: BackgroundColor = UIColor.FromRGBA (0.15f' 0.15f' 0.3f' 1f);
Magic Number,ButtonTapper3000,BasicScene,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\BasicScene.cs,BasicScene,The following statement contains a magic number: BackgroundColor = UIColor.FromRGBA (0.15f' 0.15f' 0.3f' 1f);
Magic Number,ButtonTapper3000,BasicScene,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\BasicScene.cs,BasicScene,The following statement contains a magic number: BackgroundColor = UIColor.FromRGBA (0.15f' 0.15f' 0.3f' 1f);
Magic Number,ButtonTapper3000,BasicScene,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\BasicScene.cs,BasicScene,The following statement contains a magic number: UnselectedColor = UIColor.FromRGBA (0f' 0.5f' 0.5f' 1f);
Magic Number,ButtonTapper3000,BasicScene,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\BasicScene.cs,BasicScene,The following statement contains a magic number: UnselectedColor = UIColor.FromRGBA (0f' 0.5f' 0.5f' 1f);
Magic Number,ButtonTapper3000,BasicScene,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\BasicScene.cs,BasicScene,The following statement contains a magic number: SelectedColor = UIColor.FromRGBA (0.5f' 1f' 0.99f' 1f);
Magic Number,ButtonTapper3000,BasicScene,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\BasicScene.cs,BasicScene,The following statement contains a magic number: SelectedColor = UIColor.FromRGBA (0.5f' 1f' 0.99f' 1f);
Magic Number,ButtonTapper3000,BasicScene,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\BasicScene.cs,BasicScene,The following statement contains a magic number: transition = SKTransition.MoveInWithDirection (SKTransitionDirection.Up' 0.5);
Magic Number,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,GameSetupMenu,The following statement contains a magic number: SKLabelNode timeLabel = new SKLabelNode ("GillSans-Bold") {  				Text = "Time"'  				FontSize = 24'  				Position = new CGPoint (FrameMidX' FrameMidY + 70)  			};
Magic Number,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,GameSetupMenu,The following statement contains a magic number: SKLabelNode timeLabel = new SKLabelNode ("GillSans-Bold") {  				Text = "Time"'  				FontSize = 24'  				Position = new CGPoint (FrameMidX' FrameMidY + 70)  			};
Magic Number,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,GameSetupMenu,The following statement contains a magic number: SKLabelNode time15Button = new SKLabelNode ("GillSans-Bold") {  				Text = "15"'  				FontSize = 14'  				FontColor = UnselectedColor'  				Position = new CGPoint (FrameMidX - 40' FrameMidY + 40)  			};
Magic Number,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,GameSetupMenu,The following statement contains a magic number: SKLabelNode time15Button = new SKLabelNode ("GillSans-Bold") {  				Text = "15"'  				FontSize = 14'  				FontColor = UnselectedColor'  				Position = new CGPoint (FrameMidX - 40' FrameMidY + 40)  			};
Magic Number,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,GameSetupMenu,The following statement contains a magic number: SKLabelNode time15Button = new SKLabelNode ("GillSans-Bold") {  				Text = "15"'  				FontSize = 14'  				FontColor = UnselectedColor'  				Position = new CGPoint (FrameMidX - 40' FrameMidY + 40)  			};
Magic Number,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,GameSetupMenu,The following statement contains a magic number: SKLabelNode time30Button = new SKLabelNode ("GillSans-Bold") {  				Text = "30"'  				FontSize = 14'  				FontColor = UnselectedColor'  				Position = new CGPoint (FrameMidX' FrameMidY + 40)  			};
Magic Number,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,GameSetupMenu,The following statement contains a magic number: SKLabelNode time30Button = new SKLabelNode ("GillSans-Bold") {  				Text = "30"'  				FontSize = 14'  				FontColor = UnselectedColor'  				Position = new CGPoint (FrameMidX' FrameMidY + 40)  			};
Magic Number,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,GameSetupMenu,The following statement contains a magic number: SKLabelNode time45Button = new SKLabelNode ("GillSans-Bold") {  				Text = "45"'  				FontSize = 14'  				FontColor = UnselectedColor'  				Position = new CGPoint (FrameMidX + 40' FrameMidY + 40)  			};
Magic Number,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,GameSetupMenu,The following statement contains a magic number: SKLabelNode time45Button = new SKLabelNode ("GillSans-Bold") {  				Text = "45"'  				FontSize = 14'  				FontColor = UnselectedColor'  				Position = new CGPoint (FrameMidX + 40' FrameMidY + 40)  			};
Magic Number,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,GameSetupMenu,The following statement contains a magic number: SKLabelNode time45Button = new SKLabelNode ("GillSans-Bold") {  				Text = "45"'  				FontSize = 14'  				FontColor = UnselectedColor'  				Position = new CGPoint (FrameMidX + 40' FrameMidY + 40)  			};
Magic Number,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,GameSetupMenu,The following statement contains a magic number: SKLabelNode modeLabel = new SKLabelNode ("GillSans-Bold") {  				Text = "Mode"'  				FontSize = 24'  				Position = new CGPoint (FrameMidX' FrameMidY)  			};
Magic Number,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,GameSetupMenu,The following statement contains a magic number: SKLabelNode modeEasyButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Easy"'  				FontSize = 14'  				FontColor = UnselectedColor'  				Position = new CGPoint (FrameMidX - 40' FrameMidY - 40)  			};
Magic Number,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,GameSetupMenu,The following statement contains a magic number: SKLabelNode modeEasyButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Easy"'  				FontSize = 14'  				FontColor = UnselectedColor'  				Position = new CGPoint (FrameMidX - 40' FrameMidY - 40)  			};
Magic Number,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,GameSetupMenu,The following statement contains a magic number: SKLabelNode modeEasyButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Easy"'  				FontSize = 14'  				FontColor = UnselectedColor'  				Position = new CGPoint (FrameMidX - 40' FrameMidY - 40)  			};
Magic Number,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,GameSetupMenu,The following statement contains a magic number: SKLabelNode modeHardButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Hard"'  				FontSize = 14'  				FontColor = UnselectedColor'  				Position = new CGPoint (FrameMidX + 40' FrameMidY - 40)  			};
Magic Number,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,GameSetupMenu,The following statement contains a magic number: SKLabelNode modeHardButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Hard"'  				FontSize = 14'  				FontColor = UnselectedColor'  				Position = new CGPoint (FrameMidX + 40' FrameMidY - 40)  			};
Magic Number,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,GameSetupMenu,The following statement contains a magic number: SKLabelNode modeHardButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Hard"'  				FontSize = 14'  				FontColor = UnselectedColor'  				Position = new CGPoint (FrameMidX + 40' FrameMidY - 40)  			};
Magic Number,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,GameSetupMenu,The following statement contains a magic number: startButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Start!"'  				FontSize = 30'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 100)  			};
Magic Number,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,GameSetupMenu,The following statement contains a magic number: startButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Start!"'  				FontSize = 30'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 100)  			};
Magic Number,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,GameSetupMenu,The following statement contains a magic number: backButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Back"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 200)  			};
Magic Number,ButtonTapper3000,GameSetupMenu,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\GameSetupMenu.cs,GameSetupMenu,The following statement contains a magic number: backButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Back"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 200)  			};
Magic Number,ButtonTapper3000,StatsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,StatsScreen,The following statement contains a magic number: BackgroundColor = UIColor.FromRGBA (0.15f' 0.15f' 0.3f' 1f);
Magic Number,ButtonTapper3000,StatsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,StatsScreen,The following statement contains a magic number: BackgroundColor = UIColor.FromRGBA (0.15f' 0.15f' 0.3f' 1f);
Magic Number,ButtonTapper3000,StatsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,StatsScreen,The following statement contains a magic number: BackgroundColor = UIColor.FromRGBA (0.15f' 0.15f' 0.3f' 1f);
Magic Number,ButtonTapper3000,StatsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,StatsScreen,The following statement contains a magic number: var title = new SKLabelNode ("GillSans-Bold") {  				Text = "Stats"'  				FontSize = 30'  				Position = new CGPoint (FrameMidX' FrameMidY + 60)  			};
Magic Number,ButtonTapper3000,StatsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,StatsScreen,The following statement contains a magic number: var title = new SKLabelNode ("GillSans-Bold") {  				Text = "Stats"'  				FontSize = 30'  				Position = new CGPoint (FrameMidX' FrameMidY + 60)  			};
Magic Number,ButtonTapper3000,StatsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,StatsScreen,The following statement contains a magic number: leaderboardsButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Leaderboards"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY)  			};
Magic Number,ButtonTapper3000,StatsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,StatsScreen,The following statement contains a magic number: achievementsButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Achievements"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 60)  			};
Magic Number,ButtonTapper3000,StatsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,StatsScreen,The following statement contains a magic number: achievementsButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Achievements"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 60)  			};
Magic Number,ButtonTapper3000,StatsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,StatsScreen,The following statement contains a magic number: backButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Back"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 200)  			};
Magic Number,ButtonTapper3000,StatsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,StatsScreen,The following statement contains a magic number: backButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Back"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 200)  			};
Magic Number,ButtonTapper3000,AchievementsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,AchievementsScreen,The following statement contains a magic number: var title = new SKLabelNode ("GillSans-Bold") {  				Text = "Achievements"'  				FontSize = 30'  				Position = new CGPoint (FrameMidX' FrameMidY + 190)  			};
Magic Number,ButtonTapper3000,AchievementsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,AchievementsScreen,The following statement contains a magic number: var title = new SKLabelNode ("GillSans-Bold") {  				Text = "Achievements"'  				FontSize = 30'  				Position = new CGPoint (FrameMidX' FrameMidY + 190)  			};
Magic Number,ButtonTapper3000,AchievementsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,AchievementsScreen,The following statement contains a magic number: backButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Back"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 200)  			};
Magic Number,ButtonTapper3000,AchievementsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,AchievementsScreen,The following statement contains a magic number: backButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Back"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 200)  			};
Magic Number,ButtonTapper3000,AchievementsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,AchievementsScreen,The following statement contains a magic number: var incompleteLabel = new SKLabelNode ("GillSans-Bold") {  				Text = "Incomplete"'  				FontSize = 18'  				Position = new CGPoint (FrameMidX + 75' FrameMidY + 150)  			};
Magic Number,ButtonTapper3000,AchievementsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,AchievementsScreen,The following statement contains a magic number: var incompleteLabel = new SKLabelNode ("GillSans-Bold") {  				Text = "Incomplete"'  				FontSize = 18'  				Position = new CGPoint (FrameMidX + 75' FrameMidY + 150)  			};
Magic Number,ButtonTapper3000,AchievementsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,AchievementsScreen,The following statement contains a magic number: var incompleteLabel = new SKLabelNode ("GillSans-Bold") {  				Text = "Incomplete"'  				FontSize = 18'  				Position = new CGPoint (FrameMidX + 75' FrameMidY + 150)  			};
Magic Number,ButtonTapper3000,AchievementsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,AchievementsScreen,The following statement contains a magic number: var completeLabel = new SKLabelNode ("GillSans-Bold") {  				Text = "Complete"'  				FontSize = 18'  				Position = new CGPoint (FrameMidX - 75' FrameMidY + 150)  			};
Magic Number,ButtonTapper3000,AchievementsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,AchievementsScreen,The following statement contains a magic number: var completeLabel = new SKLabelNode ("GillSans-Bold") {  				Text = "Complete"'  				FontSize = 18'  				Position = new CGPoint (FrameMidX - 75' FrameMidY + 150)  			};
Magic Number,ButtonTapper3000,AchievementsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,AchievementsScreen,The following statement contains a magic number: var completeLabel = new SKLabelNode ("GillSans-Bold") {  				Text = "Complete"'  				FontSize = 18'  				Position = new CGPoint (FrameMidX - 75' FrameMidY + 150)  			};
Magic Number,ButtonTapper3000,AchievementsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LoadAchievementInfo,The following statement contains a magic number: GKAchievement.LoadAchievements (delegate (GKAchievement[] achievements' NSError err) {  				int completeOffset = 0;  				int incompleteOffset = 0;    				foreach (var description in descriptions) {  					bool completed = false;  					foreach (var achievement in achievements) {  						if (description.Identifier == achievement.Identifier)  							completed |= achievement.Completed;  					}    					int xOffset = completed ? -75 : 75;  					int yOffset = completed ? completeOffset : incompleteOffset;    					var achievementLabel = new SKLabelNode ("GillSans-Bold") {  						Text = description.Title'  						FontSize = 10'  						Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 25)  					};  					AddChild (achievementLabel);    					description.LoadImage (delegate (UIImage image' NSError imageError) {  						if (image == null)  							image = UIImage.FromFile ("Images/DefaultPlayerPhoto.png");  						var sprite = SKSpriteNode.FromTexture (SKTexture.FromImage (image)' new CGSize (32' 32));  						sprite.Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 50);  						AddChild (sprite);  					});    					if (completed)  						completeOffset -= 50;  					else  						incompleteOffset -= 50;  				}  			});
Magic Number,ButtonTapper3000,AchievementsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LoadAchievementInfo,The following statement contains a magic number: GKAchievement.LoadAchievements (delegate (GKAchievement[] achievements' NSError err) {  				int completeOffset = 0;  				int incompleteOffset = 0;    				foreach (var description in descriptions) {  					bool completed = false;  					foreach (var achievement in achievements) {  						if (description.Identifier == achievement.Identifier)  							completed |= achievement.Completed;  					}    					int xOffset = completed ? -75 : 75;  					int yOffset = completed ? completeOffset : incompleteOffset;    					var achievementLabel = new SKLabelNode ("GillSans-Bold") {  						Text = description.Title'  						FontSize = 10'  						Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 25)  					};  					AddChild (achievementLabel);    					description.LoadImage (delegate (UIImage image' NSError imageError) {  						if (image == null)  							image = UIImage.FromFile ("Images/DefaultPlayerPhoto.png");  						var sprite = SKSpriteNode.FromTexture (SKTexture.FromImage (image)' new CGSize (32' 32));  						sprite.Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 50);  						AddChild (sprite);  					});    					if (completed)  						completeOffset -= 50;  					else  						incompleteOffset -= 50;  				}  			});
Magic Number,ButtonTapper3000,AchievementsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LoadAchievementInfo,The following statement contains a magic number: GKAchievement.LoadAchievements (delegate (GKAchievement[] achievements' NSError err) {  				int completeOffset = 0;  				int incompleteOffset = 0;    				foreach (var description in descriptions) {  					bool completed = false;  					foreach (var achievement in achievements) {  						if (description.Identifier == achievement.Identifier)  							completed |= achievement.Completed;  					}    					int xOffset = completed ? -75 : 75;  					int yOffset = completed ? completeOffset : incompleteOffset;    					var achievementLabel = new SKLabelNode ("GillSans-Bold") {  						Text = description.Title'  						FontSize = 10'  						Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 25)  					};  					AddChild (achievementLabel);    					description.LoadImage (delegate (UIImage image' NSError imageError) {  						if (image == null)  							image = UIImage.FromFile ("Images/DefaultPlayerPhoto.png");  						var sprite = SKSpriteNode.FromTexture (SKTexture.FromImage (image)' new CGSize (32' 32));  						sprite.Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 50);  						AddChild (sprite);  					});    					if (completed)  						completeOffset -= 50;  					else  						incompleteOffset -= 50;  				}  			});
Magic Number,ButtonTapper3000,AchievementsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LoadAchievementInfo,The following statement contains a magic number: GKAchievement.LoadAchievements (delegate (GKAchievement[] achievements' NSError err) {  				int completeOffset = 0;  				int incompleteOffset = 0;    				foreach (var description in descriptions) {  					bool completed = false;  					foreach (var achievement in achievements) {  						if (description.Identifier == achievement.Identifier)  							completed |= achievement.Completed;  					}    					int xOffset = completed ? -75 : 75;  					int yOffset = completed ? completeOffset : incompleteOffset;    					var achievementLabel = new SKLabelNode ("GillSans-Bold") {  						Text = description.Title'  						FontSize = 10'  						Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 25)  					};  					AddChild (achievementLabel);    					description.LoadImage (delegate (UIImage image' NSError imageError) {  						if (image == null)  							image = UIImage.FromFile ("Images/DefaultPlayerPhoto.png");  						var sprite = SKSpriteNode.FromTexture (SKTexture.FromImage (image)' new CGSize (32' 32));  						sprite.Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 50);  						AddChild (sprite);  					});    					if (completed)  						completeOffset -= 50;  					else  						incompleteOffset -= 50;  				}  			});
Magic Number,ButtonTapper3000,AchievementsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LoadAchievementInfo,The following statement contains a magic number: GKAchievement.LoadAchievements (delegate (GKAchievement[] achievements' NSError err) {  				int completeOffset = 0;  				int incompleteOffset = 0;    				foreach (var description in descriptions) {  					bool completed = false;  					foreach (var achievement in achievements) {  						if (description.Identifier == achievement.Identifier)  							completed |= achievement.Completed;  					}    					int xOffset = completed ? -75 : 75;  					int yOffset = completed ? completeOffset : incompleteOffset;    					var achievementLabel = new SKLabelNode ("GillSans-Bold") {  						Text = description.Title'  						FontSize = 10'  						Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 25)  					};  					AddChild (achievementLabel);    					description.LoadImage (delegate (UIImage image' NSError imageError) {  						if (image == null)  							image = UIImage.FromFile ("Images/DefaultPlayerPhoto.png");  						var sprite = SKSpriteNode.FromTexture (SKTexture.FromImage (image)' new CGSize (32' 32));  						sprite.Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 50);  						AddChild (sprite);  					});    					if (completed)  						completeOffset -= 50;  					else  						incompleteOffset -= 50;  				}  			});
Magic Number,ButtonTapper3000,AchievementsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LoadAchievementInfo,The following statement contains a magic number: GKAchievement.LoadAchievements (delegate (GKAchievement[] achievements' NSError err) {  				int completeOffset = 0;  				int incompleteOffset = 0;    				foreach (var description in descriptions) {  					bool completed = false;  					foreach (var achievement in achievements) {  						if (description.Identifier == achievement.Identifier)  							completed |= achievement.Completed;  					}    					int xOffset = completed ? -75 : 75;  					int yOffset = completed ? completeOffset : incompleteOffset;    					var achievementLabel = new SKLabelNode ("GillSans-Bold") {  						Text = description.Title'  						FontSize = 10'  						Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 25)  					};  					AddChild (achievementLabel);    					description.LoadImage (delegate (UIImage image' NSError imageError) {  						if (image == null)  							image = UIImage.FromFile ("Images/DefaultPlayerPhoto.png");  						var sprite = SKSpriteNode.FromTexture (SKTexture.FromImage (image)' new CGSize (32' 32));  						sprite.Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 50);  						AddChild (sprite);  					});    					if (completed)  						completeOffset -= 50;  					else  						incompleteOffset -= 50;  				}  			});
Magic Number,ButtonTapper3000,AchievementsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LoadAchievementInfo,The following statement contains a magic number: GKAchievement.LoadAchievements (delegate (GKAchievement[] achievements' NSError err) {  				int completeOffset = 0;  				int incompleteOffset = 0;    				foreach (var description in descriptions) {  					bool completed = false;  					foreach (var achievement in achievements) {  						if (description.Identifier == achievement.Identifier)  							completed |= achievement.Completed;  					}    					int xOffset = completed ? -75 : 75;  					int yOffset = completed ? completeOffset : incompleteOffset;    					var achievementLabel = new SKLabelNode ("GillSans-Bold") {  						Text = description.Title'  						FontSize = 10'  						Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 25)  					};  					AddChild (achievementLabel);    					description.LoadImage (delegate (UIImage image' NSError imageError) {  						if (image == null)  							image = UIImage.FromFile ("Images/DefaultPlayerPhoto.png");  						var sprite = SKSpriteNode.FromTexture (SKTexture.FromImage (image)' new CGSize (32' 32));  						sprite.Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 50);  						AddChild (sprite);  					});    					if (completed)  						completeOffset -= 50;  					else  						incompleteOffset -= 50;  				}  			});
Magic Number,ButtonTapper3000,AchievementsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LoadAchievementInfo,The following statement contains a magic number: GKAchievement.LoadAchievements (delegate (GKAchievement[] achievements' NSError err) {  				int completeOffset = 0;  				int incompleteOffset = 0;    				foreach (var description in descriptions) {  					bool completed = false;  					foreach (var achievement in achievements) {  						if (description.Identifier == achievement.Identifier)  							completed |= achievement.Completed;  					}    					int xOffset = completed ? -75 : 75;  					int yOffset = completed ? completeOffset : incompleteOffset;    					var achievementLabel = new SKLabelNode ("GillSans-Bold") {  						Text = description.Title'  						FontSize = 10'  						Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 25)  					};  					AddChild (achievementLabel);    					description.LoadImage (delegate (UIImage image' NSError imageError) {  						if (image == null)  							image = UIImage.FromFile ("Images/DefaultPlayerPhoto.png");  						var sprite = SKSpriteNode.FromTexture (SKTexture.FromImage (image)' new CGSize (32' 32));  						sprite.Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 50);  						AddChild (sprite);  					});    					if (completed)  						completeOffset -= 50;  					else  						incompleteOffset -= 50;  				}  			});
Magic Number,ButtonTapper3000,AchievementsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LoadAchievementInfo,The following statement contains a magic number: GKAchievement.LoadAchievements (delegate (GKAchievement[] achievements' NSError err) {  				int completeOffset = 0;  				int incompleteOffset = 0;    				foreach (var description in descriptions) {  					bool completed = false;  					foreach (var achievement in achievements) {  						if (description.Identifier == achievement.Identifier)  							completed |= achievement.Completed;  					}    					int xOffset = completed ? -75 : 75;  					int yOffset = completed ? completeOffset : incompleteOffset;    					var achievementLabel = new SKLabelNode ("GillSans-Bold") {  						Text = description.Title'  						FontSize = 10'  						Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 25)  					};  					AddChild (achievementLabel);    					description.LoadImage (delegate (UIImage image' NSError imageError) {  						if (image == null)  							image = UIImage.FromFile ("Images/DefaultPlayerPhoto.png");  						var sprite = SKSpriteNode.FromTexture (SKTexture.FromImage (image)' new CGSize (32' 32));  						sprite.Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 50);  						AddChild (sprite);  					});    					if (completed)  						completeOffset -= 50;  					else  						incompleteOffset -= 50;  				}  			});
Magic Number,ButtonTapper3000,AchievementsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LoadAchievementInfo,The following statement contains a magic number: GKAchievement.LoadAchievements (delegate (GKAchievement[] achievements' NSError err) {  				int completeOffset = 0;  				int incompleteOffset = 0;    				foreach (var description in descriptions) {  					bool completed = false;  					foreach (var achievement in achievements) {  						if (description.Identifier == achievement.Identifier)  							completed |= achievement.Completed;  					}    					int xOffset = completed ? -75 : 75;  					int yOffset = completed ? completeOffset : incompleteOffset;    					var achievementLabel = new SKLabelNode ("GillSans-Bold") {  						Text = description.Title'  						FontSize = 10'  						Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 25)  					};  					AddChild (achievementLabel);    					description.LoadImage (delegate (UIImage image' NSError imageError) {  						if (image == null)  							image = UIImage.FromFile ("Images/DefaultPlayerPhoto.png");  						var sprite = SKSpriteNode.FromTexture (SKTexture.FromImage (image)' new CGSize (32' 32));  						sprite.Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 50);  						AddChild (sprite);  					});    					if (completed)  						completeOffset -= 50;  					else  						incompleteOffset -= 50;  				}  			});
Magic Number,ButtonTapper3000,AchievementsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LoadAchievementInfo,The following statement contains a magic number: GKAchievement.LoadAchievements (delegate (GKAchievement[] achievements' NSError err) {  				int completeOffset = 0;  				int incompleteOffset = 0;    				foreach (var description in descriptions) {  					bool completed = false;  					foreach (var achievement in achievements) {  						if (description.Identifier == achievement.Identifier)  							completed |= achievement.Completed;  					}    					int xOffset = completed ? -75 : 75;  					int yOffset = completed ? completeOffset : incompleteOffset;    					var achievementLabel = new SKLabelNode ("GillSans-Bold") {  						Text = description.Title'  						FontSize = 10'  						Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 25)  					};  					AddChild (achievementLabel);    					description.LoadImage (delegate (UIImage image' NSError imageError) {  						if (image == null)  							image = UIImage.FromFile ("Images/DefaultPlayerPhoto.png");  						var sprite = SKSpriteNode.FromTexture (SKTexture.FromImage (image)' new CGSize (32' 32));  						sprite.Position = new CGPoint (FrameMidX + xOffset' FrameMidY + 50 + yOffset + 50);  						AddChild (sprite);  					});    					if (completed)  						completeOffset -= 50;  					else  						incompleteOffset -= 50;  				}  			});
Magic Number,ButtonTapper3000,LeaderboardSetsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LeaderboardSetsScreen,The following statement contains a magic number: SKLabelNode title = new SKLabelNode ("GillSans-Bold") {  				Text = "Leaderboards Sets"'  				FontSize = 30'  				Position = new CGPoint (FrameMidX' FrameMidY + 190)  			};
Magic Number,ButtonTapper3000,LeaderboardSetsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LeaderboardSetsScreen,The following statement contains a magic number: SKLabelNode title = new SKLabelNode ("GillSans-Bold") {  				Text = "Leaderboards Sets"'  				FontSize = 30'  				Position = new CGPoint (FrameMidX' FrameMidY + 190)  			};
Magic Number,ButtonTapper3000,LeaderboardSetsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LeaderboardSetsScreen,The following statement contains a magic number: backButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Back"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 200)  			};
Magic Number,ButtonTapper3000,LeaderboardSetsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LeaderboardSetsScreen,The following statement contains a magic number: backButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Back"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 200)  			};
Magic Number,ButtonTapper3000,LeaderboardSetsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LoadLeaderboardSets,The following statement contains a magic number: var leaderboardSetButton = new SKLabelNode ("GillSans-Bold") {  					Text = leaderboardSet.Title'  					FontSize = 18'  					Position = new CGPoint (FrameMidX' FrameMidY + 125 - offset)  				};
Magic Number,ButtonTapper3000,LeaderboardSetsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LoadLeaderboardSets,The following statement contains a magic number: var leaderboardSetButton = new SKLabelNode ("GillSans-Bold") {  					Text = leaderboardSet.Title'  					FontSize = 18'  					Position = new CGPoint (FrameMidX' FrameMidY + 125 - offset)  				};
Magic Number,ButtonTapper3000,LeaderboardSetsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LoadLeaderboardSets,The following statement contains a magic number: offset += 50;
Magic Number,ButtonTapper3000,LeaderboardsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LeaderboardsScreen,The following statement contains a magic number: var title = new SKLabelNode ("GillSans-Bold") {  				Text = "Leaderboards"'  				FontSize = 30'  				Position = new CGPoint (FrameMidX' FrameMidY + 190)  			};
Magic Number,ButtonTapper3000,LeaderboardsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LeaderboardsScreen,The following statement contains a magic number: var title = new SKLabelNode ("GillSans-Bold") {  				Text = "Leaderboards"'  				FontSize = 30'  				Position = new CGPoint (FrameMidX' FrameMidY + 190)  			};
Magic Number,ButtonTapper3000,LeaderboardsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LeaderboardsScreen,The following statement contains a magic number: backButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Back"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 200)  			};
Magic Number,ButtonTapper3000,LeaderboardsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LeaderboardsScreen,The following statement contains a magic number: backButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Back"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 200)  			};
Magic Number,ButtonTapper3000,LeaderboardsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LoadLeaderboard,The following statement contains a magic number: SKLabelNode leaderboardButton = new SKLabelNode ("GillSans-Bold") {  					Text = leaderboard.Title'  					FontSize = 18'  					Position = new CGPoint (FrameMidX' FrameMidY + 125 - offset)  				};
Magic Number,ButtonTapper3000,LeaderboardsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LoadLeaderboard,The following statement contains a magic number: SKLabelNode leaderboardButton = new SKLabelNode ("GillSans-Bold") {  					Text = leaderboard.Title'  					FontSize = 18'  					Position = new CGPoint (FrameMidX' FrameMidY + 125 - offset)  				};
Magic Number,ButtonTapper3000,LeaderboardsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LoadLeaderboard,The following statement contains a magic number: offset += 50;
Magic Number,ButtonTapper3000,LeaderboardScoresScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LeaderboardScoresScreen,The following statement contains a magic number: SKLabelNode title = new SKLabelNode ("GillSans-Bold") {  				Text = GameInfo.CurrentLeaderBoard.Title'  				FontSize = 14'  				Position = new CGPoint (FrameMidX' FrameMidY + 190)  			};
Magic Number,ButtonTapper3000,LeaderboardScoresScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LeaderboardScoresScreen,The following statement contains a magic number: SKLabelNode title = new SKLabelNode ("GillSans-Bold") {  				Text = GameInfo.CurrentLeaderBoard.Title'  				FontSize = 14'  				Position = new CGPoint (FrameMidX' FrameMidY + 190)  			};
Magic Number,ButtonTapper3000,LeaderboardScoresScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LeaderboardScoresScreen,The following statement contains a magic number: podiumSprite.Position = new CGPoint (FrameMidX' FrameMidY + 50);
Magic Number,ButtonTapper3000,LeaderboardScoresScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LeaderboardScoresScreen,The following statement contains a magic number: backButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Back"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 200)  			};
Magic Number,ButtonTapper3000,LeaderboardScoresScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LeaderboardScoresScreen,The following statement contains a magic number: backButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Back"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 200)  			};
Magic Number,ButtonTapper3000,LeaderboardScoresScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,DisplayScore,The following statement contains a magic number: CGPoint[] podiumPositions = new CGPoint[] {  				new CGPoint (0' 100)'  				new CGPoint (-84' 75)'  				new CGPoint (84' 50)  			};
Magic Number,ButtonTapper3000,LeaderboardScoresScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,DisplayScore,The following statement contains a magic number: CGPoint[] podiumPositions = new CGPoint[] {  				new CGPoint (0' 100)'  				new CGPoint (-84' 75)'  				new CGPoint (84' 50)  			};
Magic Number,ButtonTapper3000,LeaderboardScoresScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,DisplayScore,The following statement contains a magic number: CGPoint[] podiumPositions = new CGPoint[] {  				new CGPoint (0' 100)'  				new CGPoint (-84' 75)'  				new CGPoint (84' 50)  			};
Magic Number,ButtonTapper3000,LeaderboardScoresScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,DisplayScore,The following statement contains a magic number: CGPoint[] podiumPositions = new CGPoint[] {  				new CGPoint (0' 100)'  				new CGPoint (-84' 75)'  				new CGPoint (84' 50)  			};
Magic Number,ButtonTapper3000,LeaderboardScoresScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,DisplayScore,The following statement contains a magic number: CGPoint[] podiumPositions = new CGPoint[] {  				new CGPoint (0' 100)'  				new CGPoint (-84' 75)'  				new CGPoint (84' 50)  			};
Magic Number,ButtonTapper3000,LeaderboardScoresScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,DisplayScore,The following statement contains a magic number: SKLabelNode scoreLabel = new SKLabelNode ("GillSans-Bold") {  				Text = score.FormattedValue'  				FontSize = 14'  				Position = new CGPoint (FrameMidX + currentPoint.X' FrameMidY + currentPoint.Y - 32)  			};
Magic Number,ButtonTapper3000,LeaderboardScoresScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,DisplayScore,The following statement contains a magic number: SKLabelNode scoreLabel = new SKLabelNode ("GillSans-Bold") {  				Text = score.FormattedValue'  				FontSize = 14'  				Position = new CGPoint (FrameMidX + currentPoint.X' FrameMidY + currentPoint.Y - 32)  			};
Magic Number,ButtonTapper3000,LeaderboardScoresScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,DisplayScore,The following statement contains a magic number: player.LoadPhoto (GKPhotoSize.Small' delegate (UIImage photo' NSError error) {  				if (photo == null)  					photo = UIImage.FromFile ("Images/DefaultPlayerPhoto.png");  				var image = SKSpriteNode.FromTexture (SKTexture.FromImage (photo)' new CGSize (32' 32));  				image.Position = new CGPoint (FrameMidX + currentPoint.X' FrameMidY + currentPoint.Y + 16);  				AddChild (image);  			});
Magic Number,ButtonTapper3000,LeaderboardScoresScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,DisplayScore,The following statement contains a magic number: player.LoadPhoto (GKPhotoSize.Small' delegate (UIImage photo' NSError error) {  				if (photo == null)  					photo = UIImage.FromFile ("Images/DefaultPlayerPhoto.png");  				var image = SKSpriteNode.FromTexture (SKTexture.FromImage (photo)' new CGSize (32' 32));  				image.Position = new CGPoint (FrameMidX + currentPoint.X' FrameMidY + currentPoint.Y + 16);  				AddChild (image);  			});
Magic Number,ButtonTapper3000,LeaderboardScoresScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,DisplayScore,The following statement contains a magic number: player.LoadPhoto (GKPhotoSize.Small' delegate (UIImage photo' NSError error) {  				if (photo == null)  					photo = UIImage.FromFile ("Images/DefaultPlayerPhoto.png");  				var image = SKSpriteNode.FromTexture (SKTexture.FromImage (photo)' new CGSize (32' 32));  				image.Position = new CGPoint (FrameMidX + currentPoint.X' FrameMidY + currentPoint.Y + 16);  				AddChild (image);  			});
Magic Number,ButtonTapper3000,LeaderboardScoresScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\StatsScreen.cs,LoadLeaderboardScoresInfo,The following statement contains a magic number: leaderboard.Range = new NSRange (1' 3);
Magic Number,ButtonTapper3000,MainGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainGame.cs,MainGame,The following statement contains a magic number: button = new SKLabelNode ("GillSans-Bold") {  				Text = "Tap Me!"'  				FontSize = 18'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY)  			};
Magic Number,ButtonTapper3000,MainGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainGame.cs,MainGame,The following statement contains a magic number: clicksLabel = new SKLabelNode ("AvenirNext-Bold") {  				Text = GameInfo.CurrentTaps.ToString ()'  				FontSize = 45'  				Position = new CGPoint (FrameMidX' FrameMidY - 120)  			};
Magic Number,ButtonTapper3000,MainGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainGame.cs,MainGame,The following statement contains a magic number: clicksLabel = new SKLabelNode ("AvenirNext-Bold") {  				Text = GameInfo.CurrentTaps.ToString ()'  				FontSize = 45'  				Position = new CGPoint (FrameMidX' FrameMidY - 120)  			};
Magic Number,ButtonTapper3000,MainGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainGame.cs,MainGame,The following statement contains a magic number: timerLabel = new SKLabelNode ("HelveticaNeue-CondensedBlack") {  				Text = GameInfo.CurrentTicks.ToString ()'  				FontSize = 45'  				Position = new CGPoint (FrameMidX' FrameMidY + 120)  			};
Magic Number,ButtonTapper3000,MainGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainGame.cs,MainGame,The following statement contains a magic number: timerLabel = new SKLabelNode ("HelveticaNeue-CondensedBlack") {  				Text = GameInfo.CurrentTicks.ToString ()'  				FontSize = 45'  				Position = new CGPoint (FrameMidX' FrameMidY + 120)  			};
Magic Number,ButtonTapper3000,MainGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainGame.cs,TouchesBegan,The following statement contains a magic number: int x = rand.Next (100) - 50;
Magic Number,ButtonTapper3000,MainGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainGame.cs,TouchesBegan,The following statement contains a magic number: int x = rand.Next (100) - 50;
Magic Number,ButtonTapper3000,MainGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainGame.cs,TouchesBegan,The following statement contains a magic number: int y = rand.Next (100) - 50;
Magic Number,ButtonTapper3000,MainGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainGame.cs,TouchesBegan,The following statement contains a magic number: int y = rand.Next (100) - 50;
Magic Number,ButtonTapper3000,MainGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainGame.cs,TouchesBegan,The following statement contains a magic number: var tapOnceAchievement = new GKAchievement (TapOnceId' GKLocalPlayer.LocalPlayer.PlayerID) {  					PercentComplete = 100  				};
Magic Number,ButtonTapper3000,MainGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainGame.cs,ReportScore,The following statement contains a magic number: var playhard = new GKAchievement (PlayHardId' GKLocalPlayer.LocalPlayer.PlayerID) {  						PercentComplete = 100  					};
Magic Number,ButtonTapper3000,MainGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainGame.cs,ReportScore,The following statement contains a magic number: i < 6
Magic Number,ButtonTapper3000,MainGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainGame.cs,ReportScore,The following statement contains a magic number: GKAchievement playAllModesAchievement = new GKAchievement (PlayAllId) {  					PercentComplete = numTypesPlayed / 6.0 * 100.0  				};
Magic Number,ButtonTapper3000,MainGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainGame.cs,ReportScore,The following statement contains a magic number: GKAchievement playAllModesAchievement = new GKAchievement (PlayAllId) {  					PercentComplete = numTypesPlayed / 6.0 * 100.0  				};
Magic Number,ButtonTapper3000,MainGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainGame.cs,UpdateCurrentTapsLeaderboardAndTapAchievements,The following statement contains a magic number: int newTime = oldTime + GameInfo.GameTimeInSeconds * 100;
Magic Number,ButtonTapper3000,MainGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainGame.cs,UpdateCurrentTapsLeaderboardAndTapAchievements,The following statement contains a magic number: GKAchievement playAHundred = new GKAchievement (Tap100Id' GKLocalPlayer.LocalPlayer.PlayerID) {  				PercentComplete = (float) newScore.Context / 100f * 100f  			};
Magic Number,ButtonTapper3000,MainGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainGame.cs,UpdateCurrentTapsLeaderboardAndTapAchievements,The following statement contains a magic number: GKAchievement playAHundred = new GKAchievement (Tap100Id' GKLocalPlayer.LocalPlayer.PlayerID) {  				PercentComplete = (float) newScore.Context / 100f * 100f  			};
Magic Number,ButtonTapper3000,MainGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainGame.cs,UpdateCurrentTapsLeaderboardAndTapAchievements,The following statement contains a magic number: GKAchievement playAThousand = new GKAchievement (Tap1000Id' GKLocalPlayer.LocalPlayer.PlayerID) {  				PercentComplete = (float) newScore.Context / 1000f * 100f  			};
Magic Number,ButtonTapper3000,MainGame,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\MainGame.cs,UpdateCurrentTapsLeaderboardAndTapAchievements,The following statement contains a magic number: GKAchievement playAThousand = new GKAchievement (Tap1000Id' GKLocalPlayer.LocalPlayer.PlayerID) {  				PercentComplete = (float) newScore.Context / 1000f * 100f  			};
Magic Number,ButtonTapper3000,GameInfo,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Model\GameInfo.cs,GameInfo,The following statement contains a magic number: GameTimes = new [] { 15' 30' 45 };
Magic Number,ButtonTapper3000,GameInfo,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Model\GameInfo.cs,GameInfo,The following statement contains a magic number: GameTimes = new [] { 15' 30' 45 };
Magic Number,ButtonTapper3000,GameInfo,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Model\GameInfo.cs,GameInfo,The following statement contains a magic number: GameTimes = new [] { 15' 30' 45 };
Magic Number,ButtonTapper3000,ResultsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\ResultsScreen.cs,ResultsScreen,The following statement contains a magic number: var timeLabel = new SKLabelNode ("GillSans-Bold") {  				Text = "Time: " + GameInfo.GameTimeInSeconds'  				FontSize = 24'  				Position = new CGPoint (FrameMidX' FrameMidY + 120)  			};
Magic Number,ButtonTapper3000,ResultsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\ResultsScreen.cs,ResultsScreen,The following statement contains a magic number: var timeLabel = new SKLabelNode ("GillSans-Bold") {  				Text = "Time: " + GameInfo.GameTimeInSeconds'  				FontSize = 24'  				Position = new CGPoint (FrameMidX' FrameMidY + 120)  			};
Magic Number,ButtonTapper3000,ResultsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\ResultsScreen.cs,ResultsScreen,The following statement contains a magic number: var modeLabel = new SKLabelNode ("GillSans-Bold") {  				Text = "Mode: " + GameInfo.GameMode'  				FontSize = 24'  				Position = new CGPoint (FrameMidX' FrameMidY + 60)  			};
Magic Number,ButtonTapper3000,ResultsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\ResultsScreen.cs,ResultsScreen,The following statement contains a magic number: var modeLabel = new SKLabelNode ("GillSans-Bold") {  				Text = "Mode: " + GameInfo.GameMode'  				FontSize = 24'  				Position = new CGPoint (FrameMidX' FrameMidY + 60)  			};
Magic Number,ButtonTapper3000,ResultsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\ResultsScreen.cs,ResultsScreen,The following statement contains a magic number: var scoreLabel = new SKLabelNode ("GillSans-Bold") {  				Text = "Score: " + GameInfo.CurrentTaps'  				FontSize = 30'  				Position = new CGPoint (FrameMidX' FrameMidY)  			};
Magic Number,ButtonTapper3000,ResultsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\ResultsScreen.cs,ResultsScreen,The following statement contains a magic number: doneButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Done"'  				FontSize = 24'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 90)  			};
Magic Number,ButtonTapper3000,ResultsScreen,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\Scenes\ResultsScreen.cs,ResultsScreen,The following statement contains a magic number: doneButton = new SKLabelNode ("GillSans-Bold") {  				Text = "Done"'  				FontSize = 24'  				FontColor = ButtonColor'  				Position = new CGPoint (FrameMidX' FrameMidY - 90)  			};
Magic Number,ButtonTapper3000,ViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ButtonTapper3000\ButtonTapper3000\ViewController.cs,LoadView,The following statement contains a magic number: UIDevice.CurrentDevice.CheckSystemVersion (7' 0)
