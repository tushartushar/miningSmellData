Implementation smell,Namespace,Class,File,Method,Description
Complex Method,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,GenerateTone,Cyclomatic complexity of the method is 9
Long Statement,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,FinishedLaunching,The length of the statement  "			session.SetCategory(new NSString("AVAudioSessionCategoryPlayback")' AVAudioSessionCategoryOptions.DefaultToSpeaker' out error); " is 127.
Magic Number,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,FinishedLaunching,The following statement contains a magic number: var format = new AudioStreamBasicDescription              {                  SampleRate = sampleRate'                  Format = AudioFormatType.LinearPCM'                  FormatFlags = AudioFormatFlags.LinearPCMIsSignedInteger | AudioFormatFlags.LinearPCMIsPacked'                  BitsPerChannel = 16'                  ChannelsPerFrame = 1'                  BytesPerFrame = 2'                  BytesPerPacket = 2'                  FramesPerPacket = 1'              };
Magic Number,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,FinishedLaunching,The following statement contains a magic number: var format = new AudioStreamBasicDescription              {                  SampleRate = sampleRate'                  Format = AudioFormatType.LinearPCM'                  FormatFlags = AudioFormatFlags.LinearPCMIsSignedInteger | AudioFormatFlags.LinearPCMIsPacked'                  BitsPerChannel = 16'                  ChannelsPerFrame = 1'                  BytesPerFrame = 2'                  BytesPerPacket = 2'                  FramesPerPacket = 1'              };
Magic Number,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,FinishedLaunching,The following statement contains a magic number: var format = new AudioStreamBasicDescription              {                  SampleRate = sampleRate'                  Format = AudioFormatType.LinearPCM'                  FormatFlags = AudioFormatFlags.LinearPCMIsSignedInteger | AudioFormatFlags.LinearPCMIsPacked'                  BitsPerChannel = 16'                  ChannelsPerFrame = 1'                  BytesPerFrame = 2'                  BytesPerPacket = 2'                  FramesPerPacket = 1'              };
Magic Number,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,FinishedLaunching,The following statement contains a magic number: var bufferByteSize = (sampleRate > 16000) ? 2176 : 512;
Magic Number,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,FinishedLaunching,The following statement contains a magic number: var bufferByteSize = (sampleRate > 16000) ? 2176 : 512;
Magic Number,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,FinishedLaunching,The following statement contains a magic number: var bufferByteSize = (sampleRate > 16000) ? 2176 : 512;
Magic Number,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,GenerateTone,The following statement contains a magic number: uint sampleCount = buffer->AudioDataBytesCapacity / 2;
Magic Number,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,GenerateTone,The following statement contains a magic number: double amp = 0.9;
Magic Number,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,GenerateTone,The following statement contains a magic number: switch (outputWaveForm)                  {                      case WaveForm.Sine:                          y = Math.Sin(x * 2.0 * Math.PI);                          break;                      case WaveForm.Triangle:                          x = x % 1.0;                          if (x < 0.25)                              y = x * 4.0; // up 0.0 to 1.0  						else if (x < 0.75)                              y = (1.0 - x) * 4.0 - 2.0; // down 1.0 to -1.0  						else                              y = (x - 1.0) * 4.0; // up -1.0 to 0.0                          break;                      case WaveForm.Sawtooth:                          y = 0.8 - (x % 1.0) * 1.8;                          break;                      case WaveForm.Square:                          y = ((x % 1.0) < 0.5) ? 0.7 : -0.7;                          break;                      default:                          y = 0;                          break;                  }
Magic Number,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,GenerateTone,The following statement contains a magic number: switch (outputWaveForm)                  {                      case WaveForm.Sine:                          y = Math.Sin(x * 2.0 * Math.PI);                          break;                      case WaveForm.Triangle:                          x = x % 1.0;                          if (x < 0.25)                              y = x * 4.0; // up 0.0 to 1.0  						else if (x < 0.75)                              y = (1.0 - x) * 4.0 - 2.0; // down 1.0 to -1.0  						else                              y = (x - 1.0) * 4.0; // up -1.0 to 0.0                          break;                      case WaveForm.Sawtooth:                          y = 0.8 - (x % 1.0) * 1.8;                          break;                      case WaveForm.Square:                          y = ((x % 1.0) < 0.5) ? 0.7 : -0.7;                          break;                      default:                          y = 0;                          break;                  }
Magic Number,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,GenerateTone,The following statement contains a magic number: switch (outputWaveForm)                  {                      case WaveForm.Sine:                          y = Math.Sin(x * 2.0 * Math.PI);                          break;                      case WaveForm.Triangle:                          x = x % 1.0;                          if (x < 0.25)                              y = x * 4.0; // up 0.0 to 1.0  						else if (x < 0.75)                              y = (1.0 - x) * 4.0 - 2.0; // down 1.0 to -1.0  						else                              y = (x - 1.0) * 4.0; // up -1.0 to 0.0                          break;                      case WaveForm.Sawtooth:                          y = 0.8 - (x % 1.0) * 1.8;                          break;                      case WaveForm.Square:                          y = ((x % 1.0) < 0.5) ? 0.7 : -0.7;                          break;                      default:                          y = 0;                          break;                  }
Magic Number,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,GenerateTone,The following statement contains a magic number: switch (outputWaveForm)                  {                      case WaveForm.Sine:                          y = Math.Sin(x * 2.0 * Math.PI);                          break;                      case WaveForm.Triangle:                          x = x % 1.0;                          if (x < 0.25)                              y = x * 4.0; // up 0.0 to 1.0  						else if (x < 0.75)                              y = (1.0 - x) * 4.0 - 2.0; // down 1.0 to -1.0  						else                              y = (x - 1.0) * 4.0; // up -1.0 to 0.0                          break;                      case WaveForm.Sawtooth:                          y = 0.8 - (x % 1.0) * 1.8;                          break;                      case WaveForm.Square:                          y = ((x % 1.0) < 0.5) ? 0.7 : -0.7;                          break;                      default:                          y = 0;                          break;                  }
Magic Number,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,GenerateTone,The following statement contains a magic number: switch (outputWaveForm)                  {                      case WaveForm.Sine:                          y = Math.Sin(x * 2.0 * Math.PI);                          break;                      case WaveForm.Triangle:                          x = x % 1.0;                          if (x < 0.25)                              y = x * 4.0; // up 0.0 to 1.0  						else if (x < 0.75)                              y = (1.0 - x) * 4.0 - 2.0; // down 1.0 to -1.0  						else                              y = (x - 1.0) * 4.0; // up -1.0 to 0.0                          break;                      case WaveForm.Sawtooth:                          y = 0.8 - (x % 1.0) * 1.8;                          break;                      case WaveForm.Square:                          y = ((x % 1.0) < 0.5) ? 0.7 : -0.7;                          break;                      default:                          y = 0;                          break;                  }
Magic Number,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,GenerateTone,The following statement contains a magic number: switch (outputWaveForm)                  {                      case WaveForm.Sine:                          y = Math.Sin(x * 2.0 * Math.PI);                          break;                      case WaveForm.Triangle:                          x = x % 1.0;                          if (x < 0.25)                              y = x * 4.0; // up 0.0 to 1.0  						else if (x < 0.75)                              y = (1.0 - x) * 4.0 - 2.0; // down 1.0 to -1.0  						else                              y = (x - 1.0) * 4.0; // up -1.0 to 0.0                          break;                      case WaveForm.Sawtooth:                          y = 0.8 - (x % 1.0) * 1.8;                          break;                      case WaveForm.Square:                          y = ((x % 1.0) < 0.5) ? 0.7 : -0.7;                          break;                      default:                          y = 0;                          break;                  }
Magic Number,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,GenerateTone,The following statement contains a magic number: switch (outputWaveForm)                  {                      case WaveForm.Sine:                          y = Math.Sin(x * 2.0 * Math.PI);                          break;                      case WaveForm.Triangle:                          x = x % 1.0;                          if (x < 0.25)                              y = x * 4.0; // up 0.0 to 1.0  						else if (x < 0.75)                              y = (1.0 - x) * 4.0 - 2.0; // down 1.0 to -1.0  						else                              y = (x - 1.0) * 4.0; // up -1.0 to 0.0                          break;                      case WaveForm.Sawtooth:                          y = 0.8 - (x % 1.0) * 1.8;                          break;                      case WaveForm.Square:                          y = ((x % 1.0) < 0.5) ? 0.7 : -0.7;                          break;                      default:                          y = 0;                          break;                  }
Magic Number,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,GenerateTone,The following statement contains a magic number: switch (outputWaveForm)                  {                      case WaveForm.Sine:                          y = Math.Sin(x * 2.0 * Math.PI);                          break;                      case WaveForm.Triangle:                          x = x % 1.0;                          if (x < 0.25)                              y = x * 4.0; // up 0.0 to 1.0  						else if (x < 0.75)                              y = (1.0 - x) * 4.0 - 2.0; // down 1.0 to -1.0  						else                              y = (x - 1.0) * 4.0; // up -1.0 to 0.0                          break;                      case WaveForm.Sawtooth:                          y = 0.8 - (x % 1.0) * 1.8;                          break;                      case WaveForm.Square:                          y = ((x % 1.0) < 0.5) ? 0.7 : -0.7;                          break;                      default:                          y = 0;                          break;                  }
Magic Number,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,GenerateTone,The following statement contains a magic number: switch (outputWaveForm)                  {                      case WaveForm.Sine:                          y = Math.Sin(x * 2.0 * Math.PI);                          break;                      case WaveForm.Triangle:                          x = x % 1.0;                          if (x < 0.25)                              y = x * 4.0; // up 0.0 to 1.0  						else if (x < 0.75)                              y = (1.0 - x) * 4.0 - 2.0; // down 1.0 to -1.0  						else                              y = (x - 1.0) * 4.0; // up -1.0 to 0.0                          break;                      case WaveForm.Sawtooth:                          y = 0.8 - (x % 1.0) * 1.8;                          break;                      case WaveForm.Square:                          y = ((x % 1.0) < 0.5) ? 0.7 : -0.7;                          break;                      default:                          y = 0;                          break;                  }
Magic Number,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,GenerateTone,The following statement contains a magic number: switch (outputWaveForm)                  {                      case WaveForm.Sine:                          y = Math.Sin(x * 2.0 * Math.PI);                          break;                      case WaveForm.Triangle:                          x = x % 1.0;                          if (x < 0.25)                              y = x * 4.0; // up 0.0 to 1.0  						else if (x < 0.75)                              y = (1.0 - x) * 4.0 - 2.0; // down 1.0 to -1.0  						else                              y = (x - 1.0) * 4.0; // up -1.0 to 0.0                          break;                      case WaveForm.Sawtooth:                          y = 0.8 - (x % 1.0) * 1.8;                          break;                      case WaveForm.Square:                          y = ((x % 1.0) < 0.5) ? 0.7 : -0.7;                          break;                      default:                          y = 0;                          break;                  }
Magic Number,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,GenerateTone,The following statement contains a magic number: switch (outputWaveForm)                  {                      case WaveForm.Sine:                          y = Math.Sin(x * 2.0 * Math.PI);                          break;                      case WaveForm.Triangle:                          x = x % 1.0;                          if (x < 0.25)                              y = x * 4.0; // up 0.0 to 1.0  						else if (x < 0.75)                              y = (1.0 - x) * 4.0 - 2.0; // down 1.0 to -1.0  						else                              y = (x - 1.0) * 4.0; // up -1.0 to 0.0                          break;                      case WaveForm.Sawtooth:                          y = 0.8 - (x % 1.0) * 1.8;                          break;                      case WaveForm.Square:                          y = ((x % 1.0) < 0.5) ? 0.7 : -0.7;                          break;                      default:                          y = 0;                          break;                  }
Magic Number,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,GenerateTone,The following statement contains a magic number: switch (outputWaveForm)                  {                      case WaveForm.Sine:                          y = Math.Sin(x * 2.0 * Math.PI);                          break;                      case WaveForm.Triangle:                          x = x % 1.0;                          if (x < 0.25)                              y = x * 4.0; // up 0.0 to 1.0  						else if (x < 0.75)                              y = (1.0 - x) * 4.0 - 2.0; // down 1.0 to -1.0  						else                              y = (x - 1.0) * 4.0; // up -1.0 to 0.0                          break;                      case WaveForm.Sawtooth:                          y = 0.8 - (x % 1.0) * 1.8;                          break;                      case WaveForm.Square:                          y = ((x % 1.0) < 0.5) ? 0.7 : -0.7;                          break;                      default:                          y = 0;                          break;                  }
Magic Number,tone,AppDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\AudioGenerator\AppDelegate.cs,GenerateTone,The following statement contains a magic number: buffer->AudioDataByteSize = sampleCount * 2;
