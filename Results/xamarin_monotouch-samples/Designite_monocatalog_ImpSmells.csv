Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,ButtonWithTitle,The method has 5 parameters. Parameters: title' frame' image' imagePressed' darkTextColor
Long Identifier,MonoCatalog,ToolbarViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ToolbarViewController.xib.designer.cs,,The length of the parameter __mt_buttonItemStyleSegControl is 30.
Long Identifier,MonoCatalog,PickerViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\PickerViewController.xib.designer.cs,,The length of the parameter __mt_buttonBarSegmentedControl is 30.
Long Identifier,MonoCatalog,PickerViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\PickerViewController.xib.designer.cs,,The length of the parameter __mt_pickerStyleSegmentedControl is 32.
Long Statement,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,ViewDidLoad,The length of the statement  "				new ButtonSample ("UIButtonRoundedRect"' "Rounded Button"' "buttons.cs:\rUIButton RoundedButtonType ()"' RoundedButtonType ())' " is 127.
Long Statement,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,ViewDidLoad,The length of the statement  "				new ButtonSample ("UIButtonTypeDetailDisclosure"' "Detail disclosure"' "buttons.cs:\rUIButton DetailDisclosureButton ()"' DetailDisclosureButton ())' " is 149.
Long Statement,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,ViewDidLoad,The length of the statement  "				new ButtonSample ("UIButtonTypeInfoLight"' "Info light"' "buttons.cs:\rUIButton InfoLightButtonType ()"' InfoLightButtonType ())' " is 129.
Long Statement,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,ViewDidLoad,The length of the statement  "				new ButtonSample ("UIButtonTypeInfoDark"' "Info dark"' "buttons.cs:\rUIButton InfoLightButtonType ()"' InfoDarkButtonType ())' " is 126.
Long Statement,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,ViewDidLoad,The length of the statement  "				new ButtonSample ("UIButtonTypeContactAdd"' "Contact Add"' "buttons.cs:\rUIButton ContactAddButtonType ()"' ContactAddButtonType ()) " is 132.
Long Statement,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,ViewDidLoad,The length of the statement  "				new ControlSample ("UISlider"' "Customized Slider"' "controls.cs: CustomSliderControl ()"' CustomSliderControl ("CustomizedSlider"))' " is 133.
Long Statement,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,ViewDidLoad,The length of the statement  "				new ControlSample ("UIActivityIndicatorView"' "Style Gray"' "controls.cs: ActivityIndicator ()"' ActivityIndicator ("ActivityIndicator"))' " is 138.
Long Statement,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The length of the statement  "			View.AddSubview (MakeLabel ("UISegmentedControlStyleBordered"' new CGRect (20f' yPlacement' View.Bounds.Width - 40f' lHeight))); " is 128.
Long Statement,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The length of the statement  "			View.AddSubview (MakeLabel ("UISegmentedControlStyleBar"' new CGRect (20f' yPlacement' View.Bounds.Width - 40f' lHeight))); " is 123.
Long Statement,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The length of the statement  "			View.AddSubview (MakeLabel ("UISegmentedControlStyleBar (tinted)"' new CGRect (20f' yPlacement' View.Bounds.Width - 40f' lHeight))); " is 132.
Long Statement,MonoCatalog,TextViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextViewController.xib.designer.cs,ViewWillAppear,The length of the statement  "						obs2 = NSNotificationCenter.DefaultCenter.AddObserver (new NSString("UIKeyboardWillHideNotification")' delegate (NSNotification n){ " is 131.
Long Statement,MonoCatalog,ToolbarViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ToolbarViewController.xib.designer.cs,ViewDidLoad,The length of the statement  "			toolbar.Frame = new CGRect (mainViewBounds.X' (float)(mainViewBounds.Y + mainViewBounds.Height - toolbarHeight * 2 + 2)' " is 120.
Long Statement,MonoCatalog,TransitionViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TransitionViewController.xib.designer.cs,ViewDidLoad,The length of the statement  "			containerView = new UIView (new CGRect ((View.Bounds.Width - kImageWidth)/2.0f' kTopPlacement' kImageWidth' kImageHeight)); " is 123.
Long Statement,MonoCatalog,WebViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\WebViewController.xib.designer.cs,ViewDidLoad,The length of the statement  "				web.LoadHtmlString (String.Format ("<html><center><font size=+5 color='red'>An error occurred:<br>{0}</font></center></html>"' args.Error.LocalizedDescription)' null); " is 167.
Long Statement,MonoCatalog,PickerViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\PickerViewController.xib.designer.cs,ViewWillAppear,The length of the statement  "			UIApplication.SharedApplication.StatusBarStyle = greaterThanSeven ? UIStatusBarStyle.Default : UIStatusBarStyle.BlackOpaque; " is 124.
Magic Number,MonoCatalog,DataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\AlertsViewController.xib.cs,RowsInSection,The following statement contains a magic number: return 2;
Magic Number,MonoCatalog,DataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\AlertsViewController.xib.cs,RowsInSection,The following statement contains a magic number: return 2;
Magic Number,MonoCatalog,DataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\AlertsViewController.xib.cs,RowsInSection,The following statement contains a magic number: return 2;
Magic Number,MonoCatalog,DataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\AlertsViewController.xib.cs,RowsInSection,The following statement contains a magic number: return 2;
Magic Number,MonoCatalog,TableDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\AlertsViewController.xib.cs,GetHeightForRow,The following statement contains a magic number: return indexPath.Row == 0 ? 50f : 22f;
Magic Number,MonoCatalog,TableDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\AlertsViewController.xib.cs,GetHeightForRow,The following statement contains a magic number: return indexPath.Row == 0 ? 50f : 22f;
Magic Number,MonoCatalog,TableDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\AlertsViewController.xib.cs,RowSelected,The following statement contains a magic number: switch (indexPath.Section){  					case 0:  						avc.DialogSimpleAction ();  						break;  					case 1:  						avc.DialogOkCancelAction ();  						break;    					case 2:  						avc.DialogOtherAction ();  						break;    					case 3:  						avc.AlertSimpleAction ();  						break;    					case 4:  						avc.AlertOkCancelAction ();  						break;    					case 5:  						avc.AlertOtherAction ();  						break;  					}
Magic Number,MonoCatalog,TableDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\AlertsViewController.xib.cs,RowSelected,The following statement contains a magic number: switch (indexPath.Section){  					case 0:  						avc.DialogSimpleAction ();  						break;  					case 1:  						avc.DialogOkCancelAction ();  						break;    					case 2:  						avc.DialogOtherAction ();  						break;    					case 3:  						avc.AlertSimpleAction ();  						break;    					case 4:  						avc.AlertOkCancelAction ();  						break;    					case 5:  						avc.AlertOtherAction ();  						break;  					}
Magic Number,MonoCatalog,TableDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\AlertsViewController.xib.cs,RowSelected,The following statement contains a magic number: switch (indexPath.Section){  					case 0:  						avc.DialogSimpleAction ();  						break;  					case 1:  						avc.DialogOkCancelAction ();  						break;    					case 2:  						avc.DialogOtherAction ();  						break;    					case 3:  						avc.AlertSimpleAction ();  						break;    					case 4:  						avc.AlertOkCancelAction ();  						break;    					case 5:  						avc.AlertOtherAction ();  						break;  					}
Magic Number,MonoCatalog,TableDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\AlertsViewController.xib.cs,RowSelected,The following statement contains a magic number: switch (indexPath.Section){  					case 0:  						avc.DialogSimpleAction ();  						break;  					case 1:  						avc.DialogOkCancelAction ();  						break;    					case 2:  						avc.DialogOtherAction ();  						break;    					case 3:  						avc.AlertSimpleAction ();  						break;    					case 4:  						avc.AlertOkCancelAction ();  						break;    					case 5:  						avc.AlertOtherAction ();  						break;  					}
Magic Number,MonoCatalog,TableDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\AlertsViewController.xib.cs,GetHeightForRow,The following statement contains a magic number: return indexPath.Row == 0 ? 50f : 38f;
Magic Number,MonoCatalog,TableDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\AlertsViewController.xib.cs,GetHeightForRow,The following statement contains a magic number: return indexPath.Row == 0 ? 50f : 38f;
Magic Number,MonoCatalog,TableDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\AlertsViewController.xib.cs,GetHeightForRow,The following statement contains a magic number: return indexPath.Row == 0 ? 50f : 38f;
Magic Number,MonoCatalog,TableDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\AlertsViewController.xib.cs,GetHeightForRow,The following statement contains a magic number: return indexPath.Row == 0 ? 50f : 38f;
Magic Number,MonoCatalog,TableDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\AlertsViewController.xib.cs,GetHeightForRow,The following statement contains a magic number: return indexPath.Row == 0 ? 50f : 22f;
Magic Number,MonoCatalog,TableDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\AlertsViewController.xib.cs,GetHeightForRow,The following statement contains a magic number: return indexPath.Row == 0 ? 50f : 22f;
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,ButtonWithTitle,The following statement contains a magic number: var newImage = image.StretchableImage (12' 0);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,ButtonWithTitle,The following statement contains a magic number: var newPressedImage = image.StretchableImage (12' 0);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,GrayButton,The following statement contains a magic number: var frame = new CGRect (182f' 5f' 106f' 40f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,GrayButton,The following statement contains a magic number: var frame = new CGRect (182f' 5f' 106f' 40f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,GrayButton,The following statement contains a magic number: var frame = new CGRect (182f' 5f' 106f' 40f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,GrayButton,The following statement contains a magic number: var frame = new CGRect (182f' 5f' 106f' 40f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,ImageButton,The following statement contains a magic number: var frame = new CGRect (182f' 5f' 106f' 40f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,ImageButton,The following statement contains a magic number: var frame = new CGRect (182f' 5f' 106f' 40f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,ImageButton,The following statement contains a magic number: var frame = new CGRect (182f' 5f' 106f' 40f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,ImageButton,The following statement contains a magic number: var frame = new CGRect (182f' 5f' 106f' 40f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,RoundedButtonType,The following statement contains a magic number: button.Frame = new CGRect (182f' 5f' 106f' 40f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,RoundedButtonType,The following statement contains a magic number: button.Frame = new CGRect (182f' 5f' 106f' 40f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,RoundedButtonType,The following statement contains a magic number: button.Frame = new CGRect (182f' 5f' 106f' 40f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,RoundedButtonType,The following statement contains a magic number: button.Frame = new CGRect (182f' 5f' 106f' 40f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,DetailDisclosureButton,The following statement contains a magic number: button.Frame = new CGRect (250f' 8f' 25f' 25f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,DetailDisclosureButton,The following statement contains a magic number: button.Frame = new CGRect (250f' 8f' 25f' 25f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,DetailDisclosureButton,The following statement contains a magic number: button.Frame = new CGRect (250f' 8f' 25f' 25f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,DetailDisclosureButton,The following statement contains a magic number: button.Frame = new CGRect (250f' 8f' 25f' 25f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,InfoDarkButtonType,The following statement contains a magic number: button.Frame = new CGRect (250' 8f' 25f' 25f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,InfoDarkButtonType,The following statement contains a magic number: button.Frame = new CGRect (250' 8f' 25f' 25f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,InfoDarkButtonType,The following statement contains a magic number: button.Frame = new CGRect (250' 8f' 25f' 25f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,InfoDarkButtonType,The following statement contains a magic number: button.Frame = new CGRect (250' 8f' 25f' 25f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,InfoLightButtonType,The following statement contains a magic number: button.Frame = new CGRect (250' 8f' 25f' 25f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,InfoLightButtonType,The following statement contains a magic number: button.Frame = new CGRect (250' 8f' 25f' 25f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,InfoLightButtonType,The following statement contains a magic number: button.Frame = new CGRect (250' 8f' 25f' 25f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,InfoLightButtonType,The following statement contains a magic number: button.Frame = new CGRect (250' 8f' 25f' 25f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,ContactAddButtonType,The following statement contains a magic number: button.Frame = new CGRect (250' 8f' 25f' 25f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,ContactAddButtonType,The following statement contains a magic number: button.Frame = new CGRect (250' 8f' 25f' 25f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,ContactAddButtonType,The following statement contains a magic number: button.Frame = new CGRect (250' 8f' 25f' 25f);
Magic Number,MonoCatalog,ButtonsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ButtonsViewController.xib.designer.cs,ContactAddButtonType,The following statement contains a magic number: button.Frame = new CGRect (250' 8f' 25f' 25f);
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,SwitchControl,The following statement contains a magic number: var sw = new UISwitch (new CGRect (198f' 12f' 94f' 27f)){  				BackgroundColor = UIColor.Clear'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,SwitchControl,The following statement contains a magic number: var sw = new UISwitch (new CGRect (198f' 12f' 94f' 27f)){  				BackgroundColor = UIColor.Clear'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,SwitchControl,The following statement contains a magic number: var sw = new UISwitch (new CGRect (198f' 12f' 94f' 27f)){  				BackgroundColor = UIColor.Clear'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,SwitchControl,The following statement contains a magic number: var sw = new UISwitch (new CGRect (198f' 12f' 94f' 27f)){  				BackgroundColor = UIColor.Clear'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,SliderControl,The following statement contains a magic number: var slider = new UISlider (new CGRect (174f' 12f' 120f' 7f)){  				BackgroundColor = UIColor.Clear'  				MinValue = 0f'  				MaxValue = 100f'  				Continuous = true'  				Value = 50f'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,SliderControl,The following statement contains a magic number: var slider = new UISlider (new CGRect (174f' 12f' 120f' 7f)){  				BackgroundColor = UIColor.Clear'  				MinValue = 0f'  				MaxValue = 100f'  				Continuous = true'  				Value = 50f'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,SliderControl,The following statement contains a magic number: var slider = new UISlider (new CGRect (174f' 12f' 120f' 7f)){  				BackgroundColor = UIColor.Clear'  				MinValue = 0f'  				MaxValue = 100f'  				Continuous = true'  				Value = 50f'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,SliderControl,The following statement contains a magic number: var slider = new UISlider (new CGRect (174f' 12f' 120f' 7f)){  				BackgroundColor = UIColor.Clear'  				MinValue = 0f'  				MaxValue = 100f'  				Continuous = true'  				Value = 50f'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,SliderControl,The following statement contains a magic number: var slider = new UISlider (new CGRect (174f' 12f' 120f' 7f)){  				BackgroundColor = UIColor.Clear'  				MinValue = 0f'  				MaxValue = 100f'  				Continuous = true'  				Value = 50f'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,SliderControl,The following statement contains a magic number: var slider = new UISlider (new CGRect (174f' 12f' 120f' 7f)){  				BackgroundColor = UIColor.Clear'  				MinValue = 0f'  				MaxValue = 100f'  				Continuous = true'  				Value = 50f'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,CustomSliderControl,The following statement contains a magic number: var cslider = new UISlider (new CGRect (174f' 12f' 120f' 7f)){  				BackgroundColor = UIColor.Clear'  				MinValue = 0f'  				MaxValue = 100f'  				Continuous = true'  				Value = 50f'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,CustomSliderControl,The following statement contains a magic number: var cslider = new UISlider (new CGRect (174f' 12f' 120f' 7f)){  				BackgroundColor = UIColor.Clear'  				MinValue = 0f'  				MaxValue = 100f'  				Continuous = true'  				Value = 50f'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,CustomSliderControl,The following statement contains a magic number: var cslider = new UISlider (new CGRect (174f' 12f' 120f' 7f)){  				BackgroundColor = UIColor.Clear'  				MinValue = 0f'  				MaxValue = 100f'  				Continuous = true'  				Value = 50f'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,CustomSliderControl,The following statement contains a magic number: var cslider = new UISlider (new CGRect (174f' 12f' 120f' 7f)){  				BackgroundColor = UIColor.Clear'  				MinValue = 0f'  				MaxValue = 100f'  				Continuous = true'  				Value = 50f'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,CustomSliderControl,The following statement contains a magic number: var cslider = new UISlider (new CGRect (174f' 12f' 120f' 7f)){  				BackgroundColor = UIColor.Clear'  				MinValue = 0f'  				MaxValue = 100f'  				Continuous = true'  				Value = 50f'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,CustomSliderControl,The following statement contains a magic number: var cslider = new UISlider (new CGRect (174f' 12f' 120f' 7f)){  				BackgroundColor = UIColor.Clear'  				MinValue = 0f'  				MaxValue = 100f'  				Continuous = true'  				Value = 50f'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,CustomSliderControl,The following statement contains a magic number: left = left.StretchableImage (10' 0);
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,CustomSliderControl,The following statement contains a magic number: right = right.StretchableImage (10' 0);
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,PageControl,The following statement contains a magic number: var page = new UIPageControl (new CGRect (120f' 14f' 178f' 20f)){  				BackgroundColor = UIColor.Gray'  				Pages = 10'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,PageControl,The following statement contains a magic number: var page = new UIPageControl (new CGRect (120f' 14f' 178f' 20f)){  				BackgroundColor = UIColor.Gray'  				Pages = 10'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,PageControl,The following statement contains a magic number: var page = new UIPageControl (new CGRect (120f' 14f' 178f' 20f)){  				BackgroundColor = UIColor.Gray'  				Pages = 10'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,PageControl,The following statement contains a magic number: var page = new UIPageControl (new CGRect (120f' 14f' 178f' 20f)){  				BackgroundColor = UIColor.Gray'  				Pages = 10'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,PageControl,The following statement contains a magic number: var page = new UIPageControl (new CGRect (120f' 14f' 178f' 20f)){  				BackgroundColor = UIColor.Gray'  				Pages = 10'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,ActivityIndicator,The following statement contains a magic number: var pind = new UIActivityIndicatorView (new CGRect (265f' 12f' 40f' 40f)){  				ActivityIndicatorViewStyle = UIActivityIndicatorViewStyle.Gray'  				AutoresizingMask = UIViewAutoresizing.FlexibleLeftMargin |  					UIViewAutoresizing.FlexibleRightMargin |  					UIViewAutoresizing.FlexibleTopMargin |  					UIViewAutoresizing.FlexibleBottomMargin'  				Tag = kViewTag'  				AccessibilityIdentifier = id'  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,ActivityIndicator,The following statement contains a magic number: var pind = new UIActivityIndicatorView (new CGRect (265f' 12f' 40f' 40f)){  				ActivityIndicatorViewStyle = UIActivityIndicatorViewStyle.Gray'  				AutoresizingMask = UIViewAutoresizing.FlexibleLeftMargin |  					UIViewAutoresizing.FlexibleRightMargin |  					UIViewAutoresizing.FlexibleTopMargin |  					UIViewAutoresizing.FlexibleBottomMargin'  				Tag = kViewTag'  				AccessibilityIdentifier = id'  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,ActivityIndicator,The following statement contains a magic number: var pind = new UIActivityIndicatorView (new CGRect (265f' 12f' 40f' 40f)){  				ActivityIndicatorViewStyle = UIActivityIndicatorViewStyle.Gray'  				AutoresizingMask = UIViewAutoresizing.FlexibleLeftMargin |  					UIViewAutoresizing.FlexibleRightMargin |  					UIViewAutoresizing.FlexibleTopMargin |  					UIViewAutoresizing.FlexibleBottomMargin'  				Tag = kViewTag'  				AccessibilityIdentifier = id'  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,ActivityIndicator,The following statement contains a magic number: var pind = new UIActivityIndicatorView (new CGRect (265f' 12f' 40f' 40f)){  				ActivityIndicatorViewStyle = UIActivityIndicatorViewStyle.Gray'  				AutoresizingMask = UIViewAutoresizing.FlexibleLeftMargin |  					UIViewAutoresizing.FlexibleRightMargin |  					UIViewAutoresizing.FlexibleTopMargin |  					UIViewAutoresizing.FlexibleBottomMargin'  				Tag = kViewTag'  				AccessibilityIdentifier = id'  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,ProgressBar,The following statement contains a magic number: return new UIProgressView (new CGRect (126f' 20f' 160f' 24f)){  				Style = UIProgressViewStyle.Default'  				Progress = 0.5f'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,ProgressBar,The following statement contains a magic number: return new UIProgressView (new CGRect (126f' 20f' 160f' 24f)){  				Style = UIProgressViewStyle.Default'  				Progress = 0.5f'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,ProgressBar,The following statement contains a magic number: return new UIProgressView (new CGRect (126f' 20f' 160f' 24f)){  				Style = UIProgressViewStyle.Default'  				Progress = 0.5f'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,ProgressBar,The following statement contains a magic number: return new UIProgressView (new CGRect (126f' 20f' 160f' 24f)){  				Style = UIProgressViewStyle.Default'  				Progress = 0.5f'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ControlsViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ControlsViewController.xib.designer.cs,ProgressBar,The following statement contains a magic number: return new UIProgressView (new CGRect (126f' 20f' 160f' 24f)){  				Style = UIProgressViewStyle.Default'  				Progress = 0.5f'  				Tag = kViewTag'  				AccessibilityIdentifier = id  			};
Magic Number,MonoCatalog,ImagesViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ImagesViewController.xib.designer.cs,ViewDidLoad,The following statement contains a magic number: imageView.AnimationDuration = 5;
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,MakeLabel,The following statement contains a magic number: return new UILabel (frame) {  				TextAlignment = UITextAlignment.Left'  				Text = title'  				Font = UIFont.BoldSystemFontOfSize (17f)'  				TextColor = new UIColor (76/255f' 86/255f' 108/255f' 1.0f)'  				BackgroundColor = UIColor.Clear  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,MakeLabel,The following statement contains a magic number: return new UILabel (frame) {  				TextAlignment = UITextAlignment.Left'  				Text = title'  				Font = UIFont.BoldSystemFontOfSize (17f)'  				TextColor = new UIColor (76/255f' 86/255f' 108/255f' 1.0f)'  				BackgroundColor = UIColor.Clear  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,MakeLabel,The following statement contains a magic number: return new UILabel (frame) {  				TextAlignment = UITextAlignment.Left'  				Text = title'  				Font = UIFont.BoldSystemFontOfSize (17f)'  				TextColor = new UIColor (76/255f' 86/255f' 108/255f' 1.0f)'  				BackgroundColor = UIColor.Clear  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,MakeLabel,The following statement contains a magic number: return new UILabel (frame) {  				TextAlignment = UITextAlignment.Left'  				Text = title'  				Font = UIFont.BoldSystemFontOfSize (17f)'  				TextColor = new UIColor (76/255f' 86/255f' 108/255f' 1.0f)'  				BackgroundColor = UIColor.Clear  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,MakeLabel,The following statement contains a magic number: return new UILabel (frame) {  				TextAlignment = UITextAlignment.Left'  				Text = title'  				Font = UIFont.BoldSystemFontOfSize (17f)'  				TextColor = new UIColor (76/255f' 86/255f' 108/255f' 1.0f)'  				BackgroundColor = UIColor.Clear  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,MakeLabel,The following statement contains a magic number: return new UILabel (frame) {  				TextAlignment = UITextAlignment.Left'  				Text = title'  				Font = UIFont.BoldSystemFontOfSize (17f)'  				TextColor = new UIColor (76/255f' 86/255f' 108/255f' 1.0f)'  				BackgroundColor = UIColor.Clear  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,MakeLabel,The following statement contains a magic number: return new UILabel (frame) {  				TextAlignment = UITextAlignment.Left'  				Text = title'  				Font = UIFont.BoldSystemFontOfSize (17f)'  				TextColor = new UIColor (76/255f' 86/255f' 108/255f' 1.0f)'  				BackgroundColor = UIColor.Clear  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: float yPlacement = 20f;
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: yPlacement += 44f;
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: UIDevice.CurrentDevice.CheckSystemVersion (7' 0)
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: View.AddSubview (MakeLabel ("UISegmentedControl"' new CGRect (20f' yPlacement' View.Bounds.Width - 40f' lHeight)));
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: View.AddSubview (MakeLabel ("UISegmentedControl"' new CGRect (20f' yPlacement' View.Bounds.Width - 40f' lHeight)));
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: yPlacement += 40f;
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: var segmentedControl = new UISegmentedControl (new object [] {  					UIImage.FromFile ("images/segment_check.png")'  					UIImage.FromFile ("images/segment_search.png")'  					UIImage.FromFile ("images/segment_tools.png")}){  				Frame = new CGRect (20f' yPlacement' View.Bounds.Width - 40f' 40f)'  				ControlStyle = UISegmentedControlStyle.Plain'  				SelectedSegment = 1'  				AccessibilityLabel = "Plain"  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: var segmentedControl = new UISegmentedControl (new object [] {  					UIImage.FromFile ("images/segment_check.png")'  					UIImage.FromFile ("images/segment_search.png")'  					UIImage.FromFile ("images/segment_tools.png")}){  				Frame = new CGRect (20f' yPlacement' View.Bounds.Width - 40f' 40f)'  				ControlStyle = UISegmentedControlStyle.Plain'  				SelectedSegment = 1'  				AccessibilityLabel = "Plain"  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: var segmentedControl = new UISegmentedControl (new object [] {  					UIImage.FromFile ("images/segment_check.png")'  					UIImage.FromFile ("images/segment_search.png")'  					UIImage.FromFile ("images/segment_tools.png")}){  				Frame = new CGRect (20f' yPlacement' View.Bounds.Width - 40f' 40f)'  				ControlStyle = UISegmentedControlStyle.Plain'  				SelectedSegment = 1'  				AccessibilityLabel = "Plain"  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: yPlacement += 60f;
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: View.AddSubview (MakeLabel ("UISegmentedControlStyleBordered"' new CGRect (20f' yPlacement' View.Bounds.Width - 40f' lHeight)));
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: View.AddSubview (MakeLabel ("UISegmentedControlStyleBordered"' new CGRect (20f' yPlacement' View.Bounds.Width - 40f' lHeight)));
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: yPlacement += 40f;
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: segmentedControl = new UISegmentedControl (items){  				Frame = new CGRect (20f' yPlacement' View.Bounds.Width - 40f' 40f)'  				ControlStyle = UISegmentedControlStyle.Bordered'  				SelectedSegment = 1'  				AccessibilityLabel = "Bordered"  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: segmentedControl = new UISegmentedControl (items){  				Frame = new CGRect (20f' yPlacement' View.Bounds.Width - 40f' 40f)'  				ControlStyle = UISegmentedControlStyle.Bordered'  				SelectedSegment = 1'  				AccessibilityLabel = "Bordered"  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: segmentedControl = new UISegmentedControl (items){  				Frame = new CGRect (20f' yPlacement' View.Bounds.Width - 40f' 40f)'  				ControlStyle = UISegmentedControlStyle.Bordered'  				SelectedSegment = 1'  				AccessibilityLabel = "Bordered"  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: yPlacement += 60f;
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: View.AddSubview (MakeLabel ("UISegmentedControlStyleBar"' new CGRect (20f' yPlacement' View.Bounds.Width - 40f' lHeight)));
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: View.AddSubview (MakeLabel ("UISegmentedControlStyleBar"' new CGRect (20f' yPlacement' View.Bounds.Width - 40f' lHeight)));
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: yPlacement += 40f;
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: segmentedControl = new UISegmentedControl (items){  				Frame = new CGRect (20f' yPlacement' View.Bounds.Width - 40f' 40f)'  				ControlStyle = UISegmentedControlStyle.Bar'  				SelectedSegment = 1'  				AccessibilityLabel = "Bar"  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: segmentedControl = new UISegmentedControl (items){  				Frame = new CGRect (20f' yPlacement' View.Bounds.Width - 40f' 40f)'  				ControlStyle = UISegmentedControlStyle.Bar'  				SelectedSegment = 1'  				AccessibilityLabel = "Bar"  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: segmentedControl = new UISegmentedControl (items){  				Frame = new CGRect (20f' yPlacement' View.Bounds.Width - 40f' 40f)'  				ControlStyle = UISegmentedControlStyle.Bar'  				SelectedSegment = 1'  				AccessibilityLabel = "Bar"  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: yPlacement += 60f;
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: View.AddSubview (MakeLabel ("UISegmentedControlStyleBar (tinted)"' new CGRect (20f' yPlacement' View.Bounds.Width - 40f' lHeight)));
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: View.AddSubview (MakeLabel ("UISegmentedControlStyleBar (tinted)"' new CGRect (20f' yPlacement' View.Bounds.Width - 40f' lHeight)));
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: yPlacement += 40f;
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: segmentedControl = new UISegmentedControl (items){  				Frame = new CGRect (20f' yPlacement' View.Bounds.Width - 40f' 40f)'  				ControlStyle = UISegmentedControlStyle.Bar'  				TintColor = UIColor.FromRGB (0.7f' 0.171f' 0.1f)'  								SelectedSegment = 1'  								AccessibilityLabel = "Tinted"  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: segmentedControl = new UISegmentedControl (items){  				Frame = new CGRect (20f' yPlacement' View.Bounds.Width - 40f' 40f)'  				ControlStyle = UISegmentedControlStyle.Bar'  				TintColor = UIColor.FromRGB (0.7f' 0.171f' 0.1f)'  								SelectedSegment = 1'  								AccessibilityLabel = "Tinted"  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: segmentedControl = new UISegmentedControl (items){  				Frame = new CGRect (20f' yPlacement' View.Bounds.Width - 40f' 40f)'  				ControlStyle = UISegmentedControlStyle.Bar'  				TintColor = UIColor.FromRGB (0.7f' 0.171f' 0.1f)'  								SelectedSegment = 1'  								AccessibilityLabel = "Tinted"  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: segmentedControl = new UISegmentedControl (items){  				Frame = new CGRect (20f' yPlacement' View.Bounds.Width - 40f' 40f)'  				ControlStyle = UISegmentedControlStyle.Bar'  				TintColor = UIColor.FromRGB (0.7f' 0.171f' 0.1f)'  								SelectedSegment = 1'  								AccessibilityLabel = "Tinted"  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: segmentedControl = new UISegmentedControl (items){  				Frame = new CGRect (20f' yPlacement' View.Bounds.Width - 40f' 40f)'  				ControlStyle = UISegmentedControlStyle.Bar'  				TintColor = UIColor.FromRGB (0.7f' 0.171f' 0.1f)'  								SelectedSegment = 1'  								AccessibilityLabel = "Tinted"  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: segmentedControl = new UISegmentedControl (items){  				Frame = new CGRect (20f' yPlacement' View.Bounds.Width - 40f' 40f)'  				ControlStyle = UISegmentedControlStyle.Bar'  				TintColor = UIColor.FromRGB (0.7f' 0.171f' 0.1f)'  								SelectedSegment = 1'  								AccessibilityLabel = "Tinted"  			};
Magic Number,MonoCatalog,SegmentViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SegmentViewController.xib.designer.cs,CreateControls,The following statement contains a magic number: yPlacement += 60f;
Magic Number,MonoCatalog,TextFieldController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextFieldController.xib.designer.cs,TextFieldNormal,The following statement contains a magic number: return new UITextField (new CGRect (30f' 8f' 260f' 30f)){  				BorderStyle = UITextBorderStyle.Bezel'  				TextColor = UIColor.Black'  				Font = UIFont.SystemFontOfSize (17f)'  				Placeholder = "<enter text>"'  				BackgroundColor = UIColor.White'  				AutocorrectionType = UITextAutocorrectionType.No'  				KeyboardType = UIKeyboardType.Default'  				ReturnKeyType = UIReturnKeyType.Done'  				ClearButtonMode = UITextFieldViewMode.WhileEditing'  				Tag = kViewTag'  				ShouldReturn = DoReturn'  				AccessibilityLabel = "Normal"  			};
Magic Number,MonoCatalog,TextFieldController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextFieldController.xib.designer.cs,TextFieldNormal,The following statement contains a magic number: return new UITextField (new CGRect (30f' 8f' 260f' 30f)){  				BorderStyle = UITextBorderStyle.Bezel'  				TextColor = UIColor.Black'  				Font = UIFont.SystemFontOfSize (17f)'  				Placeholder = "<enter text>"'  				BackgroundColor = UIColor.White'  				AutocorrectionType = UITextAutocorrectionType.No'  				KeyboardType = UIKeyboardType.Default'  				ReturnKeyType = UIReturnKeyType.Done'  				ClearButtonMode = UITextFieldViewMode.WhileEditing'  				Tag = kViewTag'  				ShouldReturn = DoReturn'  				AccessibilityLabel = "Normal"  			};
Magic Number,MonoCatalog,TextFieldController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextFieldController.xib.designer.cs,TextFieldNormal,The following statement contains a magic number: return new UITextField (new CGRect (30f' 8f' 260f' 30f)){  				BorderStyle = UITextBorderStyle.Bezel'  				TextColor = UIColor.Black'  				Font = UIFont.SystemFontOfSize (17f)'  				Placeholder = "<enter text>"'  				BackgroundColor = UIColor.White'  				AutocorrectionType = UITextAutocorrectionType.No'  				KeyboardType = UIKeyboardType.Default'  				ReturnKeyType = UIReturnKeyType.Done'  				ClearButtonMode = UITextFieldViewMode.WhileEditing'  				Tag = kViewTag'  				ShouldReturn = DoReturn'  				AccessibilityLabel = "Normal"  			};
Magic Number,MonoCatalog,TextFieldController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextFieldController.xib.designer.cs,TextFieldNormal,The following statement contains a magic number: return new UITextField (new CGRect (30f' 8f' 260f' 30f)){  				BorderStyle = UITextBorderStyle.Bezel'  				TextColor = UIColor.Black'  				Font = UIFont.SystemFontOfSize (17f)'  				Placeholder = "<enter text>"'  				BackgroundColor = UIColor.White'  				AutocorrectionType = UITextAutocorrectionType.No'  				KeyboardType = UIKeyboardType.Default'  				ReturnKeyType = UIReturnKeyType.Done'  				ClearButtonMode = UITextFieldViewMode.WhileEditing'  				Tag = kViewTag'  				ShouldReturn = DoReturn'  				AccessibilityLabel = "Normal"  			};
Magic Number,MonoCatalog,TextFieldController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextFieldController.xib.designer.cs,TextFieldNormal,The following statement contains a magic number: return new UITextField (new CGRect (30f' 8f' 260f' 30f)){  				BorderStyle = UITextBorderStyle.Bezel'  				TextColor = UIColor.Black'  				Font = UIFont.SystemFontOfSize (17f)'  				Placeholder = "<enter text>"'  				BackgroundColor = UIColor.White'  				AutocorrectionType = UITextAutocorrectionType.No'  				KeyboardType = UIKeyboardType.Default'  				ReturnKeyType = UIReturnKeyType.Done'  				ClearButtonMode = UITextFieldViewMode.WhileEditing'  				Tag = kViewTag'  				ShouldReturn = DoReturn'  				AccessibilityLabel = "Normal"  			};
Magic Number,MonoCatalog,TextFieldController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextFieldController.xib.designer.cs,TextFieldRounded,The following statement contains a magic number: return new UITextField (new CGRect (30f' 8f' 260f' 30f)){  				BorderStyle = UITextBorderStyle.RoundedRect'  				TextColor = UIColor.Black'  				Font = UIFont.SystemFontOfSize (17f)'  				Placeholder = "<enter text>"'  				BackgroundColor = UIColor.White'  				AutocorrectionType = UITextAutocorrectionType.No'  				KeyboardType = UIKeyboardType.Default'  				ReturnKeyType = UIReturnKeyType.Done'  				ClearButtonMode = UITextFieldViewMode.WhileEditing'  				Tag = kViewTag'  				ShouldReturn = DoReturn'  				AccessibilityLabel = "Rounded"  			};
Magic Number,MonoCatalog,TextFieldController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextFieldController.xib.designer.cs,TextFieldRounded,The following statement contains a magic number: return new UITextField (new CGRect (30f' 8f' 260f' 30f)){  				BorderStyle = UITextBorderStyle.RoundedRect'  				TextColor = UIColor.Black'  				Font = UIFont.SystemFontOfSize (17f)'  				Placeholder = "<enter text>"'  				BackgroundColor = UIColor.White'  				AutocorrectionType = UITextAutocorrectionType.No'  				KeyboardType = UIKeyboardType.Default'  				ReturnKeyType = UIReturnKeyType.Done'  				ClearButtonMode = UITextFieldViewMode.WhileEditing'  				Tag = kViewTag'  				ShouldReturn = DoReturn'  				AccessibilityLabel = "Rounded"  			};
Magic Number,MonoCatalog,TextFieldController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextFieldController.xib.designer.cs,TextFieldRounded,The following statement contains a magic number: return new UITextField (new CGRect (30f' 8f' 260f' 30f)){  				BorderStyle = UITextBorderStyle.RoundedRect'  				TextColor = UIColor.Black'  				Font = UIFont.SystemFontOfSize (17f)'  				Placeholder = "<enter text>"'  				BackgroundColor = UIColor.White'  				AutocorrectionType = UITextAutocorrectionType.No'  				KeyboardType = UIKeyboardType.Default'  				ReturnKeyType = UIReturnKeyType.Done'  				ClearButtonMode = UITextFieldViewMode.WhileEditing'  				Tag = kViewTag'  				ShouldReturn = DoReturn'  				AccessibilityLabel = "Rounded"  			};
Magic Number,MonoCatalog,TextFieldController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextFieldController.xib.designer.cs,TextFieldRounded,The following statement contains a magic number: return new UITextField (new CGRect (30f' 8f' 260f' 30f)){  				BorderStyle = UITextBorderStyle.RoundedRect'  				TextColor = UIColor.Black'  				Font = UIFont.SystemFontOfSize (17f)'  				Placeholder = "<enter text>"'  				BackgroundColor = UIColor.White'  				AutocorrectionType = UITextAutocorrectionType.No'  				KeyboardType = UIKeyboardType.Default'  				ReturnKeyType = UIReturnKeyType.Done'  				ClearButtonMode = UITextFieldViewMode.WhileEditing'  				Tag = kViewTag'  				ShouldReturn = DoReturn'  				AccessibilityLabel = "Rounded"  			};
Magic Number,MonoCatalog,TextFieldController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextFieldController.xib.designer.cs,TextFieldRounded,The following statement contains a magic number: return new UITextField (new CGRect (30f' 8f' 260f' 30f)){  				BorderStyle = UITextBorderStyle.RoundedRect'  				TextColor = UIColor.Black'  				Font = UIFont.SystemFontOfSize (17f)'  				Placeholder = "<enter text>"'  				BackgroundColor = UIColor.White'  				AutocorrectionType = UITextAutocorrectionType.No'  				KeyboardType = UIKeyboardType.Default'  				ReturnKeyType = UIReturnKeyType.Done'  				ClearButtonMode = UITextFieldViewMode.WhileEditing'  				Tag = kViewTag'  				ShouldReturn = DoReturn'  				AccessibilityLabel = "Rounded"  			};
Magic Number,MonoCatalog,TextFieldController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextFieldController.xib.designer.cs,TextFieldSecure,The following statement contains a magic number: return new UITextField (new CGRect (30f' 8f' 260f' 30f)){  				BorderStyle = UITextBorderStyle.Bezel'  				TextColor = UIColor.Black'  				Font = UIFont.SystemFontOfSize (17f)'  				Placeholder = "<enter text>"'  				BackgroundColor = UIColor.White'  				AutocorrectionType = UITextAutocorrectionType.No'  				KeyboardType = UIKeyboardType.Default'  				ReturnKeyType = UIReturnKeyType.Done'  				ClearButtonMode = UITextFieldViewMode.WhileEditing'  				SecureTextEntry = true'  				Tag = kViewTag'  				ShouldReturn = DoReturn'  				AccessibilityLabel = "Secure"  			};
Magic Number,MonoCatalog,TextFieldController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextFieldController.xib.designer.cs,TextFieldSecure,The following statement contains a magic number: return new UITextField (new CGRect (30f' 8f' 260f' 30f)){  				BorderStyle = UITextBorderStyle.Bezel'  				TextColor = UIColor.Black'  				Font = UIFont.SystemFontOfSize (17f)'  				Placeholder = "<enter text>"'  				BackgroundColor = UIColor.White'  				AutocorrectionType = UITextAutocorrectionType.No'  				KeyboardType = UIKeyboardType.Default'  				ReturnKeyType = UIReturnKeyType.Done'  				ClearButtonMode = UITextFieldViewMode.WhileEditing'  				SecureTextEntry = true'  				Tag = kViewTag'  				ShouldReturn = DoReturn'  				AccessibilityLabel = "Secure"  			};
Magic Number,MonoCatalog,TextFieldController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextFieldController.xib.designer.cs,TextFieldSecure,The following statement contains a magic number: return new UITextField (new CGRect (30f' 8f' 260f' 30f)){  				BorderStyle = UITextBorderStyle.Bezel'  				TextColor = UIColor.Black'  				Font = UIFont.SystemFontOfSize (17f)'  				Placeholder = "<enter text>"'  				BackgroundColor = UIColor.White'  				AutocorrectionType = UITextAutocorrectionType.No'  				KeyboardType = UIKeyboardType.Default'  				ReturnKeyType = UIReturnKeyType.Done'  				ClearButtonMode = UITextFieldViewMode.WhileEditing'  				SecureTextEntry = true'  				Tag = kViewTag'  				ShouldReturn = DoReturn'  				AccessibilityLabel = "Secure"  			};
Magic Number,MonoCatalog,TextFieldController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextFieldController.xib.designer.cs,TextFieldSecure,The following statement contains a magic number: return new UITextField (new CGRect (30f' 8f' 260f' 30f)){  				BorderStyle = UITextBorderStyle.Bezel'  				TextColor = UIColor.Black'  				Font = UIFont.SystemFontOfSize (17f)'  				Placeholder = "<enter text>"'  				BackgroundColor = UIColor.White'  				AutocorrectionType = UITextAutocorrectionType.No'  				KeyboardType = UIKeyboardType.Default'  				ReturnKeyType = UIReturnKeyType.Done'  				ClearButtonMode = UITextFieldViewMode.WhileEditing'  				SecureTextEntry = true'  				Tag = kViewTag'  				ShouldReturn = DoReturn'  				AccessibilityLabel = "Secure"  			};
Magic Number,MonoCatalog,TextFieldController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextFieldController.xib.designer.cs,TextFieldSecure,The following statement contains a magic number: return new UITextField (new CGRect (30f' 8f' 260f' 30f)){  				BorderStyle = UITextBorderStyle.Bezel'  				TextColor = UIColor.Black'  				Font = UIFont.SystemFontOfSize (17f)'  				Placeholder = "<enter text>"'  				BackgroundColor = UIColor.White'  				AutocorrectionType = UITextAutocorrectionType.No'  				KeyboardType = UIKeyboardType.Default'  				ReturnKeyType = UIReturnKeyType.Done'  				ClearButtonMode = UITextFieldViewMode.WhileEditing'  				SecureTextEntry = true'  				Tag = kViewTag'  				ShouldReturn = DoReturn'  				AccessibilityLabel = "Secure"  			};
Magic Number,MonoCatalog,TextFieldController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextFieldController.xib.designer.cs,TextFieldLeftView,The following statement contains a magic number: return new UITextField (new CGRect (30f' 8f' 260f' 30f)){  				BorderStyle = UITextBorderStyle.Bezel'  				TextColor = UIColor.Black'  				Font = UIFont.SystemFontOfSize (17f)'  				Placeholder = "<enter text>"'  				BackgroundColor = UIColor.White'  				AutocorrectionType = UITextAutocorrectionType.No'  				KeyboardType = UIKeyboardType.Default'  				ReturnKeyType = UIReturnKeyType.Done'  				ClearButtonMode = UITextFieldViewMode.WhileEditing'  				Tag = kViewTag'  				ShouldReturn = DoReturn'  				LeftView = new UIImageView (UIImage.FromFile ("images/segment_check.png"))'  				LeftViewMode = UITextFieldViewMode.Always'  				AccessibilityLabel = "LeftView"  			};
Magic Number,MonoCatalog,TextFieldController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextFieldController.xib.designer.cs,TextFieldLeftView,The following statement contains a magic number: return new UITextField (new CGRect (30f' 8f' 260f' 30f)){  				BorderStyle = UITextBorderStyle.Bezel'  				TextColor = UIColor.Black'  				Font = UIFont.SystemFontOfSize (17f)'  				Placeholder = "<enter text>"'  				BackgroundColor = UIColor.White'  				AutocorrectionType = UITextAutocorrectionType.No'  				KeyboardType = UIKeyboardType.Default'  				ReturnKeyType = UIReturnKeyType.Done'  				ClearButtonMode = UITextFieldViewMode.WhileEditing'  				Tag = kViewTag'  				ShouldReturn = DoReturn'  				LeftView = new UIImageView (UIImage.FromFile ("images/segment_check.png"))'  				LeftViewMode = UITextFieldViewMode.Always'  				AccessibilityLabel = "LeftView"  			};
Magic Number,MonoCatalog,TextFieldController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextFieldController.xib.designer.cs,TextFieldLeftView,The following statement contains a magic number: return new UITextField (new CGRect (30f' 8f' 260f' 30f)){  				BorderStyle = UITextBorderStyle.Bezel'  				TextColor = UIColor.Black'  				Font = UIFont.SystemFontOfSize (17f)'  				Placeholder = "<enter text>"'  				BackgroundColor = UIColor.White'  				AutocorrectionType = UITextAutocorrectionType.No'  				KeyboardType = UIKeyboardType.Default'  				ReturnKeyType = UIReturnKeyType.Done'  				ClearButtonMode = UITextFieldViewMode.WhileEditing'  				Tag = kViewTag'  				ShouldReturn = DoReturn'  				LeftView = new UIImageView (UIImage.FromFile ("images/segment_check.png"))'  				LeftViewMode = UITextFieldViewMode.Always'  				AccessibilityLabel = "LeftView"  			};
Magic Number,MonoCatalog,TextFieldController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextFieldController.xib.designer.cs,TextFieldLeftView,The following statement contains a magic number: return new UITextField (new CGRect (30f' 8f' 260f' 30f)){  				BorderStyle = UITextBorderStyle.Bezel'  				TextColor = UIColor.Black'  				Font = UIFont.SystemFontOfSize (17f)'  				Placeholder = "<enter text>"'  				BackgroundColor = UIColor.White'  				AutocorrectionType = UITextAutocorrectionType.No'  				KeyboardType = UIKeyboardType.Default'  				ReturnKeyType = UIReturnKeyType.Done'  				ClearButtonMode = UITextFieldViewMode.WhileEditing'  				Tag = kViewTag'  				ShouldReturn = DoReturn'  				LeftView = new UIImageView (UIImage.FromFile ("images/segment_check.png"))'  				LeftViewMode = UITextFieldViewMode.Always'  				AccessibilityLabel = "LeftView"  			};
Magic Number,MonoCatalog,TextFieldController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextFieldController.xib.designer.cs,TextFieldLeftView,The following statement contains a magic number: return new UITextField (new CGRect (30f' 8f' 260f' 30f)){  				BorderStyle = UITextBorderStyle.Bezel'  				TextColor = UIColor.Black'  				Font = UIFont.SystemFontOfSize (17f)'  				Placeholder = "<enter text>"'  				BackgroundColor = UIColor.White'  				AutocorrectionType = UITextAutocorrectionType.No'  				KeyboardType = UIKeyboardType.Default'  				ReturnKeyType = UIReturnKeyType.Done'  				ClearButtonMode = UITextFieldViewMode.WhileEditing'  				Tag = kViewTag'  				ShouldReturn = DoReturn'  				LeftView = new UIImageView (UIImage.FromFile ("images/segment_check.png"))'  				LeftViewMode = UITextFieldViewMode.Always'  				AccessibilityLabel = "LeftView"  			};
Magic Number,MonoCatalog,TextViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TextViewController.xib.designer.cs,ViewDidLoad,The following statement contains a magic number: textView = new UITextView (View.Frame){  				TextColor = UIColor.Black'  				Font = UIFont.FromName ("Arial"' 18f)'  				BackgroundColor = UIColor.White'  				Text = "This code brought to you by ECMA 334' ECMA 335\n\n\nEmbrace the CIL!"'  				ReturnKeyType = UIReturnKeyType.Default'  				KeyboardType = UIKeyboardType.Default'  				ScrollEnabled = true'  				AutoresizingMask = UIViewAutoresizing.FlexibleHeight'  			};
Magic Number,MonoCatalog,ToolbarViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ToolbarViewController.xib.designer.cs,ViewDidLoad,The following statement contains a magic number: toolbar.Frame = new CGRect (mainViewBounds.X' (float)(mainViewBounds.Y + mainViewBounds.Height - toolbarHeight * 2 + 2)'  							mainViewBounds.Width' toolbarHeight);
Magic Number,MonoCatalog,ToolbarViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ToolbarViewController.xib.designer.cs,ViewDidLoad,The following statement contains a magic number: toolbar.Frame = new CGRect (mainViewBounds.X' (float)(mainViewBounds.Y + mainViewBounds.Height - toolbarHeight * 2 + 2)'  							mainViewBounds.Width' toolbarHeight);
Magic Number,MonoCatalog,ToolbarViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ToolbarViewController.xib.designer.cs,toggleStyle,The following statement contains a magic number: switch (sender.SelectedSegment){  			case 0:  				style = UIBarButtonItemStyle.Plain;  				break;  			case 1:  				style = UIBarButtonItemStyle.Bordered;  				break;  			case 2:  				style = UIBarButtonItemStyle.Done;  				break;  			}
Magic Number,MonoCatalog,ToolbarViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ToolbarViewController.xib.designer.cs,toggleBarStyle,The following statement contains a magic number: switch (sender.SelectedSegment){  			case 0:  				toolbar.BarStyle = UIBarStyle.Default;  				break;    			case 1:  				toolbar.BarStyle = UIBarStyle.Black;  				break;    			case 2:  				toolbar.BarStyle = UIBarStyle.BlackTranslucent;  				break;  			}
Magic Number,MonoCatalog,ToolbarViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ToolbarViewController.xib.designer.cs,toggleTintColor,The following statement contains a magic number: barStyleSegControl.Alpha = 0.5f;
Magic Number,MonoCatalog,ItemPickerModel,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ToolbarViewController.xib.cs,GetComponentWidth,The following statement contains a magic number: return 240f;
Magic Number,MonoCatalog,ItemPickerModel,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ToolbarViewController.xib.cs,GetRowHeight,The following statement contains a magic number: return 40f;
Magic Number,MonoCatalog,TransitionViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\TransitionViewController.xib.designer.cs,ViewDidLoad,The following statement contains a magic number: containerView = new UIView (new CGRect ((View.Bounds.Width - kImageWidth)/2.0f' kTopPlacement' kImageWidth' kImageHeight));
Magic Number,MonoCatalog,WebViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\WebViewController.xib.designer.cs,ViewDidLoad,The following statement contains a magic number: webFrame.Y += 25f;
Magic Number,MonoCatalog,WebViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\WebViewController.xib.designer.cs,ViewDidLoad,The following statement contains a magic number: webFrame.Height -= 40f;
Magic Number,MonoCatalog,WebViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\WebViewController.xib.designer.cs,ViewDidLoad,The following statement contains a magic number: var urlField = new UITextField (new CGRect (20f' 10f' View.Bounds.Width - (20f * 2f)' 30f)){  				BorderStyle = UITextBorderStyle.Bezel'  				TextColor = UIColor.Black'  				Placeholder = "<enter a URL>"'  				Text = "http://ios.xamarin.com/"'  				BackgroundColor = UIColor.White'  				AutoresizingMask = UIViewAutoresizing.FlexibleWidth'  				ReturnKeyType = UIReturnKeyType.Go'  				KeyboardType = UIKeyboardType.Url'  				AutocapitalizationType = UITextAutocapitalizationType.None'  				AutocorrectionType = UITextAutocorrectionType.No'  				ClearButtonMode = UITextFieldViewMode.Always  			};
Magic Number,MonoCatalog,WebViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\WebViewController.xib.designer.cs,ViewDidLoad,The following statement contains a magic number: var urlField = new UITextField (new CGRect (20f' 10f' View.Bounds.Width - (20f * 2f)' 30f)){  				BorderStyle = UITextBorderStyle.Bezel'  				TextColor = UIColor.Black'  				Placeholder = "<enter a URL>"'  				Text = "http://ios.xamarin.com/"'  				BackgroundColor = UIColor.White'  				AutoresizingMask = UIViewAutoresizing.FlexibleWidth'  				ReturnKeyType = UIReturnKeyType.Go'  				KeyboardType = UIKeyboardType.Url'  				AutocapitalizationType = UITextAutocapitalizationType.None'  				AutocorrectionType = UITextAutocorrectionType.No'  				ClearButtonMode = UITextFieldViewMode.Always  			};
Magic Number,MonoCatalog,WebViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\WebViewController.xib.designer.cs,ViewDidLoad,The following statement contains a magic number: var urlField = new UITextField (new CGRect (20f' 10f' View.Bounds.Width - (20f * 2f)' 30f)){  				BorderStyle = UITextBorderStyle.Bezel'  				TextColor = UIColor.Black'  				Placeholder = "<enter a URL>"'  				Text = "http://ios.xamarin.com/"'  				BackgroundColor = UIColor.White'  				AutoresizingMask = UIViewAutoresizing.FlexibleWidth'  				ReturnKeyType = UIReturnKeyType.Go'  				KeyboardType = UIKeyboardType.Url'  				AutocapitalizationType = UITextAutocapitalizationType.None'  				AutocorrectionType = UITextAutocorrectionType.No'  				ClearButtonMode = UITextFieldViewMode.Always  			};
Magic Number,MonoCatalog,WebViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\WebViewController.xib.designer.cs,ViewDidLoad,The following statement contains a magic number: var urlField = new UITextField (new CGRect (20f' 10f' View.Bounds.Width - (20f * 2f)' 30f)){  				BorderStyle = UITextBorderStyle.Bezel'  				TextColor = UIColor.Black'  				Placeholder = "<enter a URL>"'  				Text = "http://ios.xamarin.com/"'  				BackgroundColor = UIColor.White'  				AutoresizingMask = UIViewAutoresizing.FlexibleWidth'  				ReturnKeyType = UIReturnKeyType.Go'  				KeyboardType = UIKeyboardType.Url'  				AutocapitalizationType = UITextAutocapitalizationType.None'  				AutocorrectionType = UITextAutocorrectionType.No'  				ClearButtonMode = UITextFieldViewMode.Always  			};
Magic Number,MonoCatalog,WebViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\WebViewController.xib.designer.cs,ViewDidLoad,The following statement contains a magic number: var urlField = new UITextField (new CGRect (20f' 10f' View.Bounds.Width - (20f * 2f)' 30f)){  				BorderStyle = UITextBorderStyle.Bezel'  				TextColor = UIColor.Black'  				Placeholder = "<enter a URL>"'  				Text = "http://ios.xamarin.com/"'  				BackgroundColor = UIColor.White'  				AutoresizingMask = UIViewAutoresizing.FlexibleWidth'  				ReturnKeyType = UIReturnKeyType.Go'  				KeyboardType = UIKeyboardType.Url'  				AutocapitalizationType = UITextAutocapitalizationType.None'  				AutocorrectionType = UITextAutocorrectionType.No'  				ClearButtonMode = UITextFieldViewMode.Always  			};
Magic Number,MonoCatalog,PickerViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\PickerViewController.xib.designer.cs,ViewDidLoad,The following statement contains a magic number: greaterThanSeven = UIDevice.CurrentDevice.CheckSystemVersion (7' 0);
Magic Number,MonoCatalog,PickerViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\PickerViewController.xib.designer.cs,ViewDidLoad,The following statement contains a magic number: label = new UILabel (new CGRect (20f' myPickerView.Frame.Y - 30f' View.Bounds.Width - 40f' 30f)){  				Font = UIFont.SystemFontOfSize (14)'  				TextAlignment = UITextAlignment.Center'  				TextColor = labelTextColor'  				BackgroundColor = UIColor.Clear  			};
Magic Number,MonoCatalog,PickerViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\PickerViewController.xib.designer.cs,ViewDidLoad,The following statement contains a magic number: label = new UILabel (new CGRect (20f' myPickerView.Frame.Y - 30f' View.Bounds.Width - 40f' 30f)){  				Font = UIFont.SystemFontOfSize (14)'  				TextAlignment = UITextAlignment.Center'  				TextColor = labelTextColor'  				BackgroundColor = UIColor.Clear  			};
Magic Number,MonoCatalog,PickerViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\PickerViewController.xib.designer.cs,ViewDidLoad,The following statement contains a magic number: label = new UILabel (new CGRect (20f' myPickerView.Frame.Y - 30f' View.Bounds.Width - 40f' 30f)){  				Font = UIFont.SystemFontOfSize (14)'  				TextAlignment = UITextAlignment.Center'  				TextColor = labelTextColor'  				BackgroundColor = UIColor.Clear  			};
Magic Number,MonoCatalog,PickerViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\PickerViewController.xib.designer.cs,ViewDidLoad,The following statement contains a magic number: label = new UILabel (new CGRect (20f' myPickerView.Frame.Y - 30f' View.Bounds.Width - 40f' 30f)){  				Font = UIFont.SystemFontOfSize (14)'  				TextAlignment = UITextAlignment.Center'  				TextColor = labelTextColor'  				BackgroundColor = UIColor.Clear  			};
Magic Number,MonoCatalog,PickerViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\PickerViewController.xib.designer.cs,ViewDidLoad,The following statement contains a magic number: label = new UILabel (new CGRect (20f' myPickerView.Frame.Y - 30f' View.Bounds.Width - 40f' 30f)){  				Font = UIFont.SystemFontOfSize (14)'  				TextAlignment = UITextAlignment.Center'  				TextColor = labelTextColor'  				BackgroundColor = UIColor.Clear  			};
Magic Number,MonoCatalog,PickerViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\PickerViewController.xib.designer.cs,PickerFrameWithSize,The following statement contains a magic number: return new CGRect (0f' screenRect.Height - 84f - size.Height' size.Width' size.Height);
Magic Number,MonoCatalog,PickerViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\PickerViewController.xib.designer.cs,TogglePickers,The following statement contains a magic number: switch (sender.SelectedSegment){  			case 0:  				pickerStyleSegmentedControl.Hidden = true;  				segmentLabel.Hidden = true;  				ShowPicker (myPickerView);  				break;    			case 1:  				pickerStyleSegmentedControl.SelectedSegment = 1;  				datePickerView.Mode = UIDatePickerMode.Date;  				pickerStyleSegmentedControl.Hidden = false;  				segmentLabel.Hidden = false;  				ShowPicker (datePickerView);  				break;    			case 2:  				pickerStyleSegmentedControl.Hidden = true;  				segmentLabel.Hidden = true;  				ShowPicker (customPickerView);  				break;  			}
Magic Number,MonoCatalog,PickerViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\PickerViewController.xib.designer.cs,TogglePickerStyle,The following statement contains a magic number: switch (sender.SelectedSegment){  			case 0: // time  				datePickerView.Mode = UIDatePickerMode.Time;  				break;    			case 1: // date  				datePickerView.Mode = UIDatePickerMode.Date;  				break;    			case 2: // date & time  				datePickerView.Mode = UIDatePickerMode.DateAndTime;  				break;    			case 3: // counter  				datePickerView.Mode = UIDatePickerMode.CountDownTimer;  				break;  			}
Magic Number,MonoCatalog,PickerViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\PickerViewController.xib.designer.cs,TogglePickerStyle,The following statement contains a magic number: switch (sender.SelectedSegment){  			case 0: // time  				datePickerView.Mode = UIDatePickerMode.Time;  				break;    			case 1: // date  				datePickerView.Mode = UIDatePickerMode.Date;  				break;    			case 2: // date & time  				datePickerView.Mode = UIDatePickerMode.DateAndTime;  				break;    			case 3: // counter  				datePickerView.Mode = UIDatePickerMode.CountDownTimer;  				break;  			}
Magic Number,MonoCatalog,PeopleModel,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\PickerViewController.xib.cs,GetComponentCount,The following statement contains a magic number: return 2;
Magic Number,MonoCatalog,PeopleModel,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\PickerViewController.xib.cs,GetComponentWidth,The following statement contains a magic number: return 240f;
Magic Number,MonoCatalog,PeopleModel,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\PickerViewController.xib.cs,GetRowHeight,The following statement contains a magic number: return 40f;
Magic Number,MonoCatalog,SearchBarController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SearchBarController.xib.designer.cs,ViewDidLoad,The following statement contains a magic number: var f = new CGRect (0f' 64f' View.Bounds.Width' 44f);
Magic Number,MonoCatalog,SearchBarController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\SearchBarController.xib.designer.cs,ViewDidLoad,The following statement contains a magic number: var f = new CGRect (0f' 64f' View.Bounds.Width' 44f);
Magic Number,MonoCatalog,ItemsTableDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetHeightForRow,The following statement contains a magic number: return 70f;
Magic Number,MonoCatalog,ItemsTableDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetHeightForRow,The following statement contains a magic number: return 50f;
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetAddKeyValuePairCell,The following statement contains a magic number: var lblKey = new UILabel () {  					BaselineAdjustment = UIBaselineAdjustment.AlignCenters'  					Frame              = new CGRect (10f' 0f' 70f' 31f)'  					Tag                = kKeyTag << 1'  					Text               = "Key: "'  					TextAlignment      = UITextAlignment.Right'  				};
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetAddKeyValuePairCell,The following statement contains a magic number: var lblKey = new UILabel () {  					BaselineAdjustment = UIBaselineAdjustment.AlignCenters'  					Frame              = new CGRect (10f' 0f' 70f' 31f)'  					Tag                = kKeyTag << 1'  					Text               = "Key: "'  					TextAlignment      = UITextAlignment.Right'  				};
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetAddKeyValuePairCell,The following statement contains a magic number: var lblKey = new UILabel () {  					BaselineAdjustment = UIBaselineAdjustment.AlignCenters'  					Frame              = new CGRect (10f' 0f' 70f' 31f)'  					Tag                = kKeyTag << 1'  					Text               = "Key: "'  					TextAlignment      = UITextAlignment.Right'  				};
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetAddKeyValuePairCell,The following statement contains a magic number: var key = new UITextField () {  					BorderStyle        = UITextBorderStyle.Bezel'  					ClearButtonMode    = UITextFieldViewMode.WhileEditing'  					Frame              = new CGRect (80f' 1f' 170f' 31f)'  					Placeholder        = "Key"'  					Tag                = kKeyTag'  					AccessibilityLabel = "Key"  				};
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetAddKeyValuePairCell,The following statement contains a magic number: var key = new UITextField () {  					BorderStyle        = UITextBorderStyle.Bezel'  					ClearButtonMode    = UITextFieldViewMode.WhileEditing'  					Frame              = new CGRect (80f' 1f' 170f' 31f)'  					Placeholder        = "Key"'  					Tag                = kKeyTag'  					AccessibilityLabel = "Key"  				};
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetAddKeyValuePairCell,The following statement contains a magic number: var key = new UITextField () {  					BorderStyle        = UITextBorderStyle.Bezel'  					ClearButtonMode    = UITextFieldViewMode.WhileEditing'  					Frame              = new CGRect (80f' 1f' 170f' 31f)'  					Placeholder        = "Key"'  					Tag                = kKeyTag'  					AccessibilityLabel = "Key"  				};
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetAddKeyValuePairCell,The following statement contains a magic number: var lblValue = new UILabel () {  					BaselineAdjustment = UIBaselineAdjustment.AlignCenters'  					Frame              = new CGRect (10f' 37f' 70f' 31f)'  					Tag                = kValueTag << 1'  					Text               = "Value: "'  					TextAlignment      = UITextAlignment.Right'  				};
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetAddKeyValuePairCell,The following statement contains a magic number: var lblValue = new UILabel () {  					BaselineAdjustment = UIBaselineAdjustment.AlignCenters'  					Frame              = new CGRect (10f' 37f' 70f' 31f)'  					Tag                = kValueTag << 1'  					Text               = "Value: "'  					TextAlignment      = UITextAlignment.Right'  				};
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetAddKeyValuePairCell,The following statement contains a magic number: var lblValue = new UILabel () {  					BaselineAdjustment = UIBaselineAdjustment.AlignCenters'  					Frame              = new CGRect (10f' 37f' 70f' 31f)'  					Tag                = kValueTag << 1'  					Text               = "Value: "'  					TextAlignment      = UITextAlignment.Right'  				};
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetAddKeyValuePairCell,The following statement contains a magic number: var lblValue = new UILabel () {  					BaselineAdjustment = UIBaselineAdjustment.AlignCenters'  					Frame              = new CGRect (10f' 37f' 70f' 31f)'  					Tag                = kValueTag << 1'  					Text               = "Value: "'  					TextAlignment      = UITextAlignment.Right'  				};
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetAddKeyValuePairCell,The following statement contains a magic number: var value = new UITextField () {  					BorderStyle        = UITextBorderStyle.Bezel'  					ClearButtonMode    = UITextFieldViewMode.WhileEditing'  					Frame              = new CGRect (80f' 38f' 170f' 31f)'  					Placeholder        = "Value"'  					Tag                = kValueTag'  					AccessibilityLabel = "Value"  				};
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetAddKeyValuePairCell,The following statement contains a magic number: var value = new UITextField () {  					BorderStyle        = UITextBorderStyle.Bezel'  					ClearButtonMode    = UITextFieldViewMode.WhileEditing'  					Frame              = new CGRect (80f' 38f' 170f' 31f)'  					Placeholder        = "Value"'  					Tag                = kValueTag'  					AccessibilityLabel = "Value"  				};
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetAddKeyValuePairCell,The following statement contains a magic number: var value = new UITextField () {  					BorderStyle        = UITextBorderStyle.Bezel'  					ClearButtonMode    = UITextFieldViewMode.WhileEditing'  					Frame              = new CGRect (80f' 38f' 170f' 31f)'  					Placeholder        = "Value"'  					Tag                = kValueTag'  					AccessibilityLabel = "Value"  				};
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetAddKeyValuePairCell,The following statement contains a magic number: var value = new UITextField () {  					BorderStyle        = UITextBorderStyle.Bezel'  					ClearButtonMode    = UITextFieldViewMode.WhileEditing'  					Frame              = new CGRect (80f' 38f' 170f' 31f)'  					Placeholder        = "Value"'  					Tag                = kValueTag'  					AccessibilityLabel = "Value"  				};
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetAddKeyValuePairCell,The following statement contains a magic number: add.Frame               = new CGRect (255' 0' 40f' 70f);
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetAddKeyValuePairCell,The following statement contains a magic number: add.Frame               = new CGRect (255' 0' 40f' 70f);
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetAddKeyValuePairCell,The following statement contains a magic number: add.Frame               = new CGRect (255' 0' 40f' 70f);
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetKeyValuePairCell,The following statement contains a magic number: var width = tableView.Bounds.Width / 2;
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetKeyValuePairCell,The following statement contains a magic number: Func<string' int' bool' UILabel> createLabel = (v' t' left) => {  					var label = new UILabel ();  					label.Frame = left  						? new CGRect (10f' 1f' width-10' 40)  						: new CGRect (width' 1f' width-30' 40);  					label.Text = v;  					label.TextAlignment = left  						? UITextAlignment.Left  						: UITextAlignment.Right;  					label.Tag = t;  					return label;  				};
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetKeyValuePairCell,The following statement contains a magic number: Func<string' int' bool' UILabel> createLabel = (v' t' left) => {  					var label = new UILabel ();  					label.Frame = left  						? new CGRect (10f' 1f' width-10' 40)  						: new CGRect (width' 1f' width-30' 40);  					label.Text = v;  					label.TextAlignment = left  						? UITextAlignment.Left  						: UITextAlignment.Right;  					label.Tag = t;  					return label;  				};
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetKeyValuePairCell,The following statement contains a magic number: Func<string' int' bool' UILabel> createLabel = (v' t' left) => {  					var label = new UILabel ();  					label.Frame = left  						? new CGRect (10f' 1f' width-10' 40)  						: new CGRect (width' 1f' width-30' 40);  					label.Text = v;  					label.TextAlignment = left  						? UITextAlignment.Left  						: UITextAlignment.Right;  					label.Tag = t;  					return label;  				};
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetKeyValuePairCell,The following statement contains a magic number: Func<string' int' bool' UILabel> createLabel = (v' t' left) => {  					var label = new UILabel ();  					label.Frame = left  						? new CGRect (10f' 1f' width-10' 40)  						: new CGRect (width' 1f' width-30' 40);  					label.Text = v;  					label.TextAlignment = left  						? UITextAlignment.Left  						: UITextAlignment.Right;  					label.Tag = t;  					return label;  				};
Magic Number,MonoCatalog,ItemsDataSource,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\MonoDataSqlite.xib.cs,GetKeyValuePairCell,The following statement contains a magic number: Func<string' int' bool' UILabel> createLabel = (v' t' left) => {  					var label = new UILabel ();  					label.Frame = left  						? new CGRect (10f' 1f' width-10' 40)  						: new CGRect (width' 1f' width-30' 40);  					label.Text = v;  					label.TextAlignment = left  						? UITextAlignment.Left  						: UITextAlignment.Right;  					label.Tag = t;  					return label;  				};
Missing Default,MonoCatalog,TableDelegate,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\AlertsViewController.xib.cs,RowSelected,The following switch statement is missing a default case: switch (indexPath.Section){  					case 0:  						avc.DialogSimpleAction ();  						break;  					case 1:  						avc.DialogOkCancelAction ();  						break;    					case 2:  						avc.DialogOtherAction ();  						break;    					case 3:  						avc.AlertSimpleAction ();  						break;    					case 4:  						avc.AlertOkCancelAction ();  						break;    					case 5:  						avc.AlertOtherAction ();  						break;  					}
Missing Default,MonoCatalog,ToolbarViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ToolbarViewController.xib.designer.cs,toggleStyle,The following switch statement is missing a default case: switch (sender.SelectedSegment){  			case 0:  				style = UIBarButtonItemStyle.Plain;  				break;  			case 1:  				style = UIBarButtonItemStyle.Bordered;  				break;  			case 2:  				style = UIBarButtonItemStyle.Done;  				break;  			}
Missing Default,MonoCatalog,ToolbarViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\ToolbarViewController.xib.designer.cs,toggleBarStyle,The following switch statement is missing a default case: switch (sender.SelectedSegment){  			case 0:  				toolbar.BarStyle = UIBarStyle.Default;  				break;    			case 1:  				toolbar.BarStyle = UIBarStyle.Black;  				break;    			case 2:  				toolbar.BarStyle = UIBarStyle.BlackTranslucent;  				break;  			}
Missing Default,MonoCatalog,PickerViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\PickerViewController.xib.designer.cs,TogglePickers,The following switch statement is missing a default case: switch (sender.SelectedSegment){  			case 0:  				pickerStyleSegmentedControl.Hidden = true;  				segmentLabel.Hidden = true;  				ShowPicker (myPickerView);  				break;    			case 1:  				pickerStyleSegmentedControl.SelectedSegment = 1;  				datePickerView.Mode = UIDatePickerMode.Date;  				pickerStyleSegmentedControl.Hidden = false;  				segmentLabel.Hidden = false;  				ShowPicker (datePickerView);  				break;    			case 2:  				pickerStyleSegmentedControl.Hidden = true;  				segmentLabel.Hidden = true;  				ShowPicker (customPickerView);  				break;  			}
Missing Default,MonoCatalog,PickerViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\MonoCatalog-MonoDevelop\PickerViewController.xib.designer.cs,TogglePickerStyle,The following switch statement is missing a default case: switch (sender.SelectedSegment){  			case 0: // time  				datePickerView.Mode = UIDatePickerMode.Time;  				break;    			case 1: // date  				datePickerView.Mode = UIDatePickerMode.Date;  				break;    			case 2: // date & time  				datePickerView.Mode = UIDatePickerMode.DateAndTime;  				break;    			case 3: // counter  				datePickerView.Mode = UIDatePickerMode.CountDownTimer;  				break;  			}
