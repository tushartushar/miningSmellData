Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Footprint,MainViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\Footprint\Footprint\MainViewController.cs,ViewDidLoad,The following statement contains a magic number: var anchor1 = new GeoAnchor {  				LatitudeLongitude = new CLLocationCoordinate2D (37.770511' -122.465810)'  				Pixel = new CGPoint (12' 18)  			};
Magic Number,Footprint,MainViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\Footprint\Footprint\MainViewController.cs,ViewDidLoad,The following statement contains a magic number: var anchor1 = new GeoAnchor {  				LatitudeLongitude = new CLLocationCoordinate2D (37.770511' -122.465810)'  				Pixel = new CGPoint (12' 18)  			};
Magic Number,Footprint,MainViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\Footprint\Footprint\MainViewController.cs,ViewDidLoad,The following statement contains a magic number: var anchor1 = new GeoAnchor {  				LatitudeLongitude = new CLLocationCoordinate2D (37.770511' -122.465810)'  				Pixel = new CGPoint (12' 18)  			};
Magic Number,Footprint,MainViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\Footprint\Footprint\MainViewController.cs,ViewDidLoad,The following statement contains a magic number: var anchor1 = new GeoAnchor {  				LatitudeLongitude = new CLLocationCoordinate2D (37.770511' -122.465810)'  				Pixel = new CGPoint (12' 18)  			};
Magic Number,Footprint,MainViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\Footprint\Footprint\MainViewController.cs,ViewDidLoad,The following statement contains a magic number: var anchor2 = new GeoAnchor {  				LatitudeLongitude = new CLLocationCoordinate2D (37.769125' -122.466356)'  				Pixel = new CGPoint (481' 815)  			};
Magic Number,Footprint,MainViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\Footprint\Footprint\MainViewController.cs,ViewDidLoad,The following statement contains a magic number: var anchor2 = new GeoAnchor {  				LatitudeLongitude = new CLLocationCoordinate2D (37.769125' -122.466356)'  				Pixel = new CGPoint (481' 815)  			};
Magic Number,Footprint,MainViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\Footprint\Footprint\MainViewController.cs,ViewDidLoad,The following statement contains a magic number: var anchor2 = new GeoAnchor {  				LatitudeLongitude = new CLLocationCoordinate2D (37.769125' -122.466356)'  				Pixel = new CGPoint (481' 815)  			};
Magic Number,Footprint,MainViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\Footprint\Footprint\MainViewController.cs,ViewDidLoad,The following statement contains a magic number: var anchor2 = new GeoAnchor {  				LatitudeLongitude = new CLLocationCoordinate2D (37.769125' -122.466356)'  				Pixel = new CGPoint (481' 815)  			};
Magic Number,Footprint,MainViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\Footprint\Footprint\MainViewController.cs,SetScaleAndOffset,The following statement contains a magic number: displayOffset = new CGPoint (0' (imageViewFrameSize.Height - imageSize.Height * displayScale) / 2);
Magic Number,Footprint,MainViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\Footprint\Footprint\MainViewController.cs,UpdateViewWithLocation,The following statement contains a magic number: UIView.Animate (0.75' () => {  				// Call the converter to find these coordinates on our floorplan.  				CGPoint pointOnImage = coordinateConverter.Convert (location.Coordinate);    				// These coordinates need to be scaled based on how much the image has been scaled  				var x = pointOnImage.X * displayScale + displayOffset.X;  				var y = pointOnImage.Y * displayScale + displayOffset.Y;  				var scaledPoint = new CGPoint (x' y);    				// Calculate and set the size of the radius  				nfloat radiusFrameSize = (nfloat)location.HorizontalAccuracy * coordinateConverter.PixelsPerMeter * 2;  				RadiusView.Frame = new CGRect (0' 0' radiusFrameSize' radiusFrameSize);    				// Move the pin and radius to the user's location  				PinView.Center = scaledPoint;  				RadiusView.Center = scaledPoint;  			});
Magic Number,Footprint,MainViewController,D:\research\architectureSmells\repos\xamarin_monotouch-samples\ios8\Footprint\Footprint\MainViewController.cs,UpdateViewWithLocation,The following statement contains a magic number: UIView.Animate (0.75' () => {  				// Call the converter to find these coordinates on our floorplan.  				CGPoint pointOnImage = coordinateConverter.Convert (location.Coordinate);    				// These coordinates need to be scaled based on how much the image has been scaled  				var x = pointOnImage.X * displayScale + displayOffset.X;  				var y = pointOnImage.Y * displayScale + displayOffset.Y;  				var scaledPoint = new CGPoint (x' y);    				// Calculate and set the size of the radius  				nfloat radiusFrameSize = (nfloat)location.HorizontalAccuracy * coordinateConverter.PixelsPerMeter * 2;  				RadiusView.Frame = new CGRect (0' 0' radiusFrameSize' radiusFrameSize);    				// Move the pin and radius to the user's location  				PinView.Center = scaledPoint;  				RadiusView.Center = scaledPoint;  			});
