Implementation smell,Namespace,Class,File,Method,Description
Magic Number,SURFFeatureExample,Program,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\SURFFeature\SURFFeature.cs,Run,The following statement contains a magic number: matchedFeatures = Features2DTracker.VoteForUniqueness (matchedFeatures' 0.8);  
Magic Number,SURFFeatureExample,Program,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\SURFFeature\SURFFeature.cs,Run,The following statement contains a magic number: matchedFeatures = Features2DTracker.VoteForSizeAndOrientation (matchedFeatures' 1.5' 20);  
Magic Number,SURFFeatureExample,Program,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\SURFFeature\SURFFeature.cs,Run,The following statement contains a magic number: matchedFeatures = Features2DTracker.VoteForSizeAndOrientation (matchedFeatures' 1.5' 20);  
Magic Number,SURFFeatureExample,Program,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\SURFFeature\SURFFeature.cs,Run,The following statement contains a magic number: if (homography != null) {  	//draw a rectangle along the projected model  	Rectangle rect = modelImage.ROI;  	PointF[] pts = new PointF[] {  		new PointF (rect.Left' rect.Bottom)'  		new PointF (rect.Right' rect.Bottom)'  		new PointF (rect.Right' rect.Top)'  		new PointF (rect.Left' rect.Top)  	};  	homography.ProjectPoints (pts);  	for (int i = 0; i < pts.Length; i++)  		pts [i].Y += modelImage.Height;  	res.DrawPolyline (Array.ConvertAll<PointF' Point> (pts' Point.Round)' true' new Gray (255.0)' 5);  }  
Magic Number,SURFFeatureExample,Program,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\SURFFeature\SURFFeature.cs,Run,The following statement contains a magic number: if (homography != null) {  	//draw a rectangle along the projected model  	Rectangle rect = modelImage.ROI;  	PointF[] pts = new PointF[] {  		new PointF (rect.Left' rect.Bottom)'  		new PointF (rect.Right' rect.Bottom)'  		new PointF (rect.Right' rect.Top)'  		new PointF (rect.Left' rect.Top)  	};  	homography.ProjectPoints (pts);  	for (int i = 0; i < pts.Length; i++)  		pts [i].Y += modelImage.Height;  	res.DrawPolyline (Array.ConvertAll<PointF' Point> (pts' Point.Round)' true' new Gray (255.0)' 5);  }  
Magic Number,SURFFeatureExample,Program,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\SURFFeature\SURFFeature.cs,Run,The following statement contains a magic number: res.DrawPolyline (Array.ConvertAll<PointF' Point> (pts' Point.Round)' true' new Gray (255.0)' 5);  
Magic Number,SURFFeatureExample,Program,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\SURFFeature\SURFFeature.cs,Run,The following statement contains a magic number: res.DrawPolyline (Array.ConvertAll<PointF' Point> (pts' Point.Round)' true' new Gray (255.0)' 5);  
