Implementation smell,Namespace,Class,File,Method,Description
Long Statement,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The length of the statement  "	System.Drawing.Rectangle mouseStableArea = new System.Drawing.Rectangle ((int)(imageArea.Width * 0.4)' (int)(imageArea.Height * 0.4)' (int)(imageArea.Width * 0.2)' (int)(imageArea.Height * 0.2)); " is 195.
Long Statement,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The length of the statement  "		Point biggestFaceCenter = new Point (biggestFace.rect.X + biggestFace.rect.Width / 2' biggestFace.rect.Y + biggestFace.rect.Height / 2); " is 136.
Long Statement,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The length of the statement  "		frame.Draw (new Cross2DF (biggestFaceCenter' biggestFace.rect.Width * 0.1f' biggestFace.rect.Height * 0.1f)' new Bgr (0' 255' 0)' 1); " is 133.
Magic Number,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The following statement contains a magic number: frame.Draw (mouseStableArea' new Bgr (255' 0' 0)' 1);  
Magic Number,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The following statement contains a magic number: if (faces.Length > 0) {  	//if there is at least one face  	#region find the biggest face  	MCvAvgComp biggestFace = faces [0];  	for (int i = 1; i < faces.Length; i++) {  		if (faces [i].rect.Width * faces [i].rect.Height > biggestFace.rect.Width * biggestFace.rect.Height)  			biggestFace = faces [i];  	}  	#endregion  	//draw a yellow rectangle around the face  	frame.Draw (biggestFace.rect' new Bgr (255' 255' 0.0)' 1);  	Point biggestFaceCenter = new Point (biggestFace.rect.X + biggestFace.rect.Width / 2' biggestFace.rect.Y + biggestFace.rect.Height / 2);  	Point imageAreaCenter = new Point (imageArea.X + imageArea.Width / 2' imageArea.Y + imageArea.Height / 2);  	//draw a green cross at the center of the biggest face  	frame.Draw (new Cross2DF (biggestFaceCenter' biggestFace.rect.Width * 0.1f' biggestFace.rect.Height * 0.1f)' new Bgr (0' 255' 0)' 1);  	if (!mouseStableArea.Contains (biggestFaceCenter)) {  		//the point is far enough from the center to triger a movement  		//horizontal fraction is a value in [-0.5' 0.5] where  		//-0.5 refer to the far left and   		//0.5 refer to the far right  		double horizontalFraction = (double)(biggestFaceCenter.X - imageAreaCenter.X) / imageArea.Width;  		//do the same for vertical fraction  		double verticalFraction = (double)(biggestFaceCenter.Y - imageAreaCenter.Y) / imageArea.Height;  		Rectangle rect = System.Windows.Forms.Screen.PrimaryScreen.Bounds;  		int maxMouseSpeed = rect.Width / 20;  		System.Drawing.Point p;  		GetCursorPos (out p);  		p.X = Math.Min (Math.Max (0' p.X + (int)((maxMouseSpeed / 2) * horizontalFraction))' rect.Width);  		p.Y = Math.Min (Math.Max (0' p.Y + (int)((maxMouseSpeed / 2) * verticalFraction))' rect.Height);  		SetCursorPos (p.X' p.Y);  	}  }  
Magic Number,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The following statement contains a magic number: if (faces.Length > 0) {  	//if there is at least one face  	#region find the biggest face  	MCvAvgComp biggestFace = faces [0];  	for (int i = 1; i < faces.Length; i++) {  		if (faces [i].rect.Width * faces [i].rect.Height > biggestFace.rect.Width * biggestFace.rect.Height)  			biggestFace = faces [i];  	}  	#endregion  	//draw a yellow rectangle around the face  	frame.Draw (biggestFace.rect' new Bgr (255' 255' 0.0)' 1);  	Point biggestFaceCenter = new Point (biggestFace.rect.X + biggestFace.rect.Width / 2' biggestFace.rect.Y + biggestFace.rect.Height / 2);  	Point imageAreaCenter = new Point (imageArea.X + imageArea.Width / 2' imageArea.Y + imageArea.Height / 2);  	//draw a green cross at the center of the biggest face  	frame.Draw (new Cross2DF (biggestFaceCenter' biggestFace.rect.Width * 0.1f' biggestFace.rect.Height * 0.1f)' new Bgr (0' 255' 0)' 1);  	if (!mouseStableArea.Contains (biggestFaceCenter)) {  		//the point is far enough from the center to triger a movement  		//horizontal fraction is a value in [-0.5' 0.5] where  		//-0.5 refer to the far left and   		//0.5 refer to the far right  		double horizontalFraction = (double)(biggestFaceCenter.X - imageAreaCenter.X) / imageArea.Width;  		//do the same for vertical fraction  		double verticalFraction = (double)(biggestFaceCenter.Y - imageAreaCenter.Y) / imageArea.Height;  		Rectangle rect = System.Windows.Forms.Screen.PrimaryScreen.Bounds;  		int maxMouseSpeed = rect.Width / 20;  		System.Drawing.Point p;  		GetCursorPos (out p);  		p.X = Math.Min (Math.Max (0' p.X + (int)((maxMouseSpeed / 2) * horizontalFraction))' rect.Width);  		p.Y = Math.Min (Math.Max (0' p.Y + (int)((maxMouseSpeed / 2) * verticalFraction))' rect.Height);  		SetCursorPos (p.X' p.Y);  	}  }  
Magic Number,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The following statement contains a magic number: if (faces.Length > 0) {  	//if there is at least one face  	#region find the biggest face  	MCvAvgComp biggestFace = faces [0];  	for (int i = 1; i < faces.Length; i++) {  		if (faces [i].rect.Width * faces [i].rect.Height > biggestFace.rect.Width * biggestFace.rect.Height)  			biggestFace = faces [i];  	}  	#endregion  	//draw a yellow rectangle around the face  	frame.Draw (biggestFace.rect' new Bgr (255' 255' 0.0)' 1);  	Point biggestFaceCenter = new Point (biggestFace.rect.X + biggestFace.rect.Width / 2' biggestFace.rect.Y + biggestFace.rect.Height / 2);  	Point imageAreaCenter = new Point (imageArea.X + imageArea.Width / 2' imageArea.Y + imageArea.Height / 2);  	//draw a green cross at the center of the biggest face  	frame.Draw (new Cross2DF (biggestFaceCenter' biggestFace.rect.Width * 0.1f' biggestFace.rect.Height * 0.1f)' new Bgr (0' 255' 0)' 1);  	if (!mouseStableArea.Contains (biggestFaceCenter)) {  		//the point is far enough from the center to triger a movement  		//horizontal fraction is a value in [-0.5' 0.5] where  		//-0.5 refer to the far left and   		//0.5 refer to the far right  		double horizontalFraction = (double)(biggestFaceCenter.X - imageAreaCenter.X) / imageArea.Width;  		//do the same for vertical fraction  		double verticalFraction = (double)(biggestFaceCenter.Y - imageAreaCenter.Y) / imageArea.Height;  		Rectangle rect = System.Windows.Forms.Screen.PrimaryScreen.Bounds;  		int maxMouseSpeed = rect.Width / 20;  		System.Drawing.Point p;  		GetCursorPos (out p);  		p.X = Math.Min (Math.Max (0' p.X + (int)((maxMouseSpeed / 2) * horizontalFraction))' rect.Width);  		p.Y = Math.Min (Math.Max (0' p.Y + (int)((maxMouseSpeed / 2) * verticalFraction))' rect.Height);  		SetCursorPos (p.X' p.Y);  	}  }  
Magic Number,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The following statement contains a magic number: if (faces.Length > 0) {  	//if there is at least one face  	#region find the biggest face  	MCvAvgComp biggestFace = faces [0];  	for (int i = 1; i < faces.Length; i++) {  		if (faces [i].rect.Width * faces [i].rect.Height > biggestFace.rect.Width * biggestFace.rect.Height)  			biggestFace = faces [i];  	}  	#endregion  	//draw a yellow rectangle around the face  	frame.Draw (biggestFace.rect' new Bgr (255' 255' 0.0)' 1);  	Point biggestFaceCenter = new Point (biggestFace.rect.X + biggestFace.rect.Width / 2' biggestFace.rect.Y + biggestFace.rect.Height / 2);  	Point imageAreaCenter = new Point (imageArea.X + imageArea.Width / 2' imageArea.Y + imageArea.Height / 2);  	//draw a green cross at the center of the biggest face  	frame.Draw (new Cross2DF (biggestFaceCenter' biggestFace.rect.Width * 0.1f' biggestFace.rect.Height * 0.1f)' new Bgr (0' 255' 0)' 1);  	if (!mouseStableArea.Contains (biggestFaceCenter)) {  		//the point is far enough from the center to triger a movement  		//horizontal fraction is a value in [-0.5' 0.5] where  		//-0.5 refer to the far left and   		//0.5 refer to the far right  		double horizontalFraction = (double)(biggestFaceCenter.X - imageAreaCenter.X) / imageArea.Width;  		//do the same for vertical fraction  		double verticalFraction = (double)(biggestFaceCenter.Y - imageAreaCenter.Y) / imageArea.Height;  		Rectangle rect = System.Windows.Forms.Screen.PrimaryScreen.Bounds;  		int maxMouseSpeed = rect.Width / 20;  		System.Drawing.Point p;  		GetCursorPos (out p);  		p.X = Math.Min (Math.Max (0' p.X + (int)((maxMouseSpeed / 2) * horizontalFraction))' rect.Width);  		p.Y = Math.Min (Math.Max (0' p.Y + (int)((maxMouseSpeed / 2) * verticalFraction))' rect.Height);  		SetCursorPos (p.X' p.Y);  	}  }  
Magic Number,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The following statement contains a magic number: if (faces.Length > 0) {  	//if there is at least one face  	#region find the biggest face  	MCvAvgComp biggestFace = faces [0];  	for (int i = 1; i < faces.Length; i++) {  		if (faces [i].rect.Width * faces [i].rect.Height > biggestFace.rect.Width * biggestFace.rect.Height)  			biggestFace = faces [i];  	}  	#endregion  	//draw a yellow rectangle around the face  	frame.Draw (biggestFace.rect' new Bgr (255' 255' 0.0)' 1);  	Point biggestFaceCenter = new Point (biggestFace.rect.X + biggestFace.rect.Width / 2' biggestFace.rect.Y + biggestFace.rect.Height / 2);  	Point imageAreaCenter = new Point (imageArea.X + imageArea.Width / 2' imageArea.Y + imageArea.Height / 2);  	//draw a green cross at the center of the biggest face  	frame.Draw (new Cross2DF (biggestFaceCenter' biggestFace.rect.Width * 0.1f' biggestFace.rect.Height * 0.1f)' new Bgr (0' 255' 0)' 1);  	if (!mouseStableArea.Contains (biggestFaceCenter)) {  		//the point is far enough from the center to triger a movement  		//horizontal fraction is a value in [-0.5' 0.5] where  		//-0.5 refer to the far left and   		//0.5 refer to the far right  		double horizontalFraction = (double)(biggestFaceCenter.X - imageAreaCenter.X) / imageArea.Width;  		//do the same for vertical fraction  		double verticalFraction = (double)(biggestFaceCenter.Y - imageAreaCenter.Y) / imageArea.Height;  		Rectangle rect = System.Windows.Forms.Screen.PrimaryScreen.Bounds;  		int maxMouseSpeed = rect.Width / 20;  		System.Drawing.Point p;  		GetCursorPos (out p);  		p.X = Math.Min (Math.Max (0' p.X + (int)((maxMouseSpeed / 2) * horizontalFraction))' rect.Width);  		p.Y = Math.Min (Math.Max (0' p.Y + (int)((maxMouseSpeed / 2) * verticalFraction))' rect.Height);  		SetCursorPos (p.X' p.Y);  	}  }  
Magic Number,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The following statement contains a magic number: if (faces.Length > 0) {  	//if there is at least one face  	#region find the biggest face  	MCvAvgComp biggestFace = faces [0];  	for (int i = 1; i < faces.Length; i++) {  		if (faces [i].rect.Width * faces [i].rect.Height > biggestFace.rect.Width * biggestFace.rect.Height)  			biggestFace = faces [i];  	}  	#endregion  	//draw a yellow rectangle around the face  	frame.Draw (biggestFace.rect' new Bgr (255' 255' 0.0)' 1);  	Point biggestFaceCenter = new Point (biggestFace.rect.X + biggestFace.rect.Width / 2' biggestFace.rect.Y + biggestFace.rect.Height / 2);  	Point imageAreaCenter = new Point (imageArea.X + imageArea.Width / 2' imageArea.Y + imageArea.Height / 2);  	//draw a green cross at the center of the biggest face  	frame.Draw (new Cross2DF (biggestFaceCenter' biggestFace.rect.Width * 0.1f' biggestFace.rect.Height * 0.1f)' new Bgr (0' 255' 0)' 1);  	if (!mouseStableArea.Contains (biggestFaceCenter)) {  		//the point is far enough from the center to triger a movement  		//horizontal fraction is a value in [-0.5' 0.5] where  		//-0.5 refer to the far left and   		//0.5 refer to the far right  		double horizontalFraction = (double)(biggestFaceCenter.X - imageAreaCenter.X) / imageArea.Width;  		//do the same for vertical fraction  		double verticalFraction = (double)(biggestFaceCenter.Y - imageAreaCenter.Y) / imageArea.Height;  		Rectangle rect = System.Windows.Forms.Screen.PrimaryScreen.Bounds;  		int maxMouseSpeed = rect.Width / 20;  		System.Drawing.Point p;  		GetCursorPos (out p);  		p.X = Math.Min (Math.Max (0' p.X + (int)((maxMouseSpeed / 2) * horizontalFraction))' rect.Width);  		p.Y = Math.Min (Math.Max (0' p.Y + (int)((maxMouseSpeed / 2) * verticalFraction))' rect.Height);  		SetCursorPos (p.X' p.Y);  	}  }  
Magic Number,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The following statement contains a magic number: if (faces.Length > 0) {  	//if there is at least one face  	#region find the biggest face  	MCvAvgComp biggestFace = faces [0];  	for (int i = 1; i < faces.Length; i++) {  		if (faces [i].rect.Width * faces [i].rect.Height > biggestFace.rect.Width * biggestFace.rect.Height)  			biggestFace = faces [i];  	}  	#endregion  	//draw a yellow rectangle around the face  	frame.Draw (biggestFace.rect' new Bgr (255' 255' 0.0)' 1);  	Point biggestFaceCenter = new Point (biggestFace.rect.X + biggestFace.rect.Width / 2' biggestFace.rect.Y + biggestFace.rect.Height / 2);  	Point imageAreaCenter = new Point (imageArea.X + imageArea.Width / 2' imageArea.Y + imageArea.Height / 2);  	//draw a green cross at the center of the biggest face  	frame.Draw (new Cross2DF (biggestFaceCenter' biggestFace.rect.Width * 0.1f' biggestFace.rect.Height * 0.1f)' new Bgr (0' 255' 0)' 1);  	if (!mouseStableArea.Contains (biggestFaceCenter)) {  		//the point is far enough from the center to triger a movement  		//horizontal fraction is a value in [-0.5' 0.5] where  		//-0.5 refer to the far left and   		//0.5 refer to the far right  		double horizontalFraction = (double)(biggestFaceCenter.X - imageAreaCenter.X) / imageArea.Width;  		//do the same for vertical fraction  		double verticalFraction = (double)(biggestFaceCenter.Y - imageAreaCenter.Y) / imageArea.Height;  		Rectangle rect = System.Windows.Forms.Screen.PrimaryScreen.Bounds;  		int maxMouseSpeed = rect.Width / 20;  		System.Drawing.Point p;  		GetCursorPos (out p);  		p.X = Math.Min (Math.Max (0' p.X + (int)((maxMouseSpeed / 2) * horizontalFraction))' rect.Width);  		p.Y = Math.Min (Math.Max (0' p.Y + (int)((maxMouseSpeed / 2) * verticalFraction))' rect.Height);  		SetCursorPos (p.X' p.Y);  	}  }  
Magic Number,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The following statement contains a magic number: if (faces.Length > 0) {  	//if there is at least one face  	#region find the biggest face  	MCvAvgComp biggestFace = faces [0];  	for (int i = 1; i < faces.Length; i++) {  		if (faces [i].rect.Width * faces [i].rect.Height > biggestFace.rect.Width * biggestFace.rect.Height)  			biggestFace = faces [i];  	}  	#endregion  	//draw a yellow rectangle around the face  	frame.Draw (biggestFace.rect' new Bgr (255' 255' 0.0)' 1);  	Point biggestFaceCenter = new Point (biggestFace.rect.X + biggestFace.rect.Width / 2' biggestFace.rect.Y + biggestFace.rect.Height / 2);  	Point imageAreaCenter = new Point (imageArea.X + imageArea.Width / 2' imageArea.Y + imageArea.Height / 2);  	//draw a green cross at the center of the biggest face  	frame.Draw (new Cross2DF (biggestFaceCenter' biggestFace.rect.Width * 0.1f' biggestFace.rect.Height * 0.1f)' new Bgr (0' 255' 0)' 1);  	if (!mouseStableArea.Contains (biggestFaceCenter)) {  		//the point is far enough from the center to triger a movement  		//horizontal fraction is a value in [-0.5' 0.5] where  		//-0.5 refer to the far left and   		//0.5 refer to the far right  		double horizontalFraction = (double)(biggestFaceCenter.X - imageAreaCenter.X) / imageArea.Width;  		//do the same for vertical fraction  		double verticalFraction = (double)(biggestFaceCenter.Y - imageAreaCenter.Y) / imageArea.Height;  		Rectangle rect = System.Windows.Forms.Screen.PrimaryScreen.Bounds;  		int maxMouseSpeed = rect.Width / 20;  		System.Drawing.Point p;  		GetCursorPos (out p);  		p.X = Math.Min (Math.Max (0' p.X + (int)((maxMouseSpeed / 2) * horizontalFraction))' rect.Width);  		p.Y = Math.Min (Math.Max (0' p.Y + (int)((maxMouseSpeed / 2) * verticalFraction))' rect.Height);  		SetCursorPos (p.X' p.Y);  	}  }  
Magic Number,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The following statement contains a magic number: if (faces.Length > 0) {  	//if there is at least one face  	#region find the biggest face  	MCvAvgComp biggestFace = faces [0];  	for (int i = 1; i < faces.Length; i++) {  		if (faces [i].rect.Width * faces [i].rect.Height > biggestFace.rect.Width * biggestFace.rect.Height)  			biggestFace = faces [i];  	}  	#endregion  	//draw a yellow rectangle around the face  	frame.Draw (biggestFace.rect' new Bgr (255' 255' 0.0)' 1);  	Point biggestFaceCenter = new Point (biggestFace.rect.X + biggestFace.rect.Width / 2' biggestFace.rect.Y + biggestFace.rect.Height / 2);  	Point imageAreaCenter = new Point (imageArea.X + imageArea.Width / 2' imageArea.Y + imageArea.Height / 2);  	//draw a green cross at the center of the biggest face  	frame.Draw (new Cross2DF (biggestFaceCenter' biggestFace.rect.Width * 0.1f' biggestFace.rect.Height * 0.1f)' new Bgr (0' 255' 0)' 1);  	if (!mouseStableArea.Contains (biggestFaceCenter)) {  		//the point is far enough from the center to triger a movement  		//horizontal fraction is a value in [-0.5' 0.5] where  		//-0.5 refer to the far left and   		//0.5 refer to the far right  		double horizontalFraction = (double)(biggestFaceCenter.X - imageAreaCenter.X) / imageArea.Width;  		//do the same for vertical fraction  		double verticalFraction = (double)(biggestFaceCenter.Y - imageAreaCenter.Y) / imageArea.Height;  		Rectangle rect = System.Windows.Forms.Screen.PrimaryScreen.Bounds;  		int maxMouseSpeed = rect.Width / 20;  		System.Drawing.Point p;  		GetCursorPos (out p);  		p.X = Math.Min (Math.Max (0' p.X + (int)((maxMouseSpeed / 2) * horizontalFraction))' rect.Width);  		p.Y = Math.Min (Math.Max (0' p.Y + (int)((maxMouseSpeed / 2) * verticalFraction))' rect.Height);  		SetCursorPos (p.X' p.Y);  	}  }  
Magic Number,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The following statement contains a magic number: if (faces.Length > 0) {  	//if there is at least one face  	#region find the biggest face  	MCvAvgComp biggestFace = faces [0];  	for (int i = 1; i < faces.Length; i++) {  		if (faces [i].rect.Width * faces [i].rect.Height > biggestFace.rect.Width * biggestFace.rect.Height)  			biggestFace = faces [i];  	}  	#endregion  	//draw a yellow rectangle around the face  	frame.Draw (biggestFace.rect' new Bgr (255' 255' 0.0)' 1);  	Point biggestFaceCenter = new Point (biggestFace.rect.X + biggestFace.rect.Width / 2' biggestFace.rect.Y + biggestFace.rect.Height / 2);  	Point imageAreaCenter = new Point (imageArea.X + imageArea.Width / 2' imageArea.Y + imageArea.Height / 2);  	//draw a green cross at the center of the biggest face  	frame.Draw (new Cross2DF (biggestFaceCenter' biggestFace.rect.Width * 0.1f' biggestFace.rect.Height * 0.1f)' new Bgr (0' 255' 0)' 1);  	if (!mouseStableArea.Contains (biggestFaceCenter)) {  		//the point is far enough from the center to triger a movement  		//horizontal fraction is a value in [-0.5' 0.5] where  		//-0.5 refer to the far left and   		//0.5 refer to the far right  		double horizontalFraction = (double)(biggestFaceCenter.X - imageAreaCenter.X) / imageArea.Width;  		//do the same for vertical fraction  		double verticalFraction = (double)(biggestFaceCenter.Y - imageAreaCenter.Y) / imageArea.Height;  		Rectangle rect = System.Windows.Forms.Screen.PrimaryScreen.Bounds;  		int maxMouseSpeed = rect.Width / 20;  		System.Drawing.Point p;  		GetCursorPos (out p);  		p.X = Math.Min (Math.Max (0' p.X + (int)((maxMouseSpeed / 2) * horizontalFraction))' rect.Width);  		p.Y = Math.Min (Math.Max (0' p.Y + (int)((maxMouseSpeed / 2) * verticalFraction))' rect.Height);  		SetCursorPos (p.X' p.Y);  	}  }  
Magic Number,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The following statement contains a magic number: frame.Draw (biggestFace.rect' new Bgr (255' 255' 0.0)' 1);  
Magic Number,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The following statement contains a magic number: frame.Draw (biggestFace.rect' new Bgr (255' 255' 0.0)' 1);  
Magic Number,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The following statement contains a magic number: frame.Draw (new Cross2DF (biggestFaceCenter' biggestFace.rect.Width * 0.1f' biggestFace.rect.Height * 0.1f)' new Bgr (0' 255' 0)' 1);  
Magic Number,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The following statement contains a magic number: if (!mouseStableArea.Contains (biggestFaceCenter)) {  	//the point is far enough from the center to triger a movement  	//horizontal fraction is a value in [-0.5' 0.5] where  	//-0.5 refer to the far left and   	//0.5 refer to the far right  	double horizontalFraction = (double)(biggestFaceCenter.X - imageAreaCenter.X) / imageArea.Width;  	//do the same for vertical fraction  	double verticalFraction = (double)(biggestFaceCenter.Y - imageAreaCenter.Y) / imageArea.Height;  	Rectangle rect = System.Windows.Forms.Screen.PrimaryScreen.Bounds;  	int maxMouseSpeed = rect.Width / 20;  	System.Drawing.Point p;  	GetCursorPos (out p);  	p.X = Math.Min (Math.Max (0' p.X + (int)((maxMouseSpeed / 2) * horizontalFraction))' rect.Width);  	p.Y = Math.Min (Math.Max (0' p.Y + (int)((maxMouseSpeed / 2) * verticalFraction))' rect.Height);  	SetCursorPos (p.X' p.Y);  }  
Magic Number,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The following statement contains a magic number: if (!mouseStableArea.Contains (biggestFaceCenter)) {  	//the point is far enough from the center to triger a movement  	//horizontal fraction is a value in [-0.5' 0.5] where  	//-0.5 refer to the far left and   	//0.5 refer to the far right  	double horizontalFraction = (double)(biggestFaceCenter.X - imageAreaCenter.X) / imageArea.Width;  	//do the same for vertical fraction  	double verticalFraction = (double)(biggestFaceCenter.Y - imageAreaCenter.Y) / imageArea.Height;  	Rectangle rect = System.Windows.Forms.Screen.PrimaryScreen.Bounds;  	int maxMouseSpeed = rect.Width / 20;  	System.Drawing.Point p;  	GetCursorPos (out p);  	p.X = Math.Min (Math.Max (0' p.X + (int)((maxMouseSpeed / 2) * horizontalFraction))' rect.Width);  	p.Y = Math.Min (Math.Max (0' p.Y + (int)((maxMouseSpeed / 2) * verticalFraction))' rect.Height);  	SetCursorPos (p.X' p.Y);  }  
Magic Number,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The following statement contains a magic number: if (!mouseStableArea.Contains (biggestFaceCenter)) {  	//the point is far enough from the center to triger a movement  	//horizontal fraction is a value in [-0.5' 0.5] where  	//-0.5 refer to the far left and   	//0.5 refer to the far right  	double horizontalFraction = (double)(biggestFaceCenter.X - imageAreaCenter.X) / imageArea.Width;  	//do the same for vertical fraction  	double verticalFraction = (double)(biggestFaceCenter.Y - imageAreaCenter.Y) / imageArea.Height;  	Rectangle rect = System.Windows.Forms.Screen.PrimaryScreen.Bounds;  	int maxMouseSpeed = rect.Width / 20;  	System.Drawing.Point p;  	GetCursorPos (out p);  	p.X = Math.Min (Math.Max (0' p.X + (int)((maxMouseSpeed / 2) * horizontalFraction))' rect.Width);  	p.Y = Math.Min (Math.Max (0' p.Y + (int)((maxMouseSpeed / 2) * verticalFraction))' rect.Height);  	SetCursorPos (p.X' p.Y);  }  
Magic Number,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The following statement contains a magic number: p.X = Math.Min (Math.Max (0' p.X + (int)((maxMouseSpeed / 2) * horizontalFraction))' rect.Width);  
Magic Number,FacialMouseControl,Form1,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.Example\FacialMouseControl\Form1.cs,ProcessImage,The following statement contains a magic number: p.Y = Math.Min (Math.Max (0' p.Y + (int)((maxMouseSpeed / 2) * verticalFraction))' rect.Height);  
