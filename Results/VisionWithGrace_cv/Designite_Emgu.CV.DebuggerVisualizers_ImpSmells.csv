Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Emgu.CV.DebuggerVisualizers,MatNDVisualizer,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.DebuggerVisualizers\MatNDVisualizer.cs,Show,Cyclomatic complexity of the method is 9
Magic Number,Emgu.CV.DebuggerVisualizers,MatNDVisualizer,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.DebuggerVisualizers\MatNDVisualizer.cs,DebugVisualizer,The following statement contains a magic number: using (MatND<float> mat = new MatND<float> (3' 5' 1)) {  	mat.SetRandNormal (new MCvScalar ()' new MCvScalar (255));  	VisualizerDevelopmentHost myHost = new VisualizerDevelopmentHost (mat' typeof(MatNDVisualizer));  	myHost.ShowVisualizer ();  }  
Magic Number,Emgu.CV.DebuggerVisualizers,MatNDVisualizer,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.DebuggerVisualizers\MatNDVisualizer.cs,DebugVisualizer,The following statement contains a magic number: using (MatND<float> mat = new MatND<float> (3' 5' 1)) {  	mat.SetRandNormal (new MCvScalar ()' new MCvScalar (255));  	VisualizerDevelopmentHost myHost = new VisualizerDevelopmentHost (mat' typeof(MatNDVisualizer));  	myHost.ShowVisualizer ();  }  
Magic Number,Emgu.CV.DebuggerVisualizers,MatNDVisualizer,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.DebuggerVisualizers\MatNDVisualizer.cs,DebugVisualizer,The following statement contains a magic number: using (MatND<float> mat = new MatND<float> (3' 5' 1)) {  	mat.SetRandNormal (new MCvScalar ()' new MCvScalar (255));  	VisualizerDevelopmentHost myHost = new VisualizerDevelopmentHost (mat' typeof(MatNDVisualizer));  	myHost.ShowVisualizer ();  }  
Magic Number,Emgu.CV.DebuggerVisualizers,MatNDVisualizer,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.DebuggerVisualizers\MatNDVisualizer.cs,DebugVisualizer,The following statement contains a magic number: mat.SetRandNormal (new MCvScalar ()' new MCvScalar (255));  
Magic Number,Emgu.CV.DebuggerVisualizers,MatNDVisualizer,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.DebuggerVisualizers\MatNDVisualizer.cs,Show,The following statement contains a magic number: if (matND != null) {  	MCvMatND cvMatND = (MCvMatND)Marshal.PtrToStructure (matND.Ptr' typeof(MCvMatND));  	if (cvMatND.dims > 3 || (cvMatND.dims == 3 && cvMatND.dim [2].Size > 4)) {  		MessageBox.Show ("MatND of dimension > 3 is not supported for debugger visualizer");  		return;  	}  	UnmanagedObject matrix = null;  	int rows = cvMatND.dim [0].Size;  	int cols = cvMatND.dims >= 2 ? cvMatND.dim [1].Size : 1;  	int channels = cvMatND.dims >= 3 ? cvMatND.dim [2].Size : 1;  	if (matND is MatND<float>)  		matrix = new Matrix<float> (rows' cols' channels);  	else if (matND is MatND<int>)  		matrix = new Matrix<int> (rows' cols' channels);  	else if (matND is MatND<double>)  		matrix = new Matrix<double> (rows' cols' channels);  	if (matrix == null) {  		MessageBox.Show (String.Format ("{0} is not supported"' cvMatND.type.ToString ()));  		return;  	}  	CvInvoke.cvCopy (matND.Ptr' matrix.Ptr' IntPtr.Zero);  	using (MatrixViewer viewer = new MatrixViewer ()) {  		viewer.Matrix = matrix;  		windowService.ShowDialog (viewer);  	}  }  
Magic Number,Emgu.CV.DebuggerVisualizers,MatNDVisualizer,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.DebuggerVisualizers\MatNDVisualizer.cs,Show,The following statement contains a magic number: if (matND != null) {  	MCvMatND cvMatND = (MCvMatND)Marshal.PtrToStructure (matND.Ptr' typeof(MCvMatND));  	if (cvMatND.dims > 3 || (cvMatND.dims == 3 && cvMatND.dim [2].Size > 4)) {  		MessageBox.Show ("MatND of dimension > 3 is not supported for debugger visualizer");  		return;  	}  	UnmanagedObject matrix = null;  	int rows = cvMatND.dim [0].Size;  	int cols = cvMatND.dims >= 2 ? cvMatND.dim [1].Size : 1;  	int channels = cvMatND.dims >= 3 ? cvMatND.dim [2].Size : 1;  	if (matND is MatND<float>)  		matrix = new Matrix<float> (rows' cols' channels);  	else if (matND is MatND<int>)  		matrix = new Matrix<int> (rows' cols' channels);  	else if (matND is MatND<double>)  		matrix = new Matrix<double> (rows' cols' channels);  	if (matrix == null) {  		MessageBox.Show (String.Format ("{0} is not supported"' cvMatND.type.ToString ()));  		return;  	}  	CvInvoke.cvCopy (matND.Ptr' matrix.Ptr' IntPtr.Zero);  	using (MatrixViewer viewer = new MatrixViewer ()) {  		viewer.Matrix = matrix;  		windowService.ShowDialog (viewer);  	}  }  
Magic Number,Emgu.CV.DebuggerVisualizers,MatNDVisualizer,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.DebuggerVisualizers\MatNDVisualizer.cs,Show,The following statement contains a magic number: if (matND != null) {  	MCvMatND cvMatND = (MCvMatND)Marshal.PtrToStructure (matND.Ptr' typeof(MCvMatND));  	if (cvMatND.dims > 3 || (cvMatND.dims == 3 && cvMatND.dim [2].Size > 4)) {  		MessageBox.Show ("MatND of dimension > 3 is not supported for debugger visualizer");  		return;  	}  	UnmanagedObject matrix = null;  	int rows = cvMatND.dim [0].Size;  	int cols = cvMatND.dims >= 2 ? cvMatND.dim [1].Size : 1;  	int channels = cvMatND.dims >= 3 ? cvMatND.dim [2].Size : 1;  	if (matND is MatND<float>)  		matrix = new Matrix<float> (rows' cols' channels);  	else if (matND is MatND<int>)  		matrix = new Matrix<int> (rows' cols' channels);  	else if (matND is MatND<double>)  		matrix = new Matrix<double> (rows' cols' channels);  	if (matrix == null) {  		MessageBox.Show (String.Format ("{0} is not supported"' cvMatND.type.ToString ()));  		return;  	}  	CvInvoke.cvCopy (matND.Ptr' matrix.Ptr' IntPtr.Zero);  	using (MatrixViewer viewer = new MatrixViewer ()) {  		viewer.Matrix = matrix;  		windowService.ShowDialog (viewer);  	}  }  
Magic Number,Emgu.CV.DebuggerVisualizers,MatNDVisualizer,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.DebuggerVisualizers\MatNDVisualizer.cs,Show,The following statement contains a magic number: if (matND != null) {  	MCvMatND cvMatND = (MCvMatND)Marshal.PtrToStructure (matND.Ptr' typeof(MCvMatND));  	if (cvMatND.dims > 3 || (cvMatND.dims == 3 && cvMatND.dim [2].Size > 4)) {  		MessageBox.Show ("MatND of dimension > 3 is not supported for debugger visualizer");  		return;  	}  	UnmanagedObject matrix = null;  	int rows = cvMatND.dim [0].Size;  	int cols = cvMatND.dims >= 2 ? cvMatND.dim [1].Size : 1;  	int channels = cvMatND.dims >= 3 ? cvMatND.dim [2].Size : 1;  	if (matND is MatND<float>)  		matrix = new Matrix<float> (rows' cols' channels);  	else if (matND is MatND<int>)  		matrix = new Matrix<int> (rows' cols' channels);  	else if (matND is MatND<double>)  		matrix = new Matrix<double> (rows' cols' channels);  	if (matrix == null) {  		MessageBox.Show (String.Format ("{0} is not supported"' cvMatND.type.ToString ()));  		return;  	}  	CvInvoke.cvCopy (matND.Ptr' matrix.Ptr' IntPtr.Zero);  	using (MatrixViewer viewer = new MatrixViewer ()) {  		viewer.Matrix = matrix;  		windowService.ShowDialog (viewer);  	}  }  
Magic Number,Emgu.CV.DebuggerVisualizers,MatNDVisualizer,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.DebuggerVisualizers\MatNDVisualizer.cs,Show,The following statement contains a magic number: if (matND != null) {  	MCvMatND cvMatND = (MCvMatND)Marshal.PtrToStructure (matND.Ptr' typeof(MCvMatND));  	if (cvMatND.dims > 3 || (cvMatND.dims == 3 && cvMatND.dim [2].Size > 4)) {  		MessageBox.Show ("MatND of dimension > 3 is not supported for debugger visualizer");  		return;  	}  	UnmanagedObject matrix = null;  	int rows = cvMatND.dim [0].Size;  	int cols = cvMatND.dims >= 2 ? cvMatND.dim [1].Size : 1;  	int channels = cvMatND.dims >= 3 ? cvMatND.dim [2].Size : 1;  	if (matND is MatND<float>)  		matrix = new Matrix<float> (rows' cols' channels);  	else if (matND is MatND<int>)  		matrix = new Matrix<int> (rows' cols' channels);  	else if (matND is MatND<double>)  		matrix = new Matrix<double> (rows' cols' channels);  	if (matrix == null) {  		MessageBox.Show (String.Format ("{0} is not supported"' cvMatND.type.ToString ()));  		return;  	}  	CvInvoke.cvCopy (matND.Ptr' matrix.Ptr' IntPtr.Zero);  	using (MatrixViewer viewer = new MatrixViewer ()) {  		viewer.Matrix = matrix;  		windowService.ShowDialog (viewer);  	}  }  
Magic Number,Emgu.CV.DebuggerVisualizers,MatNDVisualizer,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.DebuggerVisualizers\MatNDVisualizer.cs,Show,The following statement contains a magic number: if (matND != null) {  	MCvMatND cvMatND = (MCvMatND)Marshal.PtrToStructure (matND.Ptr' typeof(MCvMatND));  	if (cvMatND.dims > 3 || (cvMatND.dims == 3 && cvMatND.dim [2].Size > 4)) {  		MessageBox.Show ("MatND of dimension > 3 is not supported for debugger visualizer");  		return;  	}  	UnmanagedObject matrix = null;  	int rows = cvMatND.dim [0].Size;  	int cols = cvMatND.dims >= 2 ? cvMatND.dim [1].Size : 1;  	int channels = cvMatND.dims >= 3 ? cvMatND.dim [2].Size : 1;  	if (matND is MatND<float>)  		matrix = new Matrix<float> (rows' cols' channels);  	else if (matND is MatND<int>)  		matrix = new Matrix<int> (rows' cols' channels);  	else if (matND is MatND<double>)  		matrix = new Matrix<double> (rows' cols' channels);  	if (matrix == null) {  		MessageBox.Show (String.Format ("{0} is not supported"' cvMatND.type.ToString ()));  		return;  	}  	CvInvoke.cvCopy (matND.Ptr' matrix.Ptr' IntPtr.Zero);  	using (MatrixViewer viewer = new MatrixViewer ()) {  		viewer.Matrix = matrix;  		windowService.ShowDialog (viewer);  	}  }  
Magic Number,Emgu.CV.DebuggerVisualizers,MatNDVisualizer,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.DebuggerVisualizers\MatNDVisualizer.cs,Show,The following statement contains a magic number: if (matND != null) {  	MCvMatND cvMatND = (MCvMatND)Marshal.PtrToStructure (matND.Ptr' typeof(MCvMatND));  	if (cvMatND.dims > 3 || (cvMatND.dims == 3 && cvMatND.dim [2].Size > 4)) {  		MessageBox.Show ("MatND of dimension > 3 is not supported for debugger visualizer");  		return;  	}  	UnmanagedObject matrix = null;  	int rows = cvMatND.dim [0].Size;  	int cols = cvMatND.dims >= 2 ? cvMatND.dim [1].Size : 1;  	int channels = cvMatND.dims >= 3 ? cvMatND.dim [2].Size : 1;  	if (matND is MatND<float>)  		matrix = new Matrix<float> (rows' cols' channels);  	else if (matND is MatND<int>)  		matrix = new Matrix<int> (rows' cols' channels);  	else if (matND is MatND<double>)  		matrix = new Matrix<double> (rows' cols' channels);  	if (matrix == null) {  		MessageBox.Show (String.Format ("{0} is not supported"' cvMatND.type.ToString ()));  		return;  	}  	CvInvoke.cvCopy (matND.Ptr' matrix.Ptr' IntPtr.Zero);  	using (MatrixViewer viewer = new MatrixViewer ()) {  		viewer.Matrix = matrix;  		windowService.ShowDialog (viewer);  	}  }  
Magic Number,Emgu.CV.DebuggerVisualizers,MatNDVisualizer,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.DebuggerVisualizers\MatNDVisualizer.cs,Show,The following statement contains a magic number: if (cvMatND.dims > 3 || (cvMatND.dims == 3 && cvMatND.dim [2].Size > 4)) {  	MessageBox.Show ("MatND of dimension > 3 is not supported for debugger visualizer");  	return;  }  
Magic Number,Emgu.CV.DebuggerVisualizers,MatNDVisualizer,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.DebuggerVisualizers\MatNDVisualizer.cs,Show,The following statement contains a magic number: if (cvMatND.dims > 3 || (cvMatND.dims == 3 && cvMatND.dim [2].Size > 4)) {  	MessageBox.Show ("MatND of dimension > 3 is not supported for debugger visualizer");  	return;  }  
Magic Number,Emgu.CV.DebuggerVisualizers,MatNDVisualizer,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.DebuggerVisualizers\MatNDVisualizer.cs,Show,The following statement contains a magic number: if (cvMatND.dims > 3 || (cvMatND.dims == 3 && cvMatND.dim [2].Size > 4)) {  	MessageBox.Show ("MatND of dimension > 3 is not supported for debugger visualizer");  	return;  }  
Magic Number,Emgu.CV.DebuggerVisualizers,MatNDVisualizer,C:\repos\VisionWithGrace_cv\libemgucv-2.2.0.1010-win64\Emgu.CV.DebuggerVisualizers\MatNDVisualizer.cs,Show,The following statement contains a magic number: if (cvMatND.dims > 3 || (cvMatND.dims == 3 && cvMatND.dim [2].Size > 4)) {  	MessageBox.Show ("MatND of dimension > 3 is not supported for debugger visualizer");  	return;  }  
