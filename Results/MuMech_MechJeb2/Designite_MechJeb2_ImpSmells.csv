Implementation smell,Namespace,Class,File,Method,Description
Long Method,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,GUI,The method has 134 lines of code.
Long Method,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,AssignDecoupledInStage,The method has 179 lines of code.
Long Method,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,XLAMB,The method has 119 lines of code.
Long Method,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,TLAMB,The method has 154 lines of code.
Long Method,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The method has 107 lines of code.
Long Method,MuMech,OperationAdvancedTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationAdvancedTransfer.cs,DoPorkchopGui,The method has 105 lines of code.
Long Method,MuMech,TimeSelector,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TimeSelector.cs,ComputeManeuverTime,The method has 104 lines of code.
Long Method,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,OnLoad,The method has 126 lines of code.
Long Method,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The method has 217 lines of code.
Long Method,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The method has 425 lines of code.
Long Method,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowGUI,The method has 112 lines of code.
Long Method,MuMech,MechJebModuleDebugArrows,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,OnUpdate,The method has 106 lines of code.
Long Method,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The method has 159 lines of code.
Long Method,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The method has 320 lines of code.
Long Method,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The method has 112 lines of code.
Long Method,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The method has 102 lines of code.
Long Method,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,InitLandingSitesList,The method has 107 lines of code.
Long Method,MuMech,MechJebModuleManeuverPlanner,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleManeuverPlanner.cs,WindowGUI,The method has 148 lines of code.
Long Method,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,SetupToolBarButtons,The method has 105 lines of code.
Long Method,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The method has 186 lines of code.
Long Method,MuMech,MechJebModuleRendezvousAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilot.cs,Drive,The method has 184 lines of code.
Long Method,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The method has 142 lines of code.
Long Method,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The method has 250 lines of code.
Long Method,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowGUI,The method has 100 lines of code.
Long Method,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,WindowGUI,The method has 151 lines of code.
Long Method,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,WindowGUI,The method has 259 lines of code.
Long Method,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,Engage,The method has 114 lines of code.
Long Method,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVector,The method has 109 lines of code.
Long Method,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,Drive,The method has 225 lines of code.
Long Method,MuMech,MechJebModuleWarpHelper,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpHelper.cs,WindowGUI,The method has 106 lines of code.
Long Method,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The method has 192 lines of code.
Long Method,MuMech,MechJebRouteRenderer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,OnPreRender,The method has 107 lines of code.
Long Method,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The method has 137 lines of code.
Long Method,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveAnnealed,The method has 108 lines of code.
Long Method,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The method has 112 lines of code.
Long Method,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,Optimize,The method has 108 lines of code.
Long Method,MuMech,RCSSolverThread,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,CheckVessel,The method has 120 lines of code.
Long Method,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,actionsAddWindowGui,The method has 188 lines of code.
Long Method,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,LoadConfig,The method has 154 lines of code.
Long Method,MuMech,MechJebModuleScriptCondition,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptCondition.cs,getValueToCompareString,The method has 115 lines of code.
Long Method,MuMech,MechJebModuleScriptCondition,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptCondition.cs,getValueToCompare,The method has 116 lines of code.
Long Method,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The method has 110 lines of code.
Long Method,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,VesselState,The method has 159 lines of code.
Long Method,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The method has 101 lines of code.
Long Method,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,AnalyzeParts,The method has 227 lines of code.
Long Method,MuMech,EngineInfo,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,AddNewEngine,The method has 100 lines of code.
Complex Method,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,GUI,Cyclomatic complexity of the method is 9
Complex Method,MuMech.AttitudeControllers,PIDLoop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\PIDLoop.cs,Update,Cyclomatic complexity of the method is 12
Complex Method,MuMech,ComputerModule,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ComputerModule.cs,UnlockCheck,Cyclomatic complexity of the method is 11
Complex Method,MuMech,DisplayModule,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\DisplayModule.cs,OnLoad,Cyclomatic complexity of the method is 10
Complex Method,MuMech,SimulatedParachute,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedParachute.cs,Simulate,Cyclomatic complexity of the method is 14
Complex Method,MuMech,FuelFlowSimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,AllowedToStage,Cyclomatic complexity of the method is 14
Complex Method,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,Init,Cyclomatic complexity of the method is 11
Complex Method,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,AssignDecoupledInStage,Cyclomatic complexity of the method is 26
Complex Method,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,SetConsumptionRates,Cyclomatic complexity of the method is 12
Complex Method,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,CanDrawNeededResources,Cyclomatic complexity of the method is 9
Complex Method,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,AssignFuelDrainRateStagePriorityFlow,Cyclomatic complexity of the method is 8
Complex Method,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,Solve,Cyclomatic complexity of the method is 8
Complex Method,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,XLAMB,Cyclomatic complexity of the method is 18
Complex Method,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,TLAMB,Cyclomatic complexity of the method is 22
Complex Method,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,Test,Cyclomatic complexity of the method is 12
Complex Method,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,TimeToDHMS,Cyclomatic complexity of the method is 8
Complex Method,MuMech,ComboBox,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,Box,Cyclomatic complexity of the method is 8
Complex Method,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,Cyclomatic complexity of the method is 8
Complex Method,MuMech,OperationAdvancedTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationAdvancedTransfer.cs,CheckPreconditions,Cyclomatic complexity of the method is 9
Complex Method,MuMech,OperationAdvancedTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationAdvancedTransfer.cs,DoPorkchopGui,Cyclomatic complexity of the method is 19
Complex Method,MuMech,OperationInterplanetaryTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationInterplanetaryTransfer.cs,MakeNodeImpl,Cyclomatic complexity of the method is 8
Complex Method,MuMech,OperationPlane,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationPlane.cs,MakeNodeImpl,Cyclomatic complexity of the method is 13
Complex Method,MuMech,OperationGeneric,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationTransfer.cs,MakeNodeImpl,Cyclomatic complexity of the method is 13
Complex Method,MuMech,PlotArea,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\PlotArea.cs,DoGUI,Cyclomatic complexity of the method is 12
Complex Method,MuMech,TimeSelector,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TimeSelector.cs,TimeSelector,Cyclomatic complexity of the method is 15
Complex Method,MuMech,TimeSelector,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TimeSelector.cs,ComputeManeuverTime,Cyclomatic complexity of the method is 19
Complex Method,MuMech,MechJebAR202,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebAR202.cs,InitializeLights,Cyclomatic complexity of the method is 8
Complex Method,MuMech,MechJebAR202,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebAR202.cs,HandleLights,Cyclomatic complexity of the method is 16
Complex Method,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,FixedUpdate,Cyclomatic complexity of the method is 9
Complex Method,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,Update,Cyclomatic complexity of the method is 12
Complex Method,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,LoadComputerModules,Cyclomatic complexity of the method is 10
Complex Method,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,OnLoad,Cyclomatic complexity of the method is 13
Complex Method,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,OnSave,Cyclomatic complexity of the method is 9
Complex Method,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,CheckFlightCtrlState,Cyclomatic complexity of the method is 8
Complex Method,MuMech,MechJebModuleAirplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneAutopilot.cs,Drive,Cyclomatic complexity of the method is 9
Complex Method,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,Cyclomatic complexity of the method is 46
Complex Method,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,attitudeTo,Cyclomatic complexity of the method is 8
Complex Method,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,Cyclomatic complexity of the method is 73
Complex Method,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,attitudeGetReferenceRotation,Cyclomatic complexity of the method is 13
Complex Method,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,SetFlightCtrlState,Cyclomatic complexity of the method is 17
Complex Method,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,OnLoad,Cyclomatic complexity of the method is 16
Complex Method,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,RegisterInfoItems,Cyclomatic complexity of the method is 8
Complex Method,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowGUI,Cyclomatic complexity of the method is 20
Complex Method,MuMech,ValueInfoItem,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,GetStringValue,Cyclomatic complexity of the method is 15
Complex Method,MuMech,MechJebModuleDebugArrows,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,OnUpdate,Cyclomatic complexity of the method is 14
Complex Method,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,Cyclomatic complexity of the method is 13
Complex Method,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,Drive,Cyclomatic complexity of the method is 19
Complex Method,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,OnFixedUpdate,Cyclomatic complexity of the method is 21
Complex Method,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,InitDocking,Cyclomatic complexity of the method is 8
Complex Method,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowGUI,Cyclomatic complexity of the method is 17
Complex Method,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,Cyclomatic complexity of the method is 69
Complex Method,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,UpdateScale,Cyclomatic complexity of the method is 8
Complex Method,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,heckbertNiceNum,Cyclomatic complexity of the method is 8
Complex Method,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,Cyclomatic complexity of the method is 24
Complex Method,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,CurrentBiome,Cyclomatic complexity of the method is 9
Complex Method,MuMech,ParachutePlan,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,AddResult,Cyclomatic complexity of the method is 12
Complex Method,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,Cyclomatic complexity of the method is 18
Complex Method,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,InitLandingSitesList,Cyclomatic complexity of the method is 16
Complex Method,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,CheckForResult,Cyclomatic complexity of the method is 8
Complex Method,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,MaintainAerobrakeNode,Cyclomatic complexity of the method is 9
Complex Method,MuMech,MechJebModuleManeuverPlanner,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleManeuverPlanner.cs,WindowGUI,Cyclomatic complexity of the method is 28
Complex Method,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,MenuPosition,Cyclomatic complexity of the method is 9
Complex Method,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,SetupToolBarButtons,Cyclomatic complexity of the method is 8
Complex Method,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,ClearButtons,Cyclomatic complexity of the method is 8
Complex Method,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,DrawGUI,Cyclomatic complexity of the method is 10
Complex Method,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,Cyclomatic complexity of the method is 45
Complex Method,MuMech,MechJebModuleNodeExecutor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeExecutor.cs,OnFixedUpdate,Cyclomatic complexity of the method is 15
Complex Method,MuMech,MechJebModuleNodeExecutor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeExecutor.cs,BurnTime,Cyclomatic complexity of the method is 8
Complex Method,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,OnFixedUpdate,Cyclomatic complexity of the method is 14
Complex Method,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,converge,Cyclomatic complexity of the method is 9
Complex Method,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,handle_throttle,Cyclomatic complexity of the method is 13
Complex Method,MuMech,MechJebModuleRCSBalancerWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSBalancerWindow.cs,WindowGUI,Cyclomatic complexity of the method is 8
Complex Method,MuMech,MechJebModuleRCSController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSController.cs,Drive,Cyclomatic complexity of the method is 12
Complex Method,MuMech,MechJebModuleRendezvousAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilot.cs,Drive,Cyclomatic complexity of the method is 26
Complex Method,MuMech,MechJebModuleRendezvousAutopilotWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilotWindow.cs,WindowGUI,Cyclomatic complexity of the method is 10
Complex Method,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,Cyclomatic complexity of the method is 21
Complex Method,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,Cyclomatic complexity of the method is 38
Complex Method,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,OnUpdate,Cyclomatic complexity of the method is 8
Complex Method,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowGUI,Cyclomatic complexity of the method is 19
Complex Method,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,OnStart,Cyclomatic complexity of the method is 12
Complex Method,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,WindowGUI,Cyclomatic complexity of the method is 27
Complex Method,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,OnFixedUpdate,Cyclomatic complexity of the method is 10
Complex Method,MuMech,MechJebModuleSettings,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSettings.cs,WindowGUI,Cyclomatic complexity of the method is 10
Complex Method,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,WindowGUI,Cyclomatic complexity of the method is 42
Complex Method,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,Engage,Cyclomatic complexity of the method is 26
Complex Method,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,AutolandApproachStateToHumanReadableDescription,Cyclomatic complexity of the method is 8
Complex Method,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,Drive,Cyclomatic complexity of the method is 10
Complex Method,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVector,Cyclomatic complexity of the method is 19
Complex Method,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,Cyclomatic complexity of the method is 11
Complex Method,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,OnUpdate,Cyclomatic complexity of the method is 15
Complex Method,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,HasActiveOrIdleEngineOrTankDescendant,Cyclomatic complexity of the method is 10
Complex Method,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,HasDeactivatedEngineOrTankDescendant,Cyclomatic complexity of the method is 10
Complex Method,MuMech,MechJebModuleTargetController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTargetController.cs,OnFixedUpdate,Cyclomatic complexity of the method is 9
Complex Method,MuMech,MechJebModuleTargetController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTargetController.cs,DrawMapViewTarget,Cyclomatic complexity of the method is 8
Complex Method,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,Drive,Cyclomatic complexity of the method is 45
Complex Method,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,OptimizeIntakes,Cyclomatic complexity of the method is 12
Complex Method,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,ComputeDifferentialThrottle,Cyclomatic complexity of the method is 9
Complex Method,MuMech,MechJebModuleThrustWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustWindow.cs,WindowGUI,Cyclomatic complexity of the method is 9
Complex Method,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,WindowGUI,Cyclomatic complexity of the method is 10
Complex Method,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,recursiveDecouple,Cyclomatic complexity of the method is 8
Complex Method,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,Drive,Cyclomatic complexity of the method is 10
Complex Method,MuMech,MechJebModuleWarpController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpController.cs,WarpToUT,Cyclomatic complexity of the method is 10
Complex Method,MuMech,MechJebModuleWarpHelper,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpHelper.cs,WindowGUI,Cyclomatic complexity of the method is 23
Complex Method,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,ParseCoord,Cyclomatic complexity of the method is 13
Complex Method,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,Cyclomatic complexity of the method is 33
Complex Method,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageRoutes,Cyclomatic complexity of the method is 13
Complex Method,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,Cyclomatic complexity of the method is 18
Complex Method,MuMech,MechJebRouteRenderer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,OnPreRender,Cyclomatic complexity of the method is 28
Complex Method,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,Cyclomatic complexity of the method is 18
Complex Method,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,DrawLine,Cyclomatic complexity of the method is 8
Complex Method,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,Cyclomatic complexity of the method is 17
Complex Method,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveAnnealed,Cyclomatic complexity of the method is 9
Complex Method,MuMech,PartExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PartExtensions.cs,IsUnfiredDecoupler,Cyclomatic complexity of the method is 13
Complex Method,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,Cyclomatic complexity of the method is 8
Complex Method,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,multipleIntegrate,Cyclomatic complexity of the method is 13
Complex Method,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,Cyclomatic complexity of the method is 15
Complex Method,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,runOptimizer,Cyclomatic complexity of the method is 10
Complex Method,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,Optimize,Cyclomatic complexity of the method is 15
Complex Method,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,Bootstrap,Cyclomatic complexity of the method is 14
Complex Method,MuMech,RCSSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,run,Cyclomatic complexity of the method is 11
Complex Method,MuMech,RCSSolverThread,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,CheckVessel,Cyclomatic complexity of the method is 15
Complex Method,MuMech,MechJebModuleScriptActionActionGroup,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionActionGroup.cs,activateAction,Cyclomatic complexity of the method is 19
Complex Method,MuMech,MechJebModuleScriptActionCrewTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionCrewTransfer.cs,WindowGUI,Cyclomatic complexity of the method is 10
Complex Method,MuMech,MechJebModuleScriptActionIRSequencer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionIRSequencer.cs,WindowGUI,Cyclomatic complexity of the method is 11
Complex Method,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postLoad,Cyclomatic complexity of the method is 15
Complex Method,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postSave,Cyclomatic complexity of the method is 13
Complex Method,MuMech,MechJebModuleScriptActionParallel,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionParallel.cs,WindowGUI,Cyclomatic complexity of the method is 13
Complex Method,MuMech,MechJebModuleScriptActionRCS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionRCS.cs,activateAction,Cyclomatic complexity of the method is 10
Complex Method,MuMech,MechJebModuleScriptActionRendezvous,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionRendezvous.cs,activateAction,Cyclomatic complexity of the method is 9
Complex Method,MuMech,MechJebModuleScriptActionTargetDock,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionTargetDock.cs,activateAction,Cyclomatic complexity of the method is 8
Complex Method,MuMech,MechJebModuleScriptActionTargetDock,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionTargetDock.cs,WindowGUI,Cyclomatic complexity of the method is 10
Complex Method,MuMech,MechJebModuleScriptActionWarp,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionWarp.cs,activateAction,Cyclomatic complexity of the method is 16
Complex Method,MuMech,MechJebModuleScriptActionWarp,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionWarp.cs,WindowGUI,Cyclomatic complexity of the method is 9
Complex Method,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,actionsAddWindowGui,Cyclomatic complexity of the method is 45
Complex Method,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,LoadConfig,Cyclomatic complexity of the method is 37
Complex Method,MuMech,MechJebModuleScriptCondition,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptCondition.cs,checkCondition,Cyclomatic complexity of the method is 12
Complex Method,MuMech,MechJebModuleScriptCondition,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptCondition.cs,getValueToCompareString,Cyclomatic complexity of the method is 29
Complex Method,MuMech,MechJebModuleScriptCondition,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptCondition.cs,getValueToCompare,Cyclomatic complexity of the method is 29
Complex Method,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,Cyclomatic complexity of the method is 14
Complex Method,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,VesselState,Cyclomatic complexity of the method is 16
Complex Method,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateRCSThrustAndTorque,Cyclomatic complexity of the method is 16
Complex Method,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,AnalyzeParts,Cyclomatic complexity of the method is 31
Complex Method,MuMech,EngineInfo,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,CheckUllageStatus,Cyclomatic complexity of the method is 12
Complex Method,MuMech,EngineInfo,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,AddNewEngine,Cyclomatic complexity of the method is 13
Complex Method,Landing,CoastToDeceleration,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CoastToDeceleration.cs,OnFixedUpdate,Cyclomatic complexity of the method is 16
Complex Method,Landing,CourseCorrection,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CourseCorrection.cs,Drive,Cyclomatic complexity of the method is 12
Complex Method,Landing,DecelerationBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DecelerationBurn.cs,OnFixedUpdate,Cyclomatic complexity of the method is 8
Complex Method,Landing,LowDeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\LowDeorbitBurn.cs,OnFixedUpdate,Cyclomatic complexity of the method is 15
Long Parameter List,MuMech.AttitudeControllers,PIDLoop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\PIDLoop.cs,PIDLoop,The method has 6 parameters. Parameters: kp' ki' kd' maxoutput' minoutput' extraUnwind
Long Parameter List,MuMech,SimulatedParachute,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedParachute.cs,SimulateAndRollback,The method has 7 parameters. Parameters: altATGL' altASL' endASL' pressure' shockTemp' time' semiDeployMultiplier
Long Parameter List,MuMech,SimulatedParachute,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedParachute.cs,Simulate,The method has 7 parameters. Parameters: altATGL' altASL' endASL' pressure' shockTemp' time' semiDeployMultiplier
Long Parameter List,MuMech,SimulatedPart,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedPart.cs,SimulateAndRollback,The method has 7 parameters. Parameters: altATGL' altASL' endASL' pressure' shockTemp' time' semiDeployMultiplier
Long Parameter List,MuMech,SimulatedPart,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedPart.cs,Simulate,The method has 7 parameters. Parameters: altATGL' altASL' endASL' pressure' shockTemp' time' semiDeployMultiplier
Long Parameter List,MuMech,SimulatedVessel,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedVessel.cs,WillChutesDeploy,The method has 7 parameters. Parameters: altAGL' altASL' probableLandingSiteASL' pressure' shockTemp' t' parachuteSemiDeployMultiplier
Long Parameter List,MuMech,SimulatedVessel,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedVessel.cs,Simulate,The method has 7 parameters. Parameters: altATGL' altASL' endASL' pressure' shockTemp' time' semiDeployMultiplier
Long Parameter List,MuMech,FuelFlowSimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,SimulateTimeStep,The method has 6 parameters. Parameters: desiredDt' throttle' staticPressure' atmDensity' machNumber' dt
Long Parameter List,MuMech,GLUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GLUtils.cs,DrawMapViewGroundMarker,The method has 6 parameters. Parameters: body' latitude' longitude' c' rotation' radius
Long Parameter List,MuMech,GLUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GLUtils.cs,DrawGroundMarker,The method has 7 parameters. Parameters: body' latitude' longitude' c' map' rotation' radius
Long Parameter List,MuMech,GLUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GLUtils.cs,GLTriangle,The method has 5 parameters. Parameters: worldVertices1' worldVertices2' worldVertices3' c' map
Long Parameter List,MuMech,GLUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GLUtils.cs,DrawPath,The method has 5 parameters. Parameters: mainBody' points' c' map' dashed
Long Parameter List,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,Solve,The method has 9 parameters. Parameters: GM' R1' V1' R2' V2' tof' nrev' Vi' Vf
Long Parameter List,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,VLAMB,The method has 14 parameters. Parameters: GM' R1' R2' TH' TDELT' N' VR11' VT11' VR12' VT12' VR21' VT21' VR22' VT22
Long Parameter List,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,XLAMB,The method has 7 parameters. Parameters: M' Q' QSQFM1' TIN' N' X' XPL
Long Parameter List,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,TLAMB,The method has 9 parameters. Parameters: M' Q' QSQFM1' X' N' T' DT' D2T' D3T
Long Parameter List,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,SimpleTextBox,The method has 5 parameters. Parameters: leftLabel' ed' rightLabel' width' rightLabelStyle
Long Parameter List,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The method has 7 parameters. Parameters: R1' R2' dt' primary' shortway' V1' V2
Long Parameter List,MuMech,PlotArea,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\PlotArea.cs,PlotArea,The method has 6 parameters. Parameters: minx' maxx' miny' maxy' texture' callback
Long Parameter List,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,TransferCalculator,The method has 6 parameters. Parameters: o' target' min_departure_time' max_transfer_time' min_sampling_step' includeCaptureBurn
Long Parameter List,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,TransferCalculator,The method has 9 parameters. Parameters: o' target' min_departure_time' max_departure_time' min_transfer_time' max_transfer_time' width' height' includeCaptureBurn
Long Parameter List,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,IntersectConePlane,The method has 5 parameters. Parameters: cone_direction' cone_angle' plane_normal' intersect_1' intersect_2
Long Parameter List,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,OptimizeEjection,The method has 6 parameters. Parameters: UT_transfer' initial_orbit' target' target_body' UT_arrival' earliest_UT
Long Parameter List,MuMech,AllGraphTransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,AllGraphTransferCalculator,The method has 9 parameters. Parameters: o' target' min_departure_time' max_departure_time' min_transfer_time' max_transfer_time' width' height' includeCaptureBurn
Long Parameter List,MuMech,LaunchTiming,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,TimeToPlane,The method has 5 parameters. Parameters: LANDifference' launchBody' launchLatitude' launchLongitude' target
Long Parameter List,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,DrawnPath,The method has 5 parameters. Parameters: r' scaleX' scaleY' path' color
Long Parameter List,MuMech,MechJebModuleAscentPVG,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentPVG.cs,ConvertToVTRT,The method has 5 parameters. Parameters: sma' ecc' gamma' rt' vt
Long Parameter List,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,attitudeTo,The method has 6 parameters. Parameters: attitude' reference' controller' AxisCtrlPitch' AxisCtrlYaw' AxisCtrlRoll
Long Parameter List,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,attitudeTo,The method has 7 parameters. Parameters: heading' pitch' roll' controller' AxisCtrlPitch' AxisCtrlYaw' AxisCtrlRoll
Long Parameter List,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The method has 5 parameters. Parameters: height' bottomRadius' topRadius' offset' nbSides
Long Parameter List,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,getMiddlePoint,The method has 5 parameters. Parameters: p1' p2' vertices' cache' radius
Long Parameter List,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,DrawnPath,The method has 6 parameters. Parameters: r' type' minimum' scaleX' downRange' color
Long Parameter List,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,CreateFeatureButton,The method has 5 parameters. Parameters: module' nameId' tooltip' onClick' isActive
Long Parameter List,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,flightangle4constraint,The method has 7 parameters. Parameters: rT' vT' inc' gamma' sma' omitCoast' currentInc
Long Parameter List,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,flightangle5constraint,The method has 8 parameters. Parameters: rT' vT' inc' gamma' LAN' sma' omitCoast' currentInc
Long Parameter List,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,keplerian3constraint,The method has 5 parameters. Parameters: sma' ecc' inc' omitCoast' currentInc
Long Parameter List,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,keplerian4constraintArgPfree,The method has 6 parameters. Parameters: sma' ecc' inc' LAN' omitCoast' currentInc
Long Parameter List,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,keplerian4constraintLANfree,The method has 6 parameters. Parameters: sma' ecc' inc' ArgP' omitCoast' currentInc
Long Parameter List,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,keplerian5constraint,The method has 7 parameters. Parameters: sma' ecc' inc' LAN' ArgP' omitCoast' currentInc
Long Parameter List,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,flightangle3constraintMAXE,The method has 7 parameters. Parameters: rTm' gamma' inc' numStages' sma' omitCoast' currentInc
Long Parameter List,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,flightangle4constraintMAXE,The method has 8 parameters. Parameters: rTm' gamma' inc' LAN' numStages' sma' omitCoast' currentInc
Long Parameter List,MuMech,MechJebWaypoint,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,MechJebWaypoint,The method has 6 parameters. Parameters: Latitude' Longitude' Radius' Name' MinSpeed' MaxSpeed
Long Parameter List,MuMech,MechJebWaypoint,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,MechJebWaypoint,The method has 5 parameters. Parameters: Position' Radius' Name' MinSpeed' MaxSpeed
Long Parameter List,MuMech,MechJebWaypoint,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,MechJebWaypoint,The method has 5 parameters. Parameters: Target' Radius' Name' MinSpeed' MaxSpeed
Long Parameter List,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,AdvanceAnimationTo,The method has 5 parameters. Parameters: anim' clip' to' dt' last
Long Parameter List,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,DrawLine,The method has 6 parameters. Parameters: tex' x1' y1' x2' y2' col
Long Parameter List,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,ODE,The method has 9 parameters. Parameters: y0' n' xtbl' eps' h' hmin' hmax' maxiter' allvals
Long Parameter List,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToInterceptAtTime,The method has 6 parameters. Parameters: o' UT' target' DT' offsetDistance' shortway
Long Parameter List,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToInterceptAtTime,The method has 7 parameters. Parameters: o' initialUT' target' DT' secondDV' offsetDistance' shortway
Long Parameter List,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToInterceptAtTime,The method has 9 parameters. Parameters: GM' pos' vel' tpos' tvel' DT' TT' secondDV' posigrade
Long Parameter List,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForCheapestCourseCorrection,The method has 6 parameters. Parameters: o' UT' target' targetBody' finalPeR' burnUT
Long Parameter List,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForCheapestCourseCorrection,The method has 5 parameters. Parameters: o' UT' target' caDistance' burnUT
Long Parameter List,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryTransferEjection,The method has 5 parameters. Parameters: o' UT' target' syncPhaseAngle' burnUT
Long Parameter List,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveTransfer,The method has 18 parameters. Parameters: GM' pos' vel' tpos' tvel' DT' TT' burnDT' burnTT' burnCost' minDT' maxDT' maxTT' maxDTplusT' intercept_only' eps' maxIter' shortway
Long Parameter List,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveAnnealed,The method has 8 parameters. Parameters: o' target' UT' bestUT' minDT' maxDT' intercept_only' fixed_ut
Long Parameter List,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForHohmannLambertTransfer,The method has 5 parameters. Parameters: o' target' UT' burnUT' subtractProgradeDV
Long Parameter List,MuMech,PIDController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,PIDController,The method has 5 parameters. Parameters: Kp' Ki' Kd' max' min
Long Parameter List,MuMech,PIDControllerV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,PIDControllerV,The method has 5 parameters. Parameters: Kp' Ki' Kd' max' min
Long Parameter List,MuMech,PIDControllerV2,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,PIDControllerV2,The method has 5 parameters. Parameters: Kp' Ki' Kd' max' min
Long Parameter List,MuMech,PIDControllerV3,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,PIDControllerV3,The method has 5 parameters. Parameters: Kp' Ki' Kd' max' min
Long Parameter List,MuMech,PartExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PartExtensions.cs,EngineValuesAtConditions,The method has 9 parameters. Parameters: e' throttle' atmPressure' atmDensity' machNumber' thrust' isp' massFlowRate' cosLoss
Long Parameter List,MuMech,PartExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PartExtensions.cs,ISPAtConditions,The method has 5 parameters. Parameters: e' throttle' atmPressure' atmDensity' machNumber
Long Parameter List,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,PontryaginBase,The method has 7 parameters. Parameters: core' mu' r0' v0' pv0' pr0' dV
Long Parameter List,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,UpdatePosition,The method has 6 parameters. Parameters: r0' v0' lambda' lambdaDot' tgo' vgo
Long Parameter List,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,The method has 7 parameters. Parameters: y0' yf' n' t' dt' arcs' dV
Long Parameter List,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,The method has 8 parameters. Parameters: y0' sol' n' t' dt' arcs' count' dV
Long Parameter List,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,The method has 9 parameters. Parameters: y0' yf' sol' n' t' dt' arcs' count' dV
Long Parameter List,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,multipleIntegrate,The method has 6 parameters. Parameters: y0' yf' sol' arcs' count' initialize
Long Parameter List,MuMech,Arc,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,Arc,The method has 8 parameters. Parameters: p' t0' stage' done' coast_after_jettison' use_fixed_time' fixed_time' coast
Long Parameter List,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,PontryaginLaunch,The method has 6 parameters. Parameters: core' mu' r0' v0' pv0' dV
Long Parameter List,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle5constraint,The method has 5 parameters. Parameters: rTm' vTm' gammaT' incT' LANT
Long Parameter List,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The method has 5 parameters. Parameters: sma' ecc' inc' LAN' ArgP
Long Parameter List,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraintMAXE,The method has 5 parameters. Parameters: rTm' gammaT' incT' LANT' numStages
Long Parameter List,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,PontryaginNode,The method has 8 parameters. Parameters: core' mu' r0' v0' pv0' pr0' dV' bt
Long Parameter List,MuMech,RCSSolverThread,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,GetThrottles,The method has 5 parameters. Parameters: vessel' state' direction' throttles' thrustersOut
Long Parameter List,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,Borrow,The method has 14 parameters. Parameters: _initialOrbit' _UT' _vessel' _simcurves' _descentSpeedPolicy' _decelEndAltitudeASL' _maxThrustAccel' _parachuteSemiDeployMultiplier' _probableLandingSiteASL' _multiplierHasError' _dt' _min_dt' _maxOrbits' _noSKiptoFreefall
Long Parameter List,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,Init,The method has 14 parameters. Parameters: _initialOrbit' _UT' _vessel' _simcurves' _descentSpeedPolicy' _decelEndAltitudeASL' _maxThrustAccel' _parachuteSemiDeployMultiplier' _probableLandingSiteASL' _multiplierHasError' _dt' _min_dt' _maxOrbits' _noSKiptoFreefall
Long Parameter List,MuMech,ReflectionUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReflectionUtils.cs,getMethodByReflection,The method has 5 parameters. Parameters: assemblyString' className' methodName' flags' args
Long Parameter List,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The method has 6 parameters. Parameters: mu' tau' ri' vi' rf' vf
Long Parameter List,MuMech,EngineInfo,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,AddNewEngine,The method has 6 parameters. Parameters: e' gimbal' enginesWrappers' CoT' DoT' CoTScalar
Long Parameter List,MuMech,ResourceInfo,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,Borrow,The method has 5 parameters. Parameters: r' req' atMax' modules' vessel
Long Parameter List,MuMech,ResourceInfo,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,Init,The method has 5 parameters. Parameters: r' req' atMax' modules' vessel
Long Parameter List,MuMech,ResourceInfo,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,massProvided,The method has 7 parameters. Parameters: vesselSpeed' normVesselSpeed' atmDensity' staticPressure' mach' intake' intakeFwd
Long Parameter List,MuMech,EngineWrapper,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,EngineWrapper,The method has 5 parameters. Parameters: module' constantForce' maxVariableForce' constantTorque' maxVariableTorque
Long Identifier,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,,The length of the parameter resourceRequestRemainingThreshold is 33.
Long Identifier,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ComputeCourseCorrection,The length of the parameter bodyRotationAngleDuringDescent is 30.
Long Identifier,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,DeployParachutes,The length of the parameter ParachuteDeployAboveGroundAtLandingSite is 39.
Long Identifier,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,StartSimulation,The length of the parameter parachuteMultiplierForThisSimulation is 36.
Long Identifier,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,,The length of the parameter millisecondsBetweenErrorSimulations is 35.
Long Identifier,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,,The length of the parameter millisecondsBetweenSimulations is 30.
Long Identifier,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVerticalSpeed,The length of the parameter vectorToCorrectPointOnGlideslope is 32.
Long Identifier,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVector,The length of the parameter finalApproachVectorProjectedOnGroundPlane is 41.
Long Identifier,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVector,The length of the parameter initialApproachVectorProjectedOnGroundPlane is 43.
Long Identifier,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVector,The length of the parameter runwayDirectionVectorProjectedOnGroundPlane is 43.
Long Identifier,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVector,The length of the parameter lateralAngleOfFinalApproachVector is 33.
Long Identifier,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVector,The length of the parameter lateralAngleOfInitialApproachVector is 35.
Long Identifier,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,FindVectorToGlideslopeIntercept,The length of the parameter lateralAngleOfFinalApproachVector is 33.
Long Identifier,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,,The length of the parameter lateralDistanceFromTouchdownToFinalApproach is 43.
Long Identifier,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,,The length of the parameter angleToFinalApproachPointTurnDiameter is 37.
Long Identifier,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,,The length of the parameter secondsThresholdToNextWaypoint is 30.
Long Identifier,MuMech,MechJebModuleStageStats,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStageStats.cs,,The length of the parameter millisecondsBetweenSimulations is 30.
Long Identifier,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,,The length of the parameter limitToPreventUnstableIgnition is 30.
Long Identifier,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,,The length of the parameter differentialThrottleDemandedTorque is 34.
Long Identifier,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,,The length of the parameter userCommandingRotationSmoothed is 30.
Long Identifier,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,,The length of the parameter preventingUnstableIgnitionsMessage is 34.
Long Identifier,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,Borrow,The length of the parameter _parachuteSemiDeployMultiplier is 30.
Long Identifier,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,Init,The length of the parameter _parachuteSemiDeployMultiplier is 30.
Long Identifier,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,,The length of the parameter input_parachuteSemiDeployMultiplier is 35.
Long Identifier,MuMech,SimCurves,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,,The length of the parameter atmosphereTemperatureSunMultCurve is 33.
Long Identifier,MuMech,SimCurves,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,,The length of the parameter latitudeTemperatureSunMultCurve is 31.
Long Identifier,MuMech,Result,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,,The length of the parameter input_parachuteSemiDeployMultiplier is 35.
Long Identifier,MuMech,MechJebModuleScriptActionIRSequencer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionIRSequencer.cs,,The length of the parameter currentIrsequencerSequenceNames is 31.
Long Identifier,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,,The length of the parameter vesselStatePartModuleExtensions is 31.
Long Identifier,Landing,LowDeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\LowDeorbitBurn.cs,,The length of the parameter lowDeorbitEndOnLandingSiteNearer is 32.
Long Statement,MuMech.AttitudeControllers,BaseAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\BaseAttitudeController.cs,OnLoad,The length of the statement  "            if (global != null && global.HasNode(this.GetType().Name)) ConfigNode.LoadObjectFromConfig(this' global.GetNode(this.GetType().Name)' (int)Pass.Global); " is 152.
Long Statement,MuMech.AttitudeControllers,BaseAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\BaseAttitudeController.cs,OnLoad,The length of the statement  "            if (type != null && type.HasNode(this.GetType().Name)) ConfigNode.LoadObjectFromConfig(this' type.GetNode(this.GetType().Name)' (int)Pass.Type); " is 144.
Long Statement,MuMech.AttitudeControllers,BaseAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\BaseAttitudeController.cs,OnLoad,The length of the statement  "            if (local != null && local.HasNode(this.GetType().Name)) ConfigNode.LoadObjectFromConfig(this' local.GetNode(this.GetType().Name)' (int)Pass.Local); " is 148.
Long Statement,MuMech.AttitudeControllers,BaseAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\BaseAttitudeController.cs,OnSave,The length of the statement  "            if (global != null) ConfigNode.CreateConfigFromObject(this' (int)Pass.Global' null).CopyTo(global.AddNode(this.GetType().Name)); " is 128.
Long Statement,MuMech.AttitudeControllers,BaseAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\BaseAttitudeController.cs,OnSave,The length of the statement  "            if (type != null) ConfigNode.CreateConfigFromObject(this' (int)Pass.Type' null).CopyTo(type.AddNode(this.GetType().Name)); " is 122.
Long Statement,MuMech.AttitudeControllers,BaseAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\BaseAttitudeController.cs,OnSave,The length of the statement  "            if (local != null) ConfigNode.CreateConfigFromObject(this' (int)Pass.Local' null).CopyTo(local.AddNode(this.GetType().Name)); " is 125.
Long Statement,MuMech.AttitudeControllers,HybridController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\HybridController.cs,GUI,The length of the statement  "            useControlRange = GUILayout.Toggle(useControlRange' Localizer.Format("#MechJeb_HybridController_checkbox2")' GUILayout.ExpandWidth(false));//"RollControlRange" " is 159.
Long Statement,MuMech.AttitudeControllers,HybridController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\HybridController.cs,GUI,The length of the statement  "            GUILayout.Label("|" + ac.inertia.magnitude.ToString("F3") + "| " + MuUtils.PrettyPrint(ac.inertia)' GUILayout.ExpandWidth(false)); " is 130.
Long Statement,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,GUI,The length of the statement  "            bool newLowPassFilter = GUILayout.Toggle(lowPassFilter' Localizer.Format("#MechJeb_AttitudeController_checkbox2"));//" Low Pass Filter" " is 135.
Long Statement,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,GUI,The length of the statement  "            GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_AttitudeController_label11")' kWlimit' "%");//"Maximum Relative Angular Velocity" " is 131.
Long Statement,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,GUI,The length of the statement  "                GUILayout.Label(Localizer.Format("#MechJeb_AttitudeController_label18")' GUILayout.ExpandWidth(true));//"integral action." " is 122.
Long Statement,MuMech,CelestialBodyExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CelestialBodyExtensions.cs,DragLength,The length of the statement  "            double airDensity = FlightGlobals.getAtmDensity(FlightGlobals.getStaticPressure(pos' body)' FlightGlobals.getExternalTemperature(pos' body)); " is 141.
Long Statement,MuMech,CompatibilityChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CompatibilityChecker.cs,IsCompatible,The length of the statement  "                            "You are using a version of Firespitter that does not run properly on KSP 1.8+\nThis version may prevent the game from loading properly and may create problems for other mods"' " is 176.
Long Statement,MuMech,CompatibilityChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CompatibilityChecker.cs,Start,The length of the statement  "            Debug.Log(String.Format("[CompatibilityChecker] Running checker version {0} from '{1}'"' _version' Assembly.GetExecutingAssembly().GetName().Name)); " is 148.
Long Statement,MuMech,CompatibilityChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CompatibilityChecker.cs,Start,The length of the statement  "                        Debug.LogWarning(String.Format("[CompatibilityChecker] Exception while invoking IsCompatible() from '{0}':\n\n{1}"' m.DeclaringType.Assembly.GetName().Name' e)); " is 161.
Long Statement,MuMech,CompatibilityChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CompatibilityChecker.cs,Start,The length of the statement  "                        Debug.LogWarning(String.Format("[CompatibilityChecker] Exception while invoking IsUnityCompatible() from '{0}':\n\n{1}"' m.DeclaringType.Assembly.GetName().Name' e)); " is 166.
Long Statement,MuMech,CompatibilityChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CompatibilityChecker.cs,Start,The length of the statement  "                message += "WARNING: You are using 64-bit KSP on Windows. This version of KSP is known to cause crashes. It's highly recommended that you use either 32-bit KSP on Windows or switch to Linux."; " is 192.
Long Statement,MuMech,CompatibilityChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CompatibilityChecker.cs,Start,The length of the statement  "                message += ((message == String.Empty) ? "Some" : "\n\nAdditionally' some") + " installed mods may be incompatible with this version of Kerbal Space Program. Features may be broken or disabled. Please check for updates to the listed mods."; " is 239.
Long Statement,MuMech,CompatibilityChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CompatibilityChecker.cs,Start,The length of the statement  "                    message += String.Format("\n\nThese mods are incompatible with KSP {0}.{1}.{2}:\n\n"' Versioning.version_major' Versioning.version_minor' Versioning.Revision); " is 159.
Long Statement,MuMech,CompatibilityChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CompatibilityChecker.cs,Start,The length of the statement  "                PopupDialog.SpawnPopupDialog(new Vector2(0.5f' 0.5f)' new Vector2(0.5f' 0.5f)' "CompatibilityChecker"' "Incompatible Mods Detected"' message' "OK"' true' HighLogic.UISkin); " is 172.
Long Statement,MuMech,ComputerModule,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ComputerModule.cs,UnlockCheck,The length of the statement  "                    string[] parts = unlockParts.Split(new char[] { ' '' '''' ';'' '\t'' '\r'' '\n' }' StringSplitOptions.RemoveEmptyEntries); " is 122.
Long Statement,MuMech,ComputerModule,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ComputerModule.cs,UnlockCheck,The length of the statement  "                            if (PartLoader.LoadedPartsList.Count(a => a.name == p) > 0 && ResearchAndDevelopment.PartModelPurchased(PartLoader.LoadedPartsList.First(a => a.name == p))) " is 156.
Long Statement,MuMech,ComputerModule,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ComputerModule.cs,UnlockCheck,The length of the statement  "                    string[] techs = unlockTechs.Split(new char[] { ' '' '''' ';'' '\t'' '\r'' '\n' }' StringSplitOptions.RemoveEmptyEntries); " is 122.
Long Statement,MuMech,DisplayModule,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\DisplayModule.cs,WindowGUI,The length of the statement  "//            if (GUI.Button(new Rect(windowPos.width - 40' 2' 20' 16)' (locked ? "X" : "O"))) // lock button needs an icon' letters look crap " is 142.
Long Statement,MuMech,DisplayModule,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\DisplayModule.cs,DrawGUI,The length of the statement  "                //                var windows = core.GetComputerModules<DisplayModule>(); // on ice until there's a way to find which window is active' unless you like dragging other windows by snapping " is 186.
Long Statement,MuMech,SimulatedParachute,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedParachute.cs,Init,The length of the statement  "            // Work out when the chute was put into its current state based on the current drag as compared to the stowed' semi deployed and fully deployed drag " is 148.
Long Statement,MuMech,SimulatedParachute,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedParachute.cs,Init,The length of the statement  "                    // If the parachute is stowed then for some reason para.parachuteDrag does not reflect the stowed drag. set this up by hand.  " is 124.
Long Statement,MuMech,SimulatedParachute,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedParachute.cs,Init,The length of the statement  "                    // otherwise set the time since deployment to be a very large number to indcate that it has been in that state for a long time (although we do not know how long! " is 161.
Long Statement,MuMech,SimulatedParachute,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedParachute.cs,Init,The length of the statement  "            //Debug.Log("Parachute " + para.name + " parachuteDrag:" + this.parachuteDrag + " stowedDrag:" + para.stowedDrag + " semiDeployedDrag:" + para.semiDeployedDrag + " fullyDeployedDrag:" + para.fullyDeployedDrag + " part.maximum_drag:" + para.part.maximum_drag + " part.minimum_drag:" + para.part.minimum_drag + " semiDeploymentSpeed:" + para.semiDeploymentSpeed + " deploymentSpeed:" + para.deploymentSpeed + " deploymentState:" + para.deploymentState + " timeSinceDeployment:" + timeSinceDeployment); " is 499.
Long Statement,MuMech,SimulatedParachute,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedParachute.cs,Init,The length of the statement  "            //    Debug.Log("Parachute " + para.name + " parachuteDrag:" + this.parachuteDrag.ToString("F3") + " RealDrag:" + realDrag.ToString("F3") + " MinDrag:" + para.part.minimum_drag.ToString("F3") + " MaxDrag:" + para.part.maximum_drag.ToString("F3")); " is 247.
Long Statement,MuMech,SimulatedParachute,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedParachute.cs,SimulateAndRollback,The length of the statement  "                    if (altATGL < semiDeployMultiplier * para.deployAltitude && shockTemp * para.machHeatMult < para.chuteMaxTemp * para.safeMult) " is 126.
Long Statement,MuMech,SimulatedParachute,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedParachute.cs,Simulate,The length of the statement  "                    if (altATGL < semiDeployMultiplier * para.deployAltitude && shockTemp * para.machHeatMult < para.chuteMaxTemp * para.safeMult) " is 126.
Long Statement,MuMech,SimulatedParachute,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedParachute.cs,Simulate,The length of the statement  "            // Now that we have potentially changed states calculate the current drag or the parachute in whatever state (or transition to a state) that it is in. " is 150.
Long Statement,MuMech,SimulatedParachute,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedParachute.cs,Simulate,The length of the statement  "            if (deploying && (state == ModuleParachute.deploymentStates.SEMIDEPLOYED || state == ModuleParachute.deploymentStates.DEPLOYED)) " is 128.
Long Statement,MuMech,SimulatedPart,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedPart.cs,Init,The length of the statement  "            totalMass = rigidbody == null ? 0 : rigidbody.mass; // TODO : check if we need to use this or the one without the childMass " is 123.
Long Statement,MuMech,SimulatedPart,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedPart.cs,Init,The length of the statement  "            partToVessel = Quaternion.LookRotation(p.vessel.GetTransform().InverseTransformDirection(p.transform.forward)' p.vessel.GetTransform().InverseTransformDirection(p.transform.up)); " is 178.
Long Statement,MuMech,SimulatedPart,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedPart.cs,Drag,The length of the statement  "            //if (vesselVelocity.sqrMagnitude > 1 && dynamicPressurekPa - oPart.dynamicPressurekPa > oPart.dynamicPressurekPa * 0.1) " is 120.
Long Statement,MuMech,SimulatedPart,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedPart.cs,Drag,The length of the statement  "            //    msg += " dynamicPressurekPa " + dynamicPressurekPa.ToString("f4") + " vs " + oPart.dynamicPressurekPa.ToString("f4"); " is 123.
Long Statement,MuMech,SimulatedPart,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedPart.cs,Drag,The length of the statement  "            //    msg += "\n dragDir " + MuUtils.PrettyPrint(dragDir)             + " vs " + MuUtils.PrettyPrint(oPart.dragVectorDirLocal)    + " " + Vector3.Angle(dragDir' oPart.dragVectorDirLocal).ToString("F3") + "°"; " is 208.
Long Statement,MuMech,SimulatedPart,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedPart.cs,Drag,The length of the statement  "            //    //msg += "\n dragVel " + MuUtils.PrettyPrint(vesselVelocity.normalized) + " vs " + MuUtils.PrettyPrint(oPart.dragVector.normalized) + " " + Vector3.Angle(vesselVelocity.normalized' oPart.dragVector).ToString("F3") + "°"; " is 226.
Long Statement,MuMech,SimulatedPart,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedPart.cs,Drag,The length of the statement  "            //    msg += "\n Real° " + MuUtils.PrettyPrint(oPart.dragVectorDirLocal) + " " + Vector3.Angle(oPart.dragVectorDirLocal' Vector3.down).ToString("F3") + "°"; " is 156.
Long Statement,MuMech,SimulatedPart,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedPart.cs,Drag,The length of the statement  "            //    msg += "\n Sim°  " + MuUtils.PrettyPrint(dragDir)                  + " " + Vector3.Angle(dragDir' Vector3.down).ToString("F3") + "°"; " is 139.
Long Statement,MuMech,SimulatedPart,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedPart.cs,Drag,The length of the statement  "            //    msg += "\n toUp " + MuUtils.PrettyPrint(vesselToPart * Vector3.up) + Vector3.Angle(vesselToPart * Vector3.up' Vector3.up).ToString("F3") + "°"; " is 149.
Long Statement,MuMech,SimulatedPart,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedPart.cs,Drag,The length of the statement  "            //    msg += "\n Ups " + MuUtils.PrettyPrint(quatUp) + " vs " + MuUtils.PrettyPrint(shipUp) + " " + Vector3.Angle(quatUp' shipUp).ToString("F3") + "°"; " is 151.
Long Statement,MuMech,SimulatedPart,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedPart.cs,Lift,The length of the statement  "            //    msg += "\n liftDir " + MuUtils.PrettyPrint(liftVector) + " vs " + MuUtils.PrettyPrint(bodyLift) + " " + Vector3.Angle(liftVector' bodyLift).ToString("F3") + "°"; " is 167.
Long Statement,MuMech,SimulatedPart,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedPart.cs,Lift,The length of the statement  "            //    msg += "\n liftV " + MuUtils.PrettyPrint(liftV) + " vs " + MuUtils.PrettyPrint(localBodyL) + " " + Vector3.Angle(liftV' localBodyL).ToString("F3") + "°"; " is 159.
Long Statement,MuMech,SimulatedPart,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedPart.cs,Lift,The length of the statement  "            //    msg += "\n liftForce " + MuUtils.PrettyPrint(cubes.LiftForce) + " vs " + MuUtils.PrettyPrint(oPart.DragCubes.LiftForce) + " " + Vector3.Angle(cubes.LiftForce' oPart.DragCubes.LiftForce).ToString("F3") + "°"; " is 213.
Long Statement,MuMech,SimulatedPart,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedPart.cs,Lift,The length of the statement  "            //    msg += "\n Normals " + MuUtils.PrettyPrint(-vesselVelocity) + " vs " + MuUtils.PrettyPrint(-oPart.dragVectorDir) + " " + Vector3.Angle(-vesselVelocity' -oPart.dragVectorDir).ToString("F3") + "°"; " is 201.
Long Statement,MuMech,SimulatedPart,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedPart.cs,Lift,The length of the statement  "            //    //msg += "\n vals " + bodyLiftMultiplier.ToString("F5") + " " + dynamicPressurekPa.ToString("F5") + " " + liftCurves.liftMachCurve.Evaluate(mach).ToString("F5"); " is 167.
Long Statement,MuMech,SimulatedVessel,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedVessel.cs,WillChutesDeploy,The length of the statement  "                if (parts[i].SimulateAndRollback(altAGL' altASL' probableLandingSiteASL' pressure' shockTemp' t' parachuteSemiDeployMultiplier)) " is 128.
Long Statement,MuMech,FuelFlowSimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,SimulateAllStages,The length of the statement  "            //print("SimulateAllStages starting from stage " + simStage + " throttle=" + throttle + " staticPressureKpa=" + staticPressureKpa + " atmDensity=" + atmDensity + " machNumber=" + machNumber); " is 191.
Long Statement,MuMech,FuelFlowSimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,SimulateStage,The length of the statement  "            //Debug.Log("thrust = " + stats.startThrust + " ISP = " + stats.isp + " FuelFlow = " + ( stats.startMass - stats.endMass ) / stats.deltaTime * 1000 + " num = " + FindActiveEngines(true).value.Count ); " is 200.
Long Statement,MuMech,FuelFlowSimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,SimulateTimeStep,The length of the statement  "            stats.isp = stats.startMass > stats.endMass ? stats.deltaV / (9.80665f * Math.Log(stats.startMass / stats.endMass)) : 0; " is 120.
Long Statement,MuMech,FuelFlowSimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,AllowedToStage,The length of the statement  "                                //print("Not allowed to stage because " + n.partName + " is an active engine (" + activeEngines.value.Contains(n) +")"); " is 120.
Long Statement,MuMech,FuelFlowSimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,AllowedToStage,The length of the statement  "                                        //print("Not allowed to stage because " + n.partName + " contains resources (" + n.ContainsResources(burnedResources.value) + ") reachable by an active engine"); " is 161.
Long Statement,MuMech,FuelFlowSimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,AllowedToStage,The length of the statement  "                // We are not allowed to stage if the stage does not decouple anything' and there is an active engine that still has access to resources " is 136.
Long Statement,MuMech,FuelFlowSimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,AllowedToStage,The length of the statement  "                        //print("Not allowed to stage because nothing is decoupled in the next stage' and there are already other engines active."); " is 124.
Long Statement,MuMech,FuelFlowSimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,FindActiveEngines,The length of the statement  "            //nodes.Slinq().Where(n => n.isEngine).ForEach(node => print("  (" + node.partName + " " + node.inverseStage + ">=" + simStage + " " + (node.inverseStage >= simStage) + ")")); " is 175.
Long Statement,MuMech,FuelFlowSimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,FindActiveEngines,The length of the statement  "            //print("Finding active engines: excluding resource considerations' there are " + nodes.Slinq().Where(n => n.isEngine && n.inverseStage >= simStage).Count()); " is 158.
Long Statement,MuMech,FuelFlowSimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,FindActiveEngines,The length of the statement  "            nodes.Slinq().Where((n' p) => n.isEngine && n.inverseStage >= p.Item1 && n.isDrawingResources && n.CanDrawNeededResources(p.Item2)' param).AddTo(activeEngines.value); " is 166.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,Init,The length of the statement  "                //print(part.partInfo.name.PadRight(25) + " " + part.mass.ToString("F4") + " " + part.GetPhysicslessChildMass().ToString("F4") + " " + modulesUnstagedMass.ToString("F4") + " " + modulesStagedMass.ToString("F4")); " is 212.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,Init,The length of the statement  "                    if ((HighLogic.LoadedSceneIsEditor || inverseStage < StageManager.CurrentStage || e.getIgnitionState) && (e.thrustPercentage > 0 || e.minThrust > 0)) " is 149.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,AssignDecoupledInStage,The length of the statement  "                                    //print("AssignDecoupledInStage ModuleDecouple          " + p.partInfo.name + "(" + p.inverseStage + ") decoupling " + attach.attachedPart + "(" + attach.attachedPart.inverseStage + "). parent " + decoupledInStage); " is 215.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,AssignDecoupledInStage,The length of the statement  "                                    //print("AssignDecoupledInStage ModuleDecouple          " + p.partInfo.name + "(" + p.inverseStage + ") decoupling " + attach.attachedPart + "(" + attach.attachedPart.inverseStage + "). not the parent " + decoupledInStage); " is 223.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,AssignDecoupledInStage,The length of the statement  "                                //print("AssignDecoupledInStage ModuleAnchoredDecoupler " + p.partInfo.name + "(" + p.inverseStage + ") decoupling " + attach.attachedPart + "(" + attach.attachedPart.inverseStage + "). parent " + decoupledInStage); " is 215.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,AssignDecoupledInStage,The length of the statement  "                                //print("AssignDecoupledInStage ModuleAnchoredDecoupler " + p.partInfo.name + "(" + p.inverseStage + ") decoupling " + attach.attachedPart + "(" + attach.attachedPart.inverseStage + "). not the parent " + decoupledInStage); " is 223.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,AssignDecoupledInStage,The length of the statement  "                //print("AssignDecoupledInStage                         " + p.partInfo.name + "(" + p.inverseStage + ")" + decoupledInStage); " is 125.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,SetConsumptionRates,The length of the statement  "                        // note that isp and massFlowRate do not include ignoreForIsp fuels like HTP and so need to be fixed for effective isp and the " is 126.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,SetConsumptionRates,The length of the statement  "                        // IMHO: using ignoreForIsp is just wrong.  full stop.  engines should never set this and should set the correct effective isp in " is 129.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,SetConsumptionRates,The length of the statement  "                        // the config for the engine.  makes everything simpler and fixes the UI to show the correct ISP.  going this direction we are going " is 132.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,SetConsumptionRates,The length of the statement  "                        // to get bug reports that e.g. mechjeb is reporting 299s for an RD-108 when RF and KSP are displaying 308s everywhere.  which is not " is 133.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,SetConsumptionRates,The length of the statement  "                        // going to be a bug at all.  as long as the thrust is correct' the effective isp is correct' and the fuel fractions are correct then " is 133.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,SetConsumptionRates,The length of the statement  "                        // the rocket equation just works and HTP should not be "ignored".   keeping it out of the atmosphereCurve just makes this annoying " is 131.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,SetConsumptionRates,The length of the statement  "                        e.EngineValuesAtConditions(throttle' atmospheres' atmDensity' machNumber' out thrust' out isp' out massFlowRate' cosLoss: dVLinearThrust); " is 138.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,SetConsumptionRates,The length of the statement  "                        // this is also the volume flow rate of the non-ignoreForIsp fuels.  although this is a bit janky since the p.ratios in most " is 124.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,SetConsumptionRates,The length of the statement  "                        // stock engines sum up to 2' not 1 (1.1 + 0.9)' so this is not per-liter but per-summed-ratios (the massflowrate you get out " is 125.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,DebugDrainRates,The length of the statement  "                print(partName + "'s drain rate of " + PartResourceLibrary.Instance.GetDefinition(type).name + "(" + type  + ") is " + resourceDrains[type] + " free=" + freeResources[type]); " is 174.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,MaxTimeStep,The length of the statement  "            var param = new Smooth.Algebraics.Tuple<DefaultableDictionary<int' double>' double' DefaultableDictionary<int' double>' DefaultableDictionary<int' bool>>(resources' resourceRequestRemainingThreshold' resourceDrains' freeResources); " is 231.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,MaxTimeStep,The length of the statement  "            if (!resourceDrains.KeysList.Slinq().Any((id' p) => !p.Item4[id] && p.Item1[id] > p.Item2' param)) return double.MaxValue; " is 122.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,MaxTimeStep,The length of the statement  "            return resourceDrains.KeysList.Slinq().Where((id' p) => !p.Item4[id] && p.Item1[id] > p.Item2' param).Select((id' p) => p.Item1[id] / p.Item3[id]' param).Min(); " is 160.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,ContainsResources,The length of the statement  "            var param = new Smooth.Algebraics.Tuple<DefaultableDictionary<int' double>' double>(resources' resourceRequestRemainingThreshold); " is 130.
Long Statement,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,AssignFuelDrainRateStagePriorityFlow,The length of the statement  "                //print("AssignFuelDrainRateStagePriorityFlow for " + partName + " searching for " + amount + " of " + PartResourceLibrary.Instance.GetDefinition(type).name + " in " + vessel.Count + " parts "); " is 194.
Long Statement,MuMech,GLUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GLUtils.cs,DrawGroundMarker,The length of the statement  "            var height = body.pqsController.GetSurfaceHeight(QuaternionD.AngleAxis(longitude' Vector3d.down) * QuaternionD.AngleAxis(latitude' Vector3d.forward) * Vector3d.right); " is 167.
Long Statement,MuMech,GLUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GLUtils.cs,DrawGroundMarker,The length of the statement  "            Vector3d camPos = map ? ScaledSpace.ScaledToLocalSpace(PlanetariumCamera.Camera.transform.position) : (Vector3d)FlightCamera.fetch.mainCamera.transform.position; " is 161.
Long Statement,MuMech,GLUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GLUtils.cs,GLVertex,The length of the statement  "            Vector3 screenPoint = map ? PlanetariumCamera.Camera.WorldToViewportPoint(ScaledSpace.LocalToScaledSpace(worldPosition)) : FlightCamera.fetch.mainCamera.WorldToViewportPoint(worldPosition); " is 189.
Long Statement,MuMech,GLUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GLUtils.cs,DrawPath,The length of the statement  "            Vector3d camPos = map ? ScaledSpace.ScaledToLocalSpace(PlanetariumCamera.Camera.transform.position) : (Vector3d)FlightCamera.fetch.mainCamera.transform.position; " is 161.
Long Statement,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,Solve,The length of the statement  "            /* most of this function lifted from https://www.mathworks.com/matlabcentral/fileexchange/39530-lambert-s-problem/content/glambert.m */ " is 135.
Long Statement,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,Solve,The length of the statement  "            // if we don't catch this edge condition' the solver will spin forever (internal state will NaN and produce great sadness) " is 122.
Long Statement,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,Solve,The length of the statement  "            /* if angle to orbit normal is greater than 90 degrees and posigrade orbit' then flip the orbit normal and the transfer angle */ " is 128.
Long Statement,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,Solve,The length of the statement  "            VLAMB(GM' R1.magnitude' R2.magnitude' theta' tof' out n' out VR11' out VT11' out VR12' out VT12' out VR21' out VT21' out VR22' out VT22); " is 137.
Long Statement,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,Solve,The length of the statement  "            //Debug.Log("VLAMBOUT: n= " + n + " VR11= " + VR11 + " VT11= " + VT11 + " VR12= " + VR12 + " VT12= " + VT12 + " VR21= " + VR21 + " VT21= " + VT21 + " VR22= " + VR22 + " VT22= " + VT22); " is 185.
Long Statement,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,Test,The length of the statement  "                    VLAMB(1.0' rlist[n1]' rlist[n2]' flist[n2] - flist[n1]' tlist[n2] - tlist[n1]' out n' out VR11' out VT11' out VR12' out VT12' out VR21' out VT21' out VR22' out VT22); " is 166.
Long Statement,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,ArrowSelector,The length of the statement  "            //if (numIndices > 1 && GUILayout.Button("◀"' GUILayout.ExpandWidth(false))) index = (index - 1 + numIndices) % numIndices; // Seems those are gone from KSP font " is 161.
Long Statement,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,ArrowSelector,The length of the statement  "            if (numIndices > 1 && GUILayout.Button("<"' GUILayout.ExpandWidth(false))) index = (index - 1 + numIndices) % numIndices; " is 121.
Long Statement,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,ArrowSelector,The length of the statement  "            Action drawLabel = () => GUILayout.Label(label' new GUIStyle(GUI.skin.label) { alignment = TextAnchor.MiddleCenter' stretchWidth = expandWidth }); " is 146.
Long Statement,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,TimeToDHMS,The length of the statement  "                        if (showSecondsDecimals && seconds < 60 && i == units.Length - 1) ret += seconds.ToString("00." + new string('0'' decimalPlaces)); " is 130.
Long Statement,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,GetMouseCoordinates,The length of the statement  "                    double alt = body.pqsController.GetSurfaceHeight(QuaternionD.AngleAxis(body.GetLongitude(surfacePoint)' Vector3d.down) * QuaternionD.AngleAxis(body.GetLatitude(surfacePoint)' Vector3d.forward) * Vector3d.right); " is 211.
Long Statement,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The length of the statement  "            saturationSlider = GUI.VerticalSlider(new Rect(positionLeft + textureWidth + 3' positionTop' 10' textureHeight)' saturationSlider' 1' 0); " is 137.
Long Statement,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The length of the statement  "            alphaSlider = GUI.VerticalSlider(new Rect(positionLeft + textureWidth + 3 + 10 + 20 + 10' positionTop' 10' textureHeight)' alphaSlider' 1' 0); " is 142.
Long Statement,MuMech,ColorPickerRGB,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The length of the statement  "            GUI.DrawTextureWithTexCoords(new Rect(positionLeft' pos' textureWidth' textureHeight)' rTexture' new Rect(0' 0' 1' textureHeight)); " is 131.
Long Statement,MuMech,ColorPickerRGB,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The length of the statement  "            GUI.DrawTextureWithTexCoords(new Rect(positionLeft' pos' textureWidth' textureHeight)' gTexture' new Rect(0' 0' 1' textureHeight)); " is 131.
Long Statement,MuMech,ColorPickerRGB,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The length of the statement  "            GUI.DrawTextureWithTexCoords(new Rect(positionLeft' pos' textureWidth' textureHeight)' bTexture' new Rect(0' 0' 1' textureHeight)); " is 131.
Long Statement,MuMech,ColorPickerRGB,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The length of the statement  "            GUI.DrawTextureWithTexCoords(new Rect(positionLeft' pos' textureWidth' textureHeight)' aTexture' new Rect(0' 0' 1' textureHeight)); " is 131.
Long Statement,MuMech,InstallChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\InstallChecker.cs,Start,The length of the statement  "            var assemblies = AssemblyLoader.loadedAssemblies.Where(a => a.assembly.GetName().Name == Assembly.GetExecutingAssembly().GetName().Name).Where(a => a.url != "MechJeb2/Plugins"); " is 177.
Long Statement,MuMech,InstallChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\InstallChecker.cs,Start,The length of the statement  "                var badPaths = assemblies.Select(a => a.path).Select(p => Uri.UnescapeDataString(new Uri(Path.GetFullPath(KSPUtil.ApplicationRootPath)).MakeRelativeUri(new Uri(p)).ToString().Replace('/'' Path.DirectorySeparatorChar))); " is 219.
Long Statement,MuMech,InstallChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\InstallChecker.cs,Start,The length of the statement  "                        new DialogGUILabel(Localizer.Format("#MechJeb_InstallCheckA_msg") +String.Join("\n"' badPaths.ToArray()))'//"MechJeb2 has been installed incorrectly and will not function properly.\nAll MechJeb2 files should be located in KSP like this \n<KSP>\n\tGameData\n\t\tMechJeb2\n\t\t\tParts\n\t\t\tPlugins\n\nDo not move any files from inside the MechJeb2 folder.\n\nIncorrect path(s):\n" " is 380.
Long Statement,MuMech,InstallChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\InstallChecker.cs,Start,The length of the statement  "                var badPaths = assemblies.Select(a => a.path).Select(p => Uri.UnescapeDataString(new Uri(Path.GetFullPath(KSPUtil.ApplicationRootPath)).MakeRelativeUri(new Uri(p)).ToString().Replace('/'' Path.DirectorySeparatorChar))); " is 219.
Long Statement,MuMech,InstallChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\InstallChecker.cs,Start,The length of the statement  "                PopupDialog.SpawnPopupDialog(new Vector2(0.5f' 0.5f)' new Vector2(0.5f' 0.5f)' "InstallCheckerB"' Localizer.Format("#MechJeb_InstallCheckB_title")' Localizer.Format("#MechJeb_InstallCheckB_msg") + String.Join("\n"' badPaths.ToArray())' "OK"' false' HighLogic.UISkin);//"Redundant MechJebMenuToolbar Installation""MechJebMenuToolbar is installed but this version of MechJeb2 already includes support for Blizzy78 Toolbar Plugin.\nPlease delete this dll:\n" " is 455.
Long Statement,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The length of the statement  "                //commented out the above line from Arrowstar's original' since it seems to do nothing and throws a compiler error -The_Duck " is 124.
Long Statement,MuMech,OperationAdvancedTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationAdvancedTransfer.cs,CheckPreconditions,The length of the statement  "                return Localizer.Format("#MechJeb_adv_Preconditions2"'o.referenceBody.displayName);//"initial orbit must not escape " " sphere of influence." " is 141.
Long Statement,MuMech,OperationAdvancedTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationAdvancedTransfer.cs,CheckPreconditions,The length of the statement  "                return Localizer.Format("#MechJeb_adv_Preconditions4"'o.referenceBody.displayName);//"doesn't make sense to plot an interplanetary transfer from an orbit around <<1>> ." " is 169.
Long Statement,MuMech,OperationAdvancedTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationAdvancedTransfer.cs,CheckPreconditions,The length of the statement  "                    return Localizer.Format("#MechJeb_adv_Preconditions5"' o.referenceBody.displayName) ;//"use regular Hohmann transfer function to intercept another body orbiting <<1>>." " is 168.
Long Statement,MuMech,OperationAdvancedTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationAdvancedTransfer.cs,CheckPreconditions,The length of the statement  "                return Localizer.Format("#MechJeb_adv_Preconditions6"'o.referenceBody.displayName'o.referenceBody.displayName'o.referenceBody.referenceBody.displayName);//"an interplanetary transfer from within <<1>>'s sphere of influence must target a body that orbits <<2>>'s parent'<<3>> " " is 276.
Long Statement,MuMech,OperationAdvancedTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationAdvancedTransfer.cs,CheckPreconditions,The length of the statement  "                return Localizer.Format("#MechJeb_adv_Preconditions7");//"use regular Hohmann transfer function to intercept another body orbiting the Sun." " is 140.
Long Statement,MuMech,OperationAdvancedTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationAdvancedTransfer.cs,ComputeStuff,The length of the statement  "                worker = new TransferCalculator (o' target.TargetOrbit' universalTime' maxArrivalTime' minSamplingStep' includeCaptureBurn); " is 124.
Long Statement,MuMech,OperationAdvancedTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationAdvancedTransfer.cs,ComputeStuff,The length of the statement  "                worker = new AllGraphTransferCalculator(o' target.TargetOrbit' minDepartureTime' maxDepartureTime' minTransferTime' maxTransferTime' windowWidth' porkchop_Height' includeCaptureBurn); " is 183.
Long Statement,MuMech,OperationAdvancedTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationAdvancedTransfer.cs,DoPorkchopGui,The length of the statement  "                GUILayout.Box(Localizer.Format("#MechJeb_adv_computing") + worker.Progress + "%"' progressStyle' GUILayout.Width(windowWidth)' GUILayout.Height(porkchop_Height));//"Computing:"  " is 176.
Long Statement,MuMech,OperationAdvancedTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationAdvancedTransfer.cs,DoPorkchopGui,The length of the statement  "            includeCaptureBurn = GUILayout.Toggle(includeCaptureBurn' Localizer.Format("#MechJeb_adv_captureburn"));//"include capture burn" " is 128.
Long Statement,MuMech,OperationApoapsis,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationApoapsis.cs,MakeNodeImpl,The length of the statement  "                throw new OperationException(Localizer.Format("#MechJeb_Ap_Exception"'burnAltitude));//new apoapsis cannot be lower than the altitude of the burn (<<1>>) " is 153.
Long Statement,MuMech,OperationApoapsis,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationApoapsis.cs,MakeNodeImpl,The length of the statement  "            return new ManeuverParameters(OrbitalManeuverCalculator.DeltaVToChangeApoapsis(o' UT' newApA + o.referenceBody.Radius)' UT); " is 124.
Long Statement,MuMech,OperationCourseCorrection,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationCourseCorrection.cs,DoParametersGUI,The length of the statement  "                GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_approach_label1")' courseCorrectFinalPeA' "km");//Approximate final periapsis " is 127.
Long Statement,MuMech,OperationCourseCorrection,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationCourseCorrection.cs,DoParametersGUI,The length of the statement  "                GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_approach_label2")' interceptDistance' "m");//Closest approach distance " is 120.
Long Statement,MuMech,OperationCourseCorrection,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationCourseCorrection.cs,MakeNodeImpl,The length of the statement  "                throw new OperationException(Localizer.Format("#MechJeb_approach_Exception1"));//must select a target for the course correction. " is 128.
Long Statement,MuMech,OperationCourseCorrection,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationCourseCorrection.cs,MakeNodeImpl,The length of the statement  "                throw new OperationException(Localizer.Format("#MechJeb_approach_Exception2"));//"target for course correction must be in the same sphere of influence" " is 151.
Long Statement,MuMech,OperationCourseCorrection,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationCourseCorrection.cs,MakeNodeImpl,The length of the statement  "                errorMessage = Localizer.Format("#MechJeb_Approach_errormsg");//Warning: orbit before course correction doesn't seem to approach target very closely. Planned course correction may be extreme. Recommend plotting an approximate intercept orbit and then plotting a course correction. " is 280.
Long Statement,MuMech,OperationCourseCorrection,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationCourseCorrection.cs,MakeNodeImpl,The length of the statement  "                OrbitalManeuverCalculator.DeltaVAndTimeForCheapestCourseCorrection(o' UT' target.TargetOrbit' targetBody' targetBody.Radius + courseCorrectFinalPeA' out UT): " is 157.
Long Statement,MuMech,OperationCourseCorrection,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationCourseCorrection.cs,MakeNodeImpl,The length of the statement  "                OrbitalManeuverCalculator.DeltaVAndTimeForCheapestCourseCorrection(o' UT' target.TargetOrbit' interceptDistance' out UT); " is 121.
Long Statement,MuMech,OperationEllipticize,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationEllipticize.cs,MakeNodeImpl,The length of the statement  "                throw new OperationException(Localizer.Format("#MechJeb_both_Exception1"'burnAltitude));//new periapsis cannot be higher than the altitude of the burn (<<1>>) " is 158.
Long Statement,MuMech,OperationEllipticize,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationEllipticize.cs,MakeNodeImpl,The length of the statement  "                throw new OperationException(Localizer.Format("#MechJeb_both_Exception2") + "(" + burnAltitude + ")");//new apoapsis cannot be lower than the altitude of the burn " is 162.
Long Statement,MuMech,OperationEllipticize,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationEllipticize.cs,MakeNodeImpl,The length of the statement  "                throw new OperationException(Localizer.Format("#MechJeb_both_Exception3"'o.referenceBody.displayName) + "(-" + MuUtils.ToSI(o.referenceBody.Radius' 3) + "m)");//"new periapsis cannot be lower than minus the radius of <<1>>" " is 223.
Long Statement,MuMech,OperationEllipticize,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationEllipticize.cs,MakeNodeImpl,The length of the statement  "            return new ManeuverParameters(OrbitalManeuverCalculator.DeltaVToEllipticize(o' UT' newPeA + o.referenceBody.Radius' newApA + o.referenceBody.Radius)' UT); " is 154.
Long Statement,MuMech,OperationInterplanetaryTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationInterplanetaryTransfer.cs,DoParametersGUI,The length of the statement  "            waitForPhaseAngle = GUILayout.Toggle(waitForPhaseAngle' Localizer.Format("#MechJeb_transfer_Label2"));//at the next transfer window. " is 132.
Long Statement,MuMech,OperationInterplanetaryTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationInterplanetaryTransfer.cs,DoParametersGUI,The length of the statement  "            waitForPhaseAngle = !GUILayout.Toggle(!waitForPhaseAngle'Localizer.Format ("#MechJeb_transfer_Label3"));//as soon as possible " is 125.
Long Statement,MuMech,OperationInterplanetaryTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationInterplanetaryTransfer.cs,MakeNodeImpl,The length of the statement  "                throw new OperationException(Localizer.Format("#MechJeb_transfer_Exception1"));//"must select a target for the interplanetary transfer." " is 136.
Long Statement,MuMech,OperationInterplanetaryTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationInterplanetaryTransfer.cs,MakeNodeImpl,The length of the statement  "                throw new OperationException(Localizer.Format("#MechJeb_transfer_Exception2"'o.referenceBody.displayName));//doesn't make sense to plot an interplanetary transfer from an orbit around <<1>> " is 189.
Long Statement,MuMech,OperationInterplanetaryTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationInterplanetaryTransfer.cs,MakeNodeImpl,The length of the statement  "                    throw new OperationException(Localizer.Format("#MechJeb_transfer_Exception3"' o.referenceBody.displayName));//use regular Hohmann transfer function to intercept another body orbiting <<1>> " is 188.
Long Statement,MuMech,OperationInterplanetaryTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationInterplanetaryTransfer.cs,MakeNodeImpl,The length of the statement  "                throw new OperationException(Localizer.Format("#MechJeb_transfer_Exception4"' o.referenceBody.displayName' o.referenceBody.displayName' o.referenceBody.referenceBody.displayName));//"an interplanetary transfer from within "<<1>>"'s sphere of influence must target a body that orbits "<<2>>"'s parent' "<<3>>. " is 308.
Long Statement,MuMech,OperationInterplanetaryTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationInterplanetaryTransfer.cs,MakeNodeImpl,The length of the statement  "                errorMessage = Localizer.Format("#MechJeb_transfer_errormsg1"' o.RelativeInclination(target.TargetOrbit).ToString("F0")' o.referenceBody.displayName);//"Warning: target's orbital plane is at a"<<1>>"º angle to "<<2>>"'s orbital plane (recommend at most 30º). Planned interplanetary transfer may not intercept target properly." " is 326.
Long Statement,MuMech,OperationInterplanetaryTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationInterplanetaryTransfer.cs,MakeNodeImpl,The length of the statement  "                    errorMessage = Localizer.Format("#MechJeb_transfer_errormsg2"' o.referenceBody.displayName' o.referenceBody.displayName' o.referenceBody.referenceBody.displayName' o.referenceBody.displayName' relativeInclination.ToString("F1")' o.referenceBody.displayName' o.referenceBody.referenceBody.displayName);//Warning: Recommend starting interplanetary transfers from  <<1>> from an orbit in the same plane as "<<2>>"'s orbit around "<<3>>". Starting orbit around "<<4>>" is inclined "<<5>>"º with respect to "<<6>>"'s orbit around "<<7>> " (recommend < 10º). Planned transfer may not intercept target properly." " is 605.
Long Statement,MuMech,OperationInterplanetaryTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationInterplanetaryTransfer.cs,MakeNodeImpl,The length of the statement  "                    errorMessage = Localizer.Format("#MechJeb_transfer_errormsg3"'o.eccentricity.ToString("F2"));//Warning: Recommend starting interplanetary transfers from a near-circular orbit (eccentricity < 0.2). Planned transfer is starting from an orbit with eccentricity <<1>> and so may not intercept target properly. " is 305.
Long Statement,MuMech,OperationInterplanetaryTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationInterplanetaryTransfer.cs,MakeNodeImpl,The length of the statement  "            var dV = OrbitalManeuverCalculator.DeltaVAndTimeForInterplanetaryTransferEjection(o' UT' target.TargetOrbit' waitForPhaseAngle' out UT); " is 136.
Long Statement,MuMech,OperationKillRelVel,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationKillRelVel.cs,MakeNodeImpl,The length of the statement  "                throw new OperationException(Localizer.Format("#MechJeb_match_v_Exception1"));//must select a target to match velocities with. " is 126.
Long Statement,MuMech,OperationKillRelVel,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationKillRelVel.cs,MakeNodeImpl,The length of the statement  "                throw new OperationException(Localizer.Format("#MechJeb_match_v_Exception2"));//target must be in the same sphere of influence. " is 127.
Long Statement,MuMech,OperationLambert,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationLambert.cs,DoParametersGUI,The length of the statement  "            GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_intercept_label")' interceptInterval);//Time after burn to intercept target: " is 126.
Long Statement,MuMech,OperationLambert,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationLambert.cs,MakeNodeImpl,The length of the statement  "                throw new OperationException(Localizer.Format("#MechJeb_intercept_Exception2"));//target must be in the same sphere of influence. " is 129.
Long Statement,MuMech,OperationLan,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationLan.cs,MakeNodeImpl,The length of the statement  "                errorMessage = Localizer.Format("#MechJeb_AN_error"'o.inclination);//"Warning: orbital plane has a low inclination of <<1>>º (recommend > 10º) and so maneuver may not be accurate" " is 179.
Long Statement,MuMech,OperationMoonReturn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationMoonReturn.cs,DoParametersGUI,The length of the statement  "            GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_return_label1")' moonReturnAltitude' "km");//Approximate final periapsis: " is 123.
Long Statement,MuMech,OperationMoonReturn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationMoonReturn.cs,MakeNodeImpl,The length of the statement  "                errorMessage = Localizer.Format("#MechJeb_return_errormsg"' o.eccentricity.ToString("F2"));//"Warning: Recommend starting moon returns from a near-circular orbit (eccentricity < 0.2). Planned return is starting from an orbit with eccentricity "" and so may not be accurate." " is 274.
Long Statement,MuMech,OperationMoonReturn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationMoonReturn.cs,MakeNodeImpl,The length of the statement  "                throw new OperationException(Localizer.Format("#MechJeb_return_Exception"'o.referenceBody.displayName));//<<1>> is not orbiting another body you could return to. " is 161.
Long Statement,MuMech,OperationMoonReturn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationMoonReturn.cs,MakeNodeImpl,The length of the statement  "            Vector3d dV = OrbitalManeuverCalculator.DeltaVAndTimeForMoonReturnEjection(o' universalTime' o.referenceBody.referenceBody.Radius + moonReturnAltitude' out UT); " is 160.
Long Statement,MuMech,OperationPeriapsis,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationPeriapsis.cs,MakeNodeImpl,The length of the statement  "                throw new OperationException(Localizer.Format("#MechJeb_Pe_Exception1") +" (" + burnAltitude + ")");//new periapsis cannot be higher than the altitude of the burn " is 162.
Long Statement,MuMech,OperationPeriapsis,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationPeriapsis.cs,MakeNodeImpl,The length of the statement  "                throw new OperationException(Localizer.Format("#MechJeb_Pe_Exception2"'o.referenceBody.displayName) + "(-" + MuUtils.ToSI(o.referenceBody.Radius' 3) + "m)");//new periapsis cannot be lower than minus the radius of <<1>> " is 219.
Long Statement,MuMech,OperationPeriapsis,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationPeriapsis.cs,MakeNodeImpl,The length of the statement  "            return new ManeuverParameters(OrbitalManeuverCalculator.DeltaVToChangePeriapsis(o' UT' newPeA + o.referenceBody.Radius)' UT); " is 125.
Long Statement,MuMech,OperationPlane,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationPlane.cs,MakeNodeImpl,The length of the statement  "                throw new OperationException(Localizer.Format("#MechJeb_match_planes_Exception1"));//must select a target to match planes with. " is 127.
Long Statement,MuMech,OperationPlane,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationPlane.cs,MakeNodeImpl,The length of the statement  "                throw new OperationException(Localizer.Format("#MechJeb_match_planes_Exception2"));//can only match planes with an object in the same sphere of influence. " is 154.
Long Statement,MuMech,OperationPlane,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationPlane.cs,MakeNodeImpl,The length of the statement  "            var anDeltaV = anExists ? OrbitalManeuverCalculator.DeltaVAndTimeToMatchPlanesAscending(o' target.TargetOrbit' UT' out anTime) : Vector3d.zero; " is 143.
Long Statement,MuMech,OperationPlane,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationPlane.cs,MakeNodeImpl,The length of the statement  "            var dnDeltaV = anExists ? OrbitalManeuverCalculator.DeltaVAndTimeToMatchPlanesDescending(o' target.TargetOrbit' UT' out dnTime) : Vector3d.zero; " is 144.
Long Statement,MuMech,OperationPlane,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationPlane.cs,MakeNodeImpl,The length of the statement  "                    throw new OperationException(Localizer.Format("#MechJeb_match_planes_Exception3"));//ascending node with target doesn't exist. " is 126.
Long Statement,MuMech,OperationPlane,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationPlane.cs,MakeNodeImpl,The length of the statement  "                    throw new OperationException(Localizer.Format("#MechJeb_match_planes_Exception4"));//descending node with target doesn't exist. " is 127.
Long Statement,MuMech,OperationPlane,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationPlane.cs,MakeNodeImpl,The length of the statement  "                    throw new OperationException(Localizer.Format("#MechJeb_match_planes_Exception5"));//neither ascending nor descending node with target exists. " is 142.
Long Statement,MuMech,OperationPlane,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationPlane.cs,MakeNodeImpl,The length of the statement  "                    throw new OperationException(Localizer.Format("#MechJeb_match_planes_Exception5"));//neither ascending nor descending node with target exists. " is 142.
Long Statement,MuMech,OperationResonantOrbit,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationResonantOrbit.cs,DoParametersGUI,The length of the statement  "            GUILayout.Label(Localizer.Format("#MechJeb_resonant_label1"'resonanceNumerator.val + "/" + resonanceDenominator.val));//"Change your orbital period to <<1>> of your current orbital period" " is 188.
Long Statement,MuMech,OperationResonantOrbit,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationResonantOrbit.cs,MakeNodeImpl,The length of the statement  "            var dV = OrbitalManeuverCalculator.DeltaVToResonantOrbit(o' UT' (double)resonanceNumerator.val / resonanceDenominator.val); " is 123.
Long Statement,MuMech,OperationSemiMajor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationSemiMajor.cs,MakeNodeImpl,The length of the statement  "                errorMessage = Localizer.Format("#MechJeb_Sa_errormsg");//Warning: new Semi-Major Axis is very large' and may result in a hyberbolic orbit " is 138.
Long Statement,MuMech,OperationSemiMajor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationSemiMajor.cs,MakeNodeImpl,The length of the statement  "                throw new OperationException(Localizer.Format("#MechJeb_Sa_Exception"'o.referenceBody.displayName) +  "(" + MuUtils.ToSI(o.referenceBody.Radius' 3) + "m)");//cannot make Semi-Major Axis less than twice the burn altitude plus the radius of <<1>> " is 244.
Long Statement,MuMech,OperationGeneric,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationTransfer.cs,DoParametersGUI,The length of the statement  "            intercept_only = GUILayout.Toggle(intercept_only' Localizer.Format("#MechJeb_Hohm_intercept_only"));//intercept only' no capture burn (impact/flyby) " is 148.
Long Statement,MuMech,OperationGeneric,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationTransfer.cs,DoParametersGUI,The length of the statement  "            simpleTransfer = GUILayout.Toggle(simpleTransfer' Localizer.Format("#MechJeb_Hohm_simpleTransfer"));//simple coplanar Hohmann transfer " is 134.
Long Statement,MuMech,OperationGeneric,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationTransfer.cs,MakeNodeImpl,The length of the statement  "                throw new OperationException(Localizer.Format("#MechJeb_Hohm_Exception1"));//must select a target for the bi-impulsive transfer. " is 128.
Long Statement,MuMech,OperationGeneric,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationTransfer.cs,MakeNodeImpl,The length of the statement  "                throw new OperationException(Localizer.Format("#MechJeb_Hohm_Exception2"));//target for bi-impulsive transfer must be in the same sphere of influence. " is 150.
Long Statement,MuMech,OperationGeneric,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationTransfer.cs,MakeNodeImpl,The length of the statement  "                    dV = OrbitalManeuverCalculator.DeltaVAndTimeForBiImpulsiveAnnealed(o' targetOrbit' universalTime' out UT' intercept_only: intercept_only); " is 138.
Long Statement,MuMech,OperationGeneric,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationTransfer.cs,MakeNodeImpl,The length of the statement  "                            throw new OperationException(Localizer.Format("#MechJeb_Hohm_Exception5"));//neither ascending nor descending node with target exists. " is 134.
Long Statement,MuMech,OperationGeneric,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationTransfer.cs,MakeNodeImpl,The length of the statement  "                    dV = OrbitalManeuverCalculator.DeltaVAndTimeForBiImpulsiveAnnealed(o' targetOrbit' UT' out UT' intercept_only: intercept_only' fixed_ut: true); " is 143.
Long Statement,MuMech,PlotArea,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\PlotArea.cs,DoGUI,The length of the statement  "			GUILayout.Box(texture' GUIStyle.none' new GUILayoutOption[] { GUILayout.Width(texture.width)' GUILayout.Height(texture.height)}); " is 129.
Long Statement,MuMech,TimeSelector,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TimeSelector.cs,ComputeManeuverTime,The length of the statement  "                        throw new OperationException(Localizer.Format("#MechJeb_Maneu_Exception1"));//"Warning: orbit is hyperbolic' so apoapsis doesn't exist." " is 136.
Long Statement,MuMech,TimeSelector,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TimeSelector.cs,ComputeManeuverTime,The length of the statement  "                        throw new OperationException(Localizer.Format("#MechJeb_Maneu_Exception3"));//"Warning: can't circularize at this altitude' since current orbit does not reach it." " is 163.
Long Statement,MuMech,TimeSelector,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TimeSelector.cs,ComputeManeuverTime,The length of the statement  "                        throw new OperationException(Localizer.Format("#MechJeb_Maneu_Exception4"));//"Warning: equatorial ascending node doesn't exist." " is 129.
Long Statement,MuMech,TimeSelector,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TimeSelector.cs,ComputeManeuverTime,The length of the statement  "                        throw new OperationException(Localizer.Format("#MechJeb_Maneu_Exception5"));//"Warning: equatorial descending node doesn't exist." " is 130.
Long Statement,MuMech,TimeSelector,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TimeSelector.cs,ComputeManeuverTime,The length of the statement  "                        throw new OperationException(Localizer.Format("#MechJeb_Maneu_Exception6"));//Warning: neither ascending nor descending node exists. " is 132.
Long Statement,MuMech,TimeSelector,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TimeSelector.cs,ComputeManeuverTime,The length of the statement  "                        throw new OperationException(Localizer.Format("#MechJeb_Maneu_Exception7"));//"Warning: neither ascending nor descending node exists." " is 134.
Long Statement,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,ComputeEjectionManeuver,The length of the statement  "            // intersect_1 is the optimal position on the orbit assuming the orbit is circular and the sphere of influence is infinite " is 122.
Long Statement,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,ComputeEjectionManeuver,The length of the statement  "                theta_err = AngleAboutAxis(exit_velocity' sample.getOrbitalVelocityAtUT(OrbitExtensions.NextTimeOfRadius(sample' UT' sample.referenceBody.sphereOfInfluence))' z); " is 162.
Long Statement,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,ComputeEjectionManeuver,The length of the statement  "                double theta_err_2 = AngleAboutAxis(exit_velocity' sample.getOrbitalVelocityAtUT(OrbitExtensions.NextTimeOfRadius(sample' UT' sample.referenceBody.sphereOfInfluence))' z); " is 171.
Long Statement,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,ComputeEjectionManeuver,The length of the statement  "                double theta_err_3 = AngleAboutAxis(exit_velocity' sample.getOrbitalVelocityAtUT(OrbitExtensions.NextTimeOfRadius(sample' UT' sample.referenceBody.sphereOfInfluence))' z); " is 171.
Long Statement,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,DistanceToTarget,The length of the statement  "            orbit.UpdateFromStateVectors(data.initial_orbit.getRelativePositionAtUT(t)' data.initial_orbit.getOrbitalVelocityAtUT(t) + DV.xzy' data.initial_orbit.referenceBody' t); " is 168.
Long Statement,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,OptimizeEjection,The length of the statement  "                    Debug.Log("Transfer calculator: maneuver is " + (earliest_UT - x[3]) + " s too early' trying again in " + initial_orbit.period + " s"); " is 135.
Long Statement,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,OptimizeEjection,The length of the statement  "                    Debug.Log("from optimizer DV = " + new Vector3d(x[0]' x[1]' x[2]) + " t = " + x[3] + " original arrival = " + UT_arrival); " is 122.
Long Statement,MuMech,MathExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MathExtensions.cs,InvertNoNaN,The length of the statement  "            return new Vector3d(vector.x != 0 ? 1 / vector.x : 0' vector.y != 0 ? 1 / vector.y: 0' vector.z != 0 ? 1 / vector.z: 0); " is 120.
Long Statement,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,EngageSmartASSOrbitalControl,The length of the statement  "                    Debug.LogError(Localizer.Format("#MechJeb_LogError_msg1"));//"MechJeb couldn't find MechJebModuleSmartASS for orbital control via action group." " is 144.
Long Statement,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,EngageSmartASSOrbitalControl,The length of the statement  "                Debug.LogError(Localizer.Format("#MechJeb_LogError_msg0"));//"MechJeb couldn't find the master MechJeb module for the current vessel." " is 134.
Long Statement,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,OnTranslatronToggleHSAction,The length of the statement  "                    Debug.LogError(Localizer.Format("#MechJeb_LogError_msg2"));//"MechJeb couldn't find MechJebModuleTranslatron for translatron control via action group." " is 151.
Long Statement,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,GetDisplayModules,The length of the statement  "            sortedDisplayModules[comparer] = value = unorderedComputerModules.OfType<DisplayModule>().OrderBy(m => m' comparer).ToList(); " is 125.
Long Statement,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,GetComputerModule,The length of the statement  "            return unorderedComputerModules.FirstOrDefault(a => a.GetType().Name.ToLowerInvariant() == type.ToLowerInvariant()); //null if none " is 131.
Long Statement,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,LoadComputerModules,The length of the statement  "                        foreach (var module in (from t in ass.GetTypes() where t.IsSubclassOf(typeof(ComputerModule)) && !t.IsAbstract select t).ToList()) " is 130.
Long Statement,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,LoadComputerModules,The length of the statement  "                        Debug.LogError("MechJeb moduleRegistry creation threw an exception in LoadComputerModules loading " + ass.FullName + ": " + e); " is 127.
Long Statement,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,LoadComputerModules,The length of the statement  "                version = string.Format("{0}.{1}.{2}"' fileVersionInfo.FileMajorPart' fileVersionInfo.FileMinorPart' fileVersionInfo.FileBuildPart); " is 132.
Long Statement,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,OnLoad,The length of the statement  "                string vesselName = vessel != null ? string.Join("_"' vessel.vesselName.Split(System.IO.Path.GetInvalidFileNameChars())) : ""; // Strip illegal char from the filename " is 166.
Long Statement,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,OnLoad,The length of the statement  "                        Debug.LogError("MechJebCore.OnLoad caught an exception trying to load mechjeb_settings_type_" + vesselName + ".cfg: " + e); " is 123.
Long Statement,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,OnLoad,The length of the statement  "                    Debug.LogError(assembly.GetName().Name + " " + assembly.GetName().Version + " " + assembly.Location.Remove(0' Path.GetFullPath(KSPUtil.ApplicationRootPath).Length)); " is 165.
Long Statement,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,OnSave,The length of the statement  "                // The EDITOR => FLIGHT transition is annoying to handle. OnDestroy is called when HighLogic.LoadedSceneIsEditor is already false " is 129.
Long Statement,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,OnSave,The length of the statement  "                    string vesselName = (HighLogic.LoadedSceneIsEditor && EditorLogic.fetch ? EditorLogic.fetch.shipNameField.text : vessel.vesselName); " is 132.
Long Statement,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,OnSave,The length of the statement  "                    vesselName = string.Join("_"' vesselName.Split(Path.GetInvalidFileNameChars())); // Strip illegal char from the filename " is 120.
Long Statement,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,OnGUI,The length of the statement  "            if (!showGui || this != vessel.GetMasterMechJeb() || (!FlightGlobals.ready && HighLogic.LoadedSceneIsFlight)  || !ready) return; " is 128.
Long Statement,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,OnGUI,The length of the statement  "            if (HighLogic.LoadedSceneIsEditor || (FlightGlobals.ready && (vessel == FlightGlobals.ActiveVessel) && (part.State != PartStates.DEAD))) " is 136.
Long Statement,MuMech,MechJebModuleAirplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneAutopilot.cs,Drive,The length of the statement  "                RealVertSpeedTarget = MuUtils.Clamp (fixVertSpeed (AltitudeTarget - vesselState.altitudeASL)' -VertSpeedMax' VertSpeedMax); " is 123.
Long Statement,MuMech,MechJebModuleAirplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneAutopilot.cs,Drive,The length of the statement  "                VertSpeedPIDController.intAccum = MuUtils.Clamp (VertSpeedPIDController.intAccum' -1 / (VerKi * VerPIDScale)' 1 / (VerKi * VerPIDScale)); " is 137.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "                btNormal.onNormal.textColor = btNormal.onFocused.textColor = btNormal.onHover.textColor = btNormal.onActive.textColor = Color.green; " is 132.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "                btAuto.onActive = btAuto.onFocused = btAuto.onHover = btAuto.onNormal = btAuto.active = btAuto.focused = btAuto.hover = btAuto.normal; " is 134.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "            autopilot.AltitudeHoldEnabled = GUILayout.Toggle (autopilot.AltitudeHoldEnabled' Localizer.Format("#MechJeb_Aircraftauto_Label1")' GUILayout.Width (140));//Altitude Hold " is 169.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "            if (GUILayout.Button("-"' GUILayout.Width(18))) { AltitudeTargettmp.val -= (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1); change = true; } " is 137.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "            AltitudeTargettmp.text = GUILayout.TextField (AltitudeTargettmp.text' GUILayout.ExpandWidth (true)' GUILayout.Width (60)); " is 122.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "            if (GUILayout.Button("+"' GUILayout.Width(18))) { AltitudeTargettmp.val += (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1); change = true; } " is 137.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "            if (change || GUILayout.Button (Localizer.Format("#MechJeb_Aircraftauto_btnset1")' autopilot.AltitudeTarget == AltitudeTargettmp ? btWhite : btGreen)) {//Set " is 157.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "                autopilot.VertSpeedHoldEnabled = GUILayout.Toggle (autopilot.VertSpeedHoldEnabled' Localizer.Format("#MechJeb_Aircraftauto_Label2")' GUILayout.Width (140));//Vertical Speed Hold " is 177.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "                if (GUILayout.Button("-"' GUILayout.Width(18))) { VertSpeedTargettmp.val -= (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1); change = true; } " is 138.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "                VertSpeedTargettmp.text = GUILayout.TextField(VertSpeedTargettmp.text' GUILayout.ExpandWidth(true)'GUILayout.Width(60)); " is 120.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "                if (GUILayout.Button("+"' GUILayout.Width(18))) { VertSpeedTargettmp.val += (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1); change = true; } " is 138.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "                if (change || GUILayout.Button (Localizer.Format("#MechJeb_Aircraftauto_btnset2")' autopilot.VertSpeedTarget == VertSpeedTargettmp ? btWhite : btGreen)) { " is 154.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "                if (GUILayout.Button("-"' GUILayout.Width(18))) { VertSpeedMaxtmp.val -= (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1); change = true; } " is 135.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "                if (GUILayout.Button("+"' GUILayout.Width(18))) { VertSpeedMaxtmp.val += (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1); change = true; } " is 135.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "                if (change || GUILayout.Button (Localizer.Format("#MechJeb_Aircraftauto_btnset3")' autopilot.VertSpeedMax == VertSpeedMaxtmp ? btWhite : btGreen)) { " is 148.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "            autopilot.HeadingHoldEnabled = GUILayout.Toggle (autopilot.HeadingHoldEnabled' Localizer.Format("#MechJeb_Aircraftauto_Label4")' GUILayout.Width (140));//"Heading Hold" " is 168.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "            if (GUILayout.Button("-"' GUILayout.Width(18))) { HeadingTargettmp.val -= (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1); change = true; } " is 136.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "            HeadingTargettmp.text = GUILayout.TextField (HeadingTargettmp.text' GUILayout.ExpandWidth (true)' GUILayout.Width (60)); " is 120.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "            if (GUILayout.Button("+"' GUILayout.Width(18))) { HeadingTargettmp.val += (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1); change = true; } " is 136.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "            if (change || GUILayout.Button (Localizer.Format("#MechJeb_Aircraftauto_btnset4")' autopilot.HeadingTarget == HeadingTargettmp ? btWhite : btGreen)) { " is 150.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "                autopilot.RollHoldEnabled = GUILayout.Toggle (autopilot.RollHoldEnabled' Localizer.Format("#MechJeb_Aircraftauto_Label5")' GUILayout.Width (140));//"Roll Hold" " is 159.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "                if (GUILayout.Button("-"' GUILayout.Width(18))) { RollTargettmp.val -= (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1); change = true; } " is 133.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "                if (GUILayout.Button("+"' GUILayout.Width(18))) { RollTargettmp.val += (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1); change = true; } " is 133.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "                if (change || GUILayout.Button (Localizer.Format("#MechJeb_Aircraftauto_btnset5")' autopilot.RollTarget == RollTargettmp ? btWhite : btGreen)) { " is 144.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "                if (GUILayout.Button("-"' GUILayout.Width(18))) { RollMaxtmp.val -= (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1); change = true; } " is 130.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "                if (GUILayout.Button("+"' GUILayout.Width(18))) { RollMaxtmp.val += (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1); change = true; } " is 130.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "                if (change || GUILayout.Button (Localizer.Format("#MechJeb_Aircraftauto_btnset6")' autopilot.RollMax == RollMaxtmp ? btWhite : btGreen)) { " is 138.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "            autopilot.SpeedHoldEnabled = GUILayout.Toggle (autopilot.SpeedHoldEnabled' Localizer.Format("#MechJeb_Aircraftauto_Label7")' GUILayout.Width (140));//Speed Hold " is 160.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "            if (GUILayout.Button("-"' GUILayout.Width(18))) { SpeedTargettmp.val -= (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1); change = true; } " is 134.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "            if (GUILayout.Button("+"' GUILayout.Width(18))) { SpeedTargettmp.val += (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1); change = true; } " is 134.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "            if (change || GUILayout.Button (Localizer.Format("#Mechjeb_Aircraftauto_btnset7")' autopilot.SpeedTarget == SpeedTargettmp ? btWhite : btGreen)) {//Set " is 151.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "                    GUILayout.Label (Localizer.Format("#MecgJeb_Aircraftauto_error1"' autopilot.a_err.ToString ("F2")'autopilot.RealAccelerationTarget.ToString ("F2")'autopilot.cur_acc.ToString ("F2"))'GUILayout.ExpandWidth (false));//"error:"<<1>>" Target:"<<2>> " Cur:"<<3>> " is 256.
Long Statement,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The length of the statement  "                    GUILayout.Label(Localizer.Format("#MecgJeb_Aircraftauto_error2"' autopilot.v_err.ToString("F2")' autopilot.RealVertSpeedTarget.ToString("F2")' vesselState.speedVertical.ToString("F2")' GUILayout.ExpandWidth(false)));//error:" Target:"" Cur:" " is 241.
Long Statement,MuMech,MechJebModuleAscentAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,FixupLaunchStart,The length of the statement  "            // continuously update the launchStarted time if we're sitting on the ground on the water anywhere (once we are not' then we've launched) " is 137.
Long Statement,MuMech,MechJebModuleAscentAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,FixupLaunchStart,The length of the statement  "            if ( vessel.situation == Vessel.Situations.LANDED || vessel.situation == Vessel.Situations.PRELAUNCH || vessel.situation == Vessel.Situations.SPLASHED ) " is 152.
Long Statement,MuMech,MechJebModuleAscentAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,OnModuleEnabled,The length of the statement  "            // since we cannot serialize enums' we serialize ascentPathIdx instead' but this bypasses the code in the property' so on module " is 128.
Long Statement,MuMech,MechJebModuleAscentAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,DriveCircularizationBurn,The length of the statement  "                //  into it' you actually only spend 1513 m/s to execute combined manuver.  Mechjeb should also do correction burns before " is 122.
Long Statement,MuMech,MechJebModuleAscentAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,DriveCircularizationBurn,The length of the statement  "                // FIXME? this inclination correction is unlikely to be at tha AN/DN and will throw the LAN off with anything other than high " is 125.
Long Statement,MuMech,MechJebModuleAscentAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,DriveCircularizationBurn,The length of the statement  "                // TWR launches from equatorial launch sites -- should probably be made optional (or clip it if the correction is too large). " is 125.
Long Statement,MuMech,MechJebModuleAscentAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,DriveCircularizationBurn,The length of the statement  "                Vector3d inclinationCorrection = OrbitalManeuverCalculator.DeltaVToChangeInclination(orbit' UT' Math.Abs(desiredInclination)); " is 126.
Long Statement,MuMech,MechJebModuleAscentAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,DriveCircularizationBurn,The length of the statement  "                Vector3d smaCorrection = OrbitalManeuverCalculator.DeltaVForSemiMajorAxis(orbit.PerturbedOrbit(UT' inclinationCorrection)' UT' " is 126.
Long Statement,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,ThrottleToRaiseApoapsis,The length of the statement  "                double instantRatePerThrottle = (orbit.ApR - raiseApoapsisLastApR) / ((vesselState.time - raiseApoapsisLastUT) * raiseApoapsisLastThrottle); " is 140.
Long Statement,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,attitudeTo,The length of the statement  "            double desiredHeading = OrbitalManeuverCalculator.HeadingForLaunchInclination(vessel' vesselState' autopilot.desiredInclination); " is 129.
Long Statement,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,attitudeTo,The length of the statement  "            // FIXME?  should this be up/down and not forward/back?  seems wrong?  why was i using down before for the ullage direction? " is 124.
Long Statement,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,attitudeTo,The length of the statement  "            bool has_rcs = vessel.hasEnabledRCSModules() && vessel.ActionGroups[KSPActionGroup.RCS] && ( rcs.left > 0.01 ) && ( rcs.right > 0.01 ) && ( rcs.forward > 0.01 ) && ( rcs.back > 0.01 ); " is 184.
Long Statement,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,attitudeTo,The length of the statement  "            Vector3d desiredHeadingVector = Math.Sin(desiredHeading * UtilMath.Deg2Rad) * vesselState.east + Math.Cos(desiredHeading * UtilMath.Deg2Rad) * vesselState.north; " is 161.
Long Statement,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,attitudeTo,The length of the statement  "                float fade = vesselState.dynamicPressure < autopilot.aoALimitFadeoutPressure ? (float)(autopilot.aoALimitFadeoutPressure / vesselState.dynamicPressure) : 1; " is 156.
Long Statement,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,attitudeTo,The length of the statement  "                autopilot.limitingAoA = vessel.altitude < mainBody.atmosphereDepth && Vector3.Angle(vesselState.surfaceVelocity' desiredThrustVector) > autopilot.currentMaxAoA; " is 160.
Long Statement,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,attitudeTo,The length of the statement  "                    desiredThrustVector = Vector3.RotateTowards(vesselState.surfaceVelocity' desiredThrustVector' (float)(autopilot.currentMaxAoA * Mathf.Deg2Rad)' 1).normalized; " is 158.
Long Statement,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,attitudeTo,The length of the statement  "                autopilot.limitingAoA = vesselState.dynamicPressure * Vector3.Angle(vesselState.surfaceVelocity' desiredThrustVector) * UtilMath.Deg2Rad > lim; " is 143.
Long Statement,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,attitudeTo,The length of the statement  "                    desiredThrustVector = Vector3.RotateTowards(vesselState.surfaceVelocity' desiredThrustVector' (float)(autopilot.currentMaxAoA * UtilMath.Deg2Rad)' 1).normalized; " is 161.
Long Statement,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,attitudeTo,The length of the statement  "                hdg = MuUtils.ClampDegrees360(UtilMath.Rad2Deg * Math.Atan2(Vector3d.Dot(desiredThrustVector' vesselState.east)' Vector3d.Dot(desiredThrustVector' vesselState.north))); " is 168.
Long Statement,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,attitudeTo,The length of the statement  "                    core.attitude.attitudeTo(hdg' pitch' autopilot.verticalRoll' this' !vessel.Landed' !vessel.Landed' !vessel.Landed && (vesselState.altitudeBottom > 50)); " is 152.
Long Statement,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,attitudeTo,The length of the statement  "                    core.attitude.attitudeTo(hdg' pitch' autopilot.turnRoll' this' !vessel.Landed' !vessel.Landed' !vessel.Landed && (vesselState.altitudeBottom > 50)); " is 148.
Long Statement,MuMech,LaunchTiming,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,TimeToPhaseAngle,The length of the statement  "            if (Vector3d.Dot(-target.GetOrbitNormal().Reorder(132).normalized' launchBody.angularVelocity) < 0) targetAngularRate *= -1; //retrograde target " is 144.
Long Statement,MuMech,LaunchTiming,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,TimeToPlane,The length of the statement  "            Vector3d b = Vector3d.Exclude(launchBody.angularVelocity' -target.GetOrbitNormal().Reorder(132).normalized).normalized; // I don't understand the sign here' but this seems to work " is 179.
Long Statement,MuMech,LaunchTiming,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,TimeToPlane,The length of the statement  "            double cMagnitudeSquared = Math.Pow(launchBody.Radius * Math.Cos(UtilMath.Deg2Rad * launchLatitude)' 2) - b.sqrMagnitude; " is 121.
Long Statement,MuMech,MechJebModuleAscentClassic,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassic.cs,FlightPathAngle,The length of the statement  "            return Mathf.Clamp((float)(90.0 - Math.Pow((altitude - actualTurnStart) / (turnEnd - actualTurnStart)' turnShapeExponent) * (90.0 - turnEndAngle))' 0.01F' 89.99F); " is 163.
Long Statement,MuMech,MechJebModuleAscentClassic,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassic.cs,DriveGravityTurn,The length of the statement  "                double actualFlightPathAngle = Math.Atan2(vesselState.speedVertical' vesselState.speedSurfaceHorizontal) * UtilMath.Rad2Deg; " is 124.
Long Statement,MuMech,MechJebModuleAscentClassic,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassic.cs,DriveGravityTurn,The length of the statement  "                /* form an isosceles triangle with unit vectors pointing in the desired and actual flight path angle directions and find the length of the base */ " is 146.
Long Statement,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowGUI,The length of the statement  "            path.autoPath = GUILayout.Toggle(path.autoPath' Localizer.Format("#MechJeb_AscentPathEd_auto")' GUILayout.ExpandWidth(false));//"Automatic Altitude Turn" " is 153.
Long Statement,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowGUI,The length of the statement  "                GUILayout.Label(Localizer.Format("#MechJeb_AscentPathEd_label3")' GUILayout.ExpandWidth(false));//"Turn start when Altitude is " " is 128.
Long Statement,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowGUI,The length of the statement  "                GUILayout.Label(MuUtils.ToSI(path.autoTurnEndAltitude' -1' 2) + "m"' new GUIStyle(GUI.skin.label) { alignment = TextAnchor.MiddleRight }' GUILayout.ExpandWidth(true)); " is 167.
Long Statement,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowGUI,The length of the statement  "                GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_AscentPathEd_label6")' path.turnStartAltitude' "km");//"Turn start altitude:" " is 127.
Long Statement,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowGUI,The length of the statement  "                GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_AscentPathEd_label7")' path.turnStartVelocity' "m/s");//"Turn start velocity:" " is 128.
Long Statement,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowGUI,The length of the statement  "                GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_AscentPathEd_label8")' path.turnEndAltitude' "km");//"Turn end altitude:" " is 123.
Long Statement,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowGUI,The length of the statement  "            GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_AscentPathEd_label9")' path.turnEndAngle' "°");//"Final flight path angle:" " is 125.
Long Statement,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,DrawnTrajectory,The length of the statement  "            Vector2 p1 = new Vector2(r.xMin + (float)(recorder.history[0].downRange / scale)' r.yMax - (float)(recorder.history[0].altitudeASL / scale)); " is 141.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                btNormal.onNormal.textColor = btNormal.onFocused.textColor = btNormal.onHover.textColor = btNormal.onActive.textColor = Color.green; " is 132.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                    if ( GUILayout.Button(Localizer.Format("#MechJeb_Ascent_button4")' autopilot.showTargeting ? btActive : btNormal' GUILayout.ExpandWidth(true)) )//"TARG" " is 152.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                    if ( GUILayout.Button(Localizer.Format("#MechJeb_Ascent_button5")' autopilot.showGuidanceSettings ? btActive : btNormal' GUILayout.ExpandWidth(true)) )//GUID " is 157.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                    if ( GUILayout.Button(Localizer.Format("#MechJeb_Ascent_button6")' autopilot.showSettings ? btActive : btNormal' GUILayout.ExpandWidth(true)) )//OPTS " is 149.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                    if ( GUILayout.Button(Localizer.Format("#MechJeb_Ascent_button7")' autopilot.showStatus ? btActive : btNormal' GUILayout.ExpandWidth(true)) )//STATUS " is 149.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                    if ( GUILayout.Button(Localizer.Format("#MechJeb_Ascent_button8")' autopilot.showTargeting ? btActive : btNormal' GUILayout.ExpandWidth(true)) )//TARG " is 150.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                    if ( GUILayout.Button(Localizer.Format("#MechJeb_Ascent_button9")' autopilot.showGuidanceSettings ? btActive : btNormal' GUILayout.ExpandWidth(true)) )//GUID " is 157.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                    if ( GUILayout.Button(Localizer.Format("#MechJeb_Ascent_button10")' autopilot.showSettings ? btActive : btNormal' GUILayout.ExpandWidth(true)) )//OPTS " is 150.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                    if ( GUILayout.Button(Localizer.Format("#MechJeb_Ascent_button11")' autopilot.showTargeting ? btActive : btNormal' GUILayout.ExpandWidth(true)) )//TARG " is 151.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                    if ( GUILayout.Button(Localizer.Format("#MechJeb_Ascent_button12")' autopilot.showSettings ? btActive : btNormal' GUILayout.ExpandWidth(true)) )//OPTS " is 150.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                        GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_Ascent_label1")' autopilot.desiredOrbitAltitude' "km");//Target Periapsis " is 123.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                        GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_Ascent_label5")' autopilot.desiredOrbitAltitude' "km");//Orbit altitude " is 121.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                    desiredInclination.text = GUILayout.TextField(desiredInclination.text' GUILayout.ExpandWidth(true)' GUILayout.Width(100)); " is 122.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                        GUILayout.Label(Localizer.Format("#MechJeb_Ascent_label7"' Math.Abs(vesselState.latitude) - Math.Abs(desiredInclination))' si);//inc {0:F1}º below current latitude " is 163.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                        GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_Ascent_label8")' gtascent.turnStartAltitude' "km");//Turn start altitude: " is 123.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                        GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_Ascent_label9")' gtascent.turnStartVelocity' "m/s");//Turn start velocity: " is 124.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                        GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_Ascent_label11")' gtascent.intermediateAltitude' "km");//Intermediate altitude: " is 129.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                        GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_Ascent_label13")' pvgascent.pitchStartVelocity' "m/s");//Booster Pitch start: " is 127.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                        GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_Ascent_label15")' core.guidance.pvgInterval' "s");//Guidance Interval: " is 120.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                        autopilot.limitAoA = GUILayout.Toggle(autopilot.limitAoA' Localizer.Format("#MechJeb_Ascent_checkbox3")' s' GUILayout.ExpandWidth(true));//Limit AoA to " is 151.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                            GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_Ascent_label24")' autopilot.aoALimitFadeoutPressure' "Pa"' 50' sl);//Dynamic Pressure Fadeout " is 143.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                        autopilot.correctiveSteering = GUILayout.Toggle(autopilot.correctiveSteering' Localizer.Format("#MechJeb_Ascent_checkbox4")' GUILayout.ExpandWidth(false));//Corrective steering " is 176.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                            autopilot.correctiveSteeringGain.text = GUILayout.TextField(autopilot.correctiveSteeringGain.text' GUILayout.Width(40)); " is 120.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                        autopilot.skipCircularization = GUILayout.Toggle(autopilot.skipCircularization' Localizer.Format("#MechJeb_Ascent_checkbox9"));//Skip Circularization " is 149.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                        GUILayout.Label(Localizer.Format("#MechJeb_Ascent_label27") + core.guidance.successful_converges' GUILayout.Width(100));//converges: " is 132.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                        GUILayout.Label(Localizer.Format("#MechJeb_Ascent_label28") + core.guidance.last_lm_status' GUILayout.Width(100));//status:  " is 123.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                        GUILayout.Label("n: " + core.guidance.last_lm_iteration_count + "(" + core.guidance.max_lm_iteration_count + ")"' GUILayout.Width(100)); " is 136.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                        GUILayout.Label(Localizer.Format("#MechJeb_Ascent_label29") + GuiUtils.TimeToDHMS(core.guidance.staleness));//staleness: " is 120.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                        if ( vessel.situation != Vessel.Situations.LANDED && vessel.situation != Vessel.Situations.PRELAUNCH && vessel.situation != Vessel.Situations.SPLASHED ) " is 152.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                                GUILayout.Label(String.Format(Localizer.Format("#MechJeb_Ascent_label31") +"{0:F1}%"' (vesselState.mass - m0) / m0 * 100.0 )' s);//MASS IS OFF BY  " is 145.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                                GUILayout.Label(String.Format(Localizer.Format("#MechJeb_Ascent_label32") +"{0:F1}%"' (vesselState.thrustCurrent - thrust) / thrust * 100.0 )' s);//THRUST IS OFF BY " is 164.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                                    if (GUILayout.Button(Localizer.Format("#MechJeb_Ascent_button14")' GUILayout.ExpandWidth(false)))//Launch to rendezvous: " is 120.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                                if (GUILayout.Button(Localizer.Format("#MechJeb_Ascent_button15")' GUILayout.ExpandWidth(false)))//Launch into plane of target " is 126.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                                desiredInclination = MuUtils.Clamp(core.target.TargetOrbit.inclination' Math.Abs(vesselState.latitude)' 180 - Math.Abs(vesselState.latitude)); " is 142.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "                GUILayout.Label(Localizer.Format("#MechJeb_Ascent_label37"));//"Warning: MechJeb is unable to circularize without an upgraded Tracking Station." " is 144.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "            autopilot.ascentPathIdxPublic = (ascentType)GuiUtils.ComboBox.Box((int)autopilot.ascentPathIdxPublic' autopilot.ascentPathList' this); " is 134.
Long Statement,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The length of the statement  "            if (autopilot.ascentMenu != null) autopilot.ascentMenu.enabled = GUILayout.Toggle(autopilot.ascentMenu.enabled' Localizer.Format("#MechJeb_Ascent_checkbox10"));//Edit ascent path " is 178.
Long Statement,MuMech,MechJebModuleAscentPVG,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentPVG.cs,DriveInitiateTurn,The length of the statement  "                status = Localizer.Format("#MechJeb_Ascent_status14"' String.Format("{0:F}"' pitch - core.guidance.pitch));//Gravity Turn <<1>>° to guidance " is 140.
Long Statement,MuMech,MechJebModuleAscentPVG,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentPVG.cs,DriveInitiateTurn,The length of the statement  "                status = Localizer.Format("#MechJeb_Ascent_status15"' String.Format("{0:F}"' pitch - core.guidance.pitch));//Pitch program <<1>>° to guidance " is 141.
Long Statement,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The length of the statement  "            //core.GetComputerModule<MechJebModuleCustomWindowEditor>().registry.Find(i => i.id == "Toggle:AttitudeController.useSAS").DrawItem(); " is 134.
Long Statement,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The length of the statement  "            core.attitude.RCS_auto = GUILayout.Toggle(core.attitude.RCS_auto' Localizer.Format("#MechJeb_AttitudeAdjust_checkbox1"));//RCS auto mode " is 136.
Long Statement,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The length of the statement  "            if (GUILayout.Toggle(currentController == 0' Localizer.Format("#MechJeb_AttitudeAdjust_checkbox2")))//MJAttitudeController " is 122.
Long Statement,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The length of the statement  "            if (GUILayout.Toggle(currentController == 1' Localizer.Format("#MechJeb_AttitudeAdjust_checkbox3")))//KosAttitudeController " is 123.
Long Statement,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The length of the statement  "                    "|" + vesselState.torqueReactionSpeed.magnitude.ToString("F3") + "| " + MuUtils.PrettyPrint(vesselState.torqueReactionSpeed)' " is 125.
Long Statement,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The length of the statement  "                GUILayout.Label("|" + ratio.magnitude.ToString("F3") + "| " + MuUtils.PrettyPrint(ratio)' GUILayout.ExpandWidth(false)); " is 120.
Long Statement,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The length of the statement  "                GUILayout.Label("|" + vesselState.MoI.magnitude.ToString("F3") + "| " + MuUtils.PrettyPrint(vesselState.MoI)' GUILayout.ExpandWidth(false)); " is 140.
Long Statement,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The length of the statement  "                GUILayout.Label("|" + vessel.angularVelocity.magnitude.ToString("F3") + "| " + MuUtils.PrettyPrint(vessel.angularVelocity)' " is 123.
Long Statement,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The length of the statement  "            arrows.seeThrough = GUILayout.Toggle(arrows.seeThrough' Localizer.Format("#MechJeb_AttitudeAdjust_checkbox6"));//Visible through object " is 135.
Long Statement,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The length of the statement  "            arrows.comSphereActive = GUILayout.Toggle(arrows.comSphereActive' Localizer.Format("#MechJeb_AttitudeAdjust_checkbox7")' GUILayout.ExpandWidth(false));//Display the CoM " is 168.
Long Statement,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The length of the statement  "            arrows.colSphereActive = GUILayout.Toggle(arrows.colSphereActive' Localizer.Format("#MechJeb_AttitudeAdjust_checkbox8")' GUILayout.ExpandWidth(false));//Display the CoL " is 168.
Long Statement,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The length of the statement  "            arrows.cotSphereActive = GUILayout.Toggle(arrows.cotSphereActive' Localizer.Format("#MechJeb_AttitudeAdjust_checkbox9")' GUILayout.ExpandWidth(false));//Display the CoT " is 168.
Long Statement,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The length of the statement  "            arrows.displayAtCoM = GUILayout.Toggle(arrows.displayAtCoM' Localizer.Format("#MechJeb_AttitudeAdjust_checkbox10"));//Arrows origins at the CoM " is 143.
Long Statement,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The length of the statement  "            arrows.srfVelocityArrowActive = GUILayout.Toggle(arrows.srfVelocityArrowActive' Localizer.Format("#MechJeb_AttitudeAdjust_checkbox11"));//Pod Surface Velocity (green) " is 166.
Long Statement,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The length of the statement  "            arrows.obtVelocityArrowActive = GUILayout.Toggle(arrows.obtVelocityArrowActive' Localizer.Format("#MechJeb_AttitudeAdjust_checkbox12"));//Pod Orbital Velocity (red) " is 164.
Long Statement,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The length of the statement  "            arrows.dotArrowActive = GUILayout.Toggle(arrows.dotArrowActive' Localizer.Format("#MechJeb_AttitudeAdjust_checkbox13"));//Direction of Thrust (purple pink) " is 155.
Long Statement,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The length of the statement  "            arrows.forwardArrowActive = GUILayout.Toggle(arrows.forwardArrowActive' Localizer.Format("#MechJeb_AttitudeAdjust_checkbox14")) ;//Command Pod Forward (electric blue) " is 166.
Long Statement,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The length of the statement  "            arrows.requestedAttitudeArrowActive = GUILayout.Toggle(arrows.requestedAttitudeArrowActive' Localizer.Format("#MechJeb_AttitudeAdjust_checkbox15"));//Requested Attitude (gray) " is 175.
Long Statement,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The length of the statement  "            arrows.debugArrowActive = GUILayout.Toggle(arrows.debugArrowActive' Localizer.Format("#MechJeb_AttitudeAdjust_checkbox16"));//Debug (magenta) " is 141.
Long Statement,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The length of the statement  "            arrows.debugArrow2Active = GUILayout.Toggle(arrows.debugArrow2Active' Localizer.Format("#MechJeb_AttitudeAdjust_checkbox17"));//Debug2 (light blue) " is 147.
Long Statement,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,attitudeGetReferenceRotation,The length of the statement  "            if (core.target.Target == null && (reference == AttitudeReference.TARGET || reference == AttitudeReference.TARGET_ORIENTATION || reference == AttitudeReference.RELATIVE_VELOCITY)) " is 179.
Long Statement,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,attitudeGetReferenceRotation,The length of the statement  "                    rotRef = Quaternion.LookRotation(Vector3d.Exclude(vesselState.up' vesselState.orbitalVelocity.normalized)' vesselState.up); " is 123.
Long Statement,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,attitudeGetReferenceRotation,The length of the statement  "                    rotRef = Quaternion.LookRotation(Vector3d.Exclude(vesselState.up' vesselState.surfaceVelocity.normalized)' vesselState.up); " is 123.
Long Statement,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,attitudeTo,The length of the statement  "            //double ang_diff = Math.Abs(Vector3d.Angle(attitudeGetReferenceRotation(attitudeReference) * attitudeTarget * Vector3d.forward' attitudeGetReferenceRotation(reference) * direction)); " is 183.
Long Statement,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,attitudeTo,The length of the statement  "            Quaternion attitude = Quaternion.AngleAxis((float)heading' Vector3.up) * Quaternion.AngleAxis(-(float)pitch' Vector3.right) * Quaternion.AngleAxis(-(float)roll' Vector3.forward); " is 178.
Long Statement,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,attitudeAngleFromTarget,The length of the statement  "            return enabled ? Math.Abs(Vector3d.Angle(attitudeGetReferenceRotation(attitudeReference) * attitudeTarget * Vector3d.forward' vesselState.forward)) : 0; " is 152.
Long Statement,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,Drive,The length of the statement  "                    core.thrust.differentialThrottleDemandedTorque = -Vector3d.Scale(act' vesselState.torqueDiffThrottle * vessel.ctrlState.mainThrottle); " is 134.
Long Statement,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,SetFlightCtrlState,The length of the statement  "            bool userCommandingPitchYaw = (Mathfx.Approx(s.pitch' s.pitchTrim' 0.1F) ? false : true) || (Mathfx.Approx(s.yaw' s.yawTrim' 0.1F) ? false : true); " is 147.
Long Statement,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,SetFlightCtrlState,The length of the statement  "                    attitudeTo(Quaternion.LookRotation(vessel.GetTransform().up' -vessel.GetTransform().forward)' AttitudeReference.INERTIAL' null); " is 128.
Long Statement,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,SetFlightCtrlState,The length of the statement  "                if (RCS_auto && ((absErr.x > 3.0) || (absErr.y > 3.0) || (absErr.z > 3.0)) && core.thrust.limiter != MechJebModuleThrustController.LimitMode.UnstableIgnition) " is 158.
Long Statement,MuMech,MechJebModuleCustomInfoWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowGUI,The length of the statement  "            if (items.Count == 0) GUILayout.Label(Localizer.Format("#MechJeb_WindowEd_CustomInfoWindow_Label1"));//Add items to this window with the custom window editor. " is 158.
Long Statement,MuMech,MechJebModuleCustomInfoWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowGUI,The length of the statement  "                ScreenMessages.PostScreenMessage(Localizer.Format("#MechJeb_WindowEd_CustomInfoWindow_Scrmsg1"' GetName())' 3.0f' ScreenMessageStyle.UPPER_RIGHT);//Configuration of <<1>> window copied to clipboard. " is 198.
Long Statement,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,RegisterInfoItems,The length of the statement  "            foreach (MemberInfo member in obj.GetType().GetMembers(BindingFlags.GetField | BindingFlags.GetProperty | BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.FlattenHierarchy)) " is 208.
Long Statement,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,RegisterInfoItems,The length of the statement  "                    if (attribute is ValueInfoItemAttribute) registry.Add(new ValueInfoItem(obj' member' (ValueInfoItemAttribute)attribute)); " is 121.
Long Statement,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,RegisterInfoItems,The length of the statement  "                    else if (attribute is ActionInfoItemAttribute) registry.Add(new ActionInfoItem(obj' (MethodInfo)member' (ActionInfoItemAttribute)attribute)); " is 141.
Long Statement,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,RegisterInfoItems,The length of the statement  "                    else if (attribute is ToggleInfoItemAttribute) registry.Add(new ToggleInfoItem(obj' member' (ToggleInfoItemAttribute)attribute)); " is 129.
Long Statement,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,RegisterInfoItems,The length of the statement  "                    else if (attribute is GeneralInfoItemAttribute) registry.Add(new GeneralInfoItem(obj' (MethodInfo)member' (GeneralInfoItemAttribute)attribute)); " is 144.
Long Statement,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,RegisterInfoItems,The length of the statement  "                    else if (attribute is EditableInfoItemAttribute) registry.Add(new EditableInfoItem(obj' member' (EditableInfoItemAttribute)attribute)); " is 135.
Long Statement,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowGUI,The length of the statement  "                editedWindow.ShowInFlight = GUILayout.Toggle(editedWindow.ShowInFlight' Localizer.Format("#MechJeb_WindowEd_checkbox1")' GUILayout.Width(60));//Flight " is 150.
Long Statement,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowGUI,The length of the statement  "                editedWindow.ShowInEditor = GUILayout.Toggle(editedWindow.ShowInEditor' Localizer.Format("#MechJeb_WindowEd_checkbox2"));//Editor " is 129.
Long Statement,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowGUI,The length of the statement  "                editedWindow.IsOverlay = GUILayout.Toggle(editedWindow.IsOverlay' Localizer.Format("#MechJeb_WindowEd_checkbox3"));//Overlay " is 124.
Long Statement,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowGUI,The length of the statement  "                editedWindow.IsCompact = GUILayout.Toggle(editedWindow.IsCompact' Localizer.Format("#MechJeb_WindowEd_checkbox5"));//Compact " is 124.
Long Statement,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowGUI,The length of the statement  "                if (GUILayout.Button(Localizer.Format("#MechJeb_WindowEd_button3")) && selectedItemIndex != -1) editedWindow.items.RemoveAt(selectedItemIndex);//Remove " is 151.
Long Statement,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowGUI,The length of the statement  "            GUILayout.Label(Localizer.Format("#MechJeb_WindowEd_label5")' new GUIStyle(GUI.skin.label) { alignment = TextAnchor.MiddleCenter });//Window presets: " is 149.
Long Statement,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowGUI,The length of the statement  "                    MechJebModuleCustomInfoWindow newWindow = CreateWindowFromSharingString(CustomWindowPresets.presets[presetIndex].sharingString); " is 128.
Long Statement,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,CreateWindowFromSharingString,The length of the statement  "                ScreenMessages.PostScreenMessage(Localizer.Format("#MechJeb_WindowEd_CustomInfoWindow_Scrmsg2")' 3.0f' ScreenMessageStyle.UPPER_RIGHT);//"Pasted text wasn't a MechJeb custom window descriptor." " is 193.
Long Statement,MuMech,MechJebModuleDebugArrows,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,OnUpdate,The length of the statement  "            var frameVel = (vesselState.orbitalVelocity - Krakensbane.GetFrameVelocity() - vessel.orbit.GetRotFrameVel(vessel.orbit.referenceBody).xzy) * Time.fixedDeltaTime; " is 162.
Long Statement,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,SeeThrough,The length of the statement  "                _coneMeshRenderer.material.shader = state ? MechJebBundlesManager.diffuseAmbientIgnoreZ : MechJebBundlesManager.diffuseAmbient; " is 127.
Long Statement,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,SeeThrough,The length of the statement  "                _haftMeshRenderer.material.shader = state ? MechJebBundlesManager.diffuseAmbientIgnoreZ : MechJebBundlesManager.diffuseAmbient; " is 127.
Long Statement,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,SeeThrough,The length of the statement  "                _meshRenderer.material.shader = state ? MechJebBundlesManager.diffuseAmbientIgnoreZ : MechJebBundlesManager.diffuseAmbient; " is 123.
Long Statement,MuMech,MechJebModuleDeployableController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDeployableController.cs,AllRetracted,The length of the statement  "                    if (mdp != null && isModules(mdp) && isDeployable(mdp) && mdp.deployState != ModuleDeployablePart.DeployState.RETRACTED) " is 120.
Long Statement,MuMech,MechJebModuleDeployableController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDeployableController.cs,ShouldDeploy,The length of the statement  "                min_alt = Math.Sqrt(Math.Min(orbit.getRelativePositionAtUT(t).sqrMagnitude' orbit.getRelativePositionAtUT(t + dt).sqrMagnitude)) - mainBody.Radius; " is 147.
Long Statement,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,MaxSpeedForDistance,The length of the statement  "            return FixSpeed(Math.Sqrt(2.0 * Math.Abs(distance) * vesselState.rcsThrustAvailable.GetMagnitude(localAxis) * core.rcs.rcsAccelFactor() / vesselState.mass)); " is 157.
Long Statement,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,Drive,The length of the statement  "			double latApproachSpeed = MaxSpeedForDistance(lateralSep.magnitude' -lateralSep); // TODO check if it should be +lateralSep " is 123.
Long Statement,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,Drive,The length of the statement  "                    status = Localizer.Format("#MechJeb_Docking_status1"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString());//"Backing up at " <<1>> " m/s before moving on target side (lat: "<<2>> " m/s)" " is 193.
Long Statement,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,Drive,The length of the statement  "                    status = Localizer.Format("#MechJeb_Docking_status2"' latApproachSpeed.ToString("F2"));//Moving away from docking axis at <<1>> m/s to avoid hitting target on backing up " is 169.
Long Statement,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,Drive,The length of the statement  "                    status = Localizer.Format("#MechJeb_Docking_status3"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString());//"Moving at <<1>> m/s to get on the correct side of the target. (lat: <<2>> m/s)" " is 195.
Long Statement,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,Drive,The length of the statement  "                    status = Localizer.Format("#MechJeb_Docking_status5"' zApproachSpeed.ToString("F2"));//"Moving toward the starting point at " +  + " m/s." " is 138.
Long Statement,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,Drive,The length of the statement  "                    if (((zSep <= lateralSep.magnitude * 10) || (timeToTargetSize <= timeToAxis * 10)) && (timeToAxis > 0 && timeToTargetSize > 0)) " is 127.
Long Statement,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,Drive,The length of the statement  "                    status = Localizer.Format("#MechJeb_Docking_status6"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString("F2"));//"Moving forward to dock at <<1>> / <<2>> m/s." " is 165.
Long Statement,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,Drive,The length of the statement  "                core.attitude.attitudeTo(Quaternion.LookRotation(vessel.GetTransform().up' -vessel.GetTransform().forward)' AttitudeReference.INERTIAL' this); " is 142.
Long Statement,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,Drive,The length of the statement  "                    core.attitude.attitudeTo(Quaternion.LookRotation(Vector3d.back' Vector3d.up) * Quaternion.AngleAxis(-(float)rol' Vector3d.back)' AttitudeReference.TARGET_ORIENTATION' this); " is 173.
Long Statement,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,Drive,The length of the statement  "            // Purpose of of this section is to compensate for relative velocities because the docking code does poorly with very low speed limits " is 134.
Long Statement,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,InitDocking,The length of the statement  "                // What's really needed here is code that compares bounding box positions to determine if we just try to back up or change sides completely. " is 140.
Long Statement,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowGUI,The length of the statement  "            if (vessel.GetReferenceTransformPart() == null || !vessel.GetReferenceTransformPart().Modules.Contains("ModuleDockingNode")) " is 124.
Long Statement,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowGUI,The length of the statement  "                GUILayout.Label(Localizer.Format("#MechJeb_Docking_label2")'s);//Warning: You need to control the vessel from a docking port. Right click a docking port and select "Control from here" " is 183.
Long Statement,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowGUI,The length of the statement  "                GUILayout.Label(Localizer.Format("#MechJeb_Docking_label3")' s);//Warning: target is not a docking port. Right click the target docking port and select "Set as target" " is 167.
Long Statement,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowGUI,The length of the statement  "            foreach (ITargetable node in vessel.GetTargetables().Where(t => t.GetTargetingMode() == VesselTargetModes.DirectionVelocityAndOrientation)) " is 139.
Long Statement,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowGUI,The length of the statement  "                GUILayout.Label(Localizer.Format("#MechJeb_Docking_label4")' s);//Warning: this vessel is not controlled from a docking node. Right click the desired docking node on this vessel and select "Control from here." " is 209.
Long Statement,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowGUI,The length of the statement  "            bool active = GUILayout.Toggle(autopilot.enabled' Localizer.Format("#MechJeb_Docking_checkbox1"));// "Autopilot enabled" " is 120.
Long Statement,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowGUI,The length of the statement  "            autopilot.overrideSafeDistance = GUILayout.Toggle(autopilot.overrideSafeDistance' Localizer.Format("#MechJeb_Docking_checkbox2"));//"Override Safe Distance" " is 156.
Long Statement,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowGUI,The length of the statement  "                GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_Docking_checkbox3")' autopilot.overridenSafeDistance' "m");//"Safe Distance" " is 126.
Long Statement,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowGUI,The length of the statement  "            autopilot.overrideTargetSize = GUILayout.Toggle(autopilot.overrideTargetSize' Localizer.Format("#MechJeb_Docking_checkbox4"));//"Override Start Distance" " is 153.
Long Statement,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowGUI,The length of the statement  "                GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_Docking_label6")' autopilot.overridenTargetSize' "m");//"Start Distance" " is 122.
Long Statement,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowGUI,The length of the statement  "            autopilot.drawBoundingBox = GUILayout.Toggle(autopilot.drawBoundingBox' Localizer.Format("#MechJeb_Docking_checkbox5"));//"Draw Bounding Box" " is 141.
Long Statement,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowGUI,The length of the statement  "            GUILayout.Label(Localizer.Format("#MechJeb_Docking_label7"' autopilot.safeDistance.ToString("F2"))' GUILayout.ExpandWidth(false));//"safeDistance " " is 147.
Long Statement,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowGUI,The length of the statement  "            GUILayout.Label(Localizer.Format("#MechJeb_Docking_label8"' autopilot.targetSize.ToString("F2"))' GUILayout.ExpandWidth(false));//"targetSize   " " is 145.
Long Statement,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowGUI,The length of the statement  "            autopilot.forceRol = GUILayout.Toggle(autopilot.forceRol' Localizer.Format("#MechJeb_Docking_checkbox6")' GUILayout.ExpandWidth(false));//"Force Roll :" " is 152.
Long Statement,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowGUI,The length of the statement  "                GUILayout.Label(Localizer.Format("#MechJeb_Docking_label13"' autopilot.zSep.ToString("F2")) + "m");//Distance Dock: <<1>> " is 121.
Long Statement,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowGUI,The length of the statement  "                GUILayout.Label(Localizer.Format("#MechJeb_Docking_label14"' autopilot.lateralSep.magnitude.ToString("F2")) + "m");//Distance Dock Axis: <<1>> " is 142.
Long Statement,MuMech,MechJebModuleFlightRecorder,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorder.cs,DistanceFromMark,The length of the statement  "            return Vector3d.Distance(vesselState.CoM' FlightGlobals.Bodies[markBodyIndex].GetWorldSurfacePosition(markLatitude' markLongitude' markAltitude) - FlightGlobals.Bodies[markBodyIndex].position); " is 193.
Long Statement,MuMech,MechJebModuleFlightRecorder,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorder.cs,OnFixedUpdate,The length of the statement  "            steeringLosses += vesselState.deltaT * vesselState.currentThrustAccel * (1 - Vector3d.Dot(vesselState.orbitalVelocity.normalized' vesselState.forward)); " is 152.
Long Statement,MuMech,MechJebModuleFlightRecorder,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorder.cs,OnFixedUpdate,The length of the statement  "            double circularPeriod = 2 * Math.PI * vesselState.radius / OrbitalManeuverCalculator.CircularOrbitSpeed(mainBody' vesselState.radius); " is 134.
Long Statement,MuMech,MechJebModuleFlightRecorder,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorder.cs,OnFixedUpdate,The length of the statement  "            double angleTraversed = (vesselState.longitude - markLongitude) + 360 * (vesselState.time - markUT) / part.vessel.mainBody.rotationPeriod; " is 138.
Long Statement,MuMech,MechJebModuleFlightRecorder,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorder.cs,OnFixedUpdate,The length of the statement  "                //    print("WRP " + historyIdx + " " + history[historyIdx].downRange.ToString("F0") + " " + history[historyIdx].AoA.ToString("F2")); " is 133.
Long Statement,MuMech,MechJebModuleFlightRecorder,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorder.cs,OnFixedUpdate,The length of the statement  "                //    print("STD " + historyIdx + " " + history[historyIdx].downRange.ToString("F0") + " " + history[historyIdx].AoA.ToString("F2")); " is 133.
Long Statement,MuMech,MechJebModuleFlightRecorder,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorder.cs,DumpCSV,The length of the statement  "            string vesselName = vessel != null ? string.Join("_"' vessel.vesselName.Split(System.IO.Path.GetInvalidFileNameChars())) : ""; " is 126.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            if (oldMainBody != mainBody || lastMaximumAltitude != graphStates[(int)recordType.AltitudeASL].maximum || height != backgroundTexture.height) " is 141.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            if (GUILayout.Button(paused ? Localizer.Format("#MechJeb_Flightrecord_Button1_1") : Localizer.Format("#MechJeb_Flightrecord_Button1_2")' GUILayout.ExpandWidth(false)))//"Resume""Pause" " is 184.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            if (GUILayout.Button(downrange ? Localizer.Format("#MechJeb_Flightrecord_Button2_1") : Localizer.Format("#MechJeb_Flightrecord_Button2_2")' GUILayout.ExpandWidth(false)))//"Downrange""Time" " is 189.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            //GUILayout.Label("Size " + (8 * typeCount * recorder.history.Length >> 10).ToString() + "kB"' GUILayout.ExpandWidth(false)); " is 125.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            GUILayout.Label(Localizer.Format("#MechJeb_Flightrecord_Label1"' GuiUtils.TimeToDHMS(recorder.timeSinceMark))' GUILayout.ExpandWidth(false));//Time <<1>> " is 153.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            GUILayout.Label(Localizer.Format("#MechJeb_Flightrecord_Label2"' MuUtils.ToSI(recorder.history[recorder.historyIdx].downRange' -2)) + "m"' GUILayout.ExpandWidth(false));//Downrange <<1>> " is 186.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            autoScale = GUILayout.Toggle(autoScale' Localizer.Format("#MechJeb_Flightrecord_checkbox1")' GUILayout.ExpandWidth(false));//Auto Scale " is 135.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            float maxX = (float)(downrange ? recorder.maximums[(int)recordType.DownRange] : recorder.maximums[(int)recordType.TimeSinceMark]); " is 130.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            GUILayout.Label((downrange ? MuUtils.ToSI(scaleX' -1' 2) + "m/px" : GuiUtils.TimeToDHMS(scaleX' 1) + "/px")' GUILayout.ExpandWidth(false)); " is 139.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            realAtmo = GUILayout.Toggle(realAtmo' Localizer.Format("#MechJeb_Flightrecord_checkbox2")' GUILayout.ExpandWidth(false));//Real Atmo " is 132.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            GUILayout.Label(Localizer.Format("#MechJeb_Flightrecord_Label3"' (100 * (recorder.historyIdx) / (float)recorder.history.Length).ToString("F1"))' GUILayout.ExpandWidth(false));//Storage: <<1>> % " is 193.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            stages = GUILayout.Toggle(stages'Localizer.Format("#MechJeb_Flightrecord_checkbox3") ' GUILayout.ExpandWidth(false));//"Stages" " is 127.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            graphStates[(int)recordType.AltitudeASL].display = GUILayout.Toggle(graphStates[(int)recordType.AltitudeASL].display' Localizer.Format("#MechJeb_Flightrecord_checkbox4")' GUILayout.ExpandWidth(false));//"Altitude" " is 213.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            graphStates[(int)recordType.AltitudeTrue].display = GUILayout.Toggle(graphStates[(int)recordType.AltitudeTrue].display' Localizer.Format("#MechJeb_Flightrecord_checkbox5")' GUILayout.ExpandWidth(false));//"True Altitude" " is 220.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            graphStates[(int)recordType.Acceleration].display = GUILayout.Toggle(graphStates[(int)recordType.Acceleration].display' Localizer.Format("#MechJeb_Flightrecord_checkbox6")' GUILayout.ExpandWidth(false));//"Acceleration" " is 219.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            graphStates[(int)recordType.SpeedSurface].display = GUILayout.Toggle(graphStates[(int)recordType.SpeedSurface].display' Localizer.Format("#MechJeb_Flightrecord_checkbox7")' GUILayout.ExpandWidth(false));//"Surface speed" " is 220.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            graphStates[(int)recordType.SpeedOrbital].display = GUILayout.Toggle(graphStates[(int)recordType.SpeedOrbital].display' Localizer.Format("#MechJeb_Flightrecord_checkbox8")' GUILayout.ExpandWidth(false));//"Orbital speed" " is 220.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            graphStates[(int)recordType.Mass].display = GUILayout.Toggle(graphStates[(int)recordType.Mass].display' Localizer.Format("#MechJeb_Flightrecord_checkbox9")' GUILayout.ExpandWidth(false));//"Mass" " is 195.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            graphStates[(int)recordType.Q].display = GUILayout.Toggle(graphStates[(int)recordType.Q].display' Localizer.Format("#MechJeb_Flightrecord_checkbox10")' GUILayout.ExpandWidth(false));//"Q" " is 187.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            graphStates[(int)recordType.AoA].display = GUILayout.Toggle(graphStates[(int)recordType.AoA].display' Localizer.Format("#MechJeb_Flightrecord_checkbox11")' GUILayout.ExpandWidth(false));//"AoA" " is 193.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            graphStates[(int)recordType.AoS].display = GUILayout.Toggle(graphStates[(int)recordType.AoS].display' Localizer.Format("#MechJeb_Flightrecord_checkbox12")' GUILayout.ExpandWidth(false));//"AoS" " is 193.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            graphStates[(int)recordType.AoD].display = GUILayout.Toggle(graphStates[(int)recordType.AoD].display' Localizer.Format("#MechJeb_Flightrecord_checkbox13")' GUILayout.ExpandWidth(false));//"AoD" " is 193.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            graphStates[(int)recordType.Pitch].display = GUILayout.Toggle(graphStates[(int)recordType.Pitch].display' Localizer.Format("#MechJeb_Flightrecord_checkbox14")' GUILayout.ExpandWidth(false));//"Pitch" " is 199.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            graphStates[(int)recordType.DeltaVExpended].display = GUILayout.Toggle(graphStates[(int)recordType.DeltaVExpended].display' "∆V"' GUILayout.ExpandWidth(false)); " is 160.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            graphStates[(int)recordType.GravityLosses].display = GUILayout.Toggle(graphStates[(int)recordType.GravityLosses].display' Localizer.Format("#MechJeb_Flightrecord_checkbox15")' GUILayout.ExpandWidth(false));//"Gravity Loss" " is 222.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            graphStates[(int)recordType.DragLosses].display = GUILayout.Toggle(graphStates[(int)recordType.DragLosses].display'  Localizer.Format("#MechJeb_Flightrecord_checkbox16")' GUILayout.ExpandWidth(false));//"Drag Loss" " is 214.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            graphStates[(int)recordType.SteeringLosses].display = GUILayout.Toggle(graphStates[(int)recordType.SteeringLosses].display' Localizer.Format("#MechJeb_Flightrecord_checkbox17")' GUILayout.ExpandWidth(false));//"Steering Loss" " is 225.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "            //GUILayout.Label("X " + MuUtils.ToSI(hPos' -1' 2) + " " + MuUtils.ToSI(hPos + scaleX * width' -1' 2)' GUILayout.Width(110)); " is 125.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                //if (GUILayout.Toggle(scaleIdx == (int)recordType.AltitudeASL' "ASL " + MuUtils.ToSI(graphStates[(int)recordType.AltitudeASL].minimum' -1' 3) + " " + MuUtils.ToSI(graphStates[(int)recordType.AltitudeASL].maximum' -1' 3)' GUILayout.ExpandWidth(true))) " is 251.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                if (GUILayout.Toggle(scaleIdx == (int)recordType.AltitudeASL' Localizer.Format("#MechJeb_Flightrecord_checkbox18")' GUILayout.ExpandWidth(true)))//"ASL" " is 152.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                //if (GUILayout.Toggle(scaleIdx == (int)recordType.AltitudeTrue' "AGL " + MuUtils.ToSI(graphStates[(int)recordType.AltitudeTrue].minimum' -1' 3) + " " + MuUtils.ToSI(graphStates[(int)recordType.AltitudeTrue].maximum' -1' 3)' GUILayout.ExpandWidth(true))) " is 254.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                if (GUILayout.Toggle(scaleIdx == (int)recordType.AltitudeTrue' Localizer.Format("#MechJeb_Flightrecord_checkbox19")' GUILayout.ExpandWidth(true)))//"AGL" " is 153.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                //if (GUILayout.Toggle(scaleIdx == (int)recordType.Acceleration' "Acc " + MuUtils.ToSI(graphStates[(int)recordType.Acceleration].minimum' -1' 3) + " " + MuUtils.ToSI(graphStates[(int)recordType.Acceleration].maximum' -1' 3)' GUILayout.ExpandWidth(true))) " is 254.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                if (GUILayout.Toggle(scaleIdx == (int)recordType.Acceleration' Localizer.Format("#MechJeb_Flightrecord_checkbox20")' GUILayout.ExpandWidth(true)))// "Acc" " is 154.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                //if (GUILayout.Toggle(scaleIdx == (int)recordType.SpeedSurface' "SrfVel " + MuUtils.ToSI(graphStates[(int)recordType.SpeedSurface].minimum' -1' 3) + " " + MuUtils.ToSI(graphStates[(int)recordType.SpeedSurface].maximum' -1' 3)' GUILayout.ExpandWidth(true))) " is 257.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                if (GUILayout.Toggle(scaleIdx == (int)recordType.SpeedSurface' Localizer.Format("#MechJeb_Flightrecord_checkbox21")' GUILayout.ExpandWidth(true)))//"SrfVel" " is 156.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                //if (GUILayout.Toggle(scaleIdx == (int)recordType.SpeedOrbital' "ObtVel " + MuUtils.ToSI(graphStates[(int)recordType.SpeedOrbital].minimum' -1' 3) + " " + MuUtils.ToSI(graphStates[(int)recordType.SpeedOrbital].maximum' -1' 3)' GUILayout.ExpandWidth(true))) " is 257.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                if (GUILayout.Toggle(scaleIdx == (int)recordType.SpeedOrbital' Localizer.Format("#MechJeb_Flightrecord_checkbox22")' GUILayout.ExpandWidth(true)))//"ObtVel" " is 156.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                //if (GUILayout.Toggle(scaleIdx == (int)recordType.Mass' "Mass " + MuUtils.ToSI(graphStates[(int)recordType.Mass].minimum' -1' 3) + " " + MuUtils.ToSI(graphStates[(int)recordType.Mass].maximum' -1' 3)' GUILayout.ExpandWidth(true))) " is 231.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                if (GUILayout.Toggle(scaleIdx == (int)recordType.Mass' Localizer.Format("#MechJeb_Flightrecord_checkbox23")' GUILayout.ExpandWidth(true)))//"Mass" " is 146.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                //if (GUILayout.Toggle(scaleIdx == (int)recordType.Q' "Q " + MuUtils.ToSI(graphStates[(int)recordType.Q].minimum' -1' 3) + " " + MuUtils.ToSI(graphStates[(int)recordType.Q].maximum' -1' 3)' GUILayout.ExpandWidth(true))) " is 219.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                if (GUILayout.Toggle(scaleIdx == (int)recordType.Q' Localizer.Format("#MechJeb_Flightrecord_checkbox24")' GUILayout.ExpandWidth(true)))//"Q" " is 140.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                //if (GUILayout.Toggle(scaleIdx == (int)recordType.AoA' "AoA " + MuUtils.ToSI(graphStates[(int)recordType.AoA].minimum' -1' 3) + " " + MuUtils.ToSI(graphStates[(int)recordType.AoA].maximum' -1' 3)' GUILayout.ExpandWidth(true))) " is 227.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                if (GUILayout.Toggle(scaleIdx == (int)recordType.AoA' Localizer.Format("#MechJeb_Flightrecord_checkbox25")' GUILayout.ExpandWidth(true)))//"AoA" " is 144.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                //if (GUILayout.Toggle(scaleIdx == (int)recordType.AoS' "AoS " + MuUtils.ToSI(graphStates[(int)recordType.AoS].minimum' -1' 3) + " " + MuUtils.ToSI(graphStates[(int)recordType.AoS].maximum' -1' 3)' GUILayout.ExpandWidth(true))) " is 227.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                if (GUILayout.Toggle(scaleIdx == (int)recordType.AoS' Localizer.Format("#MechJeb_Flightrecord_checkbox26")' GUILayout.ExpandWidth(true)))//"AoS" " is 144.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                //if (GUILayout.Toggle(scaleIdx == (int)recordType.AoD' "AoD " + MuUtils.ToSI(graphStates[(int)recordType.AoD].minimum' -1' 3) + " " + MuUtils.ToSI(graphStates[(int)recordType.AoD].maximum' -1' 3)' GUILayout.ExpandWidth(true))) " is 227.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                if (GUILayout.Toggle(scaleIdx == (int)recordType.AoD' Localizer.Format("#MechJeb_Flightrecord_checkbox27")' GUILayout.ExpandWidth(true)))//"AoD" " is 144.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                //if (GUILayout.Toggle(scaleIdx == (int)recordType.Pitch' "Pitch " + MuUtils.ToSI(graphStates[(int)recordType.Pitch].minimum' -1' 3) + " " + MuUtils.ToSI(graphStates[(int)recordType.Pitch].maximum' -1' 3)' GUILayout.ExpandWidth(true))) " is 235.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                if (GUILayout.Toggle(scaleIdx == (int)recordType.Pitch' Localizer.Format("#MechJeb_Flightrecord_checkbox28")' GUILayout.ExpandWidth(true)))//"Pitch" " is 148.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                //if (GUILayout.Toggle(scaleIdx == (int)recordType.DeltaVExpended' "DeltaVExpended " + MuUtils.ToSI(graphStates[(int)recordType.DeltaVExpended].minimum' -1' 3) + " " + MuUtils.ToSI(graphStates[(int)recordType.DeltaVExpended].maximum' -1' 3)' GUILayout.ExpandWidth(true))) " is 271.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                //if (GUILayout.Toggle(scaleIdx == (int)recordType.GravityLosses' "GravityLosses " + MuUtils.ToSI(graphStates[(int)recordType.GravityLosses].minimum' -1' 3) + " " + MuUtils.ToSI(graphStates[(int)recordType.GravityLosses].maximum' -1' 3)' GUILayout.ExpandWidth(true))) " is 267.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                if (GUILayout.Toggle(scaleIdx == (int)recordType.GravityLosses' Localizer.Format("#MechJeb_Flightrecord_checkbox29")' GUILayout.ExpandWidth(true)))//"Gravity Loss" " is 163.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                //if (GUILayout.Toggle(scaleIdx == (int)recordType.DragLosses' "DragLosses " + MuUtils.ToSI(graphStates[(int)recordType.DragLosses].minimum' -1' 3) + " " + MuUtils.ToSI(graphStates[(int)recordType.DragLosses].maximum' -1' 3)' GUILayout.ExpandWidth(true))) " is 255.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                if (GUILayout.Toggle(scaleIdx == (int)recordType.DragLosses' Localizer.Format("#MechJeb_Flightrecord_checkbox30")' GUILayout.ExpandWidth(true)))//"Drag Loss" " is 157.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                //if (GUILayout.Toggle(scaleIdx == (int)recordType.SteeringLosses' "SteeringLosses " + MuUtils.ToSI(graphStates[(int)recordType.SteeringLosses].minimum' -1' 3) + " " + MuUtils.ToSI(graphStates[(int)recordType.SteeringLosses].maximum' -1' 3)' GUILayout.ExpandWidth(true))) " is 271.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                if (GUILayout.Toggle(scaleIdx == (int)recordType.SteeringLosses' Localizer.Format("#MechJeb_Flightrecord_checkbox31")' GUILayout.ExpandWidth(true)))//"Steering Loss" " is 165.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The length of the statement  "                //    MechJebModuleAscentPathEditor.DrawnPath(r' (float)hScale' (float)graphStates[(int)recordType.AltitudeASL].scale' path' Color.gray); " is 137.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,DrawScaleLabels,The length of the statement  "                GUI.Label(new Rect(r.xMin - w' yBase - (float)(invScaleY * state.labelsPos[i]) - h * 0.5f' w' h)' state.labels[i]' centeredStyle); " is 130.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,DrawnPath,The length of the statement  "                (xBase + (float)((downRange ? recorder.history[t].downRange : recorder.history[t].timeSinceMark) * invScaleX)) <= r.xMin) " is 121.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,DrawnPath,The length of the statement  "            Vector2 p1 = new Vector2(xBase + (float)((downRange ? recorder.history[t].downRange : recorder.history[t].timeSinceMark) * invScaleX)' yBase - (float)(recorder.history[t][type] * invScaleY)); " is 191.
Long Statement,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,ResetScale,The length of the statement  "            graphStates[(int)recordType.AltitudeASL].maximum = mainBody != null && mainBody.atmosphere ? mainBody.RealMaxAtmosphereAltitude() : 10000.0; " is 140.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,MaximumVesselMass,The length of the statement  "            SpaceCenterFacility rolloutFacility = (EditorDriver.editorFacility == EditorFacility.VAB) ? SpaceCenterFacility.LaunchPad : SpaceCenterFacility.Runway; " is 151.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,MaximumVesselMass,The length of the statement  "            float maximumVesselMass = GameVariables.Instance.GetCraftMassLimit(ScenarioUpgradeableFacilities.GetFacilityLevel(rolloutFacility)' EditorDriver.editorFacility == EditorFacility.VAB); " is 183.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,MinThrust,The length of the statement  "                return 1000 * engines.Sum(e => (e.throttleLocked ? e.minThrust + e.thrustPercentage / 100f * (e.maxThrust - e.minThrust) : e.minThrust)); " is 137.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,MaxPartCount,The length of the statement  "            int maxPartCount = GameVariables.Instance.GetPartCountLimit(editorFacilityLevel' EditorDriver.editorFacility == EditorFacility.VAB); " is 132.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,TargetTimeToClosestApproach,The length of the statement  "            if (core.target.Target != null && vesselState.altitudeTrue < 1000.0) { return GuiUtils.TimeToDHMS(GuiUtils.FromToETA(vessel.CoM' core.target.Transform.position)); } " is 164.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,TargetTimeToClosestApproach,The length of the statement  "            return GuiUtils.TimeToDHMS(orbit.NextClosestApproachTime(core.target.TargetOrbit' vesselState.time) - vesselState.time); " is 120.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The length of the statement  "            if (GUILayout.Button(showEmpty ?  Localizer.Format("#MechJeb_InfoItems_showEmpty") :Localizer.Format("#MechJeb_InfoItems_hideEmpty")' GUILayout.ExpandWidth(false))) " is 164.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The length of the statement  "                if (GUILayout.Button(liveSLT ?  Localizer.Format("#MechJeb_InfoItems_button5") :Localizer.Format("#MechJeb_InfoItems_button6")' GUILayout.ExpandWidth(false)))//"Live SLT" "0Alt SLT" " is 181.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The length of the statement  "                    showInitialMass = showFinalMass = showVacInitialTWR = showAtmoInitialTWR = showVacMaxTWR = showAtmoMaxTWR = showVacDeltaV = showTime = showAtmoDeltaV = true; " is 157.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The length of the statement  "                    showInitialMass = showFinalMass = showStagedMass = showBurnedMass = showVacInitialTWR = showAtmoInitialTWR = showAtmoMaxTWR = showVacMaxTWR = showVacDeltaV = showTime = showAtmoDeltaV = showISP = true; " is 201.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The length of the statement  "            if (showInitialMass) noChange &= showInitialMass = !DrawStageStatsColumn(Localizer.Format("#MechJeb_InfoItems_StatsColumn1")' stages.Select(s => atmoStats[s].startMass.ToString("F3") + " t"));//"Start Mass" " is 206.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The length of the statement  "            if (showFinalMass) noChange &= showFinalMass = !DrawStageStatsColumn(Localizer.Format("#MechJeb_InfoItems_StatsColumn2")' stages.Select(s => atmoStats[s].endMass.ToString("F3") + " t"));//"End mass" " is 198.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The length of the statement  "            if (showStagedMass) noChange &= showStagedMass = !DrawStageStatsColumn(Localizer.Format("#MechJeb_InfoItems_StatsColumn3")' stages.Select(s => atmoStats[s].stagedMass.ToString("F3") + " t"));//"Staged Mass" " is 206.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The length of the statement  "            if (showBurnedMass) noChange &= showBurnedMass = !DrawStageStatsColumn(Localizer.Format("#MechJeb_InfoItems_StatsColumn4")' stages.Select(s => atmoStats[s].resourceMass.ToString("F3") + " t"));//"Burned Mass" " is 208.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The length of the statement  "            if (showVacInitialTWR) noChange &= showVacInitialTWR = !DrawStageStatsColumn(Localizer.Format("#MechJeb_InfoItems_StatsColumn5")' stages.Select(s => vacStats[s].StartTWR(geeASL).ToString("F2")));//"TWR" " is 202.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The length of the statement  "            if (showVacMaxTWR) noChange &= showVacMaxTWR = !DrawStageStatsColumn(Localizer.Format("#MechJeb_InfoItems_StatsColumn6")' stages.Select(s => vacStats[s].MaxTWR(geeASL).ToString("F2")));//"Max TWR" " is 196.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The length of the statement  "            if (showAtmoInitialTWR) noChange &= showAtmoInitialTWR = !DrawStageStatsColumn(Localizer.Format("#MechJeb_InfoItems_StatsColumn7")' stages.Select(s => atmoStats[s].StartTWR(geeASL).ToString("F2")));//"SLT" " is 205.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The length of the statement  "            if (showAtmoMaxTWR) noChange &= showAtmoMaxTWR = !DrawStageStatsColumn(Localizer.Format("#MechJeb_InfoItems_StatsColumn8")' stages.Select(s => atmoStats[s].MaxTWR(geeASL).ToString("F2")));//"Max SLT" " is 199.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The length of the statement  "            if (showISP) noChange &= showISP = !DrawStageStatsColumn(Localizer.Format("#MechJeb_InfoItems_StatsColumn9")' stages.Select(s => atmoStats[s].isp.ToString("F2")));//"ISP" " is 170.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The length of the statement  "            if (showAtmoDeltaV) noChange &= showAtmoDeltaV = !DrawStageStatsColumn(Localizer.Format("#MechJeb_InfoItems_StatsColumn10")' stages.Select(s => atmoStats[s].deltaV.ToString("F0") + " m/s"));//"Atmo ΔV" " is 201.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The length of the statement  "            if (showVacDeltaV) noChange &= showVacDeltaV = !DrawStageStatsColumn(Localizer.Format("#MechJeb_InfoItems_StatsColumn11")' stages.Select(s => vacStats[s].deltaV.ToString("F0") + " m/s"));//"Vac ΔV" " is 197.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The length of the statement  "            if (showTime) noChange &= showTime = !DrawStageStatsColumn(Localizer.Format("#MechJeb_InfoItems_StatsColumn12")' stages.Select(s => timeSeconds ? MuUtils.ToSI(atmoStats[s].deltaTime' 2) + " s": GuiUtils.TimeToDHMS(atmoStats[s].deltaTime' 1)));//"Time" " is 251.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,DockingGuidanceAngularVelocity,The length of the statement  "            Vector3d relw = Quaternion.Inverse(vessel.ReferenceTransform.rotation) * (target.angularVelocity - vessel.angularVelocity) * Mathf.Rad2Deg; " is 139.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllPlanetPhaseAngles,The length of the statement  "            GUILayout.Label(Localizer.Format("#MechJeb_InfoItems_label6")' new GUIStyle(GUI.skin.label) { alignment = TextAnchor.MiddleCenter });//"Planet phase angles" " is 156.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllMoonPhaseAngles,The length of the statement  "            GUILayout.Label(Localizer.Format("#MechJeb_InfoItems_label7")' new GUIStyle(GUI.skin.label) { alignment = TextAnchor.MiddleCenter });//"Moon phase angles" " is 154.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,CurrentBiome,The length of the statement  "                    return mainBody.displayName + (biome == "" ? Localizer.Format("#MechJeb_InfoItems_VesselSituation5") : biome);//"'s surface" " is 124.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,CurrentBiome,The length of the statement  "                    return mainBody.displayName + (biome == "" ? Localizer.Format("#MechJeb_InfoItems_VesselSituation6") : biome);//"'s oceans" " is 123.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,CurrentBiome,The length of the statement  "                        return Localizer.Format("#MechJeb_InfoItems_VesselSituation2"' mainBody.displayName + biome);//"Upper atmosphere of <<1>>" " is 122.
Long Statement,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,LatLonClipbardCopy,The length of the statement  "                string result = "latitude =  " + vesselState.latitude.ToString("F6") + "\nlongitude = " + vesselState.longitude.ToString("F6") + " is 128.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,Drive,The length of the statement  "            predictor.descentSpeedPolicy = PickDescentSpeedPolicy(); //create a separate IDescentSpeedPolicy object for the simulation " is 122.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ComputeCourseCorrection,The length of the statement  "            Vector3d[] perturbationDirections = { vesselState.surfaceVelocity.normalized' vesselState.radialPlusSurface' vesselState.normalPlusSurface }; " is 141.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ComputeCourseCorrection,The length of the statement  "                const double perturbationDeltaV = 1; //warning: hard experience shows that setting this too low leads to bewildering bugs due to finite precision of Orbit functions " is 164.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ComputeCourseCorrection,The length of the statement  "                Orbit perturbedOrbit = orbit.PerturbedOrbit(vesselState.time' perturbationDeltaV * perturbationDirections[i]); //compute the perturbed orbit " is 140.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ComputeCourseCorrection,The length of the statement  "                if (perturbedOrbit.PeR < endRadius) perturbedLandingTime = perturbedOrbit.NextTimeOfRadius(vesselState.time' endRadius); " is 120.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ComputeCourseCorrection,The length of the statement  "                Vector3d perturbedLandingPosition = perturbedOrbit.SwappedRelativePositionAtUT(perturbedLandingTime); //find where it hits the planet " is 133.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ComputeCourseCorrection,The length of the statement  "                Vector3d landingDelta = perturbedLandingPosition - orbitLandingPosition; //find the difference between that and the original orbit's intersection point " is 151.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ComputeCourseCorrection,The length of the statement  "                landingDelta = convertOrbitToActual * landingDelta; //rotate that difference vector so that we can now think of it as starting at the actual landing position " is 157.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ComputeCourseCorrection,The length of the statement  "                landingDelta = Vector3d.Exclude(actualLandingPosition' landingDelta); //project the difference vector onto the plane tangent to the actual landing position " is 155.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ComputeCourseCorrection,The length of the statement  "                deltas[i] = landingDelta / perturbationDeltaV; //normalize by the delta-V considered' so that deltas now has units of meters per (meter/second) [i.e.' seconds] " is 159.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ComputeCourseCorrection,The length of the statement  "            Vector3d desiredLandingPosition = mainBody.GetWorldSurfacePosition(core.target.targetLatitude' core.target.targetLongitude' 0) - mainBody.position; " is 147.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ComputeCourseCorrection,The length of the statement  "            Quaternion bodyRotationDuringFall = Quaternion.AngleAxis(bodyRotationAngleDuringDescent' mainBody.angularVelocity.normalized); " is 126.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ControlParachutes,The length of the statement  "            // Are there any deployable parachute? If not then there is no point in us being here. Let's switch to cruising to the deceleration burn instead. " is 145.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,DeployParachutes,The length of the statement  "                    // what is the ASL at which we should deploy this parachute? It is the actual deployment height above the surface + the ASL of the predicted landing point. " is 155.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,DeployParachutes,The length of the statement  "                        //Debug.Log("Deploying parachute " + p.name + " at " + ASLDeployAltitude + ". (" + LandingSiteASL + " + " + ParachuteDeployAboveGroundAtLandingSite +")"); " is 154.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ParachutesDeployable,The length of the statement  "                if (Math.Max(p.part.inverseStage'0) >= limitChutesStage && p.deploymentState == ModuleParachute.deploymentStates.STOWED) " is 120.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,PickDescentSpeedPolicy,The length of the statement  "                return new PoweredCoastDescentSpeedPolicy(mainBody.Radius + DecelerationEndAltitude()' mainBody.GeeASL * 9.81' vesselState.limitedMaxThrustAccel); " is 146.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,PickDescentSpeedPolicy,The length of the statement  "            return new SafeDescentSpeedPolicy(mainBody.Radius + DecelerationEndAltitude()' mainBody.GeeASL * 9.81' vesselState.limitedMaxThrustAccel); " is 138.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,DecelerationEndAltitude,The length of the statement  "                double landingSiteDragLength = mainBody.DragLength(LandingAltitude' vesselAverageDrag + ParachuteAddedDragCoef()' vesselState.mass); " is 132.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,UseAtmosphereToBrake,The length of the statement  "            double landingSiteDragLength = mainBody.DragLength(LandingAltitude' vesselAverageDrag + ParachuteAddedDragCoef()' vesselState.mass); " is 132.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,UseAtmosphereToBrake,The length of the statement  "            if (mainBody.RealMaxAtmosphereAltitude() > 0 && landingSiteDragLength < 0.7 * mainBody.RealMaxAtmosphereAltitude()) // the ratio is totally arbitrary until I get something better " is 178.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,VesselAverageDrag,The length of the statement  "                    partAreaDrag = part.DragCubes.WeightedDrag[f] * part.DragCubes.AreaOccluded[f]; // * PhysicsGlobals.DragCurveValue(0.5' machNumber) but I ll assume it is 1 for now " is 163.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ParachuteControlInfo,The length of the statement  "                string retVal = Localizer.Format("#MechJeb_ChuteMultiplier"' this.parachutePlan.Multiplier.ToString("F7"));//"'Chute Multiplier: " +  " is 132.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ParachuteControlInfo,The length of the statement  "                retVal += Localizer.Format("#MechJeb_MultiplierQuality"' this.parachutePlan.MultiplierQuality.ToString("F1"));//"\nMultiplier Quality: " +  + "%" " is 145.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ParachuteControlInfo,The length of the statement  "                retVal += Localizer.Format("#MechJeb_Usingpredictions"' this.parachutePlan.MultiplierDataAmount);//"\nUsing " +  + " predictions" " is 129.
Long Statement,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,SetTargetKSC,The length of the statement  "            core.target.SetPositionTarget(mainBody' MechJebModuleLandingGuidance.landingSites[0].latitude' MechJebModuleLandingGuidance.landingSites[0].longitude); " is 151.
Long Statement,MuMech,ParachutePlan,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,AddResult,The length of the statement  "            double overshoot = newResult.GetOvershoot(this.autoPilot.core.target.targetLatitude' this.autoPilot.core.target.targetLongitude); " is 129.
Long Statement,MuMech,ParachutePlan,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,AddResult,The length of the statement  "            //Debug.Log("overshoot: " + overshoot.ToString("F2") + " multiplier: " + newResult.parachuteMultiplier.ToString("F4") + " hasError:" + newResult.multiplierHasError); " is 165.
Long Statement,MuMech,ParachutePlan,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,AddResult,The length of the statement  "            // What is the correlation coefficent of the data. If it is weak a correlation then we will dismiss the dataset and use it to change the current multiplier " is 155.
Long Statement,MuMech,ParachutePlan,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,AddResult,The length of the statement  "                // If the correlation is less that 0 then we will give up controlling the parachutes and throw away the dataset. Also check that we have got several bits of data' just in case we get two datapoints that are badly correlated. " is 224.
Long Statement,MuMech,ParachutePlan,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,AddResult,The length of the statement  "                // How much data is there? If just one datapoint then we need to slightly vary the multplier to avoid doing exactly the same multiplier again and getting a divide by zero!. If there is just two then we will not update the multiplier as we can't conclude much from two points of data!   " is 283.
Long Statement,MuMech,ParachutePlan,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,AddResult,The length of the statement  "                        // If there is not enough data then we expect an exception. However we need to vary the multiplier everso slightly so that we get different data in order to start generating data. This should never happen as we have already checked the size of the dataset. " is 256.
Long Statement,MuMech,ParachutePlan,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,StartPlanning,The length of the statement  "            // what is the highest point at which we could semi deploy? - look at all the parachutes in the craft' and consider the lowest semi deployment pressure. " is 152.
Long Statement,MuMech,ParachutePlan,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,StartPlanning,The length of the statement  "                // Although this is called "minSemiDeployPressure" we want to find the largest value for each of our parachutes. This can be used to calculate the corresponding height' and hence a height at which we can be guarenteed that all our parachutes will deploy if asked to. " is 266.
Long Statement,MuMech,ParachutePlan,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,StartPlanning,The length of the statement  "                // TODO is there benefit in running an initial simulation to calculate the height at which the ratio between vertical and horizontal velocity would be the best for being able to deply the chutes to control the landing site? " is 223.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The length of the statement  "                GUILayout.Label(core.target.targetBody.GetExperimentBiomeSafe(core.target.targetLatitude' core.target.targetLongitude)); " is 120.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The length of the statement  "            if (GUILayout.Button(Localizer.Format("#MechJeb_LandingGuidance_button2"))) core.target.PickPositionTargetOnMap();//Pick target on map " is 134.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The length of the statement  "                    core.target.SetPositionTarget(mainBody' availableLandingSites[landingSiteIdx].latitude' availableLandingSites[landingSiteIdx].longitude); " is 137.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The length of the statement  "                    if (GUILayout.Button(Localizer.Format("#MechJeb_LandingGuidance_button4"))) core.landing.LandAtPositionTarget(this);//Land at target " is 132.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The length of the statement  "                    if (GUILayout.Button(Localizer.Format("#MechJeb_LandingGuidance_button5"))) core.landing.LandUntargeted(this);//Land somewhere " is 126.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The length of the statement  "                GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_LandingGuidance_label3")' core.landing.touchdownSpeed' "m/s"' 35);//Touchdown speed: " is 134.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The length of the statement  "                if (core.landing != null) core.node.autowarp = GUILayout.Toggle(core.node.autowarp' Localizer.Format("#MechJeb_LandingGuidance_checkbox1"));//Auto-warp " is 151.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The length of the statement  "                core.landing.deployGears = GUILayout.Toggle(core.landing.deployGears' Localizer.Format("#MechJeb_LandingGuidance_checkbox2"));//Deploy Landing Gear " is 147.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The length of the statement  "                GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_LandingGuidance_label4")' core.landing.limitGearsStage' ""' 35);//"Stage Limit:" " is 130.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The length of the statement  "                core.landing.deployChutes = GUILayout.Toggle(core.landing.deployChutes' Localizer.Format("#MechJeb_LandingGuidance_checkbox3"));//Deploy Parachutes " is 147.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The length of the statement  "                GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_LandingGuidance_label5")' core.landing.limitChutesStage' ""' 35);//Stage Limit: " is 129.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The length of the statement  "                core.landing.rcsAdjustment = GUILayout.Toggle(core.landing.rcsAdjustment' Localizer.Format("#MechJeb_LandingGuidance_checkbox4"));//Use RCS for small adjustment " is 160.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The length of the statement  "                    GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_label7") + (core.landing.CurrentStep != null ? core.landing.CurrentStep.GetType().Name : "N/A"));//Step:  " is 163.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The length of the statement  "                    GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_label8") + (core.landing.descentSpeedPolicy != null ? core.landing.descentSpeedPolicy.GetType().Name : "N/A") + " (" + core.landing.UseAtmosphereToBrake().ToString() + ")");//Mode  " is 238.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,DrawGUITogglePredictions,The length of the statement  "            bool active = GUILayout.Toggle(predictor.enabled' Localizer.Format("#MechJeb_LandingGuidance_checkbox5"));//Show landing predictions " is 132.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,DrawGUITogglePredictions,The length of the statement  "                predictor.makeAerobrakeNodes = GUILayout.Toggle(predictor.makeAerobrakeNodes' Localizer.Format("#MechJeb_LandingGuidance_checkbox6"));//"Show aerobrake nodes" " is 158.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,DrawGUITogglePredictions,The length of the statement  "                predictor.showTrajectory = GUILayout.Toggle(predictor.showTrajectory' Localizer.Format("#MechJeb_LandingGuidance_checkbox7"));//Show trajectory " is 143.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,DrawGUITogglePredictions,The length of the statement  "                predictor.worldTrajectory = GUILayout.Toggle(predictor.worldTrajectory' Localizer.Format("#MechJeb_LandingGuidance_checkbox8"));//World trajectory " is 146.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,DrawGUITogglePredictions,The length of the statement  "                predictor.camTrajectory = GUILayout.Toggle(predictor.camTrajectory' Localizer.Format("#MechJeb_LandingGuidance_checkbox9"));//Camera trajectory (WIP) " is 149.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,DrawGUIPrediction,The length of the statement  "                        GUILayout.Label(Coordinates.ToStringDMS(result.endPosition.latitude' result.endPosition.longitude) + "\nASL:" + MuUtils.ToSI(result.endASL'-1' 4) + "m"); " is 153.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,DrawGUIPrediction,The length of the statement  "                        double error = Vector3d.Distance(mainBody.GetWorldSurfacePosition(result.endPosition.latitude' result.endPosition.longitude' 0) - mainBody.position' " is 148.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,DrawGUIPrediction,The length of the statement  "                                       +Localizer.Format("#MechJeb_LandingGuidance_Label13") + (vessel.Landed ? "0.0s" : GuiUtils.TimeToDHMS(result.endUT - Planetarium.GetUniversalTime()' 1)));//Target difference = \nMax drag: \nDelta-v needed: \nTime to land:  " is 221.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,DrawGUIPrediction,The length of the statement  "                        if (o.eccentricity > 1) GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label15") + o.eccentricity.ToString("F2"));//Hyperbolic' eccentricity =  " is 154.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,DrawGUIPrediction,The length of the statement  "                        GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label16"' result.maxDragGees.ToString("F1"))+Localizer.Format("#MechJeb_LandingGuidance_Label17"' GuiUtils.TimeToDHMS(result.aeroBrakeUT - Planetarium.GetUniversalTime()' 1)));//Max drag:<<1>>g  \nExit atmosphere in: " is 275.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,DrawGUIPrediction,The length of the statement  "                                      + MuUtils.ToSI(orbit.PeA' 3) + "m Pe > " + MuUtils.ToSI(mainBody.RealMaxAtmosphereAltitude()' 3) + (mainBody.atmosphere ? Localizer.Format("#MechJeb_LandingGuidance_Label18_2") : Localizer.Format("#MechJeb_LandingGuidance_Label18_3")));//"Orbit does not reenter:\n""m atmosphere height""m ground" " is 296.
Long Statement,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,InitLandingSitesList,The length of the statement  "                    CelestialBody body = bodyName != null ? FlightGlobals.Bodies.Find(b => b.bodyName == bodyName) : Planetarium.fetch.Home; " is 120.
Long Statement,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,GetErrorResult,The length of the statement  "                    errorResult.endASL = errorResult.body.TerrainAltitude(errorResult.endPosition.latitude' errorResult.endPosition.longitude); " is 123.
Long Statement,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,LandingSimTime,The length of the statement  "            return (stopwatch.ElapsedMilliseconds / 1000d).ToString("F1") + "/" + lastSimTime.ToString("F2") + " (" + lastSimSteps + ")\n" " is 126.
Long Statement,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,LandingSimTime,The length of the statement  "                + (errorStopwatch.ElapsedMilliseconds / 1000d).ToString("F1") + "/" + lastErrorSimTime.ToString("F2") + " (" + lastErrorSimSteps + ")\n" " is 136.
Long Statement,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,TryStartSimulation,The length of the statement  "                    // We also periodically run simulations containing deliberate errors if we have been asked to do so by the landing autopilot. " is 125.
Long Statement,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,TryStartSimulation,The length of the statement  "                    if (doErrorSim && this.runErrorSimulations && !errorSimulationRunning && (errorStopwatch.ElapsedMilliseconds >= millisecondsBetweenErrorSimulations || !errorStopwatch.IsRunning)) " is 178.
Long Statement,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,StartSimulation,The length of the statement  "                    altitudeOfPreviousPrediction = result.endASL; // Note that we are caling GetResult here to force the it to calculate the endASL' if it has not already done this. It is not allowed to do this previously as we are only allowed to do it from this thread' not the reentry simulation thread. " is 286.
Long Statement,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,StartSimulation,The length of the statement  "            SimulatedVessel simVessel = SimulatedVessel.Borrow(vessel' simCurves' patch.StartUT' core.landing.enabled && deployChutes ? limitChutesStage : -1); " is 147.
Long Statement,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,StartSimulation,The length of the statement  "            ReentrySimulation sim = ReentrySimulation.Borrow(patch' patch.StartUT' simVessel' simCurves' descentSpeedPolicy' decelEndAltitudeASL' vesselState.limitedMaxThrustAccel' parachuteMultiplierForThisSimulation' altitudeOfPreviousPrediction' addParachuteError' dt' Time.fixedDeltaTime' maxOrbits' noSkipToFreefall); " is 310.
Long Statement,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,RunSimulation,The length of the statement  "                    // How long should we set the max_dt to be in the future? Calculate for interationsPerSecond runs per second. If we do not enter the atmosphere' however do not do so as we will complete so quickly' it is not a good guide to how long the reentry simulation takes. " is 262.
Long Statement,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,RunSimulation,The length of the statement  "                            // There is no point in having a dt that is smaller than the physics frame rate as we would be trying to be more precise than the game. " is 135.
Long Statement,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,RunSimulation,The length of the statement  "                    //Debug.Log("Result:" + this.result.outcome + " Time to run: " + millisecondsToCompletion + " millisecondsBetweenSimulations: " + millisecondsBetweenSimulations + " new dt: " + dt + " Time.fixedDeltaTime " + Time.fixedDeltaTime + "\n" + this.result.ToString()); // Note the endASL will be zero as it has not yet been calculated' and we are not allowed to calculate it from this thread :( " is 387.
Long Statement,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,MaintainAerobrakeNode,The length of the statement  "                    Orbit postAerobrakeOrbit = MuUtils.OrbitFromStateVectors(r.WorldAeroBrakePosition()' r.WorldAeroBrakeVelocity()' r.body' r.aeroBrakeUT); " is 136.
Long Statement,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,DoMapView,The length of the statement  "                        GLUtils.DrawGroundMarker(drawnResult.body' drawnResult.endPosition.latitude' drawnResult.endPosition.longitude' Color.blue' MapView.MapIsEnabled' 60); " is 150.
Long Statement,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,DoMapView,The length of the statement  "                    if (showTrajectory && drawnResult.outcome != ReentrySimulation.Outcome.ERROR && drawnResult.outcome != ReentrySimulation.Outcome.NO_REENTRY) " is 140.
Long Statement,MuMech,Stage,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLogicalStageTracking.cs,ToString,The length of the statement  "                return "ksp_stage: "+ ksp_stage + " rocket_stage: " + rocket_stage + " isp:" + isp + " thrust:" + startThrust + " m0: " + startMass + " maxt:" + deltaTime; " is 155.
Long Statement,MuMech,MechJebModuleManeuverPlanner,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleManeuverPlanner.cs,WindowGUI,The length of the statement  "                if (GUILayout.Button(createNode ? Localizer.Format("#MechJeb_Maneu_createNodeBtn01") : Localizer.Format("#MechJeb_Maneu_createNodeBtn02")))//"Create a new":"Change the last" " is 173.
Long Statement,MuMech,MechJebModuleManeuverPlanner,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleManeuverPlanner.cs,WindowGUI,The length of the statement  "                core.node.autowarp = GUILayout.Toggle(core.node.autowarp' Localizer.Format("#MechJeb_Maneu_Autowarp")' GUILayout.ExpandWidth(true));//"Auto-warp" " is 145.
Long Statement,MuMech,MechJebModuleManeuverPlanner,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleManeuverPlanner.cs,WindowGUI,The length of the statement  "                core.node.tolerance.text = GUILayout.TextField(core.node.tolerance.text' GUILayout.Width(35)' GUILayout.ExpandWidth(false)); " is 124.
Long Statement,MuMech,MechJebModuleManeuverPlanner,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleManeuverPlanner.cs,WindowGUI,The length of the statement  "                core.node.leadTime.text = GUILayout.TextField(core.node.leadTime.text' GUILayout.Width(35)' GUILayout.ExpandWidth(false)); " is 122.
Long Statement,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,WindowGUI,The length of the statement  "                GUILayout.Label(Localizer.Format("#MechJeb_ModuleAreLocked"));//"Some modules are disabled until you unlock the proper node in the R&D tree or upgrade the tracking station." " is 173.
Long Statement,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,SetupAppLauncher,The length of the statement  "                mjButton = ApplicationLauncher.Instance.AddModApplication(ShowHideMasterWindow' ShowHideMasterWindow' null' null' null' null' ApplicationLauncher.AppScenes.ALWAYS' mjButtonTexture); " is 181.
Long Statement,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,SetupToolBarButtons,The length of the statement  "                        DisplayModule mod = FlightGlobals.ActiveVessel.GetMasterMechJeb().GetDisplayModules(DisplayOrder.instance).FirstOrDefault(m => m == module); " is 140.
Long Statement,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,DrawGUI,The length of the statement  "            if (!HideMenuButton && GUI.RepeatButton(buttonPos' (windowStat == WindowStat.HIDDEN) ^ (windowSide == WindowSide.TOP || windowSide == WindowSide.LEFT) ? "▲ MechJeb ▲" : "▼ MechJeb ▼")) " is 184.
Long Statement,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,DrawGUI,The length of the statement  "                windowPos = GUILayout.Window(GetType().FullName.GetHashCode()' displayedPos' WindowGUI' "MechJeb " + core.version' GUILayout.Width(colWidth)' GUILayout.Height(20)); " is 164.
Long Statement,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,DrawGUI,The length of the statement  "                windowPos = new Rect(GuiUtils.scaledScreenWidth' GuiUtils.scaledScreenHeight' 0' 0); // make it small so the mouse can't hoover it " is 130.
Long Statement,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The length of the statement  "                if (nodeIndex < (numNodes-1) && GUILayout.Button(Localizer.Format("#MechJeb_NodeEd_button1"))) MergeNext(nodeIndex);//"Merge next node" " is 135.
Long Statement,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The length of the statement  "            if (GUILayout.Button(Localizer.Format("#MechJeb_NodeEd_button2"))) node.UpdateNode(new Vector3d(radialPlus' normalPlus' prograde)' node.UT);//"Update" " is 150.
Long Statement,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The length of the statement  "                            if (o.AscendingNodeExists(core.target.TargetOrbit)) UT = o.TimeOfAscendingNode(core.target.TargetOrbit' UT - o.period / 2); " is 123.
Long Statement,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The length of the statement  "                            if (o.DescendingNodeExists(core.target.TargetOrbit)) UT = o.TimeOfDescendingNode(core.target.TargetOrbit' UT - o.period / 2); " is 125.
Long Statement,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The length of the statement  "                core.node.autowarp = GUILayout.Toggle(core.node.autowarp' Localizer.Format("#MechJeb_NodeEd_checkbox1")' GUILayout.ExpandWidth(true));//"Auto-warp" " is 147.
Long Statement,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The length of the statement  "                core.node.tolerance.text = GUILayout.TextField(core.node.tolerance.text' GUILayout.Width(35)' GUILayout.ExpandWidth(false)); " is 124.
Long Statement,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,RelativityModeSelectUI,The length of the statement  "            int newRelativityMode = GUILayout.SelectionGrid((int)vessel.patchedConicRenderer.relativityMode' relativityModeStrings' 5); " is 123.
Long Statement,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,RelativityModeSelectUI,The length of the statement  "            GUILayout.Label(Localizer.Format("#MechJeb_NodeEd_Label9"' vessel.patchedConicRenderer.relativityMode.ToString()));//"Current mode: <<1>>" " is 138.
Long Statement,MuMech,MechJebModuleNodeExecutor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeExecutor.cs,OnFixedUpdate,The length of the statement  "                if ((core.attitude.attitudeAngleFromTarget() < 1 && core.vessel.angularVelocity.magnitude < 0.001) || (core.attitude.attitudeAngleFromTarget() < 10 && !MuUtils.PhysicsRunning())) " is 178.
Long Statement,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,OnModuleEnabled,The length of the statement  "            // coast phases are deliberately not reset in Reset() so we never get a completed coast phase again after whacking Reset() " is 122.
Long Statement,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,TargetNode,The length of the statement  "                    solver = new PontryaginNode(core: core' mu: mainBody.gravParameter' r0: vesselState.orbitalPosition' v0: vesselState.orbitalVelocity' pv0: node.GetBurnVector(orbit).normalized' pr0: Vector3d.zero' dV: node.GetBurnVector(orbit).magnitude' bt: burntime); " is 252.
Long Statement,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,flightangle4constraint,The length of the statement  "                Debug.Log("[MechJeb] MechJebModuleGuidanceController: setting up flightangle4constraint' rT: " + rT + " vT:" + vT + " inc:" + inc + " gamma:" + gamma); " is 151.
Long Statement,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,flightangle5constraint,The length of the statement  "                Debug.Log("[MechJeb] MechJebModuleGuidanceController: setting up flightangle5constraint' rT: " + rT + " vT:" + vT + " inc:" + inc + " gamma:" + gamma + " LAN:" + LAN + " sma: " + sma); " is 184.
Long Statement,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,approximateDeltaV,The length of the statement  "            double addE = mainBody.gravParameter * ( 2 * sma - mainBody.Radius ) / ( 2 * sma * mainBody.Radius );  // in kJ/t or m^2/s^2 " is 124.
Long Statement,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,NewPontryaginForLaunch,The length of the statement  "            Vector3d desiredHeadingVector = Math.Sin(desiredHeading * UtilMath.Deg2Rad) * vesselState.east + Math.Cos(desiredHeading * UtilMath.Deg2Rad) * vesselState.north; " is 161.
Long Statement,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,NewPontryaginForLaunch,The length of the statement  "            Vector3d desiredThrustVector = Math.Cos(45 * UtilMath.Deg2Rad) * desiredHeadingVector + Math.Sin(45 * UtilMath.Deg2Rad) * vesselState.up;  /* 45 pitch guess */ " is 159.
Long Statement,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,NewPontryaginForLaunch,The length of the statement  "            return new PontryaginLaunch(core: core' mu: mainBody.gravParameter' r0: vesselState.orbitalPosition' v0: vesselState.orbitalVelocity' pv0: lambda' dV: approximateDeltaV(sma)); " is 175.
Long Statement,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,flightangle4constraintMAXE,The length of the statement  "                solver.flightangle4constraintMAXE(rTm' gamma * UtilMath.Deg2Rad' inc * UtilMath.Deg2Rad' LAN * UtilMath.Deg2Rad' numStages); " is 124.
Long Statement,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,isNormal,The length of the statement  "            return status == PVGStatus.CONVERGED || status == PVGStatus.BURNING || status == PVGStatus.BURNING_STAGING || status == PVGStatus.COASTING || status == PVGStatus.COASTING_STAGING; " is 179.
Long Statement,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,converge,The length of the statement  "            if ( p.solution != null && p.solution.arc(vesselState.time).thrust == 0 && p.solution.current_tgo(vesselState.time) < 10 ) " is 122.
Long Statement,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,update_pitch_and_heading,The length of the statement  "            if ( vessel.situation == Vessel.Situations.LANDED || vessel.situation == Vessel.Situations.PRELAUNCH || vessel.situation == Vessel.Situations.SPLASHED ) " is 152.
Long Statement,MuMech,MechJebModuleRCSBalancer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSBalancer.cs,RCSBalancerInfoItem,The length of the statement  "            GuiUtils.SimpleLabel(Localizer.Format("#MechJeb_RCSBalancerInfo_Label1")' (solverThread.calculationTime * 1000).ToString("F0") + " ms");//"Calculation time" " is 156.
Long Statement,MuMech,MechJebModuleRCSBalancer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSBalancer.cs,RCSBalancerInfoItem,The length of the statement  "            GuiUtils.SimpleLabel(Localizer.Format("#MechJeb_RCSBalancerInfo_Label6")'     MuUtils.ToSI(solverThread.comError) + "m");//"CoM shift" " is 134.
Long Statement,MuMech,MechJebModuleRCSBalancer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSBalancer.cs,RCSBalancerInfoItem,The length of the statement  "            GuiUtils.SimpleLabel(Localizer.Format("#MechJeb_RCSBalancerInfo_Label7")'    MuUtils.ToSI(solverThread.comErrorThreshold) + "m");//"CoM recalc" " is 143.
Long Statement,MuMech,MechJebModuleRCSBalancer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSBalancer.cs,RCSBalancerInfoItem,The length of the statement  "            GuiUtils.SimpleLabel(Localizer.Format("#MechJeb_RCSBalancerInfo_Label8")' MuUtils.ToSI(solverThread.maxComError) + "m");//"Max CoM shift" " is 137.
Long Statement,MuMech,MechJebModuleRCSBalancerWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSBalancerWindow.cs,WindowGUI,The length of the statement  "            balancer.smartTranslation = GUILayout.Toggle(balancer.smartTranslation' Localizer.Format("#MechJeb_RCSBalancer_checkbox1")' GUILayout.Width(130));//"Smart translation" " is 167.
Long Statement,MuMech,MechJebModuleRCSBalancerWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSBalancerWindow.cs,WindowGUI,The length of the statement  "                GUILayout.Label(Localizer.Format("#MechJeb_RCSBalancer_label2"));//"Overdrive increases power when possible' at the cost of RCS fuel efficiency." " is 145.
Long Statement,MuMech,MechJebModuleRCSBalancerWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSBalancerWindow.cs,WindowGUI,The length of the statement  "                balancer.advancedOptions = GUILayout.Toggle(balancer.advancedOptions' Localizer.Format("#MechJeb_RCSBalancer_checkbox2"));//"Advanced options" " is 142.
Long Statement,MuMech,MechJebModuleRCSBalancerWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSBalancerWindow.cs,WindowGUI,The length of the statement  "                    GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_RCSBalancer_label4")' balancer.tuningParamFactorTorque);//"torque factor" " is 123.
Long Statement,MuMech,MechJebModuleRCSBalancerWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSBalancerWindow.cs,WindowGUI,The length of the statement  "                    GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_RCSBalancer_label5")' balancer.tuningParamFactorTranslate);//"Translate factor" " is 129.
Long Statement,MuMech,MechJebModuleRCSBalancerWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSBalancerWindow.cs,WindowGUI,The length of the statement  "                    GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_RCSBalancer_label6")' balancer.tuningParamFactorWaste);//"Waste factor" " is 121.
Long Statement,MuMech,MechJebModuleRCSController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSController.cs,Drive,The length of the statement  "                    // TODO : add it back once we use the RCS Controler for other use than docking. Account for current acceleration beside gravity ? " is 129.
Long Statement,MuMech,MechJebModuleRCSController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSController.cs,Drive,The length of the statement  "                    //worldVelocityDelta -= TimeWarp.fixedDeltaTime * gravityForce = FlightGlobals.getGeeForceAtPosition(  Here be the target position  ); ; //account for one frame's worth of gravity " is 179.
Long Statement,MuMech,MechJebModuleRendezvousAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilot.cs,Drive,The length of the statement  "                status = Localizer.Format("#MechJeb_RZauto_statu2"' desiredDistance.ToString());//"Within " +  + "m: matching velocities." " is 122.
Long Statement,MuMech,MechJebModuleRendezvousAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilot.cs,Drive,The length of the statement  "                    double approachSpeed = (orbit.SwappedOrbitalVelocityAtUT(UT) - core.target.TargetOrbit.SwappedOrbitalVelocityAtUT(UT)).magnitude; " is 129.
Long Statement,MuMech,MechJebModuleRendezvousAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilot.cs,Drive,The length of the statement  "            else if (orbit.NextClosestApproachDistance(core.target.TargetOrbit' vesselState.time) < core.target.TargetOrbit.semiMajorAxis / 25) " is 131.
Long Statement,MuMech,MechJebModuleRendezvousAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilot.cs,Drive,The length of the statement  "                double approachDistance = (orbit.SwappedAbsolutePositionAtUT(UT) - core.target.TargetOrbit.SwappedAbsolutePositionAtUT(UT)).magnitude; " is 134.
Long Statement,MuMech,MechJebModuleRendezvousAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilot.cs,Drive,The length of the statement  "                double approachSpeed = (orbit.SwappedOrbitalVelocityAtUT(UT) - core.target.TargetOrbit.SwappedOrbitalVelocityAtUT(UT)).magnitude; " is 129.
Long Statement,MuMech,MechJebModuleRendezvousAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilot.cs,Drive,The length of the statement  "                status = Localizer.Format("#MechJeb_RZauto_statu5");//"On intercept course. Planning to match velocities at closest approach." " is 126.
Long Statement,MuMech,MechJebModuleRendezvousAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilot.cs,Drive,The length of the statement  "                Vector3d hohmannDV = OrbitalManeuverCalculator.DeltaVAndTimeForHohmannTransfer(orbit' core.target.TargetOrbit' vesselState.time' out hohmannUT); " is 144.
Long Statement,MuMech,MechJebModuleRendezvousAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilot.cs,Drive,The length of the statement  "                    status = Localizer.Format("#MechJeb_RZauto_statu6"' numPhasingOrbits.ToString("F2"));//"Planning Hohmann transfer for intercept after " +  + " phasing orbits." " is 159.
Long Statement,MuMech,MechJebModuleRendezvousAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilot.cs,Drive,The length of the statement  "                    bool useLowPhasingRadius = (lowPhasingRadius > mainBody.Radius + mainBody.RealMaxAtmosphereAltitude() + 3000) && (orbit.semiMajorAxis < core.target.TargetOrbit.semiMajorAxis); " is 175.
Long Statement,MuMech,MechJebModuleRendezvousAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilot.cs,Drive,The length of the statement  "                    status = Localizer.Format("#MechJeb_RZauto_statu7"' numPhasingOrbits.ToString("F1")'maxPhasingOrbits.text'MuUtils.ToSI(phasingOrbitRadius - mainBody.Radius' 0));//"Next intercept window would be <<1>> orbits away' which is more than the maximum of <<2>> phasing orbits. Increasing phasing rate by establishing new phasing orbit at <<3>>m " is 337.
Long Statement,MuMech,MechJebModuleRendezvousAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilot.cs,Drive,The length of the statement  "                else circularizeAtPe = Math.Abs(orbit.PeR - core.target.TargetOrbit.semiMajorAxis) < Math.Abs(orbit.ApR - core.target.TargetOrbit.semiMajorAxis); " is 145.
Long Statement,MuMech,MechJebModuleRendezvousAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilot.cs,Drive,The length of the statement  "                    if (orbit.TimeOfAscendingNode(core.target.TargetOrbit' vesselState.time) < orbit.TimeOfDescendingNode(core.target.TargetOrbit' vesselState.time)) " is 145.
Long Statement,MuMech,MechJebModuleRendezvousAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilot.cs,Drive,The length of the statement  "                if (ascending) dV = OrbitalManeuverCalculator.DeltaVAndTimeToMatchPlanesAscending(orbit' core.target.TargetOrbit' vesselState.time' out UT); " is 140.
Long Statement,MuMech,MechJebModuleRendezvousAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilot.cs,Drive,The length of the statement  "                else dV = OrbitalManeuverCalculator.DeltaVAndTimeToMatchPlanesDescending(orbit' core.target.TargetOrbit' vesselState.time' out UT); " is 131.
Long Statement,MuMech,MechJebModuleRendezvousAutopilotWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilotWindow.cs,WindowGUI,The length of the statement  "                GUILayout.Label(Localizer.Format("#MechJeb_RZauto_label2"));//"Rendezvous target must be in the same sphere of influence." " is 122.
Long Statement,MuMech,MechJebModuleRendezvousAutopilotWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilotWindow.cs,WindowGUI,The length of the statement  "                GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_RZauto_label4")' autopilot.desiredDistance' "m");//"Desired final distance:" " is 126.
Long Statement,MuMech,MechJebModuleRendezvousAutopilotWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilotWindow.cs,WindowGUI,The length of the statement  "                GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_RZauto_label5")' autopilot.maxPhasingOrbits);//"Max # of phasing orbits:" " is 123.
Long Statement,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The length of the statement  "                GUILayout.Label(Localizer.Format("#MechJeb_RZplan_label2"));//"Rendezvous target must be in the same sphere of influence." " is 122.
Long Statement,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The length of the statement  "            GuiUtils.SimpleLabel(Localizer.Format("#MechJeb_RZplan_label4")' MuUtils.ToSI(core.target.TargetOrbit.PeA' 3) + "m x " + MuUtils.ToSI(core.target.TargetOrbit.ApA' 3) + "m");//"Target orbit" " is 189.
Long Statement,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The length of the statement  "            GuiUtils.SimpleLabel(Localizer.Format("#MechJeb_RZplan_label5")' MuUtils.ToSI(orbit.PeA' 3) + "m x " + MuUtils.ToSI(orbit.ApA' 3) + "m");//"Current orbit" " is 154.
Long Statement,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The length of the statement  "            GuiUtils.SimpleLabel(Localizer.Format("#MechJeb_RZplan_label6")' orbit.RelativeInclination(core.target.TargetOrbit).ToString("F2") + "º");//"Relative inclination" " is 162.
Long Statement,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The length of the statement  "            GuiUtils.SimpleLabel(Localizer.Format("#MechJeb_RZplan_label7")' GuiUtils.TimeToDHMS(closestApproachTime - vesselState.time));//"Time until closest approach" " is 157.
Long Statement,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The length of the statement  "            GuiUtils.SimpleLabel(Localizer.Format("#MechJeb_RZplan_label8")' MuUtils.ToSI(orbit.Separation(core.target.TargetOrbit' closestApproachTime)' 0) + "m");//"Separation at closest approach" " is 186.
Long Statement,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The length of the statement  "                    dV = OrbitalManeuverCalculator.DeltaVAndTimeToMatchPlanesAscending(orbit' core.target.TargetOrbit' vesselState.time' out UT); " is 125.
Long Statement,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The length of the statement  "                    dV = OrbitalManeuverCalculator.DeltaVAndTimeToMatchPlanesDescending(orbit' core.target.TargetOrbit' vesselState.time' out UT); " is 126.
Long Statement,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The length of the statement  "                Vector3d dV = OrbitalManeuverCalculator.DeltaVAndTimeForHohmannTransfer(orbit' core.target.TargetOrbit' vesselState.time' out UT); " is 130.
Long Statement,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The length of the statement  "                core.node.autowarp = GUILayout.Toggle(core.node.autowarp' Localizer.Format("#MechJeb_RZplan_checkbox")' GUILayout.ExpandWidth(true));//"Auto-warp" " is 146.
Long Statement,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The length of the statement  "                core.node.tolerance.text = GUILayout.TextField(core.node.tolerance.text' GUILayout.Width(35)' GUILayout.ExpandWidth(false)); " is 124.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,OnVesselModified,The length of the statement  "            //TODO : need to look into the new ModuleWheelSteering ModuleWheelMotor ModuleWheelBrakes ModuleWheelBase ModuleWheelSuspension and see what they could bring " is 157.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,OnVesselModified,The length of the statement  "				wheels.AddRange(vessel.Parts.FindAll(p => p.HasModule<ModuleWheelBase>() /*&& p.FindModelComponent<WheelCollider>() != null*/ && p.GetModule<ModuleWheelBase>().wheelType != WheelType.LEG)); " is 189.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,HeadingToPos,The length of the statement  "            return (diff < 0 ? -1 : 1) * Vector3.Angle(Vector3d.Exclude(myPos.normalized' north.normalized)' Vector3.ProjectOnPlane(tgtPos.normalized' myPos.normalized)); " is 158.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,CalculateTraction,The length of the statement  "			Physics.Raycast(vessel.CoM + vesselState.surfaceVelocity * terrainLookAhead + vesselState.up * 100' -vesselState.up' out hit' 500' 1 << 15); " is 140.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,CalculateTraction,The length of the statement  "//				if (Physics.Raycast(c.transform.position + c.center' -(vesselState.up + norm.normalized) / 2' out hit' c.radius + 1.5f' 1 << 15)) { " is 137.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "{ // TODO make distance calculation for 'reached' determination consider the rover and waypoint on sealevel to prevent height differences from messing it up -- should be done now? " is 179.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "					var nextWP = (WaypointIndex < Waypoints.Count - 1 ? Waypoints[WaypointIndex + 1] : (LoopWaypoints ? Waypoints[0] : null)); " is 122.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "					// var maxSpeed = (wp.MaxSpeed > 0 ? Math.Min((float)speed' wp.MaxSpeed) : speed); // use waypoints maxSpeed if set and smaller than set the speed or just stick with the set speed " is 179.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "					var maxSpeed = (wp.MaxSpeed > 0 ? wp.MaxSpeed : speed); // speed used to go towards the waypoint' using the waypoints maxSpeed if set or just stick with the set speed " is 166.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "					               (nextWP != null ? TurningSpeed((nextWP.MaxSpeed > 0 ? nextWP.MaxSpeed : speed)' heading - HeadingToPos(wp.Position' nextWP.Position)) : " is 135.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "					// ^ speed used to go through the waypoint' using half the set speed or maxSpeed as minSpeed for routing waypoints (all except the last) " is 136.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "					brake = brake || ((s.wheelThrottle == 0 || !vessel.isActiveVessel) && curSpeed < brakeSpeedLimit && newSpeed < brakeSpeedLimit); " is 128.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "					float limit = (Math.Abs(curSpeed) > turnSpeed ? Mathf.Clamp((float)((turnSpeed + 6) / Square(curSpeed))' 0.1f' 1f) : 1f); " is 121.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "				speedErr = (WaypointIndex == -1 ? speed.val : tgtSpeed) - Vector3d.Dot(vesselState.surfaceVelocity' vesselState.forward); " is 121.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "						// (traction == 0 ? 0 : (act < 0 ? Mathf.Clamp(act' -1f' 1f) : (lastThrottle + Mathf.Clamp(act - lastThrottle' -0.01f' 0.01f)) * (traction < tractionLimit ? -1 : 1)))); " is 168.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "					if (speedErr < -1 && StabilityControl && Mathf.Sign(s.wheelThrottle) + Math.Sign(curSpeed) == 0) { // StabilityControl && traction > 50 && " is 138.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "////					else if (!StabilityControl || traction <= 50 || speedErr > -0.2 || Mathf.Sign(s.wheelThrottle) + Mathf.Sign((float)curSpeed) != 0) { " is 141.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "				Vector3 fwd = (Vector3)(traction > 0 ? // V when the speed is low go for the vessels forward' else with a bit of velocity " is 121.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "//				                        ((Mathf.Abs(fSpeed) <= turnSpeed ? vesselState.forward : vesselState.surfaceVelocity / 4) - vessel.transform.right * s.wheelSteer) * Mathf.Sign(fSpeed) : " is 183.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "				var batteries = vessel.Parts.FindAll(p => p.Resources.Contains(PartResourceLibrary.ElectricityHashcode) && p.Resources.Get(PartResourceLibrary.ElectricityHashcode).flowState); " is 175.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "				var energyLeft = batteries.Sum(p => p.Resources.Get(PartResourceLibrary.ElectricityHashcode).amount) / batteries.Sum(p => p.Resources.Get(PartResourceLibrary.ElectricityHashcode).maxAmount);  " is 190.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "				var openSolars = vessel.mainBody.atmosphere && // true if in atmosphere and there are breakable solarpanels that aren't broken nor retracted " is 140.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "					vessel.FindPartModulesImplementing<ModuleDeployableSolarPanel>().FindAll(p => p.isBreakable && p.deployState != ModuleDeployablePart.DeployState.BROKEN && " is 154.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "				if (energyLeft < 0.05 && Math.Sign(s.wheelThrottle) + Math.Sign(curSpeed) != 0) { s.wheelThrottle = 0; } // save remaining energy by not using it for acceleration " is 162.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "				    vessel.FindPartModulesImplementing<ModuleDeployableSolarPanel>().FindAll(p => p.deployState == ModuleDeployablePart.DeployState.EXTENDED).Count > 0) " is 148.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "			vessel.ActionGroups.SetGroup(KSPActionGroup.Brakes' brake && (StabilityControl && (ControlHeading || ControlSpeed) ? traction >= tractionLimit : true)); " is 152.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The length of the statement  "			// only let go of the brake when losing traction if the AP is driving' otherwise assume the player knows when to let go of it " is 125.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,OnFixedUpdate,The length of the statement  "				core.GetComputerModule<MechJebModuleRoverWindow>().OnUpdate(); // update users for Stability Control' Brake on Eject and Brake on Energy Depletion " is 146.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,OnUpdate,The length of the statement  "				var batteries = vessel.Parts.FindAll(p => p.Resources.Contains(PartResourceLibrary.ElectricityHashcode) && p.Resources.Get(PartResourceLibrary.ElectricityHashcode).flowState); " is 175.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,OnUpdate,The length of the statement  "				var energyLeft = batteries.Sum(p => p.Resources.Get(PartResourceLibrary.ElectricityHashcode).amount) / batteries.Sum(p => p.Resources.Get(PartResourceLibrary.ElectricityHashcode).maxAmount); " is 190.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,OnUpdate,The length of the statement  "					if (vessel.FindPartModulesImplementing<ModuleDeployableSolarPanel>().FindAll(p => p.deployState == ModuleDeployablePart.DeployState.EXTENDED).Count == 0) " is 153.
Long Statement,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,OnUpdate,The length of the statement  "				core.GetComputerModule<MechJebModuleRoverWindow>().OnUpdate(); // update users for Stability Control' Brake on Eject and Brake on Energy Depletion " is 146.
Long Statement,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowGUI,The length of the statement  "			if (GUILayout.Button("-"' GUILayout.Width(18))) { autopilot.heading.val -= (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1); } " is 122.
Long Statement,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowGUI,The length of the statement  "			if (GUILayout.Button("+"' GUILayout.Width(18))) { autopilot.heading.val += (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1); } " is 122.
Long Statement,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowGUI,The length of the statement  "			if (GUILayout.Button("-"' GUILayout.Width(18))) { autopilot.speed.val -= (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1); } " is 120.
Long Statement,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowGUI,The length of the statement  "			if (GUILayout.Button("+"' GUILayout.Width(18))) { autopilot.speed.val += (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1); } " is 120.
Long Statement,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowGUI,The length of the statement  "			GUILayout.Label("Index " + (autopilot.WaypointIndex + 1).ToString() + " of " + autopilot.Waypoints.Count.ToString()' GUILayout.ExpandWidth(false)); " is 147.
Long Statement,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowGUI,The length of the statement  "			if (core.target != null && core.target.Target != null) // && (core.target.targetBody == orbit.referenceBody || (core.target.Orbit != null ? core.target.Orbit.referenceBody == orbit.referenceBody : false))) { " is 207.
Long Statement,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,OnUpdate,The length of the statement  "				if (autopilot.ControlHeading || autopilot.ControlSpeed || autopilot.StabilityControl || autopilot.BrakeOnEnergyDepletion || autopilot.BrakeOnEject) " is 147.
Long Statement,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,OnStart,The length of the statement  "					//Try to have only one vessel name' whatever the new vessel name. We use the vessel name of the first time the system was instanciated " is 134.
Long Statement,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,OnStart,The length of the statement  "					vesselSaveName = vessel != null ? string.Join("_"' vessel.vesselName.Split(System.IO.Path.GetInvalidFileNameChars())) : null; // Strip illegal char from the filename " is 165.
Long Statement,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,LoadScriptModuleConfig,The length of the statement  "					Debug.LogError("MechJebModuleScript.LoadConfig caught an exception trying to load mechjeb_settings_script_" + slotName + "_conf.cfg: " + e); " is 140.
Long Statement,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,WindowGUI,The length of the statement  "					this.addActionDisabled = GUILayout.Toggle(this.addActionDisabled' Localizer.Format("#MechJeb_ScriptMod_checkbox1"));//"Hide Add Actions" " is 136.
Long Statement,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,WindowGUI,The length of the statement  "							scriptNames[selectedSlot] = GUILayout.TextField(scriptNames[selectedSlot]' GUILayout.Width(120)' GUILayout.ExpandWidth(false)); " is 127.
Long Statement,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,WindowGUI,The length of the statement  "							globalScriptNames[selectedSlot] = GUILayout.TextField(globalScriptNames[selectedSlot]' GUILayout.Width(120)' GUILayout.ExpandWidth(false)); " is 139.
Long Statement,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,WindowGUI,The length of the statement  "							this.setFlashMessage("Warning: To confirm deletion of slot " + (selectedSlot+1) + " - " + scriptNames[selectedSlot] + "' press again the delete button"' 0); " is 156.
Long Statement,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,LoadConfig,The length of the statement  "					node = ConfigNode.Load(IOUtils.GetFilePathFor(this.GetType()' "mechjeb_settings_script_" + slotName + "_" + slot + ".cfg")); " is 124.
Long Statement,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,LoadConfig,The length of the statement  "					Debug.LogError("MechJebModuleScript.LoadConfig caught an exception trying to load mechjeb_settings_script_" + slotName + "_" + slot + ".cfg: " + e); " is 148.
Long Statement,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,DeleteConfig,The length of the statement  "			File.Delete<MechJebCore>(IOUtils.GetFilePathFor(this.GetType()' "mechjeb_settings_script_" + slotName + "_" + slot + ".cfg")); " is 126.
Long Statement,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,setActiveBreakpoint,The length of the statement  "				mjCore.GetComputerModule<MechJebModuleScript>().minifiedGUI = this.minifiedGUI; //Replicate the UI setting on the other mechjeb " is 127.
Long Statement,MuMech,MechJebModuleSettings,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSettings.cs,WindowGUI,The length of the statement  "            dontUseDropDownMenu = GUILayout.Toggle(dontUseDropDownMenu' Localizer.Format("#MechJeb_Settings_checkbox1"));//"Replace drop down menu with arrow selector" " is 155.
Long Statement,MuMech,MechJebModuleSettings,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSettings.cs,WindowGUI,The length of the statement  "            core.warp.activateSASOnWarp = GUILayout.Toggle(core.warp.activateSASOnWarp' Localizer.Format("#MechJeb_Settings_checkbox2"));//"Activate SAS on Warp" " is 149.
Long Statement,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,AutoDisableSmartASS,The length of the statement  "            autoDisableSmartASS = GUILayout.Toggle(autoDisableSmartASS' core.eduMode ? Localizer.Format("#MechJeb_SmartASS_checkbox1") :Localizer.Format("#MechJeb_SmartASS_checkbox2") );//"Disable SmartACS automatically":"Disable SmartASS automatically" " is 241.
Long Statement,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,ModeButton,The length of the statement  "            if (GUILayout.Button(ModeTexts[(int)bt]' (mode == bt) ? btActive : btNormal' GUILayout.ExpandWidth(true)' GUILayout.ExpandHeight(true))) " is 136.
Long Statement,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,TargetButton,The length of the statement  "            if (GUILayout.Button(TargetTexts[(int)bt]' (target == bt) ? btActive : btNormal' GUILayout.ExpandWidth(true)' GUILayout.ExpandHeight(true))) " is 140.
Long Statement,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,TargetButtonNoEngage,The length of the statement  "            if (GUILayout.Button(TargetTexts[(int)bt]' (target == bt) ? btActive : btNormal' GUILayout.ExpandWidth(true)' GUILayout.ExpandHeight(true))) " is 140.
Long Statement,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,ForceRoll,The length of the statement  "            forceRol = GUILayout.Toggle(forceRol' Localizer.Format("#MechJeb_SmartASS_checkbox3")' GUILayout.ExpandWidth(false));//"Force Roll :" " is 133.
Long Statement,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,WindowGUI,The length of the statement  "                btNormal.onNormal.textColor = btNormal.onFocused.textColor = btNormal.onHover.textColor = btNormal.onActive.textColor = Color.green; " is 132.
Long Statement,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,WindowGUI,The length of the statement  "                btAuto.onActive = btAuto.onFocused = btAuto.onHover = btAuto.onNormal = btAuto.active = btAuto.focused = btAuto.hover = btAuto.normal; " is 134.
Long Statement,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,WindowGUI,The length of the statement  "                    if (core.attitude.users.Contains(this)) core.attitude.users.Remove(this); // so we don't suddenly turn on when the other autopilot finishes " is 139.
Long Statement,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,GetName,The length of the statement  "            return core.eduMode ?  Localizer.Format("#MechJeb_SmartACS_title") : Localizer.Format("#MechJeb_SmartASS_title");//"Smart A.C.S.":"Smart A.S.S." " is 144.
Long Statement,MuMech,MechJebModuleSmartRcs,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartRcs.cs,AutoDisableSmartRCS,The length of the statement  "            autoDisableSmartRCS = GUILayout.Toggle(autoDisableSmartRCS' Localizer.Format("#MechJeb_SmartRcs_checkbox1 "));//"Disable SmartRcs automatically" " is 144.
Long Statement,MuMech,MechJebModuleSmartRcs,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartRcs.cs,TargetButton,The length of the statement  "            if (GUILayout.Button(TargetTexts[(int)bt]' (target == bt) ? btActive : btNormal' GUILayout.ExpandWidth(true)' GUILayout.ExpandHeight(true))) " is 140.
Long Statement,MuMech,MechJebModuleSmartRcs,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartRcs.cs,WindowGUI,The length of the statement  "            core.rcs.rcsThrottle = GUILayout.Toggle(core.rcs.rcsThrottle' Localizer.Format("#MechJeb_SmartRcs_checkbox2"));//" RCS throttle when engines are offline" " is 153.
Long Statement,MuMech,MechJebModuleSmartRcs,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartRcs.cs,WindowGUI,The length of the statement  "            core.rcs.rcsForRotation = GUILayout.Toggle(core.rcs.rcsForRotation' Localizer.Format("#MechJeb_SmartRcs_checkbox3"));// " Use RCS for rotation" " is 143.
Long Statement,MuMech,MechJebModuleSolarPanelController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSolarPanelController.cs,SolarPanelDeployButton,The length of the statement  "            autoDeploy = GUILayout.Toggle(autoDeploy' Localizer.Format("#MechJeb_SolarPanelDeployButton"));//"Auto-deploy solar panels" " is 123.
Long Statement,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,Drive,The length of the statement  "                double desiredAoA = touchdownMomentAoA - (Math.Exp(exponentPerMeterPerSecond * (touchdownMomentSpeed - vesselState.speedSurfaceHorizontal)) - 1); " is 145.
Long Statement,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,Drive,The length of the statement  "                    vessel.ActionGroups.SetGroup(KSPActionGroup.Brakes' bEngagedReverseThrusters ? vesselState.speedSurfaceHorizontal < 10 : vesselState.speedSurfaceHorizontal < 30); " is 162.
Long Statement,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVerticalSpeed,The length of the statement  "                Vector3d vectorToCorrectPointOnGlideslope = runway.GetPointOnGlideslope(glideslope' LateralDistance(vesselState.CoM' runway.GetVectorToTouchdown())); " is 149.
Long Statement,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandAlignmentError,The length of the statement  "            return Math.Atan2(Vector3d.Dot(runway.Up()' Vector3d.Cross(vectorToWaypoint' runwayDir))' Vector3d.Dot(vectorToWaypoint' runwayDir)) * UtilMath.Rad2Deg; " is 152.
Long Statement,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandLateralDistanceFromTouchdownToFinalApproach,The length of the statement  "            return ((1.0 / Math.Tan(angleToFinalApproachPointTurnDiameter * UtilMath.Deg2Rad)) * GetAutolandTurnRadius() * 2.0) + lateralDistanceFromTouchdownToFinalApproach; " is 162.
Long Statement,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandMaxRateOfTurn,The length of the statement  "            return (runway.GetGravitationalAcceleration() * UtilMath.Rad2Deg * Math.Tan(GetAutolandTargetBankAngle() * UtilMath.Deg2Rad)) / vesselState.speedSurfaceHorizontal; " is 163.
Long Statement,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetBankAngle,The length of the statement  "            return Math.Min(Math.Atan((vesselState.speedSurfaceHorizontal * targetRateOfTurn) / (runway.GetGravitationalAcceleration() * UtilMath.Rad2Deg)) * UtilMath.Rad2Deg' GetAutolandMaxBankAngle()); " is 191.
Long Statement,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVector,The length of the statement  "            Vector3d initialApproachVector = runway.GetPointOnGlideslope(glideslope' GetAutolandLateralDistanceFromTouchdownToFinalApproach() - runway.touchdownPoint); " is 155.
Long Statement,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVector,The length of the statement  "            Vector3d finalApproachVector = runway.GetPointOnGlideslope(glideslope' lateralDistanceFromTouchdownToFinalApproach - runway.touchdownPoint); " is 140.
Long Statement,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVector,The length of the statement  "            double lateralAngleOfFinalApproachVector = Vector3d.Angle(finalApproachVectorProjectedOnGroundPlane' runwayDirectionVectorProjectedOnGroundPlane); " is 146.
Long Statement,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVector,The length of the statement  "            double lateralAngleOfInitialApproachVector = Vector3d.Angle(initialApproachVectorProjectedOnGroundPlane' runwayDirectionVectorProjectedOnGroundPlane); " is 150.
Long Statement,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVector,The length of the statement  "                Vector3d vectorToGlideslopeIntercept = FindVectorToGlideslopeIntercept(finalApproachVector'  lateralAngleOfFinalApproachVector); " is 128.
Long Statement,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVector,The length of the statement  "                double timeToGlideslopeIntercept = LateralDistance(vesselState.CoM' vectorToGlideslopeIntercept) / vesselState.speedSurfaceHorizontal; " is 134.
Long Statement,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVector,The length of the statement  "                double timeToTouchdown = LateralDistance(vesselState.CoM' runway.GetVectorToTouchdown()) / vesselState.speedSurfaceHorizontal; " is 126.
Long Statement,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,FindVectorToGlideslopeIntercept,The length of the statement  "            double dist = (LateralDistance(vesselState.CoM' finalApproachVector) * Math.Sin(UtilMath.Deg2Rad * omega)) / Math.Sin(UtilMath.Deg2Rad * theta); " is 144.
Long Statement,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,FindVectorToGlideslopeIntercept,The length of the statement  "                return runway.GetPointOnGlideslope(glideslope' GetAutolandLateralDistanceFromTouchdownToFinalApproach() - runway.touchdownPoint); " is 129.
Long Statement,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The length of the statement  "                    CelestialBody body = bodyName != null ? FlightGlobals.Bodies.Find(b => b.bodyName == bodyName) : Planetarium.fetch.Home; " is 120.
Long Statement,MuMech,MechJebModuleSpaceplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneGuidance.cs,WindowGUI,The length of the statement  "                GUILayout.Label(Localizer.Format("#MechJeb_ApproAndLand_label2") + MuUtils.ToSI(Vector3d.Distance(vesselState.CoM' autoland.runway.Start())' 0) + "m");//Distance to runway:  " is 172.
Long Statement,MuMech,MechJebModuleSpaceplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneGuidance.cs,WindowGUI,The length of the statement  "                showLandingTarget = GUILayout.Toggle(showLandingTarget' Localizer.Format("#MechJeb_ApproAndLand_label3"));//Show landing navball guidance " is 137.
Long Statement,MuMech,MechJebModuleSpaceplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneGuidance.cs,WindowGUI,The length of the statement  "                autoland.bEngageReverseIfAvailable = GUILayout.Toggle(autoland.bEngageReverseIfAvailable' Localizer.Format("#MechJeb_ApproAndLand_label6"));//Reverse thrust upon touchdown " is 171.
Long Statement,MuMech,MechJebModuleSpaceplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneGuidance.cs,WindowGUI,The length of the statement  "                autoland.bBreakAsSoonAsLanded = GUILayout.Toggle(autoland.bBreakAsSoonAsLanded' Localizer.Format("#MechJeb_ApproAndLand_label7"));//Brake as soon as landed " is 155.
Long Statement,MuMech,MechJebModuleSpaceplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneGuidance.cs,WindowGUI,The length of the statement  "                    GUILayout.Label(Localizer.Format("#MechJeb_ApproAndLand_label8") + autoland.AutolandApproachStateToHumanReadableDescription());//State: " is 135.
Long Statement,MuMech,MechJebModuleSpaceplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneGuidance.cs,WindowGUI,The length of the statement  "                    GUILayout.Label(Localizer.Format("#MechJeb_ApproAndLand_label9"' Math.Round(autoland.GetAutolandLateralDistanceToNextWaypoint()' 0)));//Distance to waypoint: {0}m " is 162.
Long Statement,MuMech,MechJebModuleSpaceplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneGuidance.cs,WindowGUI,The length of the statement  "                    //GUILayout.Label(string.Format("Distance to waypoint: {0} m"' Math.Round(autoland.GetAutolandLateralDistanceToNextWaypoint()' 0))); " is 132.
Long Statement,MuMech,MechJebModuleSpaceplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneGuidance.cs,WindowGUI,The length of the statement  "                    GUILayout.Label(Localizer.Format("#MechJeb_ApproAndLand_label10"'Math.Round(autoland.Autopilot.SpeedTarget' 1)));//Target speed: {0} m/s " is 136.
Long Statement,MuMech,MechJebModuleSpaceplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneGuidance.cs,WindowGUI,The length of the statement  "                    GUILayout.Label(Localizer.Format("#MechJeb_ApproAndLand_label11"' Math.Round(autoland.GetAutolandTargetAltitude(autoland.GetAutolandTargetVector())' 0)));//Target altitude: {0} m " is 178.
Long Statement,MuMech,MechJebModuleSpaceplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneGuidance.cs,WindowGUI,The length of the statement  "                    GUILayout.Label(Localizer.Format("#MechJeb_ApproAndLand_label12"' Math.Round(autoland.Autopilot.VertSpeedTarget' 1)));//Target vertical speed: {0} m/s " is 150.
Long Statement,MuMech,MechJebModuleSpaceplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneGuidance.cs,WindowGUI,The length of the statement  "                    GUILayout.Label(Localizer.Format("#MechJeb_ApproAndLand_label13"' Math.Round(autoland.Autopilot.HeadingTarget' 0)));//Target heading: {0}º " is 138.
Long Statement,MuMech,MechJebModuleStageStats,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStageStats.cs,RunSimulation,The length of the statement  "                double staticPressureKpa = (HighLogic.LoadedSceneIsEditor || !liveSLT ? (simBody.atmosphere ? simBody.GetPressure(altSLT) : 0) : vessel.staticPressurekPa); " is 155.
Long Statement,MuMech,MechJebModuleStageStats,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStageStats.cs,RunSimulation,The length of the statement  "                double atmDensity = (HighLogic.LoadedSceneIsEditor || !liveSLT ? simBody.GetDensity(simBody.GetPressure(altSLT)' simBody.GetTemperature(0)) : vessel.atmDensity) / 1.225; " is 169.
Long Statement,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,AutostageSettingsInfoItem,The length of the statement  "            GuiUtils.SimpleTextBox("  "+Localizer.Format("#MechJeb_Ascent_label39") +" <"' fairingMaxDynamicPressure' "kPa"' 50);//"dynamic pressure" " is 137.
Long Statement,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,AutostageSettingsInfoItem,The length of the statement  "            GuiUtils.SimpleTextBox("  "+Localizer.Format("#MechJeb_Ascent_label41") +" <"' fairingMaxAerothermalFlux' "W/m²"' 50);//aerothermal flux " is 136.
Long Statement,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,OnUpdate,The length of the statement  "            if (waitingForFirstStaging || vessel.currentStage <= 0 || vessel.currentStage <= autostageLimit || vessel.currentStage <= autostageLimitInternal " is 144.
Long Statement,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,OnUpdate,The length of the statement  "            if (InverseStageDecouplesActiveOrIdleEngineOrTank(vessel.currentStage - 1' vessel' burnedResources' activeModuleEngines)) " is 121.
Long Statement,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,OnUpdate,The length of the statement  "            // prevent staging when the current stage has active engines and the next stage has any engines (but not decouplers or clamps) " is 126.
Long Statement,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,OnUpdate,The length of the statement  "            if (hotStaging && InverseStageHasActiveEngines(vessel.currentStage' vessel) && InverseStageHasEngines(vessel.currentStage - 1' vessel) && !InverseStageFiresDecoupler(vessel.currentStage - 1' vessel) && !InverseStageReleasesClamps(vessel.currentStage - 1' vessel) && LastNonZeroDVStageBurnTime() > hotStagingLeadTime) " is 316.
Long Statement,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,OnUpdate,The length of the statement  "                if ((core.vesselState.dynamicPressure > fairingMaxDynamicPressure || core.vesselState.altitudeASL < fairingMinAltitude || core.vesselState.freeMolecularAerothermalFlux > fairingMaxAerothermalFlux) && " is 199.
Long Statement,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,OnUpdate,The length of the statement  "                        Debug.Log($"Mechjeb Autostage: Switching from {FlightGlobals.ActiveVessel.name} to vessel {this.vessel.name} to stage"); " is 120.
Long Statement,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,UpdateActiveModuleEngines,The length of the statement  "            var activeEngines = vessel.parts.Slinq().Where(p => p.inverseStage >= vessel.currentStage && p.IsEngine() && !p.IsSepratron() && " is 128.
Long Statement,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,HasActiveOrIdleEngineOrTankDescendant,The length of the statement  "                    if (r.amount > p.resourceRequestRemainingThreshold && r.info.id != PartResourceLibrary.ElectricityHashcode && tankResources.Contains(r.info.id)) " is 144.
Long Statement,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,InverseStageDecouplesDeactivatedEngineOrTank,The length of the statement  "                if (p.inverseStage == inverseStage && p.IsUnfiredDecoupler(out decoupledPart) && HasDeactivatedEngineOrTankDescendant(decoupledPart)) " is 133.
Long Statement,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,HasFairing,The length of the statement  "                (p.HasModule<ModuleProceduralFairing>() || (VesselState.isLoadedProceduralFairing && p.Modules.Contains("ProceduralFairingDecoupler")))' inverseStage); " is 151.
Long Statement,MuMech,MechJebModuleTargetController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTargetController.cs,GetPositionTargetString,The length of the statement  "            if (NormalTargetExists) return Coordinates.ToStringDMS(TargetOrbit.referenceBody.GetLatitude(Position)' TargetOrbit.referenceBody.GetLongitude(Position)' true); " is 160.
Long Statement,MuMech,MechJebModuleTargetController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTargetController.cs,GetPositionTargetPosition,The length of the statement  "            return targetBody.GetWorldSurfacePosition(targetLatitude' targetLongitude' targetBody.TerrainAltitude(targetLatitude' targetLongitude))-targetBody.position; " is 156.
Long Statement,MuMech,MechJebModuleTargetController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTargetController.cs,PickPositionTargetOnMap,The length of the statement  "            string message = Localizer.Format("#MechJeb_pickingPositionMsg"'mainBody.displayName);//"Click to select a target on " +  + "'s surface.\n(Leave map view to cancel.)" " is 166.
Long Statement,MuMech,MechJebModuleTargetController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTargetController.cs,DoCoordinatePicking,The length of the statement  "                        GLUtils.DrawGroundMarker(mainBody' mouseCoords.latitude' mouseCoords.longitude' new Color(1.0f' 0.56f' 0.0f)' true' 60); " is 120.
Long Statement,MuMech,MechJebModuleTargetController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTargetController.cs,DoCoordinatePicking,The length of the statement  "                        GUI.Label(new Rect(Input.mousePosition.x + 15' Screen.height - Input.mousePosition.y' 200' 50)' mouseCoords.ToStringDecimal() + "\n" + biome); " is 142.
Long Statement,MuMech,MechJebModuleTargetController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTargetController.cs,DrawMapViewTarget,The length of the statement  "            if ((target is Vessel) && (!((Vessel)target).LandedOrSplashed || (((Vessel)target).mainBody != vessel.mainBody))) return; " is 121.
Long Statement,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,LimitToMaxDynamicPressureInfoItem,The length of the statement  "            limitDynamicPressure = GUILayout.Toggle(limitDynamicPressure' Localizer.Format("#MechJeb_Ascent_checkbox11")' s' GUILayout.Width(140));//"Limit Q to" " is 149.
Long Statement,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,LimitToPreventOverheatsInfoItem,The length of the statement  "            limitToPreventOverheats = GUILayout.Toggle(limitToPreventOverheats' Localizer.Format("#MechJeb_Ascent_checkbox12")' s);//"Prevent engine overheats" " is 147.
Long Statement,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,LimitToPreventFlameoutInfoItem,The length of the statement  "            limitToPreventFlameout = GUILayout.Toggle(limitToPreventFlameout' Localizer.Format("#MechJeb_Ascent_checkbox13")' s);//"Prevent jet flameout" " is 141.
Long Statement,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,LimitToPreventUnstableIgnitionInfoItem,The length of the statement  "            limitToPreventUnstableIgnition = GUILayout.Toggle(limitToPreventUnstableIgnition' Localizer.Format("#MechJeb_Ascent_checkbox14")' s);//"Prevent unstable ignition" " is 162.
Long Statement,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,AutoRCsUllageInfoItem,The length of the statement  "            autoRCSUllaging = GUILayout.Toggle(autoRCSUllaging' Localizer.Format("#MechJeb_Ascent_checkbox15")' s);//"Use RCS to ullage" " is 124.
Long Statement,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,LimitAccelerationInfoItem,The length of the statement  "            limitAcceleration = GUILayout.Toggle(limitAcceleration' Localizer.Format("#MechJeb_Ascent_checkbox16")' s' GUILayout.Width(140));//"Limit acceleration to" " is 154.
Long Statement,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,LimitThrottleInfoItem,The length of the statement  "            if (limiter == LimitMode.Throttle) s.onHover.textColor = s.onNormal.textColor = maxThrottle > 0d ? Color.green : Color.red; " is 123.
Long Statement,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,LimitThrottleInfoItem,The length of the statement  "            limitThrottle = GUILayout.Toggle(limitThrottle' Localizer.Format("#MechJeb_Ascent_checkbox17")' s' GUILayout.Width(110));//"Limit throttle to" " is 142.
Long Statement,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,LimiterMinThrottleInfoItem,The length of the statement  "            limiterMinThrottle = GUILayout.Toggle(limiterMinThrottle' Localizer.Format("#MechJeb_Ascent_checkbox18")' s' GUILayout.Width(160));//"Keep limited throttle over" " is 161.
Long Statement,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,DifferentialThrottle,The length of the statement  "                s.onHover.textColor = s.onNormal.textColor = core.thrust.differentialThrottleSuccess == DifferentialThrottleStatus.Success ? Color.green : Color.yellow; " is 152.
Long Statement,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,DifferentialThrottle,The length of the statement  "            differentialThrottle = GUILayout.Toggle(differentialThrottle' Localizer.Format("#MechJeb_Ascent_checkbox19")' s);//"Differential throttle" " is 138.
Long Statement,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,LimitElectricInfoItem,The length of the statement  "            electricThrottle = GUILayout.Toggle(electricThrottle' Localizer.Format("#MechJeb_Ascent_checkbox20")' s' GUILayout.Width(110));//"Electric limit Lo" " is 148.
Long Statement,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,OnStart,The length of the statement  "            preventingUnstableIgnitionsMessage = new ScreenMessage(Localizer.Format("#MechJeb_Ascent_srcmsg1")' 2f' ScreenMessageStyle.UPPER_CENTER);//"<color=orange>[MechJeb]: Killing throttle to prevent unstable ignition</color>" " is 219.
Long Statement,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,SetFlightGlobals,The length of the statement  "                FlightInputHandler.state.mainThrottle = (float) throttle; //so that the on-screen throttle gauge reflects the autopilot throttle " is 128.
Long Statement,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,Drive,The length of the statement  "            if (core.GetComputerModule<MechJebModuleThrustWindow>().hidden && core.GetComputerModule<MechJebModuleAscentGuidance>().hidden) { return; } " is 139.
Long Statement,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,Drive,The length of the statement  "                            if ((Math.Min(vesselState.altitudeASL' vesselState.altitudeTrue) > 5000) && (hsdir.magnitude > Math.Max(Math.Abs(spd)' 100 * mainBody.GeeASL) * 2)) " is 147.
Long Statement,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,AccelerationLimitedThrottle,The length of the statement  "            double throttleForMaxAccel = (maxAcceleration - vesselState.minThrustAccel) / (vesselState.maxThrustAccel - vesselState.minThrustAccel); " is 136.
Long Statement,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,OnUpdate,The length of the statement  "            if (core.GetComputerModule<MechJebModuleThrustWindow>().hidden && core.GetComputerModule<MechJebModuleAscentGuidance>().hidden) " is 127.
Long Statement,MuMech,MechJebModuleThrustWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustWindow.cs,AutostageOnceItem,The length of the statement  "                GUILayout.Label(Localizer.Format("#MechJeb_Utilities_label1"' (core.staging.autostagingOnce ?  Localizer.Format("#MechJeb_Utilities_label1_1") : " ")));//"Autostaging"<<1>>"Active" -------<<1>>" once ":"" " is 204.
Long Statement,MuMech,MechJebModuleThrustWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustWindow.cs,WindowGUI,The length of the statement  "            core.thrust.smoothThrottle = GUILayout.Toggle(core.thrust.smoothThrottle' Localizer.Format("#MechJeb_Utilities_checkbox2"));//"Smooth throttle" " is 143.
Long Statement,MuMech,MechJebModuleThrustWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustWindow.cs,WindowGUI,The length of the statement  "            core.thrust.manageIntakes = GUILayout.Toggle(core.thrust.manageIntakes' Localizer.Format("#MechJeb_Utilities_checkbox3"));//"Manage air intakes" " is 144.
Long Statement,MuMech,MechJebModuleThrustWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustWindow.cs,WindowGUI,The length of the statement  "						GUILayout.Label(Localizer.Format("#MechJeb_Utilities_label3")' new GUIStyle(GUI.skin.label) { normal = { textColor = Color.yellow } });//"Differential throttle failed\nMore engines required" " is 190.
Long Statement,MuMech,MechJebModuleThrustWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustWindow.cs,WindowGUI,The length of the statement  "						GUILayout.Label(Localizer.Format("#MechJeb_Utilities_label4")' new GUIStyle(GUI.skin.label) { normal = { textColor = Color.yellow } });//"Differential throttle failed\nNo active engine" " is 185.
Long Statement,MuMech,MechJebModuleThrustWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustWindow.cs,WindowGUI,The length of the statement  "						GUILayout.Label(Localizer.Format("#MechJeb_Utilities_label5")' new GUIStyle(GUI.skin.label) { normal = { textColor = Color.yellow } });//"Differential throttle failed\nCannot find solution" " is 189.
Long Statement,MuMech,MechJebModuleThrustWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustWindow.cs,WindowGUI,The length of the statement  "            if (!core.staging.enabled && GUILayout.Button(Localizer.Format("#MechJeb_Utilities_button1"))) core.staging.AutostageOnce(this);//"Autostage once" " is 146.
Long Statement,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,WindowGUI,The length of the statement  "                MechJebModuleThrustController.TMode newMode = (MechJebModuleThrustController.TMode)GUILayout.SelectionGrid((int)core.thrust.tmode' trans_texts' 2' sty); " is 152.
Long Statement,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,WindowGUI,The length of the statement  "                float val = (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1); // change by 5 if the mod_key is held down' else by 1 -- would be better if it actually worked... " is 155.
Long Statement,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,WindowGUI,The length of the statement  "                core.thrust.trans_kill_h = GUILayout.Toggle(core.thrust.trans_kill_h' Localizer.Format("#MechJeb_Trans_kill_h")' GUILayout.ExpandWidth(true)); " is 142.
Long Statement,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,WindowGUI,The length of the statement  "                GUILayout.Label(Localizer.Format("#MechJeb_Trans_current_spd") + MuMech.MuUtils.ToSI(core.thrust.trans_spd_act) + "m/s"' GUILayout.ExpandWidth(true)); " is 150.
Long Statement,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,WindowGUI,The length of the statement  "            sty.normal.textColor = sty.focused.textColor = sty.hover.textColor = sty.active.textColor = sty.onNormal.textColor = sty.onFocused.textColor = sty.onHover.textColor = sty.onActive.textColor = (abort != AbortStage.OFF) ? Color.red : Color.green; " is 244.
Long Statement,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,WindowGUI,The length of the statement  "            if (GUILayout.Button((abort != AbortStage.OFF) ? Localizer.Format("#MechJeb_Trans_NOPANIC") : Localizer.Format("#MechJeb_Trans_PANIC")' sty' GUILayout.ExpandWidth(true))) " is 170.
Long Statement,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,Drive,The length of the statement  "            if (!core.attitude.users.Contains(this) && ( core.thrust.trans_kill_h && core.thrust.tmode != MechJebModuleThrustController.TMode.OFF)) { core.attitude.users.Add(this); } " is 170.
Long Statement,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,Drive,The length of the statement  "            if ( core.attitude.users.Contains(this) && (!core.thrust.trans_kill_h || core.thrust.tmode == MechJebModuleThrustController.TMode.OFF)) { core.attitude.users.Remove(this); } " is 173.
Long Statement,MuMech,MechJebModuleWarpController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpController.cs,OnUpdate,The length of the statement  "                if (!vessel.LandedOrSplashed && TimeWarp.WarpMode == TimeWarp.Modes.HIGH && TimeWarp.CurrentRateIndex == TimeWarp.fetch.GetMaxRateForAltitude(vessel.altitude' vessel.mainBody)) " is 176.
Long Statement,MuMech,MechJebModuleWarpController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpController.cs,OnUpdate,The length of the statement  "                //print("Warppause : lastAskedIndex=" + lastAskedIndex + " CurrentRateIndex=" + TimeWarp.CurrentRateIndex + " WarpMode=" + TimeWarp.WarpMode + " MaxCurrentRate=" + TimeWarp.fetch.GetMaxRateForAltitude(vessel.altitude' vessel.mainBody)); " is 236.
Long Statement,MuMech,MechJebModuleWarpController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpController.cs,SetTimeWarpRate,The length of the statement  "                    ScreenMessages.PostScreenMessage(Localizer.Format("#MechJeb_WarpHelper_scrmsg"));//"MJ : Warp paused - resume in the Warp Helper menu" " is 134.
Long Statement,MuMech,MechJebModuleWarpController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpController.cs,WarpRegularAtRate,The length of the statement  "            else if (TimeWarp.CurrentRateIndex + 1 < TimeWarp.fetch.warpRates.Length && TimeWarp.fetch.warpRates[TimeWarp.CurrentRateIndex + 1] <= maxRate) " is 143.
Long Statement,MuMech,MechJebModuleWarpController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpController.cs,WarpPhysicsAtRate,The length of the statement  "            else if (TimeWarp.CurrentRateIndex + 1 < TimeWarp.fetch.physicsWarpRates.Length && TimeWarp.fetch.physicsWarpRates[TimeWarp.CurrentRateIndex + 1] <= maxRate) " is 157.
Long Statement,MuMech,MechJebModuleWarpController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpController.cs,IncreaseRegularWarp,The length of the statement  "            if (TimeWarp.fetch.warpRates[TimeWarp.CurrentRateIndex] != TimeWarp.CurrentRate) return false; //most recent warp change is not yet complete " is 140.
Long Statement,MuMech,MechJebModuleWarpController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpController.cs,IncreasePhysicsWarp,The length of the statement  "            if (TimeWarp.fetch.physicsWarpRates[TimeWarp.CurrentRateIndex] != TimeWarp.CurrentRate) return false; //most recent warp change is not yet complete " is 147.
Long Statement,MuMech,MechJebModuleWarpController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpController.cs,MinimumWarp,The length of the statement  "            if (TimeWarp.CurrentRateIndex == 0) return false; //Somehow setting TimeWarp.SetRate to 0 when already at 0 causes unexpected rapid separation (Kraken) " is 151.
Long Statement,MuMech,MechJebModuleWarpHelper,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpHelper.cs,WindowGUI,The length of the statement  "                            if (vessel.patchedConicsUnlocked() && vessel.patchedConicSolver.maneuverNodes.Any()) targetUT = vessel.patchedConicSolver.maneuverNodes[0].UT; " is 142.
Long Statement,MuMech,MechJebModuleWarpHelper,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpHelper.cs,WindowGUI,The length of the statement  "                                targetUT = OrbitExtensions.NextTimeOfRadius(vessel.orbit' vesselState.time' vesselState.mainBody.Radius + vesselState.mainBody.RealMaxAtmosphereAltitude()); " is 156.
Long Statement,MuMech,MechJebModuleWarpHelper,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpHelper.cs,WindowGUI,The length of the statement  "            if (warping) GUILayout.Label(Localizer.Format("#MechJeb_WarpHelper_label6") + (leadTime > 0 ? GuiUtils.TimeToDHMS(leadTime) + " before " : "") + warpTargetStrings[(int)warpTarget] + ".");//"Warping to " " is 202.
Long Statement,MuMech,MechJebWaypoint,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,GetNameWithCoords,The length of the statement  "			return (Name != "" ? Name : (Target != null ? Target.vesselName : "Waypoint")) + " - " + Coordinates.ToStringDMS(Latitude' Longitude' false); " is 141.
Long Statement,MuMech,MechJebWaypoint,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,GetNameWithCoords,The length of the statement  "//				((Latitude >= 0 ? "N " : "S ") + Math.Abs(Math.Round(Latitude' 3)) + "' " + (Longitude >= 0 ? "E " : "W ") + Math.Abs(Math.Round(Longitude' 3))); " is 151.
Long Statement,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,GetMouseFlightCoordinates,The length of the statement  "						double alt = body.pqsController.GetSurfaceHeight(QuaternionD.AngleAxis(body.GetLongitude(surfacePoint)' Vector3d.down) * QuaternionD.AngleAxis(body.GetLatitude(surfacePoint)' Vector3d.forward) * Vector3d.right); " is 211.
Long Statement,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The length of the statement  "						MuMech.GLUtils.DrawGroundMarker(mainBody' wp.Latitude' wp.Longitude' Color.red' true' (DateTime.Now.Second + DateTime.Now.Millisecond / 1000f) * 6' mainBody.Radius / 100); " is 171.
Long Statement,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The length of the statement  "							eta += GuiUtils.FromToETA((i == ap.WaypointIndex ? vessel.CoM : (Vector3)ap.Waypoints[i - 1].Position)' (Vector3)wp.Position' (ap.etaSpeed > 0.1 && ap.etaSpeed < maxSpeed ? (float)Math.Round(ap.etaSpeed' 1) : maxSpeed)); " is 220.
Long Statement,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The length of the statement  "						dist += Vector3.Distance((i == ap.WaypointIndex || (ap.WaypointIndex == -1 && i == 0) ? vessel.CoM : (Vector3)ap.Waypoints[i - 1].Position)' (Vector3)wp.Position); " is 163.
Long Statement,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The length of the statement  "					string str = string.Format("[{0}] - {1} - R: {2:F1} m\n       S: {3:F0} ~ {4:F0} - D: {5}m - ETA: {6}"' i + 1' wp.GetNameWithCoords()' wp.Radius' " is 145.
Long Statement,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The length of the statement  "						//if (i == ap.WaypointIndex) { Debug.Log(Event.current.type.ToString() + " - " + waypointRects[i].ToString() + " - " + scroll.ToString()); } " is 140.
Long Statement,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The length of the statement  "						if (GUILayout.Button("A"' GUILayout.ExpandWidth(false))) { ap.Waypoints.GetRange(i' ap.Waypoints.Count).ForEach(fewp => fewp.Radius = wp.Radius); } " is 147.
Long Statement,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The length of the statement  "						if (GUILayout.Button("A"' GUILayout.ExpandWidth(false))) { ap.Waypoints.GetRange(i' ap.Waypoints.Count).ForEach(fewp => fewp.MinSpeed = wp.MinSpeed); } " is 151.
Long Statement,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The length of the statement  "						if (GUILayout.Button("A"' GUILayout.ExpandWidth(false))) { ap.Waypoints.GetRange(i' ap.Waypoints.Count).ForEach(fewp => fewp.MaxSpeed = wp.MaxSpeed); } " is 151.
Long Statement,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The length of the statement  "			if (GUILayout.Button((alt ? "Top" : "Up")' GUILayout.Width(57)) && selIndex > 0 && selIndex < ap.Waypoints.Count && ap.Waypoints.Count >= 2) " is 140.
Long Statement,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The length of the statement  "            if (GUILayout.Button((alt ? "Bottom" : "Down")' GUILayout.Width(57)) && selIndex >= 0 && selIndex < ap.Waypoints.Count - 1 && ap.Waypoints.Count >= 2) " is 150.
Long Statement,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageSettings,The length of the statement  "				core.GetComputerModule<MechJebModuleWaypointHelpWindow>().enabled = !core.GetComputerModule<MechJebModuleWaypointHelpWindow>().enabled; " is 135.
Long Statement,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "				styleActive.active.textColor = styleActive.focused.textColor = styleActive.hover.textColor = styleActive.normal.textColor = Color.green; " is 136.
Long Statement,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "				styleQuicksave.active.textColor = styleQuicksave.focused.textColor = styleQuicksave.hover.textColor = styleQuicksave.normal.textColor = Color.yellow; " is 149.
Long Statement,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,OnFixedUpdate,The length of the statement  "			if (vessel.isActiveVessel && (renderer == null || renderer.ap != ap)) { MechJebRouteRenderer.AttachToMapView(core); } //MechJebRouteRenderer.AttachToMapView(core); } " is 165.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "				btnActive.active.textColor = btnActive.hover.textColor = btnActive.focused.textColor = btnActive.normal.textColor = Color.green; " is 128.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			HelpTopic("Holding a set Heading"' "To hold a specific heading just tick the box next to 'Heading control' and the autopilot will try to keep going for the entered heading." + " is 175.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			HelpTopic("Holding a set Speed"' "To hold a specific speed just tick the box next to 'Speed control' and the autopilot will try to keep going at the entered speed." + " is 166.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			HelpTopic("More stability while driving and nice landings"' "If you turn on 'Stability Control' then the autopilot will use the reaction wheel's torque to keep the rover aligned with the surface." + " is 198.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			          "\nThis means that if you make a jump the autopilot will try to align the rover in the best possible way to land as straight and flat as possible given the available time and torque." + " is 185.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			          "\n\n'Stability Control' will also limit the brake to reduce the chances of flipping over from too much braking power." + " is 121.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			HelpTopic("Brake on Pilot Eject"' "With this option enabled the rover will stop if the pilot (on manned rovers) should get thrown out of his seat."); " is 149.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			HelpTopic("Button 'Follow' / 'Stop'"' "This sets the autopilot to drive along the set route starting at the first waypoint. Only visible when atleast one waypoint is set." + " is 173.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			          "\n\nAlt click will set the autopilot to 'Loop Mode' which will make it go for the first waypoint again after reaching the last." + " is 131.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			          "\n\nIf the autopilot is already active the 'Follow' button will turn into the 'Stop' button which will obviously stop it when pressed."); " is 138.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			HelpTopic("Button 'To Target'"' "Clears the route' adds the target as only waypoint and starts the autopilot. Only visible with a selected target." + " is 149.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			          "\n\nAlt click will set the autopilot to 'Loop Mode' which will make it continue to follow the target' pausing when near it instead of turning off then."); " is 155.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			HelpTopic("Button 'Add Target'"' "Adds the selected target as a waypoint either at the end of the route or before the selected waypoint. Only visible with a selected target."); " is 176.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			HelpTopic("Adding Waypoints"' "Adds a new waypoint to the route at the end or before the currently selected waypoint' " + " is 121.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			          "\n\nAlt clicking will reverse the route for easier going back and holding Alt while clicking the terrain or body in Mapview will allow to add more waypoints without having to click the button again."); " is 202.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			HelpTopic("Reordering Waypoints"' "'Up' and 'Down' will move the selected waypoint up or down in the list' Alt clicking will move it to the top or bottom respectively."); " is 170.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			HelpTopic("Waypoint Radius"' "Radius defines the distance to the center of the waypoint after which the waypoint will be considered 'reached'." + " is 145.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			          "\n\nA radius of 5m (default) simply means that when you're 5m from the waypoint away the autopilot will jump to the next or turn off if it was the last." + " is 156.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			          "\n\nThe minimum speed was before used to set the speed with which the autopilot will go through the waypoint' but that got reworked now to be based on the next waypoint's max. speed and the turn needed at the waypoint." + " is 222.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			          "\n\nThis will make the autopilot stop and try to quicksave at that waypoint and then continue. A QuickSave waypoint has yellow text instead of white." + " is 153.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			          "\n\nSmall sideeffect: leaving the throttle up will prevent the saving from occurring effectively pausing the autopilot at that point until interefered with. (Discovered by Greys)" + " is 182.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			HelpTopic("Changing the current target Waypoint"' "Alt clicking a waypoint will mark it as the current target waypoint. The active waypoint has a green tinted background."); " is 173.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			HelpTopic("Heading / Speed PID"' "These parameters control the behaviour of the heading's / speed's PID. Saved globally so NO TOUCHING unless you know what you're doing (or atleast know how to write down numbers to restore it if you mess up)"); " is 244.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			HelpTopic("Safe Turn Speed"' "'Safe Turn Speed' tells the autopilot which speed the rover can usually go full turn through corners without tipping over." + " is 155.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			          "\n\nGiven how differently terrain can be and other influences you can just leave it at 3 m/s but if you're impatient or just want to experiment feel free to test around. Saved per vessel type (same named vessels will share the setting)."); " is 240.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			          "\n'Traction Brake Limit' defines what traction is atleast needed for the autopilot to still apply the brakes (given 'Stability Control' is active) even if you hold the brake down." + " is 183.
Long Statement,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The length of the statement  "		 			HelpTopic("Changing the route height in Mapview"' "These values define offsets for the route height in Mapview. Given how weird it's set up it can be that they are too high or too low so I added these for easier adjusting. Saved globally' I think."); " is 250.
Long Statement,MuMech,MechJebRouteRenderer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,RaisePositionOverTerrain,The length of the statement  "				return ScaledSpace.LocalToScaledSpace(body.position + (body.Radius + HeightOffset + body.TerrainAltitude(lat' lon)) * body.GetSurfaceNVector(lat' lon)); " is 152.
Long Statement,MuMech,MechJebRouteRenderer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,RaisePositionOverTerrain,The length of the statement  "				return body.GetWorldSurfacePosition(body.GetLatitude(Position)' body.GetLongitude(Position)' body.GetAltitude(Position) + HeightOffset); " is 136.
Long Statement,MuMech,MechJebRouteRenderer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,OnPreRender,The length of the statement  "				selWP.gameObject.layer = pastPath.gameObject.layer = currPath.gameObject.layer = nextPath.gameObject.layer = (MapView.MapIsEnabled ? 9 : 0); " is 140.
Long Statement,MuMech,MechJebRouteRenderer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,OnPreRender,The length of the statement  "					nextPath.SetPosition(0' RaisePositionOverTerrain((ap.WaypointIndex == -1 ? ap.vessel.CoM : (Vector3)ap.Waypoints[ap.WaypointIndex].Position)' targetHeight)); " is 157.
Long Statement,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The length of the statement  "                float direction = ((vessel.GetSrfVelocity().magnitude > 25) && (Vector3.Angle(vessel.transform.up' vessel.GetSrfVelocity()) > 90)) ? -1 : 1; " is 140.
Long Statement,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The length of the statement  "                lastFlaps[0] = AdvanceAnimationTo(flapsAnim' "Flap_Top_Right"' Mathf.Clamp01(direction * (vessel.ctrlState.pitch - vessel.ctrlState.yaw) / 2)' TimeWarp.deltaTime' lastFlaps[0]); " is 177.
Long Statement,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The length of the statement  "                lastFlaps[1] = AdvanceAnimationTo(flapsAnim' "Flap_Top_Left"' Mathf.Clamp01(direction * (vessel.ctrlState.pitch + vessel.ctrlState.yaw) / 2)' TimeWarp.deltaTime' lastFlaps[1]); " is 176.
Long Statement,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The length of the statement  "                lastFlaps[2] = AdvanceAnimationTo(flapsAnim' "Flap_Bottom_Right"' Mathf.Clamp01(direction * (-vessel.ctrlState.pitch - vessel.ctrlState.yaw) / 2)' TimeWarp.deltaTime' lastFlaps[2]); " is 181.
Long Statement,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The length of the statement  "                lastFlaps[3] = AdvanceAnimationTo(flapsAnim' "Flap_Bottom_Left"' Mathf.Clamp01(direction * (-vessel.ctrlState.pitch + vessel.ctrlState.yaw) / 2)' TimeWarp.deltaTime' lastFlaps[3]); " is 180.
Long Statement,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The length of the statement  "                    if (HighLogic.LoadedSceneIsEditor || (HighLogic.LoadedSceneIsFlight && FlightGlobals.ready && vessel != null && core.attitude.enabled)) " is 135.
Long Statement,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The length of the statement  "                        if ((UnityEngine.Random.Range(0' 10.0F / (HighLogic.LoadedSceneIsEditor ? Time.deltaTime : TimeWarp.deltaTime)) < (Time.time - lastBlink))) " is 139.
Long Statement,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The length of the statement  "                        GameObject cam = HighLogic.LoadedSceneIsEditor ? EditorLogic.fetch.editorCamera.gameObject : FlightCamera.fetch.gameObject; " is 123.
Long Statement,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The length of the statement  "                            target = core.attitude.attitudeGetReferenceRotation(core.attitude.attitudeReference) * core.attitude.attitudeTarget * Quaternion.Euler(90' 0' 0) * Vector3.up; " is 158.
Long Statement,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The length of the statement  "                        eye_base.localEulerAngles = new Vector3(0' 0' Mathf.MoveTowardsAngle(eye_base.localEulerAngles.z' polarTarget.y - 90' 360 * Time.deltaTime)); " is 141.
Long Statement,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The length of the statement  "                        eye_ball.localRotation = Quaternion.RotateTowards(eye_ball.localRotation' Quaternion.Euler(polarTarget.x + 90' 0' 0)' 360 * Time.deltaTime); " is 140.
Long Statement,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,PrettyPrint,The length of the statement  "            return "[" + PadPositive(vector.x' format) + "' " + PadPositive(vector.y' format) + "' " + PadPositive(vector.z' format) + " ]"; " is 128.
Long Statement,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,PrettyPrint,The length of the statement  "            return "[" + PadPositive(quaternion.x' format) + "' " + PadPositive(quaternion.y' format) + "' " + PadPositive(quaternion.z' format) + "' " + PadPositive(quaternion.w 'format) + "]"; " is 182.
Long Statement,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,North,The length of the statement  "            return Vector3d.Exclude(o.Up(UT)' (o.referenceBody.transform.up * (float)o.referenceBody.Radius) - o.SwappedRelativePositionAtUT(UT)).normalized; " is 145.
Long Statement,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,PerturbedOrbit,The length of the statement  "            return MuUtils.OrbitFromStateVectors(o.SwappedAbsolutePositionAtUT(UT)' o.SwappedOrbitalVelocityAtUT(UT) + dV' o.referenceBody' UT); " is 132.
Long Statement,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,GetEccentricAnomalyAtTrueAnomaly,The length of the statement  "                if (coshE < 1) throw new ArgumentException("OrbitExtensions.GetEccentricAnomalyAtTrueAnomaly: True anomaly of " + trueAnomaly + " radians is not attained by orbit with eccentricity " + o.eccentricity); " is 201.
Long Statement,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,SynodicPeriod,The length of the statement  "            int sign = (Vector3d.Dot(a.SwappedOrbitNormal()' b.SwappedOrbitNormal()) > 0 ? 1 : -1); //detect relative retrograde motion " is 123.
Long Statement,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,NextTimeOfRadius,The length of the statement  "            if (radius < o.PeR || (o.eccentricity < 1 && radius > o.ApR)) throw new ArgumentException("OrbitExtensions.NextTimeOfRadius: given radius of " + radius + " is never achieved: o.PeR = " + o.PeR + " and o.ApR = " + o.ApR); " is 220.
Long Statement,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,MuString,The length of the statement  "            return "PeA:" + o.PeA +" ApA:" + o.ApA + " SMA:" + o.semiMajorAxis + " ECC:" + o.eccentricity + " INC:" + o.inclination + " LAN:" + o.LAN + " ArgP:" + o.argumentOfPeriapsis + " TA:" + o.trueAnomaly; " is 198.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToEllipticize,The length of the statement  "            double L = Math.Sqrt(Math.Abs((Math.Pow(E * (newApR - newPeR)' 2) - GM * GM) / (2 * E))); //angular momentum per unit mass of new orbit " is 135.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToEllipticize,The length of the statement  "            double verticalV = Math.Sqrt(Math.Abs(2 * kineticE - horizontalV * horizontalV)); //vertical velocity of new orbit at UT " is 120.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToChangePeriapsis,The length of the statement  "                //when lowering periapsis' we burn horizontally' and max possible deltaV is the deltaV required to kill all horizontal velocity " is 127.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,HeadingForInclination,The length of the statement  "            double cosDesiredSurfaceAngle = Math.Cos(inclinationDegrees * UtilMath.Deg2Rad) / Math.Cos(latitudeDegrees * UtilMath.Deg2Rad); " is 127.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,HeadingForLaunchInclination,The length of the statement  "                return MuUtils.ClampDegrees360(UtilMath.Rad2Deg * Math.Atan2(Vector3d.Dot(desiredHorizontalVelocity' east)' Vector3d.Dot(desiredHorizontalVelocity' north))); " is 157.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,HeadingForLaunchInclination,The length of the statement  "            return MuUtils.ClampDegrees360(UtilMath.Rad2Deg * Math.Atan2(Vector3d.Dot(deltaHorizontalVelocity' east)' Vector3d.Dot(deltaHorizontalVelocity' north))); " is 153.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToChangeInclination,The length of the statement  "            Vector3d northComponent = actualHorizontalVelocity.magnitude * Math.Cos(UtilMath.Deg2Rad * desiredHeading) * o.North(UT); " is 121.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndApsisPhaseAngleOfHohmannTransfer,The length of the statement  "                Vector3d transferApDirection = transferOrbit.SwappedRelativePositionAtApoapsis();  // getRelativePositionAtUT was returning NaNs! :((((( " is 136.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndApsisPhaseAngleOfHohmannTransfer,The length of the statement  "                Vector3d transferPeDirection = transferOrbit.SwappedRelativePositionAtPeriapsis();  // getRelativePositionAtUT was returning NaNs! :((((( " is 137.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForHohmannTransfer,The length of the statement  "                if ((i == 1) && (Math.Abs(lastApsisPhaseAngle) < 0.5) && (Math.Sign(lastApsisPhaseAngle) == Math.Sign(apsisPhaseAngle))) " is 120.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForHohmannTransfer,The length of the statement  "                    throw new ArgumentException("OrbitalManeuverCalculator.DeltaVAndTimeForHohmannTransfer: couldn't find the transfer window!!"); " is 126.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToInterceptAtTime,The length of the statement  "            //GoodingSolver.Solve(initialRelPos' initialVelocity' finalRelPos' finalVelocity' shortway ? DT : -DT' o.referenceBody' 0' out transferVi' out transferVf); " is 155.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToInterceptAtTime,The length of the statement  "                //GoodingSolver.Solve(initialRelPos' initialVelocity' finalRelPos' finalVelocity' shortway ? DT : -DT' o.referenceBody' 0' out transferVi' out transferVf); " is 155.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVForCourseCorrection,The length of the statement  "            double closestApproachTime = o.NextClosestApproachTime(target' UT + 1); //+1 so that closestApproachTime is definitely > UT " is 123.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForCheapestCourseCorrection,The length of the statement  "            double closestApproachTime = o.NextClosestApproachTime(target' UT + 2); //+2 so that closestApproachTime is definitely > UT " is 123.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForCheapestCourseCorrection,The length of the statement  "            Vector3d collisionRelVel = collisionOrbit.SwappedOrbitalVelocityAtUT(collisionUT) - target.SwappedOrbitalVelocityAtUT(collisionUT); " is 131.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForCheapestCourseCorrection,The length of the statement  "            Vector3d soiEnterRelVel = collisionOrbit.SwappedOrbitalVelocityAtUT(soiEnterUT) - target.SwappedOrbitalVelocityAtUT(soiEnterUT); " is 128.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForCheapestCourseCorrection,The length of the statement  "            double E = 0.5 * soiEnterRelVel.sqrMagnitude - targetBody.gravParameter / targetBody.sphereOfInfluence; //total orbital energy on SoI enter " is 139.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForCheapestCourseCorrection,The length of the statement  "            double finalPeSpeed = Math.Sqrt(2 * (E + targetBody.gravParameter / finalPeR)); //conservation of energy gives the orbital speed at finalPeR. " is 141.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForCheapestCourseCorrection,The length of the statement  "            double desiredImpactParameter = finalPeR * finalPeSpeed / soiEnterRelVel.magnitude; //conservation of angular momentum gives the required impact parameter " is 154.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForCheapestCourseCorrection,The length of the statement  "            LambertSolver.Solve(o.SwappedRelativePositionAtUT(burnUT)' interceptTarget - o.referenceBody.position' collisionUT - burnUT' o.referenceBody' true' out velAfterBurn' out arrivalVel); " is 182.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForCheapestCourseCorrection,The length of the statement  "            LambertSolver.Solve(o.SwappedRelativePositionAtUT(burnUT)' interceptTarget - o.referenceBody.position' collisionUT - burnUT' o.referenceBody' true' out velAfterBurn' out arrivalVel); " is 182.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryTransferEjection,The length of the statement  "            //ejection angle and if we didn't have to worry about the planet's gravity dragging us back and increasing the required dV. " is 123.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryTransferEjection,The length of the statement  "                if (target.semiMajorAxis < planetOrbit.semiMajorAxis) idealDeltaV = DeltaVToChangePeriapsis(planetOrbit' idealBurnUT' target.semiMajorAxis); " is 140.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryTransferEjection,The length of the statement  "            double soiExitEnergy = 0.5 * soiExitVelocity.sqrMagnitude - o.referenceBody.gravParameter / o.referenceBody.sphereOfInfluence; " is 126.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryTransferEjection,The length of the statement  "            Vector3d ejectionOrbitInitialPosition = o.referenceBody.position + ejectionRadius * (Vector3d)o.referenceBody.transform.up; " is 123.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryTransferEjection,The length of the statement  "            Orbit sampleEjectionOrbit = MuUtils.OrbitFromStateVectors(ejectionOrbitInitialPosition' ejectionOrbitInitialVelocity' o.referenceBody' 0); " is 138.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryTransferEjection,The length of the statement  "            Vector3d ejectionPointDirection = Quaternion.AngleAxis(-(float)(90 + turningAngle)' o.SwappedOrbitNormal()) * inPlaneSoiExitDirection; " is 134.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryTransferEjection,The length of the statement  "            Vector3d ejectionBurnDirection = Quaternion.AngleAxis(-(float)(turningAngle)' o.SwappedOrbitNormal()) * inPlaneSoiExitDirection; " is 128.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,LambertCost,The length of the statement  "                f[0] = DeltaVToInterceptAtTime(prob.GM' prob.pos' prob.vel' prob.tpos' prob.tvel' x[0]' x[1]' out secondBurn' prob.shortway).magnitude; " is 135.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveTransfer,The length of the statement  "            return DeltaVToInterceptAtTime(prob.GM' prob.pos' prob.vel' prob.tpos' prob.tvel' x[0]' x[1]' out secondBurn' prob.shortway); " is 125.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveAnnealed,The length of the statement  "            // update the patched conic prediction for hyperbolic orbits (important *not* to do this for mutated planetary orbits' since we will " is 132.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveAnnealed,The length of the statement  "            // figure the max transfer time of a Hohmann orbit using the SMAs of the two orbits instead of the radius (as a guess)' multiplied by 2 " is 135.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveAnnealed,The length of the statement  "            Debug.Log("[MechJeb] DeltaVAndTimeForBiImpulsiveAnnealed Check1: minDT = " + minDT + " maxDT = " + maxDT + " maxTT = " + maxTT + " maxDTplusT = " + maxDTplusT); " is 160.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveAnnealed,The length of the statement  "            if (target.patchEndTransition != Orbit.PatchTransitionType.FINAL && target.patchEndTransition != Orbit.PatchTransitionType.INITIAL) " is 131.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveAnnealed,The length of the statement  "            if (o.patchEndTransition != Orbit.PatchTransitionType.FINAL && o.patchEndTransition != Orbit.PatchTransitionType.INITIAL) " is 121.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveAnnealed,The length of the statement  "            Debug.Log("[MechJeb] DeltaVAndTimeForBiImpulsiveAnnealed Check2: minDT = " + minDT + " maxDT = " + maxDT + " maxTT = " + maxTT + " maxDTplusT = " + maxDTplusT); " is 160.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveAnnealed,The length of the statement  "                Vector3d burnVec = DeltaVAndTimeForBiImpulsiveTransfer(GM' pos' vel' tpos' tvel' nextDT' nextTT' out burnDT' out burnTT' out burnCost' minDT: minDT' maxDT: maxDT' maxTT: maxTT' maxDTplusT: maxDTplusT' intercept_only: intercept_only' shortway: nextshortway); " is 257.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveAnnealed,The length of the statement  "            Debug.Log("Annealing results burnUT = " + bestUT + " zero'd burnUT = " + bestDT + " TT = " + bestTT + " Cost = " + bestCost + " shortway= " + bestshortway); " is 156.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryLambertTransferEjection,The length of the statement  "            //ejection angle and if we didn't have to worry about the planet's gravity dragging us back and increasing the required dV. " is 123.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryLambertTransferEjection,The length of the statement  "            double soiExitEnergy = 0.5 * soiExitVelocity.sqrMagnitude - o.referenceBody.gravParameter / o.referenceBody.sphereOfInfluence; " is 126.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryLambertTransferEjection,The length of the statement  "            Vector3d ejectionOrbitInitialPosition = o.referenceBody.position + ejectionRadius * (Vector3d)o.referenceBody.transform.up; " is 123.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryLambertTransferEjection,The length of the statement  "            Orbit sampleEjectionOrbit = MuUtils.OrbitFromStateVectors(ejectionOrbitInitialPosition' ejectionOrbitInitialVelocity' o.referenceBody' 0); " is 138.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryLambertTransferEjection,The length of the statement  "                - Math.Sqrt(Math.Pow(Math.Sin(coneAngle)' 2) - Math.Pow(Math.Cos(coneAngle) * Math.Tan(outOfPlaneAngle)' 2)) * exitNormal; " is 122.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryLambertTransferEjection,The length of the statement  "            Vector3d ejectionBurnDirection = Quaternion.AngleAxis(-(float)(turningAngle)' ejectionOrbitNormal) * soiExitVelocity.normalized; " is 128.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForMoonReturnEjection,The length of the statement  "            Orbit primaryOrbit = new Orbit(moon.orbit.inclination' moon.orbit.eccentricity' targetPrimaryRadius' moon.orbit.LAN' moon.orbit.argumentOfPeriapsis' moon.orbit.meanAnomalyAtEpoch' moon.orbit.epoch' primary); " is 207.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToResonantOrbit,The length of the statement  "            double x = Math.Pow(Math.Pow(a' 3) * Math.Pow(f' 2) + 3 * Math.Pow(a' 2) * Math.Pow(f' 2) * p + 3 * a * Math.Pow(f' 2) * Math.Pow(p' 2) + Math.Pow(f' 2) * Math.Pow(p' 3)' 1d / 3) - a; " is 183.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,Distance,The length of the statement  "                Math.Pow(Math.Cos(lat_a_rad) * Math.Sin(lat_b_rad) - Math.Sin(lat_a_rad) * Math.Cos(lat_b_rad) * Math.Cos(long_diff_rad)' 2))' " is 126.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,Heading,The length of the statement  "            // Original equation returns 0 for due south' increasing clockwise. We add 180 and clamp to 0-360 degrees to map to compass-type headings " is 137.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToShiftLAN,The length of the statement  "            // If the descending node is closer than the ascending node' or there is no ascending node' target the reverse of the newLAN " is 124.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToShiftLAN,The length of the statement  "            double desiredHeading = MuUtils.ClampDegrees360(Heading(burn_latitude' burn_longitude' target_latitude' target_longitude)); " is 123.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToShiftLAN,The length of the statement  "            Vector3d northComponent = actualHorizontalVelocity.magnitude * Math.Cos(UtilMath.Deg2Rad * desiredHeading) * o.North(UT); " is 121.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVForSemiMajorAxis,The length of the statement  "                //when lowering the SMA' we burn horizontally' and max possible deltaV is the deltaV required to kill all horizontal velocity " is 125.
Long Statement,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToShiftNodeLongitude,The length of the statement  "                    target_sma = Math.Pow ((o.referenceBody.gravParameter * target_period * target_period) / (4 * Math.PI * Math.PI)' 1.0 / 3.0); // cube roo " is 137.
Long Statement,MuMech,PIDControllerV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The length of the statement  "            Vector3d clamped = new Vector3d(Math.Max(min' Math.Min(max' action.x))' Math.Max(min' Math.Min(max' action.y))' Math.Max(min' Math.Min(max' action.z))); " is 152.
Long Statement,MuMech,PIDControllerV2,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The length of the statement  "            intAccum.x = (Math.Abs(derivativeAct.x) < 0.6 * max) ? intAccum.x + (error.x * Ki * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.x; " is 128.
Long Statement,MuMech,PIDControllerV2,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The length of the statement  "            intAccum.y = (Math.Abs(derivativeAct.y) < 0.6 * max) ? intAccum.y + (error.y * Ki * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.y; " is 128.
Long Statement,MuMech,PIDControllerV2,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The length of the statement  "            intAccum.z = (Math.Abs(derivativeAct.z) < 0.6 * max) ? intAccum.z + (error.z * Ki * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.z; " is 128.
Long Statement,MuMech,PIDControllerV2,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The length of the statement  "			intAccum.x = (Math.Abs(derivativeAct.x) < 0.6 * max) ? intAccum.x + (error.x * Ki * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.x; " is 128.
Long Statement,MuMech,PIDControllerV2,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The length of the statement  "			intAccum.y = (Math.Abs(derivativeAct.y) < 0.6 * max) ? intAccum.y + (error.y * Ki * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.y; " is 128.
Long Statement,MuMech,PIDControllerV2,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The length of the statement  "			intAccum.z = (Math.Abs(derivativeAct.z) < 0.6 * max) ? intAccum.z + (error.z * Ki * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.z; " is 128.
Long Statement,MuMech,PIDControllerV3,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The length of the statement  "            intAccum.x = (Math.Abs(derivativeAct.x) < 0.6 * max) ? intAccum.x + (error.x * Ki.x * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.x; " is 130.
Long Statement,MuMech,PIDControllerV3,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The length of the statement  "            intAccum.y = (Math.Abs(derivativeAct.y) < 0.6 * max) ? intAccum.y + (error.y * Ki.y * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.y; " is 130.
Long Statement,MuMech,PIDControllerV3,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The length of the statement  "            intAccum.z = (Math.Abs(derivativeAct.z) < 0.6 * max) ? intAccum.z + (error.z * Ki.z * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.z; " is 130.
Long Statement,MuMech,PartExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PartExtensions.cs,ThrustAtConditions,The length of the statement  "                Vector3d fwd = HighLogic.LoadedScene == GameScenes.EDITOR ? EditorLogic.VesselRotation * Vector3d.up : e.part.vessel.GetTransform().up; " is 135.
Long Statement,MuMech,PartExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PartExtensions.cs,ISPAtConditions,The length of the statement  "                isp *= Mathf.Lerp(1f' e.throttleIspCurve.Evaluate((float)throttle)' e.throttleIspCurveAtmStrength.Evaluate((float)atmPressure)); " is 128.
Long Statement,MuMech,PartExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PartExtensions.cs,IsDecoupledInStage,The length of the statement  "            if (((p.IsUnfiredDecoupler(out decoupledPart) && p == decoupledPart) || p.IsLaunchClamp()) && p.inverseStage == stage) return true; " is 131.
Long Statement,MuMech,PartExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PartExtensions.cs,IsDecoupledInStage,The length of the statement  "            if (p.parent.IsUnfiredDecoupler(out decoupledPart) && p == decoupledPart && p.parent.inverseStage == stage) return true; " is 120.
Long Statement,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The length of the statement  "            yf = new double[arcs.Count*13];  /* somewhat confusingly y0 contains the state' costate and parameters' while yf omits the parameters */ " is 136.
Long Statement,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The length of the statement  "            /* magnitude of terminal costate vector = 1.0 (dummy constraint for H(tf)=0 to optimize burntime because BC is keplerian) */ " is 124.
Long Statement,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,runOptimizer,The length of the statement  "            alglib.minlmcreatev(y0.Length' y0' lmDiffStep' out state);  /* y0.Length must == z.Length returned by the BC function for square problems */ " is 140.
Long Statement,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,UpdateY0,The length of the statement  "                if (arcs[i].m0 > 0)  // don't update guess if we're not staging (optimizer has to find the terminal mass of prior stage) " is 120.
Long Statement,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,InsertCoast,The length of the statement  "            yf = new double[arcs.Count*13];  /* somewhat confusingly y0 contains the state' costate and parameters' while yf omits the parameters */ " is 136.
Long Statement,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,RemoveArc,The length of the statement  "            yf = new double[arcs.Count*13];  /* somewhat confusingly y0 contains the state' costate and parameters' while yf omits the parameters */ " is 136.
Long Statement,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,Optimize,The length of the statement  "                    yf = new double[last_arcs.Count*13];  /* somewhat confusingly y0 contains the state' costate and parameters' while yf omits the parameters */ " is 141.
Long Statement,MuMech,Arc,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,ToString,The length of the statement  "                return "ksp_stage:"+ ksp_stage + " rocket_stage:" + rocket_stage + " isp:" + isp + " thrust:" + thrust + " c:" + c + " m0:" + m0 + " maxt:" + max_bt + " maxtbar:" + max_bt_bar + " avail ∆v:" + avail_dV + " used ∆v:" + dV + ( done ? " (done)" : "" ) + ( infinite ? " (infinite) " : "" ); " is 286.
Long Statement,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,ArcString,The length of the statement  "                    return String.Format("burn {0}: {1:F1}s {2:F1}m/s ({3:F1})"' arc.ksp_stage' tgo(t' n)' dV(t' n)' arc.avail_dV - dV(arc._synch_time' n)); " is 136.
Long Statement,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,r,The length of the statement  "                return Planetarium.fetch.rotation * new Vector3d( interpolate(0' tbar)' interpolate(1' tbar)' interpolate(2' tbar) ) * r_scale; " is 127.
Long Statement,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,v,The length of the statement  "                return Planetarium.fetch.rotation * new Vector3d( interpolate(3' tbar)' interpolate(4' tbar)' interpolate(5' tbar) ) * v_scale; " is 127.
Long Statement,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,pitch_and_heading,The length of the statement  "                heading = MuUtils.ClampDegrees360(UtilMath.Rad2Deg * Math.Atan2(Vector3d.Dot(headVec' east)' Vector3d.Dot(headVec' north))); " is 124.
Long Statement,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle5constraint,The length of the statement  "            Vector3d hT = new Vector3d( Math.Sin(LANT) * Math.Sin(incT)' -Math.Cos(LANT) * Math.Sin(incT)' Math.Cos(incT) ) * rTm * vTm * Math.Cos(gammaT); " is 143.
Long Statement,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintArgPfree,The length of the statement  "            Vector3d hT = new Vector3d( Math.Sin(LANT) * Math.Sin(incT)' -Math.Cos(LANT) * Math.Sin(incT)' Math.Cos(incT) ) * Math.Sqrt(smaT * (1 - eccT*eccT)); " is 148.
Long Statement,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The length of the statement  "            Vector3d hT = new Vector3d( Math.Sin(LANT) * Math.Sin(incT)' -Math.Cos(LANT) * Math.Sin(incT)' Math.Cos(incT) ) * Math.Sqrt(smaT * (1 - eccT*eccT)); " is 148.
Long Statement,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The length of the statement  "            // FIXME: Vector3d.cross(n' hf) is the node vector pointing in LAN dir' another ArgPT rot around hT would give eT direction " is 123.
Long Statement,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle3constraintMAXE,The length of the statement  "                z[3] = Vector3d.Dot(vf' prf) * rf.sqrMagnitude - Vector3d.Dot(rf' pvf) * vf.sqrMagnitude + Vector3d.Dot(rf' vf) * (vf.sqrMagnitude - Vector3d.Dot(rf' prf)); " is 156.
Long Statement,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle3constraintMAXE,The length of the statement  "                z[5] = Vector3d.Dot(hf' prf) * Vector3d.Dot(hf' Vector3d.Cross(rf' n)) + Vector3d.Dot(hf' pvf) * Vector3d.Dot(hf' Vector3d.Cross(vf' n)); " is 137.
Long Statement,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The length of the statement  "                // FIXME: this needs to go to temporary variables or needs to unfuck itself afterwards so that rf/vf can be updated as they're external " is 135.
Long Statement,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,Bootstrap,The length of the statement  "            // arcs.Add(new Arc(new Stage(this' m0: -1' isp: 0' thrust: 0' ksp_stage: stages[stages.Count-1].ksp_stage)' done: true)); " is 122.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,Borrow,The length of the statement  "            sim.Init(_initialOrbit' _UT' _vessel' _simcurves' _descentSpeedPolicy' _decelEndAltitudeASL' _maxThrustAccel' _parachuteSemiDeployMultiplier' _probableLandingSiteASL' _multiplierHasError' _dt' _min_dt' _maxOrbits' _noSKiptoFreefall); " is 233.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RunSimulation,The length of the statement  "                //Debug.LogError("Exception thrown during Rentry Simulation : " + ex.GetType() + ":" + ex.Message + "\n"+ ex.StackTrace); " is 121.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,FreefallEnded,The length of the statement  "            if (descentSpeedPolicy != null && surfaceVelocity.magnitude > descentSpeedPolicy.MaxAllowedSpeed(pos' surfaceVelocity)) return true; " is 132.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The length of the statement  "                    // Consider opening the parachutes. If we do open them' and the dt is not as small as it could me' make it smaller and repeat' " is 126.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The length of the statement  "                    bool willChutesOpen = vessel.WillChutesDeploy(altAGL' altASL' probableLandingSiteASL' pressure' vForChuteSim' t' parachuteSemiDeployMultiplier); " is 144.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The length of the statement  "                    // If parachutes are about to open and we are running with a dt larger than the physics frame then drop dt to the physics frame rate and start again " is 148.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The length of the statement  "                    if (willChutesOpen && dt > min_dt) // TODO test to see if we are better off just setting a minimum dt of the physics frame rate. " is 128.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The length of the statement  "                        parachutesDeploying = vessel.Simulate(altAGL' altASL' probableLandingSiteASL' pressure' vForChuteSim' t' parachuteSemiDeployMultiplier); " is 136.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The length of the statement  "            // Is there a parachute in the process of opening? If so then we follow special rules - fix the dt at the physics frame rate. This is because the rate for deployment depends on the frame rate for stock parachutes. " is 213.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The length of the statement  "            // If parachutes are part way through deploying then we need to use the physics frame rate for the next step of the simulation " is 126.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The length of the statement  "                dt = min_dt; // TODO There is a potential problem here. If the physics frame rate is so large that is causes too large a change in velocity' then we could get stuck in an infinte loop. " is 184.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The length of the statement  "                    Vector3d dv4 = dt * TotalAccel(x + 2 * d9 * dx1 + 3 * d9 * dx2 + 4 * d9 * dx3' v + 2 * d9 * dv1 + 3 * d9 * dv2 + 4 * d9 * dv3); " is 127.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The length of the statement  "                // Consider opening the parachutes. If we do open them' and the dt is not as small as it could be' make it smaller and repeat' " is 126.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The length of the statement  "                bool willChutesOpen = altASL < probableLandingSiteASL || vessel.WillChutesDeploy(altAGL' altASL' probableLandingSiteASL' pressure' shockTemp' t' parachuteSemiDeployMultiplier); " is 176.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The length of the statement  "                    parachutesDeploying = vessel.Simulate(altAGL' altASL' probableLandingSiteASL' pressure' shockTemp' t' parachuteSemiDeployMultiplier); " is 133.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,DragForce,The length of the statement  "            //    msg += "\n " + Pressure(pos).ToString("F7") + " " + vessel.parts[0].oPart.vessel.staticPressurekPa.ToString("F7"); " is 120.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,DragForce,The length of the statement  "            //                     + mainBody.latitudeTemperatureSunMultCurve.Evaluate(0) * (1 + 1) * 0.5 // fix that 0 into latitude " is 121.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,DragForce,The length of the statement  "            //    //         (double)this.currentMainBody.latitudeTemperatureSunMultCurve.Evaluate((float)(num1 * 57.2957801818848)) * (1 + this.sunDot) * 0.5 " is 146.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,DragForce,The length of the statement  "            //MechJebCore.print("DragForce " + airVel.magnitude.ToString("F4") + " " + mach.ToString("F4") + " " + shipDrag.magnitude.ToString("F4")); " is 138.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,DragForce,The length of the statement  "            //MechJebCore.print("DragForce " + AirDensity(pos).ToString("F4") + " " + airVel.sqrMagnitude.ToString("F4") + " " + dynamicPressurekPa.ToString("F4")); " is 152.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,LiftForce,The length of the statement  "            QuaternionD vesselToWorld = Quaternion.FromToRotation(localVel' airVel); // QuaternionD.FromToRotation is not working in Unity 4.3 " is 130.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,StaticPressure,The length of the statement  "                return mainBody.atmospherePressureSeaLevel * Math.Pow(1 - mainBody.atmosphereTemperatureLapseRate * altitude / mainBody.atmosphereTemperatureSeaLevel' mainBody.atmosphereGasMassLapseRate); " is 188.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,StaticPressure,The length of the statement  "            return Mathf.Lerp(0f' (float)mainBody.atmospherePressureSeaLevel' simCurves.AtmospherePressureCurve.Evaluate((float)(altitude / mainBody.atmosphereDepth))); " is 156.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,GetTemperature,The length of the statement  "            float sunDotCorrected = (1.0f + Vector3.Dot(sunVector' Quaternion.AngleAxis(45f * Mathf.Sign((float)mainBody.rotationPeriod)' mainBody.bodyTransform.up) * up)) * 0.5f; " is 167.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,GetTemperature,The length of the statement  "            double atmosphereTemperatureOffset = (double)simCurves.LatitudeTemperatureBiasCurve.Evaluate(time) + (double)simCurves.LatitudeTemperatureSunMultCurve.Evaluate(time) * sunDotNormalized + (double)simCurves.AxialTemperatureSunMultCurve.Evaluate(sunAxialDot); " is 256.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,GetTemperature,The length of the statement  "                    UtilMath.Lerp(simCurves.SpaceTemperature' mainBody.atmosphereTemperatureSeaLevel' simCurves.AtmosphereTemperatureCurve.Evaluate((float)(altitude / mainBody.atmosphereDepth))); " is 175.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,GetTemperature,The length of the statement  "            temperature += (double)simCurves.AtmosphereTemperatureSunMultCurve.Evaluate((float)altitude) * atmosphereTemperatureOffset; " is 123.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,ShockTemperature,The length of the statement  "            double convectiveMachLerp = Math.Pow(UtilMath.Clamp01((mach - PhysicsGlobals.NewtonianMachTempLerpStartMach) / (PhysicsGlobals.NewtonianMachTempLerpEndMach - PhysicsGlobals.NewtonianMachTempLerpStartMach))' PhysicsGlobals.NewtonianMachTempLerpExponent); " is 253.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,ShockTemperature,The length of the statement  "                double machTemperatureScalar = PhysicsGlobals.MachTemperatureScalar * Math.Pow(velocity' PhysicsGlobals.MachTemperatureVelocityExponent); " is 137.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,ShockTemperature,The length of the statement  "                newtonianTemperatureFactor = UtilMath.LerpUnclamped(newtonianTemperatureFactor' machTemperatureScalar' convectiveMachLerp); " is 123.
Long Statement,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,ShockTemperature,The length of the statement  "            return newtonianTemperatureFactor * HighLogic.CurrentGame.Parameters.Difficulty.ReentryHeatScale * mainBody.shockTemperatureMultiplier; " is 135.
Long Statement,MuMech,Result,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,GetOvershoot,The length of the statement  "                // First we need to get two vectors that are non orthogonal to each other and to the vector from the start to the target. TODO can we simplify this code by using Vector3.Exclude? " is 178.
Long Statement,MuMech,Result,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,GetOvershoot,The length of the statement  "                // check for the spaecial case where start2target is parrallel to up. If it is then the result will be zero'and we need to try again " is 132.
Long Statement,MuMech,Result,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,GetOvershoot,The length of the statement  "                // Now that we have those two orthogonal vectors' we can project any vector onto the two planes defined by them to give us the vector component that is parallel to start2Target. " is 177.
Long Statement,MuMech,Result,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,GetOvershoot,The length of the statement  "                // finally how long is it? We know it is parrallel to start2target' so if we add it to start2target' and then get the difference of the lengths' that should give us a positive or negative " is 187.
Long Statement,MuMech,Result,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,ToString,The length of the statement  "                if (null != input_descentSpeedPolicy) { resultText += "\n input_descentSpeedPolicy: " + input_descentSpeedPolicy.ToString(); } " is 126.
Long Statement,MuMech,Result,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,ToString,The length of the statement  "                if (null != referenceFrame) { resultText += "\nstartPosition: " + referenceFrame.WorldPositionAtCurrentTime(startPosition); } " is 125.
Long Statement,MuMech,Result,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,ToString,The length of the statement  "                if (null != referenceFrame) { resultText += "\nendPosition: " + referenceFrame.WorldPositionAtCurrentTime(endPosition); } " is 121.
Long Statement,MuMech,ReferenceFrame,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,ToAbsolute,The length of the statement  "            double longitude = UtilMath.Rad2Deg * Math.Atan2(Vector3d.Dot(vector3d.normalized' lat0lon90AtStart)' Vector3d.Dot(vector3d.normalized' lat0lon0AtStart)); " is 154.
Long Statement,MuMech,ReferenceFrame,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BodyPositionAtCurrentTime,The length of the statement  "            return referenceBody.position + absolute.radius * referenceBody.GetSurfaceNVector(absolute.latitude' absolute.longitude); " is 121.
Long Statement,MuMech,ReferenceFrame,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,WorldVelocityAtCurrentTime,The length of the statement  "            double unrotatedLongitude = MuUtils.ClampDegrees360(absolute.longitude - 360 * (now - absolute.UT) / referenceBody.rotationPeriod); " is 131.
Long Statement,MuMech,MechJebModuleScriptActionActivateEngine,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionActivateEngine.cs,postLoad,The length of the statement  "			if (selectedPartFlightID != 0) //We check if a previous flightID was set on the parts. When switching MechJeb Cores and performing save/load of the script' the port order may change so we try to rely on the flight ID to select the right part. " is 242.
Long Statement,MuMech,MechJebModuleScriptActionActiveVessel,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionActiveVessel.cs,postLoad,The length of the statement  "			if (selectedPartFlightID != 0) //We check if a previous flightID was set on the parts. When switching MechJeb Cores and performing save/load of the script' the port order may change so we try to rely on the flight ID to select the right part. " is 242.
Long Statement,MuMech,MechJebModuleScriptActionAscent,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionAscent.cs,WindowGUI,The length of the statement  "                    GUILayout.Label("PVG ASCENT to " + (autopilot.desiredOrbitAltitude / 1000.0) + "x" + ((ascentPath as MechJebModuleAscentPVG).desiredApoapsis / 1000.0) + "km"); " is 159.
Long Statement,MuMech,MechJebModuleScriptActionAscent,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionAscent.cs,onAbord,The length of the statement  "            // ascentModule.launchingToInterplanetary = ascentModule.launchingToPlane = ascentModule.launchingToRendezvous = autopilot.timedLaunch = false; " is 143.
Long Statement,MuMech,MechJebModuleScriptActionControlFrom,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionControlFrom.cs,postLoad,The length of the statement  "			if (selectedPartFlightID != 0 && selectedPartFlightID != 0) //We check if a previous flightID was set on the parts. When switching MechJeb Cores and performing save/load of the script' the port order may change so we try to rely on the flight ID to select the right part. " is 271.
Long Statement,MuMech,MechJebModuleScriptActionCrewTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionCrewTransfer.cs,MoveKerbal,The length of the statement  "			// RemoveCrew works fine alone and AddCrew works fine alone' but if you combine them' it seems you must give KSP a moment to sort it all out' " is 141.
Long Statement,MuMech,MechJebModuleScriptActionCrewTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionCrewTransfer.cs,postLoad,The length of the statement  "			if (selectedPartSFlightID != 0 && selectedPartTFlightID != 0 && selectedKerbalName != null) //We check if a previous flightID was set on the parts. When switching MechJeb Cores and performing save/load of the script' the port order may change so we try to rely on the flight ID to select the right part. " is 303.
Long Statement,MuMech,MechJebModuleScriptActionDockingShield,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionDockingShield.cs,postLoad,The length of the statement  "			if (selectedPartFlightID != 0) //We check if a previous flightID was set on the parts. When switching MechJeb Cores and performing save/load of the script' the port order may change so we try to rely on the flight ID to select the right part. " is 242.
Long Statement,MuMech,MechJebModuleScriptActionExecuteNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionExecuteNode.cs,WindowGUI,The length of the statement  "			if (this.isStarted() && !this.isExecuted() && ((FlightGlobals.ActiveVessel.patchedConicSolver.maneuverNodes.Count < startNodeCount && actionType == 0) || FlightGlobals.ActiveVessel.patchedConicSolver.maneuverNodes.Count == 0)) " is 226.
Long Statement,MuMech,MechJebModuleScriptActionIRSequencer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionIRSequencer.cs,populateSequencesList,The length of the statement  "			if (this.selectedPartIndex < this.irsequencerSequenceNames.Count && this.selectedPartIndex < this.irsequencerSequences.Count) " is 125.
Long Statement,MuMech,MechJebModuleScriptActionIRSequencer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionIRSequencer.cs,activateAction,The length of the statement  "					this.irsequencerModules[this.selectedPartIndex].GetType().InvokeMember("StartSequence"' System.Reflection.BindingFlags.InvokeMethod' null' this.irsequencerModules[this.selectedPartIndex]' new object[] { this.selectedSequenceGuid }); " is 232.
Long Statement,MuMech,MechJebModuleScriptActionIRSequencer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionIRSequencer.cs,activateAction,The length of the statement  "					this.irsequencerModules[this.selectedPartIndex].GetType().InvokeMember("PauseSequence"' System.Reflection.BindingFlags.InvokeMethod' null' this.irsequencerModules[this.selectedPartIndex]' new object[] { this.selectedSequenceGuid }); " is 232.
Long Statement,MuMech,MechJebModuleScriptActionIRSequencer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionIRSequencer.cs,activateAction,The length of the statement  "					this.irsequencerModules[this.selectedPartIndex].GetType().InvokeMember("ResetSequence"' System.Reflection.BindingFlags.InvokeMethod' null' this.irsequencerModules[this.selectedPartIndex]' new object[] { this.selectedSequenceGuid }); " is 232.
Long Statement,MuMech,MechJebModuleScriptActionIRSequencer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionIRSequencer.cs,WindowGUI,The length of the statement  "					selectedSequenceIndex = GuiUtils.ComboBox.Box(selectedSequenceIndex' currentIrsequencerSequenceNames.ToArray()' currentIrsequencerSequenceNames); " is 145.
Long Statement,MuMech,MechJebModuleScriptActionIRSequencer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionIRSequencer.cs,postLoad,The length of the statement  "			if (selectedPartFlightID != 0) //We check if a previous flightID was set on the parts. When switching MechJeb Cores and performing save/load of the script' the port order may change so we try to rely on the flight ID to select the right part. " is 242.
Long Statement,MuMech,MechJebModuleScriptActionKos,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionKos.cs,activateAction,The length of the statement  "					this.kosModules[this.selectedPartIndex].GetType().InvokeMember("OpenWindow"' System.Reflection.BindingFlags.InvokeMethod' null' this.kosModules[this.selectedPartIndex]' null); " is 175.
Long Statement,MuMech,MechJebModuleScriptActionKos,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionKos.cs,activateAction,The length of the statement  "				sharedObjects = this.kosModules[this.selectedPartIndex].GetType().GetField("shared"' System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance).GetValue(this.kosModules[this.selectedPartIndex]); " is 219.
Long Statement,MuMech,MechJebModuleScriptActionKos,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionKos.cs,activateAction,The length of the statement  "						interpreter.GetType().InvokeMember("ProcessCommand"' System.Reflection.BindingFlags.InvokeMethod | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.Instance' null' interpreter' new object[] { command }); " is 268.
Long Statement,MuMech,MechJebModuleScriptActionKos,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionKos.cs,endAction,The length of the statement  "					this.kosModules[this.selectedPartIndex].GetType().InvokeMember("CloseWindow"' System.Reflection.BindingFlags.InvokeMethod' null' this.kosModules[this.selectedPartIndex]' null); " is 176.
Long Statement,MuMech,MechJebModuleScriptActionKos,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionKos.cs,postLoad,The length of the statement  "			if (selectedPartFlightID != 0) //We check if a previous flightID was set on the parts. When switching MechJeb Cores and performing save/load of the script' the port order may change so we try to rely on the flight ID to select the right part. " is 242.
Long Statement,MuMech,MechJebModuleScriptActionKos,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionKos.cs,isCPUActive,The length of the statement  "				bool waiting = (bool)interpreter.GetType().InvokeMember("IsWaitingForCommand"' System.Reflection.BindingFlags.InvokeMethod' null' interpreter' null); " is 149.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postLoad,The length of the statement  "			for (int i = 0; i < operation.Count; i++) //We select the operation ID based on the operation name. This will help when future operations will be added in the list " is 163.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postLoad,The length of the statement  "				ConfigNode.LoadObjectFromConfig(((OperationCircularize)operation[operationId]).getTimeSelector()' node.GetNode("OperationConfig")); " is 131.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postLoad,The length of the statement  "				ConfigNode.LoadObjectFromConfig(((OperationApoapsis)operation[operationId]).getTimeSelector()' node.GetNode("OperationConfig")); " is 128.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postLoad,The length of the statement  "				ConfigNode.LoadObjectFromConfig(((OperationPeriapsis)operation[operationId]).getTimeSelector()' node.GetNode("OperationConfig")); " is 129.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postLoad,The length of the statement  "				ConfigNode.LoadObjectFromConfig(((OperationEllipticize)operation[operationId]).getTimeSelector()' node.GetNode("OperationConfig")); " is 131.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postLoad,The length of the statement  "				ConfigNode.LoadObjectFromConfig(((OperationInclination)operation[operationId]).getTimeSelector()' node.GetNode("OperationConfig")); " is 131.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postLoad,The length of the statement  "				ConfigNode.LoadObjectFromConfig(((OperationKillRelVel)operation[operationId]).getTimeSelector()' node.GetNode("OperationConfig")); " is 130.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postLoad,The length of the statement  "				ConfigNode.LoadObjectFromConfig(((OperationLambert)operation[operationId]).getTimeSelector()' node.GetNode("OperationConfig")); " is 127.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postLoad,The length of the statement  "				ConfigNode.LoadObjectFromConfig(((OperationLan)operation[operationId]).getTimeSelector()' node.GetNode("OperationConfig")); " is 123.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postLoad,The length of the statement  "				ConfigNode.LoadObjectFromConfig(((OperationLongitude)operation[operationId]).getTimeSelector()' node.GetNode("OperationConfig")); " is 129.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postLoad,The length of the statement  "				ConfigNode.LoadObjectFromConfig(((OperationPlane)operation[operationId]).getTimeSelector()' node.GetNode("OperationConfig")); " is 125.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postLoad,The length of the statement  "				ConfigNode.LoadObjectFromConfig(((OperationResonantOrbit)operation[operationId]).getTimeSelector()' node.GetNode("OperationConfig")); " is 133.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postLoad,The length of the statement  "				ConfigNode.LoadObjectFromConfig(((OperationSemiMajor)operation[operationId]).getTimeSelector()' node.GetNode("OperationConfig")); " is 129.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postSave,The length of the statement  "				ConfigNode operationNode = ConfigNode.CreateConfigFromObject(((OperationCircularize)operation[operationId]).getTimeSelector()' (int)Pass.Global' null); " is 151.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postSave,The length of the statement  "				ConfigNode operationNode = ConfigNode.CreateConfigFromObject(((OperationApoapsis)operation[operationId]).getTimeSelector()' (int)Pass.Global' null); " is 148.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postSave,The length of the statement  "				ConfigNode operationNode = ConfigNode.CreateConfigFromObject(((OperationPeriapsis)operation[operationId]).getTimeSelector()' (int)Pass.Global' null); " is 149.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postSave,The length of the statement  "				ConfigNode operationNode = ConfigNode.CreateConfigFromObject(((OperationEllipticize)operation[operationId]).getTimeSelector()' (int)Pass.Global' null); " is 151.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postSave,The length of the statement  "				ConfigNode operationNode = ConfigNode.CreateConfigFromObject(((OperationInclination)operation[operationId]).getTimeSelector()' (int)Pass.Global' null); " is 151.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postSave,The length of the statement  "				ConfigNode operationNode = ConfigNode.CreateConfigFromObject(((OperationKillRelVel)operation[operationId]).getTimeSelector()' (int)Pass.Global' null); " is 150.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postSave,The length of the statement  "				ConfigNode operationNode = ConfigNode.CreateConfigFromObject(((OperationLambert)operation[operationId]).getTimeSelector()' (int)Pass.Global' null); " is 147.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postSave,The length of the statement  "				ConfigNode operationNode = ConfigNode.CreateConfigFromObject(((OperationLan)operation[operationId]).getTimeSelector()' (int)Pass.Global' null); " is 143.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postSave,The length of the statement  "				ConfigNode operationNode = ConfigNode.CreateConfigFromObject(((OperationLongitude)operation[operationId]).getTimeSelector()' (int)Pass.Global' null); " is 149.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postSave,The length of the statement  "				ConfigNode operationNode = ConfigNode.CreateConfigFromObject(((OperationPlane)operation[operationId]).getTimeSelector()' (int)Pass.Global' null); " is 145.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postSave,The length of the statement  "				ConfigNode operationNode = ConfigNode.CreateConfigFromObject(((OperationResonantOrbit)operation[operationId]).getTimeSelector()' (int)Pass.Global' null); " is 153.
Long Statement,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,postSave,The length of the statement  "				ConfigNode operationNode = ConfigNode.CreateConfigFromObject(((OperationSemiMajor)operation[operationId]).getTimeSelector()' (int)Pass.Global' null); " is 149.
Long Statement,MuMech,MechJebModuleScriptActionRendezvous,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionRendezvous.cs,activateAction,The length of the statement  "					dV = OrbitalManeuverCalculator.DeltaVAndTimeToMatchPlanesAscending(orbit' core.target.TargetOrbit' vesselState.time' out UT); " is 125.
Long Statement,MuMech,MechJebModuleScriptActionRendezvous,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionRendezvous.cs,activateAction,The length of the statement  "					dV = OrbitalManeuverCalculator.DeltaVAndTimeToMatchPlanesDescending(orbit' core.target.TargetOrbit' vesselState.time' out UT); " is 126.
Long Statement,MuMech,MechJebModuleScriptActionRendezvous,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionRendezvous.cs,activateAction,The length of the statement  "				Vector3d dV = OrbitalManeuverCalculator.DeltaVAndTimeForHohmannTransfer(orbit' core.target.TargetOrbit' vesselState.time' out UT); " is 130.
Long Statement,MuMech,MechJebModuleScriptActionSAS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionSAS.cs,postLoad,The length of the statement  "			if (selectedPartFlightID != 0) //We check if a previous flightID was set on the parts. When switching MechJeb Cores and performing save/load of the script' the port order may change so we try to rely on the flight ID to select the right part. " is 242.
Long Statement,MuMech,MechJebModuleScriptActionTarget,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionTarget.cs,WindowGUI,The length of the statement  "			selectedCelestialBodyIndex = GuiUtils.ComboBox.Box (selectedCelestialBodyIndex' bodiesNamesList.ToArray ()' bodiesNamesList); " is 125.
Long Statement,MuMech,MechJebModuleScriptActionTargetDock,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionTargetDock.cs,activateAction,The length of the statement  "			if (dockingPartsList[selectedPartIndex].GetModule<ModuleDockingNode>() != null && dockingPartsList[controlFromPartIndex].GetModule<ModuleDockingNode>() != null) " is 160.
Long Statement,MuMech,MechJebModuleScriptActionTargetDock,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionTargetDock.cs,activateAction,The length of the statement  "				dockingPartsList[controlFromPartIndex].GetModule<ModuleDockingNode>().MakeReferenceTransform(); //set "control from here" " is 121.
Long Statement,MuMech,MechJebModuleScriptActionTargetDock,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionTargetDock.cs,postLoad,The length of the statement  "			if (selectedPartFlightID != 0 && controlFromPartFlightID != 0) //We check if a previous flightID was set on the parts. When switching MechJeb Cores and performing save/load of the script' the port order may change so we try to rely on the flight ID to select the right part. " is 274.
Long Statement,MuMech,MechJebModuleScriptActionThrottle,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionThrottle.cs,activateAction,The length of the statement  "				Vector3d target = vessel.ReferenceTransform.InverseTransformDirection(new Vector3d(vessel.up.x*throttle' vessel.up.y*throttle' vessel.up.z*throttle)); " is 150.
Long Statement,MuMech,MechJebModuleScriptActionUndock,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionUndock.cs,activateAction,The length of the statement  "				if (dockingPartsList[selectedPartIndex].GetModule<ModuleDockingNode>().referenceNode.attachedPart.GetModule<ModuleDockingNode>() != null) " is 137.
Long Statement,MuMech,MechJebModuleScriptActionUndock,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionUndock.cs,activateAction,The length of the statement  "					if (dockingPartsList[selectedPartIndex].GetModule<ModuleDockingNode>().referenceNode.attachedPart.GetModule<ModuleDockingNode>().Events["Undock"].active) " is 153.
Long Statement,MuMech,MechJebModuleScriptActionUndock,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionUndock.cs,activateAction,The length of the statement  "						dockingPartsList[selectedPartIndex].GetModule<ModuleDockingNode>().referenceNode.attachedPart.GetModule<ModuleDockingNode>().referenceNode.attachedPart = dockingPartsList[selectedPartIndex].parent; " is 197.
Long Statement,MuMech,MechJebModuleScriptActionUndock,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionUndock.cs,activateAction,The length of the statement  "						dockingPartsList[selectedPartIndex].GetModule<ModuleDockingNode>().referenceNode.attachedPart.GetModule<ModuleDockingNode>().Decouple(); " is 136.
Long Statement,MuMech,MechJebModuleScriptActionUndock,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionUndock.cs,activateAction,The length of the statement  "				dockingPartsList[selectedPartIndex].GetModule<ModuleDockingNode>().referenceNode.attachedPart = dockingPartsList[selectedPartIndex].parent; " is 139.
Long Statement,MuMech,MechJebModuleScriptActionUndock,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionUndock.cs,activateAction,The length of the statement  "				//When undocking' this can separate the vessel into 2 new vessels. We take the risk the new one is not the one with the focus. If it's the case' we must transfer the script. " is 173.
Long Statement,MuMech,MechJebModuleScriptActionUndock,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionUndock.cs,postLoad,The length of the statement  "			if (selectedPartFlightID != 0) //We check if a previous flightID was set on the parts. When switching MechJeb Cores and performing save/load of the script' the port order may change so we try to rely on the flight ID to select the right part. " is 242.
Long Statement,MuMech,MechJebModuleScriptActionWarp,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionWarp.cs,activateAction,The length of the statement  "					if (vessel.patchedConicsUnlocked() && vessel.patchedConicSolver.maneuverNodes.Any()) targetUT = vessel.patchedConicSolver.maneuverNodes[0].UT; " is 142.
Long Statement,MuMech,MechJebModuleScriptActionWarp,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionWarp.cs,activateAction,The length of the statement  "						targetUT = OrbitExtensions.NextTimeOfRadius(vessel.orbit' vesselState.time' vesselState.mainBody.Radius + vesselState.mainBody.RealMaxAtmosphereAltitude()); " is 156.
Long Statement,MuMech,MechJebModuleScriptActionWarp,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionWarp.cs,WindowGUI,The length of the statement  "			if (warping) GUILayout.Label("Warping to " + (leadTime > 0 ? GuiUtils.TimeToDHMS(leadTime) + " before " : "") + warpTargetStrings[(int)warpTarget] + "."); " is 154.
Long Statement,MuMech,MechJebModuleScriptActionWarp,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionWarp.cs,afterOnFixedUpdate,The length of the statement  "					targetUT = OrbitExtensions.SuicideBurnCountdown(this.scriptModule.orbit' this.scriptModule.vesselState' this.scriptModule.vessel) + this.scriptModule.vesselState.time; " is 167.
Long Statement,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,populateActionNames,The length of the statement  "				actionsNamesList.Add(Localizer.Format("#MechJeb_ScriptMod_actions4_4")); //Switch Vessel only available at depth 0 because it can change the focus."Switch Vessel" " is 162.
Long Statement,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,actionsAddWindowGui,The length of the statement  "				GUILayout.Label(Localizer.Format("#MechJeb_ScriptMod_label5")' s2' GUILayout.ExpandWidth(false));//"Program depth is limited to 4" " is 130.
Long Statement,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,actionsAddWindowGui,The length of the statement  "				if (actionNames[selectedGroupIndex][selectedActionIndex].CompareTo("MODULE Ascent Autopilot") == 0 || actionNames[selectedGroupIndex][selectedActionIndex].CompareTo("MODULE Landing") == 0) " is 188.
Long Statement,MuMech,MechJebModuleScriptCondition,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptCondition.cs,TargetTimeToClosestApproach,The length of the statement  "			if (core.target.Target != null && core.vesselState.altitudeTrue < 1000.0) { return GuiUtils.FromToETA(core.vessel.CoM' core.target.Transform.position); } " is 153.
Long Statement,MuMech,MechJebModuleScriptCondition,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptCondition.cs,TargetTimeToClosestApproach,The length of the statement  "			return this.scriptModule.orbit.NextClosestApproachTime(core.target.TargetOrbit' core.vesselState.time) - core.vesselState.time; " is 127.
Long Statement,MuMech,MechJebModuleScriptCondition,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptCondition.cs,TimeToAscendingNodeWithTarget,The length of the statement  "			return this.scriptModule.orbit.TimeOfAscendingNode(core.target.TargetOrbit' core.vesselState.time) - core.vesselState.time; " is 123.
Long Statement,MuMech,MechJebModuleScriptCondition,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptCondition.cs,TimeToDescendingNodeWithTarget,The length of the statement  "			return this.scriptModule.orbit.TimeOfDescendingNode(core.target.TargetOrbit' core.vesselState.time) - core.vesselState.time; " is 124.
Long Statement,MuMech,VesselExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselExtensions.cs,HasElectricCharge,The length of the statement  "            PartResourceDefinition definition = PartResourceLibrary.Instance.GetDefinition(PartResourceLibrary.ElectricityHashcode); " is 120.
Long Statement,MuMech,VesselExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselExtensions.cs,GetBoundingBox,The length of the statement  "            box.center = new Vector3d((maxBounds.x + minBounds.x) / 2' (maxBounds.y + minBounds.y) / 2' (maxBounds.z + minBounds.z) / 2); " is 125.
Long Statement,MuMech,VesselExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselExtensions.cs,GetBoundingBox,The length of the statement  "            box.size = new Vector3d(Math.Abs(box.center.x - maxBounds.x)' Math.Abs(box.center.y - maxBounds.y)' Math.Abs(box.center.z - maxBounds.z)); " is 138.
Long Statement,MuMech,VesselExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselExtensions.cs,patchedConicsUnlocked,The length of the statement  "            return GameVariables.Instance.GetOrbitDisplayMode(ScenarioUpgradeableFacilities.GetFacilityLevel(SpaceCenterFacility.TrackingStation)) == GameVariables.OrbitDisplayMode.PatchedConics; " is 183.
Long Statement,MuMech,VesselExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselExtensions.cs,WorldDeltaV,The length of the statement  "            return node.patch.Prograde(node.UT) * node.DeltaV.z + node.patch.RadialPlus(node.UT) * node.DeltaV.x + -node.patch.NormalPlus(node.UT) * node.DeltaV.y; " is 151.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,Update,The length of the statement  "            if (vessel.rootPart.rb == null) return false; //if we try to update before rigidbodies exist we spam the console with NullPointerExceptions. " is 140.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,TestStuff,The length of the statement  "            //Vector3 localVel = vessel.GetTransform().InverseTransformDirection( vessel.rigidbody.velocity + Krakensbane.GetFrameVelocity()); " is 130.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,TestStuff,The length of the statement  "            //    //MechJebCore.print(part.name + " " + part.exposedArea.ToString("F4") + " " + part.skinExposedArea.ToString("F4")); " is 121.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,TestStuff,The length of the statement  "            //MechJebCore.print(exposedArea.ToString("F2") + " " + skinExposedArea.ToString("F2") + " " + radiativeArea.ToString("F2")); " is 124.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The length of the statement  "            rotationVesselSurface = Quaternion.Inverse(Quaternion.Euler(90' 0' 0) * Quaternion.Inverse(vessel.GetTransform().rotation) * rotationSurface); " is 142.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The length of the statement  "            speedSurfaceHorizontal.value = Vector3d.Exclude(up' surfaceVelocity).magnitude; //(velocityVesselSurface - (speedVertical * up)).magnitude; " is 139.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The length of the statement  "            // Angle of Attack' angle between surface velocity and the ship-nose vector (KSP "up" vector) in the plane that has no ship-right/left in it " is 140.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The length of the statement  "            double tmpAoA = UtilMath.Rad2Deg * Math.Atan2(Vector3.Dot(srfProj.normalized' vessel.ReferenceTransform.forward)' Vector3.Dot(srfProj.normalized' vessel.ReferenceTransform.up) ); " is 178.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The length of the statement  "            // Angle of Sideslip' angle between surface velocity and the ship-nose vector (KSP "up" vector) in the plane that has no ship-top/bottom in it (KSP "forward"/"back") " is 165.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The length of the statement  "            double tmpAoS = UtilMath.Rad2Deg * Math.Atan2(Vector3.Dot(srfProj.normalized' vessel.ReferenceTransform.right)' Vector3.Dot(srfProj.normalized' vessel.ReferenceTransform.up) ); " is 176.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The length of the statement  "            // Displacement Angle' angle between surface velocity and the ship-nose vector (KSP "up" vector) -- ignores roll of the craft (0 to 180 degrees) " is 144.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The length of the statement  "            double tempAoD = UtilMath.Rad2Deg * Math.Acos(MuUtils.Clamp(Vector3.Dot(vessel.ReferenceTransform.up' surfaceVelocity.normalized)' -1' 1)); " is 139.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The length of the statement  "            vesselPitch.value = (rotationVesselSurface.eulerAngles.x > 180) ? (360.0 - rotationVesselSurface.eulerAngles.x) : -rotationVesselSurface.eulerAngles.x; " is 151.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The length of the statement  "            vesselRoll.value = (rotationVesselSurface.eulerAngles.z > 180) ? (rotationVesselSurface.eulerAngles.z - 360.0) : rotationVesselSurface.eulerAngles.z; " is 149.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The length of the statement  "                orbitLAN.value = -(vessel.transform.position - vessel.mainBody.transform.position).AngleInPlane(Planetarium.Zup.Z' Planetarium.Zup.X); " is 134.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The length of the statement  "                Vector3d delta = vessel.mainBody.getPositionAtUT(Planetarium.GetUniversalTime() + 1) - vessel.mainBody.getPositionAtUT(Planetarium.GetUniversalTime() - 1); " is 155.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The length of the statement  "                Vector3d plUp = Vector3d.Cross(vessel.mainBody.getPositionAtUT(Planetarium.GetUniversalTime()) - vessel.mainBody.referenceBody.getPositionAtUT(Planetarium.GetUniversalTime())' vessel.mainBody.getPositionAtUT(Planetarium.GetUniversalTime() + vessel.mainBody.orbit.period / 4) - vessel.mainBody.referenceBody.getPositionAtUT(Planetarium.GetUniversalTime() + vessel.mainBody.orbit.period / 4)).normalized; " is 402.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The length of the statement  "                angleToPrograde = MuUtils.ClampDegrees360((((vessel.orbit.inclination > 90) || (vessel.orbit.inclination < -90)) ? 1 : -1) * ((Vector3)up).AngleInPlane(plUp' delta)); " is 166.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateRCSThrustAndTorque,The length of the statement  "                                rcsThrustAvailable.Add(Vector3.Scale(vessel.GetTransform().InverseTransformDirection(thrusterThrust)' translationControl)); " is 123.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateRCSThrustAndTorque,The length of the statement  "                            rcsTorqueAvailable.Add(Vector3.Scale(vessel.GetTransform().InverseTransformDirection(thrusterTorque)' attitudeControl)); " is 120.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateRCSThrustAndTorque,The length of the statement  "                            //rcsThrustAvailable.Add(Vector3.Scale(vessel.GetTransform().InverseTransformDirection(thrusterThrust)' translationControl)); " is 125.
Long Statement,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,AnalyzeParts,The length of the statement  "                        torqueReactionSpeed6.Add(Mathf.Abs(cs.ctrlSurfaceRange) / cs.actuatorSpeed * Vector3d.Max(ctrlTorquePos.Abs()' ctrlTorqueNeg.Abs())); " is 133.
Long Statement,MuMech,EngineInfo,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,CheckUllageStatus,The length of the statement  "                    Debug.Log("MechJeb BUG ArgumentError thrown while getting ullage from RealFuels' ullage integration disabled: " + e1.Message); " is 126.
Long Statement,MuMech,EngineInfo,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,CheckUllageStatus,The length of the statement  "                    Debug.Log("MechJeb BUG ArgumentError thrown while getting ignitions from RealFuels' ullage integration disabled: " + e2.Message); " is 129.
Long Statement,MuMech,EngineInfo,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,CheckUllageStatus,The length of the statement  "                        Debug.Log("MechJeb BUG Exception thrown while calling GetUllageStability from RealFuels' ullage integration disabled: " + e4.Message); " is 134.
Long Statement,MuMech,EngineInfo,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,CheckUllageStatus,The length of the statement  "                    Debug.Log("MechJeb BUG Exception thrown while getting ullageSet from RealFuels' ullage integration disabled: " + e3.Message); " is 125.
Long Statement,MuMech,EngineInfo,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,AddNewEngine,The length of the statement  "                    //MechJebCore.print(maxThrust.ToString("F2") + " " + minThrust.ToString("F2") + " " + e.minFuelFlow.ToString("F2") + " " + e.maxFuelFlow.ToString("F2") + " " + e.flowMultiplier.ToString("F2") + " " + Isp.ToString("F2") + " " + thrustLimiter.ToString("F3")); " is 257.
Long Statement,MuMech,EngineInfo,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,AddNewEngine,The length of the statement  "                        maxVariableTorque += (currentMaxThrust - currentMinThrust) * thrustTransformMultiplier * Vector3d.Cross(pos' thrust_dir); " is 121.
Long Statement,MuMech,ResourceInfo,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,massProvided,The length of the statement  "                if ((intake.checkForOxygen && !FlightGlobals.currentMainBody.atmosphereContainsOxygen) || staticPressure < intake.kPaThreshold) // TODO : add the new test (the bool and maybe the attach node ?) " is 193.
Long Statement,Landing,CoastToDeceleration,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CoastToDeceleration.cs,OnFixedUpdate,The length of the statement  "                // If the atmospheric drag is has started to act on the vessel then we are in a position to start considering when to deploy the parachutes. " is 140.
Long Statement,Landing,CoastToDeceleration,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CoastToDeceleration.cs,OnFixedUpdate,The length of the statement  "                        if (!vesselState.parachuteDeployed && vesselState.drag <= 0.1) // However if there is already a parachute deployed or drag is high' then do not bother trying to correct the course as we will not have any attitude control anyway. " is 228.
Long Statement,Landing,CoastToDeceleration,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CoastToDeceleration.cs,OnFixedUpdate,The length of the statement  "                        status += "\n" + Localizer.Format("#MechJeb_LandingGuidance_Status2"'deltaV.magnitude.ToString("F3"));//"Course correction DV: " +  + " m/s" " is 140.
Long Statement,Landing,CoastToDeceleration,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CoastToDeceleration.cs,OnFixedUpdate,The length of the statement  "                        double decelerationStartTime = (core.landing.prediction.trajectory.Any() ? core.landing.prediction.trajectory.First().UT : vesselState.time); " is 141.
Long Statement,Landing,CourseCorrection,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CourseCorrection.cs,Drive,The length of the statement  "                // If a parachute has already been deployed then we will not be able to control attitude anyway' so move back to the coast to deceleration step. " is 144.
Long Statement,Landing,CourseCorrection,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CourseCorrection.cs,Drive,The length of the statement  "                status = Localizer.Format("#MechJeb_LandingGuidance_Status3"' deltaV.magnitude.ToString("F1"));//"Performing course correction of about " +  + " m/s" " is 149.
Long Statement,Landing,DecelerationBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DecelerationBurn.cs,OnFixedUpdate,The length of the statement  "                double decelerationStartTime = (core.landing.prediction.trajectory.Any() ? core.landing.prediction.trajectory.First().UT : vesselState.time); " is 141.
Long Statement,Landing,DecelerationBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DecelerationBurn.cs,OnFixedUpdate,The length of the statement  "                    double controlledSpeed = vesselState.speedSurface * Math.Sign(Vector3d.Dot(vesselState.surfaceVelocity' vesselState.up)); //positive if we are ascending' negative if descending " is 176.
Long Statement,Landing,DecelerationBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DecelerationBurn.cs,OnFixedUpdate,The length of the statement  "                    double maxAccel = vesselState.maxThrustAccel * Vector3d.Dot(vesselState.forward' -vesselState.surfaceVelocity.normalized) - vesselState.localg * Math.Abs(Vector3d.Dot(vesselState.surfaceVelocity.normalized' vesselState.up)); " is 224.
Long Statement,Landing,DecelerationBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DecelerationBurn.cs,OnFixedUpdate,The length of the statement  "                    double desiredAccel = speedError / speedCorrectionTimeConstant + (desiredSpeedAfterDt - desiredSpeed) / vesselState.deltaT; " is 123.
Long Statement,Landing,DecelerationBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DecelerationBurn.cs,OnFixedUpdate,The length of the statement  "                    if (maxAccel - minAccel > 0) core.thrust.targetThrottle = Mathf.Clamp((float)((desiredAccel - minAccel) / (maxAccel - minAccel))' 0.0F' 1.0F); " is 142.
Long Statement,Landing,DecelerationBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DecelerationBurn.cs,OnFixedUpdate,The length of the statement  "                    status = Localizer.Format("#MechJeb_LandingGuidance_Status6"' Math.Abs(desiredSpeed).ToString("F1"));//"Braking: target speed = " +  + " m/s" " is 141.
Long Statement,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                // c) has a heading that points toward where the target will be at the end of free-fall' accounting for planetary rotation " is 122.
Long Statement,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                Vector3d horizontalDV = OrbitalManeuverCalculator.DeltaVToChangePeriapsis(orbit' vesselState.time' 0.9 * mainBody.Radius); //Imagine we are going to deorbit now. Find the burn that would lower our periapsis to -10% of the planet's radius " is 237.
Long Statement,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                Orbit forwardDeorbitTrajectory = orbit.PerturbedOrbit(vesselState.time' horizontalDV);                                     //Compute the orbit that would put us on " is 163.
Long Statement,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                double freefallTime = forwardDeorbitTrajectory.NextTimeOfRadius(vesselState.time' mainBody.Radius) - vesselState.time;     //Find how long that orbit would take to impact the ground " is 181.
Long Statement,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                double planetRotationDuringFreefall = 360 * freefallTime / mainBody.rotationPeriod;                                        //Find how many degrees the planet will rotate during that time " is 186.
Long Statement,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                Vector3d currentTargetRadialVector = mainBody.GetWorldSurfacePosition(core.target.targetLatitude' core.target.targetLongitude' 0)-mainBody.position; //Find the current vector from the planet center to the target landing site " is 224.
Long Statement,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                Quaternion freefallPlanetRotation = Quaternion.AngleAxis((float)planetRotationDuringFreefall' mainBody.angularVelocity);   //Construct a quaternion representing the rotation of the planet found above " is 199.
Long Statement,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                Vector3d freefallEndTargetRadialVector = freefallPlanetRotation * currentTargetRadialVector;                               //Use this quaternion to find what the vector from the planet center to the target will be when we hit the ground " is 236.
Long Statement,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                Vector3d freefallEndTargetPosition = mainBody.position + freefallEndTargetRadialVector;                                    //Then find the actual position of the target at that time " is 181.
Long Statement,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                Vector3d freefallEndHorizontalToTarget = Vector3d.Exclude(vesselState.up' freefallEndTargetPosition - vesselState.CoM).normalized; //Find a horizontal unit vector that points toward where the target will be when we hit the ground " is 229.
Long Statement,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                Vector3d currentHorizontalVelocity = Vector3d.Exclude(vesselState.up' vesselState.orbitalVelocity); //Find our current horizontal velocity " is 138.
Long Statement,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                double finalHorizontalSpeed = (currentHorizontalVelocity + horizontalDV).magnitude;                     //Find the desired horizontal speed after the deorbit burn " is 162.
Long Statement,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                Vector3d finalHorizontalVelocity = finalHorizontalSpeed * freefallEndHorizontalToTarget;                //Combine the desired speed and direction to get the desired velocity after the deorbi burn " is 195.
Long Statement,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                double targetAheadAngle = Vector3d.Angle(currentRadialVector' freefallEndTargetRadialVector); //How far ahead the target is' in degrees " is 135.
Long Statement,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                double planeChangeAngle = Vector3d.Angle(currentHorizontalVelocity' freefallEndHorizontalToTarget); //The plane change required to get onto the deorbit trajectory' in degrees " is 174.
Long Statement,Landing,FinalDescent,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\FinalDescent.cs,OnFixedUpdate,The length of the statement  "                    double maxVel = 1.02 * aggressivePolicy.MaxAllowedSpeed(vesselState.CoM - mainBody.position' vesselState.surfaceVelocity); " is 122.
Long Statement,Landing,FinalDescent,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\FinalDescent.cs,Drive,The length of the statement  "                    else if ((vesselState.surfaceVelocity.magnitude > 5) && (Vector3d.Angle(vesselState.forward' -vesselState.surfaceVelocity) > 45)) " is 129.
Long Statement,Landing,FinalDescent,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\FinalDescent.cs,Drive,The length of the statement  "                        //core.thrust.trans_spd_act = (float)Math.Sqrt((vesselState.maxThrustAccel - vesselState.gravityForce.magnitude) * 2 * minalt) * 0.90F; " is 135.
Long Statement,Landing,FinalDescent,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\FinalDescent.cs,Drive,The length of the statement  "                        Vector3d estimatedLandingPosition = vesselState.CoM + vesselState.surfaceVelocity.sqrMagnitude / (2 * vesselState.limitedMaxThrustAccel) * vesselState.surfaceVelocity.normalized; " is 178.
Long Statement,Landing,FinalDescent,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\FinalDescent.cs,Drive,The length of the statement  "                        aggressivePolicy = new GravityTurnDescentSpeedPolicy(terrainRadius' mainBody.GeeASL * 9.81' vesselState.limitedMaxThrustAccel);  // this constant policy creation is wastefull... " is 177.
Long Statement,Landing,FinalDescent,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\FinalDescent.cs,Drive,The length of the statement  "                        core.thrust.trans_spd_act = (float)(aggressivePolicy.MaxAllowedSpeed(vesselState.CoM - mainBody.position' vesselState.surfaceVelocity)); " is 136.
Long Statement,Landing,FinalDescent,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\FinalDescent.cs,Drive,The length of the statement  "                    core.thrust.trans_spd_act = -Mathf.Lerp(0' (float)Math.Sqrt((vesselState.limitedMaxThrustAccel - vesselState.localg) * 2 * 200) * 0.90F' (float)minalt / 200); " is 158.
Long Statement,Landing,FinalDescent,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\FinalDescent.cs,Drive,The length of the statement  "                status = Localizer.Format("#MechJeb_LandingGuidance_Status9"' vesselState.altitudeBottom.ToString("F0"));//"Final descent: " +  + "m above terrain" " is 147.
Long Statement,Landing,LowDeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\LowDeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                double rangeToTarget = Vector3d.Exclude(vesselState.up' core.target.GetPositionTargetPosition() - vesselState.CoM).magnitude; " is 125.
Long Statement,Landing,LowDeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\LowDeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                if (!deorbitBurnTriggered && core.node.autowarp && rangeToTarget > 2 * triggerDistance) core.warp.WarpRegularAtRate((float)(orbit.period / 6)); " is 143.
Long Statement,Landing,LowDeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\LowDeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                    Vector3d horizontalToLandingSite = Vector3d.Exclude(vesselState.up' core.landing.LandingSite - vesselState.CoM).normalized; " is 123.
Long Statement,Landing,LowDeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\LowDeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                    Vector3d horizontalToTarget = Vector3d.Exclude(vesselState.up' core.target.GetPositionTargetPosition() - vesselState.CoM).normalized; " is 133.
Long Statement,Landing,LowDeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\LowDeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                    if (!lowDeorbitEndConditionSet && Vector3d.Distance(core.landing.LandingSite' vesselState.CoM) < mainBody.Radius + vesselState.altitudeASL) " is 139.
Long Statement,Landing,LowDeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\LowDeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                            double speedAfterDt = vesselState.speedSurface + vesselState.deltaT * Vector3d.Dot(vesselState.gravityForce' vesselState.surfaceVelocity.normalized); " is 149.
Long Statement,Landing,LowDeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\LowDeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                            else throttleToMaintainLandingSite = (speedAfterDt - maxAllowedSpeedAfterDt) / (vesselState.deltaT * vesselState.maxThrustAccel); " is 129.
Long Statement,Landing,LowDeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\LowDeorbitBurn.cs,OnFixedUpdate,The length of the statement  "                                status = Localizer.Format("#MechJeb_LandingGuidance_Status13");//"Deorbit burn complete: waiting for the right moment to start braking" " is 135.
Long Statement,Landing,PlaneChange,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\PlaneChange.cs,ComputePlaneChange,The length of the statement  "                Vector3d targetRadialVector = core.vessel.mainBody.GetWorldSurfacePosition(core.target.targetLatitude' core.target.targetLongitude' 0) - mainBody.position; " is 155.
Long Statement,Landing,PlaneChange,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\PlaneChange.cs,ComputePlaneChange,The length of the statement  "                double timeToTarget = orbit.TimeOfTrueAnomaly(core.vessel.orbit.trueAnomaly * UtilMath.Rad2Deg + angleToTarget' vesselState.time) - vesselState.time; " is 149.
Long Statement,Landing,PlaneChange,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\PlaneChange.cs,ComputePlaneChange,The length of the statement  "                Vector3d horizontalToTarget = Vector3d.Exclude(vesselState.up' targetRadialVectorOnFlyover - currentRadialVector).normalized; " is 125.
Long Statement,Landing,PlaneChange,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\PlaneChange.cs,OnFixedUpdate,The length of the statement  "                Vector3d targetRadialVector = mainBody.GetWorldSurfacePosition(core.target.targetLatitude' core.target.targetLongitude' 0) - mainBody.position; " is 143.
Long Statement,Landing,PlaneChange,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\PlaneChange.cs,OnFixedUpdate,The length of the statement  "                    Vector3d finalVelocity = Quaternion.FromToRotation(vesselState.horizontalOrbit' horizontalToTarget) * vesselState.orbitalVelocity; " is 130.
Long Statement,Landing,PlaneChange,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\PlaneChange.cs,OnFixedUpdate,The length of the statement  "                    planeChangeDVLeft = UtilMath.Deg2Rad * Vector3d.Angle(finalVelocity' vesselState.orbitalVelocity) * vesselState.speedOrbitHorizontal; " is 133.
Long Statement,Landing,PlaneChange,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\PlaneChange.cs,OnFixedUpdate,The length of the statement  "                    status = Localizer.Format("#MechJeb_LandingGuidance_Status14"' planeChangeDVLeft.ToString("F0"));//"Executing low orbit plane change of about " +  + " m/s" " is 155.
Complex Conditional,MuMech,Stats,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,ComputeTimeStepDeltaV,The conditional expression  "deltaTime > 0 && startMass > endMass && startMass > 0 && endMass > 0"  is complex.
Complex Conditional,MuMech,FuelNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,Init,The conditional expression  "(HighLogic.LoadedSceneIsEditor || inverseStage < StageManager.CurrentStage || e.getIgnitionState) && (e.thrustPercentage > 0 || e.minThrust > 0)"  is complex.
Complex Conditional,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,TLAMB,The conditional expression  "LM1 || M > 0.0 || X < 0.0 || Math.Abs(U) > SW"  is complex.
Complex Conditional,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,TimeToDHMS,The conditional expression  "!first || (n != 0) || (i == units.Length - 1 && ret == "")"  is complex.
Complex Conditional,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,MouseIsOverWindow,The conditional expression  "m.enabled && m.showInCurrentScene && !m.IsOverlay                      && m.windowPos.Contains(new Vector2(Input.mousePosition.x' Screen.height - Input.mousePosition.y) / GuiUtils.scale)"  is complex.
Complex Conditional,MuMech,Operation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Operation.cs,addTypes,The conditional expression  "t != null &&                      !t.IsAbstract                      && typeof(Operation).IsAssignableFrom(t)                      && t.GetConstructor(Type.EmptyTypes) != null"  is complex.
Complex Conditional,MuMech,OperationAdvancedTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationAdvancedTransfer.cs,DoParametersGUI,The conditional expression  "GUI.changed || worker == null || worker.destinationOrbit != target.TargetOrbit || worker.originOrbit != o"  is complex.
Complex Conditional,MuMech,PlotArea,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\PlotArea.cs,ProcessKeys,The conditional expression  "code == KeyCode.W || code == KeyCode.S ||  				code == KeyCode.UpArrow || code == KeyCode.DownArrow"  is complex.
Complex Conditional,MuMech,PlotArea,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\PlotArea.cs,ProcessKeys,The conditional expression  "code == KeyCode.A || code == KeyCode.D ||  					 code == KeyCode.LeftArrow || code == KeyCode.RightArrow"  is complex.
Complex Conditional,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,FixedUpdate,The conditional expression  "HighLogic.LoadedSceneIsFlight && (lastFocus != null) && lastFocus.loaded && (lastFocus.GetMasterMechJeb() != null)"  is complex.
Complex Conditional,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,Update,The conditional expression  "this != vessel.GetMasterMechJeb() || (!FlightGlobals.ready && HighLogic.LoadedSceneIsFlight) || !ready"  is complex.
Complex Conditional,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,LoadComputerModules,The conditional expression  "(t != typeof(ComputerModule)) && (t != typeof(DisplayModule) && (t != typeof(MechJebModuleCustomInfoWindow)))                          && (t != typeof(AutopilotModule))                          && !blacklist.Contains(t.Name) && (GetComputerModule(t.Name) == null)"  is complex.
Complex Conditional,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,OnGUI,The conditional expression  "!showGui || this != vessel.GetMasterMechJeb() || (!FlightGlobals.ready && HighLogic.LoadedSceneIsFlight)  || !ready"  is complex.
Complex Conditional,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,OnGUI,The conditional expression  "HighLogic.LoadedSceneIsEditor || (FlightGlobals.ready && (vessel == FlightGlobals.ActiveVessel) && (part.State != PartStates.DEAD))"  is complex.
Complex Conditional,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,attitudeGetReferenceRotation,The conditional expression  "core.target.Target == null && (reference == AttitudeReference.TARGET || reference == AttitudeReference.TARGET_ORIENTATION || reference == AttitudeReference.RELATIVE_VELOCITY)"  is complex.
Complex Conditional,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,SetFlightCtrlState,The conditional expression  "RCS_auto && ((absErr.x > 3.0) || (absErr.y > 3.0) || (absErr.z > 3.0)) && core.thrust.limiter != MechJebModuleThrustController.LimitMode.UnstableIgnition"  is complex.
Complex Conditional,MuMech,MechJebModuleDeployableController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDeployableController.cs,AllRetracted,The conditional expression  "mdp != null && isModules(mdp) && isDeployable(mdp) && mdp.deployState != ModuleDeployablePart.DeployState.RETRACTED"  is complex.
Complex Conditional,MuMech,MechJebModuleDeployableController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDeployableController.cs,ExtendingOrRetracting,The conditional expression  "mdp != null && isModules(mdp) && isDeployable(mdp)                          && (mdp.deployState == ModuleDeployablePart.DeployState.EXTENDING                           || mdp.deployState == ModuleDeployablePart.DeployState.RETRACTING)"  is complex.
Complex Conditional,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,Drive,The conditional expression  "((zSep <= lateralSep.magnitude * 10) || (timeToTargetSize <= timeToAxis * 10)) && (timeToAxis > 0 && timeToTargetSize > 0)"  is complex.
Complex Conditional,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,DeployParachutes,The conditional expression  "p.part.inverseStage >= limitChutesStage && p.deploymentState == ModuleParachute.deploymentStates.STOWED &&                          ASLDeployAltitude > vesselState.altitudeASL && p.deploymentSafeState == ModuleParachute.deploymentSafeStates.SAFE"  is complex.
Complex Conditional,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,InitLandingSitesList,The conditional expression  "bodyName == null || radialPos == null || launchSiteName == null || launchSiteType == null ||                          launchSiteType != "VAB""  is complex.
Complex Conditional,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,TryStartSimulation,The conditional expression  "doErrorSim && this.runErrorSimulations && !errorSimulationRunning && (errorStopwatch.ElapsedMilliseconds >= millisecondsBetweenErrorSimulations || !errorStopwatch.IsRunning)"  is complex.
Complex Conditional,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,DoMapView,The conditional expression  "(MapView.MapIsEnabled || camTrajectory) && !vessel.LandedOrSplashed && this.enabled"  is complex.
Complex Conditional,MuMech,MechJebModuleNodeExecutor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeExecutor.cs,OnFixedUpdate,The conditional expression  "(!double.IsInfinity(halfBurnTime) && halfBurnTime > 0 && timeToNode < halfBurnTime) || timeToNode < 0"  is complex.
Complex Conditional,MuMech,MechJebModuleNodeExecutor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeExecutor.cs,OnFixedUpdate,The conditional expression  "(core.attitude.attitudeAngleFromTarget() < 1 && core.vessel.angularVelocity.magnitude < 0.001) || (core.attitude.attitudeAngleFromTarget() < 10 && !MuUtils.PhysicsRunning())"  is complex.
Complex Conditional,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,flightangle5constraint,The conditional expression  "rT != old_rT || vT != old_vT || gamma != old_gamma || LAN != old_LAN"  is complex.
Complex Conditional,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,keplerian5constraint,The conditional expression  "sma != old_sma || ecc != old_ecc || inc != old_inc || LAN != old_LAN || ArgP != old_ArgP"  is complex.
Complex Conditional,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,flightangle4constraintMAXE,The conditional expression  "rTm != old_rTm || gamma != old_gamma || numStages != old_numStages || LAN != old_LAN"  is complex.
Complex Conditional,MuMech,MechJebModuleRCSBalancerWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSBalancerWindow.cs,WindowGUI,The conditional expression  "oldOverdrive != balancer.overdrive                      || oldOverdriveScale != balancer.overdriveScale                      || oldFactorTorque != balancer.tuningParamFactorTorque                      || oldFactorTranslate != balancer.tuningParamFactorTranslate                      || oldFactorWaste != balancer.tuningParamFactorWaste"  is complex.
Complex Conditional,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The conditional expression  "curSpeed < 0.1 && energyLeft < 0.05 && !waitingForDaylight &&  				    vessel.FindPartModulesImplementing<ModuleDeployableSolarPanel>().FindAll(p => p.deployState == ModuleDeployablePart.DeployState.EXTENDED).Count > 0"  is complex.
Complex Conditional,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,OnUpdate,The conditional expression  "autopilot.ControlHeading || autopilot.ControlSpeed || autopilot.StabilityControl || autopilot.BrakeOnEnergyDepletion || autopilot.BrakeOnEject"  is complex.
Complex Conditional,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,MechJebModuleScript,The conditional expression  "i < 5 || j < 5 || i > 15 || j > 15"  is complex.
Complex Conditional,MuMech,MechJebModuleStageStats,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStageStats.cs,RequestUpdate,The conditional expression  "wait && atmoStats.Length == 0 && (simulationRunning || TryStartSimulation())"  is complex.
Complex Conditional,MuMech,MechJebModuleStageStats,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStageStats.cs,TryStartSimulation,The conditional expression  "!simulationRunning && ((HighLogic.LoadedSceneIsEditor && editorBody != null) || (vessel != null))"  is complex.
Complex Conditional,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,OnUpdate,The conditional expression  "waitingForFirstStaging || vessel.currentStage <= 0 || vessel.currentStage <= autostageLimit || vessel.currentStage <= autostageLimitInternal                 || vesselState.time - lastStageTime < autostagePostDelay"  is complex.
Complex Conditional,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,OnUpdate,The conditional expression  "hotStaging && InverseStageHasActiveEngines(vessel.currentStage' vessel) && InverseStageHasEngines(vessel.currentStage - 1' vessel) && !InverseStageFiresDecoupler(vessel.currentStage - 1' vessel) && !InverseStageReleasesClamps(vessel.currentStage - 1' vessel) && LastNonZeroDVStageBurnTime() > hotStagingLeadTime"  is complex.
Complex Conditional,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,OnUpdate,The conditional expression  "(core.vesselState.dynamicPressure > fairingMaxDynamicPressure || core.vesselState.altitudeASL < fairingMinAltitude || core.vesselState.freeMolecularAerothermalFlux > fairingMaxAerothermalFlux) &&                      HasFairing(vessel.currentStage - 1' vessel)"  is complex.
Complex Conditional,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,InverseStageHasActiveEngines,The conditional expression  "p.inverseStage == inverseStage && p.IsEngine() && p.EngineHasFuel() && !p.IsSepratron()"  is complex.
Complex Conditional,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,HasActiveOrIdleEngineOrTankDescendant,The conditional expression  "(p.State == PartStates.ACTIVE || p.State == PartStates.IDLE)                  && p.IsEngine() && !p.IsSepratron() && p.EngineHasFuel()"  is complex.
Complex Conditional,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,Drive,The conditional expression  "(tmode == TMode.KEEP_ORBITAL && Vector3d.Dot(vesselState.forward' vesselState.orbitalVelocity) < 0) ||                     (tmode == TMode.KEEP_SURFACE && Vector3d.Dot(vesselState.forward' vesselState.surfaceVelocity) < 0)"  is complex.
Complex Conditional,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,Drive,The conditional expression  "(tmode != TMode.KEEP_VERTICAL)                      || !trans_kill_h                      || (core.attitude.attitudeError < 2)                      || ((Math.Min(vesselState.altitudeASL' vesselState.altitudeTrue) < 1000) && (core.attitude.attitudeError < 90))"  is complex.
Complex Conditional,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,Drive,The conditional expression  "(core.attitude.attitudeError >= 2) && (useGimbal || (useDiffThrottle && core.thrust.differentialThrottle))"  is complex.
Complex Conditional,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The conditional expression  "GUILayout.Button((alt ? "Top" : "Up")' GUILayout.Width(57)) && selIndex > 0 && selIndex < ap.Waypoints.Count && ap.Waypoints.Count >= 2"  is complex.
Complex Conditional,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The conditional expression  "GUILayout.Button((alt ? "Bottom" : "Down")' GUILayout.Width(57)) && selIndex >= 0 && selIndex < ap.Waypoints.Count - 1 && ap.Waypoints.Count >= 2"  is complex.
Complex Conditional,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The conditional expression  "selIndex == -1 && ap.WaypointIndex > -1 && lastIndex != ap.WaypointIndex && waypointRects.Length > 0"  is complex.
Complex Conditional,MuMech,MechJebRouteRenderer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,OnPreRender,The conditional expression  "ap != null && ap.Waypoints.Count > 0 && ap.vessel.isActiveVessel && HighLogic.LoadedSceneIsFlight"  is complex.
Complex Conditional,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The conditional expression  "HighLogic.LoadedSceneIsEditor || (HighLogic.LoadedSceneIsFlight && FlightGlobals.ready && vessel != null && core.attitude.enabled)"  is complex.
Complex Conditional,MuMech,MechJebBundlesManager,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechjebBundlesManager.cs,Start,The conditional expression  "x == 0 || x == comboBoxBackground.width-1 || y == 0 || y == comboBoxBackground.height-1"  is complex.
Complex Conditional,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToChangePeriapsis,The conditional expression  "(testPeriapsis > newPeR && raising) || (testPeriapsis < newPeR && !raising)"  is complex.
Complex Conditional,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToChangeApoapsis,The conditional expression  "(raising && above) || (!raising && !above)"  is complex.
Complex Conditional,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVForSemiMajorAxis,The conditional expression  "(testSMA < 0) || (testSMA > newSMA && raising) || (testSMA < newSMA && !raising)"  is complex.
Complex Conditional,MuMech,PartExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PartExtensions.cs,IsDecoupledInStage,The conditional expression  "((p.IsUnfiredDecoupler(out decoupledPart) && p == decoupledPart) || p.IsLaunchClamp()) && p.inverseStage == stage"  is complex.
Complex Conditional,MuMech,MechJebModuleScriptActionExecuteNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionExecuteNode.cs,WindowGUI,The conditional expression  "this.isStarted() && !this.isExecuted() && ((FlightGlobals.ActiveVessel.patchedConicSolver.maneuverNodes.Count < startNodeCount && actionType == 0) || FlightGlobals.ActiveVessel.patchedConicSolver.maneuverNodes.Count == 0)"  is complex.
Complex Conditional,MuMech,MechJebModuleScriptActionFor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionFor.cs,MechJebModuleScriptActionFor,The conditional expression  "x == 0 || x == 15 || y == 0 || y == 15"  is complex.
Complex Conditional,MuMech,MechJebModuleScriptActionIf,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionIf.cs,MechJebModuleScriptActionIf,The conditional expression  "x == 0 || x == 15 || y == 0 || y == 15"  is complex.
Complex Conditional,MuMech,MechJebModuleScriptActionParallel,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionParallel.cs,MechJebModuleScriptActionParallel,The conditional expression  "x == 0 || x == 15 || y == 0 || y == 15"  is complex.
Complex Conditional,MuMech,MechJebModuleScriptActionWarp,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionWarp.cs,afterOnFixedUpdate,The conditional expression  "this.isStarted() && !this.isExecuted() && !warping && startTime == 0f"  is complex.
Complex Conditional,MuMech,MechJebModuleScriptActionWhile,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionWhile.cs,MechJebModuleScriptActionWhile,The conditional expression  "x == 0 || x == 15 || y == 0 || y == 15"  is complex.
Complex Conditional,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateRCSThrustAndTorque,The conditional expression  "!p.ShieldedFromAirstream && rcs.rcsEnabled && rcs.isEnabled && !rcs.isJustForShow"  is complex.
Complex Conditional,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,AnalyzeParts,The conditional expression  "isLoadedRealFuels && RFullageSetField != null && RFignitionsField != null && RFullageField != null"  is complex.
Complex Conditional,MuMech,EngineInfo,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,CheckUllageStatus,The conditional expression  "(e.getFlameoutState) || (!e.EngineIgnited) || (!e.isEnabled) || (e.requestedThrottle > 0.0F)"  is complex.
Complex Conditional,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The conditional expression  "targetAngleToOrbitNormal < 10                      || (targetAheadAngle < 90 && targetAheadAngle > 60 && planeChangeAngle < 90)"  is complex.
Complex Conditional,Landing,PlaneChange,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\PlaneChange.cs,OnFixedUpdate,The conditional expression  "!planeChangeTriggered && approaching && (angleToTarget > 80) && (angleToTarget < 90)"  is complex.
Virtual Method Call from Constructor,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,MechJebModuleScriptActionManoeuver,The constructor "MechJebModuleScriptActionManoeuver" calls a virtual method "getName".
Virtual Method Call from Constructor,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,MechJebModuleScriptActionManoeuver,The constructor "MechJebModuleScriptActionManoeuver" calls a virtual method "getName".
Virtual Method Call from Constructor,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,MechJebModuleScriptActionManoeuver,The constructor "MechJebModuleScriptActionManoeuver" calls a virtual method "getName".
Empty Catch Block,MuMech,Operation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Operation.cs,getAvailableOperations,The method has an empty catch block.
Empty Catch Block,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,CalcLambertDVs,The method has an empty catch block.
Empty Catch Block,MuMech,MechJebModuleManeuverPlanner,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleManeuverPlanner.cs,WindowGUI,The method has an empty catch block.
Empty Catch Block,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,OnVesselModified,The method has an empty catch block.
Empty Catch Block,MuMech,RCSSolverThread,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,run,The method has an empty catch block.
Empty Catch Block,MuMech,ReflectionUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReflectionUtils.cs,isAssemblyLoaded,The method has an empty catch block.
Empty Catch Block,MuMech,MechJebModuleScriptActionManoeuver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionManoeuver.cs,WindowGUI,The method has an empty catch block.
Magic Number,MuMech.AttitudeControllers,HybridController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\HybridController.cs,UpdateStateVectors,The following statement contains a magic number: vesselRotation = ac.vessel.ReferenceTransform.rotation * Quaternion.Euler(-90' 0' 0);
Magic Number,MuMech.AttitudeControllers,HybridController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\HybridController.cs,PhiTotal,The following statement contains a magic number: Vector3d.Angle(vesselTop' targetForward) > 90
Magic Number,MuMech.AttitudeControllers,HybridController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\HybridController.cs,UpdatePredictionPI,The following statement contains a magic number: i < 3
Magic Number,MuMech.AttitudeControllers,HybridController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\HybridController.cs,UpdatePredictionPI,The following statement contains a magic number: TargetOmega[2] = yawRatePI.Update(-phiVector[2]' 0' MaxOmega[2]);
Magic Number,MuMech.AttitudeControllers,HybridController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\HybridController.cs,UpdatePredictionPI,The following statement contains a magic number: TargetOmega[2] = yawRatePI.Update(-phiVector[2]' 0' MaxOmega[2]);
Magic Number,MuMech.AttitudeControllers,HybridController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\HybridController.cs,UpdatePredictionPI,The following statement contains a magic number: TargetOmega[2] = yawRatePI.Update(-phiVector[2]' 0' MaxOmega[2]);
Magic Number,MuMech.AttitudeControllers,HybridController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\HybridController.cs,UpdatePredictionPI,The following statement contains a magic number: TargetTorque[2] = yawPI.Update(Omega[2]' TargetOmega[2]' ac.vesselState.MoI[2]' ControlTorque[2]);
Magic Number,MuMech.AttitudeControllers,HybridController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\HybridController.cs,UpdatePredictionPI,The following statement contains a magic number: TargetTorque[2] = yawPI.Update(Omega[2]' TargetOmega[2]' ac.vesselState.MoI[2]' ControlTorque[2]);
Magic Number,MuMech.AttitudeControllers,HybridController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\HybridController.cs,UpdatePredictionPI,The following statement contains a magic number: TargetTorque[2] = yawPI.Update(Omega[2]' TargetOmega[2]' ac.vesselState.MoI[2]' ControlTorque[2]);
Magic Number,MuMech.AttitudeControllers,HybridController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\HybridController.cs,UpdatePredictionPI,The following statement contains a magic number: TargetTorque[2] = yawPI.Update(Omega[2]' TargetOmega[2]' ac.vesselState.MoI[2]' ControlTorque[2]);
Magic Number,MuMech.AttitudeControllers,HybridController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\HybridController.cs,UpdatePredictionPI,The following statement contains a magic number: TargetTorque[2] = yawPI.Update(Omega[2]' TargetOmega[2]' ac.vesselState.MoI[2]' ControlTorque[2]);
Magic Number,MuMech.AttitudeControllers,HybridController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\HybridController.cs,UpdateControl,The following statement contains a magic number: double clamp = Math.Max(Math.Abs(Actuation[i])' 0.005) * 2;
Magic Number,MuMech.AttitudeControllers,HybridController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\HybridController.cs,UpdateControl,The following statement contains a magic number: double clamp = Math.Max(Math.Abs(Actuation[i])' 0.005) * 2;
Magic Number,MuMech.AttitudeControllers,HybridController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\HybridController.cs,UpdateControl,The following statement contains a magic number: i < 3
Magic Number,MuMech.AttitudeControllers,HybridController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\HybridController.cs,GUI,The following statement contains a magic number: maxStoppingTime.text = GUILayout.TextField(maxStoppingTime.text' GUILayout.ExpandWidth(true)' GUILayout.Width(60));
Magic Number,MuMech.AttitudeControllers,HybridController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\HybridController.cs,GUI,The following statement contains a magic number: rollControlRange.text = GUILayout.TextField(rollControlRange.text' GUILayout.ExpandWidth(true)' GUILayout.Width(60));
Magic Number,MuMech.AttitudeControllers,KosAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\KosAttitudeController.cs,UpdateStateVectors,The following statement contains a magic number: vesselRotation = ac.vessel.ReferenceTransform.rotation * Quaternion.Euler(-90' 0' 0);
Magic Number,MuMech.AttitudeControllers,KosAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\KosAttitudeController.cs,PhiTotal,The following statement contains a magic number: Vector3d.Angle(vesselTop' targetForward) > 90
Magic Number,MuMech.AttitudeControllers,KosAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\KosAttitudeController.cs,PhiVector,The following statement contains a magic number: Vector3d.Angle(vesselTop' Vector3d.Exclude(vesselStarboard' targetForward)) > 90
Magic Number,MuMech.AttitudeControllers,KosAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\KosAttitudeController.cs,PhiVector,The following statement contains a magic number: Vector3d.Angle(vesselStarboard' Vector3d.Exclude(vesselForward' targetTop)) > 90
Magic Number,MuMech.AttitudeControllers,KosAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\KosAttitudeController.cs,PhiVector,The following statement contains a magic number: Phi[2] = Vector3d.Angle(vesselForward' Vector3d.Exclude(vesselTop' targetForward)) * Mathf.Deg2Rad;
Magic Number,MuMech.AttitudeControllers,KosAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\KosAttitudeController.cs,PhiVector,The following statement contains a magic number: Phi[2] *= -1;
Magic Number,MuMech.AttitudeControllers,KosAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\KosAttitudeController.cs,PhiVector,The following statement contains a magic number: Vector3d.Angle(vesselStarboard' Vector3d.Exclude(vesselTop' targetForward)) > 90
Magic Number,MuMech.AttitudeControllers,KosAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\KosAttitudeController.cs,UpdatePredictionPI,The following statement contains a magic number: i < 3
Magic Number,MuMech.AttitudeControllers,KosAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\KosAttitudeController.cs,UpdatePredictionPI,The following statement contains a magic number: TargetOmega[2] = yawRatePI.Update(-phiVector[2]' 0' MaxOmega[2]);
Magic Number,MuMech.AttitudeControllers,KosAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\KosAttitudeController.cs,UpdatePredictionPI,The following statement contains a magic number: TargetOmega[2] = yawRatePI.Update(-phiVector[2]' 0' MaxOmega[2]);
Magic Number,MuMech.AttitudeControllers,KosAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\KosAttitudeController.cs,UpdatePredictionPI,The following statement contains a magic number: TargetOmega[2] = yawRatePI.Update(-phiVector[2]' 0' MaxOmega[2]);
Magic Number,MuMech.AttitudeControllers,KosAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\KosAttitudeController.cs,UpdatePredictionPI,The following statement contains a magic number: TargetTorque[2] = yawPI.Update(Omega[2]' TargetOmega[2]' ac.vesselState.MoI[2]' ControlTorque[2]);
Magic Number,MuMech.AttitudeControllers,KosAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\KosAttitudeController.cs,UpdatePredictionPI,The following statement contains a magic number: TargetTorque[2] = yawPI.Update(Omega[2]' TargetOmega[2]' ac.vesselState.MoI[2]' ControlTorque[2]);
Magic Number,MuMech.AttitudeControllers,KosAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\KosAttitudeController.cs,UpdatePredictionPI,The following statement contains a magic number: TargetTorque[2] = yawPI.Update(Omega[2]' TargetOmega[2]' ac.vesselState.MoI[2]' ControlTorque[2]);
Magic Number,MuMech.AttitudeControllers,KosAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\KosAttitudeController.cs,UpdatePredictionPI,The following statement contains a magic number: TargetTorque[2] = yawPI.Update(Omega[2]' TargetOmega[2]' ac.vesselState.MoI[2]' ControlTorque[2]);
Magic Number,MuMech.AttitudeControllers,KosAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\KosAttitudeController.cs,UpdatePredictionPI,The following statement contains a magic number: TargetTorque[2] = yawPI.Update(Omega[2]' TargetOmega[2]' ac.vesselState.MoI[2]' ControlTorque[2]);
Magic Number,MuMech.AttitudeControllers,KosAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\KosAttitudeController.cs,UpdateControl,The following statement contains a magic number: double clamp = Math.Max(Math.Abs(Actuation[i])' 0.005) * 2;
Magic Number,MuMech.AttitudeControllers,KosAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\KosAttitudeController.cs,UpdateControl,The following statement contains a magic number: double clamp = Math.Max(Math.Abs(Actuation[i])' 0.005) * 2;
Magic Number,MuMech.AttitudeControllers,KosAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\KosAttitudeController.cs,UpdateControl,The following statement contains a magic number: i < 3
Magic Number,MuMech.AttitudeControllers,KosAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\KosAttitudeController.cs,GUI,The following statement contains a magic number: maxStoppingTime.text = GUILayout.TextField(maxStoppingTime.text' GUILayout.ExpandWidth(true)' GUILayout.Width(40));
Magic Number,MuMech.AttitudeControllers,KosAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\KosAttitudeController.cs,GUI,The following statement contains a magic number: rollControlRange.text = GUILayout.TextField(rollControlRange.text' GUILayout.ExpandWidth(true)' GUILayout.Width(40));
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,setPIDParameters,The following statement contains a magic number: pid.Kp = (1 / (kpFactor * Math.Sqrt(2))) * pid.Kd;
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,setPIDParameters,The following statement contains a magic number: pid.Ki = (1 / (kiFactor * Math.Sqrt(2))) * pid.Kp;
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,setPIDParameters,The following statement contains a magic number: pid.intAccum = pid.intAccum.Clamp(-5' 5);
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,setPIDParameters,The following statement contains a magic number: pid.intAccum = pid.intAccum.Clamp(-5' 5);
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,tuneTf,The following statement contains a magic number: TfV = 0.05 * ratio;
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,tuneTf,The following statement contains a magic number: Vector3d delayFactor = Vector3d.one + 2 * ac.vesselState.torqueReactionSpeed;
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,tuneTf,The following statement contains a magic number: TfV = TfV.Clamp(2.0 * TimeWarp.fixedDeltaTime' TfMax);
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,ResetConfig,The following statement contains a magic number: TfMin = 0.1;
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,ResetConfig,The following statement contains a magic number: TfMax = 0.5;
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,ResetConfig,The following statement contains a magic number: kpFactor = 3;
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,ResetConfig,The following statement contains a magic number: kiFactor = 6;
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,ResetConfig,The following statement contains a magic number: kdFactor = 0.5;
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,ResetConfig,The following statement contains a magic number: deadband = 0.0001;
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,ResetConfig,The following statement contains a magic number: kWlimit = 0.15;
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,GUI,The following statement contains a magic number: GUILayout.Space(20);
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,GUI,The following statement contains a magic number: UI_TfX.text = GUILayout.TextField(UI_TfX.text' GUILayout.ExpandWidth(true)' GUILayout.Width(40));
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,GUI,The following statement contains a magic number: UI_TfY.text = GUILayout.TextField(UI_TfY.text' GUILayout.ExpandWidth(true)' GUILayout.Width(40));
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,GUI,The following statement contains a magic number: UI_TfZ.text = GUILayout.TextField(UI_TfZ.text' GUILayout.ExpandWidth(true)' GUILayout.Width(40));
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,GUI,The following statement contains a magic number: UI_TfX = Math.Max(0.01' UI_TfX);
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,GUI,The following statement contains a magic number: UI_TfY = Math.Max(0.01' UI_TfY);
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,GUI,The following statement contains a magic number: UI_TfZ = Math.Max(0.01' UI_TfZ);
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,GUI,The following statement contains a magic number: GuiUtils.SimpleTextBox("Kd = "' UI_kdFactor' " / Tf"' 50);
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,GUI,The following statement contains a magic number: UI_kdFactor = Math.Max(UI_kdFactor' 0.01);
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,GUI,The following statement contains a magic number: GuiUtils.SimpleTextBox("Kp = pid.Kd / ("' UI_kpFactor' " * Math.Sqrt(2) * Tf)"' 50);
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,GUI,The following statement contains a magic number: UI_kpFactor = Math.Max(UI_kpFactor' 0.01);
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,GUI,The following statement contains a magic number: GuiUtils.SimpleTextBox("Ki = pid.Kp / ("' UI_kiFactor' " * Math.Sqrt(2) * Tf)"' 50);
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,GUI,The following statement contains a magic number: UI_kiFactor = Math.Max(UI_kiFactor' 0.01);
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,GUI,The following statement contains a magic number: GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_AttitudeController_PIDFactor1")' UI_deadband' ""' 50);
Magic Number,MuMech.AttitudeControllers,MJAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\MJAttitudeController.cs,GUI,The following statement contains a magic number: const int sliderPrecision = 3;
Magic Number,MuMech.AttitudeControllers,PIDLoop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\PIDLoop.cs,Update,The following statement contains a magic number: _loopKi *= 2;
Magic Number,MuMech.AttitudeControllers,TorquePI,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\TorquePI.cs,TorquePI,The following statement contains a magic number: Ts = 2;
Magic Number,MuMech.AttitudeControllers,TorquePI,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\TorquePI.cs,Update,The following statement contains a magic number: Loop.Ki = MomentOfInertia * Math.Pow(4.0 / ts' 2);
Magic Number,MuMech.AttitudeControllers,TorquePI,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\TorquePI.cs,Update,The following statement contains a magic number: Loop.Ki = MomentOfInertia * Math.Pow(4.0 / ts' 2);
Magic Number,MuMech.AttitudeControllers,TorquePI,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\TorquePI.cs,Update,The following statement contains a magic number: Loop.Kp = 2 * Math.Pow(MomentOfInertia * Loop.Ki' 0.5);
Magic Number,MuMech.AttitudeControllers,TorquePI,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\AttitudeControllers\TorquePI.cs,Update,The following statement contains a magic number: Loop.Kp = 2 * Math.Pow(MomentOfInertia * Loop.Ki' 0.5);
Magic Number,MuMech,CelestialBodyExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CelestialBodyExtensions.cs,DragLength,The following statement contains a magic number: return mass / (0.0005 * PhysicsGlobals.DragMultiplier * airDensity * dragCoeff);
Magic Number,MuMech,CelestialBodyExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CelestialBodyExtensions.cs,AltitudeForPressure,The following statement contains a magic number: double testAlt = (upperAlt + lowerAlt) * 0.5;
Magic Number,MuMech,CelestialBodyExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CelestialBodyExtensions.cs,AltitudeForPressure,The following statement contains a magic number: upperAlt - lowerAlt > 10
Magic Number,MuMech,CelestialBodyExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CelestialBodyExtensions.cs,AltitudeForPressure,The following statement contains a magic number: return (upperAlt + lowerAlt) * 0.5;
Magic Number,MuMech,CompatibilityChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CompatibilityChecker.cs,IsCompatible,The following statement contains a magic number: PopupDialog.SpawnPopupDialog(new Vector2(0.5f' 0.5f)' new Vector2(0.5f' 0.5f)'                               "MJBobNeedsToFixStuff"' "Outdated Firespitter version detected"'                              "You are using a version of Firespitter that does not run properly on KSP 1.8+\nThis version may prevent the game from loading properly and may create problems for other mods"'                              "OK"' true' HighLogic.UISkin);
Magic Number,MuMech,CompatibilityChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CompatibilityChecker.cs,IsCompatible,The following statement contains a magic number: PopupDialog.SpawnPopupDialog(new Vector2(0.5f' 0.5f)' new Vector2(0.5f' 0.5f)'                               "MJBobNeedsToFixStuff"' "Outdated Firespitter version detected"'                              "You are using a version of Firespitter that does not run properly on KSP 1.8+\nThis version may prevent the game from loading properly and may create problems for other mods"'                              "OK"' true' HighLogic.UISkin);
Magic Number,MuMech,CompatibilityChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CompatibilityChecker.cs,IsCompatible,The following statement contains a magic number: PopupDialog.SpawnPopupDialog(new Vector2(0.5f' 0.5f)' new Vector2(0.5f' 0.5f)'                               "MJBobNeedsToFixStuff"' "Outdated Firespitter version detected"'                              "You are using a version of Firespitter that does not run properly on KSP 1.8+\nThis version may prevent the game from loading properly and may create problems for other mods"'                              "OK"' true' HighLogic.UISkin);
Magic Number,MuMech,CompatibilityChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CompatibilityChecker.cs,IsCompatible,The following statement contains a magic number: PopupDialog.SpawnPopupDialog(new Vector2(0.5f' 0.5f)' new Vector2(0.5f' 0.5f)'                               "MJBobNeedsToFixStuff"' "Outdated Firespitter version detected"'                              "You are using a version of Firespitter that does not run properly on KSP 1.8+\nThis version may prevent the game from loading properly and may create problems for other mods"'                              "OK"' true' HighLogic.UISkin);
Magic Number,MuMech,CompatibilityChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CompatibilityChecker.cs,IsCompatible,The following statement contains a magic number: Versioning.version_major == 1 && Versioning.version_minor >= 8
Magic Number,MuMech,CompatibilityChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CompatibilityChecker.cs,IsCompatible,The following statement contains a magic number: return Versioning.version_major == 1 && Versioning.version_minor == 8;
Magic Number,MuMech,CompatibilityChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CompatibilityChecker.cs,Start,The following statement contains a magic number: PopupDialog.SpawnPopupDialog(new Vector2(0.5f' 0.5f)' new Vector2(0.5f' 0.5f)' "CompatibilityChecker"' "Incompatible Mods Detected"' message' "OK"' true' HighLogic.UISkin);
Magic Number,MuMech,CompatibilityChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CompatibilityChecker.cs,Start,The following statement contains a magic number: PopupDialog.SpawnPopupDialog(new Vector2(0.5f' 0.5f)' new Vector2(0.5f' 0.5f)' "CompatibilityChecker"' "Incompatible Mods Detected"' message' "OK"' true' HighLogic.UISkin);
Magic Number,MuMech,CompatibilityChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CompatibilityChecker.cs,Start,The following statement contains a magic number: PopupDialog.SpawnPopupDialog(new Vector2(0.5f' 0.5f)' new Vector2(0.5f' 0.5f)' "CompatibilityChecker"' "Incompatible Mods Detected"' message' "OK"' true' HighLogic.UISkin);
Magic Number,MuMech,CompatibilityChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CompatibilityChecker.cs,Start,The following statement contains a magic number: PopupDialog.SpawnPopupDialog(new Vector2(0.5f' 0.5f)' new Vector2(0.5f' 0.5f)' "CompatibilityChecker"' "Incompatible Mods Detected"' message' "OK"' true' HighLogic.UISkin);
Magic Number,MuMech,CompatibilityChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\CompatibilityChecker.cs,IsWin64,The following statement contains a magic number: return (IntPtr.Size == 8) && (Environment.OSVersion.Platform == PlatformID.Win32NT);
Magic Number,MuMech,DisplayModule,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\DisplayModule.cs,WindowGUI,The following statement contains a magic number: !isOverlay && GUI.Button(new Rect(windowPos.width - 18' 2' 16' 16)' "")
Magic Number,MuMech,DisplayModule,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\DisplayModule.cs,WindowGUI,The following statement contains a magic number: !isOverlay && GUI.Button(new Rect(windowPos.width - 18' 2' 16' 16)' "")
Magic Number,MuMech,DisplayModule,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\DisplayModule.cs,WindowGUI,The following statement contains a magic number: !isOverlay && GUI.Button(new Rect(windowPos.width - 18' 2' 16' 16)' "")
Magic Number,MuMech,DisplayModule,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\DisplayModule.cs,WindowGUI,The following statement contains a magic number: !isOverlay && GUI.Button(new Rect(windowPos.width - 18' 2' 16' 16)' "")
Magic Number,MuMech,DisplayModule,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\DisplayModule.cs,WindowGUI,The following statement contains a magic number: allowDrag = x >= windowPos.xMin + 3 && x <= windowPos.xMin + windowPos.width - 3 &&                              y >= windowPos.yMin + 3 && y <= windowPos.yMin + 17;
Magic Number,MuMech,DisplayModule,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\DisplayModule.cs,WindowGUI,The following statement contains a magic number: allowDrag = x >= windowPos.xMin + 3 && x <= windowPos.xMin + windowPos.width - 3 &&                              y >= windowPos.yMin + 3 && y <= windowPos.yMin + 17;
Magic Number,MuMech,DisplayModule,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\DisplayModule.cs,WindowGUI,The following statement contains a magic number: allowDrag = x >= windowPos.xMin + 3 && x <= windowPos.xMin + windowPos.width - 3 &&                              y >= windowPos.yMin + 3 && y <= windowPos.yMin + 17;
Magic Number,MuMech,DisplayModule,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\DisplayModule.cs,WindowGUI,The following statement contains a magic number: allowDrag = x >= windowPos.xMin + 3 && x <= windowPos.xMin + windowPos.width - 3 &&                              y >= windowPos.yMin + 3 && y <= windowPos.yMin + 17;
Magic Number,MuMech,SimulatedParachute,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedParachute.cs,Init,The following statement contains a magic number: switch (mp.deploymentState)              {                  case ModuleParachute.deploymentStates.SEMIDEPLOYED:                      if (mp.Anim.isPlaying)                          timeSinceDeployment = mp.Anim[mp.semiDeployedAnimation].time;                      else                          timeSinceDeployment = 10000000;                      break;                    case ModuleParachute.deploymentStates.DEPLOYED:                      if (mp.Anim.isPlaying)                          timeSinceDeployment = mp.Anim[mp.fullyDeployedAnimation].time;                      else                          timeSinceDeployment = 10000000;                      break;                    case ModuleParachute.deploymentStates.STOWED:                  case ModuleParachute.deploymentStates.ACTIVE:                      // If the parachute is stowed then for some reason para.parachuteDrag does not reflect the stowed drag. set this up by hand.                       timeSinceDeployment = 10000000;                      break;                    default:                      // otherwise set the time since deployment to be a very large number to indcate that it has been in that state for a long time (although we do not know how long!                      timeSinceDeployment = 10000000;                      break;              }
Magic Number,MuMech,SimulatedParachute,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedParachute.cs,Init,The following statement contains a magic number: switch (mp.deploymentState)              {                  case ModuleParachute.deploymentStates.SEMIDEPLOYED:                      if (mp.Anim.isPlaying)                          timeSinceDeployment = mp.Anim[mp.semiDeployedAnimation].time;                      else                          timeSinceDeployment = 10000000;                      break;                    case ModuleParachute.deploymentStates.DEPLOYED:                      if (mp.Anim.isPlaying)                          timeSinceDeployment = mp.Anim[mp.fullyDeployedAnimation].time;                      else                          timeSinceDeployment = 10000000;                      break;                    case ModuleParachute.deploymentStates.STOWED:                  case ModuleParachute.deploymentStates.ACTIVE:                      // If the parachute is stowed then for some reason para.parachuteDrag does not reflect the stowed drag. set this up by hand.                       timeSinceDeployment = 10000000;                      break;                    default:                      // otherwise set the time since deployment to be a very large number to indcate that it has been in that state for a long time (although we do not know how long!                      timeSinceDeployment = 10000000;                      break;              }
Magic Number,MuMech,SimulatedParachute,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedParachute.cs,Init,The following statement contains a magic number: switch (mp.deploymentState)              {                  case ModuleParachute.deploymentStates.SEMIDEPLOYED:                      if (mp.Anim.isPlaying)                          timeSinceDeployment = mp.Anim[mp.semiDeployedAnimation].time;                      else                          timeSinceDeployment = 10000000;                      break;                    case ModuleParachute.deploymentStates.DEPLOYED:                      if (mp.Anim.isPlaying)                          timeSinceDeployment = mp.Anim[mp.fullyDeployedAnimation].time;                      else                          timeSinceDeployment = 10000000;                      break;                    case ModuleParachute.deploymentStates.STOWED:                  case ModuleParachute.deploymentStates.ACTIVE:                      // If the parachute is stowed then for some reason para.parachuteDrag does not reflect the stowed drag. set this up by hand.                       timeSinceDeployment = 10000000;                      break;                    default:                      // otherwise set the time since deployment to be a very large number to indcate that it has been in that state for a long time (although we do not know how long!                      timeSinceDeployment = 10000000;                      break;              }
Magic Number,MuMech,SimulatedParachute,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedParachute.cs,Init,The following statement contains a magic number: switch (mp.deploymentState)              {                  case ModuleParachute.deploymentStates.SEMIDEPLOYED:                      if (mp.Anim.isPlaying)                          timeSinceDeployment = mp.Anim[mp.semiDeployedAnimation].time;                      else                          timeSinceDeployment = 10000000;                      break;                    case ModuleParachute.deploymentStates.DEPLOYED:                      if (mp.Anim.isPlaying)                          timeSinceDeployment = mp.Anim[mp.fullyDeployedAnimation].time;                      else                          timeSinceDeployment = 10000000;                      break;                    case ModuleParachute.deploymentStates.STOWED:                  case ModuleParachute.deploymentStates.ACTIVE:                      // If the parachute is stowed then for some reason para.parachuteDrag does not reflect the stowed drag. set this up by hand.                       timeSinceDeployment = 10000000;                      break;                    default:                      // otherwise set the time since deployment to be a very large number to indcate that it has been in that state for a long time (although we do not know how long!                      timeSinceDeployment = 10000000;                      break;              }
Magic Number,MuMech,SimulatedPart,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedPart.cs,CopyDragCubesList,The following statement contains a magic number: i<6
Magic Number,MuMech,FuelFlowSimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,SimulateStage,The following statement contains a magic number: const int maxSteps = 100;
Magic Number,MuMech,FuelFlowSimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,SimulateTimeStep,The following statement contains a magic number: stats.isp = stats.startMass > stats.endMass ? stats.deltaV / (9.80665f * Math.Log(stats.startMass / stats.endMass)) : 0;
Magic Number,MuMech,Stats,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,StartTWR,The following statement contains a magic number: return startMass > 0 ? startThrust / (9.80665 * geeASL * startMass) : 0;
Magic Number,MuMech,Stats,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,MaxTWR,The following statement contains a magic number: return maxAccel / (9.80665 * geeASL);
Magic Number,MuMech,Stats,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FuelFlowSimulation.cs,Append,The following statement contains a magic number: return new Stats                  {                      startMass = this.startMass'                      endMass = s.endMass'                      resourceMass = startMass - s.endMass'                      startThrust = this.startThrust'                      maxAccel = Math.Max(this.maxAccel' s.maxAccel)'                      deltaTime = this.deltaTime + (s.deltaTime < float.MaxValue && !double.IsInfinity(s.deltaTime) ? s.deltaTime : 0)'                      deltaV = this.deltaV + s.deltaV'                      parts = this.parts'                      isp = this.startMass == s.endMass ? 0 : (this.deltaV + s.deltaV) / (9.80665f * Math.Log(this.startMass / s.endMass))                  };
Magic Number,MuMech,GLUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GLUtils.cs,DrawGroundMarker,The following statement contains a magic number: radius = map ? body.Radius / 15 : 5;
Magic Number,MuMech,GLUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GLUtils.cs,DrawGroundMarker,The following statement contains a magic number: radius = map ? body.Radius / 15 : 5;
Magic Number,MuMech,GLUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GLUtils.cs,DrawGroundMarker,The following statement contains a magic number: GLTriangle(                  center'                  center + radius * (QuaternionD.AngleAxis(rotation - 10' up) * north)'                  center + radius * (QuaternionD.AngleAxis(rotation + 10' up) * north)              ' c' map);
Magic Number,MuMech,GLUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GLUtils.cs,DrawGroundMarker,The following statement contains a magic number: GLTriangle(                  center'                  center + radius * (QuaternionD.AngleAxis(rotation - 10' up) * north)'                  center + radius * (QuaternionD.AngleAxis(rotation + 10' up) * north)              ' c' map);
Magic Number,MuMech,GLUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GLUtils.cs,DrawGroundMarker,The following statement contains a magic number: GLTriangle(                  center'                  center + radius * (QuaternionD.AngleAxis(rotation + 110' up) * north)'                  center + radius * (QuaternionD.AngleAxis(rotation + 130' up) * north)              ' c' map);
Magic Number,MuMech,GLUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GLUtils.cs,DrawGroundMarker,The following statement contains a magic number: GLTriangle(                  center'                  center + radius * (QuaternionD.AngleAxis(rotation + 110' up) * north)'                  center + radius * (QuaternionD.AngleAxis(rotation + 130' up) * north)              ' c' map);
Magic Number,MuMech,GLUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GLUtils.cs,DrawGroundMarker,The following statement contains a magic number: GLTriangle(                  center'                  center + radius * (QuaternionD.AngleAxis(rotation - 110' up) * north)'                  center + radius * (QuaternionD.AngleAxis(rotation - 130' up) * north)              ' c' map);
Magic Number,MuMech,GLUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GLUtils.cs,DrawGroundMarker,The following statement contains a magic number: GLTriangle(                  center'                  center + radius * (QuaternionD.AngleAxis(rotation - 110' up) * north)'                  center + radius * (QuaternionD.AngleAxis(rotation - 130' up) * north)              ' c' map);
Magic Number,MuMech,GLUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GLUtils.cs,IsOccluded,The following statement contains a magic number: Vector3d VC = (byBody.position - camPos) / (byBody.Radius - 100);
Magic Number,MuMech,GLUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GLUtils.cs,IsOccluded,The following statement contains a magic number: Vector3d VT = (worldPosition - camPos) / (byBody.Radius - 100);
Magic Number,MuMech,GLUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GLUtils.cs,DrawPath,The following statement contains a magic number: int step = (dashed ? 2 : 1);
Magic Number,MuMech,GLUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GLUtils.cs,DrawOrbit,The following statement contains a magic number: trueAnomaly < 360
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,Solve,The following statement contains a magic number: theta = 2.0 * Math.PI - theta;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,Solve,The following statement contains a magic number: (angle_to_on > 0.5 * Math.PI) && (tof > 0.0)
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,Solve,The following statement contains a magic number: theta = 2.0 * Math.PI - theta;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,Solve,The following statement contains a magic number: (angle_to_on < 0.5 * Math.PI) && (tof < 0.0)
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,Solve,The following statement contains a magic number: theta = theta + 2.0 * Math.PI * Math.Abs(nrev);
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,VLAMB,The following statement contains a magic number: int M = Convert.ToInt32(Math.Floor(TH / (2.0 * Math.PI)));
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,VLAMB,The following statement contains a magic number: double THR2 = TH / 2.0 - M * Math.PI;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,VLAMB,The following statement contains a magic number: double R1R2TH = 4.0 * R1R2 * Math.Pow(Math.Sin(THR2)' 2);
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,VLAMB,The following statement contains a magic number: double R1R2TH = 4.0 * R1R2 * Math.Pow(Math.Sin(THR2)' 2);
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,VLAMB,The following statement contains a magic number: double CSQ = Math.Pow(DR' 2) + R1R2TH;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,VLAMB,The following statement contains a magic number: double S = (R1 + R2 + C) / 2.0;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,VLAMB,The following statement contains a magic number: double GMS = Math.Sqrt(GM * S / 2.0);
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,VLAMB,The following statement contains a magic number: double T = 4.0 * GMS * TDELT / Math.Pow(S' 2);
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,VLAMB,The following statement contains a magic number: double T = 4.0 * GMS * TDELT / Math.Pow(S' 2);
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,XLAMB,The following statement contains a magic number: double TOL = 3e-7;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,XLAMB,The following statement contains a magic number: double C0 = 1.7;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,XLAMB,The following statement contains a magic number: double C1 = 0.5;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,XLAMB,The following statement contains a magic number: double C2 = 0.03;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,XLAMB,The following statement contains a magic number: double C3 = 0.15;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,XLAMB,The following statement contains a magic number: double C42 = 0.24;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,XLAMB,The following statement contains a magic number: double THR2 = Math.Atan2(QSQFM1' 2.0*Q)/Math.PI;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,XLAMB,The following statement contains a magic number: X = T0*TDIFF/(-4.0*TIN);
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,XLAMB,The following statement contains a magic number: TLAMB(M' Q' QSQFM1' X' 2' out T' out DT' out D2T' out D3T);
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,XLAMB,The following statement contains a magic number: X = X + T*DT/(DT*DT + T*D2T/2.0);
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,XLAMB,The following statement contains a magic number: N != 3
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,XLAMB,The following statement contains a magic number: N = 2;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,XLAMB,The following statement contains a magic number: X = XM - Math.Sqrt(TDIFFM/(D2T2 - TDIFFM*(D2T2/TDIFF0 - 1.0/Math.Pow(XM' 2))));
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,TLAMB,The following statement contains a magic number: double SW = 0.4;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,TLAMB,The following statement contains a magic number: bool L2 = N >= 2;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,TLAMB,The following statement contains a magic number: bool L3 = N == 3;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,TLAMB,The following statement contains a magic number: T = 2.0 * (T/Y + B) / U;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,TLAMB,The following statement contains a magic number: DT = ( 3.0*X*T - 4.0 * ( A + QX*QSQFM1 ) / Z ) / U;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,TLAMB,The following statement contains a magic number: DT = ( 3.0*X*T - 4.0 * ( A + QX*QSQFM1 ) / Z ) / U;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,TLAMB,The following statement contains a magic number: D2T = ( 3.0*T + 5.0*X*DT + 4.0*QZ*QSQFM1 ) / U;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,TLAMB,The following statement contains a magic number: D2T = ( 3.0*T + 5.0*X*DT + 4.0*QZ*QSQFM1 ) / U;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,TLAMB,The following statement contains a magic number: D2T = ( 3.0*T + 5.0*X*DT + 4.0*QZ*QSQFM1 ) / U;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,TLAMB,The following statement contains a magic number: D3T = ( 8.0*DT + 7.0*X*D2T - 12.0*QZ*QZ2*X*QSQFM1 ) / U;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,TLAMB,The following statement contains a magic number: D3T = ( 8.0*DT + 7.0*X*D2T - 12.0*QZ*QZ2*X*QSQFM1 ) / U;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,TLAMB,The following statement contains a magic number: D3T = ( 8.0*DT + 7.0*X*D2T - 12.0*QZ*QZ2*X*QSQFM1 ) / U;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,DebugLogList,The following statement contains a magic number: i % 6 == 5
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,DebugLogList,The following statement contains a magic number: i % 6 == 5
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,Test,The following statement contains a magic number: smp = 2 * sma;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,Test,The following statement contains a magic number: energy = -1.0 / ( 2.0 * sma );
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,Test,The following statement contains a magic number: f = 2.0 * Math.Atan(Math.Sqrt((1 + ecc) / (1 - ecc)) * Math.Tan(E / 2.0));
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,Test,The following statement contains a magic number: f = 2.0 * Math.Atan(Math.Sqrt((1 + ecc) / (1 - ecc)) * Math.Tan(E / 2.0));
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,Test,The following statement contains a magic number: double v = Math.Sqrt(2 * (energy + 1.0 / r ) );
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,Test,The following statement contains a magic number: f += 2 * Math.PI;
Magic Number,MuMech,GoodingSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GoodingSolver.cs,Test,The following statement contains a magic number: E < 2 * Math.PI
Magic Number,MuMech,EditableAngle,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,EditableAngle,The following statement contains a magic number: minutes = (int)(60 * angle);
Magic Number,MuMech,EditableAngle,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,EditableAngle,The following statement contains a magic number: angle -= minutes / 60;
Magic Number,MuMech,EditableAngle,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,EditableAngle,The following statement contains a magic number: seconds = Math.Round(3600 * angle);
Magic Number,MuMech,EditableAngle,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawEditGUI,The following statement contains a magic number: degrees.text = GUILayout.TextField(degrees.text' GUILayout.Width(30));
Magic Number,MuMech,EditableAngle,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawEditGUI,The following statement contains a magic number: minutes.text = GUILayout.TextField(minutes.text' GUILayout.Width(30));
Magic Number,MuMech,EditableAngle,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawEditGUI,The following statement contains a magic number: seconds.text = GUILayout.TextField(seconds.text' GUILayout.Width(30));
Magic Number,MuMech,EditableAngle,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawEditGUI,The following statement contains a magic number: GUILayout.Button(dirString' GUILayout.Width(25))
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,SetGUIScale,The following statement contains a magic number: scale = Mathf.Clamp((float)s' 0.2f' 5f);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,SetGUIScale,The following statement contains a magic number: scale = Mathf.Clamp((float)s' 0.2f' 5f);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyCompactSkin,The following statement contains a magic number: compactSkin.label.padding = new RectOffset(0' 0' 2' 2);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyCompactSkin,The following statement contains a magic number: compactSkin.label.padding = new RectOffset(0' 0' 2' 2);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyCompactSkin,The following statement contains a magic number: compactSkin.button.padding = new RectOffset(4' 4' 2' 2);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyCompactSkin,The following statement contains a magic number: compactSkin.button.padding = new RectOffset(4' 4' 2' 2);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyCompactSkin,The following statement contains a magic number: compactSkin.button.padding = new RectOffset(4' 4' 2' 2);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyCompactSkin,The following statement contains a magic number: compactSkin.button.padding = new RectOffset(4' 4' 2' 2);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyCompactSkin,The following statement contains a magic number: compactSkin.toggle.padding = new RectOffset(15' 0' 2' 0);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyCompactSkin,The following statement contains a magic number: compactSkin.toggle.padding = new RectOffset(15' 0' 2' 0);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyCompactSkin,The following statement contains a magic number: compactSkin.textField.padding = new RectOffset(2' 2' 2' 2);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyCompactSkin,The following statement contains a magic number: compactSkin.textField.padding = new RectOffset(2' 2' 2' 2);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyCompactSkin,The following statement contains a magic number: compactSkin.textField.padding = new RectOffset(2' 2' 2' 2);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyCompactSkin,The following statement contains a magic number: compactSkin.textField.padding = new RectOffset(2' 2' 2' 2);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyCompactSkin,The following statement contains a magic number: compactSkin.textArea.padding = new RectOffset(2' 2' 2' 2);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyCompactSkin,The following statement contains a magic number: compactSkin.textArea.padding = new RectOffset(2' 2' 2' 2);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyCompactSkin,The following statement contains a magic number: compactSkin.textArea.padding = new RectOffset(2' 2' 2' 2);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyCompactSkin,The following statement contains a magic number: compactSkin.textArea.padding = new RectOffset(2' 2' 2' 2);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyCompactSkin,The following statement contains a magic number: compactSkin.window.padding = new RectOffset(5' 5' 20' 5);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyCompactSkin,The following statement contains a magic number: compactSkin.window.padding = new RectOffset(5' 5' 20' 5);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyCompactSkin,The following statement contains a magic number: compactSkin.window.padding = new RectOffset(5' 5' 20' 5);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyCompactSkin,The following statement contains a magic number: compactSkin.window.padding = new RectOffset(5' 5' 20' 5);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyTransparentSkin,The following statement contains a magic number: transparentSkin.window.padding = new RectOffset(5' 5' 5' 5);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyTransparentSkin,The following statement contains a magic number: transparentSkin.window.padding = new RectOffset(5' 5' 5' 5);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyTransparentSkin,The following statement contains a magic number: transparentSkin.window.padding = new RectOffset(5' 5' 5' 5);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,CopyTransparentSkin,The following statement contains a magic number: transparentSkin.window.padding = new RectOffset(5' 5' 5' 5);
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,TimeToDHMS,The following statement contains a magic number: long[] intervals = { KSPUtil.dateTimeFormatter.Year' KSPUtil.dateTimeFormatter.Day' 3600' 60' 1 };
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,TimeToDHMS,The following statement contains a magic number: long[] intervals = { KSPUtil.dateTimeFormatter.Year' KSPUtil.dateTimeFormatter.Day' 3600' 60' 1 };
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,TimeToDHMS,The following statement contains a magic number: bool first = ret.Length < 2;
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,TimeToDHMS,The following statement contains a magic number: showSecondsDecimals && seconds < 60 && i == units.Length - 1
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,TryParseDHMS,The following statement contains a magic number: int[] intervals = { KSPUtil.dateTimeFormatter.Year' KSPUtil.dateTimeFormatter.Day' 3600' 60' 1 };
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,TryParseDHMS,The following statement contains a magic number: int[] intervals = { KSPUtil.dateTimeFormatter.Year' KSPUtil.dateTimeFormatter.Day' 3600' 60' 1 };
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,ArcDistance,The following statement contains a magic number: double ang = Math.Acos(((a * a + b * b) - c * c) / (double)(2f * a * b));
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,GetMouseCoordinates,The following statement contains a magic number: error < (body.pqsController.radiusMax - body.pqsController.radiusMin) / 100
Magic Number,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,GetMouseCoordinates,The following statement contains a magic number: loops < 50
Magic Number,MuMech,Coordinates,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,AngleToDMS,The following statement contains a magic number: int minutes = (int)Math.Floor(60 * (Math.Abs(angle) - degrees));
Magic Number,MuMech,Coordinates,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,AngleToDMS,The following statement contains a magic number: int seconds = (int)Math.Floor(3600 * (Math.Abs(angle) - degrees - minutes / 60.0));
Magic Number,MuMech,Coordinates,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,AngleToDMS,The following statement contains a magic number: int seconds = (int)Math.Floor(3600 * (Math.Abs(angle) - degrees - minutes / 60.0));
Magic Number,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,Init,The following statement contains a magic number: displayPicker.SetPixel(i' j' MuUtils.HSVtoRGB((360f / textureWidth) * i' (1.0f / j) * textureHeight' 1.0f' 1f));
Magic Number,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,Init,The following statement contains a magic number: saturationTexture = new Texture2D(20' textureHeight);
Magic Number,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: GUI.Box(new Rect(positionLeft - 3' positionTop - 3' textureWidth + 90' textureHeight + 30)' "");
Magic Number,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: GUI.Box(new Rect(positionLeft - 3' positionTop - 3' textureWidth + 90' textureHeight + 30)' "");
Magic Number,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: GUI.Box(new Rect(positionLeft - 3' positionTop - 3' textureWidth + 90' textureHeight + 30)' "");
Magic Number,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: GUI.Box(new Rect(positionLeft - 3' positionTop - 3' textureWidth + 90' textureHeight + 30)' "");
Magic Number,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: saturationSlider = GUI.VerticalSlider(new Rect(positionLeft + textureWidth + 3' positionTop' 10' textureHeight)' saturationSlider' 1' 0);
Magic Number,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: saturationSlider = GUI.VerticalSlider(new Rect(positionLeft + textureWidth + 3' positionTop' 10' textureHeight)' saturationSlider' 1' 0);
Magic Number,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: GUI.Box(new Rect(positionLeft + textureWidth + 20' positionTop' 20' textureHeight)' saturationTexture);
Magic Number,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: GUI.Box(new Rect(positionLeft + textureWidth + 20' positionTop' 20' textureHeight)' saturationTexture);
Magic Number,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: alphaSlider = GUI.VerticalSlider(new Rect(positionLeft + textureWidth + 3 + 10 + 20 + 10' positionTop' 10' textureHeight)' alphaSlider' 1' 0);
Magic Number,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: alphaSlider = GUI.VerticalSlider(new Rect(positionLeft + textureWidth + 3 + 10 + 20 + 10' positionTop' 10' textureHeight)' alphaSlider' 1' 0);
Magic Number,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: alphaSlider = GUI.VerticalSlider(new Rect(positionLeft + textureWidth + 3 + 10 + 20 + 10' positionTop' 10' textureHeight)' alphaSlider' 1' 0);
Magic Number,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: alphaSlider = GUI.VerticalSlider(new Rect(positionLeft + textureWidth + 3 + 10 + 20 + 10' positionTop' 10' textureHeight)' alphaSlider' 1' 0);
Magic Number,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: alphaSlider = GUI.VerticalSlider(new Rect(positionLeft + textureWidth + 3 + 10 + 20 + 10' positionTop' 10' textureHeight)' alphaSlider' 1' 0);
Magic Number,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: GUI.Box(new Rect(positionLeft + textureWidth + 20 + 10 + 20 + 10' positionTop' 20' textureHeight)' saturationTexture);
Magic Number,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: GUI.Box(new Rect(positionLeft + textureWidth + 20 + 10 + 20 + 10' positionTop' 20' textureHeight)' saturationTexture);
Magic Number,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: GUI.Box(new Rect(positionLeft + textureWidth + 20 + 10 + 20 + 10' positionTop' 20' textureHeight)' saturationTexture);
Magic Number,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: GUI.Box(new Rect(positionLeft + textureWidth + 20 + 10 + 20 + 10' positionTop' 20' textureHeight)' saturationTexture);
Magic Number,MuMech,ColorPickerHSV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: GUI.Box(new Rect(positionLeft + textureWidth + 20 + 10 + 20 + 10' positionTop' 20' textureHeight)' saturationTexture);
Magic Number,MuMech,ColorPickerRGB,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: GUI.Box(new Rect(positionLeft - 3' positionTop - 3' textureWidth + 3' textureHeight + 125)' "");
Magic Number,MuMech,ColorPickerRGB,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: GUI.Box(new Rect(positionLeft - 3' positionTop - 3' textureWidth + 3' textureHeight + 125)' "");
Magic Number,MuMech,ColorPickerRGB,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: GUI.Box(new Rect(positionLeft - 3' positionTop - 3' textureWidth + 3' textureHeight + 125)' "");
Magic Number,MuMech,ColorPickerRGB,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: GUI.Box(new Rect(positionLeft - 3' positionTop - 3' textureWidth + 3' textureHeight + 125)' "");
Magic Number,MuMech,ColorPickerRGB,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: float pos = positionTop + 5;
Magic Number,MuMech,ColorPickerRGB,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: c.r = GUI.HorizontalSlider(new Rect(positionLeft' pos + textureHeight + 5' textureWidth' 10)' c.r' 0' 1);
Magic Number,MuMech,ColorPickerRGB,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: c.r = GUI.HorizontalSlider(new Rect(positionLeft' pos + textureHeight + 5' textureWidth' 10)' c.r' 0' 1);
Magic Number,MuMech,ColorPickerRGB,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: pos += textureHeight + 20;
Magic Number,MuMech,ColorPickerRGB,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: c.g = GUI.HorizontalSlider(new Rect(positionLeft' pos + textureHeight + 5' textureWidth' 10)' c.g' 0' 1);
Magic Number,MuMech,ColorPickerRGB,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: c.g = GUI.HorizontalSlider(new Rect(positionLeft' pos + textureHeight + 5' textureWidth' 10)' c.g' 0' 1);
Magic Number,MuMech,ColorPickerRGB,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: pos += textureHeight + 20;
Magic Number,MuMech,ColorPickerRGB,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: c.b = GUI.HorizontalSlider(new Rect(positionLeft' pos + textureHeight + 5' textureWidth' 10)' c.b' 0' 1);
Magic Number,MuMech,ColorPickerRGB,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: c.b = GUI.HorizontalSlider(new Rect(positionLeft' pos + textureHeight + 5' textureWidth' 10)' c.b' 0' 1);
Magic Number,MuMech,ColorPickerRGB,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: pos += textureHeight + 20;
Magic Number,MuMech,ColorPickerRGB,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: c.a = GUI.HorizontalSlider(new Rect(positionLeft' pos + textureHeight + 5' textureWidth' 10)' c.a' 0' 1);
Magic Number,MuMech,ColorPickerRGB,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,DrawGUI,The following statement contains a magic number: c.a = GUI.HorizontalSlider(new Rect(positionLeft' pos + textureHeight + 5' textureWidth' 10)' c.a' 0' 1);
Magic Number,MuMech,InstallChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\InstallChecker.cs,Start,The following statement contains a magic number: PopupDialog.SpawnPopupDialog(                      new MultiOptionDialog("InstallCheckerA"'                          null' Localizer.Format("#MechJeb_InstallCheckA_title")'//"Incorrect MechJeb2 Installation"                          HighLogic.UISkin'                          new Rect(0.5f' 0.5f' 100f' 100f)'                          new DialogGUIContentSizer(ContentSizeFitter.FitMode.PreferredSize' ContentSizeFitter.FitMode.MinSize)'                          new DialogGUILabel(Localizer.Format("#MechJeb_InstallCheckA_msg") +String.Join("\n"' badPaths.ToArray()))'//"MechJeb2 has been installed incorrectly and will not function properly.\nAll MechJeb2 files should be located in KSP like this \n<KSP>\n\tGameData\n\t\tMechJeb2\n\t\t\tParts\n\t\t\tPlugins\n\nDo not move any files from inside the MechJeb2 folder.\n\nIncorrect path(s):\n"                          new DialogGUIButton("OK"' () => { }' true)                      )' false' HighLogic.UISkin);
Magic Number,MuMech,InstallChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\InstallChecker.cs,Start,The following statement contains a magic number: PopupDialog.SpawnPopupDialog(                      new MultiOptionDialog("InstallCheckerA"'                          null' Localizer.Format("#MechJeb_InstallCheckA_title")'//"Incorrect MechJeb2 Installation"                          HighLogic.UISkin'                          new Rect(0.5f' 0.5f' 100f' 100f)'                          new DialogGUIContentSizer(ContentSizeFitter.FitMode.PreferredSize' ContentSizeFitter.FitMode.MinSize)'                          new DialogGUILabel(Localizer.Format("#MechJeb_InstallCheckA_msg") +String.Join("\n"' badPaths.ToArray()))'//"MechJeb2 has been installed incorrectly and will not function properly.\nAll MechJeb2 files should be located in KSP like this \n<KSP>\n\tGameData\n\t\tMechJeb2\n\t\t\tParts\n\t\t\tPlugins\n\nDo not move any files from inside the MechJeb2 folder.\n\nIncorrect path(s):\n"                          new DialogGUIButton("OK"' () => { }' true)                      )' false' HighLogic.UISkin);
Magic Number,MuMech,InstallChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\InstallChecker.cs,Start,The following statement contains a magic number: PopupDialog.SpawnPopupDialog(                      new MultiOptionDialog("InstallCheckerA"'                          null' Localizer.Format("#MechJeb_InstallCheckA_title")'//"Incorrect MechJeb2 Installation"                          HighLogic.UISkin'                          new Rect(0.5f' 0.5f' 100f' 100f)'                          new DialogGUIContentSizer(ContentSizeFitter.FitMode.PreferredSize' ContentSizeFitter.FitMode.MinSize)'                          new DialogGUILabel(Localizer.Format("#MechJeb_InstallCheckA_msg") +String.Join("\n"' badPaths.ToArray()))'//"MechJeb2 has been installed incorrectly and will not function properly.\nAll MechJeb2 files should be located in KSP like this \n<KSP>\n\tGameData\n\t\tMechJeb2\n\t\t\tParts\n\t\t\tPlugins\n\nDo not move any files from inside the MechJeb2 folder.\n\nIncorrect path(s):\n"                          new DialogGUIButton("OK"' () => { }' true)                      )' false' HighLogic.UISkin);
Magic Number,MuMech,InstallChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\InstallChecker.cs,Start,The following statement contains a magic number: PopupDialog.SpawnPopupDialog(                      new MultiOptionDialog("InstallCheckerA"'                          null' Localizer.Format("#MechJeb_InstallCheckA_title")'//"Incorrect MechJeb2 Installation"                          HighLogic.UISkin'                          new Rect(0.5f' 0.5f' 100f' 100f)'                          new DialogGUIContentSizer(ContentSizeFitter.FitMode.PreferredSize' ContentSizeFitter.FitMode.MinSize)'                          new DialogGUILabel(Localizer.Format("#MechJeb_InstallCheckA_msg") +String.Join("\n"' badPaths.ToArray()))'//"MechJeb2 has been installed incorrectly and will not function properly.\nAll MechJeb2 files should be located in KSP like this \n<KSP>\n\tGameData\n\t\tMechJeb2\n\t\t\tParts\n\t\t\tPlugins\n\nDo not move any files from inside the MechJeb2 folder.\n\nIncorrect path(s):\n"                          new DialogGUIButton("OK"' () => { }' true)                      )' false' HighLogic.UISkin);
Magic Number,MuMech,InstallChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\InstallChecker.cs,Start,The following statement contains a magic number: PopupDialog.SpawnPopupDialog(new Vector2(0.5f' 0.5f)' new Vector2(0.5f' 0.5f)' "InstallCheckerB"' Localizer.Format("#MechJeb_InstallCheckB_title")' Localizer.Format("#MechJeb_InstallCheckB_msg") + String.Join("\n"' badPaths.ToArray())' "OK"' false' HighLogic.UISkin);
Magic Number,MuMech,InstallChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\InstallChecker.cs,Start,The following statement contains a magic number: PopupDialog.SpawnPopupDialog(new Vector2(0.5f' 0.5f)' new Vector2(0.5f' 0.5f)' "InstallCheckerB"' Localizer.Format("#MechJeb_InstallCheckB_title")' Localizer.Format("#MechJeb_InstallCheckB_msg") + String.Join("\n"' badPaths.ToArray())' "OK"' false' HighLogic.UISkin);
Magic Number,MuMech,InstallChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\InstallChecker.cs,Start,The following statement contains a magic number: PopupDialog.SpawnPopupDialog(new Vector2(0.5f' 0.5f)' new Vector2(0.5f' 0.5f)' "InstallCheckerB"' Localizer.Format("#MechJeb_InstallCheckB_title")' Localizer.Format("#MechJeb_InstallCheckB_msg") + String.Join("\n"' badPaths.ToArray())' "OK"' false' HighLogic.UISkin);
Magic Number,MuMech,InstallChecker,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\InstallChecker.cs,Start,The following statement contains a magic number: PopupDialog.SpawnPopupDialog(new Vector2(0.5f' 0.5f)' new Vector2(0.5f' 0.5f)' "InstallCheckerB"' Localizer.Format("#MechJeb_InstallCheckB_title")' Localizer.Format("#MechJeb_InstallCheckB_msg") + String.Join("\n"' badPaths.ToArray())' "OK"' false' HighLogic.UISkin);
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double sinDeltaTA = tm * Math.Sqrt(1 - Math.Pow(cosDeltaTA' 2));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: deltaTA = deltaTA + 2 * Math.PI;
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double c = Math.Sqrt(Math.Pow(R1mag' 2) + Math.Pow(R2mag' 2) - 2 * R1mag * R2mag * cosDeltaTA);
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double c = Math.Sqrt(Math.Pow(R1mag' 2) + Math.Pow(R2mag' 2) - 2 * R1mag * R2mag * cosDeltaTA);
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double c = Math.Sqrt(Math.Pow(R1mag' 2) + Math.Pow(R2mag' 2) - 2 * R1mag * R2mag * cosDeltaTA);
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double s = (R1mag + R2mag + c) / 2;
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double TanSqr2w = (Math.Pow(epsilon' 2) / 4) / (Math.Sqrt(intemed1) + intemed1 * (2 + Math.Sqrt(intemed1)));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double TanSqr2w = (Math.Pow(epsilon' 2) / 4) / (Math.Sqrt(intemed1) + intemed1 * (2 + Math.Sqrt(intemed1)));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double TanSqr2w = (Math.Pow(epsilon' 2) / 4) / (Math.Sqrt(intemed1) + intemed1 * (2 + Math.Sqrt(intemed1)));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double sinSqrDeltaTAOver4 = Math.Pow(Math.Sin(deltaTA / 4)' 2);
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double sinSqrDeltaTAOver4 = Math.Pow(Math.Sin(deltaTA / 4)' 2);
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double cosSqrDeltaTAOver4 = Math.Pow(Math.Cos(deltaTA / 4)' 2);
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double cosSqrDeltaTAOver4 = Math.Pow(Math.Cos(deltaTA / 4)' 2);
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: l = (sinSqrDeltaTAOver4 + TanSqr2w) / (sinSqrDeltaTAOver4 + TanSqr2w + Math.Cos(deltaTA / 2));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double m = (muCB * Math.Pow(dt' 2)) / (8 * Math.Pow(rop' 3));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double m = (muCB * Math.Pow(dt' 2)) / (8 * Math.Pow(rop' 3));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double m = (muCB * Math.Pow(dt' 2)) / (8 * Math.Pow(rop' 3));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double ksi = ComputeKsi(x' 8);
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double h1 = (Math.Pow((l + x)' 2) * (1 + 3 * x + ksi)) / ((1 + 2 * x + l) * (4 * x + ksi * (3 + x)));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double h1 = (Math.Pow((l + x)' 2) * (1 + 3 * x + ksi)) / ((1 + 2 * x + l) * (4 * x + ksi * (3 + x)));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double h1 = (Math.Pow((l + x)' 2) * (1 + 3 * x + ksi)) / ((1 + 2 * x + l) * (4 * x + ksi * (3 + x)));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double h1 = (Math.Pow((l + x)' 2) * (1 + 3 * x + ksi)) / ((1 + 2 * x + l) * (4 * x + ksi * (3 + x)));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double h1 = (Math.Pow((l + x)' 2) * (1 + 3 * x + ksi)) / ((1 + 2 * x + l) * (4 * x + ksi * (3 + x)));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double h2 = (m * (x - l + ksi)) / ((1 + 2 * x + l) * (4 * x + ksi * (3 + x)));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double h2 = (m * (x - l + ksi)) / ((1 + 2 * x + l) * (4 * x + ksi * (3 + x)));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double h2 = (m * (x - l + ksi)) / ((1 + 2 * x + l) * (4 * x + ksi * (3 + x)));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: y = NewtonSolver.Solve(yEqnPoly' 10' 1.0e-12' 50);
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: y = NewtonSolver.Solve(yEqnPoly' 10' 1.0e-12' 50);
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: y = NewtonSolver.Solve(yEqnPoly' 10' 1.0e-12' 50);
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double x_new = Math.Sqrt(Math.Pow((1 - l) / 2' 2) + m / Math.Pow(y' 2)) - (1 + l) / 2;
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double x_new = Math.Sqrt(Math.Pow((1 - l) / 2' 2) + m / Math.Pow(y' 2)) - (1 + l) / 2;
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double x_new = Math.Sqrt(Math.Pow((1 - l) / 2' 2) + m / Math.Pow(y' 2)) - (1 + l) / 2;
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double x_new = Math.Sqrt(Math.Pow((1 - l) / 2' 2) + m / Math.Pow(y' 2)) - (1 + l) / 2;
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double a = (muCB * Math.Pow(dt' 2)) / (16 * Math.Pow(rop' 2) * x * Math.Pow(y' 2));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double a = (muCB * Math.Pow(dt' 2)) / (16 * Math.Pow(rop' 2) * x * Math.Pow(y' 2));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double a = (muCB * Math.Pow(dt' 2)) / (16 * Math.Pow(rop' 2) * x * Math.Pow(y' 2));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double a = (muCB * Math.Pow(dt' 2)) / (16 * Math.Pow(rop' 2) * x * Math.Pow(y' 2));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: const double small = 1e-5;
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double sinBetaEOver2 = Math.Sqrt((s - c) / (2 * a));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double betaE = 2 * Math.Asin(sinBetaEOver2);
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double amin = s / 2;
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double tmin = Math.Sqrt(Math.Pow(amin' 3) / muCB) * (Math.PI - betaE + Math.Sin(betaE));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double alphaE = 2 * Math.Asin(Math.Sqrt(s / (2 * a)));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: double alphaE = 2 * Math.Asin(Math.Sqrt(s / (2 * a)));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: alphaE = 2 * Math.PI - alphaE;
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,Solve,The following statement contains a magic number: g = dt - Math.Sqrt(Math.Pow(a' 3) / muCB) * (deltaE - Math.Sin(deltaE));
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,ComputeKsi,The following statement contains a magic number: double eta = x / Math.Pow((Math.Sqrt(1 + x) + 1)' 2);
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,ComputeKsi,The following statement contains a magic number: double num = 8 * (Math.Sqrt(1 + x) + 1);
Magic Number,MuMech,LambertSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LambertSolver.cs,ComputeKsi,The following statement contains a magic number: denom = 3 + 1 / (eta + ComputeKsi(eta' numLevels - 1));
Magic Number,MuMech,OperationAdvancedTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationAdvancedTransfer.cs,ComputeTimes,The following statement contains a magic number: minTransferTime = 3600;
Magic Number,MuMech,OperationAdvancedTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationAdvancedTransfer.cs,ComputeTimes,The following statement contains a magic number: maxDepartureTime = minDepartureTime + synodic_period * 1.5;
Magic Number,MuMech,OperationAdvancedTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationAdvancedTransfer.cs,ComputeTimes,The following statement contains a magic number: maxTransferTime = hohmann_transfer_time * 1.5;
Magic Number,MuMech,OperationAdvancedTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationAdvancedTransfer.cs,ComputeTimes,The following statement contains a magic number: maxArrivalTime.val = (synodic_period + hohmann_transfer_time) * 1.5;
Magic Number,MuMech,OperationAdvancedTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationAdvancedTransfer.cs,DoPorkchopGui,The following statement contains a magic number: plot = new PlotArea(                          worker.minDepartureTime'                          worker.maxDepartureTime'                          worker.minTransferTime'                          worker.maxTransferTime'                          texture'                          (xmin' xmax' ymin' ymax) => {                              minDepartureTime = Math.Max(xmin' universalTime);                              maxDepartureTime = xmax;                              minTransferTime = Math.Max(ymin' 3600);                              maxTransferTime = ymax;                              GUI.changed = true;                          });
Magic Number,MuMech,OperationCourseCorrection,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationCourseCorrection.cs,MakeNodeImpl,The following statement contains a magic number: o.NextClosestApproachTime(target.TargetOrbit' UT) < UT + 1 ||                      o.NextClosestApproachDistance(target.TargetOrbit' UT) > target.TargetOrbit.semiMajorAxis * 0.2
Magic Number,MuMech,OperationInterplanetaryTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationInterplanetaryTransfer.cs,MakeNodeImpl,The following statement contains a magic number: o.referenceBody.orbit.RelativeInclination(target.TargetOrbit) > 30
Magic Number,MuMech,OperationLan,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationLan.cs,MakeNodeImpl,The following statement contains a magic number: o.inclination < 10
Magic Number,MuMech,OperationMoonReturn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationMoonReturn.cs,MakeNodeImpl,The following statement contains a magic number: o.eccentricity > 0.2
Magic Number,MuMech,OperationResonantOrbit,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationResonantOrbit.cs,DoParametersGUI,The following statement contains a magic number: resonanceNumerator.text = GUILayout.TextField(resonanceNumerator.text' GUILayout.Width(30));
Magic Number,MuMech,OperationResonantOrbit,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationResonantOrbit.cs,DoParametersGUI,The following statement contains a magic number: resonanceDenominator.text = GUILayout.TextField(resonanceDenominator.text' GUILayout.Width(30));
Magic Number,MuMech,OperationSemiMajor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationSemiMajor.cs,MakeNodeImpl,The following statement contains a magic number: 2*newSMA > o.Radius(UT) + o.referenceBody.sphereOfInfluence
Magic Number,MuMech,OperationSemiMajor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationSemiMajor.cs,MakeNodeImpl,The following statement contains a magic number: throw new OperationException(Localizer.Format("#MechJeb_Sa_Exception"'o.referenceBody.displayName) +  "(" + MuUtils.ToSI(o.referenceBody.Radius' 3) + "m)");
Magic Number,MuMech,OperationSemiMajor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationSemiMajor.cs,MakeNodeImpl,The following statement contains a magic number: o.Radius(UT) > 2*newSMA
Magic Number,MuMech,PlotArea,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\PlotArea.cs,PlotArea,The following statement contains a magic number: background.SetPixel(0'0' new Color(0' 0' 1' 0.3f));
Magic Number,MuMech,PlotArea,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\PlotArea.cs,DoGUI,The following statement contains a magic number: rect.y += 2;
Magic Number,MuMech,PlotArea,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\PlotArea.cs,DoGUI,The following statement contains a magic number: switch (Event.current.type)  				{  				case EventType.MouseDown:  					if (Event.current.button == 0)  					{  						mouseDown = true;  						selectedPoint = hoveredPoint;  					}  					break;  				case EventType.MouseUp:  					if (Event.current.button == 0 && mouseDown)  					{  						mouseDown = false;  						if (Math.Abs(selectedPoint[0] - hoveredPoint[0]) > 5 &&  							Math.Abs(selectedPoint[1] - hoveredPoint[1]) > 5)  						{  							callback(  								x(Math.Min(selectedPoint[0]' hoveredPoint[0]))'  								x(Math.Max(selectedPoint[0]' hoveredPoint[0]))'  								y(Math.Min(selectedPoint[1]' hoveredPoint[1]))'  								y(Math.Max(selectedPoint[1]' hoveredPoint[1]))  							);  						}  					}  					break;  				case EventType.ScrollWheel:  					if (Event.current.delta.y == 0)  						break;  					double lambda = Event.current.delta.y < 0 ? 0.7 : 1/0.7;  					double deltax = maxx - minx;  					double deltay = maxy - miny;    					double newminx = x(hoveredPoint[0]) - hoveredPoint[0] * lambda * deltax / texture.width;  					double newminy = y(hoveredPoint[1]) - hoveredPoint[1] * lambda * deltay / texture.height;  					callback(  						newminx'  						newminx + lambda * deltax'  						newminy'  						newminy + lambda * deltay  					);  						  					break;  					case EventType.KeyUp:  						ProcessKeys();  						break;  				}
Magic Number,MuMech,PlotArea,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\PlotArea.cs,DoGUI,The following statement contains a magic number: switch (Event.current.type)  				{  				case EventType.MouseDown:  					if (Event.current.button == 0)  					{  						mouseDown = true;  						selectedPoint = hoveredPoint;  					}  					break;  				case EventType.MouseUp:  					if (Event.current.button == 0 && mouseDown)  					{  						mouseDown = false;  						if (Math.Abs(selectedPoint[0] - hoveredPoint[0]) > 5 &&  							Math.Abs(selectedPoint[1] - hoveredPoint[1]) > 5)  						{  							callback(  								x(Math.Min(selectedPoint[0]' hoveredPoint[0]))'  								x(Math.Max(selectedPoint[0]' hoveredPoint[0]))'  								y(Math.Min(selectedPoint[1]' hoveredPoint[1]))'  								y(Math.Max(selectedPoint[1]' hoveredPoint[1]))  							);  						}  					}  					break;  				case EventType.ScrollWheel:  					if (Event.current.delta.y == 0)  						break;  					double lambda = Event.current.delta.y < 0 ? 0.7 : 1/0.7;  					double deltax = maxx - minx;  					double deltay = maxy - miny;    					double newminx = x(hoveredPoint[0]) - hoveredPoint[0] * lambda * deltax / texture.width;  					double newminy = y(hoveredPoint[1]) - hoveredPoint[1] * lambda * deltay / texture.height;  					callback(  						newminx'  						newminx + lambda * deltax'  						newminy'  						newminy + lambda * deltay  					);  						  					break;  					case EventType.KeyUp:  						ProcessKeys();  						break;  				}
Magic Number,MuMech,PlotArea,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\PlotArea.cs,DoGUI,The following statement contains a magic number: switch (Event.current.type)  				{  				case EventType.MouseDown:  					if (Event.current.button == 0)  					{  						mouseDown = true;  						selectedPoint = hoveredPoint;  					}  					break;  				case EventType.MouseUp:  					if (Event.current.button == 0 && mouseDown)  					{  						mouseDown = false;  						if (Math.Abs(selectedPoint[0] - hoveredPoint[0]) > 5 &&  							Math.Abs(selectedPoint[1] - hoveredPoint[1]) > 5)  						{  							callback(  								x(Math.Min(selectedPoint[0]' hoveredPoint[0]))'  								x(Math.Max(selectedPoint[0]' hoveredPoint[0]))'  								y(Math.Min(selectedPoint[1]' hoveredPoint[1]))'  								y(Math.Max(selectedPoint[1]' hoveredPoint[1]))  							);  						}  					}  					break;  				case EventType.ScrollWheel:  					if (Event.current.delta.y == 0)  						break;  					double lambda = Event.current.delta.y < 0 ? 0.7 : 1/0.7;  					double deltax = maxx - minx;  					double deltay = maxy - miny;    					double newminx = x(hoveredPoint[0]) - hoveredPoint[0] * lambda * deltax / texture.width;  					double newminy = y(hoveredPoint[1]) - hoveredPoint[1] * lambda * deltay / texture.height;  					callback(  						newminx'  						newminx + lambda * deltax'  						newminy'  						newminy + lambda * deltay  					);  						  					break;  					case EventType.KeyUp:  						ProcessKeys();  						break;  				}
Magic Number,MuMech,PlotArea,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\PlotArea.cs,DoGUI,The following statement contains a magic number: switch (Event.current.type)  				{  				case EventType.MouseDown:  					if (Event.current.button == 0)  					{  						mouseDown = true;  						selectedPoint = hoveredPoint;  					}  					break;  				case EventType.MouseUp:  					if (Event.current.button == 0 && mouseDown)  					{  						mouseDown = false;  						if (Math.Abs(selectedPoint[0] - hoveredPoint[0]) > 5 &&  							Math.Abs(selectedPoint[1] - hoveredPoint[1]) > 5)  						{  							callback(  								x(Math.Min(selectedPoint[0]' hoveredPoint[0]))'  								x(Math.Max(selectedPoint[0]' hoveredPoint[0]))'  								y(Math.Min(selectedPoint[1]' hoveredPoint[1]))'  								y(Math.Max(selectedPoint[1]' hoveredPoint[1]))  							);  						}  					}  					break;  				case EventType.ScrollWheel:  					if (Event.current.delta.y == 0)  						break;  					double lambda = Event.current.delta.y < 0 ? 0.7 : 1/0.7;  					double deltax = maxx - minx;  					double deltay = maxy - miny;    					double newminx = x(hoveredPoint[0]) - hoveredPoint[0] * lambda * deltax / texture.width;  					double newminy = y(hoveredPoint[1]) - hoveredPoint[1] * lambda * deltay / texture.height;  					callback(  						newminx'  						newminx + lambda * deltax'  						newminy'  						newminy + lambda * deltay  					);  						  					break;  					case EventType.KeyUp:  						ProcessKeys();  						break;  				}
Magic Number,MuMech,PlotArea,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\PlotArea.cs,ProcessKeys,The following statement contains a magic number: double moveDx = dx * 0.25 * dirX;
Magic Number,MuMech,PlotArea,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\PlotArea.cs,ProcessKeys,The following statement contains a magic number: double moveDy = dy * 0.25 * dirY;
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: var colourKeys = new GradientColorKey[6];
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[0].color = new Color(0.25f' 0.25f' 1.0f);
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[0].color = new Color(0.25f' 0.25f' 1.0f);
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[1].color = new Color(0.5f' 0.5f' 1.0f);
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[1].color = new Color(0.5f' 0.5f' 1.0f);
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[1].time = 0.01f;
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[2].color = new Color(0.5f' 1.0f' 1.0f);
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[2].color = new Color(0.5f' 1.0f' 1.0f);
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[2].time = 0.25f;
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[2].time = 0.25f;
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[3].color = new Color(0.5f' 1.0f' 0.5f);
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[3].color = new Color(0.5f' 1.0f' 0.5f);
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[3].color = new Color(0.5f' 1.0f' 0.5f);
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[3].time = 0.5f;
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[3].time = 0.5f;
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[4].color = new Color(1.0f' 1.0f' 0.5f);
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[4].color = new Color(1.0f' 1.0f' 0.5f);
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[4].time = 0.75f;
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[4].time = 0.75f;
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[5].color = new Color(1.0f' 0.5f' 0.5f);
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[5].color = new Color(1.0f' 0.5f' 0.5f);
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[5].color = new Color(1.0f' 0.5f' 0.5f);
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: colourKeys[5].time = 1.0f;
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: var alphaKeys = new GradientAlphaKey[2];
Magic Number,MuMech,Porkchop,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\Porkchop.cs,RefreshTexture,The following statement contains a magic number: double logDVmaxsqr = Math.Min(Math.Log(DVmaxsqr)' logDVminsqr + 4);
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,IntersectConePlane,The following statement contains a magic number: M_i_tmp[i' 2] = (float)z[i];
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,IntersectConePlane,The following statement contains a magic number: i < 3
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,ComputeEjectionManeuver,The following statement contains a magic number: double isma = 2 / Mh - C3 / GM;
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,ComputeEjectionManeuver,The following statement contains a magic number: double slat = 2 * Rpe - isma * Rpe * Rpe;
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,ComputeEjectionManeuver,The following statement contains a magic number: double final_vel = Math.Sqrt(C3 + 2 * GM / pos.magnitude);
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,ComputeEjectionManeuver,The following statement contains a magic number: theta = Math.PI / 2;
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,ComputeEjectionManeuver,The following statement contains a magic number: double dtheta = 0.001;
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,ComputeEjectionManeuver,The following statement contains a magic number: Math.Abs(theta_err) <= 0.1 * UtilMath.Deg2Rad
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,ComputeEjectionManeuver,The following statement contains a magic number: double derr = MuUtils.ClampRadiansPi(theta_err_2 - theta_err_3) / (2 * dtheta);
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,ComputeEjectionManeuver,The following statement contains a magic number: theta = 2 * Math.PI - theta;
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,ComputeEjectionManeuver,The following statement contains a magic number: iteration < 50
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,DistanceToTarget,The following statement contains a magic number: double t = x[3];
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,DistanceToTarget,The following statement contains a magic number: Vector3d DV = new Vector3d(x[0]' x[1]' x[2]);
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,DistanceToTarget,The following statement contains a magic number: fi[2] = DV.z;
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,DistanceToTarget,The following statement contains a magic number: orbit.PeR < 100000
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,OptimizeEjection,The following statement contains a magic number: double[] x = new double[5];
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,OptimizeEjection,The following statement contains a magic number: double[] scale = new double[5];
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,OptimizeEjection,The following statement contains a magic number: x[2] = maneuver.dV.z;
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,OptimizeEjection,The following statement contains a magic number: x[3] = maneuver.UT + N * initial_orbit.period;
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,OptimizeEjection,The following statement contains a magic number: scale[0] = scale[1] = scale[2] = maneuver.dV.magnitude;
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,OptimizeEjection,The following statement contains a magic number: scale[3] = initial_orbit.period;
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,OptimizeEjection,The following statement contains a magic number: alglib.minlmcreatev(4' 3' x' 0.001' out state);
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,OptimizeEjection,The following statement contains a magic number: alglib.minlmcreatev(4' 3' x' 0.001' out state);
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,OptimizeEjection,The following statement contains a magic number: alglib.minlmcreatev(4' 3' x' 0.001' out state);
Magic Number,MuMech,TransferCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TransferCalculator.cs,OptimizeEjection,The following statement contains a magic number: N > 10
Magic Number,MuMech,MathExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MathExtensions.cs,Reorder,The following statement contains a magic number: switch (order)              {                  case 123:                      return new Vector3d(vector.x' vector.y' vector.z);                  case 132:                      return new Vector3d(vector.x' vector.z' vector.y);                  case 213:                      return new Vector3d(vector.y' vector.x' vector.z);                  case 231:                      return new Vector3d(vector.y' vector.z' vector.x);                  case 312:                      return new Vector3d(vector.z' vector.x' vector.y);                  case 321:                      return new Vector3d(vector.z' vector.y' vector.x);              }
Magic Number,MuMech,MathExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MathExtensions.cs,Reorder,The following statement contains a magic number: switch (order)              {                  case 123:                      return new Vector3d(vector.x' vector.y' vector.z);                  case 132:                      return new Vector3d(vector.x' vector.z' vector.y);                  case 213:                      return new Vector3d(vector.y' vector.x' vector.z);                  case 231:                      return new Vector3d(vector.y' vector.z' vector.x);                  case 312:                      return new Vector3d(vector.z' vector.x' vector.y);                  case 321:                      return new Vector3d(vector.z' vector.y' vector.x);              }
Magic Number,MuMech,MathExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MathExtensions.cs,Reorder,The following statement contains a magic number: switch (order)              {                  case 123:                      return new Vector3d(vector.x' vector.y' vector.z);                  case 132:                      return new Vector3d(vector.x' vector.z' vector.y);                  case 213:                      return new Vector3d(vector.y' vector.x' vector.z);                  case 231:                      return new Vector3d(vector.y' vector.z' vector.x);                  case 312:                      return new Vector3d(vector.z' vector.x' vector.y);                  case 321:                      return new Vector3d(vector.z' vector.y' vector.x);              }
Magic Number,MuMech,MathExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MathExtensions.cs,Reorder,The following statement contains a magic number: switch (order)              {                  case 123:                      return new Vector3d(vector.x' vector.y' vector.z);                  case 132:                      return new Vector3d(vector.x' vector.z' vector.y);                  case 213:                      return new Vector3d(vector.y' vector.x' vector.z);                  case 231:                      return new Vector3d(vector.y' vector.z' vector.x);                  case 312:                      return new Vector3d(vector.z' vector.x' vector.y);                  case 321:                      return new Vector3d(vector.z' vector.y' vector.x);              }
Magic Number,MuMech,MathExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MathExtensions.cs,Reorder,The following statement contains a magic number: switch (order)              {                  case 123:                      return new Vector3d(vector.x' vector.y' vector.z);                  case 132:                      return new Vector3d(vector.x' vector.z' vector.y);                  case 213:                      return new Vector3d(vector.y' vector.x' vector.z);                  case 231:                      return new Vector3d(vector.y' vector.z' vector.x);                  case 312:                      return new Vector3d(vector.z' vector.x' vector.y);                  case 321:                      return new Vector3d(vector.z' vector.y' vector.x);              }
Magic Number,MuMech,MathExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MathExtensions.cs,Reorder,The following statement contains a magic number: switch (order)              {                  case 123:                      return new Vector3d(vector.x' vector.y' vector.z);                  case 132:                      return new Vector3d(vector.x' vector.z' vector.y);                  case 213:                      return new Vector3d(vector.y' vector.x' vector.z);                  case 231:                      return new Vector3d(vector.y' vector.z' vector.x);                  case 312:                      return new Vector3d(vector.z' vector.x' vector.y);                  case 321:                      return new Vector3d(vector.z' vector.y' vector.x);              }
Magic Number,MuMech,MathExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MathExtensions.cs,DeltaEuler,The following statement contains a magic number: return new Vector3d(                  (delta.eulerAngles.x > 180) ? (delta.eulerAngles.x - 360.0F) : delta.eulerAngles.x'                  -((delta.eulerAngles.y > 180) ? (delta.eulerAngles.y - 360.0F) : delta.eulerAngles.y)'                  (delta.eulerAngles.z > 180) ? (delta.eulerAngles.z - 360.0F) : delta.eulerAngles.z                  );
Magic Number,MuMech,MathExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MathExtensions.cs,DeltaEuler,The following statement contains a magic number: return new Vector3d(                  (delta.eulerAngles.x > 180) ? (delta.eulerAngles.x - 360.0F) : delta.eulerAngles.x'                  -((delta.eulerAngles.y > 180) ? (delta.eulerAngles.y - 360.0F) : delta.eulerAngles.y)'                  (delta.eulerAngles.z > 180) ? (delta.eulerAngles.z - 360.0F) : delta.eulerAngles.z                  );
Magic Number,MuMech,MathExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MathExtensions.cs,DeltaEuler,The following statement contains a magic number: return new Vector3d(                  (delta.eulerAngles.x > 180) ? (delta.eulerAngles.x - 360.0F) : delta.eulerAngles.x'                  -((delta.eulerAngles.y > 180) ? (delta.eulerAngles.y - 360.0F) : delta.eulerAngles.y)'                  (delta.eulerAngles.z > 180) ? (delta.eulerAngles.z - 360.0F) : delta.eulerAngles.z                  );
Magic Number,MuMech,MathExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MathExtensions.cs,DeltaEuler,The following statement contains a magic number: return new Vector3d(                  (delta.eulerAngles.x > 180) ? (delta.eulerAngles.x - 360.0F) : delta.eulerAngles.x'                  -((delta.eulerAngles.y > 180) ? (delta.eulerAngles.y - 360.0F) : delta.eulerAngles.y)'                  (delta.eulerAngles.z > 180) ? (delta.eulerAngles.z - 360.0F) : delta.eulerAngles.z                  );
Magic Number,MuMech,MathExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MathExtensions.cs,DeltaEuler,The following statement contains a magic number: return new Vector3d(                  (delta.eulerAngles.x > 180) ? (delta.eulerAngles.x - 360.0F) : delta.eulerAngles.x'                  -((delta.eulerAngles.y > 180) ? (delta.eulerAngles.y - 360.0F) : delta.eulerAngles.y)'                  (delta.eulerAngles.z > 180) ? (delta.eulerAngles.z - 360.0F) : delta.eulerAngles.z                  );
Magic Number,MuMech,MathExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MathExtensions.cs,DeltaEuler,The following statement contains a magic number: return new Vector3d(                  (delta.eulerAngles.x > 180) ? (delta.eulerAngles.x - 360.0F) : delta.eulerAngles.x'                  -((delta.eulerAngles.y > 180) ? (delta.eulerAngles.y - 360.0F) : delta.eulerAngles.y)'                  (delta.eulerAngles.z > 180) ? (delta.eulerAngles.z - 360.0F) : delta.eulerAngles.z                  );
Magic Number,MuMech,MathExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MathExtensions.cs,NextGaussian,The following statement contains a magic number: var rand_std_normal = Math.Sqrt(-2.0 * Math.Log(u1)) *                  Math.Sin(2.0 * Math.PI * u2);
Magic Number,MuMech,MathExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MathExtensions.cs,NextGaussian,The following statement contains a magic number: var rand_std_normal = Math.Sqrt(-2.0 * Math.Log(u1)) *                  Math.Sin(2.0 * Math.PI * u2);
Magic Number,MuMech,MechJebAR202,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebAR202.cs,InitializeLights,The following statement contains a magic number: greenLight.range = 1.5F;
Magic Number,MuMech,MechJebAR202,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebAR202.cs,InitializeLights,The following statement contains a magic number: redLight.range = 1.5F;
Magic Number,MuMech,MechJebCore,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebCore.cs,Update,The following statement contains a magic number: Time.time > lastSettingsSaveTime + 5
Magic Number,MuMech,MechJebModuleAirplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneAutopilot.cs,fixVertSpeed,The following statement contains a magic number: double reference = 5;
Magic Number,MuMech,MechJebModuleAirplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneAutopilot.cs,fixVertSpeed,The following statement contains a magic number: reference = 2;
Magic Number,MuMech,MechJebModuleAirplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneAutopilot.cs,fixVertSpeed,The following statement contains a magic number: reference < 2
Magic Number,MuMech,MechJebModuleAirplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneAutopilot.cs,fixPIDfromSpeed,The following statement contains a magic number: return 0.5;
Magic Number,MuMech,MechJebModuleAirplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneAutopilot.cs,fixPIDfromSpeed,The following statement contains a magic number: speed > 600
Magic Number,MuMech,MechJebModuleAirplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneAutopilot.cs,UpdatePID,The following statement contains a magic number: VerPIDScale = (0.0015885994 * vessel.totalMass + 0.0031753299) * fixPIDfromSpeed (vesselState.speedSurface);
Magic Number,MuMech,MechJebModuleAirplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneAutopilot.cs,UpdatePID,The following statement contains a magic number: VerPIDScale = (0.0015885994 * vessel.totalMass + 0.0031753299) * fixPIDfromSpeed (vesselState.speedSurface);
Magic Number,MuMech,MechJebModuleAirplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneAutopilot.cs,Drive,The following statement contains a magic number: RealAccelerationTarget = (SpeedTarget - spd) / 4;
Magic Number,MuMech,MechJebModuleAirplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneAutopilot.cs,Drive,The following statement contains a magic number: RealRollTarget = MuUtils.Clamp (toturn * 2' -RollMax' RollMax);
Magic Number,MuMech,MechJebModuleAirplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneAutopilot.cs,Drive,The following statement contains a magic number: RollPIDController.intAccum = MuUtils.Clamp (RollPIDController.intAccum' -100 / AccKi' 100 / AccKi);
Magic Number,MuMech,MechJebModuleAirplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneAutopilot.cs,Drive,The following statement contains a magic number: RollPIDController.intAccum = MuUtils.Clamp (RollPIDController.intAccum' -100 / AccKi' 100 / AccKi);
Magic Number,MuMech,MechJebModuleAirplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneAutopilot.cs,Drive,The following statement contains a magic number: s.roll = Mathf.Clamp ((float)roll_act / 100' -1' 1);
Magic Number,MuMech,MechJebModuleAirplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneAutopilot.cs,Drive,The following statement contains a magic number: YawPIDController.intAccum = MuUtils.Clamp (YawPIDController.intAccum' -YawLimit * 100 / AccKi' YawLimit * 100 / AccKi);
Magic Number,MuMech,MechJebModuleAirplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneAutopilot.cs,Drive,The following statement contains a magic number: YawPIDController.intAccum = MuUtils.Clamp (YawPIDController.intAccum' -YawLimit * 100 / AccKi' YawLimit * 100 / AccKi);
Magic Number,MuMech,MechJebModuleAirplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneAutopilot.cs,Drive,The following statement contains a magic number: s.yaw = (float)MuUtils.Clamp (yaw_act / 100' -YawLimit' +YawLimit);
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: btGreen.fixedWidth = 35;
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: btWhite.fixedWidth = 35;
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: btAuto.padding = new RectOffset (8' 8' 8' 8);
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: btAuto.padding = new RectOffset (8' 8' 8' 8);
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: btAuto.padding = new RectOffset (8' 8' 8' 8);
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: btAuto.padding = new RectOffset (8' 8' 8' 8);
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: autopilot.AltitudeHoldEnabled = GUILayout.Toggle (autopilot.AltitudeHoldEnabled' Localizer.Format("#MechJeb_Aircraftauto_Label1")' GUILayout.Width (140));
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: AltitudeTargettmp.val -= (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1);
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Button("-"' GUILayout.Width(18))
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: AltitudeTargettmp.text = GUILayout.TextField (AltitudeTargettmp.text' GUILayout.ExpandWidth (true)' GUILayout.Width (60));
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: AltitudeTargettmp.val += (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1);
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Button("+"' GUILayout.Width(18))
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: autopilot.VertSpeedHoldEnabled = GUILayout.Toggle (autopilot.VertSpeedHoldEnabled' Localizer.Format("#MechJeb_Aircraftauto_Label2")' GUILayout.Width (140));
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: VertSpeedTargettmp.val -= (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1);
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Button("-"' GUILayout.Width(18))
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: VertSpeedTargettmp.text = GUILayout.TextField(VertSpeedTargettmp.text' GUILayout.ExpandWidth(true)'GUILayout.Width(60));
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: VertSpeedTargettmp.val += (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1);
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Button("+"' GUILayout.Width(18))
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: autopilot.HeadingHoldEnabled = GUILayout.Toggle (autopilot.HeadingHoldEnabled' Localizer.Format("#MechJeb_Aircraftauto_Label4")' GUILayout.Width (140));
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: HeadingTargettmp.val -= (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1);
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Button("-"' GUILayout.Width(18))
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: HeadingTargettmp.text = GUILayout.TextField (HeadingTargettmp.text' GUILayout.ExpandWidth (true)' GUILayout.Width (60));
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: HeadingTargettmp.val += (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1);
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Button("+"' GUILayout.Width(18))
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: autopilot.RollHoldEnabled = GUILayout.Toggle (autopilot.RollHoldEnabled' Localizer.Format("#MechJeb_Aircraftauto_Label5")' GUILayout.Width (140));
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: RollTargettmp.val -= (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1);
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Button("-"' GUILayout.Width(18))
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: RollTargettmp.text = GUILayout.TextField (RollTargettmp.text' GUILayout.ExpandWidth (true)' GUILayout.Width (60));
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: RollTargettmp.val += (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1);
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Button("+"' GUILayout.Width(18))
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: RollTargettmp = MuUtils.Clamp (RollTargettmp' -90' 90);
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: RollTargettmp = MuUtils.Clamp (RollTargettmp' -90' 90);
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: autopilot.SpeedHoldEnabled = GUILayout.Toggle (autopilot.SpeedHoldEnabled' Localizer.Format("#MechJeb_Aircraftauto_Label7")' GUILayout.Width (140));
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: SpeedTargettmp.val -= (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1);
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Button("-"' GUILayout.Width(18))
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: SpeedTargettmp.text = GUILayout.TextField (SpeedTargettmp.text' GUILayout.ExpandWidth (true)' GUILayout.Width (60));
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: SpeedTargettmp.val += (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1);
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Button("+"' GUILayout.Width(18))
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Button (Localizer.Format("#MechJeb_Aircraftauto_button3")' GUILayout.Width (40))
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width (300)' GUILayout.Height (200) };
Magic Number,MuMech,MechJebModuleAirplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAirplaneGuidance.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width (300)' GUILayout.Height (200) };
Magic Number,MuMech,MechJebModuleAscentAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,StartCountdown,The following statement contains a magic number: lastTMinus = 999;
Magic Number,MuMech,MechJebModuleAscentAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,OnFixedUpdate,The following statement contains a magic number: enabled && vesselState.thrustAvailable < 10E-4
Magic Number,MuMech,MechJebModuleAscentAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,OnFixedUpdate,The following statement contains a magic number: tMinus < 3*vesselState.deltaT || (tMinus > 10.0 && lastTMinus < 1.0)
Magic Number,MuMech,MechJebModuleAscentAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,OnFixedUpdate,The following statement contains a magic number: tMinus < 3*vesselState.deltaT || (tMinus > 10.0 && lastTMinus < 1.0)
Magic Number,MuMech,MechJebModuleAscentAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,DrivePrelaunch,The following statement contains a magic number: timedLaunch && tMinus > 10.0
Magic Number,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,ThrottleToRaiseApoapsis,The following statement contains a magic number: currentApR > finalApR + 5.0
Magic Number,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,srfvelPitch,The following statement contains a magic number: return 90.0 - Vector3d.Angle(vesselState.surfaceVelocity' vesselState.up);
Magic Number,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,attitudeTo,The following statement contains a magic number: autopilot.currentMaxAoA = Math.Min(fade * autopilot.maxAoA' 180d);
Magic Number,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,attitudeTo,The following statement contains a magic number: double lim = MuUtils.Clamp(autopilot.limitQa' 100' 10000);
Magic Number,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,attitudeTo,The following statement contains a magic number: double lim = MuUtils.Clamp(autopilot.limitQa' 100' 10000);
Magic Number,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,attitudeTo,The following statement contains a magic number: double pitch = 90 - Vector3d.Angle(desiredThrustVector' vesselState.up);
Magic Number,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,attitudeTo,The following statement contains a magic number: pitch > 89.9
Magic Number,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,attitudeTo,The following statement contains a magic number: core.attitude.AxisControl(!vessel.Landed' !vessel.Landed' !vessel.Landed && (vesselState.altitudeBottom > 50));
Magic Number,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,attitudeTo,The following statement contains a magic number: core.attitude.attitudeTo(hdg' pitch' autopilot.verticalRoll' this' !vessel.Landed' !vessel.Landed' !vessel.Landed && (vesselState.altitudeBottom > 50));
Magic Number,MuMech,MechJebModuleAscentBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,attitudeTo,The following statement contains a magic number: desiredPitch == 90.0
Magic Number,MuMech,LaunchTiming,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,TimeToPhaseAngle,The following statement contains a magic number: double launchpadAngularRate = 360 / launchBody.rotationPeriod;
Magic Number,MuMech,LaunchTiming,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,TimeToPhaseAngle,The following statement contains a magic number: double targetAngularRate = 360.0 / target.period;
Magic Number,MuMech,LaunchTiming,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,TimeToPhaseAngle,The following statement contains a magic number: Vector3d.Dot(-target.GetOrbitNormal().Reorder(132).normalized' launchBody.angularVelocity) < 0
Magic Number,MuMech,LaunchTiming,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,TimeToPhaseAngle,The following statement contains a magic number: currentPhaseAngle = 360 - currentPhaseAngle;
Magic Number,MuMech,LaunchTiming,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,TimeToPhaseAngle,The following statement contains a magic number: phaseAngleDifference = 360 - phaseAngleDifference;
Magic Number,MuMech,LaunchTiming,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,TimeToPlane,The following statement contains a magic number: double inc = Math.Abs(Vector3d.Angle(-target.GetOrbitNormal().Reorder(132).normalized' launchBody.angularVelocity));
Magic Number,MuMech,LaunchTiming,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,TimeToPlane,The following statement contains a magic number: Vector3d b = Vector3d.Exclude(launchBody.angularVelocity' -target.GetOrbitNormal().Reorder(132).normalized).normalized;
Magic Number,MuMech,LaunchTiming,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,TimeToPlane,The following statement contains a magic number: Vector3d c = Vector3d.Cross(-target.GetOrbitNormal().Reorder(132).normalized' launchBody.angularVelocity).normalized;
Magic Number,MuMech,LaunchTiming,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,TimeToPlane,The following statement contains a magic number: double cMagnitudeSquared = Math.Pow(launchBody.Radius * Math.Cos(UtilMath.Deg2Rad * launchLatitude)' 2) - b.sqrMagnitude;
Magic Number,MuMech,LaunchTiming,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,TimeToPlane,The following statement contains a magic number: angle1 = 360 - angle1;
Magic Number,MuMech,LaunchTiming,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,TimeToPlane,The following statement contains a magic number: angle2 = 360 - angle2;
Magic Number,MuMech,LaunchTiming,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,TimeToPlane,The following statement contains a magic number: return (angle / 360) * launchBody.rotationPeriod;
Magic Number,MuMech,MechJebModuleAscentClassic,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassic.cs,FlightPathAngle,The following statement contains a magic number: return 90.0;
Magic Number,MuMech,MechJebModuleAscentClassic,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassic.cs,FlightPathAngle,The following statement contains a magic number: return Mathf.Clamp((float)(90.0 - Math.Pow((altitude - actualTurnStart) / (turnEnd - actualTurnStart)' turnShapeExponent) * (90.0 - turnEndAngle))' 0.01F' 89.99F);
Magic Number,MuMech,MechJebModuleAscentClassic,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassic.cs,FlightPathAngle,The following statement contains a magic number: return Mathf.Clamp((float)(90.0 - Math.Pow((altitude - actualTurnStart) / (turnEnd - actualTurnStart)' turnShapeExponent) * (90.0 - turnEndAngle))' 0.01F' 89.99F);
Magic Number,MuMech,MechJebModuleAscentClassic,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassic.cs,FlightPathAngle,The following statement contains a magic number: return Mathf.Clamp((float)(90.0 - Math.Pow((altitude - actualTurnStart) / (turnEnd - actualTurnStart)' turnShapeExponent) * (90.0 - turnEndAngle))' 0.01F' 89.99F);
Magic Number,MuMech,MechJebModuleAscentClassic,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassic.cs,FlightPathAngle,The following statement contains a magic number: return Mathf.Clamp((float)(90.0 - Math.Pow((altitude - actualTurnStart) / (turnEnd - actualTurnStart)' turnShapeExponent) * (90.0 - turnEndAngle))' 0.01F' 89.99F);
Magic Number,MuMech,MechJebModuleAscentClassic,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassic.cs,DriveVerticalAscent,The following statement contains a magic number: attitudeTo(90);
Magic Number,MuMech,MechJebModuleAscentClassic,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassic.cs,DriveVerticalAscent,The following statement contains a magic number: core.attitude.AxisControl(!vessel.Landed' !vessel.Landed' !vessel.Landed && vesselState.altitudeBottom > 50);
Magic Number,MuMech,MechJebModuleAscentClassic,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassic.cs,DriveGravityTurn,The following statement contains a magic number: double velocityError = 2 * Math.Sin( UtilMath.Deg2Rad * ( desiredFlightPathAngle - actualFlightPathAngle ) / 2 );
Magic Number,MuMech,MechJebModuleAscentClassic,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassic.cs,DriveGravityTurn,The following statement contains a magic number: double velocityError = 2 * Math.Sin( UtilMath.Deg2Rad * ( desiredFlightPathAngle - actualFlightPathAngle ) / 2 );
Magic Number,MuMech,MechJebModuleAscentClassic,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassic.cs,DriveGravityTurn,The following statement contains a magic number: double difficulty = vesselState.surfaceVelocity.magnitude * 0.02 / vesselState.ThrustAccel(core.thrust.targetThrottle);
Magic Number,MuMech,MechJebModuleAscentClassic,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassic.cs,DriveGravityTurn,The following statement contains a magic number: difficulty = MuUtils.Clamp(difficulty' 0.1' 1.0);
Magic Number,MuMech,MechJebModuleAscentClassic,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassic.cs,DriveGravityTurn,The following statement contains a magic number: double steerAngle = MuUtils.Clamp(Math.Asin(steerOffset) * UtilMath.Rad2Deg' -30' 30);
Magic Number,MuMech,MechJebModuleAscentClassic,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassic.cs,DriveGravityTurn,The following statement contains a magic number: double steerAngle = MuUtils.Clamp(Math.Asin(steerOffset) * UtilMath.Rad2Deg' -30' 30);
Magic Number,MuMech,MechJebModuleAscentClassic,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassic.cs,DriveGravityTurn,The following statement contains a magic number: desiredFlightPathAngle = MuUtils.Clamp(desiredFlightPathAngle + steerAngle' -90' 90);
Magic Number,MuMech,MechJebModuleAscentClassic,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassic.cs,DriveGravityTurn,The following statement contains a magic number: desiredFlightPathAngle = MuUtils.Clamp(desiredFlightPathAngle + steerAngle' -90' 90);
Magic Number,MuMech,MechJebModuleAscentClassic,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassic.cs,DriveCoastToApoapsis,The following statement contains a magic number: orbit.ApA < autopilot.desiredOrbitAltitude - 1000.0
Magic Number,MuMech,MechJebModuleAscentClassic,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassic.cs,DriveCoastToApoapsis,The following statement contains a magic number: core.warp.WarpPhysicsAtRate(2);
Magic Number,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(300)' GUILayout.Height(100) };
Magic Number,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(300)' GUILayout.Height(100) };
Magic Number,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowGUI,The following statement contains a magic number: GUILayout.Label(Localizer.Format("#MechJeb_AscentPathEd_label1")' GUILayout.Width(60));
Magic Number,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowGUI,The following statement contains a magic number: path.autoTurnPerc = Mathf.Floor(GUILayout.HorizontalSlider(path.autoTurnPerc * 200f' 1f' 210.5f)) / 200f;
Magic Number,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowGUI,The following statement contains a magic number: path.autoTurnPerc = Mathf.Floor(GUILayout.HorizontalSlider(path.autoTurnPerc * 200f' 1f' 210.5f)) / 200f;
Magic Number,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowGUI,The following statement contains a magic number: path.autoTurnPerc = Mathf.Floor(GUILayout.HorizontalSlider(path.autoTurnPerc * 200f' 1f' 210.5f)) / 200f;
Magic Number,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowGUI,The following statement contains a magic number: GUILayout.Label(Localizer.Format("#MechJeb_AscentPathEd_label2")' GUILayout.Width(60));
Magic Number,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowGUI,The following statement contains a magic number: path.autoTurnSpdFactor = Mathf.Floor(GUILayout.HorizontalSlider(path.autoTurnSpdFactor * 2f' 8f' 160f)) / 2f;
Magic Number,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowGUI,The following statement contains a magic number: path.autoTurnSpdFactor = Mathf.Floor(GUILayout.HorizontalSlider(path.autoTurnSpdFactor * 2f' 8f' 160f)) / 2f;
Magic Number,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowGUI,The following statement contains a magic number: path.autoTurnSpdFactor = Mathf.Floor(GUILayout.HorizontalSlider(path.autoTurnSpdFactor * 2f' 8f' 160f)) / 2f;
Magic Number,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowGUI,The following statement contains a magic number: path.autoTurnSpdFactor = Mathf.Floor(GUILayout.HorizontalSlider(path.autoTurnSpdFactor * 2f' 8f' 160f)) / 2f;
Magic Number,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowGUI,The following statement contains a magic number: GUILayout.Label(MuUtils.ToSI(path.autoTurnStartAltitude' -1' 2) + "m "' GUILayout.ExpandWidth(false));
Magic Number,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowGUI,The following statement contains a magic number: GUILayout.Label(MuUtils.ToSI(path.autoTurnStartVelocity' -1' 3) + "m/s"' GUILayout.ExpandWidth(false));
Magic Number,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowGUI,The following statement contains a magic number: GUILayout.Label(MuUtils.ToSI(path.autoTurnEndAltitude' -1' 2) + "m"' new GUIStyle(GUI.skin.label) { alignment = TextAnchor.MiddleRight }' GUILayout.ExpandWidth(true));
Magic Number,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowGUI,The following statement contains a magic number: const int sliderPrecision = 3;
Magic Number,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,WindowGUI,The following statement contains a magic number: path.turnShapeExponent = new EditableDoubleMult(Math.Round(sliderTurnShapeExponent' sliderPrecision)' 0.01);
Magic Number,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,DrawnPath,The following statement contains a magic number: float desiredAngle = (float)(alt < path.VerticalAscentEnd() ? 90 : path.FlightPathAngle(alt' 0));
Magic Number,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,DrawnPath,The following statement contains a magic number: Drawing.DrawLine(p1' p2' color' 2' true);
Magic Number,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,DrawnTrajectory,The following statement contains a magic number: recorder.history.Length <= 2 || recorder.historyIdx == 0
Magic Number,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,DrawnTrajectory,The following statement contains a magic number: Drawing.DrawLine(p1' p2' Color.white' 2' true);
Magic Number,MuMech,MechJebModuleAscentClassicMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassicMenu.cs,DrawnTrajectory,The following statement contains a magic number: r.Contains(p2) && (p1 - p2).sqrMagnitude >= 1.0 || t < 2
Magic Number,MuMech,MechJebModuleAscentGT,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGT.cs,DriveVerticalAscent,The following statement contains a magic number: attitudeTo(90);
Magic Number,MuMech,MechJebModuleAscentGT,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGT.cs,DriveVerticalAscent,The following statement contains a magic number: core.attitude.AxisControl(!vessel.Landed' !vessel.Landed' !vessel.Landed && vesselState.altitudeBottom > 50);
Magic Number,MuMech,MechJebModuleAscentGT,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGT.cs,DriveInitiateTurn,The following statement contains a magic number: (90 - turnStartPitch) >= srfvelPitch()
Magic Number,MuMech,MechJebModuleAscentGT,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGT.cs,DriveInitiateTurn,The following statement contains a magic number: attitudeTo(90 - turnStartPitch);
Magic Number,MuMech,MechJebModuleAscentGT,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGT.cs,DriveGravityTurn,The following statement contains a magic number: double pitchfade = MuUtils.Clamp(- 20 * vesselState.altitudeASL / intermediateAltitude + 19' 0.0' 1.0);
Magic Number,MuMech,MechJebModuleAscentGT,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGT.cs,DriveGravityTurn,The following statement contains a magic number: double pitchfade = MuUtils.Clamp(- 20 * vesselState.altitudeASL / intermediateAltitude + 19' 0.0' 1.0);
Magic Number,MuMech,MechJebModuleAscentGT,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGT.cs,DriveHoldAP,The following statement contains a magic number: orbit.ApA < 0.98 * intermediateAltitude
Magic Number,MuMech,MechJebModuleAscentGT,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGT.cs,DriveCoastToApoapsis,The following statement contains a magic number: orbit.ApA < autopilot.desiredOrbitAltitude - 1000.0
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: btNormal.padding = new RectOffset(8' 8' 8' 8);
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: btNormal.padding = new RectOffset(8' 8' 8' 8);
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: btNormal.padding = new RectOffset(8' 8' 8' 8);
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: btNormal.padding = new RectOffset(8' 8' 8' 8);
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: Math.Abs(desiredInclination) < Math.Abs(vesselState.latitude) - 2.001
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: desiredInclination.text = GUILayout.TextField(desiredInclination.text' GUILayout.ExpandWidth(true)' GUILayout.Width(100));
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: Math.Abs(desiredInclination) < Math.Abs(vesselState.latitude) - 2.001
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_Ascent_label22")' autopilot.verticalRoll' "º"' 30f);
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_Ascent_label23")' autopilot.turnRoll' "º"' 30f);
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: autopilot.maxAoA.text = GUILayout.TextField(autopilot.maxAoA.text' GUILayout.Width(30));
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Space(25);
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_Ascent_label24")' autopilot.aoALimitFadeoutPressure' "Pa"' 50' sl);
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: autopilot.correctiveSteeringGain.text = GUILayout.TextField(autopilot.correctiveSteeringGain.text' GUILayout.Width(40));
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Label(String.Format("vgo: {0:F1}"' core.guidance.vgo)' GUILayout.Width(100));
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Label(String.Format("heading: {0:F1}"' core.guidance.heading)' GUILayout.Width(100));
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Label(String.Format("tgo: {0:F3}"' core.guidance.tgo)' GUILayout.Width(100));
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Label(String.Format("pitch: {0:F1}"' core.guidance.pitch)' GUILayout.Width(100));
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Label(Localizer.Format("#MechJeb_Ascent_label27") + core.guidance.successful_converges' GUILayout.Width(100));
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Label(Localizer.Format("#MechJeb_Ascent_label28") + core.guidance.last_lm_status' GUILayout.Width(100));
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Label("n: " + core.guidance.last_lm_iteration_count + "(" + core.guidance.max_lm_iteration_count + ")"' GUILayout.Width(100));
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Label(String.Format(Localizer.Format("#MechJeb_Ascent_label31") +"{0:F1}%"' (vesselState.mass - m0) / m0 * 100.0 )' s);
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: Math.Abs(vesselState.mass - m0) / m0 > 0.01
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Label(String.Format(Localizer.Format("#MechJeb_Ascent_label32") +"{0:F1}%"' (vesselState.thrustCurrent - thrust) / thrust * 100.0 )' s);
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: Math.Abs(vesselState.thrustCurrent - thrust) / thrust > 0.01
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: autopilot.warpCountDown.text = GUILayout.TextField(autopilot.warpCountDown.text'                                          GUILayout.Width(60));
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: autopilot.launchPhaseAngle.text = GUILayout.TextField(autopilot.launchPhaseAngle.text'                                              GUILayout.Width(60));
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: autopilot.launchLANDifference.text = GUILayout.TextField(                                          autopilot.launchLANDifference.text' GUILayout.Width(60));
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: double desiredOrbitPeriod = 2 * Math.PI *                                              Math.Sqrt(                                                      Math.Pow( mainBody.Radius + autopilot.desiredOrbitAltitude' 3)                                                      / mainBody.gravParameter);
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: double desiredOrbitPeriod = 2 * Math.PI *                                              Math.Sqrt(                                                      Math.Pow( mainBody.Radius + autopilot.desiredOrbitAltitude' 3)                                                      / mainBody.gravParameter);
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: interplanetaryWindowUT -= 3*desiredOrbitPeriod;
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowGUI,The following statement contains a magic number: autopilot.tMinus > 3*vesselState.deltaT
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(240)' GUILayout.Height(30) };
Magic Number,MuMech,MechJebModuleAscentGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGuidance.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(240)' GUILayout.Height(30) };
Magic Number,MuMech,MechJebModuleAscentPVG,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentPVG.cs,ConvertToSMAEcc,The following statement contains a magic number: sma = (PeR + ApR) / 2;
Magic Number,MuMech,MechJebModuleAscentPVG,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentPVG.cs,ConvertToVTRT,The following statement contains a magic number: rt = 2 * sma + n1 * sma * sma * ( 1 -  ecc * ecc) / d2;
Magic Number,MuMech,MechJebModuleAscentPVG,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentPVG.cs,DriveVerticalAscent,The following statement contains a magic number: attitudeTo(90' core.guidance.heading);
Magic Number,MuMech,MechJebModuleAscentPVG,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentPVG.cs,DriveVerticalAscent,The following statement contains a magic number: core.attitude.AxisControl(!vessel.Landed' !vessel.Landed' !vessel.Landed && (vesselState.altitudeBottom > 50));
Magic Number,MuMech,MechJebModuleAscentPVG,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentPVG.cs,DriveInitiateTurn,The following statement contains a magic number: double pitch_program = 90 - theta;
Magic Number,MuMech,MechJebModuleAscentPVG,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentPVG.cs,DriveInitiateTurn,The following statement contains a magic number: (vesselState.maxDynamicPressure > 0) && (vesselState.maxDynamicPressure * 0.90 > vesselState.dynamicPressure)
Magic Number,MuMech,MechJebModuleAscentPVG,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentPVG.cs,DriveInitiateTurn,The following statement contains a magic number: double fade = MuUtils.Clamp( (0.95 - vesselState.dynamicPressure / vesselState.maxDynamicPressure) * 20.0' 0.0' 1.0);
Magic Number,MuMech,MechJebModuleAscentPVG,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentPVG.cs,DriveInitiateTurn,The following statement contains a magic number: double fade = MuUtils.Clamp( (0.95 - vesselState.dynamicPressure / vesselState.maxDynamicPressure) * 20.0' 0.0' 1.0);
Magic Number,MuMech,MechJebModuleAscentPVG,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentPVG.cs,DriveGuidance,The following statement contains a magic number: double pitch = Math.Min(Math.Min(90' srfvelPitch())' vesselState.vesselPitch);
Magic Number,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The following statement contains a magic number: currentController = 2;
Magic Number,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The following statement contains a magic number: GUILayout.Toggle(currentController == 2' Localizer.Format("#MechJeb_AttitudeAdjust_checkbox4"))
Magic Number,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The following statement contains a magic number: GUILayout.Space(20);
Magic Number,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The following statement contains a magic number: GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_AttitudeAdjust_Label9")' arrows.arrowsLength' ""' 50);
Magic Number,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowGUI,The following statement contains a magic number: arrows.comSphereRadius.text = GUILayout.TextField(arrows.comSphereRadius.text' GUILayout.Width(40));
Magic Number,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(350)' GUILayout.Height(150) };
Magic Number,MuMech,MechJebModuleAttitudeAdjustment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeAdjustment.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(350)' GUILayout.Height(150) };
Magic Number,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,OnModuleEnabled,The following statement contains a magic number: timeCount = 50;
Magic Number,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,MechJebModuleAttitudeController,The following statement contains a magic number: priority = 800;
Magic Number,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,OnFixedUpdate,The following statement contains a magic number: torque += vesselState.torqueDiffThrottle * vessel.ctrlState.mainThrottle / 2.0;
Magic Number,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,OnFixedUpdate,The following statement contains a magic number: inertia = 0.5 * Vector3d.Scale(                  vesselState.angularMomentum.Sign()'                  Vector3d.Scale(                      Vector3d.Scale(vesselState.angularMomentum' vesselState.angularMomentum)'                      Vector3d.Scale(torque' vesselState.MoI).InvertNoNaN()                      )                  );
Magic Number,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,Drive,The following statement contains a magic number: _requestedAttitude = attitudeGetReferenceRotation(attitudeReference) * attitudeTarget * Quaternion.Euler(90' 0' 0);
Magic Number,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,SetFlightCtrlState,The following statement contains a magic number: bool userCommandingPitchYaw = (Mathfx.Approx(s.pitch' s.pitchTrim' 0.1F) ? false : true) || (Mathfx.Approx(s.yaw' s.yawTrim' 0.1F) ? false : true);
Magic Number,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,SetFlightCtrlState,The following statement contains a magic number: bool userCommandingPitchYaw = (Mathfx.Approx(s.pitch' s.pitchTrim' 0.1F) ? false : true) || (Mathfx.Approx(s.yaw' s.yawTrim' 0.1F) ? false : true);
Magic Number,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,SetFlightCtrlState,The following statement contains a magic number: bool userCommandingRoll = (Mathfx.Approx(s.roll' s.rollTrim' 0.1F) ? false : true);
Magic Number,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,SetFlightCtrlState,The following statement contains a magic number: timeCount < 50
Magic Number,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,SetFlightCtrlState,The following statement contains a magic number: (absErr.x < 0.4) && (absErr.y < 0.4) && (absErr.z < 0.4)
Magic Number,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,SetFlightCtrlState,The following statement contains a magic number: (absErr.x < 0.4) && (absErr.y < 0.4) && (absErr.z < 0.4)
Magic Number,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,SetFlightCtrlState,The following statement contains a magic number: (absErr.x < 0.4) && (absErr.y < 0.4) && (absErr.z < 0.4)
Magic Number,MuMech,MechJebModuleCustomInfoWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowGUI,The following statement contains a magic number: !IsOverlay && GUI.Button(new Rect(10' 0' 13' 20)' "E"' GuiUtils.yellowOnHover)
Magic Number,MuMech,MechJebModuleCustomInfoWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowGUI,The following statement contains a magic number: !IsOverlay && GUI.Button(new Rect(10' 0' 13' 20)' "E"' GuiUtils.yellowOnHover)
Magic Number,MuMech,MechJebModuleCustomInfoWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowGUI,The following statement contains a magic number: !IsOverlay && GUI.Button(new Rect(10' 0' 13' 20)' "E"' GuiUtils.yellowOnHover)
Magic Number,MuMech,MechJebModuleCustomInfoWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowGUI,The following statement contains a magic number: ScreenMessages.PostScreenMessage(Localizer.Format("#MechJeb_WindowEd_CustomInfoWindow_Scrmsg1"' GetName())' 3.0f' ScreenMessageStyle.UPPER_RIGHT);
Magic Number,MuMech,MechJebModuleCustomInfoWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowGUI,The following statement contains a magic number: !IsOverlay && GUI.Button(new Rect(25' 0' 13' 20)' "C"' GuiUtils.yellowOnHover)
Magic Number,MuMech,MechJebModuleCustomInfoWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowGUI,The following statement contains a magic number: !IsOverlay && GUI.Button(new Rect(25' 0' 13' 20)' "C"' GuiUtils.yellowOnHover)
Magic Number,MuMech,MechJebModuleCustomInfoWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowGUI,The following statement contains a magic number: !IsOverlay && GUI.Button(new Rect(25' 0' 13' 20)' "C"' GuiUtils.yellowOnHover)
Magic Number,MuMech,MechJebModuleCustomInfoWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(250)' GUILayout.Height(30) };
Magic Number,MuMech,MechJebModuleCustomInfoWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(250)' GUILayout.Height(30) };
Magic Number,MuMech,MechJebModuleCustomInfoWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,FromSharingString,The following statement contains a magic number: ShowInEditor = lines[2].Contains("editor");
Magic Number,MuMech,MechJebModuleCustomInfoWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,FromSharingString,The following statement contains a magic number: ShowInFlight = lines[2].Contains("flight");
Magic Number,MuMech,MechJebModuleCustomInfoWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,FromSharingString,The following statement contains a magic number: lines.Length > 2 && lines[2].StartsWith("Show in:")
Magic Number,MuMech,MechJebModuleCustomInfoWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,FromSharingString,The following statement contains a magic number: lines.Length > 2 && lines[2].StartsWith("Show in:")
Magic Number,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,DrawGUI,The following statement contains a magic number: Color newColor = ColorPickerRGB.DrawGUI((int)windowPos.xMax + 5' (int)windowPos.yMin' editedWindow.backgroundColor);
Magic Number,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,DrawGUI,The following statement contains a magic number: Color newColor = ColorPickerRGB.DrawGUI((int)windowPos.xMax + 5' (int)windowPos.yMin' editedWindow.text);
Magic Number,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowGUI,The following statement contains a magic number: editedWindowIndex = GuiUtils.ArrowSelector(editedWindowIndex' allWindows.Count' () =>                      {                          string newTitle = GUILayout.TextField(editedWindow.title' GUILayout.Width(120)' GUILayout.ExpandWidth(false));                            if (editedWindow.title != newTitle)                          {                              editedWindow.title = newTitle;                              editedWindow.dirty = true;                          }                      });
Magic Number,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowGUI,The following statement contains a magic number: editedWindow.ShowInFlight = GUILayout.Toggle(editedWindow.ShowInFlight' Localizer.Format("#MechJeb_WindowEd_checkbox1")' GUILayout.Width(60));
Magic Number,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowGUI,The following statement contains a magic number: GUILayout.BeginVertical(GUILayout.Height(100));
Magic Number,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(200)' GUILayout.Height(540) };
Magic Number,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(200)' GUILayout.Height(540) };
Magic Number,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,AddDefaultWindows,The following statement contains a magic number: CreateWindowFromSharingString(CustomWindowPresets.presets[2].sharingString).enabled = false;
Magic Number,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,AddDefaultWindows,The following statement contains a magic number: CreateWindowFromSharingString(CustomWindowPresets.presets[3].sharingString).enabled = false;
Magic Number,MuMech,MechJebModuleCustomWindowEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,CreateWindowFromSharingString,The following statement contains a magic number: ScreenMessages.PostScreenMessage(Localizer.Format("#MechJeb_WindowEd_CustomInfoWindow_Scrmsg2")' 3.0f' ScreenMessageStyle.UPPER_RIGHT);
Magic Number,MuMech,ValueInfoItem,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleCustomInfoWindow.cs,GetStringValue,The following statement contains a magic number: double doubleValue = -999;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,DebugArrow,The following statement contains a magic number: gameObject.layer = 15;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,DebugArrow,The following statement contains a magic number: haft = CreateCone(1f' 0.05f' 0.05f' 0f' 20);
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,DebugArrow,The following statement contains a magic number: haft = CreateCone(1f' 0.05f' 0.05f' 0f' 20);
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,DebugArrow,The following statement contains a magic number: haft = CreateCone(1f' 0.05f' 0.05f' 0f' 20);
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,DebugArrow,The following statement contains a magic number: haft.transform.localRotation = Quaternion.Euler(90' 0' 0);
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,DebugArrow,The following statement contains a magic number: haft.layer = 15;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,DebugArrow,The following statement contains a magic number: cone = CreateCone(coneLength' 0.15f' 0f' 0f' 20);
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,DebugArrow,The following statement contains a magic number: cone = CreateCone(coneLength' 0.15f' 0f' 0f' 20);
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,DebugArrow,The following statement contains a magic number: cone.transform.localRotation = Quaternion.Euler(90' 0' 0);
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,DebugArrow,The following statement contains a magic number: cone.layer = 15;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,DebugArrow,The following statement contains a magic number: SetLength(4);
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,Set,The following statement contains a magic number: direction.sqrMagnitude < 0.001
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: Vector3[] vertices = new Vector3[nbVerticesCap + nbVerticesCap + nbSides * 2 + 2];
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: Vector3[] vertices = new Vector3[nbVerticesCap + nbVerticesCap + nbSides * 2 + 2];
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: float _2pi = Mathf.PI * 2f;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: vert <= nbSides * 2 + 1
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: vert += 2;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: vert <= vertices.Length - 4
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: vertices[vert] = vertices[nbSides * 2 + 2];
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: vertices[vert] = vertices[nbSides * 2 + 2];
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: vertices[vert + 1] = vertices[nbSides * 2 + 3];
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: vertices[vert + 1] = vertices[nbSides * 2 + 3];
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: vert <= nbSides * 2 + 1
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: vert += 2;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: vert <= vertices.Length - 4
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: normales[vert] = normales[nbSides * 2 + 2];
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: normales[vert] = normales[nbSides * 2 + 2];
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: normales[vert + 1] = normales[nbSides * 2 + 3];
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: normales[vert + 1] = normales[nbSides * 2 + 3];
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: uvs[u++] = new Vector2(0.5f' 0.5f);
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: uvs[u++] = new Vector2(0.5f' 0.5f);
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: uvs[u] = new Vector2(Mathf.Cos(rad) * .5f + .5f' Mathf.Sin(rad) * .5f + .5f);
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: uvs[u] = new Vector2(Mathf.Cos(rad) * .5f + .5f' Mathf.Sin(rad) * .5f + .5f);
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: uvs[u] = new Vector2(Mathf.Cos(rad) * .5f + .5f' Mathf.Sin(rad) * .5f + .5f);
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: uvs[u] = new Vector2(Mathf.Cos(rad) * .5f + .5f' Mathf.Sin(rad) * .5f + .5f);
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: uvs[u++] = new Vector2(0.5f' 0.5f);
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: uvs[u++] = new Vector2(0.5f' 0.5f);
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: uvs[u] = new Vector2(Mathf.Cos(rad) * .5f + .5f' Mathf.Sin(rad) * .5f + .5f);
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: uvs[u] = new Vector2(Mathf.Cos(rad) * .5f + .5f' Mathf.Sin(rad) * .5f + .5f);
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: uvs[u] = new Vector2(Mathf.Cos(rad) * .5f + .5f' Mathf.Sin(rad) * .5f + .5f);
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: uvs[u] = new Vector2(Mathf.Cos(rad) * .5f + .5f' Mathf.Sin(rad) * .5f + .5f);
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: u <= nbSides * 2 + 1
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: u += 2;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: u <= uvs.Length - 4
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: int nbTriangles = nbSides + nbSides + nbSides * 2;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: int[] triangles = new int[nbTriangles * 3 + 3];
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: int[] triangles = new int[nbTriangles * 3 + 3];
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: triangles[i + 2] = tri + 2;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: triangles[i + 2] = tri + 2;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: i += 3;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: triangles[i + 2] = 1;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: i += 3;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: triangles[i] = tri + 2;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: triangles[i + 2] = nbVerticesCap;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: i += 3;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: tri < nbSides * 2
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: triangles[i + 2] = nbVerticesCap;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: i += 3;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: triangles[i] = tri + 2;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: triangles[i + 2] = tri + 0;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: i += 3;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: triangles[i + 1] = tri + 2;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: triangles[i + 2] = tri + 0;
Magic Number,MuMech,DebugArrow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateCone,The following statement contains a magic number: i += 3;
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,DebugIcoSphere,The following statement contains a magic number: gameObject.layer = 15;
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,DebugIcoSphere,The following statement contains a magic number: SetRadius(0.09f);
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: gameObject.layer = 15;
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: float t = (1f + Mathf.Sqrt(5f)) / 2f;
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: float t = (1f + Mathf.Sqrt(5f)) / 2f;
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(0' 11' 5));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(0' 11' 5));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(0' 5' 1));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(0' 1' 7));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(0' 7' 10));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(0' 7' 10));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(0' 10' 11));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(0' 10' 11));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(1' 5' 9));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(1' 5' 9));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(5' 11' 4));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(5' 11' 4));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(5' 11' 4));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(11' 10' 2));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(11' 10' 2));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(11' 10' 2));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(10' 7' 6));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(10' 7' 6));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(10' 7' 6));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(7' 1' 8));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(7' 1' 8));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(3' 9' 4));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(3' 9' 4));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(3' 9' 4));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(3' 4' 2));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(3' 4' 2));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(3' 4' 2));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(3' 2' 6));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(3' 2' 6));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(3' 2' 6));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(3' 6' 8));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(3' 6' 8));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(3' 6' 8));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(3' 8' 9));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(3' 8' 9));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(3' 8' 9));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(4' 9' 5));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(4' 9' 5));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(4' 9' 5));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(2' 4' 11));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(2' 4' 11));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(2' 4' 11));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(6' 2' 10));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(6' 2' 10));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(6' 2' 10));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(8' 6' 7));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(8' 6' 7));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(8' 6' 7));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(9' 8' 1));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,CreateIcoSphere,The following statement contains a magic number: faces.Add(new TriangleIndices(9' 8' 1));
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,getMiddlePoint,The following statement contains a magic number: long key = (smallerIndex << 32) + greaterIndex;
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,getMiddlePoint,The following statement contains a magic number: Vector3 middle = new Vector3              (                  (point1.x + point2.x) / 2f'                  (point1.y + point2.y) / 2f'                  (point1.z + point2.z) / 2f              );
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,getMiddlePoint,The following statement contains a magic number: Vector3 middle = new Vector3              (                  (point1.x + point2.x) / 2f'                  (point1.y + point2.y) / 2f'                  (point1.z + point2.z) / 2f              );
Magic Number,MuMech,DebugIcoSphere,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDebugArrows.cs,getMiddlePoint,The following statement contains a magic number: Vector3 middle = new Vector3              (                  (point1.x + point2.x) / 2f'                  (point1.y + point2.y) / 2f'                  (point1.z + point2.z) / 2f              );
Magic Number,MuMech,MechJebModuleDeployableController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDeployableController.cs,MechJebModuleDeployableController,The following statement contains a magic number: priority = 200;
Magic Number,MuMech,MechJebModuleDeployableController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDeployableController.cs,ShouldDeploy,The following statement contains a magic number: double dt = 10;
Magic Number,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,MaxSpeedForDistance,The following statement contains a magic number: return FixSpeed(Math.Sqrt(2.0 * Math.Abs(distance) * vesselState.rcsThrustAvailable.GetMagnitude(localAxis) * core.rcs.rcsAccelFactor() / vesselState.mass));
Magic Number,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,Drive,The following statement contains a magic number: switch (dockingStep)              {                  case DockingStep.WRONG_SIDE_BACKING_UP:                      zApproachSpeed = MaxSpeedForDistance(safeDistance + zSep + 2.0' -zAxis);                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                        align = false;                      status = Localizer.Format("#MechJeb_Docking_status1"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString());//"Backing up at " <<1>> " m/s before moving on target side (lat: "<<2>> " m/s)"                      break;                    case DockingStep.WRONG_SIDE_LATERAL:                      zApproachSpeed = 0;                      latApproachSpeed = -MaxSpeedForDistance(safeDistance - lateralSep.magnitude + 2.0' -lateralSep);                      status = Localizer.Format("#MechJeb_Docking_status2"' latApproachSpeed.ToString("F2"));//Moving away from docking axis at <<1>> m/s to avoid hitting target on backing up                      break;                    case DockingStep.WRONG_SIDE_SWITCHSIDE:                      zApproachSpeed = -MaxSpeedForDistance(-zSep + targetSize' -zAxis);                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                                            status = Localizer.Format("#MechJeb_Docking_status3"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString());//"Moving at <<1>> m/s to get on the correct side of the target. (lat: <<2>> m/s)"                      break;                    case DockingStep.BACKING_UP:                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                        zApproachSpeed = -MaxSpeedForDistance(1 + targetSize - zSep' -zAxis);                      align = false;                      status = Localizer.Format("#MechJeb_Docking_status4"'zApproachSpeed.ToString("F2"));//"Backing up at " +  + " m/s"                      break;                    case DockingStep.MOVING_TO_START:                        if (zSep < safeDistance)                          zApproachSpeed *= -1;                      else                          zApproachSpeed *= 0;                        status = Localizer.Format("#MechJeb_Docking_status5"' zApproachSpeed.ToString("F2"));//"Moving toward the starting point at " +  + " m/s."                      break;                    case DockingStep.DOCKING:                      timeToAxis = Math.Abs(lateralSep.magnitude / latApproachSpeed );                      timeToTargetSize = Math.Abs((zSep) / zApproachSpeed);                                                                                           if (((zSep <= lateralSep.magnitude * 10) || (timeToTargetSize <= timeToAxis * 10)) && (timeToAxis > 0 && timeToTargetSize > 0))                      {                          zApproachSpeed *= Math.Min(timeToTargetSize / timeToAxis' 1);                          latApproachSpeed *= 2;                      }                      status = Localizer.Format("#MechJeb_Docking_status6"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString("F2"));//"Moving forward to dock at <<1>> / <<2>> m/s."                      break;                    default:                      break;              }
Magic Number,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,Drive,The following statement contains a magic number: switch (dockingStep)              {                  case DockingStep.WRONG_SIDE_BACKING_UP:                      zApproachSpeed = MaxSpeedForDistance(safeDistance + zSep + 2.0' -zAxis);                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                        align = false;                      status = Localizer.Format("#MechJeb_Docking_status1"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString());//"Backing up at " <<1>> " m/s before moving on target side (lat: "<<2>> " m/s)"                      break;                    case DockingStep.WRONG_SIDE_LATERAL:                      zApproachSpeed = 0;                      latApproachSpeed = -MaxSpeedForDistance(safeDistance - lateralSep.magnitude + 2.0' -lateralSep);                      status = Localizer.Format("#MechJeb_Docking_status2"' latApproachSpeed.ToString("F2"));//Moving away from docking axis at <<1>> m/s to avoid hitting target on backing up                      break;                    case DockingStep.WRONG_SIDE_SWITCHSIDE:                      zApproachSpeed = -MaxSpeedForDistance(-zSep + targetSize' -zAxis);                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                                            status = Localizer.Format("#MechJeb_Docking_status3"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString());//"Moving at <<1>> m/s to get on the correct side of the target. (lat: <<2>> m/s)"                      break;                    case DockingStep.BACKING_UP:                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                        zApproachSpeed = -MaxSpeedForDistance(1 + targetSize - zSep' -zAxis);                      align = false;                      status = Localizer.Format("#MechJeb_Docking_status4"'zApproachSpeed.ToString("F2"));//"Backing up at " +  + " m/s"                      break;                    case DockingStep.MOVING_TO_START:                        if (zSep < safeDistance)                          zApproachSpeed *= -1;                      else                          zApproachSpeed *= 0;                        status = Localizer.Format("#MechJeb_Docking_status5"' zApproachSpeed.ToString("F2"));//"Moving toward the starting point at " +  + " m/s."                      break;                    case DockingStep.DOCKING:                      timeToAxis = Math.Abs(lateralSep.magnitude / latApproachSpeed );                      timeToTargetSize = Math.Abs((zSep) / zApproachSpeed);                                                                                           if (((zSep <= lateralSep.magnitude * 10) || (timeToTargetSize <= timeToAxis * 10)) && (timeToAxis > 0 && timeToTargetSize > 0))                      {                          zApproachSpeed *= Math.Min(timeToTargetSize / timeToAxis' 1);                          latApproachSpeed *= 2;                      }                      status = Localizer.Format("#MechJeb_Docking_status6"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString("F2"));//"Moving forward to dock at <<1>> / <<2>> m/s."                      break;                    default:                      break;              }
Magic Number,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,Drive,The following statement contains a magic number: switch (dockingStep)              {                  case DockingStep.WRONG_SIDE_BACKING_UP:                      zApproachSpeed = MaxSpeedForDistance(safeDistance + zSep + 2.0' -zAxis);                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                        align = false;                      status = Localizer.Format("#MechJeb_Docking_status1"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString());//"Backing up at " <<1>> " m/s before moving on target side (lat: "<<2>> " m/s)"                      break;                    case DockingStep.WRONG_SIDE_LATERAL:                      zApproachSpeed = 0;                      latApproachSpeed = -MaxSpeedForDistance(safeDistance - lateralSep.magnitude + 2.0' -lateralSep);                      status = Localizer.Format("#MechJeb_Docking_status2"' latApproachSpeed.ToString("F2"));//Moving away from docking axis at <<1>> m/s to avoid hitting target on backing up                      break;                    case DockingStep.WRONG_SIDE_SWITCHSIDE:                      zApproachSpeed = -MaxSpeedForDistance(-zSep + targetSize' -zAxis);                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                                            status = Localizer.Format("#MechJeb_Docking_status3"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString());//"Moving at <<1>> m/s to get on the correct side of the target. (lat: <<2>> m/s)"                      break;                    case DockingStep.BACKING_UP:                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                        zApproachSpeed = -MaxSpeedForDistance(1 + targetSize - zSep' -zAxis);                      align = false;                      status = Localizer.Format("#MechJeb_Docking_status4"'zApproachSpeed.ToString("F2"));//"Backing up at " +  + " m/s"                      break;                    case DockingStep.MOVING_TO_START:                        if (zSep < safeDistance)                          zApproachSpeed *= -1;                      else                          zApproachSpeed *= 0;                        status = Localizer.Format("#MechJeb_Docking_status5"' zApproachSpeed.ToString("F2"));//"Moving toward the starting point at " +  + " m/s."                      break;                    case DockingStep.DOCKING:                      timeToAxis = Math.Abs(lateralSep.magnitude / latApproachSpeed );                      timeToTargetSize = Math.Abs((zSep) / zApproachSpeed);                                                                                           if (((zSep <= lateralSep.magnitude * 10) || (timeToTargetSize <= timeToAxis * 10)) && (timeToAxis > 0 && timeToTargetSize > 0))                      {                          zApproachSpeed *= Math.Min(timeToTargetSize / timeToAxis' 1);                          latApproachSpeed *= 2;                      }                      status = Localizer.Format("#MechJeb_Docking_status6"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString("F2"));//"Moving forward to dock at <<1>> / <<2>> m/s."                      break;                    default:                      break;              }
Magic Number,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,Drive,The following statement contains a magic number: switch (dockingStep)              {                  case DockingStep.WRONG_SIDE_BACKING_UP:                      zApproachSpeed = MaxSpeedForDistance(safeDistance + zSep + 2.0' -zAxis);                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                        align = false;                      status = Localizer.Format("#MechJeb_Docking_status1"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString());//"Backing up at " <<1>> " m/s before moving on target side (lat: "<<2>> " m/s)"                      break;                    case DockingStep.WRONG_SIDE_LATERAL:                      zApproachSpeed = 0;                      latApproachSpeed = -MaxSpeedForDistance(safeDistance - lateralSep.magnitude + 2.0' -lateralSep);                      status = Localizer.Format("#MechJeb_Docking_status2"' latApproachSpeed.ToString("F2"));//Moving away from docking axis at <<1>> m/s to avoid hitting target on backing up                      break;                    case DockingStep.WRONG_SIDE_SWITCHSIDE:                      zApproachSpeed = -MaxSpeedForDistance(-zSep + targetSize' -zAxis);                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                                            status = Localizer.Format("#MechJeb_Docking_status3"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString());//"Moving at <<1>> m/s to get on the correct side of the target. (lat: <<2>> m/s)"                      break;                    case DockingStep.BACKING_UP:                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                        zApproachSpeed = -MaxSpeedForDistance(1 + targetSize - zSep' -zAxis);                      align = false;                      status = Localizer.Format("#MechJeb_Docking_status4"'zApproachSpeed.ToString("F2"));//"Backing up at " +  + " m/s"                      break;                    case DockingStep.MOVING_TO_START:                        if (zSep < safeDistance)                          zApproachSpeed *= -1;                      else                          zApproachSpeed *= 0;                        status = Localizer.Format("#MechJeb_Docking_status5"' zApproachSpeed.ToString("F2"));//"Moving toward the starting point at " +  + " m/s."                      break;                    case DockingStep.DOCKING:                      timeToAxis = Math.Abs(lateralSep.magnitude / latApproachSpeed );                      timeToTargetSize = Math.Abs((zSep) / zApproachSpeed);                                                                                           if (((zSep <= lateralSep.magnitude * 10) || (timeToTargetSize <= timeToAxis * 10)) && (timeToAxis > 0 && timeToTargetSize > 0))                      {                          zApproachSpeed *= Math.Min(timeToTargetSize / timeToAxis' 1);                          latApproachSpeed *= 2;                      }                      status = Localizer.Format("#MechJeb_Docking_status6"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString("F2"));//"Moving forward to dock at <<1>> / <<2>> m/s."                      break;                    default:                      break;              }
Magic Number,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,Drive,The following statement contains a magic number: switch (dockingStep)              {                  case DockingStep.WRONG_SIDE_BACKING_UP:                      zApproachSpeed = MaxSpeedForDistance(safeDistance + zSep + 2.0' -zAxis);                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                        align = false;                      status = Localizer.Format("#MechJeb_Docking_status1"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString());//"Backing up at " <<1>> " m/s before moving on target side (lat: "<<2>> " m/s)"                      break;                    case DockingStep.WRONG_SIDE_LATERAL:                      zApproachSpeed = 0;                      latApproachSpeed = -MaxSpeedForDistance(safeDistance - lateralSep.magnitude + 2.0' -lateralSep);                      status = Localizer.Format("#MechJeb_Docking_status2"' latApproachSpeed.ToString("F2"));//Moving away from docking axis at <<1>> m/s to avoid hitting target on backing up                      break;                    case DockingStep.WRONG_SIDE_SWITCHSIDE:                      zApproachSpeed = -MaxSpeedForDistance(-zSep + targetSize' -zAxis);                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                                            status = Localizer.Format("#MechJeb_Docking_status3"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString());//"Moving at <<1>> m/s to get on the correct side of the target. (lat: <<2>> m/s)"                      break;                    case DockingStep.BACKING_UP:                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                        zApproachSpeed = -MaxSpeedForDistance(1 + targetSize - zSep' -zAxis);                      align = false;                      status = Localizer.Format("#MechJeb_Docking_status4"'zApproachSpeed.ToString("F2"));//"Backing up at " +  + " m/s"                      break;                    case DockingStep.MOVING_TO_START:                        if (zSep < safeDistance)                          zApproachSpeed *= -1;                      else                          zApproachSpeed *= 0;                        status = Localizer.Format("#MechJeb_Docking_status5"' zApproachSpeed.ToString("F2"));//"Moving toward the starting point at " +  + " m/s."                      break;                    case DockingStep.DOCKING:                      timeToAxis = Math.Abs(lateralSep.magnitude / latApproachSpeed );                      timeToTargetSize = Math.Abs((zSep) / zApproachSpeed);                                                                                           if (((zSep <= lateralSep.magnitude * 10) || (timeToTargetSize <= timeToAxis * 10)) && (timeToAxis > 0 && timeToTargetSize > 0))                      {                          zApproachSpeed *= Math.Min(timeToTargetSize / timeToAxis' 1);                          latApproachSpeed *= 2;                      }                      status = Localizer.Format("#MechJeb_Docking_status6"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString("F2"));//"Moving forward to dock at <<1>> / <<2>> m/s."                      break;                    default:                      break;              }
Magic Number,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,Drive,The following statement contains a magic number: switch (dockingStep)              {                  case DockingStep.WRONG_SIDE_BACKING_UP:                      zApproachSpeed = MaxSpeedForDistance(safeDistance + zSep + 2.0' -zAxis);                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                        align = false;                      status = Localizer.Format("#MechJeb_Docking_status1"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString());//"Backing up at " <<1>> " m/s before moving on target side (lat: "<<2>> " m/s)"                      break;                    case DockingStep.WRONG_SIDE_LATERAL:                      zApproachSpeed = 0;                      latApproachSpeed = -MaxSpeedForDistance(safeDistance - lateralSep.magnitude + 2.0' -lateralSep);                      status = Localizer.Format("#MechJeb_Docking_status2"' latApproachSpeed.ToString("F2"));//Moving away from docking axis at <<1>> m/s to avoid hitting target on backing up                      break;                    case DockingStep.WRONG_SIDE_SWITCHSIDE:                      zApproachSpeed = -MaxSpeedForDistance(-zSep + targetSize' -zAxis);                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                                            status = Localizer.Format("#MechJeb_Docking_status3"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString());//"Moving at <<1>> m/s to get on the correct side of the target. (lat: <<2>> m/s)"                      break;                    case DockingStep.BACKING_UP:                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                        zApproachSpeed = -MaxSpeedForDistance(1 + targetSize - zSep' -zAxis);                      align = false;                      status = Localizer.Format("#MechJeb_Docking_status4"'zApproachSpeed.ToString("F2"));//"Backing up at " +  + " m/s"                      break;                    case DockingStep.MOVING_TO_START:                        if (zSep < safeDistance)                          zApproachSpeed *= -1;                      else                          zApproachSpeed *= 0;                        status = Localizer.Format("#MechJeb_Docking_status5"' zApproachSpeed.ToString("F2"));//"Moving toward the starting point at " +  + " m/s."                      break;                    case DockingStep.DOCKING:                      timeToAxis = Math.Abs(lateralSep.magnitude / latApproachSpeed );                      timeToTargetSize = Math.Abs((zSep) / zApproachSpeed);                                                                                           if (((zSep <= lateralSep.magnitude * 10) || (timeToTargetSize <= timeToAxis * 10)) && (timeToAxis > 0 && timeToTargetSize > 0))                      {                          zApproachSpeed *= Math.Min(timeToTargetSize / timeToAxis' 1);                          latApproachSpeed *= 2;                      }                      status = Localizer.Format("#MechJeb_Docking_status6"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString("F2"));//"Moving forward to dock at <<1>> / <<2>> m/s."                      break;                    default:                      break;              }
Magic Number,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,Drive,The following statement contains a magic number: switch (dockingStep)              {                  case DockingStep.WRONG_SIDE_BACKING_UP:                      zApproachSpeed = MaxSpeedForDistance(safeDistance + zSep + 2.0' -zAxis);                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                        align = false;                      status = Localizer.Format("#MechJeb_Docking_status1"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString());//"Backing up at " <<1>> " m/s before moving on target side (lat: "<<2>> " m/s)"                      break;                    case DockingStep.WRONG_SIDE_LATERAL:                      zApproachSpeed = 0;                      latApproachSpeed = -MaxSpeedForDistance(safeDistance - lateralSep.magnitude + 2.0' -lateralSep);                      status = Localizer.Format("#MechJeb_Docking_status2"' latApproachSpeed.ToString("F2"));//Moving away from docking axis at <<1>> m/s to avoid hitting target on backing up                      break;                    case DockingStep.WRONG_SIDE_SWITCHSIDE:                      zApproachSpeed = -MaxSpeedForDistance(-zSep + targetSize' -zAxis);                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                                            status = Localizer.Format("#MechJeb_Docking_status3"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString());//"Moving at <<1>> m/s to get on the correct side of the target. (lat: <<2>> m/s)"                      break;                    case DockingStep.BACKING_UP:                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                        zApproachSpeed = -MaxSpeedForDistance(1 + targetSize - zSep' -zAxis);                      align = false;                      status = Localizer.Format("#MechJeb_Docking_status4"'zApproachSpeed.ToString("F2"));//"Backing up at " +  + " m/s"                      break;                    case DockingStep.MOVING_TO_START:                        if (zSep < safeDistance)                          zApproachSpeed *= -1;                      else                          zApproachSpeed *= 0;                        status = Localizer.Format("#MechJeb_Docking_status5"' zApproachSpeed.ToString("F2"));//"Moving toward the starting point at " +  + " m/s."                      break;                    case DockingStep.DOCKING:                      timeToAxis = Math.Abs(lateralSep.magnitude / latApproachSpeed );                      timeToTargetSize = Math.Abs((zSep) / zApproachSpeed);                                                                                           if (((zSep <= lateralSep.magnitude * 10) || (timeToTargetSize <= timeToAxis * 10)) && (timeToAxis > 0 && timeToTargetSize > 0))                      {                          zApproachSpeed *= Math.Min(timeToTargetSize / timeToAxis' 1);                          latApproachSpeed *= 2;                      }                      status = Localizer.Format("#MechJeb_Docking_status6"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString("F2"));//"Moving forward to dock at <<1>> / <<2>> m/s."                      break;                    default:                      break;              }
Magic Number,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,Drive,The following statement contains a magic number: switch (dockingStep)              {                  case DockingStep.WRONG_SIDE_BACKING_UP:                      zApproachSpeed = MaxSpeedForDistance(safeDistance + zSep + 2.0' -zAxis);                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                        align = false;                      status = Localizer.Format("#MechJeb_Docking_status1"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString());//"Backing up at " <<1>> " m/s before moving on target side (lat: "<<2>> " m/s)"                      break;                    case DockingStep.WRONG_SIDE_LATERAL:                      zApproachSpeed = 0;                      latApproachSpeed = -MaxSpeedForDistance(safeDistance - lateralSep.magnitude + 2.0' -lateralSep);                      status = Localizer.Format("#MechJeb_Docking_status2"' latApproachSpeed.ToString("F2"));//Moving away from docking axis at <<1>> m/s to avoid hitting target on backing up                      break;                    case DockingStep.WRONG_SIDE_SWITCHSIDE:                      zApproachSpeed = -MaxSpeedForDistance(-zSep + targetSize' -zAxis);                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                                            status = Localizer.Format("#MechJeb_Docking_status3"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString());//"Moving at <<1>> m/s to get on the correct side of the target. (lat: <<2>> m/s)"                      break;                    case DockingStep.BACKING_UP:                      if (lateralSep.magnitude < safeDistance)                          latApproachSpeed *= -1;                      else if (lateralSep.magnitude < safeDistance * 2)                          latApproachSpeed = 0;                        zApproachSpeed = -MaxSpeedForDistance(1 + targetSize - zSep' -zAxis);                      align = false;                      status = Localizer.Format("#MechJeb_Docking_status4"'zApproachSpeed.ToString("F2"));//"Backing up at " +  + " m/s"                      break;                    case DockingStep.MOVING_TO_START:                        if (zSep < safeDistance)                          zApproachSpeed *= -1;                      else                          zApproachSpeed *= 0;                        status = Localizer.Format("#MechJeb_Docking_status5"' zApproachSpeed.ToString("F2"));//"Moving toward the starting point at " +  + " m/s."                      break;                    case DockingStep.DOCKING:                      timeToAxis = Math.Abs(lateralSep.magnitude / latApproachSpeed );                      timeToTargetSize = Math.Abs((zSep) / zApproachSpeed);                                                                                           if (((zSep <= lateralSep.magnitude * 10) || (timeToTargetSize <= timeToAxis * 10)) && (timeToAxis > 0 && timeToTargetSize > 0))                      {                          zApproachSpeed *= Math.Min(timeToTargetSize / timeToAxis' 1);                          latApproachSpeed *= 2;                      }                      status = Localizer.Format("#MechJeb_Docking_status6"' zApproachSpeed.ToString("F2")'latApproachSpeed.ToString("F2"));//"Moving forward to dock at <<1>> / <<2>> m/s."                      break;                    default:                      break;              }
Magic Number,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,OnFixedUpdate,The following statement contains a magic number: safeDistance = vesselBoundingBox.size.magnitude + targetSize + 0.5f;
Magic Number,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,InitDocking,The following statement contains a magic number: safeDistance = vesselBoundingBox.size.magnitude + targetSize + 0.5f;
Magic Number,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,InitDocking,The following statement contains a magic number: acquireRange = ((ModuleDockingNode)core.target.Target).acquireRange * 0.5;
Magic Number,MuMech,MechJebModuleDockingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingAutopilot.cs,InitDocking,The following statement contains a magic number: Math.Abs(zSep) > vesselBoundingBox.size.magnitude * 0.5f
Magic Number,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowGUI,The following statement contains a magic number: Vector3d.Angle(node.GetTransform().forward' vessel.ReferenceTransform.up) < 2
Magic Number,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowGUI,The following statement contains a magic number: autopilot.overridenTargetSize = 10;
Magic Number,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowGUI,The following statement contains a magic number: autopilot.overridenTargetSize < 10
Magic Number,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowGUI,The following statement contains a magic number: autopilot.rol.text = GUILayout.TextField(autopilot.rol.text' GUILayout.Width(30));
Magic Number,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(300)' GUILayout.Height(50) };
Magic Number,MuMech,MechJebModuleDockingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleDockingGuidance.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(300)' GUILayout.Height(50) };
Magic Number,MuMech,MechJebModuleFlightRecorder,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorder.cs,MechJebModuleFlightRecorder,The following statement contains a magic number: priority = 2000;
Magic Number,MuMech,MechJebModuleFlightRecorder,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorder.cs,OnFixedUpdate,The following statement contains a magic number: maxDragGees = Math.Max(maxDragGees' vesselState.drag / 9.81);
Magic Number,MuMech,MechJebModuleFlightRecorder,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorder.cs,OnFixedUpdate,The following statement contains a magic number: double circularPeriod = 2 * Math.PI * vesselState.radius / OrbitalManeuverCalculator.CircularOrbitSpeed(mainBody' vesselState.radius);
Magic Number,MuMech,MechJebModuleFlightRecorder,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorder.cs,OnFixedUpdate,The following statement contains a magic number: double angleTraversed = (vesselState.longitude - markLongitude) + 360 * (vesselState.time - markUT) / part.vessel.mainBody.rotationPeriod;
Magic Number,MuMech,MechJebModuleFlightRecorder,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorder.cs,OnFixedUpdate,The following statement contains a magic number: phaseAngleFromMark = MuUtils.ClampDegrees360(360 * (vesselState.time - markUT) / circularPeriod - angleTraversed);
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,MechJebModuleFlightRecorderGraph,The following statement contains a magic number: priority = 2000;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,OnStart,The following statement contains a magic number: width = 128 * hSize;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,OnStart,The following statement contains a magic number: height = 128 * vSize;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The following statement contains a magic number: GUILayout.Label(Localizer.Format("#MechJeb_Flightrecord_Label2"' MuUtils.ToSI(recorder.history[recorder.historyIdx].downRange' -2)) + "m"' GUILayout.ExpandWidth(false));
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The following statement contains a magic number: double autoScaleX = Math.Max(Math.Ceiling(Math.Log(maxXScaled' 2))' 0);
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The following statement contains a magic number: double scaleX = downrange ? Math.Pow(2' activeScaleX) : precision * Math.Pow(2' activeScaleX);
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The following statement contains a magic number: double scaleX = downrange ? Math.Pow(2' activeScaleX) : precision * Math.Pow(2' activeScaleX);
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The following statement contains a magic number: GUILayout.Label((downrange ? MuUtils.ToSI(scaleX' -1' 2) + "m/px" : GuiUtils.TimeToDHMS(scaleX' 1) + "/px")' GUILayout.ExpandWidth(false));
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The following statement contains a magic number: timeScale = Mathf.Clamp(timeScale' 0' 20);
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The following statement contains a magic number: downrangeScale = Mathf.Clamp(downrangeScale' 0' 20);
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The following statement contains a magic number: hSize = Mathf.Clamp(hSize' 1' 20);
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The following statement contains a magic number: vSize = Mathf.Clamp(vSize' 1' 10);
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The following statement contains a magic number: GUILayout.Label(Localizer.Format("#MechJeb_Flightrecord_Label3"' (100 * (recorder.historyIdx) / (float)recorder.history.Length).ToString("F1"))' GUILayout.ExpandWidth(false));
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The following statement contains a magic number: GUILayout.Space(10);
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The following statement contains a magic number: GUILayout.Space(50);
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The following statement contains a magic number: GUILayout.Space(10);
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The following statement contains a magic number: width = 128 * hSize;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowGUI,The following statement contains a magic number: height = 128 * vSize;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,DrawScaleLabels,The following statement contains a magic number: const int w = 80;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,DrawScaleLabels,The following statement contains a magic number: const int h = 20;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,DrawScaleLabels,The following statement contains a magic number: GUI.Label(new Rect(r.xMin - w' yBase - (float)(invScaleY * state.labelsPos[i]) - h * 0.5f' w' h)' state.labels[i]' centeredStyle);
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,DrawnPath,The following statement contains a magic number: recorder.history.Length <= 2 || recorder.historyIdx == 0
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,DrawnPath,The following statement contains a magic number: Drawing.DrawLine(p1' p2' color' 2' true);
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,DrawnPath,The following statement contains a magic number: r.Contains(p2) && ((p1 - p2).sqrMagnitude >= 1.0 || t < 2)
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,DrawnStages,The following statement contains a magic number: recorder.history.Length <= 2 || recorder.historyIdx == 0
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,DrawnStages,The following statement contains a magic number: Drawing.DrawLine(p1' p2' new Color(0.5f' 0.5f' 0.5f)' 1' false);
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,DrawnStages,The following statement contains a magic number: Drawing.DrawLine(p1' p2' new Color(0.5f' 0.5f' 0.5f)' 1' false);
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,DrawnStages,The following statement contains a magic number: Drawing.DrawLine(p1' p2' new Color(0.5f' 0.5f' 0.5f)' 1' false);
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,UpdateScale,The following statement contains a magic number: graphStates[t].maximum = recorder.maximums[t] + Math.Abs(recorder.maximums[t] * 0.2);
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,UpdateScale,The following statement contains a magic number: graphStates[t].minimum = recorder.minimums[t] - Math.Abs(recorder.minimums[t] * 0.2);
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,UpdateScale,The following statement contains a magic number: currX <= maximum + 0.5 * step
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,ResetScale,The following statement contains a magic number: graphStates[(int)recordType.AoA].minimum = -5;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,ResetScale,The following statement contains a magic number: graphStates[(int)recordType.AoS].minimum = -5;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,ResetScale,The following statement contains a magic number: graphStates[(int)recordType.AltitudeASL].maximum = mainBody != null && mainBody.atmosphere ? mainBody.RealMaxAtmosphereAltitude() : 10000.0;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,ResetScale,The following statement contains a magic number: graphStates[(int)recordType.DownRange].maximum = 500;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,ResetScale,The following statement contains a magic number: graphStates[(int)recordType.Acceleration].maximum = 2;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,ResetScale,The following statement contains a magic number: graphStates[(int)recordType.SpeedSurface].maximum = 300;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,ResetScale,The following statement contains a magic number: graphStates[(int)recordType.SpeedOrbital].maximum = 300;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,ResetScale,The following statement contains a magic number: graphStates[(int)recordType.Mass].maximum = 5;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,ResetScale,The following statement contains a magic number: graphStates[(int)recordType.Q].maximum = 1000;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,ResetScale,The following statement contains a magic number: graphStates[(int)recordType.AoA].maximum = 5;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,ResetScale,The following statement contains a magic number: graphStates[(int)recordType.AoS].maximum = 5;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,ResetScale,The following statement contains a magic number: graphStates[(int)recordType.AoD].maximum = 5;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,ResetScale,The following statement contains a magic number: graphStates[(int)recordType.AltitudeTrue].maximum = 100;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,ResetScale,The following statement contains a magic number: graphStates[(int)recordType.Pitch].maximum = 90;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,ResetScale,The following statement contains a magic number: graphStates[(int)recordType.DeltaVExpended].maximum = 100;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,ResetScale,The following statement contains a magic number: graphStates[(int)recordType.GravityLosses].maximum = 100;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,ResetScale,The following statement contains a magic number: graphStates[(int)recordType.DragLosses].maximum = 100;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,ResetScale,The following statement contains a magic number: graphStates[(int)recordType.SteeringLosses].maximum = 100;
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,heckbertNiceNum,The following statement contains a magic number: double f = x / (Math.Pow(10.0' exp));
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,heckbertNiceNum,The following statement contains a magic number: f < 1.5
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,heckbertNiceNum,The following statement contains a magic number: return nf * Math.Pow(10.0' exp);
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(400)' GUILayout.Height(300) };
Magic Number,MuMech,MechJebModuleFlightRecorderGraph,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleFlightRecorderGraph.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(400)' GUILayout.Height(300) };
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,SurfaceTWR,The following statement contains a magic number: return MaxAcceleration() / 9.81;
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AtmosphericPressurekPA,The following statement contains a magic number: return FlightGlobals.getStaticPressure(vesselState.CoM) * 1000;
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,OrbitSummary,The following statement contains a magic number: return "hyperbolic' Pe = " + MuUtils.ToSI(o.PeA' 2) + "m";
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,TimeToImpact,The following statement contains a magic number: iter < 10
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,RCSThrust,The following statement contains a magic number: return rcsThrustAvg.value * 1000;
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,RCSTranslationEfficiency,The following statement contains a magic number: return (rcsTranslationEfficiencyAvg.value * 100).ToString("F2") + "%";
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,RCSDeltaVVacuum,The following statement contains a magic number: double gForRCS = 9.81;
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,CurrentAcceleration,The following statement contains a magic number: return CurrentThrust() / (1000 * VesselMass());
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,CurrentThrust,The following statement contains a magic number: return vesselState.thrustCurrent * 1000;
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,SurfaceGravity,The following statement contains a magic number: return mainBody.GeeASL * 9.81;
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,EscapeVelocity,The following statement contains a magic number: return Math.Sqrt(2 * mainBody.gravParameter / vesselState.radius);
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,MaxThrust,The following statement contains a magic number: return 1000 * engines.Sum(e => e.minThrust + e.thrustPercentage / 100f * (e.maxThrust - e.minThrust));
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,MaxThrust,The following statement contains a magic number: return 1000 * engines.Sum(e => e.minThrust + e.thrustPercentage / 100f * (e.maxThrust - e.minThrust));
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,MinThrust,The following statement contains a magic number: return 1000 * engines.Sum(e => (e.throttleLocked ? e.minThrust + e.thrustPercentage / 100f * (e.maxThrust - e.minThrust) : e.minThrust));
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,MinThrust,The following statement contains a magic number: return 1000 * engines.Sum(e => (e.throttleLocked ? e.minThrust + e.thrustPercentage / 100f * (e.maxThrust - e.minThrust) : e.minThrust));
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,MaxAcceleration,The following statement contains a magic number: return MaxThrust() / (1000 * VesselMass());
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,MinAcceleration,The following statement contains a magic number: return MinThrust() / (1000 * VesselMass());
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,VesselCost,The following statement contains a magic number: return parts.Sum(p => p.partInfo.cost) * 1000;
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,TargetTimeToClosestApproach,The following statement contains a magic number: core.target.Target != null && vesselState.altitudeTrue < 1000.0
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,TargetTimeToClosestApproach,The following statement contains a magic number: double ang = Math.Acos(((a * a + b * b) - c * c) / (double)(2f * a * b));
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,TargetTimeToClosestApproach,The following statement contains a magic number: vesselState.altitudeTrue < 1000.0
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,TargetClosestApproachDistance,The following statement contains a magic number: vesselState.altitudeTrue < 1000.0
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,TargetClosestApproachRelativeVelocity,The following statement contains a magic number: vesselState.altitudeTrue < 1000.0
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,TargetCaptureDV,The following statement contains a magic number: double smaCapture = (o.PeR + o.referenceBody.sphereOfInfluence) / 2;
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,TargetCaptureDV,The following statement contains a magic number: double velAtPeriapsis = Math.Sqrt(o.referenceBody.gravParameter * (2 / o.PeR - 1 / o.semiMajorAxis));
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,TargetCaptureDV,The following statement contains a magic number: double velCapture = Math.Sqrt(o.referenceBody.gravParameter * (2 / o.PeR - 1 / smaCapture));
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,TargetApoapsis,The following statement contains a magic number: return MuUtils.ToSI(core.target.TargetOrbit.ApA' 2) + "m";
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,TargetPeriapsis,The following statement contains a magic number: return MuUtils.ToSI(core.target.TargetOrbit.PeA' 2) + "m";
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,TargetSMA,The following statement contains a magic number: return MuUtils.ToSI(core.target.TargetOrbit.semiMajorAxis' 2) + "m";
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The following statement contains a magic number: stats.altSLT = Math.Pow(altSLTScale' 2) * stats.editorBody.atmosphereDepth;
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The following statement contains a magic number: GUILayout.Label(MuUtils.ToSI(stats.altSLT' 2) + "m"' GUILayout.Width(80));
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The following statement contains a magic number: GUILayout.Label(MuUtils.ToSI(stats.altSLT' 2) + "m"' GUILayout.Width(80));
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The following statement contains a magic number: stats.mach = Math.Pow(machScale * 2' 3);
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The following statement contains a magic number: stats.mach = Math.Pow(machScale * 2' 3);
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The following statement contains a magic number: GUILayout.Label(stats.mach.ToString("F1") + " M"' GUILayout.Width(80));
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The following statement contains a magic number: switch (StageDisplayState)              {                  case 0:                      showVacInitialTWR = showAtmoInitialTWR = showVacDeltaV = showAtmoDeltaV = showTime = true;                      showInitialMass = showFinalMass = showStagedMass = showBurnedMass = showVacMaxTWR = showAtmoMaxTWR = showISP = false;                      break;                  case 1:                      showInitialMass = showFinalMass = showVacInitialTWR = showAtmoInitialTWR = showVacMaxTWR = showAtmoMaxTWR = showVacDeltaV = showTime = showAtmoDeltaV = true;                      showStagedMass = showBurnedMass = showISP = false;                      break;                  case 2:                      showInitialMass = showFinalMass = showStagedMass = showBurnedMass = showVacInitialTWR = showAtmoInitialTWR = showAtmoMaxTWR = showVacMaxTWR = showVacDeltaV = showTime = showAtmoDeltaV = showISP = true;                      break;              }
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The following statement contains a magic number: noChange &= showTime = !DrawStageStatsColumn(Localizer.Format("#MechJeb_InfoItems_StatsColumn12")' stages.Select(s => timeSeconds ? MuUtils.ToSI(atmoStats[s].deltaTime' 2) + " s": GuiUtils.TimeToDHMS(atmoStats[s].deltaTime' 1)));
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The following statement contains a magic number: StageDisplayState = 3;
Magic Number,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,HorizontalSeparator,The following statement contains a magic number: GUILayout.Label(""' separatorStyle' GUILayout.ExpandWidth(true)' GUILayout.Height(2));
Magic Number,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ComputeCourseCorrection,The following statement contains a magic number: double endRadius = mainBody.Radius + DecelerationEndAltitude() - 100;
Magic Number,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ComputeCourseCorrection,The following statement contains a magic number: Vector3d[] deltas = new Vector3d[3];
Magic Number,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ComputeCourseCorrection,The following statement contains a magic number: i < 3
Magic Number,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ComputeCourseCorrection,The following statement contains a magic number: float bodyRotationAngleDuringDescent = (float)(360 * (prediction.endUT - vesselState.time) / mainBody.rotationPeriod);
Magic Number,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ComputeCourseCorrection,The following statement contains a magic number: Matrix2x2 A = new Matrix2x2(                  downrangeDelta.sqrMagnitude' Vector3d.Dot(downrangeDelta' deltas[2])'                  Vector3d.Dot(downrangeDelta' deltas[2])' deltas[2].sqrMagnitude              );
Magic Number,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ComputeCourseCorrection,The following statement contains a magic number: Matrix2x2 A = new Matrix2x2(                  downrangeDelta.sqrMagnitude' Vector3d.Dot(downrangeDelta' deltas[2])'                  Vector3d.Dot(downrangeDelta' deltas[2])' deltas[2].sqrMagnitude              );
Magic Number,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ComputeCourseCorrection,The following statement contains a magic number: Matrix2x2 A = new Matrix2x2(                  downrangeDelta.sqrMagnitude' Vector3d.Dot(downrangeDelta' deltas[2])'                  Vector3d.Dot(downrangeDelta' deltas[2])' deltas[2].sqrMagnitude              );
Magic Number,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ComputeCourseCorrection,The following statement contains a magic number: Vector2d b = new Vector2d(Vector3d.Dot(desiredDelta' downrangeDelta)' Vector3d.Dot(desiredDelta' deltas[2]));
Magic Number,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ComputeCourseCorrection,The following statement contains a magic number: Vector3d courseCorrection = coeffs.x * downrangeDirection + coeffs.y * perturbationDirections[2];
Magic Number,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,PickDescentSpeedPolicy,The following statement contains a magic number: return new PoweredCoastDescentSpeedPolicy(mainBody.Radius + DecelerationEndAltitude()' mainBody.GeeASL * 9.81' vesselState.limitedMaxThrustAccel);
Magic Number,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,PickDescentSpeedPolicy,The following statement contains a magic number: return new SafeDescentSpeedPolicy(mainBody.Radius + DecelerationEndAltitude()' mainBody.GeeASL * 9.81' vesselState.limitedMaxThrustAccel);
Magic Number,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,DecelerationEndAltitude,The following statement contains a magic number: return 1.1 * landingSiteDragLength + LandingAltitude;
Magic Number,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,UseAtmosphereToBrake,The following statement contains a magic number: mainBody.RealMaxAtmosphereAltitude() > 0 && landingSiteDragLength < 0.7 * mainBody.RealMaxAtmosphereAltitude()
Magic Number,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,VesselAverageDrag,The following statement contains a magic number: f < 6
Magic Number,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,VesselAverageDrag,The following statement contains a magic number: dragCoef += partAreaDrag / 6;
Magic Number,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,ParachuteAddedDragCoef,The following statement contains a magic number: f < 6
Magic Number,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,UseLowDeorbitStrategy,The following statement contains a magic number: double stoppingDistance = Math.Pow(periapsisSpeed' 2) / (2 * vesselState.limitedMaxThrustAccel);
Magic Number,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,UseLowDeorbitStrategy,The following statement contains a magic number: double stoppingDistance = Math.Pow(periapsisSpeed' 2) / (2 * vesselState.limitedMaxThrustAccel);
Magic Number,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,UseLowDeorbitStrategy,The following statement contains a magic number: return orbit.PeA < 2 * stoppingDistance + mainBody.Radius / 4;
Magic Number,MuMech,MechJebModuleLandingAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,UseLowDeorbitStrategy,The following statement contains a magic number: return orbit.PeA < 2 * stoppingDistance + mainBody.Radius / 4;
Magic Number,MuMech,SafeDescentSpeedPolicy,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,MaxAllowedSpeed,The following statement contains a magic number: return 0.9 * Math.Sqrt(2 * (thrust - g) * altitude);
Magic Number,MuMech,SafeDescentSpeedPolicy,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,MaxAllowedSpeed,The following statement contains a magic number: return 0.9 * Math.Sqrt(2 * (thrust - g) * altitude);
Magic Number,MuMech,PoweredCoastDescentSpeedPolicy,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,MaxAllowedSpeed,The following statement contains a magic number: double ToF = (vSpeed + Math.Sqrt(vSpeed * vSpeed + 2 * g * (pos.magnitude - terrainRadius))) / g;
Magic Number,MuMech,PoweredCoastDescentSpeedPolicy,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,MaxAllowedSpeed,The following statement contains a magic number: return 0.8 * (thrust - g) * ToF;
Magic Number,MuMech,GravityTurnDescentSpeedPolicy,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,MaxAllowedSpeed,The following statement contains a magic number: double upperBound = 1.1 * vel.magnitude;
Magic Number,MuMech,GravityTurnDescentSpeedPolicy,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,MaxAllowedSpeed,The following statement contains a magic number: double test = (upperBound + lowerBound) / 2;
Magic Number,MuMech,GravityTurnDescentSpeedPolicy,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,MaxAllowedSpeed,The following statement contains a magic number: upperBound - lowerBound > 0.1
Magic Number,MuMech,GravityTurnDescentSpeedPolicy,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,MaxAllowedSpeed,The following statement contains a magic number: return 0.95 * ((upperBound + lowerBound) / 2);
Magic Number,MuMech,GravityTurnDescentSpeedPolicy,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,MaxAllowedSpeed,The following statement contains a magic number: return 0.95 * ((upperBound + lowerBound) / 2);
Magic Number,MuMech,GravityTurnDescentSpeedPolicy,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,GravityTurnFallDistance,The following statement contains a magic number: const int steps = 10;
Magic Number,MuMech,GravityTurnDescentSpeedPolicy,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,GravityTurnFallDistance,The following statement contains a magic number: x += dt * (v + newV) / 2;
Magic Number,MuMech,GravityTurnDescentSpeedPolicy,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,GravityTurnFallDistance,The following statement contains a magic number: endRadius -= v.sqrMagnitude / (2 * (thrust - g));
Magic Number,MuMech,ParachutePlan,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,AddResult,The following statement contains a magic number: correlation > 0 && this.regression.dataSetSize > 5
Magic Number,MuMech,ParachutePlan,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,AddResult,The following statement contains a magic number: correlation > -0.2
Magic Number,MuMech,ParachutePlan,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingAutopilot.cs,StartPlanning,The following statement contains a magic number: currentMultiplier = maxMultiplier / 2;
Magic Number,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(200)' GUILayout.Height(150) };
Magic Number,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(200)' GUILayout.Height(150) };
Magic Number,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The following statement contains a magic number: moveByMeter(ref core.target.targetLatitude' 10' ASL);
Magic Number,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The following statement contains a magic number: moveByMeter(ref core.target.targetLatitude' -10' ASL);
Magic Number,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The following statement contains a magic number: moveByMeter(ref core.target.targetLongitude' -10' ASL);
Magic Number,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The following statement contains a magic number: moveByMeter(ref core.target.targetLongitude' 10' ASL);
Magic Number,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The following statement contains a magic number: GUILayout.Label("ASL: " + MuUtils.ToSI(ASL' -1' 4) + "m");
Magic Number,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The following statement contains a magic number: predictor.maxOrbits = core.landing.enabled ? 0.5 : 4;
Magic Number,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The following statement contains a magic number: predictor.maxOrbits = core.landing.enabled ? 0.5 : 4;
Magic Number,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The following statement contains a magic number: GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_LandingGuidance_label3")' core.landing.touchdownSpeed' "m/s"' 35);
Magic Number,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The following statement contains a magic number: GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_LandingGuidance_label4")' core.landing.limitGearsStage' ""' 35);
Magic Number,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,WindowGUI,The following statement contains a magic number: GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_LandingGuidance_label5")' core.landing.limitChutesStage' ""' 35);
Magic Number,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,DrawGUIPrediction,The following statement contains a magic number: switch (result.outcome)                  {                      case ReentrySimulation.Outcome.LANDED:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_label9"));//Landing Predictions:                          GUILayout.Label(Coordinates.ToStringDMS(result.endPosition.latitude' result.endPosition.longitude) + "\nASL:" + MuUtils.ToSI(result.endASL'-1' 4) + "m");                          GUILayout.Label(result.body.GetExperimentBiomeSafe(result.endPosition.latitude' result.endPosition.longitude));                          double error = Vector3d.Distance(mainBody.GetWorldSurfacePosition(result.endPosition.latitude' result.endPosition.longitude' 0) - mainBody.position'                                                           mainBody.GetWorldSurfacePosition(core.target.targetLatitude' core.target.targetLongitude' 0) - mainBody.position);                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label10") + MuUtils.ToSI(error' 0) + "m"                                         + Localizer.Format("#MechJeb_LandingGuidance_Label11") + result.maxDragGees.ToString("F1") +"g"                                         +Localizer.Format("#MechJeb_LandingGuidance_Label12") + result.deltaVExpended.ToString("F1") + "m/s"                                         +Localizer.Format("#MechJeb_LandingGuidance_Label13") + (vessel.Landed ? "0.0s" : GuiUtils.TimeToDHMS(result.endUT - Planetarium.GetUniversalTime()' 1)));//Target difference = \nMax drag: \nDelta-v needed: \nTime to land:                           break;                        case ReentrySimulation.Outcome.AEROBRAKED:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label14"));//Predicted orbit after aerobraking:                          Orbit o = result.AeroBrakeOrbit();                          if (o.eccentricity > 1) GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label15") + o.eccentricity.ToString("F2"));//Hyperbolic' eccentricity =                           else GUILayout.Label(MuUtils.ToSI(o.PeA' 3) + "m x " + MuUtils.ToSI(o.ApA' 3) + "m");                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label16"' result.maxDragGees.ToString("F1"))+Localizer.Format("#MechJeb_LandingGuidance_Label17"' GuiUtils.TimeToDHMS(result.aeroBrakeUT - Planetarium.GetUniversalTime()' 1)));//Max drag:<<1>>g  \nExit atmosphere in:                          break;                        case ReentrySimulation.Outcome.NO_REENTRY:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label18_1")                                        + MuUtils.ToSI(orbit.PeA' 3) + "m Pe > " + MuUtils.ToSI(mainBody.RealMaxAtmosphereAltitude()' 3) + (mainBody.atmosphere ? Localizer.Format("#MechJeb_LandingGuidance_Label18_2") : Localizer.Format("#MechJeb_LandingGuidance_Label18_3")));//"Orbit does not reenter:\n""m atmosphere height""m ground"                          break;                        case ReentrySimulation.Outcome.TIMED_OUT:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label19"));//Reentry simulation timed out.                          break;                  }
Magic Number,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,DrawGUIPrediction,The following statement contains a magic number: switch (result.outcome)                  {                      case ReentrySimulation.Outcome.LANDED:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_label9"));//Landing Predictions:                          GUILayout.Label(Coordinates.ToStringDMS(result.endPosition.latitude' result.endPosition.longitude) + "\nASL:" + MuUtils.ToSI(result.endASL'-1' 4) + "m");                          GUILayout.Label(result.body.GetExperimentBiomeSafe(result.endPosition.latitude' result.endPosition.longitude));                          double error = Vector3d.Distance(mainBody.GetWorldSurfacePosition(result.endPosition.latitude' result.endPosition.longitude' 0) - mainBody.position'                                                           mainBody.GetWorldSurfacePosition(core.target.targetLatitude' core.target.targetLongitude' 0) - mainBody.position);                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label10") + MuUtils.ToSI(error' 0) + "m"                                         + Localizer.Format("#MechJeb_LandingGuidance_Label11") + result.maxDragGees.ToString("F1") +"g"                                         +Localizer.Format("#MechJeb_LandingGuidance_Label12") + result.deltaVExpended.ToString("F1") + "m/s"                                         +Localizer.Format("#MechJeb_LandingGuidance_Label13") + (vessel.Landed ? "0.0s" : GuiUtils.TimeToDHMS(result.endUT - Planetarium.GetUniversalTime()' 1)));//Target difference = \nMax drag: \nDelta-v needed: \nTime to land:                           break;                        case ReentrySimulation.Outcome.AEROBRAKED:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label14"));//Predicted orbit after aerobraking:                          Orbit o = result.AeroBrakeOrbit();                          if (o.eccentricity > 1) GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label15") + o.eccentricity.ToString("F2"));//Hyperbolic' eccentricity =                           else GUILayout.Label(MuUtils.ToSI(o.PeA' 3) + "m x " + MuUtils.ToSI(o.ApA' 3) + "m");                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label16"' result.maxDragGees.ToString("F1"))+Localizer.Format("#MechJeb_LandingGuidance_Label17"' GuiUtils.TimeToDHMS(result.aeroBrakeUT - Planetarium.GetUniversalTime()' 1)));//Max drag:<<1>>g  \nExit atmosphere in:                          break;                        case ReentrySimulation.Outcome.NO_REENTRY:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label18_1")                                        + MuUtils.ToSI(orbit.PeA' 3) + "m Pe > " + MuUtils.ToSI(mainBody.RealMaxAtmosphereAltitude()' 3) + (mainBody.atmosphere ? Localizer.Format("#MechJeb_LandingGuidance_Label18_2") : Localizer.Format("#MechJeb_LandingGuidance_Label18_3")));//"Orbit does not reenter:\n""m atmosphere height""m ground"                          break;                        case ReentrySimulation.Outcome.TIMED_OUT:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label19"));//Reentry simulation timed out.                          break;                  }
Magic Number,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,DrawGUIPrediction,The following statement contains a magic number: switch (result.outcome)                  {                      case ReentrySimulation.Outcome.LANDED:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_label9"));//Landing Predictions:                          GUILayout.Label(Coordinates.ToStringDMS(result.endPosition.latitude' result.endPosition.longitude) + "\nASL:" + MuUtils.ToSI(result.endASL'-1' 4) + "m");                          GUILayout.Label(result.body.GetExperimentBiomeSafe(result.endPosition.latitude' result.endPosition.longitude));                          double error = Vector3d.Distance(mainBody.GetWorldSurfacePosition(result.endPosition.latitude' result.endPosition.longitude' 0) - mainBody.position'                                                           mainBody.GetWorldSurfacePosition(core.target.targetLatitude' core.target.targetLongitude' 0) - mainBody.position);                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label10") + MuUtils.ToSI(error' 0) + "m"                                         + Localizer.Format("#MechJeb_LandingGuidance_Label11") + result.maxDragGees.ToString("F1") +"g"                                         +Localizer.Format("#MechJeb_LandingGuidance_Label12") + result.deltaVExpended.ToString("F1") + "m/s"                                         +Localizer.Format("#MechJeb_LandingGuidance_Label13") + (vessel.Landed ? "0.0s" : GuiUtils.TimeToDHMS(result.endUT - Planetarium.GetUniversalTime()' 1)));//Target difference = \nMax drag: \nDelta-v needed: \nTime to land:                           break;                        case ReentrySimulation.Outcome.AEROBRAKED:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label14"));//Predicted orbit after aerobraking:                          Orbit o = result.AeroBrakeOrbit();                          if (o.eccentricity > 1) GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label15") + o.eccentricity.ToString("F2"));//Hyperbolic' eccentricity =                           else GUILayout.Label(MuUtils.ToSI(o.PeA' 3) + "m x " + MuUtils.ToSI(o.ApA' 3) + "m");                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label16"' result.maxDragGees.ToString("F1"))+Localizer.Format("#MechJeb_LandingGuidance_Label17"' GuiUtils.TimeToDHMS(result.aeroBrakeUT - Planetarium.GetUniversalTime()' 1)));//Max drag:<<1>>g  \nExit atmosphere in:                          break;                        case ReentrySimulation.Outcome.NO_REENTRY:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label18_1")                                        + MuUtils.ToSI(orbit.PeA' 3) + "m Pe > " + MuUtils.ToSI(mainBody.RealMaxAtmosphereAltitude()' 3) + (mainBody.atmosphere ? Localizer.Format("#MechJeb_LandingGuidance_Label18_2") : Localizer.Format("#MechJeb_LandingGuidance_Label18_3")));//"Orbit does not reenter:\n""m atmosphere height""m ground"                          break;                        case ReentrySimulation.Outcome.TIMED_OUT:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label19"));//Reentry simulation timed out.                          break;                  }
Magic Number,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,DrawGUIPrediction,The following statement contains a magic number: switch (result.outcome)                  {                      case ReentrySimulation.Outcome.LANDED:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_label9"));//Landing Predictions:                          GUILayout.Label(Coordinates.ToStringDMS(result.endPosition.latitude' result.endPosition.longitude) + "\nASL:" + MuUtils.ToSI(result.endASL'-1' 4) + "m");                          GUILayout.Label(result.body.GetExperimentBiomeSafe(result.endPosition.latitude' result.endPosition.longitude));                          double error = Vector3d.Distance(mainBody.GetWorldSurfacePosition(result.endPosition.latitude' result.endPosition.longitude' 0) - mainBody.position'                                                           mainBody.GetWorldSurfacePosition(core.target.targetLatitude' core.target.targetLongitude' 0) - mainBody.position);                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label10") + MuUtils.ToSI(error' 0) + "m"                                         + Localizer.Format("#MechJeb_LandingGuidance_Label11") + result.maxDragGees.ToString("F1") +"g"                                         +Localizer.Format("#MechJeb_LandingGuidance_Label12") + result.deltaVExpended.ToString("F1") + "m/s"                                         +Localizer.Format("#MechJeb_LandingGuidance_Label13") + (vessel.Landed ? "0.0s" : GuiUtils.TimeToDHMS(result.endUT - Planetarium.GetUniversalTime()' 1)));//Target difference = \nMax drag: \nDelta-v needed: \nTime to land:                           break;                        case ReentrySimulation.Outcome.AEROBRAKED:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label14"));//Predicted orbit after aerobraking:                          Orbit o = result.AeroBrakeOrbit();                          if (o.eccentricity > 1) GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label15") + o.eccentricity.ToString("F2"));//Hyperbolic' eccentricity =                           else GUILayout.Label(MuUtils.ToSI(o.PeA' 3) + "m x " + MuUtils.ToSI(o.ApA' 3) + "m");                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label16"' result.maxDragGees.ToString("F1"))+Localizer.Format("#MechJeb_LandingGuidance_Label17"' GuiUtils.TimeToDHMS(result.aeroBrakeUT - Planetarium.GetUniversalTime()' 1)));//Max drag:<<1>>g  \nExit atmosphere in:                          break;                        case ReentrySimulation.Outcome.NO_REENTRY:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label18_1")                                        + MuUtils.ToSI(orbit.PeA' 3) + "m Pe > " + MuUtils.ToSI(mainBody.RealMaxAtmosphereAltitude()' 3) + (mainBody.atmosphere ? Localizer.Format("#MechJeb_LandingGuidance_Label18_2") : Localizer.Format("#MechJeb_LandingGuidance_Label18_3")));//"Orbit does not reenter:\n""m atmosphere height""m ground"                          break;                        case ReentrySimulation.Outcome.TIMED_OUT:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label19"));//Reentry simulation timed out.                          break;                  }
Magic Number,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,DrawGUIPrediction,The following statement contains a magic number: switch (result.outcome)                  {                      case ReentrySimulation.Outcome.LANDED:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_label9"));//Landing Predictions:                          GUILayout.Label(Coordinates.ToStringDMS(result.endPosition.latitude' result.endPosition.longitude) + "\nASL:" + MuUtils.ToSI(result.endASL'-1' 4) + "m");                          GUILayout.Label(result.body.GetExperimentBiomeSafe(result.endPosition.latitude' result.endPosition.longitude));                          double error = Vector3d.Distance(mainBody.GetWorldSurfacePosition(result.endPosition.latitude' result.endPosition.longitude' 0) - mainBody.position'                                                           mainBody.GetWorldSurfacePosition(core.target.targetLatitude' core.target.targetLongitude' 0) - mainBody.position);                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label10") + MuUtils.ToSI(error' 0) + "m"                                         + Localizer.Format("#MechJeb_LandingGuidance_Label11") + result.maxDragGees.ToString("F1") +"g"                                         +Localizer.Format("#MechJeb_LandingGuidance_Label12") + result.deltaVExpended.ToString("F1") + "m/s"                                         +Localizer.Format("#MechJeb_LandingGuidance_Label13") + (vessel.Landed ? "0.0s" : GuiUtils.TimeToDHMS(result.endUT - Planetarium.GetUniversalTime()' 1)));//Target difference = \nMax drag: \nDelta-v needed: \nTime to land:                           break;                        case ReentrySimulation.Outcome.AEROBRAKED:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label14"));//Predicted orbit after aerobraking:                          Orbit o = result.AeroBrakeOrbit();                          if (o.eccentricity > 1) GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label15") + o.eccentricity.ToString("F2"));//Hyperbolic' eccentricity =                           else GUILayout.Label(MuUtils.ToSI(o.PeA' 3) + "m x " + MuUtils.ToSI(o.ApA' 3) + "m");                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label16"' result.maxDragGees.ToString("F1"))+Localizer.Format("#MechJeb_LandingGuidance_Label17"' GuiUtils.TimeToDHMS(result.aeroBrakeUT - Planetarium.GetUniversalTime()' 1)));//Max drag:<<1>>g  \nExit atmosphere in:                          break;                        case ReentrySimulation.Outcome.NO_REENTRY:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label18_1")                                        + MuUtils.ToSI(orbit.PeA' 3) + "m Pe > " + MuUtils.ToSI(mainBody.RealMaxAtmosphereAltitude()' 3) + (mainBody.atmosphere ? Localizer.Format("#MechJeb_LandingGuidance_Label18_2") : Localizer.Format("#MechJeb_LandingGuidance_Label18_3")));//"Orbit does not reenter:\n""m atmosphere height""m ground"                          break;                        case ReentrySimulation.Outcome.TIMED_OUT:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label19"));//Reentry simulation timed out.                          break;                  }
Magic Number,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,LandingSimTime,The following statement contains a magic number: return (stopwatch.ElapsedMilliseconds / 1000d).ToString("F1") + "/" + lastSimTime.ToString("F2") + " (" + lastSimSteps + ")\n"                  + (errorStopwatch.ElapsedMilliseconds / 1000d).ToString("F1") + "/" + lastErrorSimTime.ToString("F2") + " (" + lastErrorSimSteps + ")\n"                  + ReentrySimulation.activeDt.ToString("F2") + " " + ReentrySimulation.activeStep + "\n"                  + dt.ToString("F2") + " " + Time.fixedDeltaTime.ToString("F2") + " " + parachuteSemiDeployMultiplier.ToString("F3");
Magic Number,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,LandingSimTime,The following statement contains a magic number: return (stopwatch.ElapsedMilliseconds / 1000d).ToString("F1") + "/" + lastSimTime.ToString("F2") + " (" + lastSimSteps + ")\n"                  + (errorStopwatch.ElapsedMilliseconds / 1000d).ToString("F1") + "/" + lastErrorSimTime.ToString("F2") + " (" + lastErrorSimSteps + ")\n"                  + ReentrySimulation.activeDt.ToString("F2") + " " + ReentrySimulation.activeStep + "\n"                  + dt.ToString("F2") + " " + Time.fixedDeltaTime.ToString("F2") + " " + parachuteSemiDeployMultiplier.ToString("F3");
Magic Number,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,StartSimulation,The following statement contains a magic number: parachuteMultiplierForThisSimulation *= 1d + (random.Next(1000000) - 500000d) / 10000000d;
Magic Number,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,StartSimulation,The following statement contains a magic number: parachuteMultiplierForThisSimulation *= 1d + (random.Next(1000000) - 500000d) / 10000000d;
Magic Number,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,StartSimulation,The following statement contains a magic number: parachuteMultiplierForThisSimulation *= 1d + (random.Next(1000000) - 500000d) / 10000000d;
Magic Number,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,RunSimulation,The following statement contains a magic number: lastErrorSimTime = millisecondsToCompletion * 0.001;
Magic Number,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,RunSimulation,The following statement contains a magic number: millisecondsBetweenErrorSimulations = Math.Min(Math.Max(4 * millisecondsToCompletion' 400)' 5);
Magic Number,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,RunSimulation,The following statement contains a magic number: millisecondsBetweenErrorSimulations = Math.Min(Math.Max(4 * millisecondsToCompletion' 400)' 5);
Magic Number,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,RunSimulation,The following statement contains a magic number: millisecondsBetweenErrorSimulations = Math.Min(Math.Max(4 * millisecondsToCompletion' 400)' 5);
Magic Number,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,DoMapView,The following statement contains a magic number: GLUtils.DrawGroundMarker(drawnResult.body' drawnResult.endPosition.latitude' drawnResult.endPosition.longitude' Color.blue' MapView.MapIsEnabled' 60);
Magic Number,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,DoMapView,The following statement contains a magic number: double interval = Math.Max(Math.Min((drawnResult.endUT - drawnResult.input_UT) / 1000' 10)' 0.1);
Magic Number,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,DoMapView,The following statement contains a magic number: double interval = Math.Max(Math.Min((drawnResult.endUT - drawnResult.input_UT) / 1000' 10)' 0.1);
Magic Number,MuMech,MechJebModuleLandingPredictions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingPredictions.cs,DoMapView,The following statement contains a magic number: double interval = Math.Max(Math.Min((drawnResult.endUT - drawnResult.input_UT) / 1000' 10)' 0.1);
Magic Number,MuMech,MechJebModuleLogicalStageTracking,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLogicalStageTracking.cs,Update,The following statement contains a magic number: stats.deltaV < 20
Magic Number,MuMech,Stage,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLogicalStageTracking.cs,Sync,The following statement contains a magic number: startThrust = vacStats.startThrust * 1000;
Magic Number,MuMech,Stage,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLogicalStageTracking.cs,Sync,The following statement contains a magic number: startMass = vacStats.startMass * 1000;
Magic Number,MuMech,Stage,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLogicalStageTracking.cs,Sync,The following statement contains a magic number: endMass = vacStats.endMass * 1000;
Magic Number,MuMech,MechJebModuleManeuverPlanner,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleManeuverPlanner.cs,WindowGUI,The following statement contains a magic number: core.node.tolerance.text = GUILayout.TextField(core.node.tolerance.text' GUILayout.Width(35)' GUILayout.ExpandWidth(false));
Magic Number,MuMech,MechJebModuleManeuverPlanner,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleManeuverPlanner.cs,WindowGUI,The following statement contains a magic number: core.node.tolerance.val += 0.1;
Magic Number,MuMech,MechJebModuleManeuverPlanner,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleManeuverPlanner.cs,WindowGUI,The following statement contains a magic number: core.node.tolerance.val -= core.node.tolerance.val > 0.1 ? 0.1 : 0.0;
Magic Number,MuMech,MechJebModuleManeuverPlanner,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleManeuverPlanner.cs,WindowGUI,The following statement contains a magic number: core.node.tolerance.val -= core.node.tolerance.val > 0.1 ? 0.1 : 0.0;
Magic Number,MuMech,MechJebModuleManeuverPlanner,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleManeuverPlanner.cs,WindowGUI,The following statement contains a magic number: core.node.tolerance.val = 0.1;
Magic Number,MuMech,MechJebModuleManeuverPlanner,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleManeuverPlanner.cs,WindowGUI,The following statement contains a magic number: core.node.leadTime.text = GUILayout.TextField(core.node.leadTime.text' GUILayout.Width(35)' GUILayout.ExpandWidth(false));
Magic Number,MuMech,MechJebModuleManeuverPlanner,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleManeuverPlanner.cs,WindowGUI,The following statement contains a magic number: core.node.leadTime.val = 3;
Magic Number,MuMech,MechJebModuleManeuverPlanner,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleManeuverPlanner.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(300)' GUILayout.Height(150) };
Magic Number,MuMech,MechJebModuleManeuverPlanner,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleManeuverPlanner.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(300)' GUILayout.Height(150) };
Magic Number,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,MechJebModuleMenu,The following statement contains a magic number: priority = -1000;
Magic Number,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,WindowGUI,The following statement contains a magic number: HideMenuButton && GUI.Button(new Rect(2' 2' 16' 16)' "")
Magic Number,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,WindowGUI,The following statement contains a magic number: HideMenuButton && GUI.Button(new Rect(2' 2' 16' 16)' "")
Magic Number,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,WindowGUI,The following statement contains a magic number: HideMenuButton && GUI.Button(new Rect(2' 2' 16' 16)' "")
Magic Number,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,WindowGUI,The following statement contains a magic number: HideMenuButton && GUI.Button(new Rect(2' 2' 16' 16)' "")
Magic Number,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,SetupToolBarButtons,The following statement contains a magic number: CreateFeatureButton(maneuverPlannerModule' "Exec_Node"' "MechJeb Execute Next Node"' (b) =>                      {                          if (vessel.patchedConicSolver.maneuverNodes.Count > 0 && core.node != null)                          {                              if (core.node.enabled)                              {                                  core.node.Abort();                              }                              else                              {                                  if (vessel.patchedConicSolver.maneuverNodes[0].DeltaV.magnitude > 0.0001)                                  {                                      core.node.ExecuteOneNode(maneuverPlannerModule);                                  }                                  else                                  {                                      ScreenMessages.PostScreenMessage("Maneuver burn vector not set"' 3f);                                  }                              }                          }                          else                          {                              ScreenMessages.PostScreenMessage("No maneuver nodes"' 2f);                          }                      }' () => vessel.patchedConicSolver.maneuverNodes.Count > 0 && core.node != null && core.node.enabled);
Magic Number,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,SetupToolBarButtons,The following statement contains a magic number: CreateFeatureButton(maneuverPlannerModule' "Exec_Node"' "MechJeb Execute Next Node"' (b) =>                      {                          if (vessel.patchedConicSolver.maneuverNodes.Count > 0 && core.node != null)                          {                              if (core.node.enabled)                              {                                  core.node.Abort();                              }                              else                              {                                  if (vessel.patchedConicSolver.maneuverNodes[0].DeltaV.magnitude > 0.0001)                                  {                                      core.node.ExecuteOneNode(maneuverPlannerModule);                                  }                                  else                                  {                                      ScreenMessages.PostScreenMessage("Maneuver burn vector not set"' 3f);                                  }                              }                          }                          else                          {                              ScreenMessages.PostScreenMessage("No maneuver nodes"' 2f);                          }                      }' () => vessel.patchedConicSolver.maneuverNodes.Count > 0 && core.node != null && core.node.enabled);
Magic Number,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,SetupToolBarButtons,The following statement contains a magic number: CreateFeatureButton(maneuverPlannerModule' "Exec_Node"' "MechJeb Execute Next Node"' (b) =>                      {                          if (vessel.patchedConicSolver.maneuverNodes.Count > 0 && core.node != null)                          {                              if (core.node.enabled)                              {                                  core.node.Abort();                              }                              else                              {                                  if (vessel.patchedConicSolver.maneuverNodes[0].DeltaV.magnitude > 0.0001)                                  {                                      core.node.ExecuteOneNode(maneuverPlannerModule);                                  }                                  else                                  {                                      ScreenMessages.PostScreenMessage("Maneuver burn vector not set"' 3f);                                  }                              }                          }                          else                          {                              ScreenMessages.PostScreenMessage("No maneuver nodes"' 2f);                          }                      }' () => vessel.patchedConicSolver.maneuverNodes.Count > 0 && core.node != null && core.node.enabled);
Magic Number,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,DrawGUI,The following statement contains a magic number: GUI.depth = -100;
Magic Number,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,DrawGUI,The following statement contains a magic number: GUI.matrix = GUI.matrix*Matrix4x4.TRS(Vector3.zero' Quaternion.Euler(new Vector3(0' 0' -90))' Vector3.one);
Magic Number,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,DrawGUI,The following statement contains a magic number: GUI.depth = -99;
Magic Number,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,DrawGUI,The following statement contains a magic number: windowPos = GUILayout.Window(GetType().FullName.GetHashCode()' displayedPos' WindowGUI' "MechJeb " + core.version' GUILayout.Width(colWidth)' GUILayout.Height(20));
Magic Number,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,DrawGUI,The following statement contains a magic number: GUI.depth = -98;
Magic Number,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,OnMenuUpdate,The following statement contains a magic number: windowVPos = Mathf.Clamp(Input.mousePosition.y - Screen.height - 50' -Screen.width' 0)/GuiUtils.scale;
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,MergeNext,The following statement contains a magic number: double newUT = (cur.UT + next.UT) / 2;
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The following statement contains a magic number: GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_NodeEd_Label2")' prograde' "m/s"' 60);
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The following statement contains a magic number: progradeDelta.text = GUILayout.TextField(progradeDelta.text' GUILayout.Width(50));
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The following statement contains a magic number: GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_NodeEd_Label3")' radialPlus' "m/s"' 60);
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The following statement contains a magic number: radialPlusDelta.text = GUILayout.TextField(radialPlusDelta.text' GUILayout.Width(50));
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The following statement contains a magic number: GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_NodeEd_Label4")' normalPlus' "m/s"' 60);
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The following statement contains a magic number: normalPlusDelta.text = GUILayout.TextField(normalPlusDelta.text' GUILayout.Width(50));
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The following statement contains a magic number: progradeDelta = radialPlusDelta = normalPlusDelta = 0.01;
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The following statement contains a magic number: progradeDelta = radialPlusDelta = normalPlusDelta = 0.1;
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The following statement contains a magic number: progradeDelta = radialPlusDelta = normalPlusDelta = 10;
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The following statement contains a magic number: progradeDelta = radialPlusDelta = normalPlusDelta = 100;
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The following statement contains a magic number: timeOffset.text = GUILayout.TextField(timeOffset.text' GUILayout.Width(100));
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The following statement contains a magic number: switch (snap)                  {                      case Snap.PERIAPSIS:                          UT = o.NextPeriapsisTime(o.eccentricity < 1 ? UT - o.period / 2 : UT);                          break;                        case Snap.APOAPSIS:                          if (o.eccentricity < 1) UT = o.NextApoapsisTime(UT - o.period / 2);                          break;                        case Snap.EQ_ASCENDING:                          if (o.AscendingNodeEquatorialExists()) UT = o.TimeOfAscendingNodeEquatorial(UT - o.period / 2);                          break;                        case Snap.EQ_DESCENDING:                          if (o.DescendingNodeEquatorialExists()) UT = o.TimeOfDescendingNodeEquatorial(UT - o.period / 2);                          break;                        case Snap.REL_ASCENDING:                          if (core.target.NormalTargetExists && core.target.TargetOrbit.referenceBody == o.referenceBody)                          {                              if (o.AscendingNodeExists(core.target.TargetOrbit)) UT = o.TimeOfAscendingNode(core.target.TargetOrbit' UT - o.period / 2);                          }                          break;                        case Snap.REL_DESCENDING:                          if (core.target.NormalTargetExists && core.target.TargetOrbit.referenceBody == o.referenceBody)                          {                              if (o.DescendingNodeExists(core.target.TargetOrbit)) UT = o.TimeOfDescendingNode(core.target.TargetOrbit' UT - o.period / 2);                          }                          break;                  }
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The following statement contains a magic number: switch (snap)                  {                      case Snap.PERIAPSIS:                          UT = o.NextPeriapsisTime(o.eccentricity < 1 ? UT - o.period / 2 : UT);                          break;                        case Snap.APOAPSIS:                          if (o.eccentricity < 1) UT = o.NextApoapsisTime(UT - o.period / 2);                          break;                        case Snap.EQ_ASCENDING:                          if (o.AscendingNodeEquatorialExists()) UT = o.TimeOfAscendingNodeEquatorial(UT - o.period / 2);                          break;                        case Snap.EQ_DESCENDING:                          if (o.DescendingNodeEquatorialExists()) UT = o.TimeOfDescendingNodeEquatorial(UT - o.period / 2);                          break;                        case Snap.REL_ASCENDING:                          if (core.target.NormalTargetExists && core.target.TargetOrbit.referenceBody == o.referenceBody)                          {                              if (o.AscendingNodeExists(core.target.TargetOrbit)) UT = o.TimeOfAscendingNode(core.target.TargetOrbit' UT - o.period / 2);                          }                          break;                        case Snap.REL_DESCENDING:                          if (core.target.NormalTargetExists && core.target.TargetOrbit.referenceBody == o.referenceBody)                          {                              if (o.DescendingNodeExists(core.target.TargetOrbit)) UT = o.TimeOfDescendingNode(core.target.TargetOrbit' UT - o.period / 2);                          }                          break;                  }
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The following statement contains a magic number: switch (snap)                  {                      case Snap.PERIAPSIS:                          UT = o.NextPeriapsisTime(o.eccentricity < 1 ? UT - o.period / 2 : UT);                          break;                        case Snap.APOAPSIS:                          if (o.eccentricity < 1) UT = o.NextApoapsisTime(UT - o.period / 2);                          break;                        case Snap.EQ_ASCENDING:                          if (o.AscendingNodeEquatorialExists()) UT = o.TimeOfAscendingNodeEquatorial(UT - o.period / 2);                          break;                        case Snap.EQ_DESCENDING:                          if (o.DescendingNodeEquatorialExists()) UT = o.TimeOfDescendingNodeEquatorial(UT - o.period / 2);                          break;                        case Snap.REL_ASCENDING:                          if (core.target.NormalTargetExists && core.target.TargetOrbit.referenceBody == o.referenceBody)                          {                              if (o.AscendingNodeExists(core.target.TargetOrbit)) UT = o.TimeOfAscendingNode(core.target.TargetOrbit' UT - o.period / 2);                          }                          break;                        case Snap.REL_DESCENDING:                          if (core.target.NormalTargetExists && core.target.TargetOrbit.referenceBody == o.referenceBody)                          {                              if (o.DescendingNodeExists(core.target.TargetOrbit)) UT = o.TimeOfDescendingNode(core.target.TargetOrbit' UT - o.period / 2);                          }                          break;                  }
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The following statement contains a magic number: switch (snap)                  {                      case Snap.PERIAPSIS:                          UT = o.NextPeriapsisTime(o.eccentricity < 1 ? UT - o.period / 2 : UT);                          break;                        case Snap.APOAPSIS:                          if (o.eccentricity < 1) UT = o.NextApoapsisTime(UT - o.period / 2);                          break;                        case Snap.EQ_ASCENDING:                          if (o.AscendingNodeEquatorialExists()) UT = o.TimeOfAscendingNodeEquatorial(UT - o.period / 2);                          break;                        case Snap.EQ_DESCENDING:                          if (o.DescendingNodeEquatorialExists()) UT = o.TimeOfDescendingNodeEquatorial(UT - o.period / 2);                          break;                        case Snap.REL_ASCENDING:                          if (core.target.NormalTargetExists && core.target.TargetOrbit.referenceBody == o.referenceBody)                          {                              if (o.AscendingNodeExists(core.target.TargetOrbit)) UT = o.TimeOfAscendingNode(core.target.TargetOrbit' UT - o.period / 2);                          }                          break;                        case Snap.REL_DESCENDING:                          if (core.target.NormalTargetExists && core.target.TargetOrbit.referenceBody == o.referenceBody)                          {                              if (o.DescendingNodeExists(core.target.TargetOrbit)) UT = o.TimeOfDescendingNode(core.target.TargetOrbit' UT - o.period / 2);                          }                          break;                  }
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The following statement contains a magic number: switch (snap)                  {                      case Snap.PERIAPSIS:                          UT = o.NextPeriapsisTime(o.eccentricity < 1 ? UT - o.period / 2 : UT);                          break;                        case Snap.APOAPSIS:                          if (o.eccentricity < 1) UT = o.NextApoapsisTime(UT - o.period / 2);                          break;                        case Snap.EQ_ASCENDING:                          if (o.AscendingNodeEquatorialExists()) UT = o.TimeOfAscendingNodeEquatorial(UT - o.period / 2);                          break;                        case Snap.EQ_DESCENDING:                          if (o.DescendingNodeEquatorialExists()) UT = o.TimeOfDescendingNodeEquatorial(UT - o.period / 2);                          break;                        case Snap.REL_ASCENDING:                          if (core.target.NormalTargetExists && core.target.TargetOrbit.referenceBody == o.referenceBody)                          {                              if (o.AscendingNodeExists(core.target.TargetOrbit)) UT = o.TimeOfAscendingNode(core.target.TargetOrbit' UT - o.period / 2);                          }                          break;                        case Snap.REL_DESCENDING:                          if (core.target.NormalTargetExists && core.target.TargetOrbit.referenceBody == o.referenceBody)                          {                              if (o.DescendingNodeExists(core.target.TargetOrbit)) UT = o.TimeOfDescendingNode(core.target.TargetOrbit' UT - o.period / 2);                          }                          break;                  }
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The following statement contains a magic number: switch (snap)                  {                      case Snap.PERIAPSIS:                          UT = o.NextPeriapsisTime(o.eccentricity < 1 ? UT - o.period / 2 : UT);                          break;                        case Snap.APOAPSIS:                          if (o.eccentricity < 1) UT = o.NextApoapsisTime(UT - o.period / 2);                          break;                        case Snap.EQ_ASCENDING:                          if (o.AscendingNodeEquatorialExists()) UT = o.TimeOfAscendingNodeEquatorial(UT - o.period / 2);                          break;                        case Snap.EQ_DESCENDING:                          if (o.DescendingNodeEquatorialExists()) UT = o.TimeOfDescendingNodeEquatorial(UT - o.period / 2);                          break;                        case Snap.REL_ASCENDING:                          if (core.target.NormalTargetExists && core.target.TargetOrbit.referenceBody == o.referenceBody)                          {                              if (o.AscendingNodeExists(core.target.TargetOrbit)) UT = o.TimeOfAscendingNode(core.target.TargetOrbit' UT - o.period / 2);                          }                          break;                        case Snap.REL_DESCENDING:                          if (core.target.NormalTargetExists && core.target.TargetOrbit.referenceBody == o.referenceBody)                          {                              if (o.DescendingNodeExists(core.target.TargetOrbit)) UT = o.TimeOfDescendingNode(core.target.TargetOrbit' UT - o.period / 2);                          }                          break;                  }
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The following statement contains a magic number: core.node.tolerance.text = GUILayout.TextField(core.node.tolerance.text' GUILayout.Width(35)' GUILayout.ExpandWidth(false));
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,LimitedRepeatButtoon,The following statement contains a magic number: nextClick = Time.time + 0.2f;
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,RelativityModeSelectUI,The following statement contains a magic number: int newRelativityMode = GUILayout.SelectionGrid((int)vessel.patchedConicRenderer.relativityMode' relativityModeStrings' 5);
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(300)' GUILayout.Height(150) };
Magic Number,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(300)' GUILayout.Height(150) };
Magic Number,MuMech,MechJebModuleNodeExecutor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeExecutor.cs,OnFixedUpdate,The following statement contains a magic number: dVLeft < tolerance && core.attitude.attitudeAngleFromTarget() > 5
Magic Number,MuMech,MechJebModuleNodeExecutor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeExecutor.cs,OnFixedUpdate,The following statement contains a magic number: (core.attitude.attitudeAngleFromTarget() < 1 && core.vessel.angularVelocity.magnitude < 0.001) || (core.attitude.attitudeAngleFromTarget() < 10 && !MuUtils.PhysicsRunning())
Magic Number,MuMech,MechJebModuleNodeExecutor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeExecutor.cs,OnFixedUpdate,The following statement contains a magic number: (core.attitude.attitudeAngleFromTarget() < 1 && core.vessel.angularVelocity.magnitude < 0.001) || (core.attitude.attitudeAngleFromTarget() < 10 && !MuUtils.PhysicsRunning())
Magic Number,MuMech,MechJebModuleNodeExecutor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeExecutor.cs,OnFixedUpdate,The following statement contains a magic number: double timeConstant = (dVLeft > 10 || vesselState.minThrustAccel > 0.25 * vesselState.maxThrustAccel ? 0.5 : 2);
Magic Number,MuMech,MechJebModuleNodeExecutor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeExecutor.cs,OnFixedUpdate,The following statement contains a magic number: double timeConstant = (dVLeft > 10 || vesselState.minThrustAccel > 0.25 * vesselState.maxThrustAccel ? 0.5 : 2);
Magic Number,MuMech,MechJebModuleNodeExecutor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeExecutor.cs,OnFixedUpdate,The following statement contains a magic number: double timeConstant = (dVLeft > 10 || vesselState.minThrustAccel > 0.25 * vesselState.maxThrustAccel ? 0.5 : 2);
Magic Number,MuMech,MechJebModuleNodeExecutor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeExecutor.cs,OnFixedUpdate,The following statement contains a magic number: double timeConstant = (dVLeft > 10 || vesselState.minThrustAccel > 0.25 * vesselState.maxThrustAccel ? 0.5 : 2);
Magic Number,MuMech,MechJebModuleNodeExecutor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeExecutor.cs,OnFixedUpdate,The following statement contains a magic number: core.attitude.attitudeAngleFromTarget() < 90
Magic Number,MuMech,MechJebModuleNodeExecutor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeExecutor.cs,BurnTime,The following statement contains a magic number: double halfDvLeft = dv / 2;
Magic Number,MuMech,MechJebModuleNodeExecutor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeExecutor.cs,BurnTime,The following statement contains a magic number: double stageAvgAccel = s.startThrust / ((s.startMass + stageBurnFinalMass) / 2d);
Magic Number,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,OnFixedUpdate,The following statement contains a magic number: ticks = 2;
Magic Number,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,OnFixedUpdate,The following statement contains a magic number: Vector3d x1 = vesselState.orbitalPosition + vesselState.orbitalVelocity * dt + 1/2 * a0 * dt * dt;
Magic Number,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,approximateDeltaV,The following statement contains a magic number: double addE = mainBody.gravParameter * ( 2 * sma - mainBody.Radius ) / ( 2 * sma * mainBody.Radius );
Magic Number,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,approximateDeltaV,The following statement contains a magic number: double addE = mainBody.gravParameter * ( 2 * sma - mainBody.Radius ) / ( 2 * sma * mainBody.Radius );
Magic Number,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,approximateDeltaV,The following statement contains a magic number: return Math.Sqrt( 2 * addE ) + 2000;
Magic Number,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,approximateDeltaV,The following statement contains a magic number: return Math.Sqrt( 2 * addE ) + 2000;
Magic Number,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,NewPontryaginForLaunch,The following statement contains a magic number: Vector3d desiredThrustVector = Math.Cos(45 * UtilMath.Deg2Rad) * desiredHeadingVector + Math.Sin(45 * UtilMath.Deg2Rad) * vesselState.up;
Magic Number,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,NewPontryaginForLaunch,The following statement contains a magic number: Vector3d desiredThrustVector = Math.Cos(45 * UtilMath.Deg2Rad) * desiredHeadingVector + Math.Sin(45 * UtilMath.Deg2Rad) * vesselState.up;
Magic Number,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,converge,The following statement contains a magic number: (vesselState.time - last_optimizer_time) < MuUtils.Clamp(pvgInterval' 1.00' 30.00)
Magic Number,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,converge,The following statement contains a magic number: p.solution != null && p.solution.arc(vesselState.time).thrust == 0 && p.solution.current_tgo(vesselState.time) < 10
Magic Number,MuMech,MechJebModuleGuidanceController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleGuidanceController.cs,handle_throttle,The following statement contains a magic number: vesselState.time < last_stage_time + 4
Magic Number,MuMech,MechJebModuleRCSBalancer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSBalancer.cs,RCSBalancerInfoItem,The following statement contains a magic number: GuiUtils.SimpleLabel(Localizer.Format("#MechJeb_RCSBalancerInfo_Label1")' (solverThread.calculationTime * 1000).ToString("F0") + " ms");
Magic Number,MuMech,MechJebModuleRCSBalancer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSBalancer.cs,RCSThrusterStateInfoItem,The following statement contains a magic number: thrusterStates += String.Format("({0:F0}:"' pm.thrusterPower * 9);
Magic Number,MuMech,MechJebModuleRCSBalancer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSBalancer.cs,RCSThrusterStateInfoItem,The following statement contains a magic number: thrusterStates += (pm.thrustForces[i] * 9).ToString("F0");
Magic Number,MuMech,MechJebModuleRCSBalancer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSBalancer.cs,MechJebModuleRCSBalancer,The following statement contains a magic number: priority = 700;
Magic Number,MuMech,MechJebModuleRCSBalancerWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSBalancerWindow.cs,WindowGUI,The following statement contains a magic number: balancer.smartTranslation = GUILayout.Toggle(balancer.smartTranslation' Localizer.Format("#MechJeb_RCSBalancer_checkbox1")' GUILayout.Width(130));
Magic Number,MuMech,MechJebModuleRCSBalancerWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSBalancerWindow.cs,WindowGUI,The following statement contains a magic number: const int sliderPrecision = 3;
Magic Number,MuMech,MechJebModuleRCSBalancerWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSBalancerWindow.cs,WindowGUI,The following statement contains a magic number: balancer.overdrive = new EditableDoubleMult(rounded' 0.01);
Magic Number,MuMech,MechJebModuleRCSBalancerWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSBalancerWindow.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(240)' GUILayout.Height(30) };
Magic Number,MuMech,MechJebModuleRCSBalancerWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSBalancerWindow.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(240)' GUILayout.Height(30) };
Magic Number,MuMech,MechJebModuleRCSController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSController.cs,MechJebModuleRCSController,The following statement contains a magic number: priority = 600;
Magic Number,MuMech,MechJebModuleRCSController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSController.cs,PIDGUI,The following statement contains a magic number: Kp.text = GUILayout.TextField(Kp.text' GUILayout.ExpandWidth(true)' GUILayout.Width(60));
Magic Number,MuMech,MechJebModuleRCSController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSController.cs,PIDGUI,The following statement contains a magic number: Kd.text = GUILayout.TextField(Kd.text' GUILayout.ExpandWidth(true)' GUILayout.Width(60));
Magic Number,MuMech,MechJebModuleRCSController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSController.cs,PIDGUI,The following statement contains a magic number: Ki.text = GUILayout.TextField(Ki.text' GUILayout.ExpandWidth(true)' GUILayout.Width(60));
Magic Number,MuMech,MechJebModuleRCSController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSController.cs,Drive,The following statement contains a magic number: dirAvail  > 0 && Math.Abs(dirDv) > 0.001
Magic Number,MuMech,MechJebModuleRendezvousAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilot.cs,Drive,The following statement contains a magic number: core.node.autowarp = core.node.autowarp && core.target.Distance > 1000;
Magic Number,MuMech,MechJebModuleRendezvousAutopilotWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilotWindow.cs,WindowGUI,The following statement contains a magic number: autopilot.maxPhasingOrbits < 5
Magic Number,MuMech,MechJebModuleRendezvousAutopilotWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilotWindow.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(300)' GUILayout.Height(50) };
Magic Number,MuMech,MechJebModuleRendezvousAutopilotWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousAutopilotWindow.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(300)' GUILayout.Height(50) };
Magic Number,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The following statement contains a magic number: const double leadTime = 30;
Magic Number,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The following statement contains a magic number: GuiUtils.SimpleLabel(Localizer.Format("#MechJeb_RZplan_label4")' MuUtils.ToSI(core.target.TargetOrbit.PeA' 3) + "m x " + MuUtils.ToSI(core.target.TargetOrbit.ApA' 3) + "m");
Magic Number,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The following statement contains a magic number: GuiUtils.SimpleLabel(Localizer.Format("#MechJeb_RZplan_label4")' MuUtils.ToSI(core.target.TargetOrbit.PeA' 3) + "m x " + MuUtils.ToSI(core.target.TargetOrbit.ApA' 3) + "m");
Magic Number,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The following statement contains a magic number: GuiUtils.SimpleLabel(Localizer.Format("#MechJeb_RZplan_label5")' MuUtils.ToSI(orbit.PeA' 3) + "m x " + MuUtils.ToSI(orbit.ApA' 3) + "m");
Magic Number,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The following statement contains a magic number: GuiUtils.SimpleLabel(Localizer.Format("#MechJeb_RZplan_label5")' MuUtils.ToSI(orbit.PeA' 3) + "m x " + MuUtils.ToSI(orbit.ApA' 3) + "m");
Magic Number,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The following statement contains a magic number: phasingOrbitAltitude.text = GUILayout.TextField(phasingOrbitAltitude.text' GUILayout.Width(70));
Magic Number,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The following statement contains a magic number: Vector3d dV = OrbitalManeuverCalculator.DeltaVToInterceptAtTime(orbit' UT' core.target.TargetOrbit' 100' 10);
Magic Number,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The following statement contains a magic number: Vector3d dV = OrbitalManeuverCalculator.DeltaVToInterceptAtTime(orbit' UT' core.target.TargetOrbit' 100' 10);
Magic Number,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The following statement contains a magic number: core.node.tolerance.text = GUILayout.TextField(core.node.tolerance.text' GUILayout.Width(35)' GUILayout.ExpandWidth(false));
Magic Number,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The following statement contains a magic number: core.node.tolerance.val += 0.1;
Magic Number,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The following statement contains a magic number: core.node.tolerance.val -= core.node.tolerance.val > 0.1 ? 0.1 : 0.0;
Magic Number,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The following statement contains a magic number: core.node.tolerance.val -= core.node.tolerance.val > 0.1 ? 0.1 : 0.0;
Magic Number,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowGUI,The following statement contains a magic number: core.node.tolerance.val = 0.1;
Magic Number,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(300)' GUILayout.Height(150) };
Magic Number,MuMech,MechJebModuleRendezvousGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRendezvousGuidance.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(300)' GUILayout.Height(150) };
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,HeadingToPos,The following statement contains a magic number: diff += 360;
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,HeadingToPos,The following statement contains a magic number: diff < -180
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,HeadingToPos,The following statement contains a magic number: diff -= 360;
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,HeadingToPos,The following statement contains a magic number: diff >  180
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,TurningSpeed,The following statement contains a magic number: return (float)Math.Max(speed / (Math.Abs(error) / 3 > 1 ? Math.Abs(error) / 3 : 1)' turnSpeed);
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,TurningSpeed,The following statement contains a magic number: return (float)Math.Max(speed / (Math.Abs(error) / 3 > 1 ? Math.Abs(error) / 3 : 1)' turnSpeed);
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,CalculateTraction,The following statement contains a magic number: Physics.Raycast(vessel.CoM + vesselState.surfaceVelocity * terrainLookAhead + vesselState.up * 100' -vesselState.up' out hit' 500' 1 << 15);
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,CalculateTraction,The following statement contains a magic number: Physics.Raycast(vessel.CoM + vesselState.surfaceVelocity * terrainLookAhead + vesselState.up * 100' -vesselState.up' out hit' 500' 1 << 15);
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,CalculateTraction,The following statement contains a magic number: Physics.Raycast(vessel.CoM + vesselState.surfaceVelocity * terrainLookAhead + vesselState.up * 100' -vesselState.up' out hit' 500' 1 << 15);
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,CalculateTraction,The following statement contains a magic number: traction += 100;
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The following statement contains a magic number: distance += (float)(wp.Target.srfSpeed * curSpeed) / 2;
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The following statement contains a magic number: var minSpeed = (wp.MinSpeed > 0 ? wp.MinSpeed :  					               (nextWP != null ? TurningSpeed((nextWP.MaxSpeed > 0 ? nextWP.MaxSpeed : speed)' heading - HeadingToPos(wp.Position' nextWP.Position)) :  					               (distance - wp.Radius > 50 ? turnSpeed.val : 1)));
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The following statement contains a magic number: var radius = Math.Max(wp.Radius' 10);
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The following statement contains a magic number: newSpeed = new [] { newSpeed' (distance < radius * 0.8 ? 0 : 1) }.Min();
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The following statement contains a magic number: float limit = (Math.Abs(curSpeed) > turnSpeed ? Mathf.Clamp((float)((turnSpeed + 6) / Square(curSpeed))' 0.1f' 1f) : 1f);
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The following statement contains a magic number: float limit = (Math.Abs(curSpeed) > turnSpeed ? Mathf.Clamp((float)((turnSpeed + 6) / Square(curSpeed))' 0.1f' 1f) : 1f);
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The following statement contains a magic number: Vector3 fwd = (Vector3)(traction > 0 ? // V when the speed is low go for the vessels forward' else with a bit of velocity  //				                        ((Mathf.Abs(fSpeed) <= turnSpeed ? vesselState.forward : vesselState.surfaceVelocity / 4) - vessel.transform.right * s.wheelSteer) * Mathf.Sign(fSpeed) :  //				                        // ^ and then add the steering  				                        vesselState.forward * 4 - vessel.transform.right * s.wheelSteer * Mathf.Sign(fSpeed) : // and then add the steering  				                        vesselState.surfaceVelocity);
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The following statement contains a magic number: openSolars && energyLeft > 0.99
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The following statement contains a magic number: energyLeft < 0.05 && Math.Sign(s.wheelThrottle) + Math.Sign(curSpeed) != 0
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The following statement contains a magic number: openSolars || energyLeft < 0.03
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The following statement contains a magic number: curSpeed < brakeSpeedLimit && (energyLeft < 0.05 || openSolars)
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The following statement contains a magic number: curSpeed < 0.1 && energyLeft < 0.05 && !waitingForDaylight &&  				    vessel.FindPartModulesImplementing<ModuleDeployableSolarPanel>().FindAll(p => p.deployState == ModuleDeployablePart.DeployState.EXTENDED).Count > 0
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The following statement contains a magic number: curSpeed < 0.1 && energyLeft < 0.05 && !waitingForDaylight &&  				    vessel.FindPartModulesImplementing<ModuleDeployableSolarPanel>().FindAll(p => p.deployState == ModuleDeployablePart.DeployState.EXTENDED).Count > 0
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The following statement contains a magic number: tractionLimit = (double)Mathf.Clamp((float)tractionLimit' 0' 100);
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,Drive,The following statement contains a magic number: brake && curSpeed < 0.1
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,OnFixedUpdate,The following statement contains a magic number: lastETA + 0.2 < DateTime.Now.TimeOfDay.TotalSeconds
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,OnUpdate,The following statement contains a magic number: core.warp.WarpRegularAtRate(energyLeft < 0.9 ? 1000 : 50);
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,OnUpdate,The following statement contains a magic number: core.warp.WarpRegularAtRate(energyLeft < 0.9 ? 1000 : 50);
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,OnUpdate,The following statement contains a magic number: core.warp.WarpRegularAtRate(energyLeft < 0.9 ? 1000 : 50);
Magic Number,MuMech,MechJebModuleRoverController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverController.cs,OnUpdate,The following statement contains a magic number: energyLeft > 0.99
Magic Number,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(200)' GUILayout.Height(50) };
Magic Number,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(200)' GUILayout.Height(50) };
Magic Number,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowGUI,The following statement contains a magic number: GUI.Button(new Rect(windowPos.width - 48' 0' 13' 20)' "?"' GuiUtils.yellowOnHover)
Magic Number,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowGUI,The following statement contains a magic number: GUI.Button(new Rect(windowPos.width - 48' 0' 13' 20)' "?"' GuiUtils.yellowOnHover)
Magic Number,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowGUI,The following statement contains a magic number: GUI.Button(new Rect(windowPos.width - 48' 0' 13' 20)' "?"' GuiUtils.yellowOnHover)
Magic Number,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowGUI,The following statement contains a magic number: autopilot.heading.val -= (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1);
Magic Number,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowGUI,The following statement contains a magic number: GUILayout.Button("-"' GUILayout.Width(18))
Magic Number,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowGUI,The following statement contains a magic number: autopilot.heading.val += (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1);
Magic Number,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowGUI,The following statement contains a magic number: GUILayout.Button("+"' GUILayout.Width(18))
Magic Number,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowGUI,The following statement contains a magic number: autopilot.speed.val -= (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1);
Magic Number,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowGUI,The following statement contains a magic number: GUILayout.Button("-"' GUILayout.Width(18))
Magic Number,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowGUI,The following statement contains a magic number: autopilot.speed.val += (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1);
Magic Number,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowGUI,The following statement contains a magic number: GUILayout.Button("+"' GUILayout.Width(18))
Magic Number,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowGUI,The following statement contains a magic number: autopilot.Waypoints.Add(new MechJebWaypoint(vssl' 25f));
Magic Number,MuMech,MechJebModuleRoverWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRoverWindow.cs,WindowGUI,The following statement contains a magic number: autopilot.Waypoints.Add(new MechJebWaypoint(vssl' 25f));
Magic Number,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,MechJebModuleScript,The following statement contains a magic number: i < 5 || j < 5 || i > 15 || j > 15
Magic Number,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,MechJebModuleScript,The following statement contains a magic number: i < 5 || j < 5 || i > 15 || j > 15
Magic Number,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,MechJebModuleScript,The following statement contains a magic number: i < 5 || j < 5 || i > 15 || j > 15
Magic Number,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,MechJebModuleScript,The following statement contains a magic number: i < 5 || j < 5 || i > 15 || j > 15
Magic Number,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,MechJebModuleScript,The following statement contains a magic number: j < 20
Magic Number,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,MechJebModuleScript,The following statement contains a magic number: i < 20
Magic Number,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,updateScriptsNames,The following statement contains a magic number: i < 8
Magic Number,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(800)' GUILayout.Height(50) };
Magic Number,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(800)' GUILayout.Height(50) };
Magic Number,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,OnFixedUpdate,The following statement contains a magic number: flashSpendTime > 5f
Magic Number,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,LoadConfig,The following statement contains a magic number: slot != 9
Magic Number,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,setActiveBreakpoint,The following statement contains a magic number: this.SaveConfig(9' false' true);
Magic Number,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,loadFromBreakpoint,The following statement contains a magic number: this.LoadConfig(9' false' true);
Magic Number,MuMech,MechJebModuleScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleScript.cs,loadFromBreakpoint,The following statement contains a magic number: this.DeleteConfig(9' false' true);
Magic Number,MuMech,MechJebModuleSettings,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSettings.cs,WindowGUI,The following statement contains a magic number: skinId = 2;
Magic Number,MuMech,MechJebModuleSettings,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSettings.cs,WindowGUI,The following statement contains a magic number: GuiUtils.skin == null || skinId != 2
Magic Number,MuMech,MechJebModuleSettings,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSettings.cs,WindowGUI,The following statement contains a magic number: UIScale.text = GUILayout.TextField(UIScale.text' GUILayout.Width(60));
Magic Number,MuMech,MechJebModuleSettings,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSettings.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(200)' GUILayout.Height(100) };
Magic Number,MuMech,MechJebModuleSettings,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSettings.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(200)' GUILayout.Height(100) };
Magic Number,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,ForceRoll,The following statement contains a magic number: rol.text = GUILayout.TextField(rol.text' GUILayout.Width(30));
Magic Number,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,WindowGUI,The following statement contains a magic number: btNormal.padding = new RectOffset(8' 8' 8' 8);
Magic Number,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,WindowGUI,The following statement contains a magic number: btNormal.padding = new RectOffset(8' 8' 8' 8);
Magic Number,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,WindowGUI,The following statement contains a magic number: btNormal.padding = new RectOffset(8' 8' 8' 8);
Magic Number,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,WindowGUI,The following statement contains a magic number: btNormal.padding = new RectOffset(8' 8' 8' 8);
Magic Number,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,Engage,The following statement contains a magic number: switch (target)              {                  case Target.OFF:                      core.attitude.attitudeDeactivate();                      return;                  case Target.KILLROT:                      core.attitude.attitudeKILLROT = true;                      attitude = Quaternion.LookRotation(part.vessel.GetTransform().up' -part.vessel.GetTransform().forward);                      reference = AttitudeReference.INERTIAL;                      break;                  case Target.NODE:                      direction = Vector3d.forward;                      reference = AttitudeReference.MANEUVER_NODE;                      break;                  case Target.SURFACE:                      attitude = Quaternion.AngleAxis((float)srfHdg' Vector3.up)                                   * Quaternion.AngleAxis(-(float)srfPit' Vector3.right)                                   * Quaternion.AngleAxis(-(float)srfRol' Vector3.forward);                      reference = AttitudeReference.SURFACE_NORTH;                      break;                  case Target.PROGRADE:                      direction = Vector3d.forward;                      reference = AttitudeReference.ORBIT;                      break;                  case Target.RETROGRADE:                      direction = Vector3d.back;                      reference = AttitudeReference.ORBIT;                      break;                  case Target.NORMAL_PLUS:                      direction = Vector3d.left;                      reference = AttitudeReference.ORBIT;                      break;                  case Target.NORMAL_MINUS:                      direction = Vector3d.right;                      reference = AttitudeReference.ORBIT;                      break;                  case Target.RADIAL_PLUS:                      direction = Vector3d.up;                      reference = AttitudeReference.ORBIT;                      break;                  case Target.RADIAL_MINUS:                      direction = Vector3d.down;                      reference = AttitudeReference.ORBIT;                      break;                  case Target.RELATIVE_PLUS:                      direction = Vector3d.forward;                      reference = AttitudeReference.RELATIVE_VELOCITY;                      break;                  case Target.RELATIVE_MINUS:                      direction = Vector3d.back;                      reference = AttitudeReference.RELATIVE_VELOCITY;                      break;                  case Target.TARGET_PLUS:                      direction = Vector3d.forward;                      reference = AttitudeReference.TARGET;                      break;                  case Target.TARGET_MINUS:                      direction = Vector3d.back;                      reference = AttitudeReference.TARGET;                      break;                  case Target.PARALLEL_PLUS:                      direction = Vector3d.forward;                      reference = AttitudeReference.TARGET_ORIENTATION;                      break;                  case Target.PARALLEL_MINUS:                      direction = Vector3d.back;                      reference = AttitudeReference.TARGET_ORIENTATION;                      break;                  case Target.ADVANCED:                      direction = Vector6.directions[(int)advDirection];                      reference = advReference;                      break;                  case Target.SURFACE_PROGRADE:                      attitude = Quaternion.AngleAxis(-(float)srfVelRol' Vector3.forward) *                          Quaternion.AngleAxis(-(float)srfVelPit' Vector3.right) *                          Quaternion.AngleAxis((float)srfVelYaw' Vector3.up);                      reference = AttitudeReference.SURFACE_VELOCITY;                      break;                  case Target.SURFACE_RETROGRADE:                      attitude = Quaternion.AngleAxis((float)srfVelRol + 180' Vector3.forward) *                          Quaternion.AngleAxis(-(float)srfVelPit + 180' Vector3.right) *                          Quaternion.AngleAxis((float)srfVelYaw' Vector3.up);                      reference = AttitudeReference.SURFACE_VELOCITY;                      break;                  case Target.HORIZONTAL_PLUS:                      direction = Vector3d.forward;                      reference = AttitudeReference.SURFACE_HORIZONTAL;                      break;                  case Target.HORIZONTAL_MINUS:                      direction = Vector3d.back;                      reference = AttitudeReference.SURFACE_HORIZONTAL;                      break;                  case Target.VERTICAL_PLUS:                      direction = Vector3d.up;                      reference = AttitudeReference.SURFACE_NORTH;                      break;                  default:                      return;              }
Magic Number,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,Engage,The following statement contains a magic number: switch (target)              {                  case Target.OFF:                      core.attitude.attitudeDeactivate();                      return;                  case Target.KILLROT:                      core.attitude.attitudeKILLROT = true;                      attitude = Quaternion.LookRotation(part.vessel.GetTransform().up' -part.vessel.GetTransform().forward);                      reference = AttitudeReference.INERTIAL;                      break;                  case Target.NODE:                      direction = Vector3d.forward;                      reference = AttitudeReference.MANEUVER_NODE;                      break;                  case Target.SURFACE:                      attitude = Quaternion.AngleAxis((float)srfHdg' Vector3.up)                                   * Quaternion.AngleAxis(-(float)srfPit' Vector3.right)                                   * Quaternion.AngleAxis(-(float)srfRol' Vector3.forward);                      reference = AttitudeReference.SURFACE_NORTH;                      break;                  case Target.PROGRADE:                      direction = Vector3d.forward;                      reference = AttitudeReference.ORBIT;                      break;                  case Target.RETROGRADE:                      direction = Vector3d.back;                      reference = AttitudeReference.ORBIT;                      break;                  case Target.NORMAL_PLUS:                      direction = Vector3d.left;                      reference = AttitudeReference.ORBIT;                      break;                  case Target.NORMAL_MINUS:                      direction = Vector3d.right;                      reference = AttitudeReference.ORBIT;                      break;                  case Target.RADIAL_PLUS:                      direction = Vector3d.up;                      reference = AttitudeReference.ORBIT;                      break;                  case Target.RADIAL_MINUS:                      direction = Vector3d.down;                      reference = AttitudeReference.ORBIT;                      break;                  case Target.RELATIVE_PLUS:                      direction = Vector3d.forward;                      reference = AttitudeReference.RELATIVE_VELOCITY;                      break;                  case Target.RELATIVE_MINUS:                      direction = Vector3d.back;                      reference = AttitudeReference.RELATIVE_VELOCITY;                      break;                  case Target.TARGET_PLUS:                      direction = Vector3d.forward;                      reference = AttitudeReference.TARGET;                      break;                  case Target.TARGET_MINUS:                      direction = Vector3d.back;                      reference = AttitudeReference.TARGET;                      break;                  case Target.PARALLEL_PLUS:                      direction = Vector3d.forward;                      reference = AttitudeReference.TARGET_ORIENTATION;                      break;                  case Target.PARALLEL_MINUS:                      direction = Vector3d.back;                      reference = AttitudeReference.TARGET_ORIENTATION;                      break;                  case Target.ADVANCED:                      direction = Vector6.directions[(int)advDirection];                      reference = advReference;                      break;                  case Target.SURFACE_PROGRADE:                      attitude = Quaternion.AngleAxis(-(float)srfVelRol' Vector3.forward) *                          Quaternion.AngleAxis(-(float)srfVelPit' Vector3.right) *                          Quaternion.AngleAxis((float)srfVelYaw' Vector3.up);                      reference = AttitudeReference.SURFACE_VELOCITY;                      break;                  case Target.SURFACE_RETROGRADE:                      attitude = Quaternion.AngleAxis((float)srfVelRol + 180' Vector3.forward) *                          Quaternion.AngleAxis(-(float)srfVelPit + 180' Vector3.right) *                          Quaternion.AngleAxis((float)srfVelYaw' Vector3.up);                      reference = AttitudeReference.SURFACE_VELOCITY;                      break;                  case Target.HORIZONTAL_PLUS:                      direction = Vector3d.forward;                      reference = AttitudeReference.SURFACE_HORIZONTAL;                      break;                  case Target.HORIZONTAL_MINUS:                      direction = Vector3d.back;                      reference = AttitudeReference.SURFACE_HORIZONTAL;                      break;                  case Target.VERTICAL_PLUS:                      direction = Vector3d.up;                      reference = AttitudeReference.SURFACE_NORTH;                      break;                  default:                      return;              }
Magic Number,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(180)' GUILayout.Height(100) };
Magic Number,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(180)' GUILayout.Height(100) };
Magic Number,MuMech,MechJebModuleSmartRcs,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartRcs.cs,WindowGUI,The following statement contains a magic number: btNormal.padding = new RectOffset(8' 8' 8' 8);
Magic Number,MuMech,MechJebModuleSmartRcs,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartRcs.cs,WindowGUI,The following statement contains a magic number: btNormal.padding = new RectOffset(8' 8' 8' 8);
Magic Number,MuMech,MechJebModuleSmartRcs,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartRcs.cs,WindowGUI,The following statement contains a magic number: btNormal.padding = new RectOffset(8' 8' 8' 8);
Magic Number,MuMech,MechJebModuleSmartRcs,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartRcs.cs,WindowGUI,The following statement contains a magic number: btNormal.padding = new RectOffset(8' 8' 8' 8);
Magic Number,MuMech,MechJebModuleSmartRcs,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartRcs.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(180)' GUILayout.Height(100) };
Magic Number,MuMech,MechJebModuleSmartRcs,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartRcs.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(180)' GUILayout.Height(100) };
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVerticalSpeed,The following statement contains a magic number: double deltaAlt = GetAutolandTargetAltitude(vectorToWaypoint) - 10 - vesselState.altitudeASL;
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVerticalSpeed,The following statement contains a magic number: double desiredAlt = GetAutolandTargetAltitude(vectorToCorrectPointOnGlideslope) - 10;
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVerticalSpeed,The following statement contains a magic number: vertSpeed = deltaAlt / 8 - 0.2f;
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVerticalSpeed,The following statement contains a magic number: vertSpeed = deltaAlt / 8 - 0.2f;
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVerticalSpeed,The following statement contains a magic number: vertSpeed = UtilMath.Clamp(vertSpeed' -4' 4);
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetVerticalSpeed,The following statement contains a magic number: vertSpeed = UtilMath.Clamp(vertSpeed' -4' 4);
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetHeading,The following statement contains a magic number: switch (approachState)              {                  case AutolandApproachState.FAP:                  case AutolandApproachState.TOUCHDOWN:                  case AutolandApproachState.WAITINGFORFLARE:                  case AutolandApproachState.ROLLOUT:                  case AutolandApproachState.FLARE:                  {                      double alignOffset = GetAutolandAlignmentError(vectorToWaypoint);                      Debug.Assert(alignOffset < lateralInterceptAngle);                        double exponentPerDegreeOfError = (Math.Log(3) - Math.Log(1)) / lateralInterceptAngle;                      double offsetMultiplier = Math.Exp((lateralInterceptAngle - Math.Abs(alignOffset)) * exponentPerDegreeOfError);                        targetHeading -= alignOffset * offsetMultiplier;                      break;                  }              }
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandMaxBankAngle,The following statement contains a magic number: return 10.0;
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandLateralDistanceFromTouchdownToFinalApproach,The following statement contains a magic number: return ((1.0 / Math.Tan(angleToFinalApproachPointTurnDiameter * UtilMath.Deg2Rad)) * GetAutolandTurnRadius() * 2.0) + lateralDistanceFromTouchdownToFinalApproach;
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetSpeed,The following statement contains a magic number: return (touchdownSpeed + approachSpeed) / 2;
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,FindVectorToGlideslopeIntercept,The following statement contains a magic number: double theta = 180 - lateralInterceptAngle;
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,FindVectorToGlideslopeIntercept,The following statement contains a magic number: double omega = 180 - lateralAngleOfFinalApproachVector - theta;
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "KSC Runway 09"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -0.0485981' longitude = -74.726413' altitude = 69.01 }'                      end = new Runway.Endpoint { latitude = -0.050185' longitude = -74.490867' altitude = 69.01 }'                      touchdownPoint = 100.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "KSC Runway 09"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -0.0485981' longitude = -74.726413' altitude = 69.01 }'                      end = new Runway.Endpoint { latitude = -0.050185' longitude = -74.490867' altitude = 69.01 }'                      touchdownPoint = 100.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "KSC Runway 09"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -0.0485981' longitude = -74.726413' altitude = 69.01 }'                      end = new Runway.Endpoint { latitude = -0.050185' longitude = -74.490867' altitude = 69.01 }'                      touchdownPoint = 100.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "KSC Runway 09"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -0.0485981' longitude = -74.726413' altitude = 69.01 }'                      end = new Runway.Endpoint { latitude = -0.050185' longitude = -74.490867' altitude = 69.01 }'                      touchdownPoint = 100.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "KSC Runway 09"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -0.0485981' longitude = -74.726413' altitude = 69.01 }'                      end = new Runway.Endpoint { latitude = -0.050185' longitude = -74.490867' altitude = 69.01 }'                      touchdownPoint = 100.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "KSC Runway 09"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -0.0485981' longitude = -74.726413' altitude = 69.01 }'                      end = new Runway.Endpoint { latitude = -0.050185' longitude = -74.490867' altitude = 69.01 }'                      touchdownPoint = 100.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "KSC Runway 09"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -0.0485981' longitude = -74.726413' altitude = 69.01 }'                      end = new Runway.Endpoint { latitude = -0.050185' longitude = -74.490867' altitude = 69.01 }'                      touchdownPoint = 100.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "KSC Runway 27"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -0.050185' longitude = -74.490867' altitude = 69.01 }'                      end = new Runway.Endpoint { latitude = -0.0485981' longitude = -74.726413' altitude = 69.01 }'                      touchdownPoint = 100.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "KSC Runway 27"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -0.050185' longitude = -74.490867' altitude = 69.01 }'                      end = new Runway.Endpoint { latitude = -0.0485981' longitude = -74.726413' altitude = 69.01 }'                      touchdownPoint = 100.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "KSC Runway 27"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -0.050185' longitude = -74.490867' altitude = 69.01 }'                      end = new Runway.Endpoint { latitude = -0.0485981' longitude = -74.726413' altitude = 69.01 }'                      touchdownPoint = 100.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "KSC Runway 27"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -0.050185' longitude = -74.490867' altitude = 69.01 }'                      end = new Runway.Endpoint { latitude = -0.0485981' longitude = -74.726413' altitude = 69.01 }'                      touchdownPoint = 100.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "KSC Runway 27"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -0.050185' longitude = -74.490867' altitude = 69.01 }'                      end = new Runway.Endpoint { latitude = -0.0485981' longitude = -74.726413' altitude = 69.01 }'                      touchdownPoint = 100.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "KSC Runway 27"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -0.050185' longitude = -74.490867' altitude = 69.01 }'                      end = new Runway.Endpoint { latitude = -0.0485981' longitude = -74.726413' altitude = 69.01 }'                      touchdownPoint = 100.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "KSC Runway 27"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -0.050185' longitude = -74.490867' altitude = 69.01 }'                      end = new Runway.Endpoint { latitude = -0.0485981' longitude = -74.726413' altitude = 69.01 }'                      touchdownPoint = 100.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "Island Runway 09"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -1.517306' longitude = -71.965488' altitude = 133.17 }'                      end = new Runway.Endpoint { latitude = -1.515980' longitude = -71.852408' altitude = 133.17 }'                      touchdownPoint = 25.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "Island Runway 09"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -1.517306' longitude = -71.965488' altitude = 133.17 }'                      end = new Runway.Endpoint { latitude = -1.515980' longitude = -71.852408' altitude = 133.17 }'                      touchdownPoint = 25.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "Island Runway 09"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -1.517306' longitude = -71.965488' altitude = 133.17 }'                      end = new Runway.Endpoint { latitude = -1.515980' longitude = -71.852408' altitude = 133.17 }'                      touchdownPoint = 25.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "Island Runway 09"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -1.517306' longitude = -71.965488' altitude = 133.17 }'                      end = new Runway.Endpoint { latitude = -1.515980' longitude = -71.852408' altitude = 133.17 }'                      touchdownPoint = 25.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "Island Runway 09"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -1.517306' longitude = -71.965488' altitude = 133.17 }'                      end = new Runway.Endpoint { latitude = -1.515980' longitude = -71.852408' altitude = 133.17 }'                      touchdownPoint = 25.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "Island Runway 09"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -1.517306' longitude = -71.965488' altitude = 133.17 }'                      end = new Runway.Endpoint { latitude = -1.515980' longitude = -71.852408' altitude = 133.17 }'                      touchdownPoint = 25.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "Island Runway 09"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -1.517306' longitude = -71.965488' altitude = 133.17 }'                      end = new Runway.Endpoint { latitude = -1.515980' longitude = -71.852408' altitude = 133.17 }'                      touchdownPoint = 25.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "Island Runway 27"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -1.515980' longitude = -71.852408' altitude = 133.17 }'                      end = new Runway.Endpoint { latitude = -1.517306' longitude = -71.965488' altitude = 133.17 }'                      touchdownPoint = 25.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "Island Runway 27"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -1.515980' longitude = -71.852408' altitude = 133.17 }'                      end = new Runway.Endpoint { latitude = -1.517306' longitude = -71.965488' altitude = 133.17 }'                      touchdownPoint = 25.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "Island Runway 27"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -1.515980' longitude = -71.852408' altitude = 133.17 }'                      end = new Runway.Endpoint { latitude = -1.517306' longitude = -71.965488' altitude = 133.17 }'                      touchdownPoint = 25.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "Island Runway 27"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -1.515980' longitude = -71.852408' altitude = 133.17 }'                      end = new Runway.Endpoint { latitude = -1.517306' longitude = -71.965488' altitude = 133.17 }'                      touchdownPoint = 25.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "Island Runway 27"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -1.515980' longitude = -71.852408' altitude = 133.17 }'                      end = new Runway.Endpoint { latitude = -1.517306' longitude = -71.965488' altitude = 133.17 }'                      touchdownPoint = 25.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "Island Runway 27"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -1.515980' longitude = -71.852408' altitude = 133.17 }'                      end = new Runway.Endpoint { latitude = -1.517306' longitude = -71.965488' altitude = 133.17 }'                      touchdownPoint = 25.0                  });
Magic Number,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,InitRunwaysList,The following statement contains a magic number: runways.Add(new Runway                  {                      name = "Island Runway 27"'                      body = Planetarium.fetch.Home'                      start = new Runway.Endpoint { latitude = -1.515980' longitude = -71.852408' altitude = 133.17 }'                      end = new Runway.Endpoint { latitude = -1.517306' longitude = -71.965488' altitude = 133.17 }'                      touchdownPoint = 25.0                  });
Magic Number,MuMech,Runway,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetGravitationalAcceleration,The following statement contains a magic number: return body.GeeASL * 9.81;
Magic Number,MuMech,MechJebModuleSpaceplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneGuidance.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(350)' GUILayout.Height(200) };
Magic Number,MuMech,MechJebModuleSpaceplaneGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneGuidance.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(350)' GUILayout.Height(200) };
Magic Number,MuMech,MechJebModuleStageStats,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStageStats.cs,setDirty,The following statement contains a magic number: needRebuild = 2;
Magic Number,MuMech,MechJebModuleStageStats,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStageStats.cs,RunSimulation,The following statement contains a magic number: double atmDensity = (HighLogic.LoadedSceneIsEditor || !liveSLT ? simBody.GetDensity(simBody.GetPressure(altSLT)' simBody.GetTemperature(0)) : vessel.atmDensity) / 1.225;
Magic Number,MuMech,MechJebModuleStageStats,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStageStats.cs,RunSimulation,The following statement contains a magic number: millisecondsBetweenSimulations = 2 * millisecondsToCompletion;
Magic Number,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,MechJebModuleStagingController,The following statement contains a magic number: priority = 1000;
Magic Number,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,AutostageSettingsInfoItem,The following statement contains a magic number: autostagePreDelay.text = GUILayout.TextField(autostagePreDelay.text' GUILayout.Width(35));
Magic Number,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,AutostageSettingsInfoItem,The following statement contains a magic number: autostagePostDelay.text = GUILayout.TextField(autostagePostDelay.text' GUILayout.Width(35));
Magic Number,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,AutostageSettingsInfoItem,The following statement contains a magic number: GuiUtils.SimpleTextBox("  "+Localizer.Format("#MechJeb_Ascent_label39") +" <"' fairingMaxDynamicPressure' "kPa"' 50);
Magic Number,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,AutostageSettingsInfoItem,The following statement contains a magic number: GuiUtils.SimpleTextBox("  "+Localizer.Format("#MechJeb_Ascent_label40") +" >"' fairingMinAltitude' "km"' 50);
Magic Number,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,AutostageSettingsInfoItem,The following statement contains a magic number: GuiUtils.SimpleTextBox("  "+Localizer.Format("#MechJeb_Ascent_label41") +" <"' fairingMaxAerothermalFlux' "W/m²"' 50);
Magic Number,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,ClampAutostageThrust,The following statement contains a magic number: core.staging.clampAutoStageThrustPct.text = GUILayout.TextField(core.staging.clampAutoStageThrustPct.text' 5);
Magic Number,MuMech,MechJebModuleStagingController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleStagingController.cs,ClampAutostageThrust,The following statement contains a magic number: core.staging.clampAutoStageThrustPct = UtilMath.Clamp(core.staging.clampAutoStageThrustPct' 0' 100);
Magic Number,MuMech,MechJebModuleTargetController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTargetController.cs,PickPositionTargetOnMap,The following statement contains a magic number: ScreenMessages.PostScreenMessage(message' 3.0f' ScreenMessageStyle.UPPER_CENTER);
Magic Number,MuMech,MechJebModuleTargetController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTargetController.cs,DoCoordinatePicking,The following statement contains a magic number: GLUtils.DrawGroundMarker(mainBody' mouseCoords.latitude' mouseCoords.longitude' new Color(1.0f' 0.56f' 0.0f)' true' 60);
Magic Number,MuMech,MechJebModuleTargetController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTargetController.cs,DoCoordinatePicking,The following statement contains a magic number: GLUtils.DrawGroundMarker(mainBody' mouseCoords.latitude' mouseCoords.longitude' new Color(1.0f' 0.56f' 0.0f)' true' 60);
Magic Number,MuMech,MechJebModuleTargetController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTargetController.cs,DoCoordinatePicking,The following statement contains a magic number: GUI.Label(new Rect(Input.mousePosition.x + 15' Screen.height - Input.mousePosition.y' 200' 50)' mouseCoords.ToStringDecimal() + "\n" + biome);
Magic Number,MuMech,MechJebModuleTargetController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTargetController.cs,DoCoordinatePicking,The following statement contains a magic number: GUI.Label(new Rect(Input.mousePosition.x + 15' Screen.height - Input.mousePosition.y' 200' 50)' mouseCoords.ToStringDecimal() + "\n" + biome);
Magic Number,MuMech,MechJebModuleTargetController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTargetController.cs,DoCoordinatePicking,The following statement contains a magic number: GUI.Label(new Rect(Input.mousePosition.x + 15' Screen.height - Input.mousePosition.y' 200' 50)' mouseCoords.ToStringDecimal() + "\n" + biome);
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,MechJebModuleThrustController,The following statement contains a magic number: priority = 200;
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,LimitToMaxDynamicPressureInfoItem,The following statement contains a magic number: limitDynamicPressure = GUILayout.Toggle(limitDynamicPressure' Localizer.Format("#MechJeb_Ascent_checkbox11")' s' GUILayout.Width(140));
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,LimitToMaxDynamicPressureInfoItem,The following statement contains a magic number: maxDynamicPressure.text = GUILayout.TextField(maxDynamicPressure.text' GUILayout.Width(80));
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,LimitAccelerationInfoItem,The following statement contains a magic number: limitAcceleration = GUILayout.Toggle(limitAcceleration' Localizer.Format("#MechJeb_Ascent_checkbox16")' s' GUILayout.Width(140));
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,LimitAccelerationInfoItem,The following statement contains a magic number: maxAcceleration.text = GUILayout.TextField(maxAcceleration.text' GUILayout.Width(30));
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,LimitThrottleInfoItem,The following statement contains a magic number: limitThrottle = GUILayout.Toggle(limitThrottle' Localizer.Format("#MechJeb_Ascent_checkbox17")' s' GUILayout.Width(110));
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,LimitThrottleInfoItem,The following statement contains a magic number: maxThrottle.text = GUILayout.TextField(maxThrottle.text' GUILayout.Width(30));
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,LimiterMinThrottleInfoItem,The following statement contains a magic number: limiterMinThrottle = GUILayout.Toggle(limiterMinThrottle' Localizer.Format("#MechJeb_Ascent_checkbox18")' s' GUILayout.Width(160));
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,LimiterMinThrottleInfoItem,The following statement contains a magic number: minThrottle.text = GUILayout.TextField(minThrottle.text' GUILayout.Width(30));
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,LimitElectricInfoItem,The following statement contains a magic number: vesselState.throttleLimit <0.001
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,LimitElectricInfoItem,The following statement contains a magic number: electricThrottle = GUILayout.Toggle(electricThrottle' Localizer.Format("#MechJeb_Ascent_checkbox20")' s' GUILayout.Width(110));
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,LimitElectricInfoItem,The following statement contains a magic number: electricThrottleLo.text = GUILayout.TextField(electricThrottleLo.text' GUILayout.Width(30));
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,LimitElectricInfoItem,The following statement contains a magic number: electricThrottleHi.text = GUILayout.TextField(electricThrottleHi.text' GUILayout.Width(30));
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,OnStart,The following statement contains a magic number: preventingUnstableIgnitionsMessage = new ScreenMessage(Localizer.Format("#MechJeb_Ascent_srcmsg1")' 2f' ScreenMessageStyle.UPPER_CENTER);
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,OnStart,The following statement contains a magic number: pid = new PIDController(0.05' 0.000001' 0.05);
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,OnStart,The following statement contains a magic number: pid = new PIDController(0.05' 0.000001' 0.05);
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,OnStart,The following statement contains a magic number: pid = new PIDController(0.05' 0.000001' 0.05);
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,Drive,The following statement contains a magic number: float threshold = 0.1F;
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,Drive,The following statement contains a magic number: userCommandingRotationSmoothed = 2;
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,Drive,The following statement contains a magic number: switch (tmode)                  {                      case TMode.KEEP_ORBITAL:                          spd = vesselState.speedOrbital;                          break;                      case TMode.KEEP_SURFACE:                          spd = vesselState.speedSurface;                          break;                      case TMode.KEEP_VERTICAL:                          spd = vesselState.speedVertical;                          Vector3d rot = Vector3d.up;                          if (trans_kill_h)                          {                              Vector3 hsdir = Vector3.ProjectOnPlane(vesselState.surfaceVelocity' vesselState.up);                              Vector3 dir = -hsdir + vesselState.up * Math.Max(Math.Abs(spd)' 20 * mainBody.GeeASL);                              if ((Math.Min(vesselState.altitudeASL' vesselState.altitudeTrue) > 5000) && (hsdir.magnitude > Math.Max(Math.Abs(spd)' 100 * mainBody.GeeASL) * 2))                              {                                  tmode = TMode.DIRECT;                                  trans_spd_act = 100;                                  rot = -hsdir;                              }                              else                              {                                  rot = dir.normalized;                              }                              core.attitude.attitudeTo(rot' AttitudeReference.INERTIAL' null);                          }                          break;                  }
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,Drive,The following statement contains a magic number: switch (tmode)                  {                      case TMode.KEEP_ORBITAL:                          spd = vesselState.speedOrbital;                          break;                      case TMode.KEEP_SURFACE:                          spd = vesselState.speedSurface;                          break;                      case TMode.KEEP_VERTICAL:                          spd = vesselState.speedVertical;                          Vector3d rot = Vector3d.up;                          if (trans_kill_h)                          {                              Vector3 hsdir = Vector3.ProjectOnPlane(vesselState.surfaceVelocity' vesselState.up);                              Vector3 dir = -hsdir + vesselState.up * Math.Max(Math.Abs(spd)' 20 * mainBody.GeeASL);                              if ((Math.Min(vesselState.altitudeASL' vesselState.altitudeTrue) > 5000) && (hsdir.magnitude > Math.Max(Math.Abs(spd)' 100 * mainBody.GeeASL) * 2))                              {                                  tmode = TMode.DIRECT;                                  trans_spd_act = 100;                                  rot = -hsdir;                              }                              else                              {                                  rot = dir.normalized;                              }                              core.attitude.attitudeTo(rot' AttitudeReference.INERTIAL' null);                          }                          break;                  }
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,Drive,The following statement contains a magic number: switch (tmode)                  {                      case TMode.KEEP_ORBITAL:                          spd = vesselState.speedOrbital;                          break;                      case TMode.KEEP_SURFACE:                          spd = vesselState.speedSurface;                          break;                      case TMode.KEEP_VERTICAL:                          spd = vesselState.speedVertical;                          Vector3d rot = Vector3d.up;                          if (trans_kill_h)                          {                              Vector3 hsdir = Vector3.ProjectOnPlane(vesselState.surfaceVelocity' vesselState.up);                              Vector3 dir = -hsdir + vesselState.up * Math.Max(Math.Abs(spd)' 20 * mainBody.GeeASL);                              if ((Math.Min(vesselState.altitudeASL' vesselState.altitudeTrue) > 5000) && (hsdir.magnitude > Math.Max(Math.Abs(spd)' 100 * mainBody.GeeASL) * 2))                              {                                  tmode = TMode.DIRECT;                                  trans_spd_act = 100;                                  rot = -hsdir;                              }                              else                              {                                  rot = dir.normalized;                              }                              core.attitude.attitudeTo(rot' AttitudeReference.INERTIAL' null);                          }                          break;                  }
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,Drive,The following statement contains a magic number: switch (tmode)                  {                      case TMode.KEEP_ORBITAL:                          spd = vesselState.speedOrbital;                          break;                      case TMode.KEEP_SURFACE:                          spd = vesselState.speedSurface;                          break;                      case TMode.KEEP_VERTICAL:                          spd = vesselState.speedVertical;                          Vector3d rot = Vector3d.up;                          if (trans_kill_h)                          {                              Vector3 hsdir = Vector3.ProjectOnPlane(vesselState.surfaceVelocity' vesselState.up);                              Vector3 dir = -hsdir + vesselState.up * Math.Max(Math.Abs(spd)' 20 * mainBody.GeeASL);                              if ((Math.Min(vesselState.altitudeASL' vesselState.altitudeTrue) > 5000) && (hsdir.magnitude > Math.Max(Math.Abs(spd)' 100 * mainBody.GeeASL) * 2))                              {                                  tmode = TMode.DIRECT;                                  trans_spd_act = 100;                                  rot = -hsdir;                              }                              else                              {                                  rot = dir.normalized;                              }                              core.attitude.attitudeTo(rot' AttitudeReference.INERTIAL' null);                          }                          break;                  }
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,Drive,The following statement contains a magic number: switch (tmode)                  {                      case TMode.KEEP_ORBITAL:                          spd = vesselState.speedOrbital;                          break;                      case TMode.KEEP_SURFACE:                          spd = vesselState.speedSurface;                          break;                      case TMode.KEEP_VERTICAL:                          spd = vesselState.speedVertical;                          Vector3d rot = Vector3d.up;                          if (trans_kill_h)                          {                              Vector3 hsdir = Vector3.ProjectOnPlane(vesselState.surfaceVelocity' vesselState.up);                              Vector3 dir = -hsdir + vesselState.up * Math.Max(Math.Abs(spd)' 20 * mainBody.GeeASL);                              if ((Math.Min(vesselState.altitudeASL' vesselState.altitudeTrue) > 5000) && (hsdir.magnitude > Math.Max(Math.Abs(spd)' 100 * mainBody.GeeASL) * 2))                              {                                  tmode = TMode.DIRECT;                                  trans_spd_act = 100;                                  rot = -hsdir;                              }                              else                              {                                  rot = dir.normalized;                              }                              core.attitude.attitudeTo(rot' AttitudeReference.INERTIAL' null);                          }                          break;                  }
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,Drive,The following statement contains a magic number: trans_prev_thrust = targetThrottle = trans_spd_act / 100.0F;
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,Drive,The following statement contains a magic number: (tmode != TMode.KEEP_VERTICAL)                      || !trans_kill_h                      || (core.attitude.attitudeError < 2)                      || ((Math.Min(vesselState.altitudeASL' vesselState.altitudeTrue) < 1000) && (core.attitude.attitudeError < 90))
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,Drive,The following statement contains a magic number: (tmode != TMode.KEEP_VERTICAL)                      || !trans_kill_h                      || (core.attitude.attitudeError < 2)                      || ((Math.Min(vesselState.altitudeASL' vesselState.altitudeTrue) < 1000) && (core.attitude.attitudeError < 90))
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,Drive,The following statement contains a magic number: (tmode != TMode.KEEP_VERTICAL)                      || !trans_kill_h                      || (core.attitude.attitudeError < 2)                      || ((Math.Min(vesselState.altitudeASL' vesselState.altitudeTrue) < 1000) && (core.attitude.attitudeError < 90))
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,Drive,The following statement contains a magic number: differentialThrottleDemandedTorque = -Vector3d.Scale(act.xzy' vesselState.torqueDiffThrottle * s.mainThrottle * 0.5f);
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,TerminalVelocityThrottle,The following statement contains a magic number: const double falloff = 15.0;
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,MaximumDynamicPressureThrottle,The following statement contains a magic number: const double falloff = 15.0;
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,TemperatureSafetyThrottle,The following statement contains a magic number: const double tempSafetyMargin = 0.05f;
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,FlameoutSafetyThrottle,The following statement contains a magic number: double margin = (1 + 0.01 * flameoutSafetyPct);
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,ElectricThrottle,The following statement contains a magic number: Math.Abs(highJuice - lowJuice) < 0.01
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,ComputeDifferentialThrottle,The following statement contains a magic number: forceScale += vesselState.enginesWrappers[i].maxVariableForce.magnitude * 10;
Magic Number,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,DisableDifferentialThrottle,The following statement contains a magic number: engine.thrustPercentage = 100;
Magic Number,MuMech,MechJebModuleThrustWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustWindow.cs,WindowGUI,The following statement contains a magic number: core.thrust.flameoutSafetyPct.text = GUILayout.TextField(core.thrust.flameoutSafetyPct.text' 5);
Magic Number,MuMech,MechJebModuleThrustWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustWindow.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[]{                  GUILayout.Width(250)' GUILayout.Height(30)              };
Magic Number,MuMech,MechJebModuleThrustWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustWindow.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[]{                  GUILayout.Width(250)' GUILayout.Height(30)              };
Magic Number,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(130) };
Magic Number,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,WindowGUI,The following statement contains a magic number: sty.padding = new RectOffset(8' 8' 8' 8);
Magic Number,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,WindowGUI,The following statement contains a magic number: sty.padding = new RectOffset(8' 8' 8' 8);
Magic Number,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,WindowGUI,The following statement contains a magic number: sty.padding = new RectOffset(8' 8' 8' 8);
Magic Number,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,WindowGUI,The following statement contains a magic number: sty.padding = new RectOffset(8' 8' 8' 8);
Magic Number,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,WindowGUI,The following statement contains a magic number: windowPos = new Rect(windowPos.x' windowPos.y' 10' 10);
Magic Number,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,WindowGUI,The following statement contains a magic number: windowPos = new Rect(windowPos.x' windowPos.y' 10' 10);
Magic Number,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,SetMode,The following statement contains a magic number: windowPos = new Rect(windowPos.x' windowPos.y' 10' 10);
Magic Number,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,SetMode,The following statement contains a magic number: windowPos = new Rect(windowPos.x' windowPos.y' 10' 10);
Magic Number,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,Drive,The following statement contains a magic number: switch (abort)                  {                      case AbortStage.THRUSTOFF:                          FlightInputHandler.SetNeutralControls();                          s.mainThrottle = 0;                          abort = AbortStage.DECOUPLE;                          break;                      case AbortStage.DECOUPLE:                          recursiveDecouple();                          abort = AbortStage.BURNUP;                          burnUpTime = Planetarium.GetUniversalTime();                          break;                      case AbortStage.BURNUP:                          if ((Planetarium.GetUniversalTime() - burnUpTime < 2) || (vesselState.speedVertical < 10))                          {                              core.thrust.tmode = MechJebModuleThrustController.TMode.DIRECT;                              core.attitude.attitudeTo(Vector3d.up' AttitudeReference.SURFACE_NORTH' this);                              double int_error = Math.Abs(Vector3d.Angle(vesselState.up' vesselState.forward));                              core.thrust.trans_spd_act = (int_error < 90) ? 100 : 0;                          }                          else                          {                              abort = AbortStage.LAND;                          }                          break;                      case AbortStage.LAND:                          core.thrust.users.Remove(this);                          core.GetComputerModule<MechJebModuleLandingAutopilot>().LandUntargeted(this);                          abort = AbortStage.LANDING;                          break;                      case AbortStage.LANDING:                          if (vessel.LandedOrSplashed)                          {                              abort = AbortStage.OFF;                          }                          break;                  }
Magic Number,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,Drive,The following statement contains a magic number: switch (abort)                  {                      case AbortStage.THRUSTOFF:                          FlightInputHandler.SetNeutralControls();                          s.mainThrottle = 0;                          abort = AbortStage.DECOUPLE;                          break;                      case AbortStage.DECOUPLE:                          recursiveDecouple();                          abort = AbortStage.BURNUP;                          burnUpTime = Planetarium.GetUniversalTime();                          break;                      case AbortStage.BURNUP:                          if ((Planetarium.GetUniversalTime() - burnUpTime < 2) || (vesselState.speedVertical < 10))                          {                              core.thrust.tmode = MechJebModuleThrustController.TMode.DIRECT;                              core.attitude.attitudeTo(Vector3d.up' AttitudeReference.SURFACE_NORTH' this);                              double int_error = Math.Abs(Vector3d.Angle(vesselState.up' vesselState.forward));                              core.thrust.trans_spd_act = (int_error < 90) ? 100 : 0;                          }                          else                          {                              abort = AbortStage.LAND;                          }                          break;                      case AbortStage.LAND:                          core.thrust.users.Remove(this);                          core.GetComputerModule<MechJebModuleLandingAutopilot>().LandUntargeted(this);                          abort = AbortStage.LANDING;                          break;                      case AbortStage.LANDING:                          if (vessel.LandedOrSplashed)                          {                              abort = AbortStage.OFF;                          }                          break;                  }
Magic Number,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,Drive,The following statement contains a magic number: switch (abort)                  {                      case AbortStage.THRUSTOFF:                          FlightInputHandler.SetNeutralControls();                          s.mainThrottle = 0;                          abort = AbortStage.DECOUPLE;                          break;                      case AbortStage.DECOUPLE:                          recursiveDecouple();                          abort = AbortStage.BURNUP;                          burnUpTime = Planetarium.GetUniversalTime();                          break;                      case AbortStage.BURNUP:                          if ((Planetarium.GetUniversalTime() - burnUpTime < 2) || (vesselState.speedVertical < 10))                          {                              core.thrust.tmode = MechJebModuleThrustController.TMode.DIRECT;                              core.attitude.attitudeTo(Vector3d.up' AttitudeReference.SURFACE_NORTH' this);                              double int_error = Math.Abs(Vector3d.Angle(vesselState.up' vesselState.forward));                              core.thrust.trans_spd_act = (int_error < 90) ? 100 : 0;                          }                          else                          {                              abort = AbortStage.LAND;                          }                          break;                      case AbortStage.LAND:                          core.thrust.users.Remove(this);                          core.GetComputerModule<MechJebModuleLandingAutopilot>().LandUntargeted(this);                          abort = AbortStage.LANDING;                          break;                      case AbortStage.LANDING:                          if (vessel.LandedOrSplashed)                          {                              abort = AbortStage.OFF;                          }                          break;                  }
Magic Number,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,Drive,The following statement contains a magic number: switch (abort)                  {                      case AbortStage.THRUSTOFF:                          FlightInputHandler.SetNeutralControls();                          s.mainThrottle = 0;                          abort = AbortStage.DECOUPLE;                          break;                      case AbortStage.DECOUPLE:                          recursiveDecouple();                          abort = AbortStage.BURNUP;                          burnUpTime = Planetarium.GetUniversalTime();                          break;                      case AbortStage.BURNUP:                          if ((Planetarium.GetUniversalTime() - burnUpTime < 2) || (vesselState.speedVertical < 10))                          {                              core.thrust.tmode = MechJebModuleThrustController.TMode.DIRECT;                              core.attitude.attitudeTo(Vector3d.up' AttitudeReference.SURFACE_NORTH' this);                              double int_error = Math.Abs(Vector3d.Angle(vesselState.up' vesselState.forward));                              core.thrust.trans_spd_act = (int_error < 90) ? 100 : 0;                          }                          else                          {                              abort = AbortStage.LAND;                          }                          break;                      case AbortStage.LAND:                          core.thrust.users.Remove(this);                          core.GetComputerModule<MechJebModuleLandingAutopilot>().LandUntargeted(this);                          abort = AbortStage.LANDING;                          break;                      case AbortStage.LANDING:                          if (vessel.LandedOrSplashed)                          {                              abort = AbortStage.OFF;                          }                          break;                  }
Magic Number,MuMech,MechJebModuleWarpController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpController.cs,MechJebModuleWarpController,The following statement contains a magic number: priority = 100;
Magic Number,MuMech,MechJebModuleWarpController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpController.cs,WarpToUT,The following statement contains a magic number: desiredRate = TimeWarp.fetch.warpRates[i] + 0.1;
Magic Number,MuMech,MechJebModuleWarpController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpController.cs,WarpToUT,The following statement contains a magic number: WarpPhysicsAtRate((float)Math.Min(desiredRate' 2));
Magic Number,MuMech,MechJebModuleWarpController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpController.cs,IncreaseRegularWarp,The following statement contains a magic number: vesselState.time - warpIncreaseAttemptTime < 2
Magic Number,MuMech,MechJebModuleWarpController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpController.cs,IncreasePhysicsWarp,The following statement contains a magic number: vesselState.time - warpIncreaseAttemptTime < 2
Magic Number,MuMech,MechJebModuleWarpHelper,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpHelper.cs,WindowGUI,The following statement contains a magic number: timeOffset.text = GUILayout.TextField(timeOffset.text' GUILayout.Width(100));
Magic Number,MuMech,MechJebModuleWarpHelper,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpHelper.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(240)' GUILayout.Height(50) };
Magic Number,MuMech,MechJebModuleWarpHelper,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWarpHelper.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(240)' GUILayout.Height(50) };
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,GetMouseFlightCoordinates,The following statement contains a magic number: Physics.Raycast(mouseRay' out raycast' (float)body.Radius * 4f' 1 << 15)
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,GetMouseFlightCoordinates,The following statement contains a magic number: Physics.Raycast(mouseRay' out raycast' (float)body.Radius * 4f' 1 << 15)
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,LatToString,The following statement contains a magic number: Lat -= 180;
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,LatToString,The following statement contains a magic number: Lat >  90
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,LatToString,The following statement contains a magic number: Lat += 180;
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,LatToString,The following statement contains a magic number: Lat < -90
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,LatToString,The following statement contains a magic number: Lat *= 60;
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,LatToString,The following statement contains a magic number: Lat *= 60;
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,LonToString,The following statement contains a magic number: Lon -= 360;
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,LonToString,The following statement contains a magic number: Lon >  180
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,LonToString,The following statement contains a magic number: Lon += 360;
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,LonToString,The following statement contains a magic number: Lon < -180
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,LonToString,The following statement contains a magic number: Lon *= 60;
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,LonToString,The following statement contains a magic number: Lon *= 60;
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,ParseCoord,The following statement contains a magic number: var range = (IsLongitute ? 180 : 90);
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,ParseCoord,The following statement contains a magic number: var range = (IsLongitute ? 180 : 90);
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,ParseCoord,The following statement contains a magic number: match.Groups[5].Value.ToUpper() == "N" || match.Groups[5].Value.ToUpper() == "E"
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,ParseCoord,The following statement contains a magic number: match.Groups[5].Value.ToUpper() == "N" || match.Groups[5].Value.ToUpper() == "E"
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,ParseCoord,The following statement contains a magic number: match.Groups[5] != null
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,ParseCoord,The following statement contains a magic number: float.TryParse(match.Groups[2].Value' out h);
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,ParseCoord,The following statement contains a magic number: match.Groups[2] != null
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,ParseCoord,The following statement contains a magic number: float.TryParse(match.Groups[3].Value' out m);
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,ParseCoord,The following statement contains a magic number: match.Groups[3] != null
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,ParseCoord,The following statement contains a magic number: float.TryParse(match.Groups[4].Value' out s);
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,ParseCoord,The following statement contains a magic number: match.Groups[4] != null
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,ParseCoord,The following statement contains a magic number: h = (h + (m / 60) + (s / 3600)) * nsew;
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,ParseCoord,The following statement contains a magic number: h = (h + (m / 60) + (s / 3600)) * nsew;
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,ParseCoord,The following statement contains a magic number: h -= range * 2;
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,ParseCoord,The following statement contains a magic number: h += range * 2;
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(500)' GUILayout.Height(400) };
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowOptions,The following statement contains a magic number: return new GUILayoutOption[] { GUILayout.Width(500)' GUILayout.Height(400) };
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The following statement contains a magic number: MuMech.GLUtils.DrawGroundMarker(mainBody' wp.Latitude' wp.Longitude' Color.red' true' (DateTime.Now.Second + DateTime.Now.Millisecond / 1000f) * 6' mainBody.Radius / 100);
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The following statement contains a magic number: MuMech.GLUtils.DrawGroundMarker(mainBody' wp.Latitude' wp.Longitude' Color.red' true' (DateTime.Now.Second + DateTime.Now.Millisecond / 1000f) * 6' mainBody.Radius / 100);
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The following statement contains a magic number: MuMech.GLUtils.DrawGroundMarker(mainBody' wp.Latitude' wp.Longitude' Color.red' true' (DateTime.Now.Second + DateTime.Now.Millisecond / 1000f) * 6' mainBody.Radius / 100);
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The following statement contains a magic number: eta += GuiUtils.FromToETA((i == ap.WaypointIndex ? vessel.CoM : (Vector3)ap.Waypoints[i - 1].Position)' (Vector3)wp.Position' (ap.etaSpeed > 0.1 && ap.etaSpeed < maxSpeed ? (float)Math.Round(ap.etaSpeed' 1) : maxSpeed));
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The following statement contains a magic number: GUI.backgroundColor = (i == ap.WaypointIndex ? new Color(0.5f' 1f' 0.5f) : Color.white);
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The following statement contains a magic number: GUI.backgroundColor = (i == ap.WaypointIndex ? new Color(0.5f' 1f' 0.5f) : Color.white);
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The following statement contains a magic number: tmpRadius = GUILayout.TextField(tmpRadius' GUILayout.Width(50));
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The following statement contains a magic number: tmpMinSpeed = GUILayout.TextField(tmpMinSpeed' GUILayout.Width(40));
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The following statement contains a magic number: tmpMaxSpeed = GUILayout.TextField(tmpMaxSpeed' GUILayout.Width(40));
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The following statement contains a magic number: tmpLat = GUILayout.TextField(tmpLat' GUILayout.Width(125));
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The following statement contains a magic number: tmpLon = GUILayout.TextField(tmpLon' GUILayout.Width(125));
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The following statement contains a magic number: GUILayout.Button(alt ? "Reverse" : (!waitingForPick ? "Add Waypoint" : "Abort Adding")' GUILayout.Width(110))
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The following statement contains a magic number: GUILayout.Button((alt ? "Clear" : "Remove")' GUILayout.Width(65)) && selIndex >= 0 && ap.Waypoints.Count > 0
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The following statement contains a magic number: GUILayout.Button((alt ? "Top" : "Up")' GUILayout.Width(57)) && selIndex > 0 && selIndex < ap.Waypoints.Count && ap.Waypoints.Count >= 2
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The following statement contains a magic number: GUILayout.Button((alt ? "Top" : "Up")' GUILayout.Width(57)) && selIndex > 0 && selIndex < ap.Waypoints.Count && ap.Waypoints.Count >= 2
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The following statement contains a magic number: GUILayout.Button((alt ? "Bottom" : "Down")' GUILayout.Width(57)) && selIndex >= 0 && selIndex < ap.Waypoints.Count - 1 && ap.Waypoints.Count >= 2
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The following statement contains a magic number: GUILayout.Button((alt ? "Bottom" : "Down")' GUILayout.Width(57)) && selIndex >= 0 && selIndex < ap.Waypoints.Count - 1 && ap.Waypoints.Count >= 2
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageWaypoints,The following statement contains a magic number: scroll.y = waypointRects[ap.WaypointIndex].y - 160;
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageRoutes,The following statement contains a magic number: GUILayout.Button("Delete"' GUILayout.Width(70))
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageRoutes,The following statement contains a magic number: saveName = GUILayout.TextField(saveName' GUILayout.Width(150));
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageRoutes,The following statement contains a magic number: GUILayout.Button("Save"' GUILayout.Width(50))
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageRoutes,The following statement contains a magic number: GUILayout.Button((alt ? "Add" : "Load")' GUILayout.Width(50))
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The following statement contains a magic number: GUI.Button(new Rect(windowPos.width - 48' 0' 13' 20)' "?"' GuiUtils.yellowOnHover)
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The following statement contains a magic number: GUI.Button(new Rect(windowPos.width - 48' 0' 13' 20)' "?"' GuiUtils.yellowOnHover)
Magic Number,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The following statement contains a magic number: GUI.Button(new Rect(windowPos.width - 48' 0' 13' 20)' "?"' GuiUtils.yellowOnHover)
Magic Number,MuMech,MechJebRouteRenderer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,NewLineRenderer,The following statement contains a magic number: line.startWidth = 10.0f;
Magic Number,MuMech,MechJebRouteRenderer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,NewLineRenderer,The following statement contains a magic number: line.endWidth = 10.0f;
Magic Number,MuMech,MechJebRouteRenderer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,NewLineRenderer,The following statement contains a magic number: line.positionCount = 2;
Magic Number,MuMech,MechJebRouteRenderer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,OnPreRender,The following statement contains a magic number: float targetHeight = (MapView.MapIsEnabled ? (float)addHeight : 3f);
Magic Number,MuMech,MechJebRouteRenderer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,OnPreRender,The following statement contains a magic number: float scale = Vector3.Distance(FlightCamera.fetch.mainCamera.transform.position' ap.vessel.CoM) / 700f;
Magic Number,MuMech,MechJebRouteRenderer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,OnPreRender,The following statement contains a magic number: float width = (MapView.MapIsEnabled ? (float)(0.005 * PlanetariumCamera.fetch.Distance) : scale + 0.1f);
Magic Number,MuMech,MechJebRouteRenderer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,OnPreRender,The following statement contains a magic number: float width = (MapView.MapIsEnabled ? (float)(0.005 * PlanetariumCamera.fetch.Distance) : scale + 0.1f);
Magic Number,MuMech,MechJebRouteRenderer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,OnPreRender,The following statement contains a magic number: selWP.gameObject.layer = pastPath.gameObject.layer = currPath.gameObject.layer = nextPath.gameObject.layer = (MapView.MapIsEnabled ? 9 : 0);
Magic Number,MuMech,MechJebRouteRenderer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,OnPreRender,The following statement contains a magic number: float w = Vector3.Distance(FlightCamera.fetch.mainCamera.transform.position' ap.Waypoints[sel].Position) / 600f + 0.1f;
Magic Number,MuMech,MechJebRouteRenderer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,OnPreRender,The following statement contains a magic number: float w = Vector3.Distance(FlightCamera.fetch.mainCamera.transform.position' ap.Waypoints[sel].Position) / 600f + 0.1f;
Magic Number,MuMech,MechJebRouteRenderer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,OnPreRender,The following statement contains a magic number: selWP.endWidth = w * 10f;
Magic Number,MuMech,MechJebRouteRenderer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,OnPreRender,The following statement contains a magic number: selWP.SetPosition(0' RaisePositionOverTerrain(ap.Waypoints[sel].Position' targetHeight + 3f));
Magic Number,MuMech,MechJebRouteRenderer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,OnPreRender,The following statement contains a magic number: selWP.SetPosition(1' RaisePositionOverTerrain(ap.Waypoints[sel].Position' targetHeight + 3f + w * 15f));
Magic Number,MuMech,MechJebRouteRenderer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,OnPreRender,The following statement contains a magic number: selWP.SetPosition(1' RaisePositionOverTerrain(ap.Waypoints[sel].Position' targetHeight + 3f + w * 15f));
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: float direction = ((vessel.GetSrfVelocity().magnitude > 25) && (Vector3.Angle(vessel.transform.up' vessel.GetSrfVelocity()) > 90)) ? -1 : 1;
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: float direction = ((vessel.GetSrfVelocity().magnitude > 25) && (Vector3.Angle(vessel.transform.up' vessel.GetSrfVelocity()) > 90)) ? -1 : 1;
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: lastFlaps[0] = AdvanceAnimationTo(flapsAnim' "Flap_Top_Right"' Mathf.Clamp01(direction * (vessel.ctrlState.pitch - vessel.ctrlState.yaw) / 2)' TimeWarp.deltaTime' lastFlaps[0]);
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: lastFlaps[1] = AdvanceAnimationTo(flapsAnim' "Flap_Top_Left"' Mathf.Clamp01(direction * (vessel.ctrlState.pitch + vessel.ctrlState.yaw) / 2)' TimeWarp.deltaTime' lastFlaps[1]);
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: lastFlaps[2] = AdvanceAnimationTo(flapsAnim' "Flap_Bottom_Right"' Mathf.Clamp01(direction * (-vessel.ctrlState.pitch - vessel.ctrlState.yaw) / 2)' TimeWarp.deltaTime' lastFlaps[2]);
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: lastFlaps[2] = AdvanceAnimationTo(flapsAnim' "Flap_Bottom_Right"' Mathf.Clamp01(direction * (-vessel.ctrlState.pitch - vessel.ctrlState.yaw) / 2)' TimeWarp.deltaTime' lastFlaps[2]);
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: lastFlaps[2] = AdvanceAnimationTo(flapsAnim' "Flap_Bottom_Right"' Mathf.Clamp01(direction * (-vessel.ctrlState.pitch - vessel.ctrlState.yaw) / 2)' TimeWarp.deltaTime' lastFlaps[2]);
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: lastFlaps[3] = AdvanceAnimationTo(flapsAnim' "Flap_Bottom_Left"' Mathf.Clamp01(direction * (-vessel.ctrlState.pitch + vessel.ctrlState.yaw) / 2)' TimeWarp.deltaTime' lastFlaps[3]);
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: lastFlaps[3] = AdvanceAnimationTo(flapsAnim' "Flap_Bottom_Left"' Mathf.Clamp01(direction * (-vessel.ctrlState.pitch + vessel.ctrlState.yaw) / 2)' TimeWarp.deltaTime' lastFlaps[3]);
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: lastFlaps[3] = AdvanceAnimationTo(flapsAnim' "Flap_Bottom_Left"' Mathf.Clamp01(direction * (-vessel.ctrlState.pitch + vessel.ctrlState.yaw) / 2)' TimeWarp.deltaTime' lastFlaps[3]);
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: switch (state)              {                  case State.OFF:                      if (HighLogic.LoadedSceneIsEditor || (HighLogic.LoadedSceneIsFlight && FlightGlobals.ready && vessel != null && core.attitude.enabled))                      {                          state = State.AWAKENING;                          part.FindModelAnimators("Waking")[0].Play("Waking");                      }                      break;                  case State.AWAKENING:                      if (!part.FindModelAnimators("Waking")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Waking")[0]' "Waking"' 1' 100);                            state = State.AWAKE;                          lastBlink = lastAction = Time.time;                      }                      break;                  case State.AWAKE:                      if (!part.FindModelAnimators("Blink")[0].isPlaying)                      {                          if ((UnityEngine.Random.Range(0' 10.0F / (HighLogic.LoadedSceneIsEditor ? Time.deltaTime : TimeWarp.deltaTime)) < (Time.time - lastBlink)))                          {                              part.FindModelAnimators("Blink")[0].Play("Blink");                              lastBlink = Time.time;                          }                          GameObject cam = HighLogic.LoadedSceneIsEditor ? EditorLogic.fetch.editorCamera.gameObject : FlightCamera.fetch.gameObject;                          Vector3 target = (cam.transform.position - part.transform.position).normalized;                          if (core.attitude.enabled)                          {                              target = core.attitude.attitudeGetReferenceRotation(core.attitude.attitudeReference) * core.attitude.attitudeTarget * Quaternion.Euler(90' 0' 0) * Vector3.up;                              lastAction = Time.time;                          }                          Vector3 localTarget = part.transform.InverseTransformDirection(target);                          Vector2 polarTarget = CartesianToPolar(localTarget);                          if (Mathfx.Approx(polarTarget.x' -90' 1) || Mathfx.Approx(polarTarget.x' 90' 1))                          {                              polarTarget.y = eye_base.localEulerAngles.z + 90;                          }                          if ((!HighLogic.LoadedSceneIsEditor && (Time.time - lastAction > 30)))                          {                              if (Mathfx.Approx(eye_base.localEulerAngles.z' 0' 1) && Mathfx.Approx(eye_ball.localEulerAngles.x' 0' 1))                              {                                  state = State.SLEEPING;                                  part.FindModelAnimators("Sleeping")[0].Play("Sleeping");                              }                              else                              {                                  polarTarget = new Vector2(-90' 90);                              }                          }                          if (afx != null && afx.FxScalar > 0)                          {                              polarTarget = new Vector2(90' 90);                          }                          eye_base.localEulerAngles = new Vector3(0' 0' Mathf.MoveTowardsAngle(eye_base.localEulerAngles.z' polarTarget.y - 90' 360 * Time.deltaTime));                          eye_ball.localRotation = Quaternion.RotateTowards(eye_ball.localRotation' Quaternion.Euler(polarTarget.x + 90' 0' 0)' 360 * Time.deltaTime);                      }                      break;                  case State.SLEEPING:                      if (!part.FindModelAnimators("Sleeping")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Sleeping")[0]' "Sleeping"' 1' 100);                            state = State.OFF;                      }                      break;                  default:                      break;              }
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: switch (state)              {                  case State.OFF:                      if (HighLogic.LoadedSceneIsEditor || (HighLogic.LoadedSceneIsFlight && FlightGlobals.ready && vessel != null && core.attitude.enabled))                      {                          state = State.AWAKENING;                          part.FindModelAnimators("Waking")[0].Play("Waking");                      }                      break;                  case State.AWAKENING:                      if (!part.FindModelAnimators("Waking")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Waking")[0]' "Waking"' 1' 100);                            state = State.AWAKE;                          lastBlink = lastAction = Time.time;                      }                      break;                  case State.AWAKE:                      if (!part.FindModelAnimators("Blink")[0].isPlaying)                      {                          if ((UnityEngine.Random.Range(0' 10.0F / (HighLogic.LoadedSceneIsEditor ? Time.deltaTime : TimeWarp.deltaTime)) < (Time.time - lastBlink)))                          {                              part.FindModelAnimators("Blink")[0].Play("Blink");                              lastBlink = Time.time;                          }                          GameObject cam = HighLogic.LoadedSceneIsEditor ? EditorLogic.fetch.editorCamera.gameObject : FlightCamera.fetch.gameObject;                          Vector3 target = (cam.transform.position - part.transform.position).normalized;                          if (core.attitude.enabled)                          {                              target = core.attitude.attitudeGetReferenceRotation(core.attitude.attitudeReference) * core.attitude.attitudeTarget * Quaternion.Euler(90' 0' 0) * Vector3.up;                              lastAction = Time.time;                          }                          Vector3 localTarget = part.transform.InverseTransformDirection(target);                          Vector2 polarTarget = CartesianToPolar(localTarget);                          if (Mathfx.Approx(polarTarget.x' -90' 1) || Mathfx.Approx(polarTarget.x' 90' 1))                          {                              polarTarget.y = eye_base.localEulerAngles.z + 90;                          }                          if ((!HighLogic.LoadedSceneIsEditor && (Time.time - lastAction > 30)))                          {                              if (Mathfx.Approx(eye_base.localEulerAngles.z' 0' 1) && Mathfx.Approx(eye_ball.localEulerAngles.x' 0' 1))                              {                                  state = State.SLEEPING;                                  part.FindModelAnimators("Sleeping")[0].Play("Sleeping");                              }                              else                              {                                  polarTarget = new Vector2(-90' 90);                              }                          }                          if (afx != null && afx.FxScalar > 0)                          {                              polarTarget = new Vector2(90' 90);                          }                          eye_base.localEulerAngles = new Vector3(0' 0' Mathf.MoveTowardsAngle(eye_base.localEulerAngles.z' polarTarget.y - 90' 360 * Time.deltaTime));                          eye_ball.localRotation = Quaternion.RotateTowards(eye_ball.localRotation' Quaternion.Euler(polarTarget.x + 90' 0' 0)' 360 * Time.deltaTime);                      }                      break;                  case State.SLEEPING:                      if (!part.FindModelAnimators("Sleeping")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Sleeping")[0]' "Sleeping"' 1' 100);                            state = State.OFF;                      }                      break;                  default:                      break;              }
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: switch (state)              {                  case State.OFF:                      if (HighLogic.LoadedSceneIsEditor || (HighLogic.LoadedSceneIsFlight && FlightGlobals.ready && vessel != null && core.attitude.enabled))                      {                          state = State.AWAKENING;                          part.FindModelAnimators("Waking")[0].Play("Waking");                      }                      break;                  case State.AWAKENING:                      if (!part.FindModelAnimators("Waking")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Waking")[0]' "Waking"' 1' 100);                            state = State.AWAKE;                          lastBlink = lastAction = Time.time;                      }                      break;                  case State.AWAKE:                      if (!part.FindModelAnimators("Blink")[0].isPlaying)                      {                          if ((UnityEngine.Random.Range(0' 10.0F / (HighLogic.LoadedSceneIsEditor ? Time.deltaTime : TimeWarp.deltaTime)) < (Time.time - lastBlink)))                          {                              part.FindModelAnimators("Blink")[0].Play("Blink");                              lastBlink = Time.time;                          }                          GameObject cam = HighLogic.LoadedSceneIsEditor ? EditorLogic.fetch.editorCamera.gameObject : FlightCamera.fetch.gameObject;                          Vector3 target = (cam.transform.position - part.transform.position).normalized;                          if (core.attitude.enabled)                          {                              target = core.attitude.attitudeGetReferenceRotation(core.attitude.attitudeReference) * core.attitude.attitudeTarget * Quaternion.Euler(90' 0' 0) * Vector3.up;                              lastAction = Time.time;                          }                          Vector3 localTarget = part.transform.InverseTransformDirection(target);                          Vector2 polarTarget = CartesianToPolar(localTarget);                          if (Mathfx.Approx(polarTarget.x' -90' 1) || Mathfx.Approx(polarTarget.x' 90' 1))                          {                              polarTarget.y = eye_base.localEulerAngles.z + 90;                          }                          if ((!HighLogic.LoadedSceneIsEditor && (Time.time - lastAction > 30)))                          {                              if (Mathfx.Approx(eye_base.localEulerAngles.z' 0' 1) && Mathfx.Approx(eye_ball.localEulerAngles.x' 0' 1))                              {                                  state = State.SLEEPING;                                  part.FindModelAnimators("Sleeping")[0].Play("Sleeping");                              }                              else                              {                                  polarTarget = new Vector2(-90' 90);                              }                          }                          if (afx != null && afx.FxScalar > 0)                          {                              polarTarget = new Vector2(90' 90);                          }                          eye_base.localEulerAngles = new Vector3(0' 0' Mathf.MoveTowardsAngle(eye_base.localEulerAngles.z' polarTarget.y - 90' 360 * Time.deltaTime));                          eye_ball.localRotation = Quaternion.RotateTowards(eye_ball.localRotation' Quaternion.Euler(polarTarget.x + 90' 0' 0)' 360 * Time.deltaTime);                      }                      break;                  case State.SLEEPING:                      if (!part.FindModelAnimators("Sleeping")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Sleeping")[0]' "Sleeping"' 1' 100);                            state = State.OFF;                      }                      break;                  default:                      break;              }
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: switch (state)              {                  case State.OFF:                      if (HighLogic.LoadedSceneIsEditor || (HighLogic.LoadedSceneIsFlight && FlightGlobals.ready && vessel != null && core.attitude.enabled))                      {                          state = State.AWAKENING;                          part.FindModelAnimators("Waking")[0].Play("Waking");                      }                      break;                  case State.AWAKENING:                      if (!part.FindModelAnimators("Waking")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Waking")[0]' "Waking"' 1' 100);                            state = State.AWAKE;                          lastBlink = lastAction = Time.time;                      }                      break;                  case State.AWAKE:                      if (!part.FindModelAnimators("Blink")[0].isPlaying)                      {                          if ((UnityEngine.Random.Range(0' 10.0F / (HighLogic.LoadedSceneIsEditor ? Time.deltaTime : TimeWarp.deltaTime)) < (Time.time - lastBlink)))                          {                              part.FindModelAnimators("Blink")[0].Play("Blink");                              lastBlink = Time.time;                          }                          GameObject cam = HighLogic.LoadedSceneIsEditor ? EditorLogic.fetch.editorCamera.gameObject : FlightCamera.fetch.gameObject;                          Vector3 target = (cam.transform.position - part.transform.position).normalized;                          if (core.attitude.enabled)                          {                              target = core.attitude.attitudeGetReferenceRotation(core.attitude.attitudeReference) * core.attitude.attitudeTarget * Quaternion.Euler(90' 0' 0) * Vector3.up;                              lastAction = Time.time;                          }                          Vector3 localTarget = part.transform.InverseTransformDirection(target);                          Vector2 polarTarget = CartesianToPolar(localTarget);                          if (Mathfx.Approx(polarTarget.x' -90' 1) || Mathfx.Approx(polarTarget.x' 90' 1))                          {                              polarTarget.y = eye_base.localEulerAngles.z + 90;                          }                          if ((!HighLogic.LoadedSceneIsEditor && (Time.time - lastAction > 30)))                          {                              if (Mathfx.Approx(eye_base.localEulerAngles.z' 0' 1) && Mathfx.Approx(eye_ball.localEulerAngles.x' 0' 1))                              {                                  state = State.SLEEPING;                                  part.FindModelAnimators("Sleeping")[0].Play("Sleeping");                              }                              else                              {                                  polarTarget = new Vector2(-90' 90);                              }                          }                          if (afx != null && afx.FxScalar > 0)                          {                              polarTarget = new Vector2(90' 90);                          }                          eye_base.localEulerAngles = new Vector3(0' 0' Mathf.MoveTowardsAngle(eye_base.localEulerAngles.z' polarTarget.y - 90' 360 * Time.deltaTime));                          eye_ball.localRotation = Quaternion.RotateTowards(eye_ball.localRotation' Quaternion.Euler(polarTarget.x + 90' 0' 0)' 360 * Time.deltaTime);                      }                      break;                  case State.SLEEPING:                      if (!part.FindModelAnimators("Sleeping")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Sleeping")[0]' "Sleeping"' 1' 100);                            state = State.OFF;                      }                      break;                  default:                      break;              }
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: switch (state)              {                  case State.OFF:                      if (HighLogic.LoadedSceneIsEditor || (HighLogic.LoadedSceneIsFlight && FlightGlobals.ready && vessel != null && core.attitude.enabled))                      {                          state = State.AWAKENING;                          part.FindModelAnimators("Waking")[0].Play("Waking");                      }                      break;                  case State.AWAKENING:                      if (!part.FindModelAnimators("Waking")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Waking")[0]' "Waking"' 1' 100);                            state = State.AWAKE;                          lastBlink = lastAction = Time.time;                      }                      break;                  case State.AWAKE:                      if (!part.FindModelAnimators("Blink")[0].isPlaying)                      {                          if ((UnityEngine.Random.Range(0' 10.0F / (HighLogic.LoadedSceneIsEditor ? Time.deltaTime : TimeWarp.deltaTime)) < (Time.time - lastBlink)))                          {                              part.FindModelAnimators("Blink")[0].Play("Blink");                              lastBlink = Time.time;                          }                          GameObject cam = HighLogic.LoadedSceneIsEditor ? EditorLogic.fetch.editorCamera.gameObject : FlightCamera.fetch.gameObject;                          Vector3 target = (cam.transform.position - part.transform.position).normalized;                          if (core.attitude.enabled)                          {                              target = core.attitude.attitudeGetReferenceRotation(core.attitude.attitudeReference) * core.attitude.attitudeTarget * Quaternion.Euler(90' 0' 0) * Vector3.up;                              lastAction = Time.time;                          }                          Vector3 localTarget = part.transform.InverseTransformDirection(target);                          Vector2 polarTarget = CartesianToPolar(localTarget);                          if (Mathfx.Approx(polarTarget.x' -90' 1) || Mathfx.Approx(polarTarget.x' 90' 1))                          {                              polarTarget.y = eye_base.localEulerAngles.z + 90;                          }                          if ((!HighLogic.LoadedSceneIsEditor && (Time.time - lastAction > 30)))                          {                              if (Mathfx.Approx(eye_base.localEulerAngles.z' 0' 1) && Mathfx.Approx(eye_ball.localEulerAngles.x' 0' 1))                              {                                  state = State.SLEEPING;                                  part.FindModelAnimators("Sleeping")[0].Play("Sleeping");                              }                              else                              {                                  polarTarget = new Vector2(-90' 90);                              }                          }                          if (afx != null && afx.FxScalar > 0)                          {                              polarTarget = new Vector2(90' 90);                          }                          eye_base.localEulerAngles = new Vector3(0' 0' Mathf.MoveTowardsAngle(eye_base.localEulerAngles.z' polarTarget.y - 90' 360 * Time.deltaTime));                          eye_ball.localRotation = Quaternion.RotateTowards(eye_ball.localRotation' Quaternion.Euler(polarTarget.x + 90' 0' 0)' 360 * Time.deltaTime);                      }                      break;                  case State.SLEEPING:                      if (!part.FindModelAnimators("Sleeping")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Sleeping")[0]' "Sleeping"' 1' 100);                            state = State.OFF;                      }                      break;                  default:                      break;              }
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: switch (state)              {                  case State.OFF:                      if (HighLogic.LoadedSceneIsEditor || (HighLogic.LoadedSceneIsFlight && FlightGlobals.ready && vessel != null && core.attitude.enabled))                      {                          state = State.AWAKENING;                          part.FindModelAnimators("Waking")[0].Play("Waking");                      }                      break;                  case State.AWAKENING:                      if (!part.FindModelAnimators("Waking")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Waking")[0]' "Waking"' 1' 100);                            state = State.AWAKE;                          lastBlink = lastAction = Time.time;                      }                      break;                  case State.AWAKE:                      if (!part.FindModelAnimators("Blink")[0].isPlaying)                      {                          if ((UnityEngine.Random.Range(0' 10.0F / (HighLogic.LoadedSceneIsEditor ? Time.deltaTime : TimeWarp.deltaTime)) < (Time.time - lastBlink)))                          {                              part.FindModelAnimators("Blink")[0].Play("Blink");                              lastBlink = Time.time;                          }                          GameObject cam = HighLogic.LoadedSceneIsEditor ? EditorLogic.fetch.editorCamera.gameObject : FlightCamera.fetch.gameObject;                          Vector3 target = (cam.transform.position - part.transform.position).normalized;                          if (core.attitude.enabled)                          {                              target = core.attitude.attitudeGetReferenceRotation(core.attitude.attitudeReference) * core.attitude.attitudeTarget * Quaternion.Euler(90' 0' 0) * Vector3.up;                              lastAction = Time.time;                          }                          Vector3 localTarget = part.transform.InverseTransformDirection(target);                          Vector2 polarTarget = CartesianToPolar(localTarget);                          if (Mathfx.Approx(polarTarget.x' -90' 1) || Mathfx.Approx(polarTarget.x' 90' 1))                          {                              polarTarget.y = eye_base.localEulerAngles.z + 90;                          }                          if ((!HighLogic.LoadedSceneIsEditor && (Time.time - lastAction > 30)))                          {                              if (Mathfx.Approx(eye_base.localEulerAngles.z' 0' 1) && Mathfx.Approx(eye_ball.localEulerAngles.x' 0' 1))                              {                                  state = State.SLEEPING;                                  part.FindModelAnimators("Sleeping")[0].Play("Sleeping");                              }                              else                              {                                  polarTarget = new Vector2(-90' 90);                              }                          }                          if (afx != null && afx.FxScalar > 0)                          {                              polarTarget = new Vector2(90' 90);                          }                          eye_base.localEulerAngles = new Vector3(0' 0' Mathf.MoveTowardsAngle(eye_base.localEulerAngles.z' polarTarget.y - 90' 360 * Time.deltaTime));                          eye_ball.localRotation = Quaternion.RotateTowards(eye_ball.localRotation' Quaternion.Euler(polarTarget.x + 90' 0' 0)' 360 * Time.deltaTime);                      }                      break;                  case State.SLEEPING:                      if (!part.FindModelAnimators("Sleeping")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Sleeping")[0]' "Sleeping"' 1' 100);                            state = State.OFF;                      }                      break;                  default:                      break;              }
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: switch (state)              {                  case State.OFF:                      if (HighLogic.LoadedSceneIsEditor || (HighLogic.LoadedSceneIsFlight && FlightGlobals.ready && vessel != null && core.attitude.enabled))                      {                          state = State.AWAKENING;                          part.FindModelAnimators("Waking")[0].Play("Waking");                      }                      break;                  case State.AWAKENING:                      if (!part.FindModelAnimators("Waking")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Waking")[0]' "Waking"' 1' 100);                            state = State.AWAKE;                          lastBlink = lastAction = Time.time;                      }                      break;                  case State.AWAKE:                      if (!part.FindModelAnimators("Blink")[0].isPlaying)                      {                          if ((UnityEngine.Random.Range(0' 10.0F / (HighLogic.LoadedSceneIsEditor ? Time.deltaTime : TimeWarp.deltaTime)) < (Time.time - lastBlink)))                          {                              part.FindModelAnimators("Blink")[0].Play("Blink");                              lastBlink = Time.time;                          }                          GameObject cam = HighLogic.LoadedSceneIsEditor ? EditorLogic.fetch.editorCamera.gameObject : FlightCamera.fetch.gameObject;                          Vector3 target = (cam.transform.position - part.transform.position).normalized;                          if (core.attitude.enabled)                          {                              target = core.attitude.attitudeGetReferenceRotation(core.attitude.attitudeReference) * core.attitude.attitudeTarget * Quaternion.Euler(90' 0' 0) * Vector3.up;                              lastAction = Time.time;                          }                          Vector3 localTarget = part.transform.InverseTransformDirection(target);                          Vector2 polarTarget = CartesianToPolar(localTarget);                          if (Mathfx.Approx(polarTarget.x' -90' 1) || Mathfx.Approx(polarTarget.x' 90' 1))                          {                              polarTarget.y = eye_base.localEulerAngles.z + 90;                          }                          if ((!HighLogic.LoadedSceneIsEditor && (Time.time - lastAction > 30)))                          {                              if (Mathfx.Approx(eye_base.localEulerAngles.z' 0' 1) && Mathfx.Approx(eye_ball.localEulerAngles.x' 0' 1))                              {                                  state = State.SLEEPING;                                  part.FindModelAnimators("Sleeping")[0].Play("Sleeping");                              }                              else                              {                                  polarTarget = new Vector2(-90' 90);                              }                          }                          if (afx != null && afx.FxScalar > 0)                          {                              polarTarget = new Vector2(90' 90);                          }                          eye_base.localEulerAngles = new Vector3(0' 0' Mathf.MoveTowardsAngle(eye_base.localEulerAngles.z' polarTarget.y - 90' 360 * Time.deltaTime));                          eye_ball.localRotation = Quaternion.RotateTowards(eye_ball.localRotation' Quaternion.Euler(polarTarget.x + 90' 0' 0)' 360 * Time.deltaTime);                      }                      break;                  case State.SLEEPING:                      if (!part.FindModelAnimators("Sleeping")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Sleeping")[0]' "Sleeping"' 1' 100);                            state = State.OFF;                      }                      break;                  default:                      break;              }
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: switch (state)              {                  case State.OFF:                      if (HighLogic.LoadedSceneIsEditor || (HighLogic.LoadedSceneIsFlight && FlightGlobals.ready && vessel != null && core.attitude.enabled))                      {                          state = State.AWAKENING;                          part.FindModelAnimators("Waking")[0].Play("Waking");                      }                      break;                  case State.AWAKENING:                      if (!part.FindModelAnimators("Waking")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Waking")[0]' "Waking"' 1' 100);                            state = State.AWAKE;                          lastBlink = lastAction = Time.time;                      }                      break;                  case State.AWAKE:                      if (!part.FindModelAnimators("Blink")[0].isPlaying)                      {                          if ((UnityEngine.Random.Range(0' 10.0F / (HighLogic.LoadedSceneIsEditor ? Time.deltaTime : TimeWarp.deltaTime)) < (Time.time - lastBlink)))                          {                              part.FindModelAnimators("Blink")[0].Play("Blink");                              lastBlink = Time.time;                          }                          GameObject cam = HighLogic.LoadedSceneIsEditor ? EditorLogic.fetch.editorCamera.gameObject : FlightCamera.fetch.gameObject;                          Vector3 target = (cam.transform.position - part.transform.position).normalized;                          if (core.attitude.enabled)                          {                              target = core.attitude.attitudeGetReferenceRotation(core.attitude.attitudeReference) * core.attitude.attitudeTarget * Quaternion.Euler(90' 0' 0) * Vector3.up;                              lastAction = Time.time;                          }                          Vector3 localTarget = part.transform.InverseTransformDirection(target);                          Vector2 polarTarget = CartesianToPolar(localTarget);                          if (Mathfx.Approx(polarTarget.x' -90' 1) || Mathfx.Approx(polarTarget.x' 90' 1))                          {                              polarTarget.y = eye_base.localEulerAngles.z + 90;                          }                          if ((!HighLogic.LoadedSceneIsEditor && (Time.time - lastAction > 30)))                          {                              if (Mathfx.Approx(eye_base.localEulerAngles.z' 0' 1) && Mathfx.Approx(eye_ball.localEulerAngles.x' 0' 1))                              {                                  state = State.SLEEPING;                                  part.FindModelAnimators("Sleeping")[0].Play("Sleeping");                              }                              else                              {                                  polarTarget = new Vector2(-90' 90);                              }                          }                          if (afx != null && afx.FxScalar > 0)                          {                              polarTarget = new Vector2(90' 90);                          }                          eye_base.localEulerAngles = new Vector3(0' 0' Mathf.MoveTowardsAngle(eye_base.localEulerAngles.z' polarTarget.y - 90' 360 * Time.deltaTime));                          eye_ball.localRotation = Quaternion.RotateTowards(eye_ball.localRotation' Quaternion.Euler(polarTarget.x + 90' 0' 0)' 360 * Time.deltaTime);                      }                      break;                  case State.SLEEPING:                      if (!part.FindModelAnimators("Sleeping")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Sleeping")[0]' "Sleeping"' 1' 100);                            state = State.OFF;                      }                      break;                  default:                      break;              }
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: switch (state)              {                  case State.OFF:                      if (HighLogic.LoadedSceneIsEditor || (HighLogic.LoadedSceneIsFlight && FlightGlobals.ready && vessel != null && core.attitude.enabled))                      {                          state = State.AWAKENING;                          part.FindModelAnimators("Waking")[0].Play("Waking");                      }                      break;                  case State.AWAKENING:                      if (!part.FindModelAnimators("Waking")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Waking")[0]' "Waking"' 1' 100);                            state = State.AWAKE;                          lastBlink = lastAction = Time.time;                      }                      break;                  case State.AWAKE:                      if (!part.FindModelAnimators("Blink")[0].isPlaying)                      {                          if ((UnityEngine.Random.Range(0' 10.0F / (HighLogic.LoadedSceneIsEditor ? Time.deltaTime : TimeWarp.deltaTime)) < (Time.time - lastBlink)))                          {                              part.FindModelAnimators("Blink")[0].Play("Blink");                              lastBlink = Time.time;                          }                          GameObject cam = HighLogic.LoadedSceneIsEditor ? EditorLogic.fetch.editorCamera.gameObject : FlightCamera.fetch.gameObject;                          Vector3 target = (cam.transform.position - part.transform.position).normalized;                          if (core.attitude.enabled)                          {                              target = core.attitude.attitudeGetReferenceRotation(core.attitude.attitudeReference) * core.attitude.attitudeTarget * Quaternion.Euler(90' 0' 0) * Vector3.up;                              lastAction = Time.time;                          }                          Vector3 localTarget = part.transform.InverseTransformDirection(target);                          Vector2 polarTarget = CartesianToPolar(localTarget);                          if (Mathfx.Approx(polarTarget.x' -90' 1) || Mathfx.Approx(polarTarget.x' 90' 1))                          {                              polarTarget.y = eye_base.localEulerAngles.z + 90;                          }                          if ((!HighLogic.LoadedSceneIsEditor && (Time.time - lastAction > 30)))                          {                              if (Mathfx.Approx(eye_base.localEulerAngles.z' 0' 1) && Mathfx.Approx(eye_ball.localEulerAngles.x' 0' 1))                              {                                  state = State.SLEEPING;                                  part.FindModelAnimators("Sleeping")[0].Play("Sleeping");                              }                              else                              {                                  polarTarget = new Vector2(-90' 90);                              }                          }                          if (afx != null && afx.FxScalar > 0)                          {                              polarTarget = new Vector2(90' 90);                          }                          eye_base.localEulerAngles = new Vector3(0' 0' Mathf.MoveTowardsAngle(eye_base.localEulerAngles.z' polarTarget.y - 90' 360 * Time.deltaTime));                          eye_ball.localRotation = Quaternion.RotateTowards(eye_ball.localRotation' Quaternion.Euler(polarTarget.x + 90' 0' 0)' 360 * Time.deltaTime);                      }                      break;                  case State.SLEEPING:                      if (!part.FindModelAnimators("Sleeping")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Sleeping")[0]' "Sleeping"' 1' 100);                            state = State.OFF;                      }                      break;                  default:                      break;              }
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: switch (state)              {                  case State.OFF:                      if (HighLogic.LoadedSceneIsEditor || (HighLogic.LoadedSceneIsFlight && FlightGlobals.ready && vessel != null && core.attitude.enabled))                      {                          state = State.AWAKENING;                          part.FindModelAnimators("Waking")[0].Play("Waking");                      }                      break;                  case State.AWAKENING:                      if (!part.FindModelAnimators("Waking")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Waking")[0]' "Waking"' 1' 100);                            state = State.AWAKE;                          lastBlink = lastAction = Time.time;                      }                      break;                  case State.AWAKE:                      if (!part.FindModelAnimators("Blink")[0].isPlaying)                      {                          if ((UnityEngine.Random.Range(0' 10.0F / (HighLogic.LoadedSceneIsEditor ? Time.deltaTime : TimeWarp.deltaTime)) < (Time.time - lastBlink)))                          {                              part.FindModelAnimators("Blink")[0].Play("Blink");                              lastBlink = Time.time;                          }                          GameObject cam = HighLogic.LoadedSceneIsEditor ? EditorLogic.fetch.editorCamera.gameObject : FlightCamera.fetch.gameObject;                          Vector3 target = (cam.transform.position - part.transform.position).normalized;                          if (core.attitude.enabled)                          {                              target = core.attitude.attitudeGetReferenceRotation(core.attitude.attitudeReference) * core.attitude.attitudeTarget * Quaternion.Euler(90' 0' 0) * Vector3.up;                              lastAction = Time.time;                          }                          Vector3 localTarget = part.transform.InverseTransformDirection(target);                          Vector2 polarTarget = CartesianToPolar(localTarget);                          if (Mathfx.Approx(polarTarget.x' -90' 1) || Mathfx.Approx(polarTarget.x' 90' 1))                          {                              polarTarget.y = eye_base.localEulerAngles.z + 90;                          }                          if ((!HighLogic.LoadedSceneIsEditor && (Time.time - lastAction > 30)))                          {                              if (Mathfx.Approx(eye_base.localEulerAngles.z' 0' 1) && Mathfx.Approx(eye_ball.localEulerAngles.x' 0' 1))                              {                                  state = State.SLEEPING;                                  part.FindModelAnimators("Sleeping")[0].Play("Sleeping");                              }                              else                              {                                  polarTarget = new Vector2(-90' 90);                              }                          }                          if (afx != null && afx.FxScalar > 0)                          {                              polarTarget = new Vector2(90' 90);                          }                          eye_base.localEulerAngles = new Vector3(0' 0' Mathf.MoveTowardsAngle(eye_base.localEulerAngles.z' polarTarget.y - 90' 360 * Time.deltaTime));                          eye_ball.localRotation = Quaternion.RotateTowards(eye_ball.localRotation' Quaternion.Euler(polarTarget.x + 90' 0' 0)' 360 * Time.deltaTime);                      }                      break;                  case State.SLEEPING:                      if (!part.FindModelAnimators("Sleeping")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Sleeping")[0]' "Sleeping"' 1' 100);                            state = State.OFF;                      }                      break;                  default:                      break;              }
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: switch (state)              {                  case State.OFF:                      if (HighLogic.LoadedSceneIsEditor || (HighLogic.LoadedSceneIsFlight && FlightGlobals.ready && vessel != null && core.attitude.enabled))                      {                          state = State.AWAKENING;                          part.FindModelAnimators("Waking")[0].Play("Waking");                      }                      break;                  case State.AWAKENING:                      if (!part.FindModelAnimators("Waking")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Waking")[0]' "Waking"' 1' 100);                            state = State.AWAKE;                          lastBlink = lastAction = Time.time;                      }                      break;                  case State.AWAKE:                      if (!part.FindModelAnimators("Blink")[0].isPlaying)                      {                          if ((UnityEngine.Random.Range(0' 10.0F / (HighLogic.LoadedSceneIsEditor ? Time.deltaTime : TimeWarp.deltaTime)) < (Time.time - lastBlink)))                          {                              part.FindModelAnimators("Blink")[0].Play("Blink");                              lastBlink = Time.time;                          }                          GameObject cam = HighLogic.LoadedSceneIsEditor ? EditorLogic.fetch.editorCamera.gameObject : FlightCamera.fetch.gameObject;                          Vector3 target = (cam.transform.position - part.transform.position).normalized;                          if (core.attitude.enabled)                          {                              target = core.attitude.attitudeGetReferenceRotation(core.attitude.attitudeReference) * core.attitude.attitudeTarget * Quaternion.Euler(90' 0' 0) * Vector3.up;                              lastAction = Time.time;                          }                          Vector3 localTarget = part.transform.InverseTransformDirection(target);                          Vector2 polarTarget = CartesianToPolar(localTarget);                          if (Mathfx.Approx(polarTarget.x' -90' 1) || Mathfx.Approx(polarTarget.x' 90' 1))                          {                              polarTarget.y = eye_base.localEulerAngles.z + 90;                          }                          if ((!HighLogic.LoadedSceneIsEditor && (Time.time - lastAction > 30)))                          {                              if (Mathfx.Approx(eye_base.localEulerAngles.z' 0' 1) && Mathfx.Approx(eye_ball.localEulerAngles.x' 0' 1))                              {                                  state = State.SLEEPING;                                  part.FindModelAnimators("Sleeping")[0].Play("Sleeping");                              }                              else                              {                                  polarTarget = new Vector2(-90' 90);                              }                          }                          if (afx != null && afx.FxScalar > 0)                          {                              polarTarget = new Vector2(90' 90);                          }                          eye_base.localEulerAngles = new Vector3(0' 0' Mathf.MoveTowardsAngle(eye_base.localEulerAngles.z' polarTarget.y - 90' 360 * Time.deltaTime));                          eye_ball.localRotation = Quaternion.RotateTowards(eye_ball.localRotation' Quaternion.Euler(polarTarget.x + 90' 0' 0)' 360 * Time.deltaTime);                      }                      break;                  case State.SLEEPING:                      if (!part.FindModelAnimators("Sleeping")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Sleeping")[0]' "Sleeping"' 1' 100);                            state = State.OFF;                      }                      break;                  default:                      break;              }
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: switch (state)              {                  case State.OFF:                      if (HighLogic.LoadedSceneIsEditor || (HighLogic.LoadedSceneIsFlight && FlightGlobals.ready && vessel != null && core.attitude.enabled))                      {                          state = State.AWAKENING;                          part.FindModelAnimators("Waking")[0].Play("Waking");                      }                      break;                  case State.AWAKENING:                      if (!part.FindModelAnimators("Waking")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Waking")[0]' "Waking"' 1' 100);                            state = State.AWAKE;                          lastBlink = lastAction = Time.time;                      }                      break;                  case State.AWAKE:                      if (!part.FindModelAnimators("Blink")[0].isPlaying)                      {                          if ((UnityEngine.Random.Range(0' 10.0F / (HighLogic.LoadedSceneIsEditor ? Time.deltaTime : TimeWarp.deltaTime)) < (Time.time - lastBlink)))                          {                              part.FindModelAnimators("Blink")[0].Play("Blink");                              lastBlink = Time.time;                          }                          GameObject cam = HighLogic.LoadedSceneIsEditor ? EditorLogic.fetch.editorCamera.gameObject : FlightCamera.fetch.gameObject;                          Vector3 target = (cam.transform.position - part.transform.position).normalized;                          if (core.attitude.enabled)                          {                              target = core.attitude.attitudeGetReferenceRotation(core.attitude.attitudeReference) * core.attitude.attitudeTarget * Quaternion.Euler(90' 0' 0) * Vector3.up;                              lastAction = Time.time;                          }                          Vector3 localTarget = part.transform.InverseTransformDirection(target);                          Vector2 polarTarget = CartesianToPolar(localTarget);                          if (Mathfx.Approx(polarTarget.x' -90' 1) || Mathfx.Approx(polarTarget.x' 90' 1))                          {                              polarTarget.y = eye_base.localEulerAngles.z + 90;                          }                          if ((!HighLogic.LoadedSceneIsEditor && (Time.time - lastAction > 30)))                          {                              if (Mathfx.Approx(eye_base.localEulerAngles.z' 0' 1) && Mathfx.Approx(eye_ball.localEulerAngles.x' 0' 1))                              {                                  state = State.SLEEPING;                                  part.FindModelAnimators("Sleeping")[0].Play("Sleeping");                              }                              else                              {                                  polarTarget = new Vector2(-90' 90);                              }                          }                          if (afx != null && afx.FxScalar > 0)                          {                              polarTarget = new Vector2(90' 90);                          }                          eye_base.localEulerAngles = new Vector3(0' 0' Mathf.MoveTowardsAngle(eye_base.localEulerAngles.z' polarTarget.y - 90' 360 * Time.deltaTime));                          eye_ball.localRotation = Quaternion.RotateTowards(eye_ball.localRotation' Quaternion.Euler(polarTarget.x + 90' 0' 0)' 360 * Time.deltaTime);                      }                      break;                  case State.SLEEPING:                      if (!part.FindModelAnimators("Sleeping")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Sleeping")[0]' "Sleeping"' 1' 100);                            state = State.OFF;                      }                      break;                  default:                      break;              }
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: switch (state)              {                  case State.OFF:                      if (HighLogic.LoadedSceneIsEditor || (HighLogic.LoadedSceneIsFlight && FlightGlobals.ready && vessel != null && core.attitude.enabled))                      {                          state = State.AWAKENING;                          part.FindModelAnimators("Waking")[0].Play("Waking");                      }                      break;                  case State.AWAKENING:                      if (!part.FindModelAnimators("Waking")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Waking")[0]' "Waking"' 1' 100);                            state = State.AWAKE;                          lastBlink = lastAction = Time.time;                      }                      break;                  case State.AWAKE:                      if (!part.FindModelAnimators("Blink")[0].isPlaying)                      {                          if ((UnityEngine.Random.Range(0' 10.0F / (HighLogic.LoadedSceneIsEditor ? Time.deltaTime : TimeWarp.deltaTime)) < (Time.time - lastBlink)))                          {                              part.FindModelAnimators("Blink")[0].Play("Blink");                              lastBlink = Time.time;                          }                          GameObject cam = HighLogic.LoadedSceneIsEditor ? EditorLogic.fetch.editorCamera.gameObject : FlightCamera.fetch.gameObject;                          Vector3 target = (cam.transform.position - part.transform.position).normalized;                          if (core.attitude.enabled)                          {                              target = core.attitude.attitudeGetReferenceRotation(core.attitude.attitudeReference) * core.attitude.attitudeTarget * Quaternion.Euler(90' 0' 0) * Vector3.up;                              lastAction = Time.time;                          }                          Vector3 localTarget = part.transform.InverseTransformDirection(target);                          Vector2 polarTarget = CartesianToPolar(localTarget);                          if (Mathfx.Approx(polarTarget.x' -90' 1) || Mathfx.Approx(polarTarget.x' 90' 1))                          {                              polarTarget.y = eye_base.localEulerAngles.z + 90;                          }                          if ((!HighLogic.LoadedSceneIsEditor && (Time.time - lastAction > 30)))                          {                              if (Mathfx.Approx(eye_base.localEulerAngles.z' 0' 1) && Mathfx.Approx(eye_ball.localEulerAngles.x' 0' 1))                              {                                  state = State.SLEEPING;                                  part.FindModelAnimators("Sleeping")[0].Play("Sleeping");                              }                              else                              {                                  polarTarget = new Vector2(-90' 90);                              }                          }                          if (afx != null && afx.FxScalar > 0)                          {                              polarTarget = new Vector2(90' 90);                          }                          eye_base.localEulerAngles = new Vector3(0' 0' Mathf.MoveTowardsAngle(eye_base.localEulerAngles.z' polarTarget.y - 90' 360 * Time.deltaTime));                          eye_ball.localRotation = Quaternion.RotateTowards(eye_ball.localRotation' Quaternion.Euler(polarTarget.x + 90' 0' 0)' 360 * Time.deltaTime);                      }                      break;                  case State.SLEEPING:                      if (!part.FindModelAnimators("Sleeping")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Sleeping")[0]' "Sleeping"' 1' 100);                            state = State.OFF;                      }                      break;                  default:                      break;              }
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: switch (state)              {                  case State.OFF:                      if (HighLogic.LoadedSceneIsEditor || (HighLogic.LoadedSceneIsFlight && FlightGlobals.ready && vessel != null && core.attitude.enabled))                      {                          state = State.AWAKENING;                          part.FindModelAnimators("Waking")[0].Play("Waking");                      }                      break;                  case State.AWAKENING:                      if (!part.FindModelAnimators("Waking")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Waking")[0]' "Waking"' 1' 100);                            state = State.AWAKE;                          lastBlink = lastAction = Time.time;                      }                      break;                  case State.AWAKE:                      if (!part.FindModelAnimators("Blink")[0].isPlaying)                      {                          if ((UnityEngine.Random.Range(0' 10.0F / (HighLogic.LoadedSceneIsEditor ? Time.deltaTime : TimeWarp.deltaTime)) < (Time.time - lastBlink)))                          {                              part.FindModelAnimators("Blink")[0].Play("Blink");                              lastBlink = Time.time;                          }                          GameObject cam = HighLogic.LoadedSceneIsEditor ? EditorLogic.fetch.editorCamera.gameObject : FlightCamera.fetch.gameObject;                          Vector3 target = (cam.transform.position - part.transform.position).normalized;                          if (core.attitude.enabled)                          {                              target = core.attitude.attitudeGetReferenceRotation(core.attitude.attitudeReference) * core.attitude.attitudeTarget * Quaternion.Euler(90' 0' 0) * Vector3.up;                              lastAction = Time.time;                          }                          Vector3 localTarget = part.transform.InverseTransformDirection(target);                          Vector2 polarTarget = CartesianToPolar(localTarget);                          if (Mathfx.Approx(polarTarget.x' -90' 1) || Mathfx.Approx(polarTarget.x' 90' 1))                          {                              polarTarget.y = eye_base.localEulerAngles.z + 90;                          }                          if ((!HighLogic.LoadedSceneIsEditor && (Time.time - lastAction > 30)))                          {                              if (Mathfx.Approx(eye_base.localEulerAngles.z' 0' 1) && Mathfx.Approx(eye_ball.localEulerAngles.x' 0' 1))                              {                                  state = State.SLEEPING;                                  part.FindModelAnimators("Sleeping")[0].Play("Sleeping");                              }                              else                              {                                  polarTarget = new Vector2(-90' 90);                              }                          }                          if (afx != null && afx.FxScalar > 0)                          {                              polarTarget = new Vector2(90' 90);                          }                          eye_base.localEulerAngles = new Vector3(0' 0' Mathf.MoveTowardsAngle(eye_base.localEulerAngles.z' polarTarget.y - 90' 360 * Time.deltaTime));                          eye_ball.localRotation = Quaternion.RotateTowards(eye_ball.localRotation' Quaternion.Euler(polarTarget.x + 90' 0' 0)' 360 * Time.deltaTime);                      }                      break;                  case State.SLEEPING:                      if (!part.FindModelAnimators("Sleeping")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Sleeping")[0]' "Sleeping"' 1' 100);                            state = State.OFF;                      }                      break;                  default:                      break;              }
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: switch (state)              {                  case State.OFF:                      if (HighLogic.LoadedSceneIsEditor || (HighLogic.LoadedSceneIsFlight && FlightGlobals.ready && vessel != null && core.attitude.enabled))                      {                          state = State.AWAKENING;                          part.FindModelAnimators("Waking")[0].Play("Waking");                      }                      break;                  case State.AWAKENING:                      if (!part.FindModelAnimators("Waking")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Waking")[0]' "Waking"' 1' 100);                            state = State.AWAKE;                          lastBlink = lastAction = Time.time;                      }                      break;                  case State.AWAKE:                      if (!part.FindModelAnimators("Blink")[0].isPlaying)                      {                          if ((UnityEngine.Random.Range(0' 10.0F / (HighLogic.LoadedSceneIsEditor ? Time.deltaTime : TimeWarp.deltaTime)) < (Time.time - lastBlink)))                          {                              part.FindModelAnimators("Blink")[0].Play("Blink");                              lastBlink = Time.time;                          }                          GameObject cam = HighLogic.LoadedSceneIsEditor ? EditorLogic.fetch.editorCamera.gameObject : FlightCamera.fetch.gameObject;                          Vector3 target = (cam.transform.position - part.transform.position).normalized;                          if (core.attitude.enabled)                          {                              target = core.attitude.attitudeGetReferenceRotation(core.attitude.attitudeReference) * core.attitude.attitudeTarget * Quaternion.Euler(90' 0' 0) * Vector3.up;                              lastAction = Time.time;                          }                          Vector3 localTarget = part.transform.InverseTransformDirection(target);                          Vector2 polarTarget = CartesianToPolar(localTarget);                          if (Mathfx.Approx(polarTarget.x' -90' 1) || Mathfx.Approx(polarTarget.x' 90' 1))                          {                              polarTarget.y = eye_base.localEulerAngles.z + 90;                          }                          if ((!HighLogic.LoadedSceneIsEditor && (Time.time - lastAction > 30)))                          {                              if (Mathfx.Approx(eye_base.localEulerAngles.z' 0' 1) && Mathfx.Approx(eye_ball.localEulerAngles.x' 0' 1))                              {                                  state = State.SLEEPING;                                  part.FindModelAnimators("Sleeping")[0].Play("Sleeping");                              }                              else                              {                                  polarTarget = new Vector2(-90' 90);                              }                          }                          if (afx != null && afx.FxScalar > 0)                          {                              polarTarget = new Vector2(90' 90);                          }                          eye_base.localEulerAngles = new Vector3(0' 0' Mathf.MoveTowardsAngle(eye_base.localEulerAngles.z' polarTarget.y - 90' 360 * Time.deltaTime));                          eye_ball.localRotation = Quaternion.RotateTowards(eye_ball.localRotation' Quaternion.Euler(polarTarget.x + 90' 0' 0)' 360 * Time.deltaTime);                      }                      break;                  case State.SLEEPING:                      if (!part.FindModelAnimators("Sleeping")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Sleeping")[0]' "Sleeping"' 1' 100);                            state = State.OFF;                      }                      break;                  default:                      break;              }
Magic Number,MuMech,MechJebPod,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebPod.cs,Update,The following statement contains a magic number: switch (state)              {                  case State.OFF:                      if (HighLogic.LoadedSceneIsEditor || (HighLogic.LoadedSceneIsFlight && FlightGlobals.ready && vessel != null && core.attitude.enabled))                      {                          state = State.AWAKENING;                          part.FindModelAnimators("Waking")[0].Play("Waking");                      }                      break;                  case State.AWAKENING:                      if (!part.FindModelAnimators("Waking")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Waking")[0]' "Waking"' 1' 100);                            state = State.AWAKE;                          lastBlink = lastAction = Time.time;                      }                      break;                  case State.AWAKE:                      if (!part.FindModelAnimators("Blink")[0].isPlaying)                      {                          if ((UnityEngine.Random.Range(0' 10.0F / (HighLogic.LoadedSceneIsEditor ? Time.deltaTime : TimeWarp.deltaTime)) < (Time.time - lastBlink)))                          {                              part.FindModelAnimators("Blink")[0].Play("Blink");                              lastBlink = Time.time;                          }                          GameObject cam = HighLogic.LoadedSceneIsEditor ? EditorLogic.fetch.editorCamera.gameObject : FlightCamera.fetch.gameObject;                          Vector3 target = (cam.transform.position - part.transform.position).normalized;                          if (core.attitude.enabled)                          {                              target = core.attitude.attitudeGetReferenceRotation(core.attitude.attitudeReference) * core.attitude.attitudeTarget * Quaternion.Euler(90' 0' 0) * Vector3.up;                              lastAction = Time.time;                          }                          Vector3 localTarget = part.transform.InverseTransformDirection(target);                          Vector2 polarTarget = CartesianToPolar(localTarget);                          if (Mathfx.Approx(polarTarget.x' -90' 1) || Mathfx.Approx(polarTarget.x' 90' 1))                          {                              polarTarget.y = eye_base.localEulerAngles.z + 90;                          }                          if ((!HighLogic.LoadedSceneIsEditor && (Time.time - lastAction > 30)))                          {                              if (Mathfx.Approx(eye_base.localEulerAngles.z' 0' 1) && Mathfx.Approx(eye_ball.localEulerAngles.x' 0' 1))                              {                                  state = State.SLEEPING;                                  part.FindModelAnimators("Sleeping")[0].Play("Sleeping");                              }                              else                              {                                  polarTarget = new Vector2(-90' 90);                              }                          }                          if (afx != null && afx.FxScalar > 0)                          {                              polarTarget = new Vector2(90' 90);                          }                          eye_base.localEulerAngles = new Vector3(0' 0' Mathf.MoveTowardsAngle(eye_base.localEulerAngles.z' polarTarget.y - 90' 360 * Time.deltaTime));                          eye_ball.localRotation = Quaternion.RotateTowards(eye_ball.localRotation' Quaternion.Euler(polarTarget.x + 90' 0' 0)' 360 * Time.deltaTime);                      }                      break;                  case State.SLEEPING:                      if (!part.FindModelAnimators("Sleeping")[0].isPlaying)                      {                          AdvanceAnimationTo(part.FindModelAnimators("Sleeping")[0]' "Sleeping"' 1' 100);                            state = State.OFF;                      }                      break;                  default:                      break;              }
Magic Number,MuMech,MechJebBundlesManager,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechjebBundlesManager.cs,Start,The following statement contains a magic number: comboBoxBackground = new Texture2D(16' 16' TextureFormat.RGBA32' false);
Magic Number,MuMech,MechJebBundlesManager,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechjebBundlesManager.cs,Start,The following statement contains a magic number: comboBoxBackground = new Texture2D(16' 16' TextureFormat.RGBA32' false);
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,ToSI,The following statement contains a magic number: const int unitIndexOffset = 8;
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,ToSI,The following statement contains a magic number: int unitIndex = (int)Math.Floor(exponent / 3.0) + unitIndexOffset;
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,ToSI,The following statement contains a magic number: int actualExponent = (unitIndex - unitIndexOffset) * 3;
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,ToSI,The following statement contains a magic number: d /= Math.Pow(10' actualExponent);
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,Atanh,The following statement contains a magic number: return 0.5 * (Math.Log(1 + x) - Math.Log(1 - x));
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,ClampDegrees360,The following statement contains a magic number: angle = angle % 360.0;
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,ClampDegrees360,The following statement contains a magic number: return angle + 360.0;
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,ClampDegrees180,The following statement contains a magic number: angle -= 360;
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,ClampDegrees180,The following statement contains a magic number: angle > 180
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,ClampRadiansTwoPi,The following statement contains a magic number: angle = angle % (2 * Math.PI);
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,ClampRadiansTwoPi,The following statement contains a magic number: return angle + 2 * Math.PI;
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,ClampRadiansPi,The following statement contains a magic number: angle -= 2 * Math.PI;
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,headingAngle,The following statement contains a magic number: return Math.Min((angle1 - angle2 + 360) % 360' (angle2 - angle1 + 360) % 360);
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,headingAngle,The following statement contains a magic number: return Math.Min((angle1 - angle2 + 360) % 360' (angle2 - angle1 + 360) % 360);
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,headingAngle,The following statement contains a magic number: return Math.Min((angle1 - angle2 + 360) % 360' (angle2 - angle1 + 360) % 360);
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,headingAngle,The following statement contains a magic number: return Math.Min((angle1 - angle2 + 360) % 360' (angle2 - angle1 + 360) % 360);
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,HSVtoRGB,The following statement contains a magic number: int hi = Convert.ToInt32(Math.Floor(hue / 60)) % 6;
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,HSVtoRGB,The following statement contains a magic number: int hi = Convert.ToInt32(Math.Floor(hue / 60)) % 6;
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,HSVtoRGB,The following statement contains a magic number: float f = hue / 60 - Mathf.Floor(hue / 60);
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,HSVtoRGB,The following statement contains a magic number: float f = hue / 60 - Mathf.Floor(hue / 60);
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,HSVtoRGB,The following statement contains a magic number: hi == 2
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,HSVtoRGB,The following statement contains a magic number: hi == 3
Magic Number,MuMech,MuUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,HSVtoRGB,The following statement contains a magic number: hi == 4
Magic Number,MuMech,Matrix3x3f,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,reset,The following statement contains a magic number: j < 3
Magic Number,MuMech,Matrix3x3f,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,reset,The following statement contains a magic number: i < 3
Magic Number,MuMech,Matrix3x3f,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,transpose,The following statement contains a magic number: j < 3
Magic Number,MuMech,Matrix3x3f,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MuUtils.cs,transpose,The following statement contains a magic number: i < 3
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: h = 0.001*v;
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k1' 0.25);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: f(a' x+0.25*h' dy' o);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k1' 3.0/32.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k1' 3.0/32.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k2' 9.0/32.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k2' 9.0/32.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: f(a' x+3*h/8' dy' o);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: f(a' x+3*h/8' dy' o);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k1' 1932.0/2197.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k1' 1932.0/2197.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k2' -7200.0/2197.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k2' -7200.0/2197.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k3' 7296.0/2197.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k3' 7296.0/2197.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: f(a' x+12*h/13' dy' o);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: f(a' x+12*h/13' dy' o);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k1' 439.0/216.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k1' 439.0/216.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k2' -8.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k3' 3680.0/513.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k3' 3680.0/513.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k4' -845.0/4104.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k4' -845.0/4104.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k1' -8.0/27.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k1' -8.0/27.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k2' 2.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k3' -3544.0/2565.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k3' -3544.0/2565.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k4' 1859.0/4104.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k4' 1859.0/4104.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k5' -11.0/40.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(a' k5' -11.0/40.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: f(a' x+0.5*h' dy' o);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(err' k1' 1.0/360.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(err' k3' -128.0/4275.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(err' k3' -128.0/4275.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(err' k4' -2197.0/75240.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(err' k4' -2197.0/75240.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(err' k5' 1.0/50.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(err' k6' 2.0/55.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(err' k6' 2.0/55.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: double s = Math.Pow(0.5*eps/error'0.25);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: double s = Math.Pow(0.5*eps/error'0.25);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(y' k1' 25.0/216.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(y' k1' 25.0/216.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(y' k3' 1408.0/2565.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(y' k3' 1408.0/2565.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(y' k4' 2197.0/4104.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(y' k4' 2197.0/4104.0);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: rkadd(y' k5' -0.2);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: s = 0.1;
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: s < 0.1
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: s = 4;
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,RKF45,The following statement contains a magic number: s > 4
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,centralForce,The following statement contains a magic number: double r2 = y[0] * y[0] + y[1] * y[1] + y[2] * y[2];
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,centralForce,The following statement contains a magic number: double r2 = y[0] * y[0] + y[1] * y[1] + y[2] * y[2];
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,centralForce,The following statement contains a magic number: dy[0] = y[3];
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,centralForce,The following statement contains a magic number: dy[1] = y[4];
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,centralForce,The following statement contains a magic number: dy[2] = y[5];
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,centralForce,The following statement contains a magic number: dy[2] = y[5];
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,centralForce,The following statement contains a magic number: dy[3] = - y[0] / r3;
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,centralForce,The following statement contains a magic number: dy[4] = - y[1] / r3;
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,centralForce,The following statement contains a magic number: dy[5] = - y[2] / r3;
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,centralForce,The following statement contains a magic number: dy[5] = - y[2] / r3;
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,Main,The following statement contains a magic number: double[] x = { 0 * 0.78539816339' 1 * 0.78539816339' 2 * 0.78539816339' 3 * 0.78539816339' 4 * 0.78539816339 };
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,Main,The following statement contains a magic number: double[] x = { 0 * 0.78539816339' 1 * 0.78539816339' 2 * 0.78539816339' 3 * 0.78539816339' 4 * 0.78539816339 };
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,Main,The following statement contains a magic number: double[] x = { 0 * 0.78539816339' 1 * 0.78539816339' 2 * 0.78539816339' 3 * 0.78539816339' 4 * 0.78539816339 };
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,Main,The following statement contains a magic number: double[] x = { 0 * 0.78539816339' 1 * 0.78539816339' 2 * 0.78539816339' 3 * 0.78539816339' 4 * 0.78539816339 };
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,Main,The following statement contains a magic number: double[] x = { 0 * 0.78539816339' 1 * 0.78539816339' 2 * 0.78539816339' 3 * 0.78539816339' 4 * 0.78539816339 };
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,Main,The following statement contains a magic number: double[] x = { 0 * 0.78539816339' 1 * 0.78539816339' 2 * 0.78539816339' 3 * 0.78539816339' 4 * 0.78539816339 };
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,Main,The following statement contains a magic number: double[] x = { 0 * 0.78539816339' 1 * 0.78539816339' 2 * 0.78539816339' 3 * 0.78539816339' 4 * 0.78539816339 };
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,Main,The following statement contains a magic number: double[] x = { 0 * 0.78539816339' 1 * 0.78539816339' 2 * 0.78539816339' 3 * 0.78539816339' 4 * 0.78539816339 };
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,Main,The following statement contains a magic number: ODE ode = new ODE(y0' 6' x' 1e-9' 0' allvals: true);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,Main,The following statement contains a magic number: ODE ode = new ODE(y0' 6' x' 1e-9' 0' allvals: true);
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,Main,The following statement contains a magic number: j != 5
Magic Number,MuMech,ODE,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ODE.cs,Main,The following statement contains a magic number: j < 6
Magic Number,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,SwapYZ,The following statement contains a magic number: return v.Reorder(132);
Magic Number,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,MeanMotion,The following statement contains a magic number: return Math.Sqrt(o.referenceBody.gravParameter / Math.Abs(Math.Pow(o.semiMajorAxis' 3)));
Magic Number,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,NextClosestApproachTime,The following statement contains a magic number: interval = 100 / a.MeanMotion();
Magic Number,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,NextClosestApproachTime,The following statement contains a magic number: const int numDivisions = 20;
Magic Number,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,NextClosestApproachTime,The following statement contains a magic number: iter < 8
Magic Number,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,NextApoapsisTime,The following statement contains a magic number: return o.TimeOfTrueAnomaly(180' UT);
Magic Number,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,DescendingNodeTrueAnomaly,The following statement contains a magic number: return MuUtils.ClampDegrees360(a.AscendingNodeTrueAnomaly(b) + 180);
Magic Number,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,DescendingNodeEquatorialTrueAnomaly,The following statement contains a magic number: return MuUtils.ClampDegrees360(o.AscendingNodeEquatorialTrueAnomaly() + 180);
Magic Number,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,MaximumTrueAnomaly,The following statement contains a magic number: return 180;
Magic Number,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,TrueAnomalyFromVector,The following statement contains a magic number: Math.Abs(Vector3d.Angle(projected' Vector3d.Cross(oNormal' vectorToPe))) < 90
Magic Number,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,PhaseAngle,The following statement contains a magic number: angle = 360 - angle;
Magic Number,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,NextTimeOfRadius,The following statement contains a magic number: double trueAnomaly2 = 360 - trueAnomaly1;
Magic Number,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,SuicideBurnCountdown,The following statement contains a magic number: double angleFromHorizontal = 90 - Vector3d.Angle(-vessel.srf_velocity' vesselState.up);
Magic Number,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,SuicideBurnCountdown,The following statement contains a magic number: angleFromHorizontal = MuUtils.Clamp(angleFromHorizontal' 0' 90);
Magic Number,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,SuicideBurnCountdown,The following statement contains a magic number: double effectiveDecel = 0.5 * (-2 * g * sine + Math.Sqrt((2 * g * sine) * (2 * g * sine) + 4 * (T * T - g * g)));
Magic Number,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,SuicideBurnCountdown,The following statement contains a magic number: double effectiveDecel = 0.5 * (-2 * g * sine + Math.Sqrt((2 * g * sine) * (2 * g * sine) + 4 * (T * T - g * g)));
Magic Number,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,SuicideBurnCountdown,The following statement contains a magic number: double effectiveDecel = 0.5 * (-2 * g * sine + Math.Sqrt((2 * g * sine) * (2 * g * sine) + 4 * (T * T - g * g)));
Magic Number,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,SuicideBurnCountdown,The following statement contains a magic number: double effectiveDecel = 0.5 * (-2 * g * sine + Math.Sqrt((2 * g * sine) * (2 * g * sine) + 4 * (T * T - g * g)));
Magic Number,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,SuicideBurnCountdown,The following statement contains a magic number: double effectiveDecel = 0.5 * (-2 * g * sine + Math.Sqrt((2 * g * sine) * (2 * g * sine) + 4 * (T * T - g * g)));
Magic Number,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,SuicideBurnCountdown,The following statement contains a magic number: Vector3d estimatedLandingSite = vesselState.CoM + 0.5 * decelTime * vessel.srf_velocity;
Magic Number,MuMech,OrbitExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitExtensions.cs,SuicideBurnCountdown,The following statement contains a magic number: return impactTime - decelTime / 2 - vesselState.time;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToEllipticize,The following statement contains a magic number: double L = Math.Sqrt(Math.Abs((Math.Pow(E * (newApR - newPeR)' 2) - GM * GM) / (2 * E)));
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToEllipticize,The following statement contains a magic number: double L = Math.Sqrt(Math.Abs((Math.Pow(E * (newApR - newPeR)' 2) - GM * GM) / (2 * E)));
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToEllipticize,The following statement contains a magic number: double verticalV = Math.Sqrt(Math.Abs(2 * kineticE - horizontalV * horizontalV));
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToChangePeriapsis,The following statement contains a magic number: maxDeltaV = 0.25;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToChangePeriapsis,The following statement contains a magic number: maxDeltaV *= 2;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToChangePeriapsis,The following statement contains a magic number: maxDeltaV > 100000
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToChangePeriapsis,The following statement contains a magic number: double testDeltaV = (maxDeltaV + minDeltaV) / 2.0;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToChangePeriapsis,The following statement contains a magic number: maxDeltaV - minDeltaV > 0.01
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToChangePeriapsis,The following statement contains a magic number: return ((maxDeltaV + minDeltaV) / 2) * burnDirection;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToChangeApoapsis,The following statement contains a magic number: maxDeltaV = 0.25;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToChangeApoapsis,The following statement contains a magic number: maxDeltaV *= 2;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToChangeApoapsis,The following statement contains a magic number: maxDeltaV > 100000
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToChangeApoapsis,The following statement contains a magic number: double testDeltaV = (maxDeltaV + minDeltaV) / 2.0;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToChangeApoapsis,The following statement contains a magic number: maxDeltaV - minDeltaV > 0.01
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToChangeApoapsis,The following statement contains a magic number: return ((maxDeltaV + minDeltaV) / 2) * burnDirection;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,HeadingForInclination,The following statement contains a magic number: return 90;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,HeadingForInclination,The following statement contains a magic number: Math.Abs(MuUtils.ClampDegrees180(inclinationDegrees)) < 90
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,HeadingForLaunchInclination,The following statement contains a magic number: vesselState.speedSurfaceHorizontal < 200
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,HeadingForLaunchInclination,The following statement contains a magic number: Vector3d.Dot(desiredHorizontalVelocity.normalized' deltaHorizontalVelocity.normalized) < 0.90
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndApsisPhaseAngleOfHohmannTransfer,The following statement contains a magic number: double meanAnomalyOffset = 360 * (target.TimeOfTrueAnomaly(targetTrueAnomaly' UT) - transferApTime) / target.period;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForHohmannTransfer,The following statement contains a magic number: double maxTime = UT + 1.5 * synodicPeriod;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForHohmannTransfer,The following statement contains a magic number: const int numDivisions = 30;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForHohmannTransfer,The following statement contains a magic number: (Math.Abs(apsisPhaseAngle) < 90) && (Math.Sign(lastApsisPhaseAngle) != Math.Sign(apsisPhaseAngle))
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForHohmannTransfer,The following statement contains a magic number: (i == 1) && (Math.Abs(lastApsisPhaseAngle) < 0.5) && (Math.Sign(lastApsisPhaseAngle) == Math.Sign(apsisPhaseAngle))
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForHohmannTransfer,The following statement contains a magic number: double testTime = (maxTime + minTime) / 2;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForHohmannTransfer,The following statement contains a magic number: maxTime - minTime > 0.01
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForHohmannTransfer,The following statement contains a magic number: burnUT = (minTime + maxTime) / 2;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForCheapestCourseCorrection,The following statement contains a magic number: double closestApproachTime = o.NextClosestApproachTime(target' UT + 2);
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForCheapestCourseCorrection,The following statement contains a magic number: const int fineness = 20;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForCheapestCourseCorrection,The following statement contains a magic number: double E = 0.5 * soiEnterRelVel.sqrMagnitude - targetBody.gravParameter / targetBody.sphereOfInfluence;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForCheapestCourseCorrection,The following statement contains a magic number: double finalPeSpeed = Math.Sqrt(2 * (E + targetBody.gravParameter / finalPeR));
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryTransferEjection,The following statement contains a magic number: double soiExitEnergy = 0.5 * soiExitVelocity.sqrMagnitude - o.referenceBody.gravParameter / o.referenceBody.sphereOfInfluence;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryTransferEjection,The following statement contains a magic number: double ejectionSpeed = Math.Sqrt(2 * ejectionKineticEnergy);
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryTransferEjection,The following statement contains a magic number: Vector3d ejectionPointDirection = Quaternion.AngleAxis(-(float)(90 + turningAngle)' o.SwappedOrbitNormal()) * inPlaneSoiExitDirection;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryTransferEjection,The following statement contains a magic number: (idealBurnUT - burnUT > o.period / 2) || (burnUT < UT)
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveTransfer,The following statement contains a magic number: double[] scale = new double[2];
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveTransfer,The following statement contains a magic number: alglib.minlmcreatev(1' x' 0.000001' out state);
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveAnnealed,The following statement contains a magic number: double MAXTEMP = 10000;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveAnnealed,The following statement contains a magic number: double coolingRate = 0.01;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveAnnealed,The following statement contains a magic number: double minTT = 1e-15;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveAnnealed,The following statement contains a magic number: maxDT = 1.5 * o.SynodicPeriod(target);
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveAnnealed,The following statement contains a magic number: double a = ( Math.Abs(o.semiMajorAxis) + Math.Abs(target.semiMajorAxis) ) / 2;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveAnnealed,The following statement contains a magic number: double currentDT = maxDT / 2;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveAnnealed,The following statement contains a magic number: double currentTT = maxTT / 2;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveAnnealed,The following statement contains a magic number: bool nextshortway = random.NextDouble() > 0.5;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForBiImpulsiveAnnealed,The following statement contains a magic number: temp > 1000
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForHohmannLambertTransfer,The following statement contains a magic number: double minCost = 999999;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForHohmannLambertTransfer,The following statement contains a magic number: double minInterceptTime = apsisTime - hohmannOrbit.period / 4;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForHohmannLambertTransfer,The following statement contains a magic number: double maxInterceptTime = apsisTime + hohmannOrbit.period / 4;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForHohmannLambertTransfer,The following statement contains a magic number: const int subdivisions = 30;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryLambertTransferEjection,The following statement contains a magic number: double soiExitEnergy = 0.5 * soiExitVelocity.sqrMagnitude - o.referenceBody.gravParameter / o.referenceBody.sphereOfInfluence;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryLambertTransferEjection,The following statement contains a magic number: double ejectionSpeed = Math.Sqrt(2 * ejectionKineticEnergy);
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryLambertTransferEjection,The following statement contains a magic number: double outOfPlaneAngle = (UtilMath.Deg2Rad) * (90 - Vector3d.Angle(soiExitVelocity' o.SwappedOrbitNormal()));
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryLambertTransferEjection,The following statement contains a magic number: double coneAngle = Math.PI / 2 - (UtilMath.Deg2Rad) * turningAngle;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryLambertTransferEjection,The following statement contains a magic number: Vector3d ejectionPointDirection = Math.Cos(coneAngle) * (-soiExitVelocity.normalized)                  + Math.Cos(coneAngle) * Math.Tan(outOfPlaneAngle) * normal2                  - Math.Sqrt(Math.Pow(Math.Sin(coneAngle)' 2) - Math.Pow(Math.Cos(coneAngle) * Math.Tan(outOfPlaneAngle)' 2)) * exitNormal;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryLambertTransferEjection,The following statement contains a magic number: Vector3d ejectionPointDirection = Math.Cos(coneAngle) * (-soiExitVelocity.normalized)                  + Math.Cos(coneAngle) * Math.Tan(outOfPlaneAngle) * normal2                  - Math.Sqrt(Math.Pow(Math.Sin(coneAngle)' 2) - Math.Pow(Math.Cos(coneAngle) * Math.Tan(outOfPlaneAngle)' 2)) * exitNormal;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryLambertTransferEjection,The following statement contains a magic number: Debug.Log("vessel orbit normal = " + (Vector3)(1000 * o.SwappedOrbitNormal()));
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryLambertTransferEjection,The following statement contains a magic number: Debug.Log("exitNormal = " + (Vector3)(1000 * exitNormal));
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryLambertTransferEjection,The following statement contains a magic number: Debug.Log("normal2 = " + (Vector3)(1000 * normal2));
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVAndTimeForInterplanetaryLambertTransferEjection,The following statement contains a magic number: (idealBurnUT - burnUT > o.period / 2) || (burnUT < UT)
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToResonantOrbit,The following statement contains a magic number: double x = Math.Pow(Math.Pow(a' 3) * Math.Pow(f' 2) + 3 * Math.Pow(a' 2) * Math.Pow(f' 2) * p + 3 * a * Math.Pow(f' 2) * Math.Pow(p' 2) + Math.Pow(f' 2) * Math.Pow(p' 3)' 1d / 3) - a;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToResonantOrbit,The following statement contains a magic number: double x = Math.Pow(Math.Pow(a' 3) * Math.Pow(f' 2) + 3 * Math.Pow(a' 2) * Math.Pow(f' 2) * p + 3 * a * Math.Pow(f' 2) * Math.Pow(p' 2) + Math.Pow(f' 2) * Math.Pow(p' 3)' 1d / 3) - a;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToResonantOrbit,The following statement contains a magic number: double x = Math.Pow(Math.Pow(a' 3) * Math.Pow(f' 2) + 3 * Math.Pow(a' 2) * Math.Pow(f' 2) * p + 3 * a * Math.Pow(f' 2) * Math.Pow(p' 2) + Math.Pow(f' 2) * Math.Pow(p' 3)' 1d / 3) - a;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToResonantOrbit,The following statement contains a magic number: double x = Math.Pow(Math.Pow(a' 3) * Math.Pow(f' 2) + 3 * Math.Pow(a' 2) * Math.Pow(f' 2) * p + 3 * a * Math.Pow(f' 2) * Math.Pow(p' 2) + Math.Pow(f' 2) * Math.Pow(p' 3)' 1d / 3) - a;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToResonantOrbit,The following statement contains a magic number: double x = Math.Pow(Math.Pow(a' 3) * Math.Pow(f' 2) + 3 * Math.Pow(a' 2) * Math.Pow(f' 2) * p + 3 * a * Math.Pow(f' 2) * Math.Pow(p' 2) + Math.Pow(f' 2) * Math.Pow(p' 3)' 1d / 3) - a;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToResonantOrbit,The following statement contains a magic number: double x = Math.Pow(Math.Pow(a' 3) * Math.Pow(f' 2) + 3 * Math.Pow(a' 2) * Math.Pow(f' 2) * p + 3 * a * Math.Pow(f' 2) * Math.Pow(p' 2) + Math.Pow(f' 2) * Math.Pow(p' 3)' 1d / 3) - a;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToResonantOrbit,The following statement contains a magic number: double x = Math.Pow(Math.Pow(a' 3) * Math.Pow(f' 2) + 3 * Math.Pow(a' 2) * Math.Pow(f' 2) * p + 3 * a * Math.Pow(f' 2) * Math.Pow(p' 2) + Math.Pow(f' 2) * Math.Pow(p' 3)' 1d / 3) - a;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToResonantOrbit,The following statement contains a magic number: double x = Math.Pow(Math.Pow(a' 3) * Math.Pow(f' 2) + 3 * Math.Pow(a' 2) * Math.Pow(f' 2) * p + 3 * a * Math.Pow(f' 2) * Math.Pow(p' 2) + Math.Pow(f' 2) * Math.Pow(p' 3)' 1d / 3) - a;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToResonantOrbit,The following statement contains a magic number: double x = Math.Pow(Math.Pow(a' 3) * Math.Pow(f' 2) + 3 * Math.Pow(a' 2) * Math.Pow(f' 2) * p + 3 * a * Math.Pow(f' 2) * Math.Pow(p' 2) + Math.Pow(f' 2) * Math.Pow(p' 3)' 1d / 3) - a;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToResonantOrbit,The following statement contains a magic number: double x = Math.Pow(Math.Pow(a' 3) * Math.Pow(f' 2) + 3 * Math.Pow(a' 2) * Math.Pow(f' 2) * p + 3 * a * Math.Pow(f' 2) * Math.Pow(p' 2) + Math.Pow(f' 2) * Math.Pow(p' 3)' 1d / 3) - a;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToResonantOrbit,The following statement contains a magic number: double x = Math.Pow(Math.Pow(a' 3) * Math.Pow(f' 2) + 3 * Math.Pow(a' 2) * Math.Pow(f' 2) * p + 3 * a * Math.Pow(f' 2) * Math.Pow(p' 2) + Math.Pow(f' 2) * Math.Pow(p' 3)' 1d / 3) - a;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,Distance,The following statement contains a magic number: return UtilMath.Rad2Deg * Math.Atan2(Math.Sqrt(Math.Pow(Math.Cos(lat_b_rad) * Math.Sin(long_diff_rad)' 2) +                  Math.Pow(Math.Cos(lat_a_rad) * Math.Sin(lat_b_rad) - Math.Sin(lat_a_rad) * Math.Cos(lat_b_rad) * Math.Cos(long_diff_rad)' 2))'                  Math.Sin(lat_a_rad) * Math.Sin(lat_b_rad) + Math.Cos(lat_a_rad) * Math.Cos(lat_b_rad) * Math.Cos(long_diff_rad));
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,Distance,The following statement contains a magic number: return UtilMath.Rad2Deg * Math.Atan2(Math.Sqrt(Math.Pow(Math.Cos(lat_b_rad) * Math.Sin(long_diff_rad)' 2) +                  Math.Pow(Math.Cos(lat_a_rad) * Math.Sin(lat_b_rad) - Math.Sin(lat_a_rad) * Math.Cos(lat_b_rad) * Math.Cos(long_diff_rad)' 2))'                  Math.Sin(lat_a_rad) * Math.Sin(lat_b_rad) + Math.Cos(lat_a_rad) * Math.Cos(lat_b_rad) * Math.Cos(long_diff_rad));
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,Heading,The following statement contains a magic number: return MuUtils.ClampDegrees360(180.0 / Math.PI * Math.Atan2(                  Math.Sin(long_diff_rad)'                  Math.Cos(lat_a_rad) * Math.Tan(lat_b_rad) - Math.Sin(lat_a_rad) * Math.Cos(long_diff_rad)));
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToShiftLAN,The following statement contains a magic number: target_longitude = MuUtils.ClampDegrees360(newLAN + 180.0);
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVForSemiMajorAxis,The following statement contains a magic number: maxDeltaV = 0.25;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVForSemiMajorAxis,The following statement contains a magic number: maxDeltaV *= 2;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVForSemiMajorAxis,The following statement contains a magic number: maxDeltaV > 100000
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVForSemiMajorAxis,The following statement contains a magic number: double testDeltaV = (maxDeltaV + minDeltaV) / 2.0;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVForSemiMajorAxis,The following statement contains a magic number: maxDeltaV - minDeltaV > 0.01
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVForSemiMajorAxis,The following statement contains a magic number: return ((maxDeltaV + minDeltaV) / 2) * burnDirection;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToShiftNodeLongitude,The following statement contains a magic number: double degreeRotationToNode = (UT - Planetarium.GetUniversalTime ()) * 360 / o.referenceBody.rotationPeriod;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToShiftNodeLongitude,The following statement contains a magic number: double target_period = o.referenceBody.rotationPeriod * (LongitudeOffset / 360 + N);
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToShiftNodeLongitude,The following statement contains a magic number: target_sma = Math.Pow ((o.referenceBody.gravParameter * target_period * target_period) / (4 * Math.PI * Math.PI)' 1.0 / 3.0);
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToShiftNodeLongitude,The following statement contains a magic number: target_sma = Math.Pow ((o.referenceBody.gravParameter * target_period * target_period) / (4 * Math.PI * Math.PI)' 1.0 / 3.0);
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToShiftNodeLongitude,The following statement contains a magic number: oppositeRadius = 2 * (target_sma) - burnRadius;
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToShiftNodeLongitude,The following statement contains a magic number: oppositeRadius-o.referenceBody.Radius < o.referenceBody.timeWarpAltitudeLimits [4] && N < 20
Magic Number,MuMech,OrbitalManeuverCalculator,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\OrbitalManeuverCalculator.cs,DeltaVToShiftNodeLongitude,The following statement contains a magic number: oppositeRadius-o.referenceBody.Radius < o.referenceBody.timeWarpAltitudeLimits [4] && N < 20
Magic Number,MuMech,PIDControllerV,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The following statement contains a magic number: Math.Abs((clamped - action).magnitude) > 0.01
Magic Number,MuMech,PIDControllerV2,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The following statement contains a magic number: intAccum.x = (Math.Abs(derivativeAct.x) < 0.6 * max) ? intAccum.x + (error.x * Ki * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.x;
Magic Number,MuMech,PIDControllerV2,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The following statement contains a magic number: intAccum.x = (Math.Abs(derivativeAct.x) < 0.6 * max) ? intAccum.x + (error.x * Ki * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.x;
Magic Number,MuMech,PIDControllerV2,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The following statement contains a magic number: intAccum.y = (Math.Abs(derivativeAct.y) < 0.6 * max) ? intAccum.y + (error.y * Ki * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.y;
Magic Number,MuMech,PIDControllerV2,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The following statement contains a magic number: intAccum.y = (Math.Abs(derivativeAct.y) < 0.6 * max) ? intAccum.y + (error.y * Ki * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.y;
Magic Number,MuMech,PIDControllerV2,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The following statement contains a magic number: intAccum.z = (Math.Abs(derivativeAct.z) < 0.6 * max) ? intAccum.z + (error.z * Ki * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.z;
Magic Number,MuMech,PIDControllerV2,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The following statement contains a magic number: intAccum.z = (Math.Abs(derivativeAct.z) < 0.6 * max) ? intAccum.z + (error.z * Ki * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.z;
Magic Number,MuMech,PIDControllerV2,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The following statement contains a magic number: intAccum.x = (Math.Abs(derivativeAct.x) < 0.6 * max) ? intAccum.x + (error.x * Ki * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.x;
Magic Number,MuMech,PIDControllerV2,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The following statement contains a magic number: intAccum.x = (Math.Abs(derivativeAct.x) < 0.6 * max) ? intAccum.x + (error.x * Ki * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.x;
Magic Number,MuMech,PIDControllerV2,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The following statement contains a magic number: intAccum.y = (Math.Abs(derivativeAct.y) < 0.6 * max) ? intAccum.y + (error.y * Ki * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.y;
Magic Number,MuMech,PIDControllerV2,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The following statement contains a magic number: intAccum.y = (Math.Abs(derivativeAct.y) < 0.6 * max) ? intAccum.y + (error.y * Ki * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.y;
Magic Number,MuMech,PIDControllerV2,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The following statement contains a magic number: intAccum.z = (Math.Abs(derivativeAct.z) < 0.6 * max) ? intAccum.z + (error.z * Ki * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.z;
Magic Number,MuMech,PIDControllerV2,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The following statement contains a magic number: intAccum.z = (Math.Abs(derivativeAct.z) < 0.6 * max) ? intAccum.z + (error.z * Ki * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.z;
Magic Number,MuMech,PIDControllerV3,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The following statement contains a magic number: intAccum.x = (Math.Abs(derivativeAct.x) < 0.6 * max) ? intAccum.x + (error.x * Ki.x * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.x;
Magic Number,MuMech,PIDControllerV3,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The following statement contains a magic number: intAccum.x = (Math.Abs(derivativeAct.x) < 0.6 * max) ? intAccum.x + (error.x * Ki.x * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.x;
Magic Number,MuMech,PIDControllerV3,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The following statement contains a magic number: intAccum.y = (Math.Abs(derivativeAct.y) < 0.6 * max) ? intAccum.y + (error.y * Ki.y * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.y;
Magic Number,MuMech,PIDControllerV3,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The following statement contains a magic number: intAccum.y = (Math.Abs(derivativeAct.y) < 0.6 * max) ? intAccum.y + (error.y * Ki.y * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.y;
Magic Number,MuMech,PIDControllerV3,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The following statement contains a magic number: intAccum.z = (Math.Abs(derivativeAct.z) < 0.6 * max) ? intAccum.z + (error.z * Ki.z * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.z;
Magic Number,MuMech,PIDControllerV3,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PIDController.cs,Compute,The following statement contains a magic number: intAccum.z = (Math.Abs(derivativeAct.z) < 0.6 * max) ? intAccum.z + (error.z * Ki.z * TimeWarp.fixedDeltaTime) : 0.9 * intAccum.z;
Magic Number,MuMech,PartExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PartExtensions.cs,FlowRateAtConditions,The following statement contains a magic number: return Mathf.Lerp(e.minFuelFlow' e.maxFuelFlow' (float)throttle * 0.01f * e.thrustPercentage) * flowMultiplier;
Magic Number,MuMech,PartExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PartExtensions.cs,FlowMultiplierAtConditions,The following statement contains a magic number: flowMultiplier = e.atmCurve.Evaluate((float)atmDensity * 40 / 49);
Magic Number,MuMech,PartExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PartExtensions.cs,FlowMultiplierAtConditions,The following statement contains a magic number: flowMultiplier = e.atmCurve.Evaluate((float)atmDensity * 40 / 49);
Magic Number,MuMech,PartExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PartExtensions.cs,ISPAtConditions,The following statement contains a magic number: isp *= e.atmCurveIsp.Evaluate((float)atmDensity * 40 / 49);
Magic Number,MuMech,PartExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\PartExtensions.cs,ISPAtConditions,The following statement contains a magic number: isp *= e.atmCurveIsp.Evaluate((float)atmDensity * 40 / 49);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,LAN,The following statement contains a magic number: return ( an[2] >= 0 ) ? Math.Acos(an[0] / an.magnitude) : ( 2.0 * Math.PI - Math.Acos(an[0] / an.magnitude) );
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,LAN,The following statement contains a magic number: return ( an[2] >= 0 ) ? Math.Acos(an[0] / an.magnitude) : ( 2.0 * Math.PI - Math.Acos(an[0] / an.magnitude) );
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: double At = arc.thrust / ( y[12] * g_bar );
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: At = At * 2;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: double r2 = y[0]*y[0] + y[1]*y[1] + y[2]*y[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: double r2 = y[0]*y[0] + y[1]*y[1] + y[2]*y[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: double pvm = Math.Sqrt(y[6]*y[6] + y[7]*y[7] + y[8]*y[8]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: double pvm = Math.Sqrt(y[6]*y[6] + y[7]*y[7] + y[8]*y[8]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: double pvm = Math.Sqrt(y[6]*y[6] + y[7]*y[7] + y[8]*y[8]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: double pvm = Math.Sqrt(y[6]*y[6] + y[7]*y[7] + y[8]*y[8]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: double pvm = Math.Sqrt(y[6]*y[6] + y[7]*y[7] + y[8]*y[8]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: double pvm = Math.Sqrt(y[6]*y[6] + y[7]*y[7] + y[8]*y[8]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: double rdotpv = y[0] * y[6] + y[1] * y[7] + y[2] * y[8];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: double rdotpv = y[0] * y[6] + y[1] * y[7] + y[2] * y[8];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: double rdotpv = y[0] * y[6] + y[1] * y[7] + y[2] * y[8];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: double rdotpv = y[0] * y[6] + y[1] * y[7] + y[2] * y[8];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[0] = y[3];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[1] = y[4];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[2] = y[5];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[2] = y[5];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[3] = - y[0] / r3 + At * y[6] / pvm;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[3] = - y[0] / r3 + At * y[6] / pvm;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[4] = - y[1] / r3 + At * y[7] / pvm;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[4] = - y[1] / r3 + At * y[7] / pvm;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[5] = - y[2] / r3 + At * y[8] / pvm;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[5] = - y[2] / r3 + At * y[8] / pvm;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[5] = - y[2] / r3 + At * y[8] / pvm;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[6] = - y[9];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[6] = - y[9];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[7] = - y[10];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[7] = - y[10];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[8] = - y[11];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[8] = - y[11];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[9]  = y[6] / r3 - 3 / r5 * rdotpv * y[0];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[9]  = y[6] / r3 - 3 / r5 * rdotpv * y[0];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[9]  = y[6] / r3 - 3 / r5 * rdotpv * y[0];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[10] = y[7] / r3 - 3 / r5 * rdotpv * y[1];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[10] = y[7] / r3 - 3 / r5 * rdotpv * y[1];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[10] = y[7] / r3 - 3 / r5 * rdotpv * y[1];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[11] = y[8] / r3 - 3 / r5 * rdotpv * y[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[11] = y[8] / r3 - 3 / r5 * rdotpv * y[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[11] = y[8] / r3 - 3 / r5 * rdotpv * y[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[11] = y[8] / r3 - 3 / r5 * rdotpv * y[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[12] = ( arc.thrust == 0 || arc.infinite ) ? 0 : - arc.thrust / arc.c;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,centralForceThrust,The following statement contains a magic number: dy[13] = At;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,The following statement contains a magic number: singleIntegrate(y0: y0' yf: yf' sol: null' n: n' t: ref t' dt: dt' arcs: arcs' count: 2' dV: ref dV);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,The following statement contains a magic number: count = 2;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,The following statement contains a magic number: count < 2
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,The following statement contains a magic number: double[] y = new double[14];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,The following statement contains a magic number: Array.Copy(y0' arcIndex(arcs'n)' y' 0' 13);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,The following statement contains a magic number: y[13] = dV;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,The following statement contains a magic number: y[2] = r0_bar[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,The following statement contains a magic number: y[2] = r0_bar[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,The following statement contains a magic number: y[3] = v0_bar[0];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,The following statement contains a magic number: y[4] = v0_bar[1];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,The following statement contains a magic number: y[5] = v0_bar[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,The following statement contains a magic number: y[5] = v0_bar[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,The following statement contains a magic number: ODE ode = new ODE(y' 14' x' ckEps' 0' hmin: 1e-15' allvals: allvals);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,The following statement contains a magic number: ODE ode = new ODE(y' 14' x' ckEps' 0' hmin: 1e-15' allvals: allvals);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,The following statement contains a magic number: e.dV = ( ode.ytbl[13][count-1] - dV ) * v_scale;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,The following statement contains a magic number: dV = ode.ytbl[13][count-1];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,The following statement contains a magic number: int j = 13*n+i;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,singleIntegrate,The following statement contains a magic number: i < 13
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,copy_yf_to_y0,The following statement contains a magic number: int yf_index = 13 * n;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,copy_yf_to_y0,The following statement contains a magic number: Array.Copy(yf' yf_index' y0' y0_index' 13);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,copy_yf_to_y0,The following statement contains a magic number: y0[y0_index+12] = m0;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,arcIndex,The following statement contains a magic number: index += 13;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,znormAtStateVectors,The following statement contains a magic number: double[] yT = new double[13];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,znormAtStateVectors,The following statement contains a magic number: double[] zterm = new double[6];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,znormAtStateVectors,The following statement contains a magic number: yT[2] = r_bar[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,znormAtStateVectors,The following statement contains a magic number: yT[2] = r_bar[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,znormAtStateVectors,The following statement contains a magic number: yT[3] = v_bar[0];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,znormAtStateVectors,The following statement contains a magic number: yT[4] = v_bar[1];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,znormAtStateVectors,The following statement contains a magic number: yT[5] = v_bar[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,znormAtStateVectors,The following statement contains a magic number: yT[5] = v_bar[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: yf = new double[arcs.Count*13];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[2] = y0[arcIndex(arcs'0)+2] - r0_bar[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[2] = y0[arcIndex(arcs'0)+2] - r0_bar[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[2] = y0[arcIndex(arcs'0)+2] - r0_bar[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[3] = y0[arcIndex(arcs'0)+3] - v0_bar[0];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[3] = y0[arcIndex(arcs'0)+3] - v0_bar[0];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[4] = y0[arcIndex(arcs'0)+4] - v0_bar[1];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[4] = y0[arcIndex(arcs'0)+4] - v0_bar[1];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[5] = y0[arcIndex(arcs'0)+5] - v0_bar[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[5] = y0[arcIndex(arcs'0)+5] - v0_bar[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[5] = y0[arcIndex(arcs'0)+5] - v0_bar[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[6] = y0[arcIndex(arcs'0)+12] - arcs[0].m0;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[6] = y0[arcIndex(arcs'0)+12] - arcs[0].m0;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: double[] yT = new double[13];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Array.Copy(yf' (arcs.Count-1)*13' yT' 0' 13);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Array.Copy(yf' (arcs.Count-1)*13' yT' 0' 13);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: double[] zterm = new double[6];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[7] = zterm[0];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[8] = zterm[1];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[9] = zterm[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[9] = zterm[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[10] = zterm[3];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[10] = zterm[3];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[11] = zterm[4];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[11] = zterm[4];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[12] = zterm[5];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[12] = zterm[5];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[j+13*i] = y0[j+arcIndex(arcs'i)] - yf[j+13*(i-1)];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: z[j+13*i] = y0[j+arcIndex(arcs'i)] - yf[j+13*(i-1)];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: j == 12
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: j < 13
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: int n = 13 * arcs.Count;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d r2 = new Vector3d(yf[i*13+0]' yf[i*13+1]' yf[i*13+2]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d r2 = new Vector3d(yf[i*13+0]' yf[i*13+1]' yf[i*13+2]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d r2 = new Vector3d(yf[i*13+0]' yf[i*13+1]' yf[i*13+2]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d r2 = new Vector3d(yf[i*13+0]' yf[i*13+1]' yf[i*13+2]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d v2 = new Vector3d(yf[i*13+3]' yf[i*13+4]' yf[i*13+5]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d v2 = new Vector3d(yf[i*13+3]' yf[i*13+4]' yf[i*13+5]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d v2 = new Vector3d(yf[i*13+3]' yf[i*13+4]' yf[i*13+5]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d v2 = new Vector3d(yf[i*13+3]' yf[i*13+4]' yf[i*13+5]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d v2 = new Vector3d(yf[i*13+3]' yf[i*13+4]' yf[i*13+5]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d v2 = new Vector3d(yf[i*13+3]' yf[i*13+4]' yf[i*13+5]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pv2 = new Vector3d(yf[i*13+6]' yf[i*13+7]' yf[i*13+8]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pv2 = new Vector3d(yf[i*13+6]' yf[i*13+7]' yf[i*13+8]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pv2 = new Vector3d(yf[i*13+6]' yf[i*13+7]' yf[i*13+8]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pv2 = new Vector3d(yf[i*13+6]' yf[i*13+7]' yf[i*13+8]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pv2 = new Vector3d(yf[i*13+6]' yf[i*13+7]' yf[i*13+8]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pv2 = new Vector3d(yf[i*13+6]' yf[i*13+7]' yf[i*13+8]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pr2 = new Vector3d(yf[i*13+9]' yf[i*13+10]' yf[i*13+11]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pr2 = new Vector3d(yf[i*13+9]' yf[i*13+10]' yf[i*13+11]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pr2 = new Vector3d(yf[i*13+9]' yf[i*13+10]' yf[i*13+11]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pr2 = new Vector3d(yf[i*13+9]' yf[i*13+10]' yf[i*13+11]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pr2 = new Vector3d(yf[i*13+9]' yf[i*13+10]' yf[i*13+11]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pr2 = new Vector3d(yf[i*13+9]' yf[i*13+10]' yf[i*13+11]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d r = new Vector3d(y0[index+0]' y0[index+1]' y0[index+2]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d v = new Vector3d(y0[index+3]' y0[index+4]' y0[index+5]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d v = new Vector3d(y0[index+3]' y0[index+4]' y0[index+5]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d v = new Vector3d(y0[index+3]' y0[index+4]' y0[index+5]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pv = new Vector3d(y0[index+6]' y0[index+7]' y0[index+8]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pv = new Vector3d(y0[index+6]' y0[index+7]' y0[index+8]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pv = new Vector3d(y0[index+6]' y0[index+7]' y0[index+8]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pr = new Vector3d(y0[index+9]' y0[index+10]' y0[index+11]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pr = new Vector3d(y0[index+9]' y0[index+10]' y0[index+11]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pr = new Vector3d(y0[index+9]' y0[index+10]' y0[index+11]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d r2 = new Vector3d(yf[i*13+0]' yf[i*13+1]' yf[i*13+2]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d r2 = new Vector3d(yf[i*13+0]' yf[i*13+1]' yf[i*13+2]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d r2 = new Vector3d(yf[i*13+0]' yf[i*13+1]' yf[i*13+2]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d r2 = new Vector3d(yf[i*13+0]' yf[i*13+1]' yf[i*13+2]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d v2 = new Vector3d(yf[i*13+3]' yf[i*13+4]' yf[i*13+5]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d v2 = new Vector3d(yf[i*13+3]' yf[i*13+4]' yf[i*13+5]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d v2 = new Vector3d(yf[i*13+3]' yf[i*13+4]' yf[i*13+5]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d v2 = new Vector3d(yf[i*13+3]' yf[i*13+4]' yf[i*13+5]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d v2 = new Vector3d(yf[i*13+3]' yf[i*13+4]' yf[i*13+5]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d v2 = new Vector3d(yf[i*13+3]' yf[i*13+4]' yf[i*13+5]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pv2 = new Vector3d(yf[i*13+6]' yf[i*13+7]' yf[i*13+8]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pv2 = new Vector3d(yf[i*13+6]' yf[i*13+7]' yf[i*13+8]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pv2 = new Vector3d(yf[i*13+6]' yf[i*13+7]' yf[i*13+8]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pv2 = new Vector3d(yf[i*13+6]' yf[i*13+7]' yf[i*13+8]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pv2 = new Vector3d(yf[i*13+6]' yf[i*13+7]' yf[i*13+8]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pv2 = new Vector3d(yf[i*13+6]' yf[i*13+7]' yf[i*13+8]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pr2 = new Vector3d(yf[i*13+9]' yf[i*13+10]' yf[i*13+11]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pr2 = new Vector3d(yf[i*13+9]' yf[i*13+10]' yf[i*13+11]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pr2 = new Vector3d(yf[i*13+9]' yf[i*13+10]' yf[i*13+11]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pr2 = new Vector3d(yf[i*13+9]' yf[i*13+10]' yf[i*13+11]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pr2 = new Vector3d(yf[i*13+9]' yf[i*13+10]' yf[i*13+11]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: Vector3d pr2 = new Vector3d(yf[i*13+9]' yf[i*13+10]' yf[i*13+11]);
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,optimizationFunction,The following statement contains a magic number: znorm < 1e-9
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,runOptimizer,The following statement contains a magic number: max_z < 1e-5
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,runOptimizer,The following statement contains a magic number: (rep.terminationtype != 2) && (rep.terminationtype != 7)
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,runOptimizer,The following statement contains a magic number: (rep.terminationtype != 2) && (rep.terminationtype != 7)
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,UpdateY0,The following statement contains a magic number: y0[arcindex+2] = r0_bar[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,UpdateY0,The following statement contains a magic number: y0[arcindex+2] = r0_bar[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,UpdateY0,The following statement contains a magic number: y0[arcindex+3] = v0_bar[0];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,UpdateY0,The following statement contains a magic number: y0[arcindex+4] = v0_bar[1];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,UpdateY0,The following statement contains a magic number: y0[arcindex+5] = v0_bar[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,UpdateY0,The following statement contains a magic number: y0[arcindex+5] = v0_bar[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,UpdateY0,The following statement contains a magic number: y0[arcindex+6] = pv0[0];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,UpdateY0,The following statement contains a magic number: y0[arcindex+7] = pv0[1];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,UpdateY0,The following statement contains a magic number: y0[arcindex+8] = pv0[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,UpdateY0,The following statement contains a magic number: y0[arcindex+8] = pv0[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,UpdateY0,The following statement contains a magic number: y0[arcindex+9] = pr0[0];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,UpdateY0,The following statement contains a magic number: y0[arcindex+10] = pr0[1];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,UpdateY0,The following statement contains a magic number: y0[arcindex+11] = pr0[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,UpdateY0,The following statement contains a magic number: y0[arcindex+11] = pr0[2];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,UpdateY0,The following statement contains a magic number: y0[arcindex+12] = arcs[i].m0;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,InsertCoast,The following statement contains a magic number: yf = new double[arcs.Count*13];
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,RetryCoast,The following statement contains a magic number: y0[bottom] = dt/2.0;
Magic Number,MuMech,PontryaginBase,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,RemoveArc,The following statement contains a magic number: yf = new double[arcs.Count*13];
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,r,The following statement contains a magic number: return Planetarium.fetch.rotation * new Vector3d( interpolate(0' tbar)' interpolate(1' tbar)' interpolate(2' tbar) ) * r_scale;
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,r_bar,The following statement contains a magic number: return new Vector3d( interpolate(0' tbar)' interpolate(1' tbar)' interpolate(2' tbar) );
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,v,The following statement contains a magic number: return Planetarium.fetch.rotation * new Vector3d( interpolate(3' tbar)' interpolate(4' tbar)' interpolate(5' tbar) ) * v_scale;
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,v,The following statement contains a magic number: return Planetarium.fetch.rotation * new Vector3d( interpolate(3' tbar)' interpolate(4' tbar)' interpolate(5' tbar) ) * v_scale;
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,v,The following statement contains a magic number: return Planetarium.fetch.rotation * new Vector3d( interpolate(3' tbar)' interpolate(4' tbar)' interpolate(5' tbar) ) * v_scale;
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,v_bar,The following statement contains a magic number: return new Vector3d( interpolate(3' tbar)' interpolate(4' tbar)' interpolate(5' tbar) );
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,v_bar,The following statement contains a magic number: return new Vector3d( interpolate(3' tbar)' interpolate(4' tbar)' interpolate(5' tbar) );
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,v_bar,The following statement contains a magic number: return new Vector3d( interpolate(3' tbar)' interpolate(4' tbar)' interpolate(5' tbar) );
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,pv,The following statement contains a magic number: return Planetarium.fetch.rotation * new Vector3d( interpolate(6' tbar)' interpolate(7' tbar)' interpolate(8' tbar) );
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,pv,The following statement contains a magic number: return Planetarium.fetch.rotation * new Vector3d( interpolate(6' tbar)' interpolate(7' tbar)' interpolate(8' tbar) );
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,pv,The following statement contains a magic number: return Planetarium.fetch.rotation * new Vector3d( interpolate(6' tbar)' interpolate(7' tbar)' interpolate(8' tbar) );
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,pv_bar,The following statement contains a magic number: return new Vector3d( interpolate(6' tbar)' interpolate(7' tbar)' interpolate(8' tbar) );
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,pv_bar,The following statement contains a magic number: return new Vector3d( interpolate(6' tbar)' interpolate(7' tbar)' interpolate(8' tbar) );
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,pv_bar,The following statement contains a magic number: return new Vector3d( interpolate(6' tbar)' interpolate(7' tbar)' interpolate(8' tbar) );
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,pr,The following statement contains a magic number: return Planetarium.fetch.rotation * new Vector3d( interpolate(9' tbar)' interpolate(10' tbar)' interpolate(11' tbar) );
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,pr,The following statement contains a magic number: return Planetarium.fetch.rotation * new Vector3d( interpolate(9' tbar)' interpolate(10' tbar)' interpolate(11' tbar) );
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,pr,The following statement contains a magic number: return Planetarium.fetch.rotation * new Vector3d( interpolate(9' tbar)' interpolate(10' tbar)' interpolate(11' tbar) );
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,pr_bar,The following statement contains a magic number: return new Vector3d( interpolate(9' tbar)' interpolate(10' tbar)' interpolate(11' tbar) );
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,pr_bar,The following statement contains a magic number: return new Vector3d( interpolate(9' tbar)' interpolate(10' tbar)' interpolate(11' tbar) );
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,pr_bar,The following statement contains a magic number: return new Vector3d( interpolate(9' tbar)' interpolate(10' tbar)' interpolate(11' tbar) );
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,m,The following statement contains a magic number: return interpolate(12' tbar);
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,m_bar,The following statement contains a magic number: return interpolate(12' tbar);
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,dV,The following statement contains a magic number: return interpolate(13' tbar) * v_scale;
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,dV,The following statement contains a magic number: return ( interpolate(13' tmax) - interpolate(13' tmin) ) * v_scale;
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,dV,The following statement contains a magic number: return ( interpolate(13' tmax) - interpolate(13' tmin) ) * v_scale;
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,pitch_and_heading,The following statement contains a magic number: Vector3d rbar = new Vector3d( interpolate(0' tbar)' interpolate(1' tbar)' interpolate(2' tbar) );
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,pitch_and_heading,The following statement contains a magic number: Vector3d pv = new Vector3d( interpolate(6' tbar)' interpolate(7' tbar)' interpolate(8' tbar) );
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,pitch_and_heading,The following statement contains a magic number: Vector3d pv = new Vector3d( interpolate(6' tbar)' interpolate(7' tbar)' interpolate(8' tbar) );
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,pitch_and_heading,The following statement contains a magic number: Vector3d pv = new Vector3d( interpolate(6' tbar)' interpolate(7' tbar)' interpolate(8' tbar) );
Magic Number,MuMech,Solution,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,pitch_and_heading,The following statement contains a magic number: pitch = 90.0 - Vector3d.Angle(pv' rbar);
Magic Number,MuMech,Segment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,Segment,The following statement contains a magic number: double[][] yi = new double[14][];
Magic Number,MuMech,Segment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,Segment,The following statement contains a magic number: i < 14
Magic Number,MuMech,Segment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,Segment,The following statement contains a magic number: j > 1 && Math.Abs(t[j] - ti[j2-1]) < 1e-15
Magic Number,MuMech,Segment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,Segment,The following statement contains a magic number: i < 14
Magic Number,MuMech,Segment,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginBase.cs,Segment,The following statement contains a magic number: i < 14
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle5constraint,The following statement contains a magic number: Vector3d rf = new Vector3d(yT[0]' yT[1]' yT[2]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle5constraint,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle5constraint,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle5constraint,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle5constraint,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle5constraint,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle5constraint,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle5constraint,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle5constraint,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle5constraint,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle5constraint,The following statement contains a magic number: z[0] = ( rf.magnitude * rf.magnitude - rTm * rTm ) / 2.0;
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle5constraint,The following statement contains a magic number: z[2] = hmiss[0];
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle5constraint,The following statement contains a magic number: z[3] = hmiss[1];
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle5constraint,The following statement contains a magic number: z[4] = hmiss[2];
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle5constraint,The following statement contains a magic number: z[4] = hmiss[2];
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle5constraint,The following statement contains a magic number: z[5] = Vector3d.Dot(Vector3d.Cross(prf' rf) + Vector3d.Cross(pvf' vf)' hT);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraint,The following statement contains a magic number: Vector3d rf = new Vector3d(yT[0]' yT[1]' yT[2]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraint,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraint,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraint,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraint,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraint,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraint,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraint,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraint,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraint,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraint,The following statement contains a magic number: z[0] = ( rf.magnitude * rf.magnitude - rTm * rTm ) / 2.0;
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraint,The following statement contains a magic number: z[1] = ( vf.magnitude * vf.magnitude - vTm * vTm ) / 2.0;
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraint,The following statement contains a magic number: z[2] = Vector3d.Dot(n' hf) - hf.magnitude * Math.Cos(incT);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraint,The following statement contains a magic number: z[3] = Vector3d.Dot(rf' vf) - rf.magnitude * vf.magnitude * Math.Sin(gammaT);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraint,The following statement contains a magic number: z[4] = rTm * rTm * ( Vector3d.Dot(vf' prf) - vTm * Math.Sin(gammaT) / rTm * Vector3d.Dot(rf' prf) ) -                      vTm * vTm * ( Vector3d.Dot(rf' pvf) - rTm * Math.Sin(gammaT) / vTm * Vector3d.Dot(vf' pvf) );
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraint,The following statement contains a magic number: z[5] = Vector3d.Dot(hf' prf) * Vector3d.Dot(hf' rn) + Vector3d.Dot(hf' pvf) * Vector3d.Dot(hf' vn);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian3constraint,The following statement contains a magic number: Vector3d rf = new Vector3d(yT[0]' yT[1]' yT[2]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian3constraint,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian3constraint,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian3constraint,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian3constraint,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian3constraint,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian3constraint,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian3constraint,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian3constraint,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian3constraint,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian3constraint,The following statement contains a magic number: double smaf = 1.0 / ( 2.0 / rf.magnitude - vf.sqrMagnitude );
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian3constraint,The following statement contains a magic number: z[1] = vf.sqrMagnitude / 2.0 - 1.0 / rf.magnitude + 1.0 / ( 2.0 * smaT );
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian3constraint,The following statement contains a magic number: z[1] = vf.sqrMagnitude / 2.0 - 1.0 / rf.magnitude + 1.0 / ( 2.0 * smaT );
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian3constraint,The following statement contains a magic number: z[2] = Vector3d.Dot(n' hf.normalized) - Math.Cos(incT);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian3constraint,The following statement contains a magic number: z[3] = Vector3d.Dot(Vector3d.Cross(prf' rf) + Vector3d.Cross(pvf' vf)' hf);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian3constraint,The following statement contains a magic number: z[4] = Vector3d.Dot(Vector3d.Cross(prf' rf) + Vector3d.Cross(pvf' vf)' n);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian3constraint,The following statement contains a magic number: z[5] = Vector3d.Dot(prf' vf) - Vector3d.Dot(pvf' rf) / ( rf.magnitude * rf.magnitude * rf.magnitude );
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintArgPfree,The following statement contains a magic number: Vector3d rf = new Vector3d(yT[0]' yT[1]' yT[2]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintArgPfree,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintArgPfree,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintArgPfree,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintArgPfree,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintArgPfree,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintArgPfree,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintArgPfree,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintArgPfree,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintArgPfree,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintArgPfree,The following statement contains a magic number: double smaf = 1.0 / ( 2.0 / rf.magnitude - vf.sqrMagnitude );
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintArgPfree,The following statement contains a magic number: z[2] = hmiss[0];
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintArgPfree,The following statement contains a magic number: z[2] = hmiss[1];
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintArgPfree,The following statement contains a magic number: z[3] = hmiss[2];
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintArgPfree,The following statement contains a magic number: z[3] = hmiss[2];
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintArgPfree,The following statement contains a magic number: z[4] = Vector3d.Dot(Vector3d.Cross(prf' rf) + Vector3d.Cross(pvf' vf)' hf);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintArgPfree,The following statement contains a magic number: z[5] = Vector3d.Dot(prf' vf) - Vector3d.Dot(pvf' rf) / ( rf.magnitude * rf.magnitude * rf.magnitude );
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintLANfree,The following statement contains a magic number: Vector3d rf = new Vector3d(yT[0]' yT[1]' yT[2]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintLANfree,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintLANfree,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintLANfree,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintLANfree,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintLANfree,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintLANfree,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintLANfree,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintLANfree,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintLANfree,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintLANfree,The following statement contains a magic number: double smaf = 1.0 / ( 2.0 / rf.magnitude - vf.sqrMagnitude );
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintLANfree,The following statement contains a magic number: z[1] = vf.sqrMagnitude / 2.0 - 1.0 / rf.magnitude + 1.0 / ( 2.0 * smaT );
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintLANfree,The following statement contains a magic number: z[1] = vf.sqrMagnitude / 2.0 - 1.0 / rf.magnitude + 1.0 / ( 2.0 * smaT );
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintLANfree,The following statement contains a magic number: z[2] = Vector3d.Dot(n' hf) - hf.magnitude * Math.Cos(incT);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintLANfree,The following statement contains a magic number: z[3] = Vector3d.Dot(eccf' Vector3d.Cross(n' hf)) / eccf.magnitude / hf.magnitude - Math.Sin(incT) * Math.Cos(ArgPT);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintLANfree,The following statement contains a magic number: z[4] = Vector3d.Dot(Vector3d.Cross(prf' rf) + Vector3d.Cross(pvf' vf)' n);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian4constraintLANfree,The following statement contains a magic number: z[5] = Vector3d.Dot(prf' vf) - Vector3d.Dot(pvf' rf) / ( rf.magnitude * rf.magnitude * rf.magnitude );
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: Vector3d rf = new Vector3d(yT[0]' yT[1]' yT[2]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: rf = rf.Reorder(231);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: vf = vf.Reorder(231);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: prf = prf.Reorder(231);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: pvf = pvf.Reorder(231);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: hT = hT.Reorder(231);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: eT = eT.Reorder(231);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: Math.Abs(hT[1]) <= 1e-6
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: z[2] = hmiss[2];
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: z[2] = hmiss[2];
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: z[3] = emiss[0];
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: z[4] = emiss[2];
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: z[4] = emiss[2];
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,keplerian5constraint,The following statement contains a magic number: z[5] = trans;
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle3constraintMAXE,The following statement contains a magic number: Vector3d rf = new Vector3d(yT[0]' yT[1]' yT[2]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle3constraintMAXE,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle3constraintMAXE,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle3constraintMAXE,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle3constraintMAXE,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle3constraintMAXE,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle3constraintMAXE,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle3constraintMAXE,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle3constraintMAXE,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle3constraintMAXE,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle3constraintMAXE,The following statement contains a magic number: z[0] = ( rf.sqrMagnitude - rTm * rTm ) / 2.0;
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle3constraintMAXE,The following statement contains a magic number: z[2] = Vector3d.Dot(rf' vf) - rf.magnitude * vf.magnitude * Math.Sin(gammaT);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle3constraintMAXE,The following statement contains a magic number: z[3] = Vector3d.Dot(vf' prf) * rf.sqrMagnitude - Vector3d.Dot(rf' pvf) * vf.sqrMagnitude + Vector3d.Dot(rf' vf) * (vf.sqrMagnitude - Vector3d.Dot(rf' prf));
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle3constraintMAXE,The following statement contains a magic number: z[4] = Vector3d.Dot(vf' pvf) - vf.sqrMagnitude;
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle3constraintMAXE,The following statement contains a magic number: z[5] = Vector3d.Dot(hf' prf) * Vector3d.Dot(hf' Vector3d.Cross(rf' n)) + Vector3d.Dot(hf' pvf) * Vector3d.Dot(hf' Vector3d.Cross(vf' n));
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraintMAXE,The following statement contains a magic number: Vector3d rf = new Vector3d(yT[0]' yT[1]' yT[2]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraintMAXE,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraintMAXE,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraintMAXE,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraintMAXE,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraintMAXE,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraintMAXE,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraintMAXE,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraintMAXE,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraintMAXE,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraintMAXE,The following statement contains a magic number: z[0] = ( rf.sqrMagnitude - rTm * rTm ) / 2.0;
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraintMAXE,The following statement contains a magic number: z[2] = Vector3d.Dot(rf' i_hT);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraintMAXE,The following statement contains a magic number: z[3] = Vector3d.Dot(vf' i_hT);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraintMAXE,The following statement contains a magic number: z[4] = Vector3d.Dot(vf' prf) * rf.sqrMagnitude - Vector3d.Dot(rf' pvf) * vf.sqrMagnitude;
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,flightangle4constraintMAXE,The following statement contains a magic number: z[5] = Vector3d.Dot(vf' pvf) - vf.sqrMagnitude;
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,Bootstrap,The following statement contains a magic number: yf = new double[arcs.Count*13];
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,Bootstrap,The following statement contains a magic number: multipleIntegrate(y0' new_sol' arcs' 10);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,Bootstrap,The following statement contains a magic number: RemoveArc(arcs' arcs.Count-2' new_sol);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,Bootstrap,The following statement contains a magic number: multipleIntegrate(y0' new_sol' arcs' 10);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,Bootstrap,The following statement contains a magic number: double coastlen = new_sol.tgo(new_sol.t0' arcs.Count-2);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,Bootstrap,The following statement contains a magic number: RemoveArc(arcs' arcs.Count-2' new_sol);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,Bootstrap,The following statement contains a magic number: multipleIntegrate(y0' new_sol' arcs' 10);
Magic Number,MuMech,PontryaginLaunch,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginLaunch.cs,Bootstrap,The following statement contains a magic number: yf = new double[arcs.Count*13];
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,PontryaginNode,The following statement contains a magic number: tc1 = bt / 2.0;
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,intercept,The following statement contains a magic number: z[2] = yT[2] - rT[2];
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,intercept,The following statement contains a magic number: z[2] = yT[2] - rT[2];
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,intercept,The following statement contains a magic number: z[2] = yT[2] - rT[2];
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,intercept,The following statement contains a magic number: z[3] = yT[3] - vT[0];
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,intercept,The following statement contains a magic number: z[3] = yT[3] - vT[0];
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,intercept,The following statement contains a magic number: z[4] = yT[4] - vT[1];
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,intercept,The following statement contains a magic number: z[4] = yT[4] - vT[1];
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,intercept,The following statement contains a magic number: z[5] = yT[5] - vT[2];
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,intercept,The following statement contains a magic number: z[5] = yT[5] - vT[2];
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,intercept,The following statement contains a magic number: z[5] = yT[5] - vT[2];
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: Vector3d rf = new Vector3d(yT[0]' yT[1]' yT[2]);
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: Vector3d vf = new Vector3d(yT[3]' yT[4]' yT[5]);
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: Vector3d pvf = new Vector3d(yT[6]' yT[7]' yT[8]);
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: Vector3d prf = new Vector3d(yT[9]' yT[10]' yT[11]);
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: rTp = rTp.Reorder(231);
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: vTp = vTp.Reorder(231);
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: rf = rf.Reorder(231);
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: vf = vf.Reorder(231);
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: prf = prf.Reorder(231);
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: pvf = pvf.Reorder(231);
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: Math.Abs(hT[1]) <= 1e-6
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: z[2] = hmiss[2];
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: z[2] = hmiss[2];
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: z[3] = emiss[0];
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: z[4] = emiss[2];
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: z[4] = emiss[2];
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,terminal5constraint,The following statement contains a magic number: z[5] = trans;
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,Bootstrap,The following statement contains a magic number: Tf = t0 + tgo * 3.0 / 2.0;
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,Bootstrap,The following statement contains a magic number: Tf = t0 + tgo * 3.0 / 2.0;
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,Bootstrap,The following statement contains a magic number: yf = new double[arcs.Count*13];
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,Bootstrap,The following statement contains a magic number: multipleIntegrate(y0' new_sol' arcs' 10);
Magic Number,MuMech,PontryaginNode,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Pontryagin\PontryaginNode.cs,Bootstrap,The following statement contains a magic number: multipleIntegrate(y0' new_sol' arcs' 10);
Magic Number,MuMech,RCSSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,run,The following statement contains a magic number: B[B.Length - 1] = 0.001 * count;
Magic Number,MuMech,RCSSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,run,The following statement contains a magic number: A[2' tIdx] = torqueErr.z * factorTorque;
Magic Number,MuMech,RCSSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,run,The following statement contains a magic number: A[3' tIdx] = transErr.x * factorTranslate;
Magic Number,MuMech,RCSSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,run,The following statement contains a magic number: A[4' tIdx] = transErr.y * factorTranslate;
Magic Number,MuMech,RCSSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,run,The following statement contains a magic number: A[5' tIdx] = transErr.z * factorTranslate;
Magic Number,MuMech,RCSSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,run,The following statement contains a magic number: A[6' tIdx] = waste * factorWaste;
Magic Number,MuMech,RCSSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,run,The following statement contains a magic number: A[7' tIdx] = 0.001;
Magic Number,MuMech,RCSSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,run,The following statement contains a magic number: A[7' tIdx] = 0.001;
Magic Number,MuMech,RCSSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,run,The following statement contains a magic number: const double epsg = 0.01;
Magic Number,MuMech,RCSSolver,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,run,The following statement contains a magic number: const double diffstep = 1.0e-6;
Magic Number,MuMech,RCSSolverKey,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,RCSSolverKey,The following statement contains a magic number: int x = (int)(d.x * 127);
Magic Number,MuMech,RCSSolverKey,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,RCSSolverKey,The following statement contains a magic number: int y = (int)(d.y * 127);
Magic Number,MuMech,RCSSolverKey,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,RCSSolverKey,The following statement contains a magic number: int z = (int)(d.z * 127);
Magic Number,MuMech,RCSSolverKey,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,RCSSolverKey,The following statement contains a magic number: hash = (int)(((x & 0xFF) << 16) + ((y & 0xFF) << 8) + (z & 0xFF));
Magic Number,MuMech,RCSSolverKey,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,RCSSolverKey,The following statement contains a magic number: hash = (int)(((x & 0xFF) << 16) + ((y & 0xFF) << 8) + (z & 0xFF));
Magic Number,MuMech,RCSSolverThread,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,CheckVessel,The following statement contains a magic number: comErrorThreshold = (Math.Max(state.MoI.magnitude' 2.34) - 1) / 542;
Magic Number,MuMech,RCSSolverThread,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\RCSSolver.cs,CheckVessel,The following statement contains a magic number: comErrorThreshold = (Math.Max(state.MoI.magnitude' 2.34) - 1) / 542;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,Init,The following statement contains a magic number: attitude = Quaternion.Euler(180'0'0);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RunSimulation,The following statement contains a magic number: maxSimulatedTime = maxOrbits * 2.0 * Math.PI * Math.Sqrt(Math.Pow(Math.Abs(x.magnitude)' 3.0) / gravParameter);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RunSimulation,The following statement contains a magic number: maxSimulatedTime = maxOrbits * 2.0 * Math.PI * Math.Sqrt(Math.Pow(Math.Abs(x.magnitude)' 3.0) / gravParameter);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RunSimulation,The following statement contains a magic number: t > maxT || Escaping() || steps > 50000
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,Escaping,The following statement contains a magic number: double escapeVel = Math.Sqrt(2 * gravParameter / x.magnitude);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,AdvanceToFreefallEnd,The following statement contains a magic number: double E = -GM / (2 * initialOrbit.semiMajorAxis);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,AdvanceToFreefallEnd,The following statement contains a magic number: v = Math.Sqrt(Math.Abs(2 * (E + GM / x.magnitude))) * x.normalized;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,FindFreefallEndTime,The following statement contains a magic number: double testUT = (upperUT + lowerUT) / 2;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,FindFreefallEndTime,The following statement contains a magic number: return (upperUT + lowerUT) / 2;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The following statement contains a magic number: Vector3d dv2 = dt * TotalAccel(x + 0.5 * dx1' v + 0.5 * dv1);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The following statement contains a magic number: Vector3d dv2 = dt * TotalAccel(x + 0.5 * dx1' v + 0.5 * dv1);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The following statement contains a magic number: Vector3d dx2 = dt * (v + 0.5 * dv1);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The following statement contains a magic number: Vector3d dv3 = dt * TotalAccel(x + 0.5 * dx2' v + 0.5 * dv2);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The following statement contains a magic number: Vector3d dv3 = dt * TotalAccel(x + 0.5 * dx2' v + 0.5 * dv2);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The following statement contains a magic number: Vector3d dx3 = dt * (v + 0.5 * dv2);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The following statement contains a magic number: dx = (dx1 + 2 * dx2 + 2 * dx3 + dx4) / 6.0;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The following statement contains a magic number: dx = (dx1 + 2 * dx2 + 2 * dx3 + dx4) / 6.0;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The following statement contains a magic number: dx = (dx1 + 2 * dx2 + 2 * dx3 + dx4) / 6.0;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The following statement contains a magic number: dv = (dv1 + 2 * dv2 + 2 * dv3 + dv4) / 6.0;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The following statement contains a magic number: dv = (dv1 + 2 * dv2 + 2 * dv3 + dv4) / 6.0;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The following statement contains a magic number: dv = (dv1 + 2 * dv2 + 2 * dv3 + dv4) / 6.0;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The following statement contains a magic number: dt = dt / 2;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The following statement contains a magic number: v.magnitude < dv.magnitude * 2 && dt >= min_dt * 2
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,RK4Step,The following statement contains a magic number: v.magnitude < dv.magnitude * 2 && dt >= min_dt * 2
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: const double tol = 0.01;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: const double d9 = 1d / 9d;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: const double d24 = 1d / 24d;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: Vector3d dv2 = dt * TotalAccel(x + 0.5 * dx1' v + 0.5 * dv1);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: Vector3d dv2 = dt * TotalAccel(x + 0.5 * dx1' v + 0.5 * dv1);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: Vector3d dx2 = dt * (v + 0.5 * dv1);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: Vector3d dv3 = dt * TotalAccel(x + 0.75 * dx2' v + 0.75 * dv2);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: Vector3d dv3 = dt * TotalAccel(x + 0.75 * dx2' v + 0.75 * dv2);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: Vector3d dx3 = dt * (v + 0.75 * dv2);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: Vector3d dv4 = dt * TotalAccel(x + 2 * d9 * dx1 + 3 * d9 * dx2 + 4 * d9 * dx3' v + 2 * d9 * dv1 + 3 * d9 * dv2 + 4 * d9 * dv3);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: Vector3d dv4 = dt * TotalAccel(x + 2 * d9 * dx1 + 3 * d9 * dx2 + 4 * d9 * dx3' v + 2 * d9 * dv1 + 3 * d9 * dv2 + 4 * d9 * dv3);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: Vector3d dv4 = dt * TotalAccel(x + 2 * d9 * dx1 + 3 * d9 * dx2 + 4 * d9 * dx3' v + 2 * d9 * dv1 + 3 * d9 * dv2 + 4 * d9 * dv3);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: Vector3d dv4 = dt * TotalAccel(x + 2 * d9 * dx1 + 3 * d9 * dx2 + 4 * d9 * dx3' v + 2 * d9 * dv1 + 3 * d9 * dv2 + 4 * d9 * dv3);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: Vector3d dv4 = dt * TotalAccel(x + 2 * d9 * dx1 + 3 * d9 * dx2 + 4 * d9 * dx3' v + 2 * d9 * dv1 + 3 * d9 * dv2 + 4 * d9 * dv3);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: Vector3d dv4 = dt * TotalAccel(x + 2 * d9 * dx1 + 3 * d9 * dx2 + 4 * d9 * dx3' v + 2 * d9 * dv1 + 3 * d9 * dv2 + 4 * d9 * dv3);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: dx = (2 * dx1 + 3 * dx2 + 4 * dx3 ) * d9;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: dx = (2 * dx1 + 3 * dx2 + 4 * dx3 ) * d9;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: dx = (2 * dx1 + 3 * dx2 + 4 * dx3 ) * d9;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: dv = (2 * dv1 + 3 * dv2 + 4 * dv3 ) * d9;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: dv = (2 * dv1 + 3 * dv2 + 4 * dv3 ) * d9;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: dv = (2 * dv1 + 3 * dv2 + 4 * dv3 ) * d9;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: Vector3d zv = (7 * dv1 + 6 * dv2 + 8 * dv3 + 3 * dv4) * d24;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: Vector3d zv = (7 * dv1 + 6 * dv2 + 8 * dv3 + 3 * dv4) * d24;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: Vector3d zv = (7 * dv1 + 6 * dv2 + 8 * dv3 + 3 * dv4) * d24;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: Vector3d zv = (7 * dv1 + 6 * dv2 + 8 * dv3 + 3 * dv4) * d24;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: double mach = Math.Min(velocity / speedOfSound' 50f);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: var errorMagnitude = Math.Max(errorv.magnitude' 10e-6);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: next_dt = dt * 0.9 * Math.Pow(tol / errorMagnitude' 1 / 3d);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: next_dt = dt * 0.9 * Math.Pow(tol / errorMagnitude' 1 / 3d);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: next_dt = Math.Min(next_dt' 10);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: next_dt = Math.Min(next_dt' 0.02);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: sqrStartDist < 1000 * 1000
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,BS34Step,The following statement contains a magic number: sqrStartDist < 1000 * 1000
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,TotalAccel,The following statement contains a magic number: float mach = Mathf.Min((float)(airVel.magnitude / speedOfSound)' 50f);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,TotalAccel,The following statement contains a magic number: float dynamicPressurekPa = (float)(0.0005 * airDensity * airVel.sqrMagnitude);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,TotalAccel,The following statement contains a magic number: result.prediction.firstDrag = DragForce(pos' vel' dynamicPressurekPa' mach).magnitude / 9.81;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,TotalAccel,The following statement contains a magic number: result.prediction.firstLift = LiftForce(pos' vel' dynamicPressurekPa' mach).magnitude / 9.81;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,GetTemperature,The following statement contains a magic number: polarAngle > Mathf.PI * 0.5f
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,GetTemperature,The following statement contains a magic number: float time = (Mathf.PI * 0.5f - polarAngle) * Mathf.Rad2Deg;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,GetTemperature,The following statement contains a magic number: float sunBodyMaxDot = (1.0f + Mathf.Cos(sunPolarAngle - bodyPolarAngle)) * 0.5f;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,GetTemperature,The following statement contains a magic number: float sunBodyMinDot = (1.0f + Mathf.Cos(sunPolarAngle + bodyPolarAngle)) * 0.5f;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,GetTemperature,The following statement contains a magic number: float sunDotCorrected = (1.0f + Vector3.Dot(sunVector' Quaternion.AngleAxis(45f * Mathf.Sign((float)mainBody.rotationPeriod)' mainBody.bodyTransform.up) * up)) * 0.5f;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,GetTemperature,The following statement contains a magic number: float sunDotCorrected = (1.0f + Vector3.Dot(sunVector' Quaternion.AngleAxis(45f * Mathf.Sign((float)mainBody.rotationPeriod)' mainBody.bodyTransform.up) * up)) * 0.5f;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,Log,The following statement contains a magic number: nextLog = t + 10;
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,Log,The following statement contains a magic number: float mach = Mathf.Min((float)(airVel.magnitude / speedOfSound)' 50f);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,Log,The following statement contains a magic number: float dynamicPressurekPa = (float)(0.0005 * AirDensity(pos' altitude) * airVel.sqrMagnitude);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,Log,The following statement contains a magic number: result.debugLog += "\n "                                     + (t - startUT).ToString("F2").PadLeft(8)                                     + " Alt:" + altitude.ToString("F0").PadLeft(6)                                     + " Vel:" + vel.magnitude.ToString("F2").PadLeft(8)                                     + " AirVel:" + airVel.magnitude.ToString("F2").PadLeft(8)                                     + " SoS:" + speedOfSound.ToString("F2").PadLeft(6)                                     + " mach:" + mach.ToString("F2").PadLeft(6)                                     + " dynP:" + dynamicPressurekPa.ToString("F5").PadLeft(9)                                     + " Temp:" + atmosphericTemperature.ToString("F2").PadLeft(8)                                     + " Lat:" + referenceFrame.Latitude(pos).ToString("F2").PadLeft(6);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,Log,The following statement contains a magic number: result.debugLog += "\n "                                     + (t - startUT).ToString("F2").PadLeft(8)                                     + " Alt:" + altitude.ToString("F0").PadLeft(6)                                     + " Vel:" + vel.magnitude.ToString("F2").PadLeft(8)                                     + " AirVel:" + airVel.magnitude.ToString("F2").PadLeft(8)                                     + " SoS:" + speedOfSound.ToString("F2").PadLeft(6)                                     + " mach:" + mach.ToString("F2").PadLeft(6)                                     + " dynP:" + dynamicPressurekPa.ToString("F5").PadLeft(9)                                     + " Temp:" + atmosphericTemperature.ToString("F2").PadLeft(8)                                     + " Lat:" + referenceFrame.Latitude(pos).ToString("F2").PadLeft(6);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,Log,The following statement contains a magic number: result.debugLog += "\n "                                     + (t - startUT).ToString("F2").PadLeft(8)                                     + " Alt:" + altitude.ToString("F0").PadLeft(6)                                     + " Vel:" + vel.magnitude.ToString("F2").PadLeft(8)                                     + " AirVel:" + airVel.magnitude.ToString("F2").PadLeft(8)                                     + " SoS:" + speedOfSound.ToString("F2").PadLeft(6)                                     + " mach:" + mach.ToString("F2").PadLeft(6)                                     + " dynP:" + dynamicPressurekPa.ToString("F5").PadLeft(9)                                     + " Temp:" + atmosphericTemperature.ToString("F2").PadLeft(8)                                     + " Lat:" + referenceFrame.Latitude(pos).ToString("F2").PadLeft(6);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,Log,The following statement contains a magic number: result.debugLog += "\n "                                     + (t - startUT).ToString("F2").PadLeft(8)                                     + " Alt:" + altitude.ToString("F0").PadLeft(6)                                     + " Vel:" + vel.magnitude.ToString("F2").PadLeft(8)                                     + " AirVel:" + airVel.magnitude.ToString("F2").PadLeft(8)                                     + " SoS:" + speedOfSound.ToString("F2").PadLeft(6)                                     + " mach:" + mach.ToString("F2").PadLeft(6)                                     + " dynP:" + dynamicPressurekPa.ToString("F5").PadLeft(9)                                     + " Temp:" + atmosphericTemperature.ToString("F2").PadLeft(8)                                     + " Lat:" + referenceFrame.Latitude(pos).ToString("F2").PadLeft(6);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,Log,The following statement contains a magic number: result.debugLog += "\n "                                     + (t - startUT).ToString("F2").PadLeft(8)                                     + " Alt:" + altitude.ToString("F0").PadLeft(6)                                     + " Vel:" + vel.magnitude.ToString("F2").PadLeft(8)                                     + " AirVel:" + airVel.magnitude.ToString("F2").PadLeft(8)                                     + " SoS:" + speedOfSound.ToString("F2").PadLeft(6)                                     + " mach:" + mach.ToString("F2").PadLeft(6)                                     + " dynP:" + dynamicPressurekPa.ToString("F5").PadLeft(9)                                     + " Temp:" + atmosphericTemperature.ToString("F2").PadLeft(8)                                     + " Lat:" + referenceFrame.Latitude(pos).ToString("F2").PadLeft(6);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,Log,The following statement contains a magic number: result.debugLog += "\n "                                     + (t - startUT).ToString("F2").PadLeft(8)                                     + " Alt:" + altitude.ToString("F0").PadLeft(6)                                     + " Vel:" + vel.magnitude.ToString("F2").PadLeft(8)                                     + " AirVel:" + airVel.magnitude.ToString("F2").PadLeft(8)                                     + " SoS:" + speedOfSound.ToString("F2").PadLeft(6)                                     + " mach:" + mach.ToString("F2").PadLeft(6)                                     + " dynP:" + dynamicPressurekPa.ToString("F5").PadLeft(9)                                     + " Temp:" + atmosphericTemperature.ToString("F2").PadLeft(8)                                     + " Lat:" + referenceFrame.Latitude(pos).ToString("F2").PadLeft(6);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,Log,The following statement contains a magic number: result.debugLog += "\n "                                     + (t - startUT).ToString("F2").PadLeft(8)                                     + " Alt:" + altitude.ToString("F0").PadLeft(6)                                     + " Vel:" + vel.magnitude.ToString("F2").PadLeft(8)                                     + " AirVel:" + airVel.magnitude.ToString("F2").PadLeft(8)                                     + " SoS:" + speedOfSound.ToString("F2").PadLeft(6)                                     + " mach:" + mach.ToString("F2").PadLeft(6)                                     + " dynP:" + dynamicPressurekPa.ToString("F5").PadLeft(9)                                     + " Temp:" + atmosphericTemperature.ToString("F2").PadLeft(8)                                     + " Lat:" + referenceFrame.Latitude(pos).ToString("F2").PadLeft(6);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,Log,The following statement contains a magic number: result.debugLog += "\n "                                     + (t - startUT).ToString("F2").PadLeft(8)                                     + " Alt:" + altitude.ToString("F0").PadLeft(6)                                     + " Vel:" + vel.magnitude.ToString("F2").PadLeft(8)                                     + " AirVel:" + airVel.magnitude.ToString("F2").PadLeft(8)                                     + " SoS:" + speedOfSound.ToString("F2").PadLeft(6)                                     + " mach:" + mach.ToString("F2").PadLeft(6)                                     + " dynP:" + dynamicPressurekPa.ToString("F5").PadLeft(9)                                     + " Temp:" + atmosphericTemperature.ToString("F2").PadLeft(8)                                     + " Lat:" + referenceFrame.Latitude(pos).ToString("F2").PadLeft(6);
Magic Number,MuMech,ReentrySimulation,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,Log,The following statement contains a magic number: result.debugLog += "\n "                                     + (t - startUT).ToString("F2").PadLeft(8)                                     + " Alt:" + altitude.ToString("F0").PadLeft(6)                                     + " Vel:" + vel.magnitude.ToString("F2").PadLeft(8)                                     + " AirVel:" + airVel.magnitude.ToString("F2").PadLeft(8)                                     + " SoS:" + speedOfSound.ToString("F2").PadLeft(6)                                     + " mach:" + mach.ToString("F2").PadLeft(6)                                     + " dynP:" + dynamicPressurekPa.ToString("F5").PadLeft(9)                                     + " Temp:" + atmosphericTemperature.ToString("F2").PadLeft(8)                                     + " Lat:" + referenceFrame.Latitude(pos).ToString("F2").PadLeft(6);
Magic Number,MuMech,ReferenceFrame,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,UpdateAtCurrentTime,The following statement contains a magic number: lat0lon90AtStart = body.GetSurfaceNVector(0' 90);
Magic Number,MuMech,ReferenceFrame,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,UpdateAtCurrentTime,The following statement contains a magic number: lat90AtStart = body.GetSurfaceNVector(90' 0);
Magic Number,MuMech,ReferenceFrame,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,ToAbsolute,The following statement contains a magic number: longitude -= 360 * (UT - epoch) / referenceBody.rotationPeriod;
Magic Number,MuMech,ReferenceFrame,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ReentrySimulation.cs,WorldVelocityAtCurrentTime,The following statement contains a magic number: double unrotatedLongitude = MuUtils.ClampDegrees360(absolute.longitude - 360 * (now - absolute.UT) / referenceBody.rotationPeriod);
Magic Number,MuMech,MechJebModuleScriptAction,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptAction.cs,WindowGUI,The following statement contains a magic number: GUILayout.Label (scriptModule.imageRed' new GUILayoutOption[] { GUILayout.Width(20)' GUILayout.Height(20) });
Magic Number,MuMech,MechJebModuleScriptAction,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptAction.cs,WindowGUI,The following statement contains a magic number: GUILayout.Label (scriptModule.imageRed' new GUILayoutOption[] { GUILayout.Width(20)' GUILayout.Height(20) });
Magic Number,MuMech,MechJebModuleScriptAction,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptAction.cs,WindowGUI,The following statement contains a magic number: GUILayout.Button("✖"' new GUILayoutOption[] { GUILayout.Width(20)' GUILayout.Height(20) })
Magic Number,MuMech,MechJebModuleScriptAction,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptAction.cs,WindowGUI,The following statement contains a magic number: GUILayout.Button("✖"' new GUILayoutOption[] { GUILayout.Width(20)' GUILayout.Height(20) })
Magic Number,MuMech,MechJebModuleScriptAction,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptAction.cs,WindowGUI,The following statement contains a magic number: GUILayout.Button("↑"' new GUILayoutOption[] { GUILayout.Width(20)' GUILayout.Height(20) })
Magic Number,MuMech,MechJebModuleScriptAction,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptAction.cs,WindowGUI,The following statement contains a magic number: GUILayout.Button("↑"' new GUILayoutOption[] { GUILayout.Width(20)' GUILayout.Height(20) })
Magic Number,MuMech,MechJebModuleScriptActionAscent,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionAscent.cs,WindowGUI,The following statement contains a magic number: switch (autopilot.ascentPathIdxPublic)              {                  case ascentType.CLASSIC:                      GUILayout.Label("CLASSIC ASCENT to " + (autopilot.desiredOrbitAltitude / 1000.0) + "km");                      break;                  case ascentType.GRAVITYTURN:                      GUILayout.Label("GravityTurn™ ASCENT to " + (autopilot.desiredOrbitAltitude / 1000.0) + "km");                      break;                  case ascentType.PVG:                      GUILayout.Label("PVG ASCENT to " + (autopilot.desiredOrbitAltitude / 1000.0) + "x" + ((ascentPath as MechJebModuleAscentPVG).desiredApoapsis / 1000.0) + "km");                      break;              }
Magic Number,MuMech,MechJebModuleScriptActionAscent,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionAscent.cs,WindowGUI,The following statement contains a magic number: switch (autopilot.ascentPathIdxPublic)              {                  case ascentType.CLASSIC:                      GUILayout.Label("CLASSIC ASCENT to " + (autopilot.desiredOrbitAltitude / 1000.0) + "km");                      break;                  case ascentType.GRAVITYTURN:                      GUILayout.Label("GravityTurn™ ASCENT to " + (autopilot.desiredOrbitAltitude / 1000.0) + "km");                      break;                  case ascentType.PVG:                      GUILayout.Label("PVG ASCENT to " + (autopilot.desiredOrbitAltitude / 1000.0) + "x" + ((ascentPath as MechJebModuleAscentPVG).desiredApoapsis / 1000.0) + "km");                      break;              }
Magic Number,MuMech,MechJebModuleScriptActionAscent,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionAscent.cs,WindowGUI,The following statement contains a magic number: switch (autopilot.ascentPathIdxPublic)              {                  case ascentType.CLASSIC:                      GUILayout.Label("CLASSIC ASCENT to " + (autopilot.desiredOrbitAltitude / 1000.0) + "km");                      break;                  case ascentType.GRAVITYTURN:                      GUILayout.Label("GravityTurn™ ASCENT to " + (autopilot.desiredOrbitAltitude / 1000.0) + "km");                      break;                  case ascentType.PVG:                      GUILayout.Label("PVG ASCENT to " + (autopilot.desiredOrbitAltitude / 1000.0) + "x" + ((ascentPath as MechJebModuleAscentPVG).desiredApoapsis / 1000.0) + "km");                      break;              }
Magic Number,MuMech,MechJebModuleScriptActionAscent,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionAscent.cs,WindowGUI,The following statement contains a magic number: switch (autopilot.ascentPathIdxPublic)              {                  case ascentType.CLASSIC:                      GUILayout.Label("CLASSIC ASCENT to " + (autopilot.desiredOrbitAltitude / 1000.0) + "km");                      break;                  case ascentType.GRAVITYTURN:                      GUILayout.Label("GravityTurn™ ASCENT to " + (autopilot.desiredOrbitAltitude / 1000.0) + "km");                      break;                  case ascentType.PVG:                      GUILayout.Label("PVG ASCENT to " + (autopilot.desiredOrbitAltitude / 1000.0) + "x" + ((ascentPath as MechJebModuleAscentPVG).desiredApoapsis / 1000.0) + "km");                      break;              }
Magic Number,MuMech,MechJebModuleScriptActionFor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionFor.cs,MechJebModuleScriptActionFor,The following statement contains a magic number: Texture2D background = new Texture2D(16' 16' TextureFormat.RGBA32' false);
Magic Number,MuMech,MechJebModuleScriptActionFor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionFor.cs,MechJebModuleScriptActionFor,The following statement contains a magic number: Texture2D background = new Texture2D(16' 16' TextureFormat.RGBA32' false);
Magic Number,MuMech,MechJebModuleScriptActionFor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionFor.cs,MechJebModuleScriptActionFor,The following statement contains a magic number: x == 0 || x == 15 || y == 0 || y == 15
Magic Number,MuMech,MechJebModuleScriptActionFor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionFor.cs,MechJebModuleScriptActionFor,The following statement contains a magic number: x == 0 || x == 15 || y == 0 || y == 15
Magic Number,MuMech,MechJebModuleScriptActionFor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionFor.cs,WindowGUI,The following statement contains a magic number: GUILayout.Space(50);
Magic Number,MuMech,MechJebModuleScriptActionIf,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionIf.cs,MechJebModuleScriptActionIf,The following statement contains a magic number: Texture2D backgroundY = new Texture2D(16' 16' TextureFormat.RGBA32' false);
Magic Number,MuMech,MechJebModuleScriptActionIf,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionIf.cs,MechJebModuleScriptActionIf,The following statement contains a magic number: Texture2D backgroundY = new Texture2D(16' 16' TextureFormat.RGBA32' false);
Magic Number,MuMech,MechJebModuleScriptActionIf,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionIf.cs,MechJebModuleScriptActionIf,The following statement contains a magic number: Texture2D backgroundG = new Texture2D(16' 16' TextureFormat.RGBA32' false);
Magic Number,MuMech,MechJebModuleScriptActionIf,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionIf.cs,MechJebModuleScriptActionIf,The following statement contains a magic number: Texture2D backgroundG = new Texture2D(16' 16' TextureFormat.RGBA32' false);
Magic Number,MuMech,MechJebModuleScriptActionIf,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionIf.cs,MechJebModuleScriptActionIf,The following statement contains a magic number: Texture2D backgroundR = new Texture2D(16' 16' TextureFormat.RGBA32' false);
Magic Number,MuMech,MechJebModuleScriptActionIf,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionIf.cs,MechJebModuleScriptActionIf,The following statement contains a magic number: Texture2D backgroundR = new Texture2D(16' 16' TextureFormat.RGBA32' false);
Magic Number,MuMech,MechJebModuleScriptActionIf,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionIf.cs,MechJebModuleScriptActionIf,The following statement contains a magic number: x == 0 || x == 15 || y == 0 || y == 15
Magic Number,MuMech,MechJebModuleScriptActionIf,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionIf.cs,MechJebModuleScriptActionIf,The following statement contains a magic number: x == 0 || x == 15 || y == 0 || y == 15
Magic Number,MuMech,MechJebModuleScriptActionIf,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionIf.cs,WindowGUI,The following statement contains a magic number: GUILayout.Space(50);
Magic Number,MuMech,MechJebModuleScriptActionIf,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionIf.cs,WindowGUI,The following statement contains a magic number: GUILayout.Space(50);
Magic Number,MuMech,MechJebModuleScriptActionIf,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionIf.cs,WindowGUI,The following statement contains a magic number: GUILayout.Space(50);
Magic Number,MuMech,MechJebModuleScriptActionKos,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionKos.cs,WindowGUI,The following statement contains a magic number: command = GUILayout.TextField(command' GUILayout.Width(120)' GUILayout.ExpandWidth(true));
Magic Number,MuMech,MechJebModuleScriptActionLoadScript,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionLoadScript.cs,MechJebModuleScriptActionLoadScript,The following statement contains a magic number: i <= 4
Magic Number,MuMech,MechJebModuleScriptActionParallel,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionParallel.cs,MechJebModuleScriptActionParallel,The following statement contains a magic number: Texture2D backgroundB = new Texture2D(16' 16' TextureFormat.RGBA32' false);
Magic Number,MuMech,MechJebModuleScriptActionParallel,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionParallel.cs,MechJebModuleScriptActionParallel,The following statement contains a magic number: Texture2D backgroundB = new Texture2D(16' 16' TextureFormat.RGBA32' false);
Magic Number,MuMech,MechJebModuleScriptActionParallel,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionParallel.cs,MechJebModuleScriptActionParallel,The following statement contains a magic number: Texture2D backgroundY = new Texture2D(16' 16' TextureFormat.RGBA32' false);
Magic Number,MuMech,MechJebModuleScriptActionParallel,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionParallel.cs,MechJebModuleScriptActionParallel,The following statement contains a magic number: Texture2D backgroundY = new Texture2D(16' 16' TextureFormat.RGBA32' false);
Magic Number,MuMech,MechJebModuleScriptActionParallel,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionParallel.cs,MechJebModuleScriptActionParallel,The following statement contains a magic number: x == 0 || x == 15 || y == 0 || y == 15
Magic Number,MuMech,MechJebModuleScriptActionParallel,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionParallel.cs,MechJebModuleScriptActionParallel,The following statement contains a magic number: x == 0 || x == 15 || y == 0 || y == 15
Magic Number,MuMech,MechJebModuleScriptActionParallel,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionParallel.cs,notifyEndActionsList,The following statement contains a magic number: countEndList == 2
Magic Number,MuMech,MechJebModuleScriptActionRendezvous,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionRendezvous.cs,activateAction,The following statement contains a magic number: const double leadTime = 30;
Magic Number,MuMech,MechJebModuleScriptActionRendezvous,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionRendezvous.cs,WindowGUI,The following statement contains a magic number: phasingOrbitAltitude.text = GUILayout.TextField(phasingOrbitAltitude.text' GUILayout.Width(70));
Magic Number,MuMech,MechJebModuleScriptActionRendezvousAP,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionRendezvousAP.cs,WindowGUI,The following statement contains a magic number: autopilot.maxPhasingOrbits < 5
Magic Number,MuMech,MechJebModuleScriptActionSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionSmartASS.cs,afterOnFixedUpdate,The following statement contains a magic number: core.vesselState.angularVelocity.magnitude < 0.002
Magic Number,MuMech,MechJebModuleScriptActionSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionSmartASS.cs,WindowGUI,The following statement contains a magic number: GUILayout.BeginHorizontal(GUILayout.Width(150));
Magic Number,MuMech,MechJebModuleScriptActionSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionSmartASS.cs,WindowGUI,The following statement contains a magic number: rol.text = GUILayout.TextField(rol.text' GUILayout.Width(37));
Magic Number,MuMech,MechJebModuleScriptActionThrottle,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionThrottle.cs,activateAction,The following statement contains a magic number: float throttle = (float)burnIndex*0.1f;
Magic Number,MuMech,MechJebModuleScriptActionTimer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionTimer.cs,WindowGUI,The following statement contains a magic number: GuiUtils.SimpleTextBox("Wait Time"' time' "s"' 30);
Magic Number,MuMech,MechJebModuleScriptActionTolerance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionTolerance.cs,WindowGUI,The following statement contains a magic number: tolerance.text = GUILayout.TextField(tolerance.text' GUILayout.Width(35)' GUILayout.ExpandWidth(false));
Magic Number,MuMech,MechJebModuleScriptActionTolerance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionTolerance.cs,WindowGUI,The following statement contains a magic number: tolerance.val += 0.1;
Magic Number,MuMech,MechJebModuleScriptActionTolerance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionTolerance.cs,WindowGUI,The following statement contains a magic number: tolerance.val -= tolerance.val > 0.1 ? 0.1 : 0.0;
Magic Number,MuMech,MechJebModuleScriptActionTolerance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionTolerance.cs,WindowGUI,The following statement contains a magic number: tolerance.val -= tolerance.val > 0.1 ? 0.1 : 0.0;
Magic Number,MuMech,MechJebModuleScriptActionTolerance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionTolerance.cs,WindowGUI,The following statement contains a magic number: tolerance.val = 0.1;
Magic Number,MuMech,MechJebModuleScriptActionTolerance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionTolerance.cs,WindowGUI,The following statement contains a magic number: leadTime.text = GUILayout.TextField(leadTime.text' GUILayout.Width(35)' GUILayout.ExpandWidth(false));
Magic Number,MuMech,MechJebModuleScriptActionWarp,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionWarp.cs,activateAction,The following statement contains a magic number: switch (warpTarget)  			{  				case WarpTarget.Periapsis:  					targetUT = orbit.NextPeriapsisTime(vesselState.time);  					break;    				case WarpTarget.Apoapsis:  					if (orbit.eccentricity < 1) targetUT = orbit.NextApoapsisTime(vesselState.time);  					break;    				case WarpTarget.SoI:  					if (orbit.patchEndTransition != Orbit.PatchTransitionType.FINAL) targetUT = orbit.EndUT;  					break;    				case WarpTarget.Node:  					if (vessel.patchedConicsUnlocked() && vessel.patchedConicSolver.maneuverNodes.Any()) targetUT = vessel.patchedConicSolver.maneuverNodes[0].UT;  					break;    				case WarpTarget.Time:  					targetUT = vesselState.time + timeOffset;  					break;    				case WarpTarget.PhaseAngleT:  					if (core.target.NormalTargetExists)  					{  						Orbit reference;  						if (core.target.TargetOrbit.referenceBody == orbit.referenceBody)  							reference = orbit; // we orbit arround the same body  						else  							reference = orbit.referenceBody.orbit;  						// From Kerbal Alarm Clock  						double angleChangePerSec = (360 / core.target.TargetOrbit.period) - (360 / reference.period);  						double currentAngle = reference.PhaseAngle(core.target.TargetOrbit' vesselState.time);  						double angleDigff = currentAngle - phaseAngle;  						if (angleDigff > 0 && angleChangePerSec > 0)  							angleDigff -= 360;  						if (angleDigff < 0 && angleChangePerSec < 0)  							angleDigff += 360;  						double TimeToTarget = Math.Floor(Math.Abs(angleDigff / angleChangePerSec));  						targetUT = vesselState.time + TimeToTarget;  					}  					break;    				case WarpTarget.AtmosphericEntry:  					try  					{  						targetUT = OrbitExtensions.NextTimeOfRadius(vessel.orbit' vesselState.time' vesselState.mainBody.Radius + vesselState.mainBody.RealMaxAtmosphereAltitude());  					}  					catch  					{  						warping = false;  					}  					break;    				case WarpTarget.SuicideBurn:  					try  					{  						targetUT = OrbitExtensions.SuicideBurnCountdown(orbit' vesselState' vessel) + vesselState.time;  					}  					catch  					{  						warping = false;  					}  					break;    				default:  					targetUT = vesselState.time;  					break;  			}
Magic Number,MuMech,MechJebModuleScriptActionWarp,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionWarp.cs,activateAction,The following statement contains a magic number: switch (warpTarget)  			{  				case WarpTarget.Periapsis:  					targetUT = orbit.NextPeriapsisTime(vesselState.time);  					break;    				case WarpTarget.Apoapsis:  					if (orbit.eccentricity < 1) targetUT = orbit.NextApoapsisTime(vesselState.time);  					break;    				case WarpTarget.SoI:  					if (orbit.patchEndTransition != Orbit.PatchTransitionType.FINAL) targetUT = orbit.EndUT;  					break;    				case WarpTarget.Node:  					if (vessel.patchedConicsUnlocked() && vessel.patchedConicSolver.maneuverNodes.Any()) targetUT = vessel.patchedConicSolver.maneuverNodes[0].UT;  					break;    				case WarpTarget.Time:  					targetUT = vesselState.time + timeOffset;  					break;    				case WarpTarget.PhaseAngleT:  					if (core.target.NormalTargetExists)  					{  						Orbit reference;  						if (core.target.TargetOrbit.referenceBody == orbit.referenceBody)  							reference = orbit; // we orbit arround the same body  						else  							reference = orbit.referenceBody.orbit;  						// From Kerbal Alarm Clock  						double angleChangePerSec = (360 / core.target.TargetOrbit.period) - (360 / reference.period);  						double currentAngle = reference.PhaseAngle(core.target.TargetOrbit' vesselState.time);  						double angleDigff = currentAngle - phaseAngle;  						if (angleDigff > 0 && angleChangePerSec > 0)  							angleDigff -= 360;  						if (angleDigff < 0 && angleChangePerSec < 0)  							angleDigff += 360;  						double TimeToTarget = Math.Floor(Math.Abs(angleDigff / angleChangePerSec));  						targetUT = vesselState.time + TimeToTarget;  					}  					break;    				case WarpTarget.AtmosphericEntry:  					try  					{  						targetUT = OrbitExtensions.NextTimeOfRadius(vessel.orbit' vesselState.time' vesselState.mainBody.Radius + vesselState.mainBody.RealMaxAtmosphereAltitude());  					}  					catch  					{  						warping = false;  					}  					break;    				case WarpTarget.SuicideBurn:  					try  					{  						targetUT = OrbitExtensions.SuicideBurnCountdown(orbit' vesselState' vessel) + vesselState.time;  					}  					catch  					{  						warping = false;  					}  					break;    				default:  					targetUT = vesselState.time;  					break;  			}
Magic Number,MuMech,MechJebModuleScriptActionWarp,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionWarp.cs,activateAction,The following statement contains a magic number: switch (warpTarget)  			{  				case WarpTarget.Periapsis:  					targetUT = orbit.NextPeriapsisTime(vesselState.time);  					break;    				case WarpTarget.Apoapsis:  					if (orbit.eccentricity < 1) targetUT = orbit.NextApoapsisTime(vesselState.time);  					break;    				case WarpTarget.SoI:  					if (orbit.patchEndTransition != Orbit.PatchTransitionType.FINAL) targetUT = orbit.EndUT;  					break;    				case WarpTarget.Node:  					if (vessel.patchedConicsUnlocked() && vessel.patchedConicSolver.maneuverNodes.Any()) targetUT = vessel.patchedConicSolver.maneuverNodes[0].UT;  					break;    				case WarpTarget.Time:  					targetUT = vesselState.time + timeOffset;  					break;    				case WarpTarget.PhaseAngleT:  					if (core.target.NormalTargetExists)  					{  						Orbit reference;  						if (core.target.TargetOrbit.referenceBody == orbit.referenceBody)  							reference = orbit; // we orbit arround the same body  						else  							reference = orbit.referenceBody.orbit;  						// From Kerbal Alarm Clock  						double angleChangePerSec = (360 / core.target.TargetOrbit.period) - (360 / reference.period);  						double currentAngle = reference.PhaseAngle(core.target.TargetOrbit' vesselState.time);  						double angleDigff = currentAngle - phaseAngle;  						if (angleDigff > 0 && angleChangePerSec > 0)  							angleDigff -= 360;  						if (angleDigff < 0 && angleChangePerSec < 0)  							angleDigff += 360;  						double TimeToTarget = Math.Floor(Math.Abs(angleDigff / angleChangePerSec));  						targetUT = vesselState.time + TimeToTarget;  					}  					break;    				case WarpTarget.AtmosphericEntry:  					try  					{  						targetUT = OrbitExtensions.NextTimeOfRadius(vessel.orbit' vesselState.time' vesselState.mainBody.Radius + vesselState.mainBody.RealMaxAtmosphereAltitude());  					}  					catch  					{  						warping = false;  					}  					break;    				case WarpTarget.SuicideBurn:  					try  					{  						targetUT = OrbitExtensions.SuicideBurnCountdown(orbit' vesselState' vessel) + vesselState.time;  					}  					catch  					{  						warping = false;  					}  					break;    				default:  					targetUT = vesselState.time;  					break;  			}
Magic Number,MuMech,MechJebModuleScriptActionWarp,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionWarp.cs,activateAction,The following statement contains a magic number: switch (warpTarget)  			{  				case WarpTarget.Periapsis:  					targetUT = orbit.NextPeriapsisTime(vesselState.time);  					break;    				case WarpTarget.Apoapsis:  					if (orbit.eccentricity < 1) targetUT = orbit.NextApoapsisTime(vesselState.time);  					break;    				case WarpTarget.SoI:  					if (orbit.patchEndTransition != Orbit.PatchTransitionType.FINAL) targetUT = orbit.EndUT;  					break;    				case WarpTarget.Node:  					if (vessel.patchedConicsUnlocked() && vessel.patchedConicSolver.maneuverNodes.Any()) targetUT = vessel.patchedConicSolver.maneuverNodes[0].UT;  					break;    				case WarpTarget.Time:  					targetUT = vesselState.time + timeOffset;  					break;    				case WarpTarget.PhaseAngleT:  					if (core.target.NormalTargetExists)  					{  						Orbit reference;  						if (core.target.TargetOrbit.referenceBody == orbit.referenceBody)  							reference = orbit; // we orbit arround the same body  						else  							reference = orbit.referenceBody.orbit;  						// From Kerbal Alarm Clock  						double angleChangePerSec = (360 / core.target.TargetOrbit.period) - (360 / reference.period);  						double currentAngle = reference.PhaseAngle(core.target.TargetOrbit' vesselState.time);  						double angleDigff = currentAngle - phaseAngle;  						if (angleDigff > 0 && angleChangePerSec > 0)  							angleDigff -= 360;  						if (angleDigff < 0 && angleChangePerSec < 0)  							angleDigff += 360;  						double TimeToTarget = Math.Floor(Math.Abs(angleDigff / angleChangePerSec));  						targetUT = vesselState.time + TimeToTarget;  					}  					break;    				case WarpTarget.AtmosphericEntry:  					try  					{  						targetUT = OrbitExtensions.NextTimeOfRadius(vessel.orbit' vesselState.time' vesselState.mainBody.Radius + vesselState.mainBody.RealMaxAtmosphereAltitude());  					}  					catch  					{  						warping = false;  					}  					break;    				case WarpTarget.SuicideBurn:  					try  					{  						targetUT = OrbitExtensions.SuicideBurnCountdown(orbit' vesselState' vessel) + vesselState.time;  					}  					catch  					{  						warping = false;  					}  					break;    				default:  					targetUT = vesselState.time;  					break;  			}
Magic Number,MuMech,MechJebModuleScriptActionWarp,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionWarp.cs,WindowGUI,The following statement contains a magic number: timeOffset.text = GUILayout.TextField(timeOffset.text' GUILayout.Width(100));
Magic Number,MuMech,MechJebModuleScriptActionWhile,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionWhile.cs,MechJebModuleScriptActionWhile,The following statement contains a magic number: Texture2D background = new Texture2D(16' 16' TextureFormat.RGBA32' false);
Magic Number,MuMech,MechJebModuleScriptActionWhile,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionWhile.cs,MechJebModuleScriptActionWhile,The following statement contains a magic number: Texture2D background = new Texture2D(16' 16' TextureFormat.RGBA32' false);
Magic Number,MuMech,MechJebModuleScriptActionWhile,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionWhile.cs,MechJebModuleScriptActionWhile,The following statement contains a magic number: x == 0 || x == 15 || y == 0 || y == 15
Magic Number,MuMech,MechJebModuleScriptActionWhile,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionWhile.cs,MechJebModuleScriptActionWhile,The following statement contains a magic number: x == 0 || x == 15 || y == 0 || y == 15
Magic Number,MuMech,MechJebModuleScriptActionWhile,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionWhile.cs,WindowGUI,The following statement contains a magic number: GUILayout.Space(50);
Magic Number,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,populateActionNames,The following statement contains a magic number: actionNames[2] = actionsNamesList.ToArray();
Magic Number,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,populateActionNames,The following statement contains a magic number: actionNames[3] = actionsNamesList.ToArray();
Magic Number,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,populateActionNames,The following statement contains a magic number: actionNames[4] = actionsNamesList.ToArray();
Magic Number,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,populateActionNames,The following statement contains a magic number: actionNames[5] = actionsNamesList.ToArray();
Magic Number,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,populateActionNames,The following statement contains a magic number: actionNames[6] = actionsNamesList.ToArray();
Magic Number,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,populateActionNames,The following statement contains a magic number: actionNames[7] = actionsNamesList.ToArray();
Magic Number,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,populateActionNames,The following statement contains a magic number: actionNames[8] = actionsNamesList.ToArray();
Magic Number,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,populateActionNames,The following statement contains a magic number: actionNames[9] = actionsNamesList.ToArray();
Magic Number,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,populateActionNames,The following statement contains a magic number: depth < 2
Magic Number,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,populateActionNames,The following statement contains a magic number: depth < 4
Magic Number,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,populateActionNames,The following statement contains a magic number: actionNames[10] = actionsNamesList.ToArray();
Magic Number,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,refreshActionNamesPlugins,The following statement contains a magic number: actionNames[11] = actionsNamesList.ToArray();
Magic Number,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,actionsAddWindowGui,The following statement contains a magic number: GUILayout.Space(20);
Magic Number,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,actionsAddWindowGui,The following statement contains a magic number: selectedGroupIndex == 10 && depth >= 4
Magic Number,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,actionsAddWindowGui,The following statement contains a magic number: selectedGroupIndex == 10 && depth >= 4
Magic Number,MuMech,MechJebModuleScriptActionsList,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionsList.cs,checkMaxDepth,The following statement contains a magic number: this.getDepth() >= 4
Magic Number,MuMech,MechJebModuleScriptCondition,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptCondition.cs,WindowGUI,The following statement contains a magic number: GuiUtils.SimpleTextBox(""' value0' ""' 100);
Magic Number,MuMech,MechJebModuleScriptCondition,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptCondition.cs,WindowGUI,The following statement contains a magic number: GuiUtils.SimpleTextBox("and"' value1' ""' 100);
Magic Number,MuMech,MechJebModuleScriptCondition,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptCondition.cs,WindowGUI,The following statement contains a magic number: selectedModifier == 3
Magic Number,MuMech,MechJebModuleScriptCondition,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptCondition.cs,checkCondition,The following statement contains a magic number: value0ref *= 1000;
Magic Number,MuMech,MechJebModuleScriptCondition,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptCondition.cs,checkCondition,The following statement contains a magic number: value1ref *= 1000;
Magic Number,MuMech,MechJebModuleScriptCondition,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptCondition.cs,TargetTimeToClosestApproach,The following statement contains a magic number: core.target.Target != null && core.vesselState.altitudeTrue < 1000.0
Magic Number,MuMech,MechJebModuleScriptCondition,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptCondition.cs,TargetTimeToClosestApproach,The following statement contains a magic number: double ang = Math.Acos(((a * a + b * b) - c * c) / (double)(2f * a * b));
Magic Number,MuMech,MechJebModuleScriptCondition,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptCondition.cs,TargetTimeToClosestApproach,The following statement contains a magic number: core.vesselState.altitudeTrue < 1000.0
Magic Number,MuMech,MechJebModuleScriptCondition,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptCondition.cs,TargetClosestApproachDistance,The following statement contains a magic number: core.vesselState.altitudeTrue < 1000.0
Magic Number,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The following statement contains a magic number: double tolerance = 1.0e-12;
Magic Number,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The following statement contains a magic number: int  imax = 50;
Magic Number,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The following statement contains a magic number: double beta = 2.0 * (mu / r0) - vi.sqrMagnitude;
Magic Number,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The following statement contains a magic number: orbits = beta * tau - 2 * n0;
Magic Number,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The following statement contains a magic number: orbits = Math.Floor(orbits / 2);
Magic Number,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The following statement contains a magic number: d = 3;
Magic Number,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The following statement contains a magic number: k = -5;
Magic Number,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The following statement contains a magic number: l = l + 2;
Magic Number,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The following statement contains a magic number: d = d + 4 * l;
Magic Number,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The following statement contains a magic number: h0 = 1 - 2 * q;
Magic Number,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The following statement contains a magic number: h1 = 2 * u * (1 - q);
Magic Number,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The following statement contains a magic number: u0 = 2 * h0 * h0 - 1;
Magic Number,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The following statement contains a magic number: u1 = 2 * h0 * h1;
Magic Number,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The following statement contains a magic number: u2 = 2 * h1 * h1;
Magic Number,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The following statement contains a magic number: u3 = 2 * h1 * u2 * gcf / 3;
Magic Number,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The following statement contains a magic number: u3 = 2 * h1 * u2 * gcf / 3;
Magic Number,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The following statement contains a magic number: u3 = u3 + 2 * Math.PI * orbits / (beta * Math.Sqrt(beta));
Magic Number,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The following statement contains a magic number: slope = 4 * r1 / (1 + beta * u * u);
Magic Number,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The following statement contains a magic number: u = (umin + umax) / 2;
Magic Number,MuMech,Shepperd,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Shepperd.cs,Solve,The following statement contains a magic number: i < 3
Magic Number,MuMech,Vector6,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Vector6.cs,GetMagnitude,The following statement contains a magic number: sqrMagnitude += Math.Pow(projection * this[d]' 2);
Magic Number,MuMech,VesselExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselExtensions.cs,PlaceManeuverNode,The following statement contains a magic number: i < 3
Magic Number,MuMech,VesselExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselExtensions.cs,GetBoundingBox,The following statement contains a magic number: box.center = new Vector3d((maxBounds.x + minBounds.x) / 2' (maxBounds.y + minBounds.y) / 2' (maxBounds.z + minBounds.z) / 2);
Magic Number,MuMech,VesselExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselExtensions.cs,GetBoundingBox,The following statement contains a magic number: box.center = new Vector3d((maxBounds.x + minBounds.x) / 2' (maxBounds.y + minBounds.y) / 2' (maxBounds.z + minBounds.z) / 2);
Magic Number,MuMech,VesselExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselExtensions.cs,GetBoundingBox,The following statement contains a magic number: box.center = new Vector3d((maxBounds.x + minBounds.x) / 2' (maxBounds.y + minBounds.y) / 2' (maxBounds.z + minBounds.z) / 2);
Magic Number,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The following statement contains a magic number: rotationVesselSurface = Quaternion.Inverse(Quaternion.Euler(90' 0' 0) * Quaternion.Inverse(vessel.GetTransform().rotation) * rotationSurface);
Magic Number,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The following statement contains a magic number: AoA.value = double.IsNaN(tmpAoA) || speedSurface.value < 0.01 ? 0 : tmpAoA;
Magic Number,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The following statement contains a magic number: AoS.value = double.IsNaN(tmpAoS) || speedSurface.value < 0.01 ? 0 : tmpAoS;
Magic Number,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The following statement contains a magic number: displacementAngle.value = double.IsNaN(tempAoD) || speedSurface.value < 0.01 ? 0 : tempAoD;
Magic Number,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The following statement contains a magic number: vesselPitch.value = (rotationVesselSurface.eulerAngles.x > 180) ? (360.0 - rotationVesselSurface.eulerAngles.x) : -rotationVesselSurface.eulerAngles.x;
Magic Number,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The following statement contains a magic number: vesselPitch.value = (rotationVesselSurface.eulerAngles.x > 180) ? (360.0 - rotationVesselSurface.eulerAngles.x) : -rotationVesselSurface.eulerAngles.x;
Magic Number,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The following statement contains a magic number: vesselRoll.value = (rotationVesselSurface.eulerAngles.z > 180) ? (rotationVesselSurface.eulerAngles.z - 360.0) : rotationVesselSurface.eulerAngles.z;
Magic Number,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The following statement contains a magic number: vesselRoll.value = (rotationVesselSurface.eulerAngles.z > 180) ? (rotationVesselSurface.eulerAngles.z - 360.0) : rotationVesselSurface.eulerAngles.z;
Magic Number,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The following statement contains a magic number: atmosphericDensityGrams = atmosphericDensity * 1000;
Magic Number,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The following statement contains a magic number: dynamicPressure = FARVesselDynPres(vessel) * 1000;
Magic Number,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The following statement contains a magic number: freeMolecularAerothermalFlux = 0.5 * atmosphericDensity * speedSurface * speedSurface * speedSurface;
Magic Number,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The following statement contains a magic number: Vector3d plUp = Vector3d.Cross(vessel.mainBody.getPositionAtUT(Planetarium.GetUniversalTime()) - vessel.mainBody.referenceBody.getPositionAtUT(Planetarium.GetUniversalTime())' vessel.mainBody.getPositionAtUT(Planetarium.GetUniversalTime() + vessel.mainBody.orbit.period / 4) - vessel.mainBody.referenceBody.getPositionAtUT(Planetarium.GetUniversalTime() + vessel.mainBody.orbit.period / 4)).normalized;
Magic Number,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The following statement contains a magic number: Vector3d plUp = Vector3d.Cross(vessel.mainBody.getPositionAtUT(Planetarium.GetUniversalTime()) - vessel.mainBody.referenceBody.getPositionAtUT(Planetarium.GetUniversalTime())' vessel.mainBody.getPositionAtUT(Planetarium.GetUniversalTime() + vessel.mainBody.orbit.period / 4) - vessel.mainBody.referenceBody.getPositionAtUT(Planetarium.GetUniversalTime() + vessel.mainBody.orbit.period / 4)).normalized;
Magic Number,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The following statement contains a magic number: angleToPrograde = MuUtils.ClampDegrees360((((vessel.orbit.inclination > 90) || (vessel.orbit.inclination < -90)) ? 1 : -1) * ((Vector3)up).AngleInPlane(plUp' delta));
Magic Number,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,UpdateBasicInfo,The following statement contains a magic number: angleToPrograde = MuUtils.ClampDegrees360((((vessel.orbit.inclination > 90) || (vessel.orbit.inclination < -90)) ? 1 : -1) * ((Vector3)up).AngleInPlane(plUp' delta));
Magic Number,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,AnalyzeParts,The following statement contains a magic number: p.rb != null && partLiftScalar > 0.01
Magic Number,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,TerminalVelocityStockKSP,The following statement contains a magic number: return Math.Sqrt((2000 * mass * localg) / (areaDrag * vesselRef.atmDensity));
Magic Number,MuMech,VesselState,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,ComputeVesselBottomAltitude,The following statement contains a magic number: float partRadius = Mathf.Max(extents[0]' Mathf.Max(extents[1]' extents[2]));
Magic Number,MuMech,EngineInfo,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,AddNewEngine,The following statement contains a magic number: float thrustLimiter = e.thrustPercentage / 100f;
Magic Number,MuMech,ResourceInfo,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,Init,The following statement contains a magic number: double density = definition.density * 1000;
Magic Number,MuMech,ResourceInfo,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\VesselState.cs,massProvided,The following statement contains a magic number: return airmass * 1000;
Magic Number,Landing,CoastToDeceleration,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CoastToDeceleration.cs,Drive,The following statement contains a magic number: deltaV.magnitude > 3
Magic Number,Landing,CoastToDeceleration,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CoastToDeceleration.cs,OnFixedUpdate,The following statement contains a magic number: vesselState.speedSurface > 0.9 * maxAllowedSpeed
Magic Number,Landing,CoastToDeceleration,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CoastToDeceleration.cs,OnFixedUpdate,The following statement contains a magic number: !vesselState.parachuteDeployed && vesselState.drag <= 0.1
Magic Number,Landing,CoastToDeceleration,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CoastToDeceleration.cs,OnFixedUpdate,The following statement contains a magic number: currentError > 1000
Magic Number,Landing,CoastToDeceleration,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CoastToDeceleration.cs,OnFixedUpdate,The following statement contains a magic number: vesselState.altitudeASL < core.landing.DecelerationEndAltitude() + 5
Magic Number,Landing,CoastToDeceleration,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CoastToDeceleration.cs,OnFixedUpdate,The following statement contains a magic number: core.attitude.attitudeAngleFromTarget() > 5
Magic Number,Landing,CoastToDeceleration,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CoastToDeceleration.cs,OnFixedUpdate,The following statement contains a magic number: vesselState.drag < 0.01
Magic Number,Landing,CoastToDeceleration,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CoastToDeceleration.cs,OnFixedUpdate,The following statement contains a magic number: double velocityGuess = Math.Max(Math.Abs(vesselState.speedVertical)' vesselState.localg * 5);
Magic Number,Landing,CoastToDeceleration,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CoastToDeceleration.cs,OnFixedUpdate,The following statement contains a magic number: core.warp.WarpRegularAtRate((float)(vesselState.altitudeASL / (10 * velocityGuess)));
Magic Number,Landing,CourseCorrection,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CourseCorrection.cs,Drive,The following statement contains a magic number: currentError < 150
Magic Number,Landing,CourseCorrection,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CourseCorrection.cs,Drive,The following statement contains a magic number: vesselState.altitudeASL < core.landing.DecelerationEndAltitude() + 5
Magic Number,Landing,CourseCorrection,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CourseCorrection.cs,Drive,The following statement contains a magic number: vesselState.drag > 0.1
Magic Number,Landing,CourseCorrection,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CourseCorrection.cs,Drive,The following statement contains a magic number: core.attitude.attitudeAngleFromTarget() < 2
Magic Number,Landing,CourseCorrection,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\CourseCorrection.cs,Drive,The following statement contains a magic number: const double timeConstant = 2.0;
Magic Number,Landing,DecelerationBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DecelerationBurn.cs,OnFixedUpdate,The following statement contains a magic number: vesselState.altitudeASL < core.landing.DecelerationEndAltitude() + 5
Magic Number,Landing,DecelerationBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DecelerationBurn.cs,OnFixedUpdate,The following statement contains a magic number: bool warpReady = core.attitude.attitudeAngleFromTarget() < 5;
Magic Number,Landing,DecelerationBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DecelerationBurn.cs,OnFixedUpdate,The following statement contains a magic number: core.warp.WarpToUT(decelerationStartTime - 5);
Magic Number,Landing,DecelerationBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DecelerationBurn.cs,OnFixedUpdate,The following statement contains a magic number: decelerationStartTime - vesselState.time > 5
Magic Number,Landing,DecelerationBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DecelerationBurn.cs,OnFixedUpdate,The following statement contains a magic number: double correctionAngle = courseCorrection.magnitude / (2.0 * vesselState.limitedMaxThrustAccel);
Magic Number,Landing,DecelerationBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DecelerationBurn.cs,OnFixedUpdate,The following statement contains a magic number: correctionAngle = Math.Min(0.1' correctionAngle);
Magic Number,Landing,DecelerationBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DecelerationBurn.cs,OnFixedUpdate,The following statement contains a magic number: Vector3d.Dot(vesselState.surfaceVelocity' vesselState.up) > 0                      || Vector3d.Dot(vesselState.forward' desiredThrustVector) < 0.75
Magic Number,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,Drive,The following statement contains a magic number: deorbitBurnTriggered && core.attitude.attitudeAngleFromTarget() < 5
Magic Number,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The following statement contains a magic number: Vector3d horizontalDV = OrbitalManeuverCalculator.DeltaVToChangePeriapsis(orbit' vesselState.time' 0.9 * mainBody.Radius);
Magic Number,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The following statement contains a magic number: double planetRotationDuringFreefall = 360 * freefallTime / mainBody.rotationPeriod;
Magic Number,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The following statement contains a magic number: targetAngleToOrbitNormal = Math.Min(targetAngleToOrbitNormal' 180 - targetAngleToOrbitNormal);
Magic Number,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The following statement contains a magic number: targetAngleToOrbitNormal < 10                      || (targetAheadAngle < 90 && targetAheadAngle > 60 && planeChangeAngle < 90)
Magic Number,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The following statement contains a magic number: targetAngleToOrbitNormal < 10                      || (targetAheadAngle < 90 && targetAheadAngle > 60 && planeChangeAngle < 90)
Magic Number,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The following statement contains a magic number: targetAngleToOrbitNormal < 10                      || (targetAheadAngle < 90 && targetAheadAngle > 60 && planeChangeAngle < 90)
Magic Number,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The following statement contains a magic number: targetAngleToOrbitNormal < 10                      || (targetAheadAngle < 90 && targetAheadAngle > 60 && planeChangeAngle < 90)
Magic Number,Landing,DeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\DeorbitBurn.cs,OnFixedUpdate,The following statement contains a magic number: deltaV.magnitude < 2.0
Magic Number,Landing,FinalDescent,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\FinalDescent.cs,OnFixedUpdate,The following statement contains a magic number: double maxVel = 1.02 * aggressivePolicy.MaxAllowedSpeed(vesselState.CoM - mainBody.position' vesselState.surfaceVelocity);
Magic Number,Landing,FinalDescent,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\FinalDescent.cs,OnFixedUpdate,The following statement contains a magic number: double diffPercent = ((maxVel / vesselState.speedSurface) - 1) * 100;
Magic Number,Landing,FinalDescent,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\FinalDescent.cs,OnFixedUpdate,The following statement contains a magic number: minalt > 200  && diffPercent > 0 && (Vector3d.Angle(vesselState.forward' -vesselState.surfaceVelocity) < 45)
Magic Number,Landing,FinalDescent,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\FinalDescent.cs,OnFixedUpdate,The following statement contains a magic number: minalt > 200  && diffPercent > 0 && (Vector3d.Angle(vesselState.forward' -vesselState.surfaceVelocity) < 45)
Magic Number,Landing,KillHorizontalVelocity,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\KillHorizontalVelocity.cs,Drive,The following statement contains a magic number: Vector3d desiredThrustVector = (vesselState.up + 0.2 * horizontalPointingDirection).normalized;
Magic Number,Landing,LowDeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\LowDeorbitBurn.cs,Drive,The following statement contains a magic number: deorbitBurnTriggered && core.attitude.attitudeAngleFromTarget() < 5
Magic Number,Landing,LowDeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\LowDeorbitBurn.cs,OnFixedUpdate,The following statement contains a magic number: double stoppingDistance = Math.Pow(vesselState.speedSurfaceHorizontal' 2) / (2 * vesselState.limitedMaxThrustAccel);
Magic Number,Landing,LowDeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\LowDeorbitBurn.cs,OnFixedUpdate,The following statement contains a magic number: double stoppingDistance = Math.Pow(vesselState.speedSurfaceHorizontal' 2) / (2 * vesselState.limitedMaxThrustAccel);
Magic Number,Landing,LowDeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\LowDeorbitBurn.cs,OnFixedUpdate,The following statement contains a magic number: core.warp.WarpRegularAtRate((float)(orbit.period / 6));
Magic Number,Landing,LowDeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\LowDeorbitBurn.cs,OnFixedUpdate,The following statement contains a magic number: !deorbitBurnTriggered && core.node.autowarp && rangeToTarget > 2 * triggerDistance
Magic Number,Landing,LowDeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\LowDeorbitBurn.cs,OnFixedUpdate,The following statement contains a magic number: const double angleGain = 4;
Magic Number,Landing,LowDeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\LowDeorbitBurn.cs,OnFixedUpdate,The following statement contains a magic number: angleCorrection *= 0.1 / angleCorrection.magnitude;
Magic Number,Landing,LowDeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\LowDeorbitBurn.cs,OnFixedUpdate,The following statement contains a magic number: angleCorrection.magnitude > 0.1
Magic Number,Landing,LowDeorbitBurn,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\LowDeorbitBurn.cs,OnFixedUpdate,The following statement contains a magic number: lowDeorbitBurnMaxThrottle = throttleToMaintainLandingSite + 1 * (rangeToLandingSite / rangeToTarget - 1) + 0.2;
Magic Number,Landing,PlaneChange,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\PlaneChange.cs,ComputePlaneChange,The following statement contains a magic number: double planetRotationAngle = 360 * timeToTarget / mainBody.rotationPeriod;
Magic Number,Landing,PlaneChange,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\PlaneChange.cs,Drive,The following statement contains a magic number: core.thrust.targetThrottle = Mathf.Clamp01((float)(planeChangeDVLeft / (2 * core.vesselState.maxThrustAccel)));
Magic Number,Landing,PlaneChange,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\PlaneChange.cs,Drive,The following statement contains a magic number: planeChangeTriggered && core.attitude.attitudeAngleFromTarget() < 2
Magic Number,Landing,PlaneChange,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\PlaneChange.cs,OnFixedUpdate,The following statement contains a magic number: !planeChangeTriggered && approaching && (angleToTarget > 80) && (angleToTarget < 90)
Magic Number,Landing,PlaneChange,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\PlaneChange.cs,OnFixedUpdate,The following statement contains a magic number: !planeChangeTriggered && approaching && (angleToTarget > 80) && (angleToTarget < 90)
Magic Number,Landing,PlaneChange,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\PlaneChange.cs,OnFixedUpdate,The following statement contains a magic number: planeChangeDVLeft < 0.1F
Magic Number,Landing,UntargetedDeorbit,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\UntargetedDeorbit.cs,Drive,The following statement contains a magic number: orbit.PeA < -0.1 * mainBody.Radius
Magic Number,Landing,UntargetedDeorbit,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\LandingAutopilot\UntargetedDeorbit.cs,Drive,The following statement contains a magic number: core.attitude.attitudeAngleFromTarget() < 5
Magic Number,UnityToolbag,Dispatcher,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\UnityToolbag\Dispatcher\Dispatcher.cs,Invoke,The following statement contains a magic number: Thread.Sleep(5);
Missing Default,MuMech,SimulatedParachute,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedParachute.cs,SimulateAndRollback,The following switch statement is missing a default case: switch (state)              {                  case ModuleParachute.deploymentStates.STOWED:                      if (altATGL < semiDeployMultiplier * para.deployAltitude && shockTemp * para.machHeatMult < para.chuteMaxTemp * para.safeMult)                      {                          stateChanged = true;                      }                      break;                  case ModuleParachute.deploymentStates.ACTIVE:                      if (pressure >= para.minAirPressureToOpen)                      {                          stateChanged = true;                      }                      break;                  case ModuleParachute.deploymentStates.SEMIDEPLOYED:                      if (altATGL < para.deployAltitude)                      {                          stateChanged = true;                      }                      break;              }
Missing Default,MuMech,SimulatedParachute,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedParachute.cs,Simulate,The following switch statement is missing a default case: switch (state)              {                  case ModuleParachute.deploymentStates.STOWED:                      if (altATGL < semiDeployMultiplier * para.deployAltitude && shockTemp * para.machHeatMult < para.chuteMaxTemp * para.safeMult)                      {                          state = ModuleParachute.deploymentStates.ACTIVE;                          //activatedAGL = altATGL;                          //activatedASL = altASL;                          // Immediately check to see if the parachute should be semi deployed' rather than waiting for another iteration.                          if (pressure >= para.minAirPressureToOpen)                          {                              state = ModuleParachute.deploymentStates.SEMIDEPLOYED;                              openningTime = time;                              //semiDeployAGL = altATGL;                              //semiDeployASL = altASL;                              //targetASLAtSemiDeploy = endASL;                          }                      }                      break;                  case ModuleParachute.deploymentStates.ACTIVE:                      if (pressure >= para.minAirPressureToOpen)                      {                          state = ModuleParachute.deploymentStates.SEMIDEPLOYED;                          openningTime = time;                          //semiDeployAGL = altATGL;                          //semiDeployASL = altASL;                          //targetASLAtSemiDeploy = endASL;                      }                        break;                  case ModuleParachute.deploymentStates.SEMIDEPLOYED:                      if (altATGL < para.deployAltitude)                      {                          state = ModuleParachute.deploymentStates.DEPLOYED;                          openningTime = time;                          //fullDeployAGL = altATGL;                          //fullDeployASL = altASL;                          //targetASLAtFullDeploy = endASL;                      }                      break;              }
Missing Default,MuMech,SimulatedParachute,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\FlyingSim\SimulatedParachute.cs,Simulate,The following switch statement is missing a default case: switch (state)              {                  case ModuleParachute.deploymentStates.STOWED:                  case ModuleParachute.deploymentStates.ACTIVE:                  case ModuleParachute.deploymentStates.CUT:                      SetCubeWeight("PACKED"' 1f);                      SetCubeWeight("SEMIDEPLOYED"' 0f);                      SetCubeWeight("DEPLOYED"' 0f);                      break;                    case ModuleParachute.deploymentStates.SEMIDEPLOYED:                      SetCubeWeight("PACKED"' 1f - deployLevel);                      SetCubeWeight("SEMIDEPLOYED"' deployLevel);                      SetCubeWeight("DEPLOYED"' 0f);                      break;                    case ModuleParachute.deploymentStates.DEPLOYED:                      SetCubeWeight("PACKED"' 0f);                      SetCubeWeight("SEMIDEPLOYED"' 1f - deployLevel);                      SetCubeWeight("DEPLOYED"' deployLevel);                      break;              }
Missing Default,MuMech,GuiUtils,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\GuiUtils.cs,LoadSkin,The following switch statement is missing a default case: switch (skinType)              {                  case SkinType.Default:                      skin = defaultSkin;                      break;                    case SkinType.MechJeb1:                      skin = AssetBase.GetGUISkin("KSP window 2");                      break;                    case SkinType.Compact:                      skin = compactSkin;                      break;              }
Missing Default,MuMech,OperationAdvancedTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationAdvancedTransfer.cs,ComputeStuff,The following switch statement is missing a default case: switch (selectionMode)              {              case Mode.LimitedTime:                  worker = new TransferCalculator (o' target.TargetOrbit' universalTime' maxArrivalTime' minSamplingStep' includeCaptureBurn);                  break;              case Mode.Porkchop:                  worker = new AllGraphTransferCalculator(o' target.TargetOrbit' minDepartureTime' maxDepartureTime' minTransferTime' maxTransferTime' windowWidth' porkchop_Height' includeCaptureBurn);                  break;              }
Missing Default,MuMech,OperationAdvancedTransfer,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\OperationAdvancedTransfer.cs,DoParametersGUI,The following switch statement is missing a default case: switch (selectionMode)              {              case Mode.LimitedTime:                  GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_adv_label5")' maxArrivalTime);//Max arrival time                  if (worker != null && !worker.Finished)                      GuiUtils.SimpleLabel(Localizer.Format("#MechJeb_adv_computing") + worker.Progress + "%");                  break;              case Mode.Porkchop:                  DoPorkchopGui(o' universalTime' target);                  break;              }
Missing Default,MuMech,PlotArea,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\PlotArea.cs,DoGUI,The following switch statement is missing a default case: switch (Event.current.type)  				{  				case EventType.MouseDown:  					if (Event.current.button == 0)  					{  						mouseDown = true;  						selectedPoint = hoveredPoint;  					}  					break;  				case EventType.MouseUp:  					if (Event.current.button == 0 && mouseDown)  					{  						mouseDown = false;  						if (Math.Abs(selectedPoint[0] - hoveredPoint[0]) > 5 &&  							Math.Abs(selectedPoint[1] - hoveredPoint[1]) > 5)  						{  							callback(  								x(Math.Min(selectedPoint[0]' hoveredPoint[0]))'  								x(Math.Max(selectedPoint[0]' hoveredPoint[0]))'  								y(Math.Min(selectedPoint[1]' hoveredPoint[1]))'  								y(Math.Max(selectedPoint[1]' hoveredPoint[1]))  							);  						}  					}  					break;  				case EventType.ScrollWheel:  					if (Event.current.delta.y == 0)  						break;  					double lambda = Event.current.delta.y < 0 ? 0.7 : 1/0.7;  					double deltax = maxx - minx;  					double deltay = maxy - miny;    					double newminx = x(hoveredPoint[0]) - hoveredPoint[0] * lambda * deltax / texture.width;  					double newminy = y(hoveredPoint[1]) - hoveredPoint[1] * lambda * deltay / texture.height;  					callback(  						newminx'  						newminx + lambda * deltax'  						newminy'  						newminy + lambda * deltay  					);  						  					break;  					case EventType.KeyUp:  						ProcessKeys();  						break;  				}
Missing Default,MuMech,TimeSelector,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TimeSelector.cs,TimeSelector,The following switch statement is missing a default case: switch (allowedTimeRef[i])                  {                      case TimeReference.COMPUTED:          timeRefNames[i] = Localizer.Format("#MechJeb_Maneu_TimeSelect1"); break;//at the optimum time                      case TimeReference.APOAPSIS:          timeRefNames[i] = Localizer.Format("#MechJeb_Maneu_TimeSelect2"); break;//"at the next apoapsis"                      case TimeReference.CLOSEST_APPROACH:  timeRefNames[i] = Localizer.Format("#MechJeb_Maneu_TimeSelect3"); break;//"at closest approach to target"                      case TimeReference.EQ_ASCENDING:      timeRefNames[i] = Localizer.Format("#MechJeb_Maneu_TimeSelect4"); break;//"at the equatorial AN"                      case TimeReference.EQ_DESCENDING:     timeRefNames[i] = Localizer.Format("#MechJeb_Maneu_TimeSelect5"); break;//"at the equatorial DN"                      case TimeReference.PERIAPSIS:         timeRefNames[i] = Localizer.Format("#MechJeb_Maneu_TimeSelect6"); break;//"at the next periapsis"                      case TimeReference.REL_ASCENDING:     timeRefNames[i] = Localizer.Format("#MechJeb_Maneu_TimeSelect7"); break;//"at the next AN with the target."                      case TimeReference.REL_DESCENDING:    timeRefNames[i] = Localizer.Format("#MechJeb_Maneu_TimeSelect8"); break;//"at the next DN with the target."                      case TimeReference.X_FROM_NOW:        timeRefNames[i] = Localizer.Format("#MechJeb_Maneu_TimeSelect9"); break;//"after a fixed time"                      case TimeReference.ALTITUDE:          timeRefNames[i] = Localizer.Format("#MechJeb_Maneu_TimeSelect10"); break;//"at an altitude"                      case TimeReference.EQ_NEAREST_AD:     timeRefNames[i] = Localizer.Format("#MechJeb_Maneu_TimeSelect11"); break;//"at the nearest equatorial AN/DN"                      case TimeReference.EQ_HIGHEST_AD:     timeRefNames[i] = Localizer.Format("#MechJeb_Maneu_TimeSelect12"); break;//"at the cheapest equatorial AN/DN"                      case TimeReference.REL_NEAREST_AD:    timeRefNames[i] = Localizer.Format("#MechJeb_Maneu_TimeSelect13"); break;//"at the nearest AN/DN with the target"                      case TimeReference.REL_HIGHEST_AD:    timeRefNames[i] = Localizer.Format("#MechJeb_Maneu_TimeSelect14"); break;//"at the cheapest AN/DN with the target"                  }
Missing Default,MuMech,TimeSelector,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TimeSelector.cs,DoChooseTimeGUI,The following switch statement is missing a default case: switch (timeReference)              {                  // No additional parameters required                  case TimeReference.COMPUTED:                  case TimeReference.APOAPSIS:                  case TimeReference.CLOSEST_APPROACH:                  case TimeReference.EQ_ASCENDING:                  case TimeReference.EQ_DESCENDING:                  case TimeReference.PERIAPSIS:                  case TimeReference.REL_ASCENDING:                  case TimeReference.REL_DESCENDING:                  case TimeReference.EQ_NEAREST_AD:                  case TimeReference.EQ_HIGHEST_AD:                  case TimeReference.REL_NEAREST_AD:                  case TimeReference.REL_HIGHEST_AD:                      break;                    case TimeReference.X_FROM_NOW:                      GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_of")' leadTime);//"of"                      break;                    case TimeReference.ALTITUDE:                      GuiUtils.SimpleTextBox(Localizer.Format("#MechJeb_of")' circularizeAltitude' "km");//"of"                      break;              }
Missing Default,MuMech,TimeSelector,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\Maneuver\TimeSelector.cs,ComputeManeuverTime,The following switch statement is missing a default case: switch (allowedTimeRef[currentTimeRef])              {                  case TimeReference.X_FROM_NOW:                      UT += leadTime.val;                      break;                    case TimeReference.APOAPSIS:                      if (o.eccentricity < 1)                      {                          UT = o.NextApoapsisTime(UT);                      }                      else                      {                          throw new OperationException(Localizer.Format("#MechJeb_Maneu_Exception1"));//"Warning: orbit is hyperbolic' so apoapsis doesn't exist."                      }                      break;                    case TimeReference.PERIAPSIS:                      UT = o.NextPeriapsisTime(UT);                      break;                    case TimeReference.CLOSEST_APPROACH:                      if (target.NormalTargetExists)                      {                          UT = o.NextClosestApproachTime(target.TargetOrbit' UT);                      }                      else                      {                          throw new OperationException(Localizer.Format("#MechJeb_Maneu_Exception2"));//"Warning: no target selected."                      }                      break;                    case TimeReference.ALTITUDE:                      if (circularizeAltitude > o.PeA && (circularizeAltitude < o.ApA || o.eccentricity >= 1))                      {                          UT = o.NextTimeOfRadius(UT' o.referenceBody.Radius + circularizeAltitude);                      }                      else                      {                          throw new OperationException(Localizer.Format("#MechJeb_Maneu_Exception3"));//"Warning: can't circularize at this altitude' since current orbit does not reach it."                      }                      break;                    case TimeReference.EQ_ASCENDING:                      if (o.AscendingNodeEquatorialExists())                      {                          UT = o.TimeOfAscendingNodeEquatorial(UT);                      }                      else                      {                          throw new OperationException(Localizer.Format("#MechJeb_Maneu_Exception4"));//"Warning: equatorial ascending node doesn't exist."                      }                      break;                    case TimeReference.EQ_DESCENDING:                      if (o.DescendingNodeEquatorialExists())                      {                          UT = o.TimeOfDescendingNodeEquatorial(UT);                      }                      else                      {                          throw new OperationException(Localizer.Format("#MechJeb_Maneu_Exception5"));//"Warning: equatorial descending node doesn't exist."                      }                      break;                    case TimeReference.EQ_NEAREST_AD:                      if(o.AscendingNodeEquatorialExists())                      {                          UT = o.DescendingNodeEquatorialExists()                              ? System.Math.Min(o.TimeOfAscendingNodeEquatorial(UT)' o.TimeOfDescendingNodeEquatorial(UT))                              : o.TimeOfAscendingNodeEquatorial(UT);                      }                      else if(o.DescendingNodeEquatorialExists())                      {                          UT = o.TimeOfDescendingNodeEquatorial(UT);                      }                      else                      {                          throw new OperationException(Localizer.Format("#MechJeb_Maneu_Exception6"));//Warning: neither ascending nor descending node exists.                      }                      break;                    case TimeReference.EQ_HIGHEST_AD:                      if(o.AscendingNodeEquatorialExists())                      {                          if(o.DescendingNodeEquatorialExists())                          {                              var anTime = o.TimeOfAscendingNodeEquatorial(UT);                              var dnTime = o.TimeOfDescendingNodeEquatorial(UT);                              UT = o.getOrbitalVelocityAtUT(anTime).magnitude <= o.getOrbitalVelocityAtUT(dnTime).magnitude                                  ? anTime                                  : dnTime;                          }                          else                          {                              UT = o.TimeOfAscendingNodeEquatorial(UT);                          }                      }                      else if(o.DescendingNodeEquatorialExists())                      {                          UT = o.TimeOfDescendingNodeEquatorial(UT);                      }                      else                      {                          throw new OperationException(Localizer.Format("#MechJeb_Maneu_Exception7"));//"Warning: neither ascending nor descending node exists."                      }                      break;              }
Missing Default,MuMech,MathExtensions,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MathExtensions.cs,Reorder,The following switch statement is missing a default case: switch (order)              {                  case 123:                      return new Vector3d(vector.x' vector.y' vector.z);                  case 132:                      return new Vector3d(vector.x' vector.z' vector.y);                  case 213:                      return new Vector3d(vector.y' vector.x' vector.z);                  case 231:                      return new Vector3d(vector.y' vector.z' vector.x);                  case 312:                      return new Vector3d(vector.z' vector.x' vector.y);                  case 321:                      return new Vector3d(vector.z' vector.y' vector.x);              }
Missing Default,MuMech,MechJebAR202,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebAR202.cs,HandleLights,The following switch statement is missing a default case: switch (litLight)              {                  case LightColor.GREEN:                      if (!greenLight.enabled) TurnOnLight(LightColor.GREEN);                      if (redLight.enabled) TurnOffLight(LightColor.RED);                      break;                    case LightColor.RED:                      if (greenLight.enabled) TurnOffLight(LightColor.GREEN);                      if (!redLight.enabled) TurnOnLight(LightColor.RED);                      break;                    case LightColor.NEITHER:                      if (greenLight.enabled) TurnOffLight(LightColor.GREEN);                      if (redLight.enabled) TurnOffLight(LightColor.RED);                      break;              }
Missing Default,MuMech,MechJebAR202,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebAR202.cs,TurnOnLight,The following switch statement is missing a default case: switch (which)              {                  case LightColor.GREEN:                      if (greenLightTransform != null)                      {                          greenLightRenderer.material.SetColor(emissionId' Color.green);                          greenLight.enabled = true;                      }                      break;                    case LightColor.RED:                      if (redLightTransform != null)                      {                          redLightRenderer.material.SetColor(emissionId' Color.red);                          redLight.enabled = true;                      }                      break;              }
Missing Default,MuMech,MechJebAR202,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebAR202.cs,TurnOffLight,The following switch statement is missing a default case: switch (which)              {                  case LightColor.GREEN:                      if (greenLightTransform != null)                      {                          greenLightRenderer.material.SetColor(emissionId' Color.black);                          greenLight.enabled = false;                      }                      break;                    case LightColor.RED:                      if (redLightTransform != null)                      {                          redLightRenderer.material.SetColor(emissionId' Color.black);                          redLight.enabled = false;                      }                      break;              }
Missing Default,MuMech,MechJebModuleAscentAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,Drive,The following switch statement is missing a default case: switch (mode)              {                  case AscentMode.PRELAUNCH:                      DrivePrelaunch(s);                      break;                    case AscentMode.ASCEND:                      DriveAscent(s);                      break;                    case AscentMode.CIRCULARIZE:                      DriveCircularizationBurn(s);                      break;              }
Missing Default,MuMech,MechJebModuleAscentAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentAutopilot.cs,ascentPathForType,The following switch statement is missing a default case: switch (type)              {                  case ascentType.CLASSIC:                      return core.GetComputerModule<MechJebModuleAscentClassic>();                  case ascentType.GRAVITYTURN:                      return core.GetComputerModule<MechJebModuleAscentGT>();                  case ascentType.PVG:                      return core.GetComputerModule<MechJebModuleAscentPVG>();              }
Missing Default,MuMech,MechJebModuleAscentClassic,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentClassic.cs,DriveAscent,The following switch statement is missing a default case: switch (mode)              {                  case AscentMode.VERTICAL_ASCENT:                      DriveVerticalAscent(s);                      break;                    case AscentMode.GRAVITY_TURN:                      DriveGravityTurn(s);                      break;                    case AscentMode.COAST_TO_APOAPSIS:                      DriveCoastToApoapsis(s);                      break;                    case AscentMode.EXIT:                      return false;              }
Missing Default,MuMech,MechJebModuleAscentGT,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentGT.cs,DriveAscent,The following switch statement is missing a default case: switch (mode)              {                  case AscentMode.VERTICAL_ASCENT:                      DriveVerticalAscent(s);                      break;                    case AscentMode.INITIATE_TURN:                      DriveInitiateTurn(s);                      break;                    case AscentMode.GRAVITY_TURN:                      DriveGravityTurn(s);                      break;                    case AscentMode.HOLD_AP:                      DriveHoldAP(s);                      break;                    case AscentMode.COAST_TO_APOAPSIS:                      DriveCoastToApoapsis(s);                      break;                    case AscentMode.EXIT:                      return false;              }
Missing Default,MuMech,MechJebModuleAscentPVG,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAscentPVG.cs,DriveAscent,The following switch statement is missing a default case: switch (mode)              {                  case AscentMode.VERTICAL_ASCENT:                      DriveVerticalAscent(s);                      break;                    case AscentMode.INITIATE_TURN:                      DriveInitiateTurn(s);                      break;                    case AscentMode.GUIDANCE:                      DriveGuidance(s);                      break;              }
Missing Default,MuMech,MechJebModuleAttitudeController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleAttitudeController.cs,attitudeGetReferenceRotation,The following switch statement is missing a default case: switch (reference)              {                  case AttitudeReference.ORBIT:                      rotRef = Quaternion.LookRotation(vesselState.orbitalVelocity.normalized' vesselState.up);                      break;                  case AttitudeReference.ORBIT_HORIZONTAL:                      rotRef = Quaternion.LookRotation(Vector3d.Exclude(vesselState.up' vesselState.orbitalVelocity.normalized)' vesselState.up);                      break;                  case AttitudeReference.SURFACE_NORTH:                      rotRef = vesselState.rotationSurface;                      break;                  case AttitudeReference.SURFACE_VELOCITY:                      rotRef = Quaternion.LookRotation(vesselState.surfaceVelocity.normalized' vesselState.up);                      break;                  case AttitudeReference.TARGET:                      fwd = (core.target.Position - vessel.GetTransform().position).normalized;                      up = Vector3d.Cross(fwd' vesselState.normalPlus);                      Vector3.OrthoNormalize(ref fwd' ref up);                      rotRef = Quaternion.LookRotation(fwd' up);                      break;                  case AttitudeReference.RELATIVE_VELOCITY:                      fwd = core.target.RelativeVelocity.normalized;                      up = Vector3d.Cross(fwd' vesselState.normalPlus);                      Vector3.OrthoNormalize(ref fwd' ref up);                      rotRef = Quaternion.LookRotation(fwd' up);                      break;                  case AttitudeReference.TARGET_ORIENTATION:                      Transform targetTransform = core.target.Transform;                      if (core.target.CanAlign)                      {                          rotRef = Quaternion.LookRotation(targetTransform.forward' targetTransform.up);                      }                      else                      {                          rotRef = Quaternion.LookRotation(targetTransform.up' targetTransform.right);                      }                      break;                  case AttitudeReference.MANEUVER_NODE:                      fwd = vessel.patchedConicSolver.maneuverNodes[0].GetBurnVector(orbit);                      up = Vector3d.Cross(fwd' vesselState.normalPlus);                      Vector3.OrthoNormalize(ref fwd' ref up);                      rotRef = Quaternion.LookRotation(fwd' up);                      break;                  case AttitudeReference.SUN:                      Orbit baseOrbit = vessel.mainBody == Planetarium.fetch.Sun ? vessel.orbit : orbit.TopParentOrbit();                      up = vesselState.CoM - Planetarium.fetch.Sun.transform.position;                      fwd = Vector3d.Cross(-baseOrbit.GetOrbitNormal().xzy.normalized' up);                      rotRef = Quaternion.LookRotation(fwd' up);                      break;                  case AttitudeReference.SURFACE_HORIZONTAL:                      rotRef = Quaternion.LookRotation(Vector3d.Exclude(vesselState.up' vesselState.surfaceVelocity.normalized)' vesselState.up);                      break;              }
Missing Default,MuMech,MechJebModuleInfoItems,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleInfoItems.cs,AllStageStats,The following switch statement is missing a default case: switch (StageDisplayState)              {                  case 0:                      showVacInitialTWR = showAtmoInitialTWR = showVacDeltaV = showAtmoDeltaV = showTime = true;                      showInitialMass = showFinalMass = showStagedMass = showBurnedMass = showVacMaxTWR = showAtmoMaxTWR = showISP = false;                      break;                  case 1:                      showInitialMass = showFinalMass = showVacInitialTWR = showAtmoInitialTWR = showVacMaxTWR = showAtmoMaxTWR = showVacDeltaV = showTime = showAtmoDeltaV = true;                      showStagedMass = showBurnedMass = showISP = false;                      break;                  case 2:                      showInitialMass = showFinalMass = showStagedMass = showBurnedMass = showVacInitialTWR = showAtmoInitialTWR = showAtmoMaxTWR = showVacMaxTWR = showVacDeltaV = showTime = showAtmoDeltaV = showISP = true;                      break;              }
Missing Default,MuMech,MechJebModuleLandingGuidance,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleLandingGuidance.cs,DrawGUIPrediction,The following switch statement is missing a default case: switch (result.outcome)                  {                      case ReentrySimulation.Outcome.LANDED:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_label9"));//Landing Predictions:                          GUILayout.Label(Coordinates.ToStringDMS(result.endPosition.latitude' result.endPosition.longitude) + "\nASL:" + MuUtils.ToSI(result.endASL'-1' 4) + "m");                          GUILayout.Label(result.body.GetExperimentBiomeSafe(result.endPosition.latitude' result.endPosition.longitude));                          double error = Vector3d.Distance(mainBody.GetWorldSurfacePosition(result.endPosition.latitude' result.endPosition.longitude' 0) - mainBody.position'                                                           mainBody.GetWorldSurfacePosition(core.target.targetLatitude' core.target.targetLongitude' 0) - mainBody.position);                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label10") + MuUtils.ToSI(error' 0) + "m"                                         + Localizer.Format("#MechJeb_LandingGuidance_Label11") + result.maxDragGees.ToString("F1") +"g"                                         +Localizer.Format("#MechJeb_LandingGuidance_Label12") + result.deltaVExpended.ToString("F1") + "m/s"                                         +Localizer.Format("#MechJeb_LandingGuidance_Label13") + (vessel.Landed ? "0.0s" : GuiUtils.TimeToDHMS(result.endUT - Planetarium.GetUniversalTime()' 1)));//Target difference = \nMax drag: \nDelta-v needed: \nTime to land:                           break;                        case ReentrySimulation.Outcome.AEROBRAKED:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label14"));//Predicted orbit after aerobraking:                          Orbit o = result.AeroBrakeOrbit();                          if (o.eccentricity > 1) GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label15") + o.eccentricity.ToString("F2"));//Hyperbolic' eccentricity =                           else GUILayout.Label(MuUtils.ToSI(o.PeA' 3) + "m x " + MuUtils.ToSI(o.ApA' 3) + "m");                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label16"' result.maxDragGees.ToString("F1"))+Localizer.Format("#MechJeb_LandingGuidance_Label17"' GuiUtils.TimeToDHMS(result.aeroBrakeUT - Planetarium.GetUniversalTime()' 1)));//Max drag:<<1>>g  \nExit atmosphere in:                          break;                        case ReentrySimulation.Outcome.NO_REENTRY:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label18_1")                                        + MuUtils.ToSI(orbit.PeA' 3) + "m Pe > " + MuUtils.ToSI(mainBody.RealMaxAtmosphereAltitude()' 3) + (mainBody.atmosphere ? Localizer.Format("#MechJeb_LandingGuidance_Label18_2") : Localizer.Format("#MechJeb_LandingGuidance_Label18_3")));//"Orbit does not reenter:\n""m atmosphere height""m ground"                          break;                        case ReentrySimulation.Outcome.TIMED_OUT:                          GUILayout.Label(Localizer.Format("#MechJeb_LandingGuidance_Label19"));//Reentry simulation timed out.                          break;                  }
Missing Default,MuMech,MechJebModuleMenu,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleMenu.cs,DrawGUI,The following switch statement is missing a default case: switch (windowStat)              {                  case WindowStat.OPENING:                      windowProgr += Time.deltaTime;                      if (windowProgr >= 1)                      {                          windowProgr = 1;                          windowStat = WindowStat.NORMAL;                      }                      break;                  case WindowStat.CLOSING:                      windowProgr -= Time.deltaTime;                      if (windowProgr <= 0)                      {                          windowProgr = 0;                          windowStat = WindowStat.HIDDEN;                      }                      break;              }
Missing Default,MuMech,MechJebModuleNodeEditor,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleNodeEditor.cs,WindowGUI,The following switch statement is missing a default case: switch (snap)                  {                      case Snap.PERIAPSIS:                          UT = o.NextPeriapsisTime(o.eccentricity < 1 ? UT - o.period / 2 : UT);                          break;                        case Snap.APOAPSIS:                          if (o.eccentricity < 1) UT = o.NextApoapsisTime(UT - o.period / 2);                          break;                        case Snap.EQ_ASCENDING:                          if (o.AscendingNodeEquatorialExists()) UT = o.TimeOfAscendingNodeEquatorial(UT - o.period / 2);                          break;                        case Snap.EQ_DESCENDING:                          if (o.DescendingNodeEquatorialExists()) UT = o.TimeOfDescendingNodeEquatorial(UT - o.period / 2);                          break;                        case Snap.REL_ASCENDING:                          if (core.target.NormalTargetExists && core.target.TargetOrbit.referenceBody == o.referenceBody)                          {                              if (o.AscendingNodeExists(core.target.TargetOrbit)) UT = o.TimeOfAscendingNode(core.target.TargetOrbit' UT - o.period / 2);                          }                          break;                        case Snap.REL_DESCENDING:                          if (core.target.NormalTargetExists && core.target.TargetOrbit.referenceBody == o.referenceBody)                          {                              if (o.DescendingNodeExists(core.target.TargetOrbit)) UT = o.TimeOfDescendingNode(core.target.TargetOrbit' UT - o.period / 2);                          }                          break;                  }
Missing Default,MuMech,MechJebModuleRCSController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSController.cs,Drive,The following switch statement is missing a default case: switch (controlType)              {                  case ControlType.TARGET_VELOCITY:                      // Removed the gravity since it also affect the target and we don't know the target pos here.                      // Since the difference is negligable for docking it's removed                      // TODO : add it back once we use the RCS Controler for other use than docking. Account for current acceleration beside gravity ?                      worldVelocityDelta = vesselState.orbitalVelocity - targetVelocity;                      //worldVelocityDelta += TimeWarp.fixedDeltaTime * vesselState.gravityForce; //account for one frame's worth of gravity                      //worldVelocityDelta -= TimeWarp.fixedDeltaTime * gravityForce = FlightGlobals.getGeeForceAtPosition(  Here be the target position  ); ; //account for one frame's worth of gravity                      break;                    case ControlType.VELOCITY_ERROR:                      // worldVelocityDelta already contains the velocity error                      break;                    case ControlType.VELOCITY_TARGET_REL:                      if (core.target.Target == null)                      {                          rcsDeactivate();                          return;                      }                        worldVelocityDelta = core.target.RelativeVelocity - targetVelocity;                      break;              }
Missing Default,MuMech,MechJebModuleRCSController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleRCSController.cs,Drive,The following switch statement is missing a default case: switch (controlType)                  {                      case ControlType.TARGET_VELOCITY:                          omega = Quaternion.Inverse(vessel.GetTransform().rotation) * (vessel.acceleration - vesselState.gravityForce);                          break;                        case ControlType.VELOCITY_TARGET_REL:                      case ControlType.VELOCITY_ERROR:                          omega = (worldVelocityDelta - prev_worldVelocityDelta) / TimeWarp.fixedDeltaTime;                          prev_worldVelocityDelta = worldVelocityDelta;                          break;                  }
Missing Default,MuMech,MechJebModuleSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartASS.cs,WindowGUI,The following switch statement is missing a default case: switch (mode)                  {                      case Mode.ORBITAL:                            GUILayout.BeginHorizontal();                          TargetButton(Target.PROGRADE);                          TargetButton(Target.NORMAL_PLUS);                          TargetButton(Target.RADIAL_PLUS);                          GUILayout.EndHorizontal();                          GUILayout.BeginHorizontal();                          TargetButton(Target.RETROGRADE);                          TargetButton(Target.NORMAL_MINUS);                          TargetButton(Target.RADIAL_MINUS);                          GUILayout.EndHorizontal();                            ForceRoll();                            break;                      case Mode.SURFACE:                      	double val = (GameSettings.MODIFIER_KEY.GetKey() ? 5 : 1); // change by 5 if the mod_key is held down' else by 1                          GUILayout.BeginHorizontal();                          TargetButton(Target.SURFACE_PROGRADE);                          TargetButton(Target.SURFACE_RETROGRADE);                          TargetButtonNoEngage(Target.SURFACE);                          GUILayout.EndHorizontal();                          GUILayout.BeginHorizontal();                          TargetButton(Target.HORIZONTAL_PLUS);                          TargetButton(Target.HORIZONTAL_MINUS);                          TargetButton(Target.VERTICAL_PLUS);                          GUILayout.EndHorizontal();                          if (target == Target.SURFACE) {                              bool changed = false;                          	GUILayout.BeginHorizontal();                              forceYaw = GUILayout.Toggle(forceYaw' ""' GUILayout.ExpandWidth(false));                              GuiUtils.SimpleTextBox("HDG"' srfHdg' "°"' 37);                              if (GUILayout.Button("-"' GUILayout.ExpandWidth(false))) {                              	srfHdg -= val;                                  changed = true;                              }                              if (GUILayout.Button("+"' GUILayout.ExpandWidth(false))) {                                  srfHdg += val;                                  changed = true;                              }                              if (GUILayout.Button("0"' GUILayout.ExpandWidth(false))) {                                  srfHdg = 0;                                  changed = true;                              }                              if (GUILayout.Button("90"' GUILayout.Width(35))) {                                  srfHdg = 90;                                  changed = true;                              }                              GUILayout.EndHorizontal();                          	GUILayout.BeginHorizontal();                              forcePitch = GUILayout.Toggle(forcePitch' ""' GUILayout.ExpandWidth(false));                              GuiUtils.SimpleTextBox("PIT"' srfPit' "°"' 37);                              if (GUILayout.Button("-"' GUILayout.ExpandWidth(false))) {                                  srfPit -= val;                                  changed = true;                              }                              if (GUILayout.Button("+"' GUILayout.ExpandWidth(false))) {                                  srfPit += val;                                  changed = true;                              }                              if (GUILayout.Button("0"' GUILayout.ExpandWidth(false))) {                                  srfPit = 0;                                  changed = true;                              }                              if (GUILayout.Button("90"' GUILayout.Width(35))) {                                  srfPit = 90;                                  changed = true;                              }                              GUILayout.EndHorizontal();                          	GUILayout.BeginHorizontal();                              forceRol = GUILayout.Toggle(forceRol' ""' GUILayout.ExpandWidth(false));                              GuiUtils.SimpleTextBox("ROL"' srfRol' "°"' 37);                              if (GUILayout.Button("-"' GUILayout.ExpandWidth(false))) {                                  srfRol -= val;                                  changed = true;                              }                              if (GUILayout.Button("+"' GUILayout.ExpandWidth(false))) {                                  srfRol += val;                                  changed = true;                              }                              if (GUILayout.Button("0"' GUILayout.ExpandWidth(false))) {                                  srfRol = 0;                                  changed = true;                              }                              if (GUILayout.Button("180"' GUILayout.Width(35))) {                                  srfRol = 180;                                  changed = true;                              }                              GUILayout.EndHorizontal();                              if (GUILayout.Button(Localizer.Format("#MechJeb_SmartASS_button58"))){// "EXECUTE"                                  Engage();                              }                              if (changed)                              {                                  Engage(false);                              }                              core.attitude.AxisControl(forcePitch' forceYaw' forceRol);                          } else if (target == Target.SURFACE_PROGRADE || target == Target.SURFACE_RETROGRADE)                          {                              bool changed = false;                              GUILayout.BeginHorizontal();                              forceRol = GUILayout.Toggle(forceRol' ""' GUILayout.ExpandWidth(false));                              GuiUtils.SimpleTextBox("ROL"' srfVelRol' "°"' 37);                              if (GUILayout.Button("-"' GUILayout.ExpandWidth(false))) {                                  srfVelRol -= val;                                  changed = true;                              }                              if (GUILayout.Button("+"' GUILayout.ExpandWidth(false))) {                                  srfVelRol += val;                                  changed = true;                              }                              if (GUILayout.Button("CUR"' GUILayout.ExpandWidth(false))) {                                  srfVelRol = -vesselState.vesselRoll.value;                                  changed = true;                              }                              if (GUILayout.Button("0"' GUILayout.ExpandWidth(false))) {                                  srfVelRol = 0;                                  changed = true;                              }                              GUILayout.EndHorizontal();                              GUILayout.BeginHorizontal();                              forcePitch = GUILayout.Toggle(forcePitch' ""' GUILayout.ExpandWidth(false));                              GuiUtils.SimpleTextBox("PIT"' srfVelPit' "°"' 37);                              if (GUILayout.Button("-"' GUILayout.ExpandWidth(false))) {                                  srfVelPit -= val;                                  changed = true;                              }                              if (GUILayout.Button("+"' GUILayout.ExpandWidth(false))) {                                  srfVelPit += val;                                  changed = true;                              }                              if (GUILayout.Button("CUR"' GUILayout.ExpandWidth(false))) {                                  srfVelPit = vesselState.AoA.value;                                  changed = true;                              }                              if (GUILayout.Button("0"' GUILayout.ExpandWidth(false))) {                                  srfVelPit = 0;                                  changed = true;                              }                              GUILayout.EndHorizontal();                              GUILayout.BeginHorizontal();                              forceYaw = GUILayout.Toggle(forceYaw' ""' GUILayout.ExpandWidth(false));                              GuiUtils.SimpleTextBox("YAW"' srfVelYaw' "°"' 37);                              if (GUILayout.Button("-"' GUILayout.ExpandWidth(false))) {                                  srfVelYaw -= val;                                  changed = true;                              }                              if (GUILayout.Button("+"' GUILayout.ExpandWidth(false))) {                                  srfVelYaw += val;                                  changed = true;                              }                              if (GUILayout.Button("CUR"' GUILayout.ExpandWidth(false))) {                                  srfVelYaw = -vesselState.AoS.value;                                  changed = true;                              }                              if (GUILayout.Button("0"' GUILayout.ExpandWidth(false))) {                                  srfVelYaw = 0;                                  changed = true;                              }                              GUILayout.EndHorizontal();                              if (GUILayout.Button(Localizer.Format("#MechJeb_SmartASS_button58")))//"EXECUTE"                              {                                  Engage();                              }                              if (changed)                              {                                  Engage(false);                              }                              core.attitude.AxisControl(forcePitch' forceYaw' forceRol);                          }                          break;                      case Mode.TARGET:                          if (core.target.NormalTargetExists)                          {                              GUILayout.BeginHorizontal();                              TargetButton(Target.TARGET_PLUS);                              TargetButton(Target.RELATIVE_PLUS);                              TargetButton(Target.PARALLEL_PLUS);                              GUILayout.EndHorizontal();                              GUILayout.BeginHorizontal();                              TargetButton(Target.TARGET_MINUS);                              TargetButton(Target.RELATIVE_MINUS);                              TargetButton(Target.PARALLEL_MINUS);                              GUILayout.EndHorizontal();                                ForceRoll();                          }                          else                          {                              GUILayout.Label(Localizer.Format("#MechJeb_SmartASS_label2"));//"Please select a target"                          }                          break;                      case Mode.ADVANCED:                          GUILayout.Label(Localizer.Format("#MechJeb_SmartASS_label3"));//"Reference:"                          advReference = (AttitudeReference)GuiUtils.ComboBox.Box((int)advReference' ReferenceTexts' this);                            GUILayout.Label(Localizer.Format("#MechJeb_SmartASS_label4"));//"Direction:"                          advDirection = (Vector6.Direction)GuiUtils.ComboBox.Box((int)advDirection' directionTexts' directionTexts);                            ForceRoll();                            if (GUILayout.Button(Localizer.Format("#MechJeb_SmartASS_button58")' btNormal' GUILayout.ExpandWidth(true)))//"EXECUTE"                          {                              target = Target.ADVANCED;                              Engage();                          }                          break;                      case Mode.AUTO:                          break;                  }
Missing Default,MuMech,MechJebModuleSmartRcs,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSmartRcs.cs,Engage,The following switch statement is missing a default case: switch (target)              {                  case Target.OFF:                      core.rcs.users.Remove(this);                      return;                  case Target.ZERO_RVEL:                      core.rcs.users.Add(this);                      core.rcs.SetTargetRelative(Vector3d.zero);                      break;              }
Missing Default,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,AutolandApproachStateToHumanReadableDescription,The following switch statement is missing a default case: switch (approachState)              {                  case AutolandApproachState.START:                      return "";                  case AutolandApproachState.IAP:                      return Localizer.Format("#MechJeb_ApproAndLand_approachState1");//Proceeding to the initial approach point                  case AutolandApproachState.FAP:                      return Localizer.Format("#MechJeb_ApproAndLand_approachState2");//Proceeding to the final approach point                  case AutolandApproachState.GLIDESLOPEINTERCEPT:                      return Localizer.Format("#MechJeb_ApproAndLand_approachState3");//Intercepting the glide slope                  case AutolandApproachState.TOUCHDOWN:                      return Localizer.Format("#MechJeb_ApproAndLand_approachState4");//Proceeding to touchdown point                  case AutolandApproachState.WAITINGFORFLARE:                      return Localizer.Format("#MechJeb_ApproAndLand_approachState5");//Waiting for flare                  case AutolandApproachState.FLARE:                      return Localizer.Format("#MechJeb_ApproAndLand_approachState6");//Flaring                  case AutolandApproachState.ROLLOUT:                      return Localizer.Format("#MechJeb_ApproAndLand_approachState7");//Rolling out              }
Missing Default,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetHeading,The following switch statement is missing a default case: switch (approachState)              {                  case AutolandApproachState.FAP:                  case AutolandApproachState.TOUCHDOWN:                  case AutolandApproachState.WAITINGFORFLARE:                  case AutolandApproachState.ROLLOUT:                  case AutolandApproachState.FLARE:                  {                      double alignOffset = GetAutolandAlignmentError(vectorToWaypoint);                      Debug.Assert(alignOffset < lateralInterceptAngle);                        double exponentPerDegreeOfError = (Math.Log(3) - Math.Log(1)) / lateralInterceptAngle;                      double offsetMultiplier = Math.Exp((lateralInterceptAngle - Math.Abs(alignOffset)) * exponentPerDegreeOfError);                        targetHeading -= alignOffset * offsetMultiplier;                      break;                  }              }
Missing Default,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetSpeed,The following switch statement is missing a default case: switch (approachState)              {                  case AutolandApproachState.ROLLOUT:                      return 0;              }
Missing Default,MuMech,MechJebModuleSpaceplaneAutopilot,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleSpaceplaneAutopilot.cs,GetAutolandTargetSpeed,The following switch statement is missing a default case: switch (approachState)              {                  case AutolandApproachState.WAITINGFORFLARE:                  case AutolandApproachState.TOUCHDOWN:                  case AutolandApproachState.FLARE:                      return touchdownSpeed;              }
Missing Default,MuMech,MechJebModuleThrustController,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustController.cs,Drive,The following switch statement is missing a default case: switch (tmode)                  {                      case TMode.KEEP_ORBITAL:                          spd = vesselState.speedOrbital;                          break;                      case TMode.KEEP_SURFACE:                          spd = vesselState.speedSurface;                          break;                      case TMode.KEEP_VERTICAL:                          spd = vesselState.speedVertical;                          Vector3d rot = Vector3d.up;                          if (trans_kill_h)                          {                              Vector3 hsdir = Vector3.ProjectOnPlane(vesselState.surfaceVelocity' vesselState.up);                              Vector3 dir = -hsdir + vesselState.up * Math.Max(Math.Abs(spd)' 20 * mainBody.GeeASL);                              if ((Math.Min(vesselState.altitudeASL' vesselState.altitudeTrue) > 5000) && (hsdir.magnitude > Math.Max(Math.Abs(spd)' 100 * mainBody.GeeASL) * 2))                              {                                  tmode = TMode.DIRECT;                                  trans_spd_act = 100;                                  rot = -hsdir;                              }                              else                              {                                  rot = dir.normalized;                              }                              core.attitude.attitudeTo(rot' AttitudeReference.INERTIAL' null);                          }                          break;                  }
Missing Default,MuMech,MechJebModuleThrustWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleThrustWindow.cs,WindowGUI,The following switch statement is missing a default case: switch (core.thrust.differentialThrottleSuccess)  				{  					case MechJebModuleThrustController.DifferentialThrottleStatus.MoreEnginesRequired:  						GUILayout.Label(Localizer.Format("#MechJeb_Utilities_label3")' new GUIStyle(GUI.skin.label) { normal = { textColor = Color.yellow } });//"Differential throttle failed\nMore engines required"  						break;  					case MechJebModuleThrustController.DifferentialThrottleStatus.AllEnginesOff:  						GUILayout.Label(Localizer.Format("#MechJeb_Utilities_label4")' new GUIStyle(GUI.skin.label) { normal = { textColor = Color.yellow } });//"Differential throttle failed\nNo active engine"  						break;  					case MechJebModuleThrustController.DifferentialThrottleStatus.SolverFailed:  						GUILayout.Label(Localizer.Format("#MechJeb_Utilities_label5")' new GUIStyle(GUI.skin.label) { normal = { textColor = Color.yellow } });//"Differential throttle failed\nCannot find solution"  						break;  					case MechJebModuleThrustController.DifferentialThrottleStatus.Success:  						break;  				}
Missing Default,MuMech,MechJebModuleTranslatron,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleTranslatron.cs,Drive,The following switch statement is missing a default case: switch (abort)                  {                      case AbortStage.THRUSTOFF:                          FlightInputHandler.SetNeutralControls();                          s.mainThrottle = 0;                          abort = AbortStage.DECOUPLE;                          break;                      case AbortStage.DECOUPLE:                          recursiveDecouple();                          abort = AbortStage.BURNUP;                          burnUpTime = Planetarium.GetUniversalTime();                          break;                      case AbortStage.BURNUP:                          if ((Planetarium.GetUniversalTime() - burnUpTime < 2) || (vesselState.speedVertical < 10))                          {                              core.thrust.tmode = MechJebModuleThrustController.TMode.DIRECT;                              core.attitude.attitudeTo(Vector3d.up' AttitudeReference.SURFACE_NORTH' this);                              double int_error = Math.Abs(Vector3d.Angle(vesselState.up' vesselState.forward));                              core.thrust.trans_spd_act = (int_error < 90) ? 100 : 0;                          }                          else                          {                              abort = AbortStage.LAND;                          }                          break;                      case AbortStage.LAND:                          core.thrust.users.Remove(this);                          core.GetComputerModule<MechJebModuleLandingAutopilot>().LandUntargeted(this);                          abort = AbortStage.LANDING;                          break;                      case AbortStage.LANDING:                          if (vessel.LandedOrSplashed)                          {                              abort = AbortStage.OFF;                          }                          break;                  }
Missing Default,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,DrawPageSettings,The following switch statement is missing a default case: switch (settingPageIndex)  			{  				case 0:  					GUILayout.BeginHorizontal();    					GUILayout.BeginVertical();  					ed.registry.Find(i => i.id == "Editable:RoverController.hPIDp").DrawItem();  					ed.registry.Find(i => i.id == "Editable:RoverController.hPIDi").DrawItem();  					ed.registry.Find(i => i.id == "Editable:RoverController.hPIDd").DrawItem();  					ed.registry.Find(i => i.id == "Editable:RoverController.terrainLookAhead").DrawItem();  		//			ed.registry.Find(i => i.id == "Value:RoverController.speedIntAcc").DrawItem();  					ed.registry.Find(i => i.id == "Editable:RoverController.tractionLimit").DrawItem();  					ed.registry.Find(i => i.id == "Toggle:RoverController.LimitAcceleration").DrawItem();  					GUILayout.EndVertical();    					GUILayout.BeginVertical();  					ed.registry.Find(i => i.id == "Editable:RoverController.sPIDp").DrawItem();  					ed.registry.Find(i => i.id == "Editable:RoverController.sPIDi").DrawItem();  					ed.registry.Find(i => i.id == "Editable:RoverController.sPIDd").DrawItem();  					ed.registry.Find(i => i.id == "Editable:RoverController.turnSpeed").DrawItem();  					ed.registry.Find(i => i.id == "Value:RoverController.traction").DrawItem();  					GUILayout.EndVertical();    					GUILayout.EndHorizontal();  					break;    				case 1:  					GUILayout.BeginHorizontal();    					GUILayout.BeginVertical();  					ed.registry.Find(i => i.id == "Editable:WaypointWindow.MohoMapdist").DrawItem();  					ed.registry.Find(i => i.id == "Editable:WaypointWindow.EveMapdist").DrawItem();  					ed.registry.Find(i => i.id == "Editable:WaypointWindow.GillyMapdist").DrawItem();  					ed.registry.Find(i => i.id == "Editable:WaypointWindow.KerbinMapdist").DrawItem();  					ed.registry.Find(i => i.id == "Editable:WaypointWindow.MunMapdist").DrawItem();  					ed.registry.Find(i => i.id == "Editable:WaypointWindow.MinmusMapdist").DrawItem();  					ed.registry.Find(i => i.id == "Editable:WaypointWindow.DunaMapdist").DrawItem();  					ed.registry.Find(i => i.id == "Editable:WaypointWindow.IkeMapdist").DrawItem();  					GUILayout.EndVertical();    					GUILayout.BeginVertical();  					ed.registry.Find(i => i.id == "Editable:WaypointWindow.DresMapdist").DrawItem();  					ed.registry.Find(i => i.id == "Editable:WaypointWindow.JoolMapdist").DrawItem();  					ed.registry.Find(i => i.id == "Editable:WaypointWindow.LaytheMapdist").DrawItem();  					ed.registry.Find(i => i.id == "Editable:WaypointWindow.VallMapdist").DrawItem();  					ed.registry.Find(i => i.id == "Editable:WaypointWindow.TyloMapdist").DrawItem();  					ed.registry.Find(i => i.id == "Editable:WaypointWindow.BopMapdist").DrawItem();  					ed.registry.Find(i => i.id == "Editable:WaypointWindow.PolMapdist").DrawItem();  					ed.registry.Find(i => i.id == "Editable:WaypointWindow.EelooMapdist").DrawItem();  					GUILayout.EndVertical();    					GUILayout.EndHorizontal();  					break;  			}
Missing Default,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The following switch statement is missing a default case: switch (showPage)  				{  						case pages.waypoints: help.selTopic = ((IList)help.topics).IndexOf("Waypoints"); break;  						case pages.settings: help.selTopic = ((IList)help.topics).IndexOf("Settings"); break;  						case pages.routes: help.selTopic = ((IList)help.topics).IndexOf("Routes"); break;  				}
Missing Default,MuMech,MechJebModuleWaypointWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The following switch statement is missing a default case: switch (showPage)  			{  					case pages.waypoints: DrawPageWaypoints(); break;  					case pages.settings: DrawPageSettings(); break;  					case pages.routes: DrawPageRoutes(); break;  			}
Missing Default,MuMech,MechJebModuleWaypointHelpWindow,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\MechJebModuleWaypointWindow.cs,WindowGUI,The following switch statement is missing a default case: switch (topics[selTopic])  		 	{                  case "Rover Controller":  		 			HelpTopic("Holding a set Heading"' "To hold a specific heading just tick the box next to 'Heading control' and the autopilot will try to keep going for the entered heading." +  		 			          "\nThis also needs to be enabled when the autopilot is supposed to drive to a waypoint" +  		 			          "'Heading Error' simply shows the error between current heading and target heading.");  		 			HelpTopic("Holding a set Speed"' "To hold a specific speed just tick the box next to 'Speed control' and the autopilot will try to keep going at the entered speed." +  		 			          "\nThis also needs to be enabled when the autopilot is supposed to drive to a waypoint" +  		 			          "'Speed Error' simply shows the error between current speed and target speed.");  		 			HelpTopic("More stability while driving and nice landings"' "If you turn on 'Stability Control' then the autopilot will use the reaction wheel's torque to keep the rover aligned with the surface." +  		 			          "\nThis means that if you make a jump the autopilot will try to align the rover in the best possible way to land as straight and flat as possible given the available time and torque." +  		 			          "\nBe aware that this doesn't make your rover indestructible' only relatively unlikely to land in a bad way." +  		 			          "\n\n'Stability Control' will also limit the brake to reduce the chances of flipping over from too much braking power." +  		 			          "\nSee 'Settings' -> 'Traction and Braking'. This setting is also saved per vessel.");  		 			HelpTopic("Brake on Pilot Eject"' "With this option enabled the rover will stop if the pilot (on manned rovers) should get thrown out of his seat.");  		 			HelpTopic("Target Speed"' "Current speed the autopilot tries to achieve.");  		 			HelpTopic("Waypoint Index"' "Overview of waypoints and which the autopilot is currently driving to.");  		 			HelpTopic("Button 'Waypoints'"' "Opens the waypoint list to set up a route.");  		 			HelpTopic("Button 'Follow' / 'Stop'"' "This sets the autopilot to drive along the set route starting at the first waypoint. Only visible when atleast one waypoint is set." +  		 			          "\n\nAlt click will set the autopilot to 'Loop Mode' which will make it go for the first waypoint again after reaching the last." +  		 			          "If the only waypoint happens to be a target it will keep following that instead of only going to it once." +  		 			          "\n\nIf the autopilot is already active the 'Follow' button will turn into the 'Stop' button which will obviously stop it when pressed.");  		 			HelpTopic("Button 'To Target'"' "Clears the route' adds the target as only waypoint and starts the autopilot. Only visible with a selected target." +  		 			          "\n\nAlt click will set the autopilot to 'Loop Mode' which will make it continue to follow the target' pausing when near it instead of turning off then.");  		 			HelpTopic("Button 'Add Target'"' "Adds the selected target as a waypoint either at the end of the route or before the selected waypoint. Only visible with a selected target.");  		 			break;    		 		case "Waypoints":  		 			HelpTopic("Adding Waypoints"' "Adds a new waypoint to the route at the end or before the currently selected waypoint' " +  		 			          "simply click the terrain or somewhere on the body in Mapview." +  		 			          "\n\nAlt clicking will reverse the route for easier going back and holding Alt while clicking the terrain or body in Mapview will allow to add more waypoints without having to click the button again.");  		 			HelpTopic("Removing Waypoints"' "Removes the currently selected waypoint." +  		 			          "\n\nAlt clicking will remove all waypoints.");  		 			HelpTopic("Reordering Waypoints"' "'Up' and 'Down' will move the selected waypoint up or down in the list' Alt clicking will move it to the top or bottom respectively.");  		 			HelpTopic("Waypoint Radius"' "Radius defines the distance to the center of the waypoint after which the waypoint will be considered 'reached'." +  		 			          "\n\nA radius of 5m (default) simply means that when you're 5m from the waypoint away the autopilot will jump to the next or turn off if it was the last." +  		 			          "\n\nThe 'A' button behind the textfield will set the entered radius for all waypoints.");  		 			HelpTopic("Speedlimits"' "The two speed textfields represent the minimum and maximum speed for the waypoint." +  		 			          "\n\nThe maximum speed is the speed the autopilot tries to reach to get to the waypoint." +  		 			          "\n\nThe minimum speed was before used to set the speed with which the autopilot will go through the waypoint' but that got reworked now to be based on the next waypoint's max. speed and the turn needed at the waypoint." +  		 			          "\n\nI have no idea what this will currently do if set so better just leave it at 0..." +  		 			          "\n\nThe 'A' buttons set their respective speed for all waypoints.");  		 			HelpTopic("Quicksaving at a Waypoint"' "Clicking the 'QS' button will turn on QuickSave for that waypoint." +  		 			          "\n\nThis will make the autopilot stop and try to quicksave at that waypoint and then continue. A QuickSave waypoint has yellow text instead of white." +  		 			          "\n\nSmall sideeffect: leaving the throttle up will prevent the saving from occurring effectively pausing the autopilot at that point until interefered with. (Discovered by Greys)" +  		 			          "\n\nAlt clicking will toggle QS for all waypoints including the clicked one.");  		 			HelpTopic("Changing the current target Waypoint"' "Alt clicking a waypoint will mark it as the current target waypoint. The active waypoint has a green tinted background.");  		 			break;    		 		case "Routes":  		 			HelpTopic("Routes Help"' "The empty textfield is for saving routes' enter a name there before clicking 'Save'." +  		 			          "\n\nTo load a route simply select one from the list and click 'Load'." +  		 			          "\n\nTo delete a route simply select it and a 'Delete' button will appear right of it.");  		 			break;    		 		case "Settings":  		 			HelpTopic("Heading / Speed PID"' "These parameters control the behaviour of the heading's / speed's PID. Saved globally so NO TOUCHING unless you know what you're doing (or atleast know how to write down numbers to restore it if you mess up)");  		 			HelpTopic("Safe Turn Speed"' "'Safe Turn Speed' tells the autopilot which speed the rover can usually go full turn through corners without tipping over." +  		 			          "\n\nGiven how differently terrain can be and other influences you can just leave it at 3 m/s but if you're impatient or just want to experiment feel free to test around. Saved per vessel type (same named vessels will share the setting).");  		 			HelpTopic("Traction and Braking"' "'Traction' shows in % how many wheels have ground contact." +  		 			          "\n'Traction Brake Limit' defines what traction is atleast needed for the autopilot to still apply the brakes (given 'Stability Control' is active) even if you hold the brake down." +  		 			          "\nThis means the default setting of 75 will make it brake only if atleast 3 wheels have ground contact." +  		 			          "\n'Traction Brake Limit' is saved per vessel type." +  		 			          "\n\nIf you have 'Stability Control' off then it won't take care of your brake and you can flip as much as you want.");  		 			HelpTopic("Changing the route height in Mapview"' "These values define offsets for the route height in Mapview. Given how weird it's set up it can be that they are too high or too low so I added these for easier adjusting. Saved globally' I think.");  		 			break;  		 	}
Missing Default,MuMech,MechJebModuleScriptActionAscent,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionAscent.cs,WindowGUI,The following switch statement is missing a default case: switch (autopilot.ascentPathIdxPublic)              {                  case ascentType.CLASSIC:                      GUILayout.Label("CLASSIC ASCENT to " + (autopilot.desiredOrbitAltitude / 1000.0) + "km");                      break;                  case ascentType.GRAVITYTURN:                      GUILayout.Label("GravityTurn™ ASCENT to " + (autopilot.desiredOrbitAltitude / 1000.0) + "km");                      break;                  case ascentType.PVG:                      GUILayout.Label("PVG ASCENT to " + (autopilot.desiredOrbitAltitude / 1000.0) + "x" + ((ascentPath as MechJebModuleAscentPVG).desiredApoapsis / 1000.0) + "km");                      break;              }
Missing Default,MuMech,MechJebModuleScriptActionSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionSmartASS.cs,WindowGUI,The following switch statement is missing a default case: switch(mode)  				{  					case MechJebModuleSmartASS.Mode.ORBITAL:  					case MechJebModuleSmartASS.Mode.TARGET:  						showForceRol = true;  						break;  					case MechJebModuleSmartASS.Mode.ADVANCED:  						GUILayout.BeginHorizontal(GUILayout.Width(220));  						advReference = (AttitudeReference)GuiUtils.ComboBox.Box((int)advReference' ReferenceTexts' ReferenceTexts);  						GUILayout.EndHorizontal();  						GUILayout.BeginHorizontal(GUILayout.Width(200));  						advDirection = (Vector6.Direction)GuiUtils.ComboBox.Box((int)advDirection' DirectionTexts' DirectionTexts);  						GUILayout.EndHorizontal();  						showForceRol = true;  						break;  				}
Missing Default,MuMech,MechJebModuleScriptActionSmartASS,C:\research\architectureSmells\repos\MuMech_MechJeb2\MechJeb2\ScriptsModule\MechJebModuleScriptActionSmartASS.cs,WindowGUI,The following switch statement is missing a default case: switch(target)  				{  				    case MechJebModuleSmartASS.Target.SURFACE:  						GUILayout.Label(""' GUI.skin.label' GUILayout.ExpandWidth(true));  						forceYaw = GUILayout.Toggle(forceYaw' "Heading: "' GUILayout.ExpandWidth(false));  						srfHdg.text = GUILayout.TextField(srfHdg.text' GUILayout.ExpandWidth(false)' GUILayout.Width(37));  						GUILayout.Label("°"' GUILayout.ExpandWidth(true));  						forcePitch = GUILayout.Toggle(forcePitch' "Pitch: "' GUILayout.ExpandWidth(false));  						srfPit.text = GUILayout.TextField(srfPit.text' GUILayout.ExpandWidth(false)' GUILayout.Width(37));  						GUILayout.Label("°"' GUILayout.ExpandWidth(true));  						forceRol = GUILayout.Toggle(forceRol' "Roll: "' GUILayout.ExpandWidth(false));  						srfRol.text = GUILayout.TextField(srfRol.text' GUILayout.ExpandWidth(false)' GUILayout.Width(37));  						GUILayout.Label("°"' GUILayout.ExpandWidth(false));  				        break;  					case MechJebModuleSmartASS.Target.SURFACE_PROGRADE:  				    case MechJebModuleSmartASS.Target.SURFACE_RETROGRADE:  						GUILayout.Label(""' GUI.skin.label' GUILayout.ExpandWidth(true));  						forcePitch = GUILayout.Toggle(forcePitch' "Pitch: "' GUILayout.ExpandWidth(false));  						srfVelPit.text = GUILayout.TextField(srfVelPit.text' GUILayout.ExpandWidth(false)' GUILayout.Width(37));  						GUILayout.Label("°"' GUILayout.ExpandWidth(true));  						forceRol = GUILayout.Toggle(forceRol' "Roll: "' GUILayout.ExpandWidth(false));  						srfVelRol.text = GUILayout.TextField(srfVelRol.text' GUILayout.ExpandWidth(false)' GUILayout.Width(37));  						GUILayout.Label("°"' GUILayout.ExpandWidth(true));  						forceYaw = GUILayout.Toggle(forceYaw' "Yaw: "' GUILayout.ExpandWidth(false));  						srfVelYaw.text = GUILayout.TextField(srfVelYaw.text' GUILayout.ExpandWidth(false)' GUILayout.Width(37));  						GUILayout.Label("°"' GUILayout.ExpandWidth(false));  						break;  				}
