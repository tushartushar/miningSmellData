Implementation smell,Namespace,Class,File,Method,Description
Long Statement,QuantConnect.VisualStudioPlugin,SolutionExplorerMenuCommand,C:\repos\QuantConnect_Lean\VisualStudioPlugin\SolutionExplorerMenuCommand.cs,ExecuteOnProject,The length of the statement  "                            VsUtils.ShowMessageBox(this.ServiceProvider' "Failed to create a project"' $"Failed to create a project {selectedProjectName}"); " is 128.
Empty Catch Block,QuantConnect.VisualStudioPlugin,ProjectFinder,C:\repos\QuantConnect_Lean\VisualStudioPlugin\ProjectFinder.cs,ReadProjectAssociations,The method has an empty catch block.
Empty Catch Block,QuantConnect.VisualStudioPlugin,ProjectFinder,C:\repos\QuantConnect_Lean\VisualStudioPlugin\ProjectFinder.cs,ReadProjectAssociations,The method has an empty catch block.
Empty Catch Block,QuantConnect.VisualStudioPlugin,ProjectFinder,C:\repos\QuantConnect_Lean\VisualStudioPlugin\ProjectFinder.cs,ReadProjectAssociations,The method has an empty catch block.
Magic Number,QuantConnect.VisualStudioPlugin,SolutionExplorerMenuCommand,C:\repos\QuantConnect_Lean\VisualStudioPlugin\SolutionExplorerMenuCommand.cs,CompileProjectOnServer,The following statement contains a magic number: while (compileStatus.State == Api.CompileState.InQueue)              {                  Thread.Sleep(5000);                  compileStatus = api.ReadCompile(projectId' compileId);              }
Magic Number,QuantConnect.VisualStudioPlugin,SolutionExplorerMenuCommand,C:\repos\QuantConnect_Lean\VisualStudioPlugin\SolutionExplorerMenuCommand.cs,BacktestProjectOnServer,The following statement contains a magic number: while (!backtestStatus.Completed)              {                  Thread.Sleep(5000);                  backtestStatus = api.ReadBacktest(projectId' backtestId);              }
