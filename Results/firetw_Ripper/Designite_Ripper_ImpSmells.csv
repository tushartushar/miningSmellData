Implementation smell,Namespace,Class,File,Method,Description
Long Method,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The method has 103 lines of code.
Complex Method,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,Cyclomatic complexity of the method is 8
Complex Method,Ripper.TaskDispather,MjTask,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\MjTask.cs,DoTask,Cyclomatic complexity of the method is 9
Complex Method,Ripper.TaskDispather,StartMjJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\MjTask.cs,MakeContainer,Cyclomatic complexity of the method is 40
Complex Method,Ripper.TaskDispather,SpecialTask,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\SepcialTask.cs,DoTask,Cyclomatic complexity of the method is 13
Long Parameter List,Ripper,RipperWebRequest,C:\repos\firetw_Ripper\Ripper\Ripper\RipperWebRequest.cs,RequestPage,The method has 5 parameters.
Long Statement,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Login,The length of the statement  "	string url = "http://login.sina.com.cn/sso/prelogin.php?entry=miniblog&callback=sinaSSOController.preloginCallBack&user=" + uidbase64 + "&client=ssologin.js(v1.3.16)&rsakt=mod"; " is 177.
Long Statement,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Login,The length of the statement  "	str = "entry=weibo&gateway=1&from=&savestate=7&useticket=1&vsnf=1&su=" + uidbase64 + "&service=miniblog&servertime=" + servertime + "&nonce=" + nonce + "&pwencode=rsa2&rsakv=" + rsakv + "&sp=" + password + "&encoding=utf-8&prelt=34&url=" + HttpUtility.UrlEncode ("http://weibo.com/ajaxlogin.php?framelogin=1&callback=parent.sinaSSOController.feedBackUrlCallBack") + "&returntype=META"; " is 385.
Long Statement,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Login,The length of the statement  "	HttpWebRequest webRequest2 = (HttpWebRequest)WebRequest.Create ("http://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.5)"); " is 133.
Long Statement,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The length of the statement  "	System.Collections.ArrayList byteMessage = new System.Collections.ArrayList (System.Text.Encoding.Default.GetBytes (Message)); " is 126.
Long Statement,Ripper,RipperWebRequest,C:\repos\firetw_Ripper\Ripper\Ripper\RipperWebRequest.cs,GetHTML,The length of the statement  "	request.Accept = "image/gif' image/x-xbitmap' image/jpeg' image/pjpeg' application/vnd.ms-excel'" + " application/msword' application/x-shockwave-flash' */*"; " is 158.
Long Statement,Ripper,RipperWebRequest,C:\repos\firetw_Ripper\Ripper\Ripper\RipperWebRequest.cs,DownLoadFile,The length of the statement  "	request.Accept = "image/gif' image/x-xbitmap' image/jpeg' image/pjpeg' application/vnd.ms-excel'" + " application/msword' application/x-shockwave-flash' */*"; " is 158.
Long Statement,Ripper,MainWindow,C:\repos\firetw_Ripper\Ripper\Ripper\MainWindow.xaml.cs,btCollector_Click,The length of the statement  "	//<input name="username" tabIndex="1" class="W_input " type="text" maxLength="128" node-type="username" action-data="text=邮箱/会员帐号/手机号" action-type="text_copy" autocomplete="off" value=""/> " is 188.
Long Statement,Ripper,MainWindow,C:\repos\firetw_Ripper\Ripper\Ripper\MainWindow.xaml.cs,btCollector_Click,The length of the statement  "	//<input name="password" tabIndex="2" class="W_input " type="password" maxLength="24" node-type="password" action-type="text_copy" value=""/> " is 141.
Long Statement,Ripper,MainWindow,C:\repos\firetw_Ripper\Ripper\Ripper\MainWindow.xaml.cs,btCollector_Click,The length of the statement  "	WebTask wt1 = GetTask ("http://weibo.com/p/1005052814680487/weibo?is_search=0&visible=0&is_tag=0&profile_ftype=1&page=1#feedtop"' "I:/wb/笑话"' loginResult.CookieContainer); " is 171.
Long Statement,Ripper,MainWindow,C:\repos\firetw_Ripper\Ripper\Ripper\MainWindow.xaml.cs,btCollector_Click,The length of the statement  "	WebTask wt2 = GetTask ("http://weibo.com/p/1002061722052204/weibo?is_search=0&visible=0&is_tag=0&profile_ftype=1&page=1#feedtop"' "I:/wb/鬼脚七的2014"' loginResult.CookieContainer); " is 177.
Long Statement,Ripper,MainWindow,C:\repos\firetw_Ripper\Ripper\Ripper\MainWindow.xaml.cs,btCollector_Click,The length of the statement  "	WebTask wt3 = GetTask ("http://weibo.com/p/1035051182389073/weibo?is_search=0&visible=0&is_tag=0&profile_ftype=1&page=1#feedtop"' "I:/wb/任志强"' loginResult.CookieContainer); " is 172.
Long Statement,Ripper.TaskDispather,StartMjJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\MjTask.cs,Start,The length of the statement  "			Url = "http://guang.taobao.com/detail/index.htm?spm=a310p.2219213.6861921.232.yrLSmu&uid=78301140&sid=6781951878#!/s6758211290/?targetPage=1"' " is 142.
Long Statement,Ripper.TaskDispather,StartMjJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\MjTask.cs,Start,The length of the statement  "		Url = "http://guang.taobao.com/detail/index.htm?spm=a310p.2219213.6861921.232.yrLSmu&uid=78301140&sid=6781951878#!/s6758211290/?targetPage=1"' " is 142.
Long Statement,Ripper.TaskDispather,StartJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\SepcialTask.cs,Start,The length of the statement  "	//cc.Add(new Cookie("CNZZDATA950900"' "cnzz_eid%3D1027444223-1390573990-%26ntime%3D1390573990%26cnzz_a%3D0%26ltime%3D1390573985381"' "/*"' "365url.tk")); " is 153.
Long Statement,Ripper.TaskDispather,StartJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\SepcialTask.cs,Start,The length of the statement  "	cc.Add (new Cookie ("CNZZDATA950900"' "cnzz_eid%3D1027444223-1390573990-%26ntime%3D1390573990%26cnzz_a%3D1%26ltime%3D1390573985381"' "/*"' "365url.tk")); " is 153.
Long Statement,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,OnStatusCompletedHandler,The length of the statement  "		logger.Log (ClassName' function' string.Format ("{0}\r\n\t执行耗时:[{1}]秒"' task' (DateTime.Now - task.StartTime).TotalSeconds)' LogLevel.INFO); " is 140.
Long Statement,Ripper.TaskDispather,WbTask,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\WbTask.cs,DoTask,The length of the statement  "	string url = "http://guang.taobao.com/detail/index.htm?spm=a310p.2219213.6861921.232.yrLSmu&uid=78301140&sid=6781951878#!/s6758211290/?targetPage=1"; " is 149.
Long Statement,Ripper.TaskDispather,WbStartJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\WbTask.cs,StartJob,The length of the statement  "		Url = "http://guang.taobao.com/detail/index.htm?spm=a310p.2219213.6861921.232.yrLSmu&uid=78301140&sid=6781951878#!/s6758211290/?targetPage=1"' " is 142.
Empty Catch Block,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,Dispose,The method has an empty catch block.
Magic Number,Ripper.Config,ConfigUtils,C:\repos\firetw_Ripper\Ripper\Ripper\Config\ConfigUtils.cs,ConfigUtils,The following statement contains a magic number: MaxTaskCount = 20;  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Login,The following statement contains a magic number: try {  	int retCode = Login (uid' pwd' cc);  	result.Code = retCode;  	if (retCode == 0)  		result.CookieContainer = cc;  }  catch (Exception ex) {  	result.Code = -999;  	result.Exception = ex;  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Login,The following statement contains a magic number: result.Code = -999;  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Login,The following statement contains a magic number: for (pos += 8; pos < 100 + res2.Count (); pos++) {  	if (res2 [pos] < '0' || res2 [pos] > '9') {  		retcode = 0;  		break;  	}  	else if (res2 [pos] > '0' && res2 [pos] <= '9')  		break;  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Login,The following statement contains a magic number: for (pos += 8; pos < 100 + res2.Count (); pos++) {  	if (res2 [pos] < '0' || res2 [pos] > '9') {  		retcode = 0;  		break;  	}  	else if (res2 [pos] > '0' && res2 [pos] <= '9')  		break;  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Login,The following statement contains a magic number: pos += 8
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Login,The following statement contains a magic number: url = res2.Substring (start + 18' end - start - 18);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Login,The following statement contains a magic number: url = res2.Substring (start + 18' end - start - 18);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if (b < a.Length + 11) {  	throw new Exception ("Message too long for RSA");  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: while (d >= 0 && b > 0) {  	int e = (int)a [d--];  	if (e < 128) {  		c [--b] = Convert.ToByte (e);  	}  	else if ((e > 127) && (e < 2048)) {  		c [--b] = Convert.ToByte (((e & 63) | 128));  		c [--b] = Convert.ToByte ((e >> 6) | 192);  	}  	else {  		c [--b] = Convert.ToByte ((e & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 12) | 224));  	}  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: while (d >= 0 && b > 0) {  	int e = (int)a [d--];  	if (e < 128) {  		c [--b] = Convert.ToByte (e);  	}  	else if ((e > 127) && (e < 2048)) {  		c [--b] = Convert.ToByte (((e & 63) | 128));  		c [--b] = Convert.ToByte ((e >> 6) | 192);  	}  	else {  		c [--b] = Convert.ToByte ((e & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 12) | 224));  	}  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: while (d >= 0 && b > 0) {  	int e = (int)a [d--];  	if (e < 128) {  		c [--b] = Convert.ToByte (e);  	}  	else if ((e > 127) && (e < 2048)) {  		c [--b] = Convert.ToByte (((e & 63) | 128));  		c [--b] = Convert.ToByte ((e >> 6) | 192);  	}  	else {  		c [--b] = Convert.ToByte ((e & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 12) | 224));  	}  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: while (d >= 0 && b > 0) {  	int e = (int)a [d--];  	if (e < 128) {  		c [--b] = Convert.ToByte (e);  	}  	else if ((e > 127) && (e < 2048)) {  		c [--b] = Convert.ToByte (((e & 63) | 128));  		c [--b] = Convert.ToByte ((e >> 6) | 192);  	}  	else {  		c [--b] = Convert.ToByte ((e & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 12) | 224));  	}  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: while (d >= 0 && b > 0) {  	int e = (int)a [d--];  	if (e < 128) {  		c [--b] = Convert.ToByte (e);  	}  	else if ((e > 127) && (e < 2048)) {  		c [--b] = Convert.ToByte (((e & 63) | 128));  		c [--b] = Convert.ToByte ((e >> 6) | 192);  	}  	else {  		c [--b] = Convert.ToByte ((e & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 12) | 224));  	}  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: while (d >= 0 && b > 0) {  	int e = (int)a [d--];  	if (e < 128) {  		c [--b] = Convert.ToByte (e);  	}  	else if ((e > 127) && (e < 2048)) {  		c [--b] = Convert.ToByte (((e & 63) | 128));  		c [--b] = Convert.ToByte ((e >> 6) | 192);  	}  	else {  		c [--b] = Convert.ToByte ((e & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 12) | 224));  	}  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: while (d >= 0 && b > 0) {  	int e = (int)a [d--];  	if (e < 128) {  		c [--b] = Convert.ToByte (e);  	}  	else if ((e > 127) && (e < 2048)) {  		c [--b] = Convert.ToByte (((e & 63) | 128));  		c [--b] = Convert.ToByte ((e >> 6) | 192);  	}  	else {  		c [--b] = Convert.ToByte ((e & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 12) | 224));  	}  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: while (d >= 0 && b > 0) {  	int e = (int)a [d--];  	if (e < 128) {  		c [--b] = Convert.ToByte (e);  	}  	else if ((e > 127) && (e < 2048)) {  		c [--b] = Convert.ToByte (((e & 63) | 128));  		c [--b] = Convert.ToByte ((e >> 6) | 192);  	}  	else {  		c [--b] = Convert.ToByte ((e & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 12) | 224));  	}  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: while (d >= 0 && b > 0) {  	int e = (int)a [d--];  	if (e < 128) {  		c [--b] = Convert.ToByte (e);  	}  	else if ((e > 127) && (e < 2048)) {  		c [--b] = Convert.ToByte (((e & 63) | 128));  		c [--b] = Convert.ToByte ((e >> 6) | 192);  	}  	else {  		c [--b] = Convert.ToByte ((e & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 12) | 224));  	}  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: while (d >= 0 && b > 0) {  	int e = (int)a [d--];  	if (e < 128) {  		c [--b] = Convert.ToByte (e);  	}  	else if ((e > 127) && (e < 2048)) {  		c [--b] = Convert.ToByte (((e & 63) | 128));  		c [--b] = Convert.ToByte ((e >> 6) | 192);  	}  	else {  		c [--b] = Convert.ToByte ((e & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 12) | 224));  	}  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: while (d >= 0 && b > 0) {  	int e = (int)a [d--];  	if (e < 128) {  		c [--b] = Convert.ToByte (e);  	}  	else if ((e > 127) && (e < 2048)) {  		c [--b] = Convert.ToByte (((e & 63) | 128));  		c [--b] = Convert.ToByte ((e >> 6) | 192);  	}  	else {  		c [--b] = Convert.ToByte ((e & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 12) | 224));  	}  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: while (d >= 0 && b > 0) {  	int e = (int)a [d--];  	if (e < 128) {  		c [--b] = Convert.ToByte (e);  	}  	else if ((e > 127) && (e < 2048)) {  		c [--b] = Convert.ToByte (((e & 63) | 128));  		c [--b] = Convert.ToByte ((e >> 6) | 192);  	}  	else {  		c [--b] = Convert.ToByte ((e & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 12) | 224));  	}  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: while (d >= 0 && b > 0) {  	int e = (int)a [d--];  	if (e < 128) {  		c [--b] = Convert.ToByte (e);  	}  	else if ((e > 127) && (e < 2048)) {  		c [--b] = Convert.ToByte (((e & 63) | 128));  		c [--b] = Convert.ToByte ((e >> 6) | 192);  	}  	else {  		c [--b] = Convert.ToByte ((e & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 12) | 224));  	}  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: while (d >= 0 && b > 0) {  	int e = (int)a [d--];  	if (e < 128) {  		c [--b] = Convert.ToByte (e);  	}  	else if ((e > 127) && (e < 2048)) {  		c [--b] = Convert.ToByte (((e & 63) | 128));  		c [--b] = Convert.ToByte ((e >> 6) | 192);  	}  	else {  		c [--b] = Convert.ToByte ((e & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  		c [--b] = Convert.ToByte (((e >> 12) | 224));  	}  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if (e < 128) {  	c [--b] = Convert.ToByte (e);  }  else if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if (e < 128) {  	c [--b] = Convert.ToByte (e);  }  else if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if (e < 128) {  	c [--b] = Convert.ToByte (e);  }  else if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if (e < 128) {  	c [--b] = Convert.ToByte (e);  }  else if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if (e < 128) {  	c [--b] = Convert.ToByte (e);  }  else if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if (e < 128) {  	c [--b] = Convert.ToByte (e);  }  else if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if (e < 128) {  	c [--b] = Convert.ToByte (e);  }  else if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if (e < 128) {  	c [--b] = Convert.ToByte (e);  }  else if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if (e < 128) {  	c [--b] = Convert.ToByte (e);  }  else if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if (e < 128) {  	c [--b] = Convert.ToByte (e);  }  else if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if (e < 128) {  	c [--b] = Convert.ToByte (e);  }  else if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if (e < 128) {  	c [--b] = Convert.ToByte (e);  }  else if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if (e < 128) {  	c [--b] = Convert.ToByte (e);  }  else if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if (e < 128) {  	c [--b] = Convert.ToByte (e);  }  else if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: if ((e > 127) && (e < 2048)) {  	c [--b] = Convert.ToByte (((e & 63) | 128));  	c [--b] = Convert.ToByte ((e >> 6) | 192);  }  else {  	c [--b] = Convert.ToByte ((e & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  	c [--b] = Convert.ToByte (((e >> 12) | 224));  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: c [--b] = Convert.ToByte (((e & 63) | 128));  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: c [--b] = Convert.ToByte (((e & 63) | 128));  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: c [--b] = Convert.ToByte ((e >> 6) | 192);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: c [--b] = Convert.ToByte ((e >> 6) | 192);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: c [--b] = Convert.ToByte ((e & 63) | 128);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: c [--b] = Convert.ToByte ((e & 63) | 128);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: c [--b] = Convert.ToByte (((e >> 6) & 63) | 128);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: c [--b] = Convert.ToByte (((e >> 12) | 224));  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: c [--b] = Convert.ToByte (((e >> 12) | 224));  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: while (b > 2) {  	temp [0] = Convert.ToByte (0);  	while (temp [0] == 0)  		rand.NextBytes (temp);  	c [--b] = temp [0];  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,pkcs1pad2,The following statement contains a magic number: c [--b] = 2;  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,RSASetPublic,The following statement contains a magic number: n = new BigInteger (a' 16);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,RSASetPublic,The following statement contains a magic number: e = new BigInteger (b' 16);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: if ((use = messageLen % 3) > 0) {  	for (int i = 0; i < 3 - use; i++)  		byteMessage.Add (empty);  	page++;  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: if ((use = messageLen % 3) > 0) {  	for (int i = 0; i < 3 - use; i++)  		byteMessage.Add (empty);  	page++;  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < 3 - use; i++)  	byteMessage.Add (empty);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: outmessage = new System.Text.StringBuilder (page * 4);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	int[] outstr = new int[4];  	outstr [0] = instr [0] >> 2;  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: instr [0] = (byte)byteMessage [i * 3];  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: instr [1] = (byte)byteMessage [i * 3 + 1];  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: instr [2] = (byte)byteMessage [i * 3 + 2];  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: instr [2] = (byte)byteMessage [i * 3 + 2];  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: instr [2] = (byte)byteMessage [i * 3 + 2];  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: outstr [0] = instr [0] >> 2;  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: if (!instr [1].Equals (empty))  	outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  else  	outstr [2] = 64;  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: if (!instr [1].Equals (empty))  	outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  else  	outstr [2] = 64;  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: if (!instr [1].Equals (empty))  	outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  else  	outstr [2] = 64;  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: if (!instr [1].Equals (empty))  	outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  else  	outstr [2] = 64;  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: if (!instr [1].Equals (empty))  	outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  else  	outstr [2] = 64;  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: if (!instr [1].Equals (empty))  	outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  else  	outstr [2] = 64;  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: outstr [2] = 64;  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: outstr [2] = 64;  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: if (!instr [2].Equals (empty))  	outstr [3] = (instr [2] & 0x3f);  else  	outstr [3] = 64;  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: if (!instr [2].Equals (empty))  	outstr [3] = (instr [2] & 0x3f);  else  	outstr [3] = 64;  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: if (!instr [2].Equals (empty))  	outstr [3] = (instr [2] & 0x3f);  else  	outstr [3] = 64;  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: if (!instr [2].Equals (empty))  	outstr [3] = (instr [2] & 0x3f);  else  	outstr [3] = 64;  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: if (!instr [2].Equals (empty))  	outstr [3] = (instr [2] & 0x3f);  else  	outstr [3] = 64;  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: outstr [3] = (instr [2] & 0x3f);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: outstr [3] = (instr [2] & 0x3f);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: outstr [3] = 64;  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: outstr [3] = 64;  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: outmessage.Append (Base64Code [outstr [2]]);  
Magic Number,Ripper,SinaLogin,C:\repos\firetw_Ripper\Ripper\Ripper\SinaLogin.cs,Base64Code,The following statement contains a magic number: outmessage.Append (Base64Code [outstr [3]]);  
Magic Number,Ripper,RipperWebRequest,C:\repos\firetw_Ripper\Ripper\Ripper\RipperWebRequest.cs,DownLoadFile,The following statement contains a magic number: try {  	response = (HttpWebResponse)request.GetResponse ();  	//_Cookies = response.Cookies;  	Stream st = response.GetResponseStream ();  	long len = response.ContentLength;  	FileStream fs = new FileStream (savePath' FileMode.Create' FileAccess.Write);  	//读取的字节总数  	int readCnt = 0;  	//每次读取的字节数  	int perCnt = 0;  	while (readCnt < len) {  		byte[] bt = new byte[1024];  		perCnt = st.Read (bt' 0' bt.Length);  		readCnt += perCnt;  		//根据读取的字节数来写入文件  		if (perCnt == bt.Length) {  			fs.Write (bt' 0' bt.Length);  		}  		else {  			fs.Write (bt' 0' perCnt);  		}  	}  	fs.Close ();  	return true;  }  catch (Exception ex) {  	Console.WriteLine (string.Format ("下载文件({0})时出错！"' strFileUrl)' ex);  	return false;  }  
Magic Number,Ripper,RipperWebRequest,C:\repos\firetw_Ripper\Ripper\Ripper\RipperWebRequest.cs,DownLoadFile,The following statement contains a magic number: while (readCnt < len) {  	byte[] bt = new byte[1024];  	perCnt = st.Read (bt' 0' bt.Length);  	readCnt += perCnt;  	//根据读取的字节数来写入文件  	if (perCnt == bt.Length) {  		fs.Write (bt' 0' bt.Length);  	}  	else {  		fs.Write (bt' 0' perCnt);  	}  }  
Magic Number,Ripper.TaskDispather,FetionWebTask,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\FetionWebTask.cs,browser_Loaded,The following statement contains a magic number: Console.WriteLine (2);  
Magic Number,Ripper.TaskDispather,StartMjJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\MjTask.cs,Start,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	WebContext context = new WebContext {  		Url = "http://guang.taobao.com/detail/index.htm?spm=a310p.2219213.6861921.232.yrLSmu&uid=78301140&sid=6781951878#!/s6758211290/?targetPage=1"'  		Dir = "I:/wb/mj"'  		Flag = "targetPage=1"'  		Start = 1'  		End = 68'  		Span = 1000  	};  	MjTask st = new MjTask (context);  	//list.Add(st);  }  
Magic Number,Ripper.TaskDispather,StartMjJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\MjTask.cs,Start,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	WebContext context = new WebContext {  		Url = "http://guang.taobao.com/detail/index.htm?spm=a310p.2219213.6861921.232.yrLSmu&uid=78301140&sid=6781951878#!/s6758211290/?targetPage=1"'  		Dir = "I:/wb/mj"'  		Flag = "targetPage=1"'  		Start = 1'  		End = 68'  		Span = 1000  	};  	MjTask st = new MjTask (context);  	//list.Add(st);  }  
Magic Number,Ripper.TaskDispather,StartMjJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\MjTask.cs,Start,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	WebContext context = new WebContext {  		Url = "http://guang.taobao.com/detail/index.htm?spm=a310p.2219213.6861921.232.yrLSmu&uid=78301140&sid=6781951878#!/s6758211290/?targetPage=1"'  		Dir = "I:/wb/mj"'  		Flag = "targetPage=1"'  		Start = 1'  		End = 68'  		Span = 1000  	};  	MjTask st = new MjTask (context);  	//list.Add(st);  }  
Magic Number,Ripper.TaskDispather,StartMjJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\MjTask.cs,MakeContainer,The following statement contains a magic number: using (StreamReader reader = new StreamReader (Path.Combine (path' "cookie.cookie"))) {  	while (reader.Peek () > 0) {  		line = reader.ReadLine ();  		if (Regex.IsMatch (line' "^-*$")) {  			container.Add (cookie);  			cookie = null;  		}  		else {  			Match match = Regex.Match (line' @"(.*)\s*[:=]\s(.*)");  			if (match.Success) {  				string key = match.Groups [1].Value.Trim ();  				string value = match.Groups [2].Value.Trim ();  				if (!string.IsNullOrEmpty (value)) {  					switch (key) {  					case "Domain":  						cookie.Domain = value;  						break;  					case "Path":  						cookie.Path = value;  						break;  					case "Port":  						cookie.Port = value;  						break;  					case "Secure":  						cookie.Secure = Boolean.Parse (value);  						break;  					case "When issued":  						//cookie.TimeStamp = Boolean.Parse(value);  						break;  					case "Expires":  						cookie.Expires = DateTime.Parse (value);  						break;  					case "Expired":  						cookie.Expires = DateTime.Parse (value);  						break;  					case "Don't save":  						cookie.Discard = Boolean.Parse (value);  						break;  					case "Comment":  					case "Version":  					case "String":  						break;  					case "Uri for comments":  						if (!string.IsNullOrEmpty (value))  							cookie.CommentUri = new Uri (value);  						break;  					default:  						cookie = new Cookie (key' value);  						break;  					}  				}  			}  		}  	}  }  
Magic Number,Ripper.TaskDispather,StartMjJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\MjTask.cs,MakeContainer,The following statement contains a magic number: while (reader.Peek () > 0) {  	line = reader.ReadLine ();  	if (Regex.IsMatch (line' "^-*$")) {  		container.Add (cookie);  		cookie = null;  	}  	else {  		Match match = Regex.Match (line' @"(.*)\s*[:=]\s(.*)");  		if (match.Success) {  			string key = match.Groups [1].Value.Trim ();  			string value = match.Groups [2].Value.Trim ();  			if (!string.IsNullOrEmpty (value)) {  				switch (key) {  				case "Domain":  					cookie.Domain = value;  					break;  				case "Path":  					cookie.Path = value;  					break;  				case "Port":  					cookie.Port = value;  					break;  				case "Secure":  					cookie.Secure = Boolean.Parse (value);  					break;  				case "When issued":  					//cookie.TimeStamp = Boolean.Parse(value);  					break;  				case "Expires":  					cookie.Expires = DateTime.Parse (value);  					break;  				case "Expired":  					cookie.Expires = DateTime.Parse (value);  					break;  				case "Don't save":  					cookie.Discard = Boolean.Parse (value);  					break;  				case "Comment":  				case "Version":  				case "String":  					break;  				case "Uri for comments":  					if (!string.IsNullOrEmpty (value))  						cookie.CommentUri = new Uri (value);  					break;  				default:  					cookie = new Cookie (key' value);  					break;  				}  			}  		}  	}  }  
Magic Number,Ripper.TaskDispather,StartMjJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\MjTask.cs,MakeContainer,The following statement contains a magic number: if (Regex.IsMatch (line' "^-*$")) {  	container.Add (cookie);  	cookie = null;  }  else {  	Match match = Regex.Match (line' @"(.*)\s*[:=]\s(.*)");  	if (match.Success) {  		string key = match.Groups [1].Value.Trim ();  		string value = match.Groups [2].Value.Trim ();  		if (!string.IsNullOrEmpty (value)) {  			switch (key) {  			case "Domain":  				cookie.Domain = value;  				break;  			case "Path":  				cookie.Path = value;  				break;  			case "Port":  				cookie.Port = value;  				break;  			case "Secure":  				cookie.Secure = Boolean.Parse (value);  				break;  			case "When issued":  				//cookie.TimeStamp = Boolean.Parse(value);  				break;  			case "Expires":  				cookie.Expires = DateTime.Parse (value);  				break;  			case "Expired":  				cookie.Expires = DateTime.Parse (value);  				break;  			case "Don't save":  				cookie.Discard = Boolean.Parse (value);  				break;  			case "Comment":  			case "Version":  			case "String":  				break;  			case "Uri for comments":  				if (!string.IsNullOrEmpty (value))  					cookie.CommentUri = new Uri (value);  				break;  			default:  				cookie = new Cookie (key' value);  				break;  			}  		}  	}  }  
Magic Number,Ripper.TaskDispather,StartMjJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\MjTask.cs,MakeContainer,The following statement contains a magic number: if (match.Success) {  	string key = match.Groups [1].Value.Trim ();  	string value = match.Groups [2].Value.Trim ();  	if (!string.IsNullOrEmpty (value)) {  		switch (key) {  		case "Domain":  			cookie.Domain = value;  			break;  		case "Path":  			cookie.Path = value;  			break;  		case "Port":  			cookie.Port = value;  			break;  		case "Secure":  			cookie.Secure = Boolean.Parse (value);  			break;  		case "When issued":  			//cookie.TimeStamp = Boolean.Parse(value);  			break;  		case "Expires":  			cookie.Expires = DateTime.Parse (value);  			break;  		case "Expired":  			cookie.Expires = DateTime.Parse (value);  			break;  		case "Don't save":  			cookie.Discard = Boolean.Parse (value);  			break;  		case "Comment":  		case "Version":  		case "String":  			break;  		case "Uri for comments":  			if (!string.IsNullOrEmpty (value))  				cookie.CommentUri = new Uri (value);  			break;  		default:  			cookie = new Cookie (key' value);  			break;  		}  	}  }  
Magic Number,Ripper.TaskDispather,StartJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\SepcialTask.cs,Start,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	WebContext context = new WebContext {  		Url = "http://365url.tk/thread0806.php?fid=2&search=&page=" + (i * 44 + 1)'  		Dir = "I:/wb/other"'  		Flag = "page=" + (i * 44 + 1)'  		Start = (i * 44 + 1)'  		End = (i + 1) * 44 + 1'  		Span = 1000  	};  	if (context.End == 441)  		context.End = 440;  	SpecialTask st = new SpecialTask (context);  	//list.Add(st);  }  
Magic Number,Ripper.TaskDispather,StartJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\SepcialTask.cs,Start,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	WebContext context = new WebContext {  		Url = "http://365url.tk/thread0806.php?fid=2&search=&page=" + (i * 44 + 1)'  		Dir = "I:/wb/other"'  		Flag = "page=" + (i * 44 + 1)'  		Start = (i * 44 + 1)'  		End = (i + 1) * 44 + 1'  		Span = 1000  	};  	if (context.End == 441)  		context.End = 440;  	SpecialTask st = new SpecialTask (context);  	//list.Add(st);  }  
Magic Number,Ripper.TaskDispather,StartJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\SepcialTask.cs,Start,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	WebContext context = new WebContext {  		Url = "http://365url.tk/thread0806.php?fid=2&search=&page=" + (i * 44 + 1)'  		Dir = "I:/wb/other"'  		Flag = "page=" + (i * 44 + 1)'  		Start = (i * 44 + 1)'  		End = (i + 1) * 44 + 1'  		Span = 1000  	};  	if (context.End == 441)  		context.End = 440;  	SpecialTask st = new SpecialTask (context);  	//list.Add(st);  }  
Magic Number,Ripper.TaskDispather,StartJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\SepcialTask.cs,Start,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	WebContext context = new WebContext {  		Url = "http://365url.tk/thread0806.php?fid=2&search=&page=" + (i * 44 + 1)'  		Dir = "I:/wb/other"'  		Flag = "page=" + (i * 44 + 1)'  		Start = (i * 44 + 1)'  		End = (i + 1) * 44 + 1'  		Span = 1000  	};  	if (context.End == 441)  		context.End = 440;  	SpecialTask st = new SpecialTask (context);  	//list.Add(st);  }  
Magic Number,Ripper.TaskDispather,StartJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\SepcialTask.cs,Start,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	WebContext context = new WebContext {  		Url = "http://365url.tk/thread0806.php?fid=2&search=&page=" + (i * 44 + 1)'  		Dir = "I:/wb/other"'  		Flag = "page=" + (i * 44 + 1)'  		Start = (i * 44 + 1)'  		End = (i + 1) * 44 + 1'  		Span = 1000  	};  	if (context.End == 441)  		context.End = 440;  	SpecialTask st = new SpecialTask (context);  	//list.Add(st);  }  
Magic Number,Ripper.TaskDispather,StartJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\SepcialTask.cs,Start,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	WebContext context = new WebContext {  		Url = "http://365url.tk/thread0806.php?fid=2&search=&page=" + (i * 44 + 1)'  		Dir = "I:/wb/other"'  		Flag = "page=" + (i * 44 + 1)'  		Start = (i * 44 + 1)'  		End = (i + 1) * 44 + 1'  		Span = 1000  	};  	if (context.End == 441)  		context.End = 440;  	SpecialTask st = new SpecialTask (context);  	//list.Add(st);  }  
Magic Number,Ripper.TaskDispather,StartJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\SepcialTask.cs,Start,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	WebContext context = new WebContext {  		Url = "http://365url.tk/thread0806.php?fid=2&search=&page=" + (i * 44 + 1)'  		Dir = "I:/wb/other"'  		Flag = "page=" + (i * 44 + 1)'  		Start = (i * 44 + 1)'  		End = (i + 1) * 44 + 1'  		Span = 1000  	};  	if (context.End == 441)  		context.End = 440;  	SpecialTask st = new SpecialTask (context);  	//list.Add(st);  }  
Magic Number,Ripper.TaskDispather,StartJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\SepcialTask.cs,Start,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	WebContext context = new WebContext {  		Url = "http://365url.tk/thread0806.php?fid=2&search=&page=" + (i * 44 + 1)'  		Dir = "I:/wb/other"'  		Flag = "page=" + (i * 44 + 1)'  		Start = (i * 44 + 1)'  		End = (i + 1) * 44 + 1'  		Span = 1000  	};  	if (context.End == 441)  		context.End = 440;  	SpecialTask st = new SpecialTask (context);  	//list.Add(st);  }  
Magic Number,Ripper.TaskDispather,StartJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\SepcialTask.cs,Start,The following statement contains a magic number: if (context.End == 441)  	context.End = 440;  
Magic Number,Ripper.TaskDispather,StartJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\SepcialTask.cs,Start,The following statement contains a magic number: if (context.End == 441)  	context.End = 440;  
Magic Number,Ripper.TaskDispather,StartJob,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\SepcialTask.cs,Start,The following statement contains a magic number: context.End = 440;  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,TaskManager,The following statement contains a magic number: Period = 500;  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,SetPeriod,The following statement contains a magic number: tickTimer.Change (100' Period);  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,AddTask,The following statement contains a magic number: lock (lockObject) {  	logger.Log (ClassName' function' Report ()' LogLevel.INFO);  	foreach (var item in tasks) {  		TaskCache.Enqueue (item);  	}  	if (ManagerState == ManagerState.Waiting)//说明任务执行完毕  	 {  		tickTimer.Change (100' Period);  	}  }  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,AddTask,The following statement contains a magic number: if (ManagerState == ManagerState.Waiting)//说明任务执行完毕   {  	tickTimer.Change (100' Period);  }  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,AddTask,The following statement contains a magic number: tickTimer.Change (100' Period);  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,Maintain,The following statement contains a magic number: lock (_taskDoing) {  	if (_taskDoing.Count > 10000) {  		_taskDoing.RemoveRange (10000' _SuspendTasks.Count - 10000);  	}  }  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,Maintain,The following statement contains a magic number: lock (_taskDoing) {  	if (_taskDoing.Count > 10000) {  		_taskDoing.RemoveRange (10000' _SuspendTasks.Count - 10000);  	}  }  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,Maintain,The following statement contains a magic number: lock (_taskDoing) {  	if (_taskDoing.Count > 10000) {  		_taskDoing.RemoveRange (10000' _SuspendTasks.Count - 10000);  	}  }  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,Maintain,The following statement contains a magic number: if (_taskDoing.Count > 10000) {  	_taskDoing.RemoveRange (10000' _SuspendTasks.Count - 10000);  }  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,Maintain,The following statement contains a magic number: if (_taskDoing.Count > 10000) {  	_taskDoing.RemoveRange (10000' _SuspendTasks.Count - 10000);  }  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,Maintain,The following statement contains a magic number: if (_taskDoing.Count > 10000) {  	_taskDoing.RemoveRange (10000' _SuspendTasks.Count - 10000);  }  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,Maintain,The following statement contains a magic number: _taskDoing.RemoveRange (10000' _SuspendTasks.Count - 10000);  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,Maintain,The following statement contains a magic number: _taskDoing.RemoveRange (10000' _SuspendTasks.Count - 10000);  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,Maintain,The following statement contains a magic number: lock (_SuspendTasks) {  	if (_SuspendTasks.Count > 10000) {  		_SuspendTasks.RemoveRange (10000' _SuspendTasks.Count - 10000);  	}  }  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,Maintain,The following statement contains a magic number: lock (_SuspendTasks) {  	if (_SuspendTasks.Count > 10000) {  		_SuspendTasks.RemoveRange (10000' _SuspendTasks.Count - 10000);  	}  }  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,Maintain,The following statement contains a magic number: lock (_SuspendTasks) {  	if (_SuspendTasks.Count > 10000) {  		_SuspendTasks.RemoveRange (10000' _SuspendTasks.Count - 10000);  	}  }  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,Maintain,The following statement contains a magic number: if (_SuspendTasks.Count > 10000) {  	_SuspendTasks.RemoveRange (10000' _SuspendTasks.Count - 10000);  }  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,Maintain,The following statement contains a magic number: if (_SuspendTasks.Count > 10000) {  	_SuspendTasks.RemoveRange (10000' _SuspendTasks.Count - 10000);  }  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,Maintain,The following statement contains a magic number: if (_SuspendTasks.Count > 10000) {  	_SuspendTasks.RemoveRange (10000' _SuspendTasks.Count - 10000);  }  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,Maintain,The following statement contains a magic number: _SuspendTasks.RemoveRange (10000' _SuspendTasks.Count - 10000);  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,Maintain,The following statement contains a magic number: _SuspendTasks.RemoveRange (10000' _SuspendTasks.Count - 10000);  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,StartTask,The following statement contains a magic number: lock (lockObject) {  	if (ManagerState == ManagerState.Full || ManagerState == ManagerState.Waiting) {  		tickTimer.Change (100' Period);  	}  }  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,StartTask,The following statement contains a magic number: if (ManagerState == ManagerState.Full || ManagerState == ManagerState.Waiting) {  	tickTimer.Change (100' Period);  }  
Magic Number,Ripper.TaskDispather,TaskManager,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\TaskManager.cs,StartTask,The following statement contains a magic number: tickTimer.Change (100' Period);  
Magic Number,Ripper.TaskDispather,WbTask,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\WbTask.cs,DoTask,The following statement contains a magic number: while (browser.ReadyState != WebBrowserReadyState.Complete) {  	Thread.Sleep (100);  }  
Magic Number,Ripper.TaskDispather,WbTask,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\WbTask.cs,DoTask,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,Ripper.TaskDispather,WbTask,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\WbTask.cs,browser_Loaded,The following statement contains a magic number: Console.WriteLine (2);  
Magic Number,Ripper.TaskDispather,WebTask,C:\repos\firetw_Ripper\Ripper\Ripper\TaskDispather\WebTask.cs,DoTask,The following statement contains a magic number: for (int index = 1; index <= 10; index++) {  	string url = orgUrl;  	if (index != 1) {  		url = url.Replace ("page=1"' "page=" + index);  	}  	_request = WebRequest.Create (url) as HttpWebRequest;  	if (_request == null)  		return;  	_request.CookieContainer = context.CookieContainer;  	HttpWebResponse response = (HttpWebResponse)_request.GetResponse ();  	Stream dataStream = response.GetResponseStream ();  	string html = string.Empty;  	using (StreamReader reader = new StreamReader (dataStream)) {  		html = reader.ReadToEnd ();  		string filePath = Path.Combine (context.Dir' index + ".html");  		if (File.Exists (filePath))  			File.Delete (filePath);  		File.WriteAllText (filePath' html);  	}  	Thread.Sleep (context.Span);  }  
