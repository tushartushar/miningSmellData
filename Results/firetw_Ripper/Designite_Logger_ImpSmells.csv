Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Logger,LogUtils,C:\repos\firetw_Ripper\Ripper\Logger\LogUtils.cs,Load,Cyclomatic complexity of the method is 26
Complex Method,Logger,FileLogger,C:\repos\firetw_Ripper\Ripper\Logger\FileLogger.cs,CheckFileSize,Cyclomatic complexity of the method is 11
Long Parameter List,Logger,FileLogger,C:\repos\firetw_Ripper\Ripper\Logger\FileLogger.cs,WriteFile,The method has 5 parameters.
Long Statement,Logger,ConsoleLogger,C:\repos\firetw_Ripper\Ripper\Logger\ConsoleLogger.cs,Log,The length of the statement  "	string result = string.Format (format' DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss")' string.IsNullOrEmpty (className) ? string.Empty : className' string.IsNullOrEmpty (function) ? string.Empty : function' level.ToString ()' string.IsNullOrEmpty (content) ? string.Empty : content); " is 282.
Long Statement,Logger,LogUtils,C:\repos\firetw_Ripper\Ripper\Logger\LogUtils.cs,OnConfigChanged,The length of the statement  "		LoggerManager.GetLog ().Log ("Logger.LogUtils"' "OnConfigChanged"' "日志变更发生异常[" + Thread.CurrentThread.ManagedThreadId + "]\r\n" + ex.ToString ()' LogLevel.ERROR); " is 162.
Long Statement,Logger,LogUtils,C:\repos\firetw_Ripper\Ripper\Logger\LogUtils.cs,OnWatchedFileChange,The length of the statement  "			LoggerManager.GetLog ().Log ("Logger.LogUtils"' "OnConfigChanged"' "日志变更发生异常[" + Thread.CurrentThread.ManagedThreadId + "]\r\n" + ex.ToString ()' LogLevel.ERROR); " is 162.
Long Statement,Logger,LogUtils,C:\repos\firetw_Ripper\Ripper\Logger\LogUtils.cs,Load,The length of the statement  "	using (System.IO.FileStream fs = System.IO.File.OpenRead (Path.Combine (AppDomain.CurrentDomain.BaseDirectory' "Config"' "Logger.xml"))) { " is 138.
Long Statement,Logger,FileLogger,C:\repos\firetw_Ripper\Ripper\Logger\FileLogger.cs,Log,The length of the statement  "				if (level > LogLevel.INFO && config.Level == LogLevel.DEBUG && config.FileDicts [LogLevel.DEBUG] != config.FileDicts [LogLevel.INFO]) { " is 135.
Long Statement,Logger,FileLogger,C:\repos\firetw_Ripper\Ripper\Logger\FileLogger.cs,WriteFile,The length of the statement  "			string result = string.Format (format' DateTime.Now.ToString ("yyyy-MM-dd HH:mm:ss")' string.IsNullOrEmpty (className) ? string.Empty : className' string.IsNullOrEmpty (function) ? string.Empty : function' level.ToString ()' string.IsNullOrEmpty (content) ? string.Empty : content); " is 282.
Long Statement,Logger,LoggerManager,C:\repos\firetw_Ripper\Ripper\Logger\LoggerManager.cs,LogUtils_OnLoggerConfigChanged,The length of the statement  "		GetLog ().Log ("Logger.LoggerManager"' "LogUtils_OnLoggerConfigChanged"' "日志配置发生变化[" + Thread.CurrentThread.Name + "] [" + Thread.CurrentThread.ManagedThreadId + "]"' LogLevel.INFO); " is 182.
Magic Number,Logger,LogUtils,C:\repos\firetw_Ripper\Ripper\Logger\LogUtils.cs,Load,The following statement contains a magic number: using (System.IO.FileStream fs = System.IO.File.OpenRead (Path.Combine (AppDomain.CurrentDomain.BaseDirectory' "Config"' "Logger.xml"))) {  	XElement element = XElement.Load (fs);  	Dicts.Clear ();  	foreach (XElement item in element.Elements ("Logger")) {  		string type = item.Attribute ("type").Value;  		XAttribute maxSizeAt = item.Attribute ("maxSize");  		int maxSize = maxSizeAt == null ? 10 : Convert.ToInt32 (maxSizeAt.Value);  		XAttribute fileCountAt = item.Attribute ("fileCount");  		int fileCount = fileCountAt == null ? 5 : Convert.ToInt32 (fileCountAt.Value);  		XAttribute dirAt = item.Attribute ("dir");  		string dir = dirAt == null ? "log" : dirAt.Value;  		LogLevel level = LogLevel.DEBUG;  		XAttribute minLevelAt = item.Attribute ("minLevel");  		XAttribute encodeAt = item.Attribute ("encode");  		string encode = encodeAt == null ? "utf-8" : encodeAt.Value;  		string minLevel = minLevelAt == null ? "debug" : minLevelAt.Value.Trim ().ToLower ();  		switch (minLevel) {  		case "debug":  			level = LogLevel.DEBUG;  			break;  		case "info":  			level = LogLevel.INFO;  			break;  		case "warn":  			level = LogLevel.WARN;  			break;  		case "error":  			level = LogLevel.ERROR;  			break;  		default:  			level = LogLevel.DEBUG;  			break;  		}  		LoggerConfig config = new LoggerConfig () {  			Type = type.ToLower ()'  			MaxSize = maxSize'  			FileCount = fileCount'  			Level = level'  			Dir = dir'  			Encode = encode  		};  		if (item.Element ("DEBUG") != null) {  			var xElement = item.Element ("DEBUG");  			if (xElement != null)  				config.FileDicts.Add (Logger.LogLevel.DEBUG' xElement.Value);  		}  		if (item.Element ("INFO") != null) {  			var xElement = item.Element ("INFO");  			if (xElement != null)  				config.FileDicts.Add (Logger.LogLevel.INFO' xElement.Value);  		}  		if (item.Element ("WARN") != null) {  			var xElement = item.Element ("WARN");  			if (xElement != null)  				config.FileDicts.Add (Logger.LogLevel.WARN' xElement.Value);  		}  		if (item.Element ("ERROR") != null) {  			var xElement = item.Element ("ERROR");  			if (xElement != null)  				config.FileDicts.Add (Logger.LogLevel.ERROR' xElement.Value);  		}  		Dicts.Add (config.Type' config);  	}  }  
Magic Number,Logger,LogUtils,C:\repos\firetw_Ripper\Ripper\Logger\LogUtils.cs,Load,The following statement contains a magic number: using (System.IO.FileStream fs = System.IO.File.OpenRead (Path.Combine (AppDomain.CurrentDomain.BaseDirectory' "Config"' "Logger.xml"))) {  	XElement element = XElement.Load (fs);  	Dicts.Clear ();  	foreach (XElement item in element.Elements ("Logger")) {  		string type = item.Attribute ("type").Value;  		XAttribute maxSizeAt = item.Attribute ("maxSize");  		int maxSize = maxSizeAt == null ? 10 : Convert.ToInt32 (maxSizeAt.Value);  		XAttribute fileCountAt = item.Attribute ("fileCount");  		int fileCount = fileCountAt == null ? 5 : Convert.ToInt32 (fileCountAt.Value);  		XAttribute dirAt = item.Attribute ("dir");  		string dir = dirAt == null ? "log" : dirAt.Value;  		LogLevel level = LogLevel.DEBUG;  		XAttribute minLevelAt = item.Attribute ("minLevel");  		XAttribute encodeAt = item.Attribute ("encode");  		string encode = encodeAt == null ? "utf-8" : encodeAt.Value;  		string minLevel = minLevelAt == null ? "debug" : minLevelAt.Value.Trim ().ToLower ();  		switch (minLevel) {  		case "debug":  			level = LogLevel.DEBUG;  			break;  		case "info":  			level = LogLevel.INFO;  			break;  		case "warn":  			level = LogLevel.WARN;  			break;  		case "error":  			level = LogLevel.ERROR;  			break;  		default:  			level = LogLevel.DEBUG;  			break;  		}  		LoggerConfig config = new LoggerConfig () {  			Type = type.ToLower ()'  			MaxSize = maxSize'  			FileCount = fileCount'  			Level = level'  			Dir = dir'  			Encode = encode  		};  		if (item.Element ("DEBUG") != null) {  			var xElement = item.Element ("DEBUG");  			if (xElement != null)  				config.FileDicts.Add (Logger.LogLevel.DEBUG' xElement.Value);  		}  		if (item.Element ("INFO") != null) {  			var xElement = item.Element ("INFO");  			if (xElement != null)  				config.FileDicts.Add (Logger.LogLevel.INFO' xElement.Value);  		}  		if (item.Element ("WARN") != null) {  			var xElement = item.Element ("WARN");  			if (xElement != null)  				config.FileDicts.Add (Logger.LogLevel.WARN' xElement.Value);  		}  		if (item.Element ("ERROR") != null) {  			var xElement = item.Element ("ERROR");  			if (xElement != null)  				config.FileDicts.Add (Logger.LogLevel.ERROR' xElement.Value);  		}  		Dicts.Add (config.Type' config);  	}  }  
Magic Number,Logger,LogUtils,C:\repos\firetw_Ripper\Ripper\Logger\LogUtils.cs,Load,The following statement contains a magic number: foreach (XElement item in element.Elements ("Logger")) {  	string type = item.Attribute ("type").Value;  	XAttribute maxSizeAt = item.Attribute ("maxSize");  	int maxSize = maxSizeAt == null ? 10 : Convert.ToInt32 (maxSizeAt.Value);  	XAttribute fileCountAt = item.Attribute ("fileCount");  	int fileCount = fileCountAt == null ? 5 : Convert.ToInt32 (fileCountAt.Value);  	XAttribute dirAt = item.Attribute ("dir");  	string dir = dirAt == null ? "log" : dirAt.Value;  	LogLevel level = LogLevel.DEBUG;  	XAttribute minLevelAt = item.Attribute ("minLevel");  	XAttribute encodeAt = item.Attribute ("encode");  	string encode = encodeAt == null ? "utf-8" : encodeAt.Value;  	string minLevel = minLevelAt == null ? "debug" : minLevelAt.Value.Trim ().ToLower ();  	switch (minLevel) {  	case "debug":  		level = LogLevel.DEBUG;  		break;  	case "info":  		level = LogLevel.INFO;  		break;  	case "warn":  		level = LogLevel.WARN;  		break;  	case "error":  		level = LogLevel.ERROR;  		break;  	default:  		level = LogLevel.DEBUG;  		break;  	}  	LoggerConfig config = new LoggerConfig () {  		Type = type.ToLower ()'  		MaxSize = maxSize'  		FileCount = fileCount'  		Level = level'  		Dir = dir'  		Encode = encode  	};  	if (item.Element ("DEBUG") != null) {  		var xElement = item.Element ("DEBUG");  		if (xElement != null)  			config.FileDicts.Add (Logger.LogLevel.DEBUG' xElement.Value);  	}  	if (item.Element ("INFO") != null) {  		var xElement = item.Element ("INFO");  		if (xElement != null)  			config.FileDicts.Add (Logger.LogLevel.INFO' xElement.Value);  	}  	if (item.Element ("WARN") != null) {  		var xElement = item.Element ("WARN");  		if (xElement != null)  			config.FileDicts.Add (Logger.LogLevel.WARN' xElement.Value);  	}  	if (item.Element ("ERROR") != null) {  		var xElement = item.Element ("ERROR");  		if (xElement != null)  			config.FileDicts.Add (Logger.LogLevel.ERROR' xElement.Value);  	}  	Dicts.Add (config.Type' config);  }  
Magic Number,Logger,LogUtils,C:\repos\firetw_Ripper\Ripper\Logger\LogUtils.cs,Load,The following statement contains a magic number: foreach (XElement item in element.Elements ("Logger")) {  	string type = item.Attribute ("type").Value;  	XAttribute maxSizeAt = item.Attribute ("maxSize");  	int maxSize = maxSizeAt == null ? 10 : Convert.ToInt32 (maxSizeAt.Value);  	XAttribute fileCountAt = item.Attribute ("fileCount");  	int fileCount = fileCountAt == null ? 5 : Convert.ToInt32 (fileCountAt.Value);  	XAttribute dirAt = item.Attribute ("dir");  	string dir = dirAt == null ? "log" : dirAt.Value;  	LogLevel level = LogLevel.DEBUG;  	XAttribute minLevelAt = item.Attribute ("minLevel");  	XAttribute encodeAt = item.Attribute ("encode");  	string encode = encodeAt == null ? "utf-8" : encodeAt.Value;  	string minLevel = minLevelAt == null ? "debug" : minLevelAt.Value.Trim ().ToLower ();  	switch (minLevel) {  	case "debug":  		level = LogLevel.DEBUG;  		break;  	case "info":  		level = LogLevel.INFO;  		break;  	case "warn":  		level = LogLevel.WARN;  		break;  	case "error":  		level = LogLevel.ERROR;  		break;  	default:  		level = LogLevel.DEBUG;  		break;  	}  	LoggerConfig config = new LoggerConfig () {  		Type = type.ToLower ()'  		MaxSize = maxSize'  		FileCount = fileCount'  		Level = level'  		Dir = dir'  		Encode = encode  	};  	if (item.Element ("DEBUG") != null) {  		var xElement = item.Element ("DEBUG");  		if (xElement != null)  			config.FileDicts.Add (Logger.LogLevel.DEBUG' xElement.Value);  	}  	if (item.Element ("INFO") != null) {  		var xElement = item.Element ("INFO");  		if (xElement != null)  			config.FileDicts.Add (Logger.LogLevel.INFO' xElement.Value);  	}  	if (item.Element ("WARN") != null) {  		var xElement = item.Element ("WARN");  		if (xElement != null)  			config.FileDicts.Add (Logger.LogLevel.WARN' xElement.Value);  	}  	if (item.Element ("ERROR") != null) {  		var xElement = item.Element ("ERROR");  		if (xElement != null)  			config.FileDicts.Add (Logger.LogLevel.ERROR' xElement.Value);  	}  	Dicts.Add (config.Type' config);  }  
Magic Number,Logger,FileLogger,C:\repos\firetw_Ripper\Ripper\Logger\FileLogger.cs,CheckFileSize,The following statement contains a magic number: if (info.Length > MaxSize * 1024 * 1024) {  	int tmpFileCount = MaxCount;  	if (File.Exists (fileName + "." + tmpFileCount)) {  		File.Delete (fileName + "." + tmpFileCount);  	}  	if (MaxCount == 0) {  		using (File.Create (fileName)) {  		}  		return;  	}  	while (tmpFileCount >= 0) {  		if (tmpFileCount > 0) {  			if (File.Exists (fileName + "." + (tmpFileCount - 1))) {  				File.Move (fileName + "." + (tmpFileCount - 1)' fileName + "." + tmpFileCount);  			}  		}  		else {  			File.Move (fileName' fileName + "." + tmpFileCount);  			using (File.Create (fileName)) {  			}  		}  		tmpFileCount--;  	}  }  
Magic Number,Logger,FileLogger,C:\repos\firetw_Ripper\Ripper\Logger\FileLogger.cs,CheckFileSize,The following statement contains a magic number: if (info.Length > MaxSize * 1024 * 1024) {  	int tmpFileCount = MaxCount;  	if (File.Exists (fileName + "." + tmpFileCount)) {  		File.Delete (fileName + "." + tmpFileCount);  	}  	if (MaxCount == 0) {  		using (File.Create (fileName)) {  		}  		return;  	}  	while (tmpFileCount >= 0) {  		if (tmpFileCount > 0) {  			if (File.Exists (fileName + "." + (tmpFileCount - 1))) {  				File.Move (fileName + "." + (tmpFileCount - 1)' fileName + "." + tmpFileCount);  			}  		}  		else {  			File.Move (fileName' fileName + "." + tmpFileCount);  			using (File.Create (fileName)) {  			}  		}  		tmpFileCount--;  	}  }  
