Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mono.Terminal,LineEditor,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\LineEditor.cs,WordForward,Cyclomatic complexity of the method is 8
Complex Method,Mono.Terminal,LineEditor,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\LineEditor.cs,WordBackward,Cyclomatic complexity of the method is 9
Complex Method,Mono.Terminal,LineEditor,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\LineEditor.cs,EditLoop,Cyclomatic complexity of the method is 9
Long Parameter List,ScriptCs.Hosting,ColoredConsoleLogProvider,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\ColoredConsoleLogProvider.cs,Log,The method has 5 parameters. Parameters: name' logLevel' messageFunc' exception' formatParameters
Long Parameter List,ScriptCs.Hosting,IModuleLoader,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\IModuleLoader.cs,Load,The method has 5 parameters. Parameters: config' modulePackagesPaths' hostBin' extension' moduleNames
Long Parameter List,ScriptCs.Hosting,ModuleConfiguration,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\ModuleConfiguration.cs,ModuleConfiguration,The method has 6 parameters. Parameters: cache' scriptName' isRepl' logLevel' debug' overrides
Long Parameter List,ScriptCs.Hosting,ModuleLoader,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\ModuleLoader.cs,ModuleLoader,The method has 6 parameters. Parameters: resolver' logProvider' addToCatalog' getLazyModules' fileSystem' assemblyUtility
Long Parameter List,ScriptCs.Hosting,ModuleLoader,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\ModuleLoader.cs,Load,The method has 5 parameters. Parameters: config' modulePackagesPaths' hostBin' extension' moduleNames
Long Parameter List,ScriptCs.Hosting,RuntimeServices,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\RuntimeServices.cs,RuntimeServices,The method has 9 parameters. Parameters: logProvider' overrides' console' scriptEngineType' scriptExecutorType' replType' initDirectoryCatalog' initializationServices' scriptName
Long Parameter List,ScriptCs.Hosting,VisualStudioSolution,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\VisualStudioSolution.cs,AddScriptcsProject,The method has 5 parameters. Parameters: scriptcsPath' workingPath' args' attach' projectGuid
Long Parameter List,ScriptCs.Hosting,VisualStudioSolutionWriter,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\VisualStudioSolutionWriter.cs,AddDirectoryProject,The method has 5 parameters. Parameters: solution' fs' currentDirectory' parent' nestedItems
Long Parameter List,ScriptCs.Contracts,IVisualStudioSolution,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\IVisualStudioSolution.cs,AddScriptcsProject,The method has 5 parameters. Parameters: scriptcsPath' workingPath' args' attach' projectGuid
Long Statement,ScriptCs,Guard,C:\repos\scriptcs_scriptcs\src\ScriptCs.Core\Guard.cs,AgainstNullArgument,The length of the statement  "                throw new ArgumentNullException(parameterName' string.Format(CultureInfo.InvariantCulture' "{0} is null."' parameterName)); " is 123.
Long Statement,ScriptCs,Guard,C:\repos\scriptcs_scriptcs\src\ScriptCs.Core\Guard.cs,AgainstNullArgumentIfNullable,The length of the statement  "                throw new ArgumentNullException(parameterName' string.Format(CultureInfo.InvariantCulture' "{0} is null."' parameterName)); " is 123.
Long Statement,ScriptCs,Guard,C:\repos\scriptcs_scriptcs\src\ScriptCs.Core\Guard.cs,AgainstNullArgumentProperty,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.InvariantCulture' "{0}.{1} is null."' parameterName' propertyName)' parameterName); " is 137.
Long Statement,ScriptCs,Guard,C:\repos\scriptcs_scriptcs\src\ScriptCs.Core\Guard.cs,AgainstNullArgumentPropertyIfNullable,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.InvariantCulture' "{0}.{1} is null."' parameterName' propertyName)' parameterName); " is 137.
Long Statement,ScriptCs.Hosting,InitializationServices,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\InitializationServices.cs,CreateContainer,The length of the statement  "            RegisterOverrideOrDefault<IAssemblyUtility>(builder' b => b.RegisterType<AssemblyUtility>().As<IAssemblyUtility>().SingleInstance()); " is 133.
Long Statement,ScriptCs.Hosting,InitializationServices,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\InitializationServices.cs,CreateContainer,The length of the statement  "            RegisterOverrideOrDefault<IPackageContainer>(builder' b => b.RegisterType<PackageContainer>().As<IPackageContainer>().SingleInstance()); " is 136.
Long Statement,ScriptCs.Hosting,InitializationServices,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\InitializationServices.cs,CreateContainer,The length of the statement  "            RegisterOverrideOrDefault<IPackageAssemblyResolver>(builder' b => b.RegisterType<PackageAssemblyResolver>().As<IPackageAssemblyResolver>().SingleInstance()); " is 157.
Long Statement,ScriptCs.Hosting,InitializationServices,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\InitializationServices.cs,CreateContainer,The length of the statement  "            RegisterOverrideOrDefault<IAssemblyResolver>(builder' b => b.RegisterType<AssemblyResolver>().As<IAssemblyResolver>().SingleInstance()); " is 136.
Long Statement,ScriptCs.Hosting,InitializationServices,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\InitializationServices.cs,CreateContainer,The length of the statement  "            RegisterOverrideOrDefault<IInstallationProvider>(builder' b => b.RegisterType<NugetInstallationProvider>().As<IInstallationProvider>().SingleInstance()); " is 153.
Long Statement,ScriptCs.Hosting,InitializationServices,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\InitializationServices.cs,CreateContainer,The length of the statement  "            RegisterOverrideOrDefault<IPackageInstaller>(builder' b => b.RegisterType<PackageInstaller>().As<IPackageInstaller>().SingleInstance()); " is 136.
Long Statement,ScriptCs.Hosting,InitializationServices,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\InitializationServices.cs,CreateContainer,The length of the statement  "            RegisterOverrideOrDefault<IModuleLoader>(builder' b => b.RegisterType<ModuleLoader>().As<IModuleLoader>().SingleInstance()); " is 124.
Long Statement,ScriptCs.Hosting,InitializationServices,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\InitializationServices.cs,CreateContainer,The length of the statement  "            RegisterOverrideOrDefault<IAppDomainAssemblyResolver>(builder' b => b.RegisterType<AppDomainAssemblyResolver>().As<IAppDomainAssemblyResolver>().SingleInstance()); " is 163.
Long Statement,ScriptCs.Hosting,InitializationServices,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\InitializationServices.cs,CreateContainer,The length of the statement  "            RegisterOverrideOrDefault<IFilePreProcessor>(builder' b => b.RegisterType<FilePreProcessor>().As<IFilePreProcessor>().SingleInstance()); " is 136.
Long Statement,ScriptCs.Hosting,ModuleLoader,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\ModuleLoader.cs,Load,The length of the statement  "            if (moduleNames.Length == 1 && DefaultCSharpModules.ContainsKey(moduleNames[0]) && (string.IsNullOrWhiteSpace(extension) || extension.Equals(DefaultCSharpExtension' StringComparison.InvariantCultureIgnoreCase)))  " is 211.
Long Statement,ScriptCs.Hosting,VisualStudioSolution,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\VisualStudioSolution.cs,AddScriptcsProject,The length of the statement  "            Projects.AppendFormat(@"Project(""{{911E67C6-3D85-4FCE-B560-20A9C3E3FF48}}"") = ""scriptcs""' ""{0}""' ""{{{1}}}""{2}"' scriptcsPath' projectGuid' Environment.NewLine); " is 168.
Long Statement,ScriptCs.Hosting,VisualStudioSolution,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\VisualStudioSolution.cs,AddProject,The length of the statement  "            Projects.AppendFormat(@"Project(""{{2150E333-8FDC-42A3-9474-1A3956D46DE8}}"") = ""{0}""' ""{0}""' ""{{{1}}}""{2}"' name' guid' Environment.NewLine); " is 148.
Long Statement,ScriptCs.Hosting,VisualStudioSolutionWriter,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\VisualStudioSolutionWriter.cs,AddDirectoryProject,The length of the statement  "            solution.AddProject(currentDirectory.FullPath' currentDirectory.Name' currentDirectory.Guid' currentDirectory.Files.ToArray()); " is 127.
Long Statement,ScriptCs.Hosting.Package,NugetInstallationProvider,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\Package\NugetInstallationProvider.cs,InstallPackage,The length of the statement  "            _manager.InstallPackage(packageId.PackageId' version' allowPrereleaseVersions: allowPreRelease' ignoreDependencies: false); " is 123.
Long Statement,ScriptCs.Hosting.Package,NugetInstallationProvider,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\Package\NugetInstallationProvider.cs,GetVersion,The length of the statement  "            return packageReference.Version == EmptyVersion ? null : new SemanticVersion(packageReference.Version' packageReference.SpecialVersion); " is 136.
Long Statement,ScriptCs.Hosting.Package,NugetInstallationProvider,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\Package\NugetInstallationProvider.cs,IsInstalled,The length of the statement  "            return _manager.LocalRepository.FindPackage(packageReference.PackageId' version' allowPreRelease' allowUnlisted: false) != null; " is 128.
Long Statement,ScriptCs.Hosting.Package,PackageContainer,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\Package\PackageContainer.cs,CreatePackageFile,The length of the statement  "                        _logger.InfoFormat("Added {0} (v{1}' .NET {2}) to {3}"' package.Id' package.Version' newestFramework.Version' _fileSystem.PackagesFile); " is 136.
Long Statement,ScriptCs.Hosting.Package,PackageContainer,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\Package\PackageContainer.cs,CreatePackageFile,The length of the statement  "            _logger.InfoFormat("Successfully {0} {1}."' (File.Exists(packagesFile) ? "updated" : "created")' _fileSystem.PackagesFile); " is 123.
Long Statement,ScriptCs.Hosting.Package,PackageContainer,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\Package\PackageContainer.cs,FindPackage,The length of the statement  "                ? repository.FindPackage(packageRef.PackageId' new SemanticVersion(packageRef.Version' packageRef.SpecialVersion)' true' true) " is 126.
Long Statement,ScriptCs.Hosting.Package,PackageObject,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\Package\PackageObject.cs,GetCompatibleDlls,The length of the statement  "                var match = Regex.Match(((PhysicalPackageFile)dlls.First()).SourcePath' "(" + Path.Combine(Path.GetTempPath()' "nuget").Replace("\\"' "\\\\") + "\\\\[^\\\\]+?)\\\\"); " is 166.
Long Statement,ScriptCs.Hosting.Package,ScriptCsPackageManager,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\Package\ScriptCsPackageManager.cs,InstallPackage,The length of the statement  "            base.InstallPackage(package' new FrameworkName(FrameworkUtils.FrameworkName)'  ignoreDependencies' allowPrereleaseVersions); " is 124.
Long Statement,ScriptCs.Hosting.Package,ScriptCsPackageManager,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\Package\ScriptCsPackageManager.cs,InstallPackage,The length of the statement  "            var package = PackageRepositoryHelper.ResolvePackage(SourceRepository' LocalRepository' packageId' version' allowPrereleaseVersions); " is 133.
Long Statement,ScriptCs.Hosting.Package,ScriptCsPackageManager,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\Package\ScriptCsPackageManager.cs,InstallPackage,The length of the statement  "            base.InstallPackage(package' new FrameworkName(FrameworkUtils.FrameworkName)' ignoreDependencies' allowPrereleaseVersions); " is 123.
Long Statement,Mono.Terminal,LineEditor,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\LineEditor.cs,ForceCursor,The length of the statement  "            //log.WriteLine ("Going to cursor={0} row={1} col={2} actual={3} prompt={4} ttr={5} old={6}"' newpos' row' col' actual_pos' prompt.Length' TextToRenderPos (cursor)' cursor); " is 173.
Complex Conditional,ScriptCs.Hosting,ModuleLoader,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\ModuleLoader.cs,Load,The conditional expression  "moduleNames.Length == 1 && DefaultCSharpModules.ContainsKey(moduleNames[0]) && (string.IsNullOrWhiteSpace(extension) || extension.Equals(DefaultCSharpExtension' StringComparison.InvariantCultureIgnoreCase))"  is complex.
Empty Catch Block,Mono.Terminal,History,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\LineEditor.cs,Close,The method has an empty catch block.
Magic Number,Mono.Terminal,LineEditor,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\LineEditor.cs,LineEditor,The following statement contains a magic number: handlers = new Handler[] {                  new Handler (ConsoleKey.Home'       CmdHome)'                  new Handler (ConsoleKey.End'        CmdEnd)'                  new Handler (ConsoleKey.LeftArrow'  CmdLeft)'                  new Handler (ConsoleKey.RightArrow' CmdRight)'                  new Handler (ConsoleKey.UpArrow'    CmdHistoryPrev)'                  new Handler (ConsoleKey.DownArrow'  CmdHistoryNext)'                  new Handler (ConsoleKey.Enter'      CmdDone)'                  new Handler (ConsoleKey.Backspace'  CmdBackspace)'                  new Handler (ConsoleKey.Delete'     CmdDeleteChar)'                  new Handler (ConsoleKey.Tab'        CmdTabOrComplete)'                                    // Emacs keys                  Handler.Control ('A'' CmdHome)'                  Handler.Control ('E'' CmdEnd)'                  Handler.Control ('B'' CmdLeft)'                  Handler.Control ('F'' CmdRight)'                  Handler.Control ('P'' CmdHistoryPrev)'                  Handler.Control ('N'' CmdHistoryNext)'                  Handler.Control ('K'' CmdKillToEOF)'                  Handler.Control ('Y'' CmdYank)'                  Handler.Control ('D'' CmdDeleteChar)'                  Handler.Control ('L'' CmdRefresh)'                  Handler.Control ('R'' CmdReverseSearch)'                  Handler.Control ('G'' delegate {} )'                  Handler.Alt ('B'' ConsoleKey.B' CmdBackwardWord)'                  Handler.Alt ('F'' ConsoleKey.F' CmdForwardWord)'                    Handler.Alt ('D'' ConsoleKey.D' CmdDeleteWord)'                  Handler.Alt ((char) 8' ConsoleKey.Backspace' CmdDeleteBackword)'                                    // DEBUG                  //Handler.Control ('T'' CmdDebug)'                    // quote                  Handler.Control ('Q'' delegate { HandleChar (Console.ReadKey (true).KeyChar); })              };
Magic Number,Mono.Terminal,LineEditor,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\LineEditor.cs,ComputeRendered,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  int c = (int)text[i];                  if (c < 26)                  {                      if (c == '\t')                          rendered_text.Append("    ");                      else                      {                          rendered_text.Append('^');                          rendered_text.Append((char)(c + (int)'A' - 1));                      }                  }                  else                      rendered_text.Append((char)c);              }
Magic Number,Mono.Terminal,LineEditor,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\LineEditor.cs,TextToRenderPos,The following statement contains a magic number: for (int i = 0; i < pos; i++)              {                  int c;                    c = (int)text[i];                    if (c < 26)                  {                      if (c == 9)                          p += 4;                      else                          p += 2;                  }                  else                      p++;              }
Magic Number,Mono.Terminal,LineEditor,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\LineEditor.cs,TextToRenderPos,The following statement contains a magic number: for (int i = 0; i < pos; i++)              {                  int c;                    c = (int)text[i];                    if (c < 26)                  {                      if (c == 9)                          p += 4;                      else                          p += 2;                  }                  else                      p++;              }
Magic Number,Mono.Terminal,LineEditor,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\LineEditor.cs,TextToRenderPos,The following statement contains a magic number: for (int i = 0; i < pos; i++)              {                  int c;                    c = (int)text[i];                    if (c < 26)                  {                      if (c == 9)                          p += 4;                      else                          p += 2;                  }                  else                      p++;              }
Magic Number,Mono.Terminal,LineEditor,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\LineEditor.cs,TextToRenderPos,The following statement contains a magic number: for (int i = 0; i < pos; i++)              {                  int c;                    c = (int)text[i];                    if (c < 26)                  {                      if (c == 9)                          p += 4;                      else                          p += 2;                  }                  else                      p++;              }
Missing Default,ScriptCs.Hosting,ColoredConsoleLogProvider,C:\repos\scriptcs_scriptcs\src\ScriptCs.Hosting\ColoredConsoleLogProvider.cs,IsEnabled,The following switch statement is missing a default case: switch (logLevel)              {                  case LogLevel.Fatal:                      return true;                  case LogLevel.Error:                      return                          _logLevel == LogLevel.Error ||                          _logLevel == LogLevel.Warn ||                          _logLevel == LogLevel.Info ||                          _logLevel == LogLevel.Debug ||                          _logLevel == LogLevel.Trace;                  case LogLevel.Warn:                      return                          _logLevel == LogLevel.Warn ||                          _logLevel == LogLevel.Info ||                          _logLevel == LogLevel.Debug ||                          _logLevel == LogLevel.Trace;                  case LogLevel.Info:                      return                          _logLevel == LogLevel.Info ||                          _logLevel == LogLevel.Debug ||                          _logLevel == LogLevel.Trace;                  case LogLevel.Debug:                      return                          _logLevel == LogLevel.Debug ||                          _logLevel == LogLevel.Trace;                  case LogLevel.Trace:                      return                          _logLevel == LogLevel.Trace;              }
