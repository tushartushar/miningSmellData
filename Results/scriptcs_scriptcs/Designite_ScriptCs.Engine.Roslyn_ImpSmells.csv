Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,ScriptCs.Engine.Roslyn,CommonScriptEngine,C:\repos\scriptcs_scriptcs\src\ScriptCs.Engine.Roslyn\CommonScriptEngine.cs,Execute,The method has 5 parameters. Parameters: code' scriptArgs' references' namespaces' scriptPackSession
Long Statement,ScriptCs,Guard,C:\repos\scriptcs_scriptcs\src\ScriptCs.Core\Guard.cs,AgainstNullArgument,The length of the statement  "                throw new ArgumentNullException(parameterName' string.Format(CultureInfo.InvariantCulture' "{0} is null."' parameterName)); " is 123.
Long Statement,ScriptCs,Guard,C:\repos\scriptcs_scriptcs\src\ScriptCs.Core\Guard.cs,AgainstNullArgumentIfNullable,The length of the statement  "                throw new ArgumentNullException(parameterName' string.Format(CultureInfo.InvariantCulture' "{0} is null."' parameterName)); " is 123.
Long Statement,ScriptCs,Guard,C:\repos\scriptcs_scriptcs\src\ScriptCs.Core\Guard.cs,AgainstNullArgumentProperty,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.InvariantCulture' "{0}.{1} is null."' parameterName' propertyName)' parameterName); " is 137.
Long Statement,ScriptCs,Guard,C:\repos\scriptcs_scriptcs\src\ScriptCs.Core\Guard.cs,AgainstNullArgumentPropertyIfNullable,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.InvariantCulture' "{0}.{1} is null."' parameterName' propertyName)' parameterName); " is 137.
Long Statement,ScriptCs.Engine.Roslyn,CommonScriptEngine,C:\repos\scriptcs_scriptcs\src\ScriptCs.Engine.Roslyn\CommonScriptEngine.cs,Execute,The length of the statement  "                sessionState = new SessionState<ScriptState> { References = executionReferences' Namespaces = new HashSet<string>(allNamespaces) }; " is 131.
Long Statement,ScriptCs.Engine.Roslyn,CommonScriptEngine,C:\repos\scriptcs_scriptcs\src\ScriptCs.Engine.Roslyn\CommonScriptEngine.cs,SetCSharpVersionToLatest,The length of the statement  "                var csharpScriptCompilerType = typeof(CSharpScript).GetTypeInfo().Assembly.GetType("Microsoft.CodeAnalysis.CSharp.Scripting.CSharpScriptCompiler"); " is 147.
Long Statement,ScriptCs.Engine.Roslyn,CommonScriptEngine,C:\repos\scriptcs_scriptcs\src\ScriptCs.Engine.Roslyn\CommonScriptEngine.cs,SetCSharpVersionToLatest,The length of the statement  "                var parseOptionsField = csharpScriptCompilerType?.GetField("s_defaultOptions"' BindingFlags.Static | BindingFlags.NonPublic); " is 125.
Long Statement,ScriptCs.Engine.Roslyn,CSharpScriptCompilerEngine,C:\repos\scriptcs_scriptcs\src\ScriptCs.Engine.Roslyn\CSharpScriptCompilerEngine.cs,CompileAndExecute,The length of the statement  "                return new ScriptResult(compilationException: new ScriptCompilationException(compileException.Message' compileException)); " is 122.
Long Statement,ScriptCs.Engine.Roslyn,CSharpScriptInMemoryEngine,C:\repos\scriptcs_scriptcs\src\ScriptCs.Engine.Roslyn\CSharpScriptInMemoryEngine.cs,LoadAssemblyFromCache,The length of the statement  "            throw new NotImplementedException("Reaching this point indicates a bug. The CSharpScriptInMemoryEngine should never load the assembly from the cache."); " is 152.
Magic Number,ScriptCs.Engine.Roslyn,CSharpScriptCompilerEngine,C:\repos\scriptcs_scriptcs\src\ScriptCs.Engine.Roslyn\CSharpScriptCompilerEngine.cs,InvokeEntryPointMethod,The following statement contains a magic number: try              {                  _log.Debug("Invoking method.");                  var submissionStates = new object[2];                  submissionStates[0] = globals;                  var result = method.Invoke(null' new[] {submissionStates}) as Task<object>;                  return new ScriptResult(returnValue: result.GetAwaiter().GetResult());              }              catch (Exception executeException)              {                  _log.Error("An error occurred when executing the scripts.");                    var ex = executeException.InnerException ?? executeException;                  return new ScriptResult(executionException: ex);              }
