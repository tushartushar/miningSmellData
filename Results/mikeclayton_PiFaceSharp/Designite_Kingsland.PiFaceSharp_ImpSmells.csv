Implementation smell,Namespace,Class,File,Method,Description
Empty Catch Block,Kingsland.PiFaceSharp.Remote,PiFaceTcpServer,C:\repos\mikeclayton_PiFaceSharp\src\Kingsland.PiFaceSharp\Remote\PiFaceTcpServer.cs,AcceptTcpClient,The method has an empty catch block.
Magic Number,Kingsland.PiFaceSharp.Remote,PiFaceTcpServer,C:\repos\mikeclayton_PiFaceSharp\src\Kingsland.PiFaceSharp\Remote\PiFaceTcpServer.cs,Stop,The following statement contains a magic number: lock (_lockObject)              {                  switch (this.Status)                  {                      case PiFaceTcpServerStatus.Running:                          this.Status = PiFaceTcpServerStatus.Stopping;                          while (this.WorkerThread.IsAlive)                          {                              Thread.Sleep(100);                          }                          this.WorkerThread = null;                          this.Status = PiFaceTcpServerStatus.Stopped;                          break;                      default:                          throw new InvalidOperationException("Cannot stop a server with the status '" + this.Status.ToString() + "'");                  }              }
Magic Number,Kingsland.PiFaceSharp.Remote,PiFaceTcpServer,C:\repos\mikeclayton_PiFaceSharp\src\Kingsland.PiFaceSharp\Remote\PiFaceTcpServer.cs,ExecuteMainLoop,The following statement contains a magic number: while (this.Status == PiFaceTcpServerStatus.Running)              {                  if (listener.Pending())                  {                      this.ClientConnected.Reset();                      this.AcceptTcpClient(listener);                      while (!this.ClientConnected.WaitOne(250))                      {                          if (this.Status != PiFaceTcpServerStatus.Running)                          {                              break;                          }                      }                  }                  else                  {                      Thread.Sleep(100);                  }              }
Magic Number,Kingsland.PiFaceSharp.Remote,PiFaceTcpServer,C:\repos\mikeclayton_PiFaceSharp\src\Kingsland.PiFaceSharp\Remote\PiFaceTcpServer.cs,ExecuteMainLoop,The following statement contains a magic number: while (this.Status == PiFaceTcpServerStatus.Running)              {                  if (listener.Pending())                  {                      this.ClientConnected.Reset();                      this.AcceptTcpClient(listener);                      while (!this.ClientConnected.WaitOne(250))                      {                          if (this.Status != PiFaceTcpServerStatus.Running)                          {                              break;                          }                      }                  }                  else                  {                      Thread.Sleep(100);                  }              }
Magic Number,Kingsland.PiFaceSharp.Remote,PiFaceTcpServer,C:\repos\mikeclayton_PiFaceSharp\src\Kingsland.PiFaceSharp\Remote\PiFaceTcpServer.cs,AcceptTcpClient,The following statement contains a magic number: using (var client = listener.AcceptTcpClient())              {                  using (var stream = client.GetStream())                  {                      while (client.Connected && (this.Status == PiFaceTcpServerStatus.Running))                      {                          if (stream.DataAvailable)                          {                              try                              {                                  this.ProcessMessage(stream);                              }                              catch                              {                              }                          }                          else                          {                              Thread.Sleep(100);                          }                      }                  }              }
Magic Number,Kingsland.PiFaceSharp.Emulators,PiFaceEmulator,C:\repos\mikeclayton_PiFaceSharp\src\Kingsland.PiFaceSharp\Emulators\PiFaceEmulator.cs,GetOutputPinState,The following statement contains a magic number: if (pin > 7)              {                  throw new System.ArgumentOutOfRangeException("pin"' "pin must be in the range 0-7");              }
Magic Number,Kingsland.PiFaceSharp.Emulators,PiFaceEmulator,C:\repos\mikeclayton_PiFaceSharp\src\Kingsland.PiFaceSharp\Emulators\PiFaceEmulator.cs,GetInputPinState,The following statement contains a magic number: if (pin > 7)              {                  throw new ArgumentOutOfRangeException("pin"' "pin must be in the range 0-7");              }
Magic Number,Kingsland.PiFaceSharp.Emulators,PiFaceEmulator,C:\repos\mikeclayton_PiFaceSharp\src\Kingsland.PiFaceSharp\Emulators\PiFaceEmulator.cs,SetInputPinState,The following statement contains a magic number: if (pin > 7)              {                  throw new ArgumentOutOfRangeException("pin"' "pin must be in the range 0-7");              }
Magic Number,Kingsland.PiFaceSharp.PinControllers,BackgroundPinController,C:\repos\mikeclayton_PiFaceSharp\src\Kingsland.PiFaceSharp\PinControllers\BackgroundPinController.cs,Stop,The following statement contains a magic number: lock (_lockObject)              {                  switch (this.Status)                  {                      case BackgroundPinControllerStatus.Running:                          Console.WriteLine("stopping pin controller thread");                          this.Status = BackgroundPinControllerStatus.Stopping;                          while (this.WorkerThread.IsAlive)                          {                              Thread.Sleep(100);                          }                          this.WorkerThread = null;                          this.Status = BackgroundPinControllerStatus.Stopped;                          break;                      default:                          throw new InvalidOperationException(                              string.Format("Cannot stop a controller with the status '{0}'"' this.Status));                  }              }
Magic Number,Kingsland.PiFaceSharp.PinControllers,PwmPinController,C:\repos\mikeclayton_PiFaceSharp\src\Kingsland.PiFaceSharp\PinControllers\PwmPinController.cs,SetTimers,The following statement contains a magic number: if (period < 10)              {                  // there's a practical limit to how fast the output pins can be updated                  throw new ArgumentOutOfRangeException("period"' "Value must be 10 or less.");              }
Magic Number,Kingsland.PiFaceSharp.Spi,PiFaceDevice,C:\repos\mikeclayton_PiFaceSharp\src\Kingsland.PiFaceSharp\Spi\PiFaceDevice.cs,GetOutputPinState,The following statement contains a magic number: if(pin > 7)              {                  throw new ArgumentOutOfRangeException("pin"' "pin must be in the range 0-7");              }
Magic Number,Kingsland.PiFaceSharp.Spi,PiFaceDevice,C:\repos\mikeclayton_PiFaceSharp\src\Kingsland.PiFaceSharp\Spi\PiFaceDevice.cs,SetOutputPinState,The following statement contains a magic number: if (pin > 7)              {                  throw new ArgumentOutOfRangeException("pin"' "pin must be in the range 0-7");              }
Magic Number,Kingsland.PiFaceSharp.Spi,PiFaceDevice,C:\repos\mikeclayton_PiFaceSharp\src\Kingsland.PiFaceSharp\Spi\PiFaceDevice.cs,GetInputPinState,The following statement contains a magic number: if (pin > 7)              {                  throw new ArgumentOutOfRangeException("pin"' "pin must be in the range 0-7");              }
Magic Number,Kingsland.PiFaceSharp.Spi,PiFaceDevice,C:\repos\mikeclayton_PiFaceSharp\src\Kingsland.PiFaceSharp\Spi\PiFaceDevice.cs,Initialize,The following statement contains a magic number: this.SpiDevice.SetBitsPerWord(8);
Magic Number,Kingsland.PiFaceSharp.Spi,PiFaceDevice,C:\repos\mikeclayton_PiFaceSharp\src\Kingsland.PiFaceSharp\Spi\PiFaceDevice.cs,Initialize,The following statement contains a magic number: this.SpiDevice.SetMaxSpeedHz(5000000);
Magic Number,Kingsland.PiFaceSharp.Spi,HardwareSpiDevice,C:\repos\mikeclayton_PiFaceSharp\src\Kingsland.PiFaceSharp\Spi\HardwareSpiDevice.cs,InitTxRxBuffers,The following statement contains a magic number: this._txBufferPtr = Marshal.AllocHGlobal(3);
Magic Number,Kingsland.PiFaceSharp.Spi,HardwareSpiDevice,C:\repos\mikeclayton_PiFaceSharp\src\Kingsland.PiFaceSharp\Spi\HardwareSpiDevice.cs,InitTxRxBuffers,The following statement contains a magic number: this._rxBufferPtr = Marshal.AllocHGlobal(3);
Magic Number,Kingsland.PiFaceSharp.Spi,HardwareSpiDevice,C:\repos\mikeclayton_PiFaceSharp\src\Kingsland.PiFaceSharp\Spi\HardwareSpiDevice.cs,ReadByte,The following statement contains a magic number: return bufOut[2];
