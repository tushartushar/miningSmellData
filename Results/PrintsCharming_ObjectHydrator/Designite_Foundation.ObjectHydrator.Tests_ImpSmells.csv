Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Foundation.ObjectHydrator.Tests.GeneratorTests,Generator_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\GeneratorTests\Generator_Tests.cs,IsValidIPAddress,The length of the statement  "                    "^(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9])\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[0-9])$");" is 263.
Long Statement,Foundation.ObjectHydrator.Tests.GeneratorTests,Generator_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\GeneratorTests\Generator_Tests.cs,IsEmailAddressValid,The length of the statement  "                    "^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1'3}\\.[0-9]{1'3}\\.[0-9]{1'3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2'4}|[0-9]{1'3})(\\]?)$");" is 130.
Long Statement,Foundation.ObjectHydrator.Tests.GeneratorTests,Generator_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\GeneratorTests\Generator_Tests.cs,UnitedKingdomNationalInsuranceGeneratorTest,The length of the statement  "            Assert.IsTrue(new Regex(@"^(?!BG)(?!GB)(?!NK)(?!KN)(?!TN)(?!NT)(?!ZZ)(?:[A-CEGHJ-PR-TW-Z][A-CEGHJ-NPR-TW-Z])(?:\s*\d\s*){6}([A-D]|\s)$").IsMatch(result));" is 154.
Long Statement,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_Do_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_Do_Tests.cs,CanSetOnePropertyFromAnother,The length of the statement  "            Assert.AreEqual(customer.EmailAddress' string.Format("{0}.{1}@{2}.com"' customer.FirstName' customer.LastName' customer.Company)' "The value should have been set in the Do method");" is 181.
Long Statement,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanDefaultString,The length of the statement  "            Assert.IsTrue(defaultValue == customer.Description' String.Format("Default value is not as expected[{0}]"' defaultValue));" is 122.
Long Statement,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanDefaultInteger,The length of the statement  "            Assert.IsTrue(defaultValue == customer.Locations' String.Format("Default value is not as expected[{0}]"' defaultValue));" is 120.
Long Statement,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanDefaultDateTime,The length of the statement  "            Assert.IsTrue(defaultValue == customer.IncorporatedOn' String.Format("Default value is not as expected[{0}]"' defaultValue));" is 125.
Long Statement,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanChainWithDefaultDescription,The length of the statement  "            Assert.IsTrue(defaultValue == customer.Description' String.Format("Default value is not as expected[{0}]"' defaultValue));" is 122.
Long Statement,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanGetByteArray,The length of the statement  "            Assert.IsTrue(customer.Version.Length == length' String.Format("Customer Version Length is expected to be {0}."' length));" is 122.
Long Statement,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,IsValidIPAddress,The length of the statement  "                    "^(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9])\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[0-9])$");" is 263.
Long Statement,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,IsEmailAddressValid,The length of the statement  "                    "^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1'3}\\.[0-9]{1'3}\\.[0-9]{1'3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2'4}|[0-9]{1'3})(\\]?)$");" is 130.
Magic Number,Foundation.ObjectHydrator.Tests.GeneratorTests,Generator_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\GeneratorTests\Generator_Tests.cs,DateTimeGeneratorWithDefaultTest,The following statement contains a magic number: Assert.That(checkme' Is.InRange(current.AddYears(-10)' current.AddYears(10)));
Magic Number,Foundation.ObjectHydrator.Tests.GeneratorTests,Generator_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\GeneratorTests\Generator_Tests.cs,DateTimeGeneratorWithDefaultTest,The following statement contains a magic number: Assert.That(checkme' Is.InRange(current.AddYears(-10)' current.AddYears(10)));
Magic Number,Foundation.ObjectHydrator.Tests.GeneratorTests,Generator_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\GeneratorTests\Generator_Tests.cs,DoubleGeneratorWithDefaultValues,The following statement contains a magic number: Assert.That(checkme' Is.InRange(0.00' 100.00));
Magic Number,Foundation.ObjectHydrator.Tests.GeneratorTests,Generator_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\GeneratorTests\Generator_Tests.cs,IntegerGeneratorWithDefaultTest,The following statement contains a magic number: Assert.That(checkme' Is.InRange(0' 100));
Magic Number,Foundation.ObjectHydrator.Tests.GeneratorTests,Generator_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\GeneratorTests\Generator_Tests.cs,IntegerGeneratorWithOverrideTest,The following statement contains a magic number: var min = 5;
Magic Number,Foundation.ObjectHydrator.Tests.GeneratorTests,Generator_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\GeneratorTests\Generator_Tests.cs,IntegerGeneratorWithOverrideTest,The following statement contains a magic number: var max = 20;
Magic Number,Foundation.ObjectHydrator.Tests.GeneratorTests,Generator_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\GeneratorTests\Generator_Tests.cs,FedExTrackingNumberGenerator,The following statement contains a magic number: Assert.IsTrue(tracknumber.Length == 15);
Magic Number,Foundation.ObjectHydrator.Tests.GeneratorTests,Generator_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\GeneratorTests\Generator_Tests.cs,UPSTrackingNumberGenerator,The following statement contains a magic number: Assert.IsTrue(tracknumber.Length == 20);
Magic Number,Foundation.ObjectHydrator.Tests.GeneratorTests,Generator_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\GeneratorTests\Generator_Tests.cs,USPSTrackingNumberGenerator,The following statement contains a magic number: Assert.IsTrue(tracknumber.Length == 22);
Magic Number,Foundation.ObjectHydrator.Tests.GeneratorTests,Generator_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\GeneratorTests\Generator_Tests.cs,PasswordWithDefaultLengthGenerator,The following statement contains a magic number: Assert.IsTrue(pw.Length == 10);
Magic Number,Foundation.ObjectHydrator.Tests.GeneratorTests,Generator_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\GeneratorTests\Generator_Tests.cs,PasswordWithCustomLengthGenerator,The following statement contains a magic number: var length = 99;
Magic Number,Foundation.ObjectHydrator.Tests.GeneratorTests,Generator_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\GeneratorTests\Generator_Tests.cs,AlphaNumericGenerator,The following statement contains a magic number: IGenerator<string> alphaNumericGen = new AlphaNumericGenerator(10);
Magic Number,Foundation.ObjectHydrator.Tests.GeneratorTests,Generator_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\GeneratorTests\Generator_Tests.cs,AlphaNumericGenerator,The following statement contains a magic number: Assert.AreEqual(10' alphaNumeric.Length);
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_Do_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_Do_Tests.cs,CanSetConstantValue,The following statement contains a magic number: const int expected = 90;
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_ComplexCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_ComplexCustomer_Tests.cs,CanLoadSingleComplexCustomer,The following statement contains a magic number: int[] values = {1' 2' 3};
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_ComplexCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_ComplexCustomer_Tests.cs,CanLoadSingleComplexCustomer,The following statement contains a magic number: int[] values = {1' 2' 3};
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_ComplexCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_ComplexCustomer_Tests.cs,CanGetListOfComplexCustomer,The following statement contains a magic number: int[] values = {1' 2' 3};
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_ComplexCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_ComplexCustomer_Tests.cs,CanGetListOfComplexCustomer,The following statement contains a magic number: int[] values = {1' 2' 3};
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_ComplexCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_ComplexCustomer_Tests.cs,CanGetListOfComplexCustomer,The following statement contains a magic number: var customerlist = hydrator.GetList(10);
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_ComplexCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_ComplexCustomer_Tests.cs,CanGetListOfComplexCustomer,The following statement contains a magic number: Assert.IsTrue(customerlist.Count == 10);
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_ComplexCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_ComplexCustomer_Tests.cs,CanLoadSingleComplexCustomerWithAddressList,The following statement contains a magic number: var listSize = 6;
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_ComplexCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_ComplexCustomer_Tests.cs,CanLoadSingleComplexCustomerWithPhoneList,The following statement contains a magic number: var listSize = 6;
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_ComplexCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_ComplexCustomer_Tests.cs,CanLoadSingleComplexCustomerWithCustumTypeMappers,The following statement contains a magic number: var hy = new Hydrator<ComplexCustomer>()                 .ForAll<Address>(new Hydrator<Address>())                 .For<IList<Address>>(new Map<IList<Address>>().Using(new ListGenerator<Address>(10)))                 .For<string>(new Map<string>().Matching(info => info.Name.ToLower() == "lastname").Using(lastNameDefault))                 .GetSingle();
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanGetSingleRestrictedDescriptionCustomer,The following statement contains a magic number: Assert.IsTrue(customer.Description.Length <= 5'"Length not restricted");
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanGetList,The following statement contains a magic number: var listCount = 50;
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanConstrainIntegers,The following statement contains a magic number: var hydrator = new Hydrator<SimpleCustomer>()                 .WithInteger(x => x.Locations' 5' 10);
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanConstrainIntegers,The following statement contains a magic number: var hydrator = new Hydrator<SimpleCustomer>()                 .WithInteger(x => x.Locations' 5' 10);
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanConstrainIntegers,The following statement contains a magic number: Assert.IsTrue(customer.Locations >= 5 && customer.Locations <= 10'                 String.Format("Customer Locations [{0}] is outside expected range."' customer.Locations));
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanConstrainIntegers,The following statement contains a magic number: Assert.IsTrue(customer.Locations >= 5 && customer.Locations <= 10'                 String.Format("Customer Locations [{0}] is outside expected range."' customer.Locations));
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanConstrainDoubleDecimalPlaces,The following statement contains a magic number: var decimalPlaces = 3;
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanConstrainDoubleRange,The following statement contains a magic number: var minimum = 15.76;
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanConstrainDoubleRange,The following statement contains a magic number: var maximum = 76.43;
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanConstrainDoubleRangeAndDecimals,The following statement contains a magic number: var minimum = 15.76;
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanConstrainDoubleRangeAndDecimals,The following statement contains a magic number: var maximum = 76.43;
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanConstrainDoubleRangeAndDecimals,The following statement contains a magic number: var decimalPlaces = 3;
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanDefaultInteger,The following statement contains a magic number: var defaultValue = 73;
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanDefaultDateTime,The following statement contains a magic number: var defaultValue = new DateTime(2009' 01' 01);
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanChainWithDefaultDescription,The following statement contains a magic number: var minimumValue = 65;
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanChainWithDefaultDescription,The following statement contains a magic number: var maximumValue = 75;
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanConstrainWithDates,The following statement contains a magic number: var minimumValue = new DateTime(2009' 01' 01);
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanConstrainWithDates,The following statement contains a magic number: var maximumValue = new DateTime(2009' 01' 10);
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanConstrainWithDates,The following statement contains a magic number: var maximumValue = new DateTime(2009' 01' 10);
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanConstrainDates,The following statement contains a magic number: var minimumValue = new DateTime(2009' 01' 01);
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanConstrainDates,The following statement contains a magic number: var maximumValue = new DateTime(2009' 01' 10);
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanConstrainDates,The following statement contains a magic number: var maximumValue = new DateTime(2009' 01' 10);
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanGetByteArray,The following statement contains a magic number: var length = 10;
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanGetCreditCardNumber,The following statement contains a magic number: var length = 16;
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CountryCodeTest,The following statement contains a magic number: Assert.IsTrue(customer.Country.Length == 2);
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,CanGetCCV,The following statement contains a magic number: Assert.IsTrue(customer.CCV.Length == 3);
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,PasswordWithInferenceDefaultLength,The following statement contains a magic number: Assert.AreEqual(10' customer.Password.Length);
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,PasswordUsingWithAndDefaultLength,The following statement contains a magic number: Assert.AreEqual(10' customer.placeholderstring.Length);
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,PasswordUsingWithAndCustomLength,The following statement contains a magic number: var pwlen = 15;
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,AlphaNumericWithLength,The following statement contains a magic number: var hydrator = new Hydrator<SimpleCustomer>()                 .WithAlphaNumeric(x => x.placeholderstring' 10);
Magic Number,Foundation.ObjectHydrator.Tests.HydratorTests,Hydrator_SimpleCustomer_Tests,C:\research\architectureSmells\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator.Tests\HydratorTests\Hydrator_SimpleCustomer_Tests.cs,AlphaNumericWithLength,The following statement contains a magic number: Assert.AreEqual(10' customer.placeholderstring.Length);
