Implementation smell,Namespace,Class,File,Method,Description
Long Method,Foundation.ObjectHydrator.Generators,AmericanAddressGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanAddressGenerator.cs,LoadStreetNames,The method has 6286 lines of code.
Long Method,Foundation.ObjectHydrator.Generators,AmericanCityGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanCityGenerator.cs,LoadCityNames,The method has 871 lines of code.
Long Method,Foundation.ObjectHydrator.Generators,CompanyNameGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\CompanyNameGenerator.cs,LoadNames,The method has 127 lines of code.
Long Method,Foundation.ObjectHydrator.Generators,CountryCodeGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\CountryCodeGenerator.cs,LoadCountryCodes,The method has 239 lines of code.
Long Method,Foundation.ObjectHydrator.Generators,FirstNameGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\FirstNameGenerator.cs,LoadNames,The method has 1004 lines of code.
Long Method,Foundation.ObjectHydrator.Generators,LastNameGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\LastNameGenerator.cs,LoadNames,The method has 1004 lines of code.
Long Method,Foundation.ObjectHydrator.Generators,UnitedKingdomCityGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\UnitedKingdomCityGenerator.cs,LoadCityNames,The method has 997 lines of code.
Long Method,Foundation.ObjectHydrator.Generators,UnitedKingdomPostCodeGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\UnitedKingdomPostcodeGenerator.cs,LoadPostcodePrefixes,The method has 3098 lines of code.
Long Statement,Foundation.ObjectHydrator,Hydrator<T>,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Hydrator.cs,SetPropertyMap,The length of the statement  "            PropertyInfo propertyInfo = typeof(T).GetProperty(propertyName' BindingFlags.IgnoreCase | BindingFlags.Public | BindingFlags.Instance); " is 135.
Long Statement,Foundation.ObjectHydrator,Hydrator<T>,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Hydrator.cs,Ignoring,The length of the statement  "            PropertyInfo propertyInfo1 = typeof(T).GetProperty(propertyName' BindingFlags.IgnoreCase | BindingFlags.Public | BindingFlags.Instance); " is 136.
Long Statement,Foundation.ObjectHydrator,Hydrator<T>,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Hydrator.cs,Populate,The length of the statement  "                PropertyInfo propertyInfo = instance.GetType().GetProperty(mapping.PropertyName' BindingFlags.Public | BindingFlags.Instance); " is 126.
Magic Number,Foundation.ObjectHydrator,DefaultTypeMap,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\DefaultTypeMap.cs,DefaultTypeMap,The following statement contains a magic number: Add(new Map<byte[]>().Using(new ByteArrayGenerator(8)));
Magic Number,Foundation.ObjectHydrator,DefaultTypeMap,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\DefaultTypeMap.cs,DefaultTypeMap,The following statement contains a magic number: Add(new Map<string>()                      .Matching(info => info.Name.ToLower()                      .Contains("descri")).Using(new TextGenerator(25)));
Magic Number,Foundation.ObjectHydrator,DefaultTypeMap,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\DefaultTypeMap.cs,DefaultTypeMap,The following statement contains a magic number: Add(new Map<string>()                      .Matching(info => info.Name.ToLower().Contains("zip") || info.Name.ToLower().Contains("postal"))                      .Using(new AmericanPostalCodeGenerator(25)));
Magic Number,Foundation.ObjectHydrator,DefaultTypeMap,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\DefaultTypeMap.cs,DefaultTypeMap,The following statement contains a magic number: Add(new Map<string>().Using(new TextGenerator(50)));
Magic Number,Foundation.ObjectHydrator,Hydrator<T>,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Hydrator.cs,GetList,The following statement contains a magic number: length = Random.Next(1' 10);
Magic Number,Foundation.ObjectHydrator.Generators,AmericanAddressGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanAddressGenerator.cs,Generate,The following statement contains a magic number: int numericPortion = this.random.Next(1' 99999);
Magic Number,Foundation.ObjectHydrator.Generators,AmericanAddressGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanAddressGenerator.cs,Generate,The following statement contains a magic number: string[] suffix = new string[8] { "Dr."' "Pl."' "St."' "Ave."' "Way"' "Lane"' "Circle"' "Rd." };
Magic Number,Foundation.ObjectHydrator.Generators,AmericanPhoneGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanPhoneGenerator.cs,Generate,The following statement contains a magic number: int areacodefirstpart = (int)random.Next(2' 9);
Magic Number,Foundation.ObjectHydrator.Generators,AmericanPhoneGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanPhoneGenerator.cs,Generate,The following statement contains a magic number: int areacodefirstpart = (int)random.Next(2' 9);
Magic Number,Foundation.ObjectHydrator.Generators,AmericanPhoneGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanPhoneGenerator.cs,Generate,The following statement contains a magic number: int areacode = (int)random.Next(0' 99);
Magic Number,Foundation.ObjectHydrator.Generators,AmericanPhoneGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanPhoneGenerator.cs,Generate,The following statement contains a magic number: if (areacode < 10)              {                  areacode += 10;              }
Magic Number,Foundation.ObjectHydrator.Generators,AmericanPhoneGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanPhoneGenerator.cs,Generate,The following statement contains a magic number: if (areacode < 10)              {                  areacode += 10;              }
Magic Number,Foundation.ObjectHydrator.Generators,AmericanPhoneGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanPhoneGenerator.cs,Generate,The following statement contains a magic number: int prefixfirstpart = (int)random.Next(2' 9);
Magic Number,Foundation.ObjectHydrator.Generators,AmericanPhoneGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanPhoneGenerator.cs,Generate,The following statement contains a magic number: int prefixfirstpart = (int)random.Next(2' 9);
Magic Number,Foundation.ObjectHydrator.Generators,AmericanPhoneGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanPhoneGenerator.cs,Generate,The following statement contains a magic number: int prefix = (int)random.Next(0' 99);
Magic Number,Foundation.ObjectHydrator.Generators,AmericanPhoneGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanPhoneGenerator.cs,Generate,The following statement contains a magic number: if (prefix < 10)              {                  prefix += 10;              }
Magic Number,Foundation.ObjectHydrator.Generators,AmericanPhoneGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanPhoneGenerator.cs,Generate,The following statement contains a magic number: if (prefix < 10)              {                  prefix += 10;              }
Magic Number,Foundation.ObjectHydrator.Generators,AmericanPhoneGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanPhoneGenerator.cs,Generate,The following statement contains a magic number: int suffix = random.Next(0000' 9999);
Magic Number,Foundation.ObjectHydrator.Generators,AmericanPhoneGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanPhoneGenerator.cs,Generate,The following statement contains a magic number: if (suffix < 1000)              {                  suffix = suffix + 1000;              }
Magic Number,Foundation.ObjectHydrator.Generators,AmericanPhoneGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanPhoneGenerator.cs,Generate,The following statement contains a magic number: if (suffix < 1000)              {                  suffix = suffix + 1000;              }
Magic Number,Foundation.ObjectHydrator.Generators,AmericanPostalCodeGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanPostalCodeGenerator.cs,Generate,The following statement contains a magic number: if (PercentageWithPlusFour > 0 && random.Next(0' 100) % (100 / PercentageWithPlusFour) == 0)              {                  plusFour = String.Format("-{0:0000}"' random.Next(1' 9999));              }
Magic Number,Foundation.ObjectHydrator.Generators,AmericanPostalCodeGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanPostalCodeGenerator.cs,Generate,The following statement contains a magic number: if (PercentageWithPlusFour > 0 && random.Next(0' 100) % (100 / PercentageWithPlusFour) == 0)              {                  plusFour = String.Format("-{0:0000}"' random.Next(1' 9999));              }
Magic Number,Foundation.ObjectHydrator.Generators,AmericanPostalCodeGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanPostalCodeGenerator.cs,Generate,The following statement contains a magic number: if (PercentageWithPlusFour > 0 && random.Next(0' 100) % (100 / PercentageWithPlusFour) == 0)              {                  plusFour = String.Format("-{0:0000}"' random.Next(1' 9999));              }
Magic Number,Foundation.ObjectHydrator.Generators,AmericanPostalCodeGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanPostalCodeGenerator.cs,Generate,The following statement contains a magic number: return String.Format("{0:00000}{1}"'                  random.Next(501' 99950)'                  plusFour).ToString();
Magic Number,Foundation.ObjectHydrator.Generators,AmericanPostalCodeGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\AmericanPostalCodeGenerator.cs,Generate,The following statement contains a magic number: return String.Format("{0:00000}{1}"'                  random.Next(501' 99950)'                  plusFour).ToString();
Magic Number,Foundation.ObjectHydrator.Generators,BooleanGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\BooleanGenerator.cs,Generate,The following statement contains a magic number: return Convert.ToBoolean(random.Next(0' 2));
Magic Number,Foundation.ObjectHydrator.Generators,CCVGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\CCVGenerator.cs,Generate,The following statement contains a magic number: int ccv = random.Next(0' 999);
Magic Number,Foundation.ObjectHydrator.Generators,CCVGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\CCVGenerator.cs,Generate,The following statement contains a magic number: if (ccv < 100)              {                  ccv += 100;              }
Magic Number,Foundation.ObjectHydrator.Generators,CCVGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\CCVGenerator.cs,Generate,The following statement contains a magic number: if (ccv < 100)              {                  ccv += 100;              }
Magic Number,Foundation.ObjectHydrator.Generators,TrackingNumberGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\TrackingNumberGenerator.cs,Generate,The following statement contains a magic number: switch (Carrier.ToLower())              {                                    default:                  case "ups":                      sb.Append("1Z");                      for (int i = 0; i < 18; i++)                      {                          sb.Append(chararray[random.Next(0' sizeofcharray)]);                      }                      break;                  case "fedex":                      sb.Append("4");                      for (int i = 0; i < 14; i++)                      {                          sb.Append(random.Next(0' 9));                      }                      break;                  case "usps":                      sb.Append("91");                      for (int i = 0; i < 20; i++)                      {                          sb.Append(random.Next(0' 9));                      }                      break;              }
Magic Number,Foundation.ObjectHydrator.Generators,TrackingNumberGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\TrackingNumberGenerator.cs,Generate,The following statement contains a magic number: switch (Carrier.ToLower())              {                                    default:                  case "ups":                      sb.Append("1Z");                      for (int i = 0; i < 18; i++)                      {                          sb.Append(chararray[random.Next(0' sizeofcharray)]);                      }                      break;                  case "fedex":                      sb.Append("4");                      for (int i = 0; i < 14; i++)                      {                          sb.Append(random.Next(0' 9));                      }                      break;                  case "usps":                      sb.Append("91");                      for (int i = 0; i < 20; i++)                      {                          sb.Append(random.Next(0' 9));                      }                      break;              }
Magic Number,Foundation.ObjectHydrator.Generators,TrackingNumberGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\TrackingNumberGenerator.cs,Generate,The following statement contains a magic number: switch (Carrier.ToLower())              {                                    default:                  case "ups":                      sb.Append("1Z");                      for (int i = 0; i < 18; i++)                      {                          sb.Append(chararray[random.Next(0' sizeofcharray)]);                      }                      break;                  case "fedex":                      sb.Append("4");                      for (int i = 0; i < 14; i++)                      {                          sb.Append(random.Next(0' 9));                      }                      break;                  case "usps":                      sb.Append("91");                      for (int i = 0; i < 20; i++)                      {                          sb.Append(random.Next(0' 9));                      }                      break;              }
Magic Number,Foundation.ObjectHydrator.Generators,TrackingNumberGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\TrackingNumberGenerator.cs,Generate,The following statement contains a magic number: switch (Carrier.ToLower())              {                                    default:                  case "ups":                      sb.Append("1Z");                      for (int i = 0; i < 18; i++)                      {                          sb.Append(chararray[random.Next(0' sizeofcharray)]);                      }                      break;                  case "fedex":                      sb.Append("4");                      for (int i = 0; i < 14; i++)                      {                          sb.Append(random.Next(0' 9));                      }                      break;                  case "usps":                      sb.Append("91");                      for (int i = 0; i < 20; i++)                      {                          sb.Append(random.Next(0' 9));                      }                      break;              }
Magic Number,Foundation.ObjectHydrator.Generators,TrackingNumberGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\TrackingNumberGenerator.cs,Generate,The following statement contains a magic number: switch (Carrier.ToLower())              {                                    default:                  case "ups":                      sb.Append("1Z");                      for (int i = 0; i < 18; i++)                      {                          sb.Append(chararray[random.Next(0' sizeofcharray)]);                      }                      break;                  case "fedex":                      sb.Append("4");                      for (int i = 0; i < 14; i++)                      {                          sb.Append(random.Next(0' 9));                      }                      break;                  case "usps":                      sb.Append("91");                      for (int i = 0; i < 20; i++)                      {                          sb.Append(random.Next(0' 9));                      }                      break;              }
Magic Number,Foundation.ObjectHydrator.Generators,CreditCardNumberGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\CreditCardNumberGenerator.cs,Generate,The following statement contains a magic number: for (int i = 0; i < Length - 1; i++)              {                  counter++;                  int digit = random.Next(0' 9);                    if (counter % 2 == 1)                  {                      accumulator += digit * 2;                  }                  else                  {                      accumulator += digit;                  }                    toReturn.Append(digit);              }
Magic Number,Foundation.ObjectHydrator.Generators,CreditCardNumberGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\CreditCardNumberGenerator.cs,Generate,The following statement contains a magic number: for (int i = 0; i < Length - 1; i++)              {                  counter++;                  int digit = random.Next(0' 9);                    if (counter % 2 == 1)                  {                      accumulator += digit * 2;                  }                  else                  {                      accumulator += digit;                  }                    toReturn.Append(digit);              }
Magic Number,Foundation.ObjectHydrator.Generators,CreditCardNumberGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\CreditCardNumberGenerator.cs,Generate,The following statement contains a magic number: for (int i = 0; i < Length - 1; i++)              {                  counter++;                  int digit = random.Next(0' 9);                    if (counter % 2 == 1)                  {                      accumulator += digit * 2;                  }                  else                  {                      accumulator += digit;                  }                    toReturn.Append(digit);              }
Magic Number,Foundation.ObjectHydrator.Generators,CreditCardNumberGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\CreditCardNumberGenerator.cs,Generate,The following statement contains a magic number: toReturn.Append(9 - (accumulator % 10));
Magic Number,Foundation.ObjectHydrator.Generators,CreditCardNumberGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\CreditCardNumberGenerator.cs,Generate,The following statement contains a magic number: toReturn.Append(9 - (accumulator % 10));
Magic Number,Foundation.ObjectHydrator.Generators,DateTimeGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\DateTimeGenerator.cs,Generate,The following statement contains a magic number: return MinimumValue.Date.AddDays(dayOffset) + new TimeSpan(random.Next(0' 24)' random.Next(0' 59)' random.Next(0' 59));
Magic Number,Foundation.ObjectHydrator.Generators,DateTimeGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\DateTimeGenerator.cs,Generate,The following statement contains a magic number: return MinimumValue.Date.AddDays(dayOffset) + new TimeSpan(random.Next(0' 24)' random.Next(0' 59)' random.Next(0' 59));
Magic Number,Foundation.ObjectHydrator.Generators,DateTimeGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\DateTimeGenerator.cs,Generate,The following statement contains a magic number: return MinimumValue.Date.AddDays(dayOffset) + new TimeSpan(random.Next(0' 24)' random.Next(0' 59)' random.Next(0' 59));
Magic Number,Foundation.ObjectHydrator.Generators,DoubleGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\DoubleGenerator.cs,DoubleGenerator,The following statement contains a magic number: if (decimalPlaces > 5)              {                  throw new ArgumentOutOfRangeException("decimalPlaces"' decimalPlaces' "decimalPlaces must be <=5;");              }
Magic Number,Foundation.ObjectHydrator.Generators,DoubleGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\DoubleGenerator.cs,Generate,The following statement contains a magic number: decimalPart *= Math.Pow(10' DecimalPlaces);
Magic Number,Foundation.ObjectHydrator.Generators,DoubleGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\DoubleGenerator.cs,Generate,The following statement contains a magic number: toReturn += decimalPart / Math.Pow(10' DecimalPlaces);
Magic Number,Foundation.ObjectHydrator.Generators,EmailAddressGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\EmailAddressGenerator.cs,Generate,The following statement contains a magic number: string[] suffix = new string[4] { ".com"' ".net"' ".org"' ".info" };
Magic Number,Foundation.ObjectHydrator.Generators,IPAddressGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\IPAddressGenerator.cs,Generate,The following statement contains a magic number: sb.Append(random.Next(1' 255));
Magic Number,Foundation.ObjectHydrator.Generators,IPAddressGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\IPAddressGenerator.cs,Generate,The following statement contains a magic number: sb.Append(random.Next(0' 255));
Magic Number,Foundation.ObjectHydrator.Generators,IPAddressGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\IPAddressGenerator.cs,Generate,The following statement contains a magic number: sb.Append(random.Next(0' 255));
Magic Number,Foundation.ObjectHydrator.Generators,IPAddressGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\IPAddressGenerator.cs,Generate,The following statement contains a magic number: sb.Append(random.Next(0' 255));
Magic Number,Foundation.ObjectHydrator.Generators,ListGenerator<T>,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\ListGenerator.cs,RandomLength,The following statement contains a magic number: return RandomLength(1' 10);
Magic Number,Foundation.ObjectHydrator.Generators,UnitedKingdomPostCodeGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\UnitedKingdomPostcodeGenerator.cs,Generate,The following statement contains a magic number: postCode.Append(_random.Next(0' 9));
Magic Number,Foundation.ObjectHydrator.Generators,UnitedKingdomPostCodeGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\UnitedKingdomPostcodeGenerator.cs,GetLetter,The following statement contains a magic number: var num = _random.Next(0' 26);
Magic Number,Foundation.ObjectHydrator.Generators,WebsiteGenerator,C:\repos\PrintsCharming_ObjectHydrator\Foundation.ObjectHydrator\Generators\WebsiteGenerator.cs,Generate,The following statement contains a magic number: string[] suffix = new string[4] { ".com"' ".net"' ".org"' ".info" };
