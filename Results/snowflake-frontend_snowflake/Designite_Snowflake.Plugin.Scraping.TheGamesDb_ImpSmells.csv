Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Snowflake.Plugin.Scrapers.TheGamesDb.TheGamesDbApi,ApiGamesDb,C:\repos\snowflake-frontend_snowflake\src\Snowflake.Plugin.Scraping.TheGamesDb\TheGamesDbApi\ApiGamesDB.cs,GetGames,The length of the statement  "            var docstring = await WebClient.DownloadDataAsync(new Uri(@"http://thegamesdb.net/api/GetGamesList.php?name=" + name + @"&platform=" + platform + @"&genre=" + genre)) " is 166.
Long Statement,Snowflake.Plugin.Scrapers.TheGamesDb.TheGamesDbApi,ApiGamesDb,C:\repos\snowflake-frontend_snowflake\src\Snowflake.Plugin.Scraping.TheGamesDb\TheGamesDbApi\ApiGamesDB.cs,GetPlatformGames,The length of the statement  "            var docstring = await WebClient.DownloadDataAsync(new Uri(@"http://thegamesdb.net/api/GetPlatformGames.php?platform=" + iD)) " is 124.
Missing Default,Snowflake.Plugin.Scrapers.TheGamesDb.TheGamesDbApi,ApiGameImages,C:\repos\snowflake-frontend_snowflake\src\Snowflake.Plugin.Scraping.TheGamesDb\TheGamesDbApi\ApiGame.cs,FromXmlNode,The following switch statement is missing a default case: switch (imageNode.Name)                      {                          case "fanart":                              this.Fanart.Add(new ApiGameImage(imageNode.FirstChild));                              break;                          case "banner":                              this.Banners.Add(new ApiGameImage(imageNode));                              break;                          case "screenshot":                              this.Screenshots.Add(new ApiGameImage(imageNode.FirstChild));                              break;                          case "boxart":                              if (imageNode.Attributes.GetNamedItem("side").InnerText == "front")                              {                                  this.BoxartFront = new ApiGameImage(imageNode);                              }                              else                              {                                  this.BoxartBack = new ApiGameImage(imageNode);                              }                                break;                      }
Missing Default,Snowflake.Plugin.Scrapers.TheGamesDb.TheGamesDbApi,ApiGamesDb,C:\repos\snowflake-frontend_snowflake\src\Snowflake.Plugin.Scraping.TheGamesDb\TheGamesDbApi\ApiGamesDB.cs,GetGames,The following switch statement is missing a default case: switch (attributeNode.Name)                      {                          case "id":                              int.TryParse(attributeNode.InnerText' out int id);                              game.ID = id;                              break;                          case "GameTitle":                              game.Title = attributeNode.InnerText;                              break;                          case "ReleaseDate":                              game.ReleaseDate = attributeNode.InnerText;                              break;                          case "Platform":                              game.Platform = attributeNode.InnerText;                              break;                      }
Missing Default,Snowflake.Plugin.Scrapers.TheGamesDb.TheGamesDbApi,ApiGamesDb,C:\repos\snowflake-frontend_snowflake\src\Snowflake.Plugin.Scraping.TheGamesDb\TheGamesDbApi\ApiGamesDB.cs,GetGame,The following switch statement is missing a default case: switch (attributeNode.Name)                  {                      case "id":                            int.TryParse(attributeNode.InnerText' out int id);                          apiGame.ID = id;                          break;                      case "Overview":                          apiGame.Overview = attributeNode.InnerText;                          break;                      case "GameTitle":                          apiGame.Title = attributeNode.InnerText;                          break;                      case "Platform":                          apiGame.Platform = attributeNode.InnerText;                          break;                      case "ReleaseDate":                          apiGame.ReleaseDate = attributeNode.InnerText;                          break;                      case "overview":                          apiGame.Overview = attributeNode.InnerText;                          break;                      case "ESRB":                          apiGame.ESRB = attributeNode.InnerText;                          break;                      case "Players":                          apiGame.Players = attributeNode.InnerText;                          break;                      case "Publisher":                          apiGame.Publisher = attributeNode.InnerText;                          break;                      case "Developer":                          apiGame.Developer = attributeNode.InnerText;                          break;                      case "Rating":                          // double.TryParse(attributeNode.InnerText' out game.Rating);                          apiGame.Rating = attributeNode.InnerText;                          break;                      case "AlternateTitles":                          IEnumerator ienumAlternateTitles = attributeNode.GetEnumerator();                          while (ienumAlternateTitles.MoveNext())                          {                              apiGame.AlternateTitles.Add(((XmlNode)ienumAlternateTitles.Current).InnerText);                          }                            break;                      case "Genres":                          IEnumerator ienumGenres = attributeNode.GetEnumerator();                          while (ienumGenres.MoveNext())                          {                              apiGame.Genres.Add(((XmlNode)ienumGenres.Current).InnerText);                          }                            break;                      case "Images":                          apiGame.Images.FromXmlNode(attributeNode);                          break;                  }
Missing Default,Snowflake.Plugin.Scrapers.TheGamesDb.TheGamesDbApi,ApiGamesDb,C:\repos\snowflake-frontend_snowflake\src\Snowflake.Plugin.Scraping.TheGamesDb\TheGamesDbApi\ApiGamesDB.cs,GetPlatforms,The following switch statement is missing a default case: switch (attributeNode.Name)                      {                          case "id":                              int.TryParse(attributeNode.InnerText' out int id);                              platform.ID = id;                              break;                          case "name":                              platform.Name = attributeNode.InnerText;                              break;                          case "alias":                              platform.Alias = attributeNode.InnerText;                              break;                      }
Missing Default,Snowflake.Plugin.Scrapers.TheGamesDb.TheGamesDbApi,ApiGamesDb,C:\repos\snowflake-frontend_snowflake\src\Snowflake.Plugin.Scraping.TheGamesDb\TheGamesDbApi\ApiGamesDB.cs,GetPlatform,The following switch statement is missing a default case: switch (attributeNode.Name)                  {                      case "id":                          int.TryParse(attributeNode.InnerText' out int id);                          platform.ID = id;                          break;                      case "Platform":                          platform.Name = attributeNode.InnerText;                          break;                      case "overview":                          platform.Overview = attributeNode.InnerText;                          break;                      case "developer":                          platform.Developer = attributeNode.InnerText;                          break;                      case "manufacturer":                          platform.Manufacturer = attributeNode.InnerText;                          break;                      case "cpu":                          platform.CPU = attributeNode.InnerText;                          break;                      case "memory":                          platform.Memory = attributeNode.InnerText;                          break;                      case "graphics":                          platform.Graphics = attributeNode.InnerText;                          break;                      case "sound":                          platform.Sound = attributeNode.InnerText;                          break;                      case "display":                          platform.Display = attributeNode.InnerText;                          break;                      case "media":                          platform.Media = attributeNode.InnerText;                          break;                      case "maxcontrollers":                          int.TryParse(attributeNode.InnerText' out int maxControllers);                          platform.MaxControllers = maxControllers;                          break;                      case "Rating":                          float.TryParse(attributeNode.InnerText' out float rating);                          platform.Rating = rating;                          break;                      case "Images":                          platform.Images.FromXmlNode(attributeNode);                          break;                  }
Missing Default,Snowflake.Plugin.Scrapers.TheGamesDb.TheGamesDbApi,ApiGamesDb,C:\repos\snowflake-frontend_snowflake\src\Snowflake.Plugin.Scraping.TheGamesDb\TheGamesDbApi\ApiGamesDB.cs,GetPlatformGames,The following switch statement is missing a default case: switch (attributeNode.Name)                      {                          case "id":                              int.TryParse(attributeNode.InnerText' out int id);                              game.ID = id;                              break;                          case "GameTitle":                              game.Title = attributeNode.InnerText;                              break;                          case "ReleaseDate":                              game.ReleaseDate = attributeNode.InnerText;                              break;                      }
Missing Default,Snowflake.Plugin.Scrapers.TheGamesDb.TheGamesDbApi,PlatformImages,C:\repos\snowflake-frontend_snowflake\src\Snowflake.Plugin.Scraping.TheGamesDb\TheGamesDbApi\ApiPlatform.cs,FromXmlNode,The following switch statement is missing a default case: switch (imageNode.Name)                      {                          case "fanart":                              this.Fanart.Add(new PlatformImage(imageNode.FirstChild));                              break;                          case "banner":                              this.Banners.Add(new PlatformImage(imageNode));                              break;                          case "boxart":                              this.Boxart = new PlatformImage(imageNode);                              break;                          case "consoleart":                              this.ConsoleArt = imageNode.InnerText;                              break;                          case "controllerart":                              this.ControllerArt = imageNode.InnerText;                              break;                      }
