Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Executors,Program,C:\research\architectureSmells\repos\Ravadre_Stacks\PerfTests\Executors\Program.cs,RunSingleExecutor,The length of the statement  "            test = new SingleExecutor(1000000' () => new ActionBlockExecutor(new ActionBlockExecutorSettings() { SupportSynchronizationContext = false })); " is 143.
Magic Number,Executors,Program,C:\research\architectureSmells\repos\Ravadre_Stacks\PerfTests\Executors\Program.cs,RunSingleExecutor,The following statement contains a magic number: var test = new SingleExecutor(1000000' () => new ActionBlockExecutor());
Magic Number,Executors,Program,C:\research\architectureSmells\repos\Ravadre_Stacks\PerfTests\Executors\Program.cs,RunSingleExecutor,The following statement contains a magic number: var stats = Benchmark.Measure(test.Run' 5);
Magic Number,Executors,Program,C:\research\architectureSmells\repos\Ravadre_Stacks\PerfTests\Executors\Program.cs,RunSingleExecutor,The following statement contains a magic number: Console.WriteLine("Action block (ctx) time per msg: " + stats.GetAverateTimePerActionNs(1000000).ToString() + "ns");
Magic Number,Executors,Program,C:\research\architectureSmells\repos\Ravadre_Stacks\PerfTests\Executors\Program.cs,RunSingleExecutor,The following statement contains a magic number: test = new SingleExecutor(1000000' () => new ActionBlockExecutor(new ActionBlockExecutorSettings() { SupportSynchronizationContext = false }));
Magic Number,Executors,Program,C:\research\architectureSmells\repos\Ravadre_Stacks\PerfTests\Executors\Program.cs,RunSingleExecutor,The following statement contains a magic number: stats = Benchmark.Measure(test.Run' 5);
Magic Number,Executors,Program,C:\research\architectureSmells\repos\Ravadre_Stacks\PerfTests\Executors\Program.cs,RunSingleExecutor,The following statement contains a magic number: Console.WriteLine("Action block (no ctx) time per msg: " + stats.GetAverateTimePerActionNs(1000000).ToString() + "ns");
Magic Number,Executors,BenchmarkStats,C:\research\architectureSmells\repos\Ravadre_Stacks\PerfTests\Executors\Benchmark.cs,GetAverateTimePerActionNs,The following statement contains a magic number: return TotalAverageTime.Ticks * 1000000L / TimeSpan.TicksPerMillisecond / actionCount;
