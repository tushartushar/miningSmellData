Implementation smell,Namespace,Class,File,Method,Description
Magic Number,CrossroadsIO.SmokeTests,HelloWorld,D:\research\architectureSmells\repos\jgoz_crossroads-net\src\SmokeTests\HelloWorld.cs,ClientThread,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,CrossroadsIO.SmokeTests,HelloWorld,D:\research\architectureSmells\repos\jgoz_crossroads-net\src\SmokeTests\HelloWorld.cs,ClientThread,The following statement contains a magic number: var buffer = new byte[100];
Magic Number,CrossroadsIO.SmokeTests,LatencyBenchmark,D:\research\architectureSmells\repos\jgoz_crossroads-net\src\SmokeTests\LatencyBenchmark.cs,Run,The following statement contains a magic number: server.Join(5000);
Magic Number,CrossroadsIO.SmokeTests,LatencyBenchmark,D:\research\architectureSmells\repos\jgoz_crossroads-net\src\SmokeTests\LatencyBenchmark.cs,Run,The following statement contains a magic number: client.Join(5000);
Magic Number,CrossroadsIO.SmokeTests,LatencyBenchmark,D:\research\architectureSmells\repos\jgoz_crossroads-net\src\SmokeTests\LatencyBenchmark.cs,ClientThread,The following statement contains a magic number: double latency = (double)elapsedTime / RoundtripCount / 2 * 1000000 / Stopwatch.Frequency;
Magic Number,CrossroadsIO.SmokeTests,LatencyBenchmark,D:\research\architectureSmells\repos\jgoz_crossroads-net\src\SmokeTests\LatencyBenchmark.cs,ClientThread,The following statement contains a magic number: double latency = (double)elapsedTime / RoundtripCount / 2 * 1000000 / Stopwatch.Frequency;
Magic Number,CrossroadsIO.SmokeTests,ReceiveBenchmark,D:\research\architectureSmells\repos\jgoz_crossroads-net\src\SmokeTests\ReceiveBenchmark.cs,ClientThread,The following statement contains a magic number: double latency = (double)elapsedTime / RoundtripCount / 2 * 1000000 / Stopwatch.Frequency;
Magic Number,CrossroadsIO.SmokeTests,ReceiveBenchmark,D:\research\architectureSmells\repos\jgoz_crossroads-net\src\SmokeTests\ReceiveBenchmark.cs,ClientThread,The following statement contains a magic number: double latency = (double)elapsedTime / RoundtripCount / 2 * 1000000 / Stopwatch.Frequency;
Magic Number,CrossroadsIO.SmokeTests,ReceiveBenchmark,D:\research\architectureSmells\repos\jgoz_crossroads-net\src\SmokeTests\ReceiveBenchmark.cs,ClientThread,The following statement contains a magic number: double latency = (double)elapsedTime / RoundtripCount / 2 * 1000000 / Stopwatch.Frequency;
Magic Number,CrossroadsIO.SmokeTests,ReceiveBenchmark,D:\research\architectureSmells\repos\jgoz_crossroads-net\src\SmokeTests\ReceiveBenchmark.cs,ClientThread,The following statement contains a magic number: double latency = (double)elapsedTime / RoundtripCount / 2 * 1000000 / Stopwatch.Frequency;
Magic Number,CrossroadsIO.SmokeTests,ReceiveBenchmark,D:\research\architectureSmells\repos\jgoz_crossroads-net\src\SmokeTests\ReceiveBenchmark.cs,ServerThread,The following statement contains a magic number: j < 2
Magic Number,CrossroadsIO.SmokeTests,ThroughputBenchmark,D:\research\architectureSmells\repos\jgoz_crossroads-net\src\SmokeTests\ThroughputBenchmark.cs,ProxyPullThread,The following statement contains a magic number: Debug.Assert(message[messageSize / 2] == 0x42' "Message did not contain verification data.");
Magic Number,CrossroadsIO.SmokeTests,ThroughputBenchmark,D:\research\architectureSmells\repos\jgoz_crossroads-net\src\SmokeTests\ThroughputBenchmark.cs,ProxyPullThread,The following statement contains a magic number: Debug.Assert(message[messageSize / 2] == 0x42' "Message did not contain verification data.");
Magic Number,CrossroadsIO.SmokeTests,ThroughputBenchmark,D:\research\architectureSmells\repos\jgoz_crossroads-net\src\SmokeTests\ThroughputBenchmark.cs,ProxyPullThread,The following statement contains a magic number: long megabitThroughput = messageThroughput * messageSize * 8 / 1000000;
Magic Number,CrossroadsIO.SmokeTests,ThroughputBenchmark,D:\research\architectureSmells\repos\jgoz_crossroads-net\src\SmokeTests\ThroughputBenchmark.cs,ProxyPullThread,The following statement contains a magic number: long megabitThroughput = messageThroughput * messageSize * 8 / 1000000;
Magic Number,CrossroadsIO.SmokeTests,ThroughputBenchmark,D:\research\architectureSmells\repos\jgoz_crossroads-net\src\SmokeTests\ThroughputBenchmark.cs,ProxyPushThread,The following statement contains a magic number: msg[messageSize / 2] = 0x42;
