Implementation smell,Namespace,Class,File,Method,Description
Long Method,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,RulerView,The method has 122 lines of code.
Long Method,Timeliner,TimelineView,C:\repos\vvvv_Timeliner\Source\View\TimelinerView.cs,TimelineView,The method has 100 lines of code.
Long Method,Timeliner,PoshTimeliner,C:\repos\vvvv_Timeliner\Source\PoshTimeliner.cs,PoshServer_OnKeyDown,The method has 120 lines of code.
Complex Method,Timeliner,KeyframeMouseHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseDown,Cyclomatic complexity of the method is 9
Complex Method,Timeliner,PoshTimeliner,C:\repos\vvvv_Timeliner\Source\PoshTimeliner.cs,Nudge,Cyclomatic complexity of the method is 8
Long Parameter List,Timeliner,TLCurve,C:\repos\vvvv_Timeliner\Source\Model\ValueTrack.cs,ApproximateCubicBezierParameter,The method has 5 parameters. Parameters: atX' P0_X' C0_X' C1_X' P1_X
Long Parameter List,Timeliner,TLCurve,C:\repos\vvvv_Timeliner\Source\Model\ValueTrack.cs,BezierInterpolate,The method has 5 parameters. Parameters: s' p0' c0' c1' p1
Long Parameter List,Timeliner,SvgValueWidget,C:\repos\vvvv_Timeliner\Source\SvgWidgets\SvgValueWidget.cs,SvgValueWidget,The method has 5 parameters. Parameters: name' width' height' label' value
Long Parameter List,Timeliner,CurveView,C:\repos\vvvv_Timeliner\Source\View\CurveView.cs,CreatePath,The method has 7 parameters. Parameters: x1' y1' x2' y2' isLinear' easeIn' easeOut
Long Statement,Timeliner,TLCurve,C:\repos\vvvv_Timeliner\Source\Model\ValueTrack.cs,BezierInterpolate,The length of the statement  "            return Math.Pow(1 - s' 3) * p0 + 3 * Math.Pow(1 - s' 2) * s * c0 + 3 * (1 - s) * Math.Pow(s' 2) * c1 + Math.Pow(s' 3) * p1; " is 123.
Long Statement,Timeliner,CurveView,C:\repos\vvvv_Timeliner\Source\View\CurveView.cs,UpdatePathData,The length of the statement  "                    CreatePath(Model.Start.Time.Value' Model.Start.Value.Value' Model.End.Time.Value' Model.End.Value.Value' (Model.Start.Ease.Value == 0) && (Model.End.Ease.Value == 0)' (Model.End.Ease.Value == 1) || (Model.End.Ease.Value == 3)' (Model.Start.Ease.Value == 2) || (Model.Start.Ease.Value == 3));" is 291.
Long Statement,Timeliner,ValueKeyframeView,C:\repos\vvvv_Timeliner\Source\View\ValueKeyframeView.cs,IsSelectedBy,The length of the statement  "                return rect.IntersectsWith(new RectangleF(Model.Time.Value' Parent.Model.Minimum.Value' 0.1f' Parent.Model.Maximum.Value - Parent.Model.Minimum.Value));" is 152.
Long Statement,Timeliner,TimeBarHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseDrag,The length of the statement  "                var closestKeyframe = Instance.Tracks.SelectMany(track => track.KeyframeViews).OrderBy(kf => kf.Model.Time.Value).Where(kf => Math.Abs(Instance.Ruler.TimeToXPos(kf.Model.Time.Value) - arg.X) < 10);" is 197.
Long Statement,Timeliner,LabelDragMouseHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseDown,The length of the statement  "                Instance.SizeBarDragRect.Y = Instance.Top - Instance.SizeBarDragRect.Height / 2 - (Instance.MainGroup.Parent.Transforms[0] as SvgTranslate).Y - Instance.SizeBar.Height / 2;" is 172.
Long Statement,Timeliner,LabelDragMouseHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseDrag,The length of the statement  "                    Instance.SizeBarDragRect.Y = target.Top - Instance.SizeBarDragRect.Height / 2 - (Instance.MainGroup.Parent.Transforms[0] as SvgTranslate).Y - Instance.SizeBar.Height / 2;" is 170.
Long Statement,Timeliner,LabelDragMouseHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseDrag,The length of the statement  "                    Instance.SizeBarDragRect.Y = Instance.Parent.Tracks.Max(x => x.Top + x.Height) - Instance.SizeBarDragRect.Height / 2 - (Instance.MainGroup.Parent.Transforms[0] as SvgTranslate).Y  - Instance.SizeBar.Height / 2;" is 210.
Long Statement,Timeliner,SelectionMouseHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseSelection,The length of the statement  "            rect = new RectangleF(rect.X' rect.Y - Instance.Parent.FTrackGroup.Transforms[0].Matrix.Elements[5]' rect.Width' rect.Height);" is 126.
Long Statement,Timeliner,KeyframeMouseHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseDrag,The length of the statement  "                //                var closestKeyframe = Instance.Parent.Parent.Tracks.SelectMany(track => track.KeyframeViews).Except(Enumerable.Repeat(Instance' 1)).OrderBy(kf => kf.Model.Time.Value).Where(kf => Math.Abs(rlr.TimeToXPos(kf.Model.Time.Value) - rlr.TimeToXPos(Instance.Model.Time.Value)) < 3);" is 292.
Long Statement,Timeliner,TrackView,C:\repos\vvvv_Timeliner\Source\View\TrackView.cs,CreateKeyframeMenu,The length of the statement  "				props = typeof(TLValueKeyframe).GetProperties().Where(prop => Attribute.IsDefined(prop' typeof(KeyframeMenuEntryAttribute)));" is 125.
Long Statement,Timeliner,TrackView,C:\repos\vvvv_Timeliner\Source\View\TrackView.cs,CreateKeyframeMenu,The length of the statement  "				props = typeof(TLStringKeyframe).GetProperties().Where(prop => Attribute.IsDefined(prop' typeof(KeyframeMenuEntryAttribute)));" is 126.
Long Statement,Timeliner,PoshTimeliner,C:\repos\vvvv_Timeliner\Source\PoshTimeliner.cs,Nudge,The length of the statement  "						var nextKeyframe = Timeliner.TimelineView.Tracks.SelectMany(track => track.KeyframeViews).OrderBy(kf => kf.Model.Time.Value).First(kf => kf.Model.Time.Value > currentTime);" is 172.
Long Statement,Timeliner,PoshTimeliner,C:\repos\vvvv_Timeliner\Source\PoshTimeliner.cs,Nudge,The length of the statement  "						var lastKeyframe = Timeliner.TimelineView.Tracks.SelectMany(track => track.KeyframeViews).OrderByDescending(kf => kf.Model.Time.Value).First(kf => kf.Model.Time.Value < currentTime);" is 182.
Long Statement,Timeliner,PoshTimeliner,C:\repos\vvvv_Timeliner\Source\PoshTimeliner.cs,Evaluate,The length of the statement  "            //here we can only publish updates (no adds) since those start pulling status from the scenegraph while user-action can insert at the same time" is 143.
Virtual Method Call from Constructor,Timeliner,TLViewBase,C:\repos\vvvv_Timeliner\Source\View\BaseClasses.cs,TLViewBase,The constructor "TLViewBase" calls a virtual method "GetGroupID".
Magic Number,Timeliner,TLAudioTrack,C:\repos\vvvv_Timeliner\Source\Model\AudioTrack.cs,LoadFile,The following statement contains a magic number: var buffer = new byte[16384*2];
Magic Number,Timeliner,TLAudioTrack,C:\repos\vvvv_Timeliner\Source\Model\AudioTrack.cs,LoadFile,The following statement contains a magic number: var buffer = new byte[16384*2];
Magic Number,Timeliner,TLAudioTrack,C:\repos\vvvv_Timeliner\Source\Model\AudioTrack.cs,LoadFile,The following statement contains a magic number: while (wave.Position < wave.Length)  	    	{  	    		read = wave.Read(buffer' 0' 16384*2);  	    		  	    		var max = 0f;  	    		var absMax = 0f;  	    		for (int j = 0; j < read / 4; j++)  	    		{  	    			var s = BitConverter.ToSingle(buffer' j*4);  	    			var abs = Math.Abs(s);  	    			if (abs > absMax)  	    			{  	    				absMax = abs;  	    				max = s;  	    			}  	    		}  	    		Samples.Add(new TLSample(i += 2' max));  	    	}
Magic Number,Timeliner,TLAudioTrack,C:\repos\vvvv_Timeliner\Source\Model\AudioTrack.cs,LoadFile,The following statement contains a magic number: while (wave.Position < wave.Length)  	    	{  	    		read = wave.Read(buffer' 0' 16384*2);  	    		  	    		var max = 0f;  	    		var absMax = 0f;  	    		for (int j = 0; j < read / 4; j++)  	    		{  	    			var s = BitConverter.ToSingle(buffer' j*4);  	    			var abs = Math.Abs(s);  	    			if (abs > absMax)  	    			{  	    				absMax = abs;  	    				max = s;  	    			}  	    		}  	    		Samples.Add(new TLSample(i += 2' max));  	    	}
Magic Number,Timeliner,TLAudioTrack,C:\repos\vvvv_Timeliner\Source\Model\AudioTrack.cs,LoadFile,The following statement contains a magic number: while (wave.Position < wave.Length)  	    	{  	    		read = wave.Read(buffer' 0' 16384*2);  	    		  	    		var max = 0f;  	    		var absMax = 0f;  	    		for (int j = 0; j < read / 4; j++)  	    		{  	    			var s = BitConverter.ToSingle(buffer' j*4);  	    			var abs = Math.Abs(s);  	    			if (abs > absMax)  	    			{  	    				absMax = abs;  	    				max = s;  	    			}  	    		}  	    		Samples.Add(new TLSample(i += 2' max));  	    	}
Magic Number,Timeliner,TLAudioTrack,C:\repos\vvvv_Timeliner\Source\Model\AudioTrack.cs,LoadFile,The following statement contains a magic number: while (wave.Position < wave.Length)  	    	{  	    		read = wave.Read(buffer' 0' 16384*2);  	    		  	    		var max = 0f;  	    		var absMax = 0f;  	    		for (int j = 0; j < read / 4; j++)  	    		{  	    			var s = BitConverter.ToSingle(buffer' j*4);  	    			var abs = Math.Abs(s);  	    			if (abs > absMax)  	    			{  	    				absMax = abs;  	    				max = s;  	    			}  	    		}  	    		Samples.Add(new TLSample(i += 2' max));  	    	}
Magic Number,Timeliner,TLAudioTrack,C:\repos\vvvv_Timeliner\Source\Model\AudioTrack.cs,LoadFile,The following statement contains a magic number: while (wave.Position < wave.Length)  	    	{  	    		read = wave.Read(buffer' 0' 16384*2);  	    		  	    		var max = 0f;  	    		var absMax = 0f;  	    		for (int j = 0; j < read / 4; j++)  	    		{  	    			var s = BitConverter.ToSingle(buffer' j*4);  	    			var abs = Math.Abs(s);  	    			if (abs > absMax)  	    			{  	    				absMax = abs;  	    				max = s;  	    			}  	    		}  	    		Samples.Add(new TLSample(i += 2' max));  	    	}
Magic Number,Timeliner,TLRuler,C:\repos\vvvv_Timeliner\Source\Model\Ruler.cs,TLRuler,The following statement contains a magic number: FPS.Value = 30;
Magic Number,Timeliner,TLRuler,C:\repos\vvvv_Timeliner\Source\Model\Ruler.cs,TLRuler,The following statement contains a magic number: LoopEnd.Value = 10;
Magic Number,Timeliner,TLTrackBase,C:\repos\vvvv_Timeliner\Source\Model\BaseClasses.cs,TLTrackBase,The following statement contains a magic number: UncollapsedHeight.Value = 75;
Magic Number,Timeliner,TLTrackBase,C:\repos\vvvv_Timeliner\Source\Model\BaseClasses.cs,SortAndAssignNeighbours,The following statement contains a magic number: if(keyframes.Count > 1)          	{       		          		//arrange neighbours          		keyframes[0].NeighbourLeft = null;          		keyframes[0].NeighbourRight = keyframes[1];          		for (int i = 1; i < keyframes.Count-1; i++)          		{          			keyframes[i].NeighbourLeft = keyframes[i-1];          			keyframes[i].NeighbourRight = keyframes[i+1];          		}          		keyframes[keyframes.Count - 1].NeighbourLeft = keyframes[keyframes.Count - 2];          		keyframes[keyframes.Count - 1].NeighbourRight = null;          	}          	else if (keyframes.Count == 1)          	{          		keyframes[0].NeighbourLeft = null;          		keyframes[0].NeighbourRight = null;          	}
Magic Number,Timeliner,TrackMenuEntryAttribute,C:\repos\vvvv_Timeliner\Source\Model\BaseClasses.cs,TrackMenuEntryAttribute,The following statement contains a magic number: Height = 20;
Magic Number,Timeliner,KeyframeMenuEntryAttribute,C:\repos\vvvv_Timeliner\Source\Model\BaseClasses.cs,KeyframeMenuEntryAttribute,The following statement contains a magic number: Height = 20;
Magic Number,Timeliner,Timer,C:\repos\vvvv_Timeliner\Source\Model\Timer.cs,TimeToString,The following statement contains a magic number: var ms = (int) ((time - Math.Floor(time)) * 1000);
Magic Number,Timeliner,Timer,C:\repos\vvvv_Timeliner\Source\Model\Timer.cs,TimeToString,The following statement contains a magic number: var s = (int) (time % 60);
Magic Number,Timeliner,Timer,C:\repos\vvvv_Timeliner\Source\Model\Timer.cs,TimeToString,The following statement contains a magic number: var m = (int) (time / 60 % 60);
Magic Number,Timeliner,Timer,C:\repos\vvvv_Timeliner\Source\Model\Timer.cs,TimeToString,The following statement contains a magic number: var m = (int) (time / 60 % 60);
Magic Number,Timeliner,Timer,C:\repos\vvvv_Timeliner\Source\Model\Timer.cs,TimeToString,The following statement contains a magic number: var h = (int) (time / 60 / 60 % 60);
Magic Number,Timeliner,Timer,C:\repos\vvvv_Timeliner\Source\Model\Timer.cs,TimeToString,The following statement contains a magic number: var h = (int) (time / 60 / 60 % 60);
Magic Number,Timeliner,Timer,C:\repos\vvvv_Timeliner\Source\Model\Timer.cs,TimeToString,The following statement contains a magic number: var h = (int) (time / 60 / 60 % 60);
Magic Number,Timeliner,Timer,C:\repos\vvvv_Timeliner\Source\Model\Timer.cs,TimeToString,The following statement contains a magic number: DateTime dt = new DateTime(2008' 1' 1' h' m' s' ms);
Magic Number,Timeliner,TLCurve,C:\repos\vvvv_Timeliner\Source\Model\ValueTrack.cs,UpdateCurve,The following statement contains a magic number: FC1 = FP1 + d * (1/3.0);
Magic Number,Timeliner,TLCurve,C:\repos\vvvv_Timeliner\Source\Model\ValueTrack.cs,UpdateCurve,The following statement contains a magic number: FC2 = FP2 - d * (1/3.0);
Magic Number,Timeliner,TLCurve,C:\repos\vvvv_Timeliner\Source\Model\ValueTrack.cs,UpdateCurve,The following statement contains a magic number: switch (Start.Ease.Value)              {                  case 2:                       case 3: FC1 = FP1 + (d * Start.EaseOut.Value); break;              }
Magic Number,Timeliner,TLCurve,C:\repos\vvvv_Timeliner\Source\Model\ValueTrack.cs,UpdateCurve,The following statement contains a magic number: switch (Start.Ease.Value)              {                  case 2:                       case 3: FC1 = FP1 + (d * Start.EaseOut.Value); break;              }
Magic Number,Timeliner,TLCurve,C:\repos\vvvv_Timeliner\Source\Model\ValueTrack.cs,UpdateCurve,The following statement contains a magic number: switch (End.Ease.Value)              {                  case 1:                       case 3: FC2 = FP2 + (d * End.EaseIn.Value); break;              }
Magic Number,Timeliner,TLCurve,C:\repos\vvvv_Timeliner\Source\Model\ValueTrack.cs,BezierInterpolate,The following statement contains a magic number: return Math.Pow(1 - s' 3) * p0 + 3 * Math.Pow(1 - s' 2) * s * c0 + 3 * (1 - s) * Math.Pow(s' 2) * c1 + Math.Pow(s' 3) * p1;
Magic Number,Timeliner,TLCurve,C:\repos\vvvv_Timeliner\Source\Model\ValueTrack.cs,BezierInterpolate,The following statement contains a magic number: return Math.Pow(1 - s' 3) * p0 + 3 * Math.Pow(1 - s' 2) * s * c0 + 3 * (1 - s) * Math.Pow(s' 2) * c1 + Math.Pow(s' 3) * p1;
Magic Number,Timeliner,TLCurve,C:\repos\vvvv_Timeliner\Source\Model\ValueTrack.cs,BezierInterpolate,The following statement contains a magic number: return Math.Pow(1 - s' 3) * p0 + 3 * Math.Pow(1 - s' 2) * s * c0 + 3 * (1 - s) * Math.Pow(s' 2) * c1 + Math.Pow(s' 3) * p1;
Magic Number,Timeliner,TLCurve,C:\repos\vvvv_Timeliner\Source\Model\ValueTrack.cs,BezierInterpolate,The following statement contains a magic number: return Math.Pow(1 - s' 3) * p0 + 3 * Math.Pow(1 - s' 2) * s * c0 + 3 * (1 - s) * Math.Pow(s' 2) * c1 + Math.Pow(s' 3) * p1;
Magic Number,Timeliner,TLCurve,C:\repos\vvvv_Timeliner\Source\Model\ValueTrack.cs,BezierInterpolate,The following statement contains a magic number: return Math.Pow(1 - s' 3) * p0 + 3 * Math.Pow(1 - s' 2) * s * c0 + 3 * (1 - s) * Math.Pow(s' 2) * c1 + Math.Pow(s' 3) * p1;
Magic Number,Timeliner,TLCurve,C:\repos\vvvv_Timeliner\Source\Model\ValueTrack.cs,BezierInterpolate,The following statement contains a magic number: return Math.Pow(1 - s' 3) * p0 + 3 * Math.Pow(1 - s' 2) * s * c0 + 3 * (1 - s) * Math.Pow(s' 2) * c1 + Math.Pow(s' 3) * p1;
Magic Number,Timeliner,SvgButtonWidget,C:\repos\vvvv_Timeliner\Source\SvgWidgets\SvgButtonWidget.cs,SvgButtonWidget,The following statement contains a magic number: FLabel.FontSize = 12;
Magic Number,Timeliner,SvgButtonWidget,C:\repos\vvvv_Timeliner\Source\SvgWidgets\SvgButtonWidget.cs,SvgButtonWidget,The following statement contains a magic number: FLabel.X = 2;
Magic Number,Timeliner,SvgButtonWidget,C:\repos\vvvv_Timeliner\Source\SvgWidgets\SvgButtonWidget.cs,SvgButtonWidget,The following statement contains a magic number: FLabel.Y = FLabel.FontSize + 2;
Magic Number,Timeliner,SvgStringWidget,C:\repos\vvvv_Timeliner\Source\SvgWidgets\SvgStringWidget.cs,SvgStringWidget,The following statement contains a magic number: Label.FontSize = 20;
Magic Number,Timeliner,SvgStringWidget,C:\repos\vvvv_Timeliner\Source\SvgWidgets\SvgStringWidget.cs,SvgStringWidget,The following statement contains a magic number: Label.X = 2;
Magic Number,Timeliner,SvgStringWidget,C:\repos\vvvv_Timeliner\Source\SvgWidgets\SvgStringWidget.cs,SvgStringWidget,The following statement contains a magic number: Label.Y = Label.FontSize + 2;
Magic Number,Timeliner,SvgValueWidget,C:\repos\vvvv_Timeliner\Source\SvgWidgets\SvgValueWidget.cs,SvgValueWidget,The following statement contains a magic number: Label.FontSize = 12;
Magic Number,Timeliner,SvgValueWidget,C:\repos\vvvv_Timeliner\Source\SvgWidgets\SvgValueWidget.cs,SvgValueWidget,The following statement contains a magic number: Label.X = 2;
Magic Number,Timeliner,SvgValueWidget,C:\repos\vvvv_Timeliner\Source\SvgWidgets\SvgValueWidget.cs,SvgValueWidget,The following statement contains a magic number: Label.Y = Label.FontSize + 2;
Magic Number,Timeliner,SvgValueWidget,C:\repos\vvvv_Timeliner\Source\SvgWidgets\SvgValueWidget.cs,SvgValueWidget,The following statement contains a magic number: ValueLabel.FontSize = 12;
Magic Number,Timeliner,SvgValueWidget,C:\repos\vvvv_Timeliner\Source\SvgWidgets\SvgValueWidget.cs,SvgValueWidget,The following statement contains a magic number: ValueLabel.X = 80;
Magic Number,Timeliner,SvgValueWidget,C:\repos\vvvv_Timeliner\Source\SvgWidgets\SvgValueWidget.cs,SvgValueWidget,The following statement contains a magic number: ValueLabel.Y = ValueLabel.FontSize + 2;
Magic Number,Timeliner,SvgValueWidget,C:\repos\vvvv_Timeliner\Source\SvgWidgets\SvgValueWidget.cs,Background_MouseScroll,The following statement contains a magic number: var delta = (e.Scroll) / (120*100f);
Magic Number,Timeliner,AudioTrackView,C:\repos\vvvv_Timeliner\Source\View\AudioTrackView.cs,AudioTrackView,The following statement contains a magic number: SampleDefinition.Width = 5;
Magic Number,Timeliner,CurveView,C:\repos\vvvv_Timeliner\Source\View\CurveView.cs,UpdatePathData,The following statement contains a magic number: if (FIsDirty)             {                 Model.UpdateCurve();                                  Path.PathData.Clear(); 	                 if (Model.Name.StartsWith("Start"))                 {                     CreatePath(-99999.9f' Model.End.Value.Value' Model.End.Time.Value' Model.End.Value.Value' true' false' false);                 }                 else if (Model.Name.StartsWith("End"))                 {                     CreatePath(Model.Start.Time.Value' Model.Start.Value.Value' 99999.9f' Model.Start.Value.Value' true' false' false);                 }                 else                 {                     CreatePath(Model.Start.Time.Value' Model.Start.Value.Value' Model.End.Time.Value' Model.End.Value.Value' (Model.Start.Ease.Value == 0) && (Model.End.Ease.Value == 0)' (Model.End.Ease.Value == 1) || (Model.End.Ease.Value == 3)' (Model.Start.Ease.Value == 2) || (Model.Start.Ease.Value == 3));                 }                                  FIsDirty = false;             }
Magic Number,Timeliner,CurveView,C:\repos\vvvv_Timeliner\Source\View\CurveView.cs,UpdatePathData,The following statement contains a magic number: if (FIsDirty)             {                 Model.UpdateCurve();                                  Path.PathData.Clear(); 	                 if (Model.Name.StartsWith("Start"))                 {                     CreatePath(-99999.9f' Model.End.Value.Value' Model.End.Time.Value' Model.End.Value.Value' true' false' false);                 }                 else if (Model.Name.StartsWith("End"))                 {                     CreatePath(Model.Start.Time.Value' Model.Start.Value.Value' 99999.9f' Model.Start.Value.Value' true' false' false);                 }                 else                 {                     CreatePath(Model.Start.Time.Value' Model.Start.Value.Value' Model.End.Time.Value' Model.End.Value.Value' (Model.Start.Ease.Value == 0) && (Model.End.Ease.Value == 0)' (Model.End.Ease.Value == 1) || (Model.End.Ease.Value == 3)' (Model.Start.Ease.Value == 2) || (Model.Start.Ease.Value == 3));                 }                                  FIsDirty = false;             }
Magic Number,Timeliner,CurveView,C:\repos\vvvv_Timeliner\Source\View\CurveView.cs,UpdatePathData,The following statement contains a magic number: if (FIsDirty)             {                 Model.UpdateCurve();                                  Path.PathData.Clear(); 	                 if (Model.Name.StartsWith("Start"))                 {                     CreatePath(-99999.9f' Model.End.Value.Value' Model.End.Time.Value' Model.End.Value.Value' true' false' false);                 }                 else if (Model.Name.StartsWith("End"))                 {                     CreatePath(Model.Start.Time.Value' Model.Start.Value.Value' 99999.9f' Model.Start.Value.Value' true' false' false);                 }                 else                 {                     CreatePath(Model.Start.Time.Value' Model.Start.Value.Value' Model.End.Time.Value' Model.End.Value.Value' (Model.Start.Ease.Value == 0) && (Model.End.Ease.Value == 0)' (Model.End.Ease.Value == 1) || (Model.End.Ease.Value == 3)' (Model.Start.Ease.Value == 2) || (Model.Start.Ease.Value == 3));                 }                                  FIsDirty = false;             }
Magic Number,Timeliner,StringKeyframeView,C:\repos\vvvv_Timeliner\Source\View\StringKeyframeView.cs,StringKeyframeView,The following statement contains a magic number: Label.FontSize = 12;
Magic Number,Timeliner,StringKeyframeView,C:\repos\vvvv_Timeliner\Source\View\StringKeyframeView.cs,UpdateScene,The following statement contains a magic number: if (true)  			{  				var m = new Matrix();  				var y = Math.Max(Background.Y' -Parent.Model.Height.Value + 10);  				m.Translate(Background.X + 0.1f' y);  				  				m.Multiply(Parent.KeyframeDefinition.Transforms[0].Matrix);  				  				Label.Transforms[0] = new SvgMatrix(m.Elements.ToList());  				Label.Y = 20;  				Label.Text = Model.Text.Value;  			}
Magic Number,Timeliner,StringKeyframeView,C:\repos\vvvv_Timeliner\Source\View\StringKeyframeView.cs,UpdateScene,The following statement contains a magic number: if (true)  			{  				var m = new Matrix();  				var y = Math.Max(Background.Y' -Parent.Model.Height.Value + 10);  				m.Translate(Background.X + 0.1f' y);  				  				m.Multiply(Parent.KeyframeDefinition.Transforms[0].Matrix);  				  				Label.Transforms[0] = new SvgMatrix(m.Elements.ToList());  				Label.Y = 20;  				Label.Text = Model.Text.Value;  			}
Magic Number,Timeliner,StringTrackView,C:\repos\vvvv_Timeliner\Source\View\StringTrackView.cs,StringTrackView,The following statement contains a magic number: CurrentValue.FontSize = 12;
Magic Number,Timeliner,StringTrackView,C:\repos\vvvv_Timeliner\Source\View\StringTrackView.cs,StringTrackView,The following statement contains a magic number: CurrentValue.X = 5;
Magic Number,Timeliner,StringTrackView,C:\repos\vvvv_Timeliner\Source\View\StringTrackView.cs,StringTrackView,The following statement contains a magic number: CurrentValue.Y = 24;
Magic Number,Timeliner,StringTrackView,C:\repos\vvvv_Timeliner\Source\View\StringTrackView.cs,UpdateScene,The following statement contains a magic number: CollapsedKeyframeDefinition.StartY = - Model.CollapsedHeight * PanZoomGroup.Transforms[1].Matrix.Elements[5];
Magic Number,Timeliner,StringTrackView,C:\repos\vvvv_Timeliner\Source\View\StringTrackView.cs,ApplyInverseScaling,The following statement contains a magic number: var s1 = new SvgScale(m.Elements[0]' m.Elements[3]);
Magic Number,Timeliner,StringTrackView,C:\repos\vvvv_Timeliner\Source\View\StringTrackView.cs,ApplyInverseScaling,The following statement contains a magic number: var s2 = new SvgScale(m.Elements[0]' m.Elements[3]);
Magic Number,Timeliner,StringTrackView,C:\repos\vvvv_Timeliner\Source\View\StringTrackView.cs,Background_MouseClick,The following statement contains a magic number: if(e.ClickCount >= 2)  			{  				var x = FRuler.XPosToTime(e.x);  				var y = YPosToValue(e.y);  				  				var kf = new TLStringKeyframe(x' "text " + Keyframes.Count);  				var cmd = Command.Add(this.Model.Keyframes' kf);  				History.Insert(cmd);  			}
Magic Number,Timeliner,ValueKeyframeView,C:\repos\vvvv_Timeliner\Source\View\ValueKeyframeView.cs,ValueKeyframeView,The following statement contains a magic number: Label.FontSize = 12;
Magic Number,Timeliner,ValueKeyframeView,C:\repos\vvvv_Timeliner\Source\View\ValueKeyframeView.cs,UpdateScene,The following statement contains a magic number: if (Label.Visible) 			{ 				var m = new Matrix(); 				var h = Parent.KeyframeDefinition.Radius * 3 * Parent.KeyframeDefinition.Transforms[0].Matrix.Elements[3]; 				var y = Math.Max(Background.Y' -Parent.Model.Maximum.Value + h); 				m.Translate(Background.X + 0.15f' y); 				m.Multiply(Parent.KeyframeDefinition.Transforms[0].Matrix);  				Label.Transforms[0] = new SvgMatrix(m.Elements.ToList()); 				Label.Text = string.Format("{0:0.0000}"' Model.Value.Value) + " " + string.Format("{0:0.00}"' Model.Time.Value); 			}
Magic Number,Timeliner,ValueKeyframeView,C:\repos\vvvv_Timeliner\Source\View\ValueKeyframeView.cs,UpdateScene,The following statement contains a magic number: if (Label.Visible) 			{ 				var m = new Matrix(); 				var h = Parent.KeyframeDefinition.Radius * 3 * Parent.KeyframeDefinition.Transforms[0].Matrix.Elements[3]; 				var y = Math.Max(Background.Y' -Parent.Model.Maximum.Value + h); 				m.Translate(Background.X + 0.15f' y); 				m.Multiply(Parent.KeyframeDefinition.Transforms[0].Matrix);  				Label.Transforms[0] = new SvgMatrix(m.Elements.ToList()); 				Label.Text = string.Format("{0:0.0000}"' Model.Value.Value) + " " + string.Format("{0:0.00}"' Model.Time.Value); 			}
Magic Number,Timeliner,ValueKeyframeView,C:\repos\vvvv_Timeliner\Source\View\ValueKeyframeView.cs,UpdateScene,The following statement contains a magic number: switch (Model.Ease.Value)             {                     case 1: ease = "_EI"; break;                     case 2: ease = "_EO"; break;                     case 3: ease = "_EIO"; break;             }
Magic Number,Timeliner,ValueKeyframeView,C:\repos\vvvv_Timeliner\Source\View\ValueKeyframeView.cs,UpdateScene,The following statement contains a magic number: switch (Model.Ease.Value)             {                     case 1: ease = "_EI"; break;                     case 2: ease = "_EO"; break;                     case 3: ease = "_EIO"; break;             }
Magic Number,Timeliner,TimeBarHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseDrag,The following statement contains a magic number: if (Button == 3)             {                 var closestKeyframe = Instance.Tracks.SelectMany(track => track.KeyframeViews).OrderBy(kf => kf.Model.Time.Value).Where(kf => Math.Abs(Instance.Ruler.TimeToXPos(kf.Model.Time.Value) - arg.X) < 10);                 if (closestKeyframe.Any())                     Instance.Timer.Time = closestKeyframe.First().Model.Time.Value;                 else                     Instance.Timer.Time = Instance.Ruler.XPosToTime(arg.X);             }             else                 Instance.Timer.Time = Instance.Ruler.XPosToTime(arg.X);
Magic Number,Timeliner,TimeBarHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseDrag,The following statement contains a magic number: if (Button == 3)             {                 var closestKeyframe = Instance.Tracks.SelectMany(track => track.KeyframeViews).OrderBy(kf => kf.Model.Time.Value).Where(kf => Math.Abs(Instance.Ruler.TimeToXPos(kf.Model.Time.Value) - arg.X) < 10);                 if (closestKeyframe.Any())                     Instance.Timer.Time = closestKeyframe.First().Model.Time.Value;                 else                     Instance.Timer.Time = Instance.Ruler.XPosToTime(arg.X);             }             else                 Instance.Timer.Time = Instance.Ruler.XPosToTime(arg.X);
Magic Number,Timeliner,LabelDragMouseHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseDown,The following statement contains a magic number: if(arg.Button == 1)             {                 var ret = base.MouseDown(sender' arg);                                  Instance.SizeBarDragRect.Width = new SvgUnit(SvgUnitType.Percentage' 100);                 Instance.SizeBarDragRect.Height = 20;                 Instance.SizeBarDragRect.X = 0;                 Instance.SizeBarDragRect.Y = Instance.Top - Instance.SizeBarDragRect.Height / 2 - (Instance.MainGroup.Parent.Transforms[0] as SvgTranslate).Y - Instance.SizeBar.Height / 2;                 Instance.SizeBarDragRect.Visible = true;                 Instance.Label.FontWeight = SvgFontWeight.bold;                 Instance.Label.CustomAttributes["style"] = "font-weight: bold;";                 return ret;             }             else return null;
Magic Number,Timeliner,LabelDragMouseHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseDown,The following statement contains a magic number: if(arg.Button == 1)             {                 var ret = base.MouseDown(sender' arg);                                  Instance.SizeBarDragRect.Width = new SvgUnit(SvgUnitType.Percentage' 100);                 Instance.SizeBarDragRect.Height = 20;                 Instance.SizeBarDragRect.X = 0;                 Instance.SizeBarDragRect.Y = Instance.Top - Instance.SizeBarDragRect.Height / 2 - (Instance.MainGroup.Parent.Transforms[0] as SvgTranslate).Y - Instance.SizeBar.Height / 2;                 Instance.SizeBarDragRect.Visible = true;                 Instance.Label.FontWeight = SvgFontWeight.bold;                 Instance.Label.CustomAttributes["style"] = "font-weight: bold;";                 return ret;             }             else return null;
Magic Number,Timeliner,LabelDragMouseHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseDown,The following statement contains a magic number: if(arg.Button == 1)             {                 var ret = base.MouseDown(sender' arg);                                  Instance.SizeBarDragRect.Width = new SvgUnit(SvgUnitType.Percentage' 100);                 Instance.SizeBarDragRect.Height = 20;                 Instance.SizeBarDragRect.X = 0;                 Instance.SizeBarDragRect.Y = Instance.Top - Instance.SizeBarDragRect.Height / 2 - (Instance.MainGroup.Parent.Transforms[0] as SvgTranslate).Y - Instance.SizeBar.Height / 2;                 Instance.SizeBarDragRect.Visible = true;                 Instance.Label.FontWeight = SvgFontWeight.bold;                 Instance.Label.CustomAttributes["style"] = "font-weight: bold;";                 return ret;             }             else return null;
Magic Number,Timeliner,LabelDragMouseHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseDown,The following statement contains a magic number: if(arg.Button == 1)             {                 var ret = base.MouseDown(sender' arg);                                  Instance.SizeBarDragRect.Width = new SvgUnit(SvgUnitType.Percentage' 100);                 Instance.SizeBarDragRect.Height = 20;                 Instance.SizeBarDragRect.X = 0;                 Instance.SizeBarDragRect.Y = Instance.Top - Instance.SizeBarDragRect.Height / 2 - (Instance.MainGroup.Parent.Transforms[0] as SvgTranslate).Y - Instance.SizeBar.Height / 2;                 Instance.SizeBarDragRect.Visible = true;                 Instance.Label.FontWeight = SvgFontWeight.bold;                 Instance.Label.CustomAttributes["style"] = "font-weight: bold;";                 return ret;             }             else return null;
Magic Number,Timeliner,LabelDragMouseHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseDrag,The following statement contains a magic number: if (delta.Y != 0)             {                 if (sender is TrackView)                 {                     var target = sender as TrackView;                     Instance.SizeBarDragRect.Y = target.Top - Instance.SizeBarDragRect.Height / 2 - (Instance.MainGroup.Parent.Transforms[0] as SvgTranslate).Y - Instance.SizeBar.Height / 2;                     FNewOrder = target.Model.Order.Value;                                          var oldOrder = Instance.Model.Order.Value;                     if (FNewOrder > oldOrder)                         FNewOrder -= 1;                 }                 else                 {                     Instance.SizeBarDragRect.Y = Instance.Parent.Tracks.Max(x => x.Top + x.Height) - Instance.SizeBarDragRect.Height / 2 - (Instance.MainGroup.Parent.Transforms[0] as SvgTranslate).Y  - Instance.SizeBar.Height / 2;                     FNewOrder = Instance.Parent.Tracks.Count-1;                 }             }
Magic Number,Timeliner,LabelDragMouseHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseDrag,The following statement contains a magic number: if (delta.Y != 0)             {                 if (sender is TrackView)                 {                     var target = sender as TrackView;                     Instance.SizeBarDragRect.Y = target.Top - Instance.SizeBarDragRect.Height / 2 - (Instance.MainGroup.Parent.Transforms[0] as SvgTranslate).Y - Instance.SizeBar.Height / 2;                     FNewOrder = target.Model.Order.Value;                                          var oldOrder = Instance.Model.Order.Value;                     if (FNewOrder > oldOrder)                         FNewOrder -= 1;                 }                 else                 {                     Instance.SizeBarDragRect.Y = Instance.Parent.Tracks.Max(x => x.Top + x.Height) - Instance.SizeBarDragRect.Height / 2 - (Instance.MainGroup.Parent.Transforms[0] as SvgTranslate).Y  - Instance.SizeBar.Height / 2;                     FNewOrder = Instance.Parent.Tracks.Count-1;                 }             }
Magic Number,Timeliner,LabelDragMouseHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseDrag,The following statement contains a magic number: if (delta.Y != 0)             {                 if (sender is TrackView)                 {                     var target = sender as TrackView;                     Instance.SizeBarDragRect.Y = target.Top - Instance.SizeBarDragRect.Height / 2 - (Instance.MainGroup.Parent.Transforms[0] as SvgTranslate).Y - Instance.SizeBar.Height / 2;                     FNewOrder = target.Model.Order.Value;                                          var oldOrder = Instance.Model.Order.Value;                     if (FNewOrder > oldOrder)                         FNewOrder -= 1;                 }                 else                 {                     Instance.SizeBarDragRect.Y = Instance.Parent.Tracks.Max(x => x.Top + x.Height) - Instance.SizeBarDragRect.Height / 2 - (Instance.MainGroup.Parent.Transforms[0] as SvgTranslate).Y  - Instance.SizeBar.Height / 2;                     FNewOrder = Instance.Parent.Tracks.Count-1;                 }             }
Magic Number,Timeliner,LabelDragMouseHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseDrag,The following statement contains a magic number: if (delta.Y != 0)             {                 if (sender is TrackView)                 {                     var target = sender as TrackView;                     Instance.SizeBarDragRect.Y = target.Top - Instance.SizeBarDragRect.Height / 2 - (Instance.MainGroup.Parent.Transforms[0] as SvgTranslate).Y - Instance.SizeBar.Height / 2;                     FNewOrder = target.Model.Order.Value;                                          var oldOrder = Instance.Model.Order.Value;                     if (FNewOrder > oldOrder)                         FNewOrder -= 1;                 }                 else                 {                     Instance.SizeBarDragRect.Y = Instance.Parent.Tracks.Max(x => x.Top + x.Height) - Instance.SizeBarDragRect.Height / 2 - (Instance.MainGroup.Parent.Transforms[0] as SvgTranslate).Y  - Instance.SizeBar.Height / 2;                     FNewOrder = Instance.Parent.Tracks.Count-1;                 }             }
Magic Number,Timeliner,SelectionMouseHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseSelection,The following statement contains a magic number: rect = new RectangleF(rect.X' rect.Y - Instance.Parent.FTrackGroup.Transforms[0].Matrix.Elements[5]' rect.Width' rect.Height);
Magic Number,Timeliner,KeyframeMouseHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseDown,The following statement contains a magic number: if ((arg.Button == 1) || (arg.Button == 3))             {                 FWasSelected = Instance.Model.Selected.Value;                 var cmd = new CompoundCommand();                 if ((!FWasSelected) && (!arg.CtrlKey))                 {                     //unselect all keyframes                     foreach (var track in Instance.Parent.Parent.Tracks)                         foreach (var kf in track.KeyframeViews.Where(x => x.Model.Selected.Value))                             cmd.Append(Command.Set(kf.Model.Selected' false));                 }                 //set keyframe selected                 cmd.Append(Command.Set(Instance.Model.Selected' true));                 Instance.History.Insert(cmd);                                  //start collecting movecommands in drag                 FMoveCommands = new CompoundCommand();                                  //store initial values to operate on for being able to drag beyond min/max                 foreach (var track in Instance.Parent.Parent.Tracks)                     foreach (var kf in track.KeyframeViews.Where(x => x.Model.Selected.Value))                 {                     if (!FAffectedTracks.Contains(track))                         FAffectedTracks.Add(track);                                          FSelectedKeyframes.Add(kf);                                          if(kf is ValueKeyframeView)                     {                         FActualValues.Add((kf as ValueKeyframeView).Model.Value.Value);                     }                 }             }
Magic Number,Timeliner,KeyframeMouseHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseClick,The following statement contains a magic number: if (arg.Button == 3)             {                 Instance.Parent.UpdateKeyframeMenu(Instance);                 Instance.Parent.ShowKeyframeMenu(arg);             }
Magic Number,Timeliner,RulerMouseHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseClick,The following statement contains a magic number: if (FMoveCommands.CommandCount == 0)                 switch (arg.Button)             {                 case 3:                     //show rulermenu                     Instance.ShowMenu(arg);                     break;             }
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,RulerView,The following statement contains a magic number: var width = new SvgUnit(SvgUnitType.Percentage' 100);
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,RulerView,The following statement contains a magic number: Background.Height = 25;
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,RulerView,The following statement contains a magic number: PlayButton = SvgDocumentWidget.Load(Path.Combine(TimelineView.ResourcePath' "PlayButton.svg")' caller' 2);
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,RulerView,The following statement contains a magic number: StopButton.X = 25;
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,RulerView,The following statement contains a magic number: TimeCodeLabel.FontSize = 20;
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,RulerView,The following statement contains a magic number: TimeCodeLabel.X = 55;
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,RulerView,The following statement contains a magic number: SizeBar.Height = 10;
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,RulerView,The following statement contains a magic number: MouseTimeLabel.FontSize = 14;
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,RulerView,The following statement contains a magic number: for (int i=0; i<70; i++)  			{  				var num = new SvgText(i.ToString());  				num.FontSize = 20;  				num.Y = num.FontSize;  				num.CustomAttributes["class"] = "time hair";  				num.Transforms = new SvgTransformCollection();  				num.Transforms.Add(new SvgTranslate(i));  				num.Transforms.Add(new SvgScale(1/Timer.PPS' 1));  				NumberGroup.Children.Add(num);  			}
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,RulerView,The following statement contains a magic number: for (int i=0; i<70; i++)  			{  				var num = new SvgText(i.ToString());  				num.FontSize = 20;  				num.Y = num.FontSize;  				num.CustomAttributes["class"] = "time hair";  				num.Transforms = new SvgTransformCollection();  				num.Transforms.Add(new SvgTranslate(i));  				num.Transforms.Add(new SvgScale(1/Timer.PPS' 1));  				NumberGroup.Children.Add(num);  			}
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,RulerView,The following statement contains a magic number: LoopRegion.Y = Background.Height / 4;
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,RulerView,The following statement contains a magic number: LoopRegion.Height = Background.Height / 2;
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,CreateMenu,The following statement contains a magic number: Menu = new SvgMenuWidget(125);
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,SendValue,The following statement contains a magic number: if (property.PropertyType.GenericTypeArguments[0] == typeof(string))  			{  				var prop = (EditableProperty<string>) property.GetValue(model);  				cmds.Append(Command.Set(prop' newValue));  			}  			else if (property.PropertyType.GenericTypeArguments[0] == typeof(float))  			{  				var prop = (EditableProperty<float>) property.GetValue(model);  				cmds.Append(Command.Set(prop' newValue));  			}  			else if (property.PropertyType.GenericTypeArguments[0] == typeof(int))  			{  				var prop = (EditableProperty<int>) property.GetValue(model);  				cmds.Append(Command.Set(prop' (int)((float)newValue)));  			}  			else if (property.PropertyType.GenericTypeArguments[0] == typeof(bool))  			{  				var prop = (EditableProperty<bool>) property.GetValue(model);  				cmds.Append(Command.Set(prop' (float) newValue >= 0.5));  			}
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,UpdateScene,The following statement contains a magic number: var off = FView.Elements[4] % unit;
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,UpdateScene,The following statement contains a magic number: el[4] = off;
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,UpdateScene,The following statement contains a magic number: foreach (SvgText num in nums)  			{  				var showMinus = start < 0 ? true : false;  				var time = Math.Abs(start);  				  				var ss = (int) (time % 60);  				var mm = (int) (time / 60 % 60);  				var h = (int) (time / 60 / 60 % 60);  				DateTime dt = new DateTime(2008' 1' 1' h + 1' mm' ss' 0);  				  				if (showMinus)  					num.Text = "-" + dt.ToString("%s");  				else  					num.Text = " " + dt.ToString("%s");  				  				start++;  			}
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,UpdateScene,The following statement contains a magic number: foreach (SvgText num in nums)  			{  				var showMinus = start < 0 ? true : false;  				var time = Math.Abs(start);  				  				var ss = (int) (time % 60);  				var mm = (int) (time / 60 % 60);  				var h = (int) (time / 60 / 60 % 60);  				DateTime dt = new DateTime(2008' 1' 1' h + 1' mm' ss' 0);  				  				if (showMinus)  					num.Text = "-" + dt.ToString("%s");  				else  					num.Text = " " + dt.ToString("%s");  				  				start++;  			}
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,UpdateScene,The following statement contains a magic number: foreach (SvgText num in nums)  			{  				var showMinus = start < 0 ? true : false;  				var time = Math.Abs(start);  				  				var ss = (int) (time % 60);  				var mm = (int) (time / 60 % 60);  				var h = (int) (time / 60 / 60 % 60);  				DateTime dt = new DateTime(2008' 1' 1' h + 1' mm' ss' 0);  				  				if (showMinus)  					num.Text = "-" + dt.ToString("%s");  				else  					num.Text = " " + dt.ToString("%s");  				  				start++;  			}
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,UpdateScene,The following statement contains a magic number: foreach (SvgText num in nums)  			{  				var showMinus = start < 0 ? true : false;  				var time = Math.Abs(start);  				  				var ss = (int) (time % 60);  				var mm = (int) (time / 60 % 60);  				var h = (int) (time / 60 / 60 % 60);  				DateTime dt = new DateTime(2008' 1' 1' h + 1' mm' ss' 0);  				  				if (showMinus)  					num.Text = "-" + dt.ToString("%s");  				else  					num.Text = " " + dt.ToString("%s");  				  				start++;  			}
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,UpdateScene,The following statement contains a magic number: foreach (SvgText num in nums)  			{  				var showMinus = start < 0 ? true : false;  				var time = Math.Abs(start);  				  				var ss = (int) (time % 60);  				var mm = (int) (time / 60 % 60);  				var h = (int) (time / 60 / 60 % 60);  				DateTime dt = new DateTime(2008' 1' 1' h + 1' mm' ss' 0);  				  				if (showMinus)  					num.Text = "-" + dt.ToString("%s");  				else  					num.Text = " " + dt.ToString("%s");  				  				start++;  			}
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,UpdateScene,The following statement contains a magic number: foreach (SvgText num in nums)  			{  				var showMinus = start < 0 ? true : false;  				var time = Math.Abs(start);  				  				var ss = (int) (time % 60);  				var mm = (int) (time / 60 % 60);  				var h = (int) (time / 60 / 60 % 60);  				DateTime dt = new DateTime(2008' 1' 1' h + 1' mm' ss' 0);  				  				if (showMinus)  					num.Text = "-" + dt.ToString("%s");  				else  					num.Text = " " + dt.ToString("%s");  				  				start++;  			}
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,UpdateScene,The following statement contains a magic number: foreach (SvgText num in nums)  			{  				var showMinus = start < 0 ? true : false;  				var time = Math.Abs(start);  				  				var ss = (int) (time % 60);  				var mm = (int) (time / 60 % 60);  				var h = (int) (time / 60 / 60 % 60);  				DateTime dt = new DateTime(2008' 1' 1' h + 1' mm' ss' 0);  				  				if (showMinus)  					num.Text = "-" + dt.ToString("%s");  				else  					num.Text = " " + dt.ToString("%s");  				  				start++;  			}
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,XPosToTime,The following statement contains a magic number: return (x - PanZoomMatrix.Matrix.Elements[4]) / PanZoomMatrix.Matrix.Elements[0];
Magic Number,Timeliner,RulerView,C:\repos\vvvv_Timeliner\Source\View\RulerView.cs,TimeToXPos,The following statement contains a magic number: return time * PanZoomMatrix.Matrix.Elements[0] + PanZoomMatrix.Matrix.Elements[4];
Magic Number,Timeliner,TimelineView,C:\repos\vvvv_Timeliner\Source\View\TimelinerView.cs,TimelineView,The following statement contains a magic number: Background.Width = new SvgUnit(SvgUnitType.Percentage' 100);
Magic Number,Timeliner,TimelineView,C:\repos\vvvv_Timeliner\Source\View\TimelinerView.cs,TimelineView,The following statement contains a magic number: Background.Height = 500;
Magic Number,Timeliner,TimelineView,C:\repos\vvvv_Timeliner\Source\View\TimelinerView.cs,TimelineView,The following statement contains a magic number: TimeBar.Width = 2;
Magic Number,Timeliner,TimelineView,C:\repos\vvvv_Timeliner\Source\View\TimelinerView.cs,TimelineView,The following statement contains a magic number: MainMenu = new SvgMenuWidget(120);
Magic Number,Timeliner,TimelineView,C:\repos\vvvv_Timeliner\Source\View\TimelinerView.cs,TimelineView,The following statement contains a magic number: var addValueTrack = new SvgButtonWidget(0' 20' "Add Value Track");
Magic Number,Timeliner,TimelineView,C:\repos\vvvv_Timeliner\Source\View\TimelinerView.cs,TimelineView,The following statement contains a magic number: var addStringTrack = new SvgButtonWidget(0' 20' "Add String Track");
Magic Number,Timeliner,TimelineView,C:\repos\vvvv_Timeliner\Source\View\TimelinerView.cs,UpdateScene,The following statement contains a magic number: Background.Height = Math.Max(500' totalHeight + 250);
Magic Number,Timeliner,TimelineView,C:\repos\vvvv_Timeliner\Source\View\TimelinerView.cs,UpdateScene,The following statement contains a magic number: Background.Height = Math.Max(500' totalHeight + 250);
Magic Number,Timeliner,TimelineView,C:\repos\vvvv_Timeliner\Source\View\TimelinerView.cs,GetMouseHandler,The following statement contains a magic number: if(sender is IMouseEventHandler) 			{ 				return sender as IMouseEventHandler; 			} 			else if(sender is TrackView) 			{ 				ActiveTrack = sender as TrackView; 				HideMenus(); 				if ((e.Button == 1) && (sender is TrackView)) 					return new SelectionMouseHandler(sender as TrackView' e.SessionID); 				else if (e.Button == 3) 					return new PanZoomMenuHandler(sender as TrackView' e.SessionID); 				else  					return null; 			} 			else if ((sender == Ruler.Background) || (sender == Ruler.SizeBar)) 			{ 				HideMenus(); 				if (e.Button == 1) 					return new SeekHandler(Ruler' e.SessionID);					 				else if (e.Button == 3) 					return new PanZoomMenuHandler(Ruler' e.SessionID); 				else 					return null; 			} 			else if (sender == Ruler.LoopStart) 			{ 				HideMenus(); 				if (e.Button == 1) 					return new RulerMouseHandler(Ruler' Ruler.Model.LoopStart' null' e.SessionID); 				else 					return null;					 			} 			else if (sender == Ruler.LoopEnd) 			{ 				HideMenus(); 				if (e.Button == 1) 					return new RulerMouseHandler(Ruler' null' Ruler.Model.LoopEnd' e.SessionID); 				else 					return null;					 			} 			else if (sender == Ruler.LoopRegion) 			{ 				HideMenus(); 				if (e.Button == 1) 					return new RulerMouseHandler(Ruler' Ruler.Model.LoopStart' Ruler.Model.LoopEnd' e.SessionID); 				else if (e.Button == 3) 					return new PanZoomMenuHandler(Ruler' e.SessionID); 				else 					return null;					 			} 			else if(sender is KeyframeView) 			{ 				HideMenus(); 				return new KeyframeMouseHandler(sender as KeyframeView' e.SessionID); 			} 			else if(sender == TimeBar) 			{ 				HideMenus(); 				return new TimeBarHandler(this' e.SessionID); 			} 			else if (sender == Background)  			{ 				HideMenus(); 				if ((e.Button == 1) && (ActiveTrack != null)) 					return new SelectionMouseHandler(ActiveTrack' e.SessionID);					 				else if (e.Button == 3) 					return new PanZoomMenuHandler(this' e.SessionID); 				else  					return null; 			} 			else 			{ 				HideMenus(); 				return null; 			}
Magic Number,Timeliner,TimelineView,C:\repos\vvvv_Timeliner\Source\View\TimelinerView.cs,GetMouseHandler,The following statement contains a magic number: if(sender is IMouseEventHandler) 			{ 				return sender as IMouseEventHandler; 			} 			else if(sender is TrackView) 			{ 				ActiveTrack = sender as TrackView; 				HideMenus(); 				if ((e.Button == 1) && (sender is TrackView)) 					return new SelectionMouseHandler(sender as TrackView' e.SessionID); 				else if (e.Button == 3) 					return new PanZoomMenuHandler(sender as TrackView' e.SessionID); 				else  					return null; 			} 			else if ((sender == Ruler.Background) || (sender == Ruler.SizeBar)) 			{ 				HideMenus(); 				if (e.Button == 1) 					return new SeekHandler(Ruler' e.SessionID);					 				else if (e.Button == 3) 					return new PanZoomMenuHandler(Ruler' e.SessionID); 				else 					return null; 			} 			else if (sender == Ruler.LoopStart) 			{ 				HideMenus(); 				if (e.Button == 1) 					return new RulerMouseHandler(Ruler' Ruler.Model.LoopStart' null' e.SessionID); 				else 					return null;					 			} 			else if (sender == Ruler.LoopEnd) 			{ 				HideMenus(); 				if (e.Button == 1) 					return new RulerMouseHandler(Ruler' null' Ruler.Model.LoopEnd' e.SessionID); 				else 					return null;					 			} 			else if (sender == Ruler.LoopRegion) 			{ 				HideMenus(); 				if (e.Button == 1) 					return new RulerMouseHandler(Ruler' Ruler.Model.LoopStart' Ruler.Model.LoopEnd' e.SessionID); 				else if (e.Button == 3) 					return new PanZoomMenuHandler(Ruler' e.SessionID); 				else 					return null;					 			} 			else if(sender is KeyframeView) 			{ 				HideMenus(); 				return new KeyframeMouseHandler(sender as KeyframeView' e.SessionID); 			} 			else if(sender == TimeBar) 			{ 				HideMenus(); 				return new TimeBarHandler(this' e.SessionID); 			} 			else if (sender == Background)  			{ 				HideMenus(); 				if ((e.Button == 1) && (ActiveTrack != null)) 					return new SelectionMouseHandler(ActiveTrack' e.SessionID);					 				else if (e.Button == 3) 					return new PanZoomMenuHandler(this' e.SessionID); 				else  					return null; 			} 			else 			{ 				HideMenus(); 				return null; 			}
Magic Number,Timeliner,TimelineView,C:\repos\vvvv_Timeliner\Source\View\TimelinerView.cs,GetMouseHandler,The following statement contains a magic number: if(sender is IMouseEventHandler) 			{ 				return sender as IMouseEventHandler; 			} 			else if(sender is TrackView) 			{ 				ActiveTrack = sender as TrackView; 				HideMenus(); 				if ((e.Button == 1) && (sender is TrackView)) 					return new SelectionMouseHandler(sender as TrackView' e.SessionID); 				else if (e.Button == 3) 					return new PanZoomMenuHandler(sender as TrackView' e.SessionID); 				else  					return null; 			} 			else if ((sender == Ruler.Background) || (sender == Ruler.SizeBar)) 			{ 				HideMenus(); 				if (e.Button == 1) 					return new SeekHandler(Ruler' e.SessionID);					 				else if (e.Button == 3) 					return new PanZoomMenuHandler(Ruler' e.SessionID); 				else 					return null; 			} 			else if (sender == Ruler.LoopStart) 			{ 				HideMenus(); 				if (e.Button == 1) 					return new RulerMouseHandler(Ruler' Ruler.Model.LoopStart' null' e.SessionID); 				else 					return null;					 			} 			else if (sender == Ruler.LoopEnd) 			{ 				HideMenus(); 				if (e.Button == 1) 					return new RulerMouseHandler(Ruler' null' Ruler.Model.LoopEnd' e.SessionID); 				else 					return null;					 			} 			else if (sender == Ruler.LoopRegion) 			{ 				HideMenus(); 				if (e.Button == 1) 					return new RulerMouseHandler(Ruler' Ruler.Model.LoopStart' Ruler.Model.LoopEnd' e.SessionID); 				else if (e.Button == 3) 					return new PanZoomMenuHandler(Ruler' e.SessionID); 				else 					return null;					 			} 			else if(sender is KeyframeView) 			{ 				HideMenus(); 				return new KeyframeMouseHandler(sender as KeyframeView' e.SessionID); 			} 			else if(sender == TimeBar) 			{ 				HideMenus(); 				return new TimeBarHandler(this' e.SessionID); 			} 			else if (sender == Background)  			{ 				HideMenus(); 				if ((e.Button == 1) && (ActiveTrack != null)) 					return new SelectionMouseHandler(ActiveTrack' e.SessionID);					 				else if (e.Button == 3) 					return new PanZoomMenuHandler(this' e.SessionID); 				else  					return null; 			} 			else 			{ 				HideMenus(); 				return null; 			}
Magic Number,Timeliner,TimelineView,C:\repos\vvvv_Timeliner\Source\View\TimelinerView.cs,GetMouseHandler,The following statement contains a magic number: if(sender is IMouseEventHandler) 			{ 				return sender as IMouseEventHandler; 			} 			else if(sender is TrackView) 			{ 				ActiveTrack = sender as TrackView; 				HideMenus(); 				if ((e.Button == 1) && (sender is TrackView)) 					return new SelectionMouseHandler(sender as TrackView' e.SessionID); 				else if (e.Button == 3) 					return new PanZoomMenuHandler(sender as TrackView' e.SessionID); 				else  					return null; 			} 			else if ((sender == Ruler.Background) || (sender == Ruler.SizeBar)) 			{ 				HideMenus(); 				if (e.Button == 1) 					return new SeekHandler(Ruler' e.SessionID);					 				else if (e.Button == 3) 					return new PanZoomMenuHandler(Ruler' e.SessionID); 				else 					return null; 			} 			else if (sender == Ruler.LoopStart) 			{ 				HideMenus(); 				if (e.Button == 1) 					return new RulerMouseHandler(Ruler' Ruler.Model.LoopStart' null' e.SessionID); 				else 					return null;					 			} 			else if (sender == Ruler.LoopEnd) 			{ 				HideMenus(); 				if (e.Button == 1) 					return new RulerMouseHandler(Ruler' null' Ruler.Model.LoopEnd' e.SessionID); 				else 					return null;					 			} 			else if (sender == Ruler.LoopRegion) 			{ 				HideMenus(); 				if (e.Button == 1) 					return new RulerMouseHandler(Ruler' Ruler.Model.LoopStart' Ruler.Model.LoopEnd' e.SessionID); 				else if (e.Button == 3) 					return new PanZoomMenuHandler(Ruler' e.SessionID); 				else 					return null;					 			} 			else if(sender is KeyframeView) 			{ 				HideMenus(); 				return new KeyframeMouseHandler(sender as KeyframeView' e.SessionID); 			} 			else if(sender == TimeBar) 			{ 				HideMenus(); 				return new TimeBarHandler(this' e.SessionID); 			} 			else if (sender == Background)  			{ 				HideMenus(); 				if ((e.Button == 1) && (ActiveTrack != null)) 					return new SelectionMouseHandler(ActiveTrack' e.SessionID);					 				else if (e.Button == 3) 					return new PanZoomMenuHandler(this' e.SessionID); 				else  					return null; 			} 			else 			{ 				HideMenus(); 				return null; 			}
Magic Number,Timeliner,TimelineView,C:\repos\vvvv_Timeliner\Source\View\TimelinerView.cs,Default_MouseMove,The following statement contains a magic number: Ruler.MouseTimeLabel.X = Math.Max(0' e.x - 110);
Magic Number,Timeliner,TimelineView,C:\repos\vvvv_Timeliner\Source\View\TimelinerView.cs,ShowMenu,The following statement contains a magic number: MainMenu.Show(new PointF(e.x' e.y - FTrackGroup.Transforms[0].Matrix.Elements[5]));
Magic Number,Timeliner,TrackView,C:\repos\vvvv_Timeliner\Source\View\TrackView.cs,TrackView,The following statement contains a magic number: var width = new SvgUnit(SvgUnitType.Percentage' 100);
Magic Number,Timeliner,TrackView,C:\repos\vvvv_Timeliner\Source\View\TrackView.cs,TrackView,The following statement contains a magic number: Label.FontSize = 12;
Magic Number,Timeliner,TrackView,C:\repos\vvvv_Timeliner\Source\View\TrackView.cs,TrackView,The following statement contains a magic number: Label.X = 5;
Magic Number,Timeliner,TrackView,C:\repos\vvvv_Timeliner\Source\View\TrackView.cs,TrackView,The following statement contains a magic number: SizeBar.Height = 3;
Magic Number,Timeliner,TrackView,C:\repos\vvvv_Timeliner\Source\View\TrackView.cs,CreateTrackMenu,The following statement contains a magic number: TrackMenu = new SvgMenuWidget(110);
Magic Number,Timeliner,TrackView,C:\repos\vvvv_Timeliner\Source\View\TrackView.cs,CreateTrackMenu,The following statement contains a magic number: CollapseButton = new SvgButtonWidget(0' 20' "Collapse");
Magic Number,Timeliner,TrackView,C:\repos\vvvv_Timeliner\Source\View\TrackView.cs,CreateTrackMenu,The following statement contains a magic number: RemoveButton = new SvgButtonWidget(0' 20' "Remove");
Magic Number,Timeliner,TrackView,C:\repos\vvvv_Timeliner\Source\View\TrackView.cs,CreateTrackMenu,The following statement contains a magic number: TrackMenu.AddItem(RemoveButton' 4);
Magic Number,Timeliner,TrackView,C:\repos\vvvv_Timeliner\Source\View\TrackView.cs,CreateKeyframeMenu,The following statement contains a magic number: KeyframeMenu = new SvgMenuWidget(110);
Magic Number,Timeliner,TrackView,C:\repos\vvvv_Timeliner\Source\View\TrackView.cs,UpdateTrackHeightAndPos,The following statement contains a magic number: Background.CustomAttributes["class"] = Model.Order.Value % 2 == 0 ? "even": "odd";
Magic Number,Timeliner,TrackView,C:\repos\vvvv_Timeliner\Source\View\TrackView.cs,ShowTrackMenu,The following statement contains a magic number: TrackMenu.Show(new PointF(e.x' e.y - Parent.FTrackGroup.Transforms[0].Matrix.Elements[5]));
Magic Number,Timeliner,TrackView,C:\repos\vvvv_Timeliner\Source\View\TrackView.cs,ShowKeyframeMenu,The following statement contains a magic number: KeyframeMenu.Show(new PointF(e.x' e.y - Parent.FTrackGroup.Transforms[0].Matrix.Elements[5]));
Magic Number,Timeliner,TrackView,C:\repos\vvvv_Timeliner\Source\View\TrackView.cs,YDeltaToValue,The following statement contains a magic number: var s = 1 / PanZoomGroup.Transforms[1].Matrix.Elements[3];
Magic Number,Timeliner,ValueTrackView,C:\repos\vvvv_Timeliner\Source\View\ValueTrackView.cs,ValueTrackView,The following statement contains a magic number: KeyframeDefinition.Radius = 3;
Magic Number,Timeliner,ValueTrackView,C:\repos\vvvv_Timeliner\Source\View\ValueTrackView.cs,ValueTrackView,The following statement contains a magic number: CurrentValue.FontSize = 12;
Magic Number,Timeliner,ValueTrackView,C:\repos\vvvv_Timeliner\Source\View\ValueTrackView.cs,ValueTrackView,The following statement contains a magic number: CurrentValue.X = 5;
Magic Number,Timeliner,ValueTrackView,C:\repos\vvvv_Timeliner\Source\View\ValueTrackView.cs,ValueTrackView,The following statement contains a magic number: CurrentValue.Y = 24;
Magic Number,Timeliner,ValueTrackView,C:\repos\vvvv_Timeliner\Source\View\ValueTrackView.cs,UpdateScene,The following statement contains a magic number: EaseNoneDefinition.StartY = - Model.CollapsedHeight * PanZoomGroup.Transforms[1].Matrix.Elements[5];
Magic Number,Timeliner,ValueTrackView,C:\repos\vvvv_Timeliner\Source\View\ValueTrackView.cs,UpdateMinMaxView,The following statement contains a magic number: var oldScale = PanZoomGroup.Transforms[1].Matrix.Elements[3];
Magic Number,Timeliner,ValueTrackView,C:\repos\vvvv_Timeliner\Source\View\ValueTrackView.cs,UpdateMinMaxView,The following statement contains a magic number: var oldOffset = PanZoomGroup.Transforms[1].Matrix.Elements[5];
Magic Number,Timeliner,ValueTrackView,C:\repos\vvvv_Timeliner\Source\View\ValueTrackView.cs,UpdateMinMaxView,The following statement contains a magic number: var newScale = PanZoomGroup.Transforms[1].Matrix.Elements[3];
Magic Number,Timeliner,ValueTrackView,C:\repos\vvvv_Timeliner\Source\View\ValueTrackView.cs,UpdateMinMaxView,The following statement contains a magic number: var newOffset = PanZoomGroup.Transforms[1].Matrix.Elements[5];
Magic Number,Timeliner,ValueTrackView,C:\repos\vvvv_Timeliner\Source\View\ValueTrackView.cs,ApplyInverseScaling,The following statement contains a magic number: var s1 = new SvgScale(m.Elements[0]' m.Elements[3]);
Magic Number,Timeliner,ValueTrackView,C:\repos\vvvv_Timeliner\Source\View\ValueTrackView.cs,ApplyInverseScaling,The following statement contains a magic number: var s2 = new SvgScale(m.Elements[0]' m.Elements[3]);
Magic Number,Timeliner,ValueTrackView,C:\repos\vvvv_Timeliner\Source\View\ValueTrackView.cs,Background_MouseClick,The following statement contains a magic number: if(e.ClickCount >= 2) 			{ 				var x = FRuler.XPosToTime(e.x); 				var y = YPosToValue(e.y); 				 				var kf = new TLValueKeyframe(x' y); 				var cmd = Command.Add(this.Model.Keyframes' kf); 				History.Insert(cmd); 			}
Magic Number,Timeliner,PoshTimeliner,C:\repos\vvvv_Timeliner\Source\PoshTimeliner.cs,PoshServer_OnKeyDown,The following statement contains a magic number: switch(keyCode)             {                 case (int) Keys.Space:                     Timeliner.Timer.Play(!Timeliner.Timer.IsRunning);                     Timeliner.TimelineView.UpdateScene();                     break;                 case (int) Keys.Back:                     Timeliner.Timer.Stop();                     Timeliner.TimelineView.UpdateScene();                     break;                 case (int) Keys.Delete:                     foreach(var track in Timeliner.TimelineView.Tracks.OfType<ValueTrackView>())                         foreach(var kf in track.Keyframes.Where(k => k.Model.Selected.Value))                         {                             cmds.Append(Command.Remove(track.Model.Keyframes' kf.Model));                         } 					                     foreach(var track in Timeliner.TimelineView.Tracks.OfType<StringTrackView>())                         foreach(var kf in track.Keyframes.Where(k => k.Model.Selected.Value))                         {                             cmds.Append(Command.Remove(track.Model.Keyframes' kf.Model));                         } 					                     break;                 case (int) Keys.A:                     if (ctrl)                     {                         if (shift)                         {                             foreach(var track in Timeliner.TimelineView.Tracks)                                 foreach(var kf in track.KeyframeViews)                                     cmds.Append(Command.Set(kf.Model.Selected' true));                         }                         else                         {                             foreach(var kf in Timeliner.TimelineView.ActiveTrack.KeyframeViews)                                 cmds.Append(Command.Set(kf.Model.Selected' true));                         }                     }                     break;                 case (int) Keys.Left:                     Nudge(NudgeDirection.Back' shift' ctrl' alt);                     break;                 case (int) Keys.Right:                     Nudge(NudgeDirection.Forward' shift' ctrl' alt);                     break;                 case (int) Keys.Up:                     Nudge(NudgeDirection.Up' shift' ctrl' alt);                     break;                 case (int) Keys.Down:                     Nudge(NudgeDirection.Down' shift' ctrl' alt);                     break;                 case (int) Keys.OemBackslash:                     Timeliner.TimelineView.ActiveTrack.CollapseTrack(null' null' null);                     break;                 case (int) Keys.E:                     if (!ctrl)                         foreach(var track in Timeliner.TimelineView.Tracks.OfType<ValueTrackView>())                             foreach(var kf in track.Keyframes.Where(k => k.Model.Selected.Value))                     {                         cmds.Append(Command.Set(kf.Model.Ease' (kf.Model.Ease.Value + 1) % 4));                     }                     break;                 case (int) Keys.I:                     if (!ctrl)                         cmds.Append(Command.Set(Timeliner.TimelineView.Ruler.Model.LoopStart' Timeliner.Timer.Time));                     break;                 case (int) Keys.O:                     if (!ctrl)                         cmds.Append(Command.Set(Timeliner.TimelineView.Ruler.Model.LoopEnd' Timeliner.Timer.Time));                     break;                 case (int) Keys.Z:                     if (ctrl)                     {                         if (shift)                         {                             Context.History.Redo();                         }                         else                         {                             Context.History.Undo();                         }                     }                     break;                 default:                     {                         if (keyCode <= 32)                             break; 						                         //this fails: //                        var kc = new KeysConverter(); //                        var keys = kc.ConvertToString(keyCode); //                        if (shift) //                            keys = "+" + keys; //                        if (ctrl) //                            keys = "^" + keys; //                        if (alt) //                            keys = "%" + keys; //                        SendKeys.Send(keys);                                                  //so we stupid workaround like so:                         var keys = keyCode;                         if (shift)                             keys |= (int) Keys.Shift;                         if (ctrl)                             keys |= (int) Keys.Control;                         if (alt)                             keys |= (int) Keys.Alt;                                                  Application.OpenForms[0].BeginInvoke(new MethodInvoker(() => Shortcut(keys)));                         break;                     }         }
Magic Number,Timeliner,PoshTimeliner,C:\repos\vvvv_Timeliner\Source\PoshTimeliner.cs,PoshServer_OnKeyDown,The following statement contains a magic number: switch(keyCode)             {                 case (int) Keys.Space:                     Timeliner.Timer.Play(!Timeliner.Timer.IsRunning);                     Timeliner.TimelineView.UpdateScene();                     break;                 case (int) Keys.Back:                     Timeliner.Timer.Stop();                     Timeliner.TimelineView.UpdateScene();                     break;                 case (int) Keys.Delete:                     foreach(var track in Timeliner.TimelineView.Tracks.OfType<ValueTrackView>())                         foreach(var kf in track.Keyframes.Where(k => k.Model.Selected.Value))                         {                             cmds.Append(Command.Remove(track.Model.Keyframes' kf.Model));                         } 					                     foreach(var track in Timeliner.TimelineView.Tracks.OfType<StringTrackView>())                         foreach(var kf in track.Keyframes.Where(k => k.Model.Selected.Value))                         {                             cmds.Append(Command.Remove(track.Model.Keyframes' kf.Model));                         } 					                     break;                 case (int) Keys.A:                     if (ctrl)                     {                         if (shift)                         {                             foreach(var track in Timeliner.TimelineView.Tracks)                                 foreach(var kf in track.KeyframeViews)                                     cmds.Append(Command.Set(kf.Model.Selected' true));                         }                         else                         {                             foreach(var kf in Timeliner.TimelineView.ActiveTrack.KeyframeViews)                                 cmds.Append(Command.Set(kf.Model.Selected' true));                         }                     }                     break;                 case (int) Keys.Left:                     Nudge(NudgeDirection.Back' shift' ctrl' alt);                     break;                 case (int) Keys.Right:                     Nudge(NudgeDirection.Forward' shift' ctrl' alt);                     break;                 case (int) Keys.Up:                     Nudge(NudgeDirection.Up' shift' ctrl' alt);                     break;                 case (int) Keys.Down:                     Nudge(NudgeDirection.Down' shift' ctrl' alt);                     break;                 case (int) Keys.OemBackslash:                     Timeliner.TimelineView.ActiveTrack.CollapseTrack(null' null' null);                     break;                 case (int) Keys.E:                     if (!ctrl)                         foreach(var track in Timeliner.TimelineView.Tracks.OfType<ValueTrackView>())                             foreach(var kf in track.Keyframes.Where(k => k.Model.Selected.Value))                     {                         cmds.Append(Command.Set(kf.Model.Ease' (kf.Model.Ease.Value + 1) % 4));                     }                     break;                 case (int) Keys.I:                     if (!ctrl)                         cmds.Append(Command.Set(Timeliner.TimelineView.Ruler.Model.LoopStart' Timeliner.Timer.Time));                     break;                 case (int) Keys.O:                     if (!ctrl)                         cmds.Append(Command.Set(Timeliner.TimelineView.Ruler.Model.LoopEnd' Timeliner.Timer.Time));                     break;                 case (int) Keys.Z:                     if (ctrl)                     {                         if (shift)                         {                             Context.History.Redo();                         }                         else                         {                             Context.History.Undo();                         }                     }                     break;                 default:                     {                         if (keyCode <= 32)                             break; 						                         //this fails: //                        var kc = new KeysConverter(); //                        var keys = kc.ConvertToString(keyCode); //                        if (shift) //                            keys = "+" + keys; //                        if (ctrl) //                            keys = "^" + keys; //                        if (alt) //                            keys = "%" + keys; //                        SendKeys.Send(keys);                                                  //so we stupid workaround like so:                         var keys = keyCode;                         if (shift)                             keys |= (int) Keys.Shift;                         if (ctrl)                             keys |= (int) Keys.Control;                         if (alt)                             keys |= (int) Keys.Alt;                                                  Application.OpenForms[0].BeginInvoke(new MethodInvoker(() => Shortcut(keys)));                         break;                     }         }
Missing Default,Timeliner,TLCurve,C:\repos\vvvv_Timeliner\Source\Model\ValueTrack.cs,UpdateCurve,The following switch statement is missing a default case: switch (Start.Ease.Value)              {                  case 2:                       case 3: FC1 = FP1 + (d * Start.EaseOut.Value); break;              }
Missing Default,Timeliner,TLCurve,C:\repos\vvvv_Timeliner\Source\Model\ValueTrack.cs,UpdateCurve,The following switch statement is missing a default case: switch (End.Ease.Value)              {                  case 1:                       case 3: FC2 = FP2 + (d * End.EaseIn.Value); break;              }
Missing Default,Timeliner,ValueKeyframeView,C:\repos\vvvv_Timeliner\Source\View\ValueKeyframeView.cs,UpdateScene,The following switch statement is missing a default case: switch (Model.Ease.Value)             {                     case 1: ease = "_EI"; break;                     case 2: ease = "_EO"; break;                     case 3: ease = "_EIO"; break;             }
Missing Default,Timeliner,RulerMouseHandler,C:\repos\vvvv_Timeliner\Source\View\MouseHandlers.cs,MouseClick,The following switch statement is missing a default case: switch (arg.Button)             {                 case 3:                     //show rulermenu                     Instance.ShowMenu(arg);                     break;             }
Missing Default,Timeliner,TrackView,C:\repos\vvvv_Timeliner\Source\View\TrackView.cs,Nudge,The following switch statement is missing a default case: switch (direction) 				{ 					case NudgeDirection.Back: 						cmds.Append(Command.Set(kf.Model.Time' kf.Model.Time.Value - timeDelta)); 						break; 					case NudgeDirection.Forward: 						cmds.Append(Command.Set(kf.Model.Time' kf.Model.Time.Value + timeDelta)); 						break; 				}
Missing Default,Timeliner,ValueTrackView,C:\repos\vvvv_Timeliner\Source\View\ValueTrackView.cs,Nudge,The following switch statement is missing a default case: switch (direction) 				{ 					case NudgeDirection.Up: 						var newValue = (float) VMath.Clamp(kf.Model.Value.Value + valueDelta' Model.Minimum.Value' Model.Maximum.Value); 						cmds.Append(Command.Set(kf.Model.Value' newValue)); 						break; 					case NudgeDirection.Down: 						newValue = (float) VMath.Clamp(kf.Model.Value.Value - valueDelta' Model.Minimum.Value' Model.Maximum.Value); 						cmds.Append(Command.Set(kf.Model.Value' newValue)); 						break; 				}
Missing Default,Timeliner,PoshTimeliner,C:\repos\vvvv_Timeliner\Source\PoshTimeliner.cs,Nudge,The following switch statement is missing a default case: switch (direction) 				{ 					case NudgeDirection.Back: 						Timeliner.Timer.Time -= timeDelta; 						break; 					case NudgeDirection.Forward: 						Timeliner.Timer.Time += timeDelta; 						break; 					case NudgeDirection.Up: 						//find next kf 						var nextKeyframe = Timeliner.TimelineView.Tracks.SelectMany(track => track.KeyframeViews).OrderBy(kf => kf.Model.Time.Value).First(kf => kf.Model.Time.Value > currentTime); 						if (nextKeyframe != null)     						Timeliner.Timer.Time = nextKeyframe.Model.Time.Value; 						break; 					case NudgeDirection.Down: 						//find prev kf 						var lastKeyframe = Timeliner.TimelineView.Tracks.SelectMany(track => track.KeyframeViews).OrderByDescending(kf => kf.Model.Time.Value).First(kf => kf.Model.Time.Value < currentTime); 						if (lastKeyframe != null)     						Timeliner.Timer.Time = lastKeyframe.Model.Time.Value; 						break; 				}
