Implementation smell,Namespace,Class,File,Method,Description
Long Method,Mono.TextTemplating,TextTransform,C:\repos\KCL5South_KCLTextTemplating\TextTransform\TextTransform.cs,Main,The method has 144 lines of code.
Complex Method,Mono.TextTemplating,TextTransform,C:\repos\KCL5South_KCLTextTemplating\TextTransform\TextTransform.cs,Main,Cyclomatic complexity of the method is 22
Complex Method,Mono.Options,Option,C:\repos\KCL5South_KCLTextTemplating\TextTransform\Options.cs,ParsePrototype,Cyclomatic complexity of the method is 9
Complex Method,Mono.Options,Option,C:\repos\KCL5South_KCLTextTemplating\TextTransform\Options.cs,AddSeparators,Cyclomatic complexity of the method is 17
Complex Method,Mono.Options,OptionSet,C:\repos\KCL5South_KCLTextTemplating\TextTransform\Options.cs,Parse,Cyclomatic complexity of the method is 10
Complex Method,Mono.Options,OptionSet,C:\repos\KCL5South_KCLTextTemplating\TextTransform\Options.cs,ParseBundledValue,Cyclomatic complexity of the method is 10
Complex Method,Mono.Options,OptionSet,C:\repos\KCL5South_KCLTextTemplating\TextTransform\Options.cs,GetDescription,Cyclomatic complexity of the method is 20
Complex Method,Mono.Options,OptionSet,C:\repos\KCL5South_KCLTextTemplating\TextTransform\Options.cs,GetLines,Cyclomatic complexity of the method is 8
Complex Method,Mono.Options,OptionSet,C:\repos\KCL5South_KCLTextTemplating\TextTransform\Options.cs,GetLineEnd,Cyclomatic complexity of the method is 11
Long Parameter List,Mono.TextTemplating,TextTransform,C:\repos\KCL5South_KCLTextTemplating\TextTransform\TextTransform.cs,Main,The method has 10 parameters.
Long Parameter List,Mono.Options,OptionSet,C:\repos\KCL5South_KCLTextTemplating\TextTransform\Options.cs,GetOptionParts,The method has 5 parameters.
Long Statement,Mono.TextTemplating,TextTransform,C:\repos\KCL5South_KCLTextTemplating\TextTransform\TextTransform.cs,Main,The length of the statement  "		generator.AddParameter (split.Length > 3 ? split [0] : null' split.Length > 2 ? split [split.Length - 3] : null' name' val); " is 124.
Long Statement,Mono.TextTemplating,TextTransform,C:\repos\KCL5South_KCLTextTemplating\TextTransform\TextTransform.cs,Main,The length of the statement  "		generator.PreprocessTemplate (inputFile' className' classNamespace' outputFile' System.Text.Encoding.UTF8' out language' out references); " is 137.
Long Statement,Mono.TextTemplating,TextTransform,C:\repos\KCL5South_KCLTextTemplating\TextTransform\TextTransform.cs,Main,The length of the statement  "		Console.Error.WriteLine ("{0}({1}'{2}): {3} {4}"' err.FileName' err.Line' err.Column' err.IsWarning ? "WARNING" : "ERROR"' err.ErrorText); " is 138.
Long Statement,Mono.Options,OptionValueCollection,C:\repos\KCL5South_KCLTextTemplating\TextTransform\Options.cs,AssertValid,The length of the statement  "		throw new OptionException (string.Format (c.OptionSet.MessageLocalizer ("Missing required value for option '{0}'.")' c.OptionName)' c.OptionName); " is 146.
Long Statement,Mono.Options,Option,C:\repos\KCL5South_KCLTextTemplating\TextTransform\Options.cs,Parse,The length of the statement  "	bool nullable = tt.IsValueType && tt.IsGenericType && !tt.IsGenericTypeDefinition && tt.GetGenericTypeDefinition () == typeof(Nullable<>); " is 138.
Long Statement,Mono.Options,Option,C:\repos\KCL5South_KCLTextTemplating\TextTransform\Options.cs,Parse,The length of the statement  "		throw new OptionException (string.Format (c.OptionSet.MessageLocalizer ("Could not convert string `{0}' to type {1} for option `{2}'.")' value' targetType.Name' c.OptionName)' c.OptionName' e); " is 193.
Long Statement,Mono.Options,Option,C:\repos\KCL5South_KCLTextTemplating\TextTransform\Options.cs,ParsePrototype,The length of the statement  "			throw new ArgumentException (string.Format ("Conflicting option types: '{0}' vs. '{1}'."' type' name [end])' "prototype"); " is 122.
Long Statement,Mono.Options,Option,C:\repos\KCL5South_KCLTextTemplating\TextTransform\Options.cs,ParsePrototype,The length of the statement  "		throw new ArgumentException (string.Format ("Cannot provide key/value separators for Options taking {0} value(s)."' count)' "prototype"); " is 137.
Long Statement,Mono.Options,OptionSet,C:\repos\KCL5South_KCLTextTemplating\TextTransform\Options.cs,ParseValue,The length of the statement  "		foreach (string o in c.Option.ValueSeparators != null ? option.Split (c.Option.ValueSeparators' StringSplitOptions.None) : new string[] { " is 137.
Long Statement,Mono.Options,OptionSet,C:\repos\KCL5South_KCLTextTemplating\TextTransform\Options.cs,ParseValue,The length of the statement  "		throw new OptionException (localizer (string.Format ("Error: Found {0} option values when expecting {1}."' c.OptionValues.Count' c.Option.MaxValueCount))' c.OptionName); " is 169.
Long Statement,Mono.Options,OptionSet,C:\repos\KCL5South_KCLTextTemplating\TextTransform\Options.cs,ParseBool,The length of the statement  "	if (n.Length >= 1 && (n [n.Length - 1] == '+' || n [n.Length - 1] == '-') && Contains ((rn = n.Substring (0' n.Length - 1)))) { " is 127.
Complex Conditional,Mono.Options,Option,C:\repos\KCL5South_KCLTextTemplating\TextTransform\Options.cs,Option,The conditional expression  "Array.IndexOf (names' "<>") >= 0 && ((names.Length == 1 && this.type != OptionValueType.None) || (names.Length > 1 && this.MaxValueCount > 1))"  is complex.
Complex Conditional,Mono.Options,OptionSet,C:\repos\KCL5South_KCLTextTemplating\TextTransform\Options.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n [n.Length - 1] == '+' || n [n.Length - 1] == '-') && Contains ((rn = n.Substring (0' n.Length - 1)))"  is complex.
Magic Number,Mono.TextTemplating,TextTransform,C:\repos\KCL5South_KCLTextTemplating\TextTransform\TextTransform.cs,Main,The following statement contains a magic number: foreach (var par in parameters) {  	var split = par.Split ('!');  	if (split.Length < 2) {  		Console.Error.WriteLine ("Parameter does not have enough values: {0}"' par);  		return -1;  	}  	if (split.Length > 2) {  		Console.Error.WriteLine ("Parameter has too many values: {0}"' par);  		return -1;  	}  	string name = split [split.Length - 2];  	string val = split [split.Length - 1];  	if (string.IsNullOrEmpty (name)) {  		Console.Error.WriteLine ("Parameter has no name: {0}"' par);  		return -1;  	}  	generator.AddParameter (split.Length > 3 ? split [0] : null' split.Length > 2 ? split [split.Length - 3] : null' name' val);  }  
Magic Number,Mono.TextTemplating,TextTransform,C:\repos\KCL5South_KCLTextTemplating\TextTransform\TextTransform.cs,Main,The following statement contains a magic number: foreach (var par in parameters) {  	var split = par.Split ('!');  	if (split.Length < 2) {  		Console.Error.WriteLine ("Parameter does not have enough values: {0}"' par);  		return -1;  	}  	if (split.Length > 2) {  		Console.Error.WriteLine ("Parameter has too many values: {0}"' par);  		return -1;  	}  	string name = split [split.Length - 2];  	string val = split [split.Length - 1];  	if (string.IsNullOrEmpty (name)) {  		Console.Error.WriteLine ("Parameter has no name: {0}"' par);  		return -1;  	}  	generator.AddParameter (split.Length > 3 ? split [0] : null' split.Length > 2 ? split [split.Length - 3] : null' name' val);  }  
Magic Number,Mono.TextTemplating,TextTransform,C:\repos\KCL5South_KCLTextTemplating\TextTransform\TextTransform.cs,Main,The following statement contains a magic number: foreach (var par in parameters) {  	var split = par.Split ('!');  	if (split.Length < 2) {  		Console.Error.WriteLine ("Parameter does not have enough values: {0}"' par);  		return -1;  	}  	if (split.Length > 2) {  		Console.Error.WriteLine ("Parameter has too many values: {0}"' par);  		return -1;  	}  	string name = split [split.Length - 2];  	string val = split [split.Length - 1];  	if (string.IsNullOrEmpty (name)) {  		Console.Error.WriteLine ("Parameter has no name: {0}"' par);  		return -1;  	}  	generator.AddParameter (split.Length > 3 ? split [0] : null' split.Length > 2 ? split [split.Length - 3] : null' name' val);  }  
Magic Number,Mono.TextTemplating,TextTransform,C:\repos\KCL5South_KCLTextTemplating\TextTransform\TextTransform.cs,Main,The following statement contains a magic number: foreach (var par in parameters) {  	var split = par.Split ('!');  	if (split.Length < 2) {  		Console.Error.WriteLine ("Parameter does not have enough values: {0}"' par);  		return -1;  	}  	if (split.Length > 2) {  		Console.Error.WriteLine ("Parameter has too many values: {0}"' par);  		return -1;  	}  	string name = split [split.Length - 2];  	string val = split [split.Length - 1];  	if (string.IsNullOrEmpty (name)) {  		Console.Error.WriteLine ("Parameter has no name: {0}"' par);  		return -1;  	}  	generator.AddParameter (split.Length > 3 ? split [0] : null' split.Length > 2 ? split [split.Length - 3] : null' name' val);  }  
Magic Number,Mono.TextTemplating,TextTransform,C:\repos\KCL5South_KCLTextTemplating\TextTransform\TextTransform.cs,Main,The following statement contains a magic number: foreach (var par in parameters) {  	var split = par.Split ('!');  	if (split.Length < 2) {  		Console.Error.WriteLine ("Parameter does not have enough values: {0}"' par);  		return -1;  	}  	if (split.Length > 2) {  		Console.Error.WriteLine ("Parameter has too many values: {0}"' par);  		return -1;  	}  	string name = split [split.Length - 2];  	string val = split [split.Length - 1];  	if (string.IsNullOrEmpty (name)) {  		Console.Error.WriteLine ("Parameter has no name: {0}"' par);  		return -1;  	}  	generator.AddParameter (split.Length > 3 ? split [0] : null' split.Length > 2 ? split [split.Length - 3] : null' name' val);  }  
Magic Number,Mono.TextTemplating,TextTransform,C:\repos\KCL5South_KCLTextTemplating\TextTransform\TextTransform.cs,Main,The following statement contains a magic number: foreach (var par in parameters) {  	var split = par.Split ('!');  	if (split.Length < 2) {  		Console.Error.WriteLine ("Parameter does not have enough values: {0}"' par);  		return -1;  	}  	if (split.Length > 2) {  		Console.Error.WriteLine ("Parameter has too many values: {0}"' par);  		return -1;  	}  	string name = split [split.Length - 2];  	string val = split [split.Length - 1];  	if (string.IsNullOrEmpty (name)) {  		Console.Error.WriteLine ("Parameter has no name: {0}"' par);  		return -1;  	}  	generator.AddParameter (split.Length > 3 ? split [0] : null' split.Length > 2 ? split [split.Length - 3] : null' name' val);  }  
Magic Number,Mono.TextTemplating,TextTransform,C:\repos\KCL5South_KCLTextTemplating\TextTransform\TextTransform.cs,Main,The following statement contains a magic number: if (split.Length < 2) {  	Console.Error.WriteLine ("Parameter does not have enough values: {0}"' par);  	return -1;  }  
Magic Number,Mono.TextTemplating,TextTransform,C:\repos\KCL5South_KCLTextTemplating\TextTransform\TextTransform.cs,Main,The following statement contains a magic number: if (split.Length > 2) {  	Console.Error.WriteLine ("Parameter has too many values: {0}"' par);  	return -1;  }  
Magic Number,Mono.TextTemplating,TextTransform,C:\repos\KCL5South_KCLTextTemplating\TextTransform\TextTransform.cs,Main,The following statement contains a magic number: generator.AddParameter (split.Length > 3 ? split [0] : null' split.Length > 2 ? split [split.Length - 3] : null' name' val);  
Magic Number,Mono.TextTemplating,TextTransform,C:\repos\KCL5South_KCLTextTemplating\TextTransform\TextTransform.cs,Main,The following statement contains a magic number: generator.AddParameter (split.Length > 3 ? split [0] : null' split.Length > 2 ? split [split.Length - 3] : null' name' val);  
Magic Number,Mono.TextTemplating,TextTransform,C:\repos\KCL5South_KCLTextTemplating\TextTransform\TextTransform.cs,Main,The following statement contains a magic number: generator.AddParameter (split.Length > 3 ? split [0] : null' split.Length > 2 ? split [split.Length - 3] : null' name' val);  
Magic Number,Mono.TextTemplating,TextTransform,C:\repos\KCL5South_KCLTextTemplating\TextTransform\TextTransform.cs,Main,The following statement contains a magic number: foreach (var dir in directives) {  	var split = dir.Split ('!');  	if (split.Length != 3) {  		Console.Error.WriteLine ("Directive does not have correct number of values: {0}"' dir);  		return -1;  	}  	foreach (var s in split) {  		if (string.IsNullOrEmpty (s)) {  			Console.Error.WriteLine ("Directive has missing value: {0}"' dir);  			return -1;  		}  	}  	generator.AddDirectiveProcessor (split [0]' split [1]' split [2]);  }  
Magic Number,Mono.TextTemplating,TextTransform,C:\repos\KCL5South_KCLTextTemplating\TextTransform\TextTransform.cs,Main,The following statement contains a magic number: foreach (var dir in directives) {  	var split = dir.Split ('!');  	if (split.Length != 3) {  		Console.Error.WriteLine ("Directive does not have correct number of values: {0}"' dir);  		return -1;  	}  	foreach (var s in split) {  		if (string.IsNullOrEmpty (s)) {  			Console.Error.WriteLine ("Directive has missing value: {0}"' dir);  			return -1;  		}  	}  	generator.AddDirectiveProcessor (split [0]' split [1]' split [2]);  }  
Magic Number,Mono.TextTemplating,TextTransform,C:\repos\KCL5South_KCLTextTemplating\TextTransform\TextTransform.cs,Main,The following statement contains a magic number: if (split.Length != 3) {  	Console.Error.WriteLine ("Directive does not have correct number of values: {0}"' dir);  	return -1;  }  
Magic Number,Mono.TextTemplating,TextTransform,C:\repos\KCL5South_KCLTextTemplating\TextTransform\TextTransform.cs,Main,The following statement contains a magic number: generator.AddDirectiveProcessor (split [0]' split [1]' split [2]);  
Magic Number,Mono.Options,OptionSet,C:\repos\KCL5South_KCLTextTemplating\TextTransform\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: foreach (Option p in this) {  	int written = 0;  	if (!WriteOptionPrototype (o' p' ref written))  		continue;  	if (written < OptionWidth)  		o.Write (new string (' '' OptionWidth - written));  	else {  		o.WriteLine ();  		o.Write (new string (' '' OptionWidth));  	}  	List<string> lines = GetLines (localizer (GetDescription (p.Description)));  	o.WriteLine (lines [0]);  	string prefix = new string (' '' OptionWidth + 2);  	for (int i = 1; i < lines.Count; ++i) {  		o.Write (prefix);  		o.WriteLine (lines [i]);  	}  }  
Missing Default,Mono.Options,OptionSet,C:\repos\KCL5South_KCLTextTemplating\TextTransform\Options.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType) {  case OptionValueType.None:  	c.OptionValues.Add (n);  	c.Option.Invoke (c);  	break;  case OptionValueType.Optional:  case OptionValueType.Required:  	ParseValue (v' c);  	break;  }  
Missing Default,Mono.Options,OptionSet,C:\repos\KCL5South_KCLTextTemplating\TextTransform\Options.cs,GetLineEnd,The following switch statement is missing a default case: switch (description [i]) {  case ' ':  case '\t':  case '\v':  case '-':  case ''':  case '.':  case ';':  	sep = i;  	break;  case '\n':  	return i;  }  
