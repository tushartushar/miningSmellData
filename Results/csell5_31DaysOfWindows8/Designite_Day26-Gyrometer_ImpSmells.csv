Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Day26_Gyrometer,MainPage,C:\repos\csell5_31DaysOfWindows8\source\XAML\Day26-Gyrometer\Day26-Gyrometer\MainPage.xaml.cs,gyrometer_ReadingChanged,The following statement contains a magic number: await Dispatcher.RunAsync(CoreDispatcherPriority.Normal' () =>              {                  XValue.Text = args.Reading.AngularVelocityX.ToString();                  YValue.Text = args.Reading.AngularVelocityY.ToString();                  ZValue.Text = args.Reading.AngularVelocityZ.ToString();                  TimeStamp.Text = args.Reading.Timestamp.ToString();                    xLine.X2 = xLine.X1 + args.Reading.AngularVelocityX * 200;                  yLine.Y2 = yLine.Y1 - args.Reading.AngularVelocityY * 200;                  zLine.X2 = zLine.X1 - args.Reading.AngularVelocityZ * 100;                  zLine.Y2 = zLine.Y1 + args.Reading.AngularVelocityZ * 100;              });
Magic Number,Day26_Gyrometer,MainPage,C:\repos\csell5_31DaysOfWindows8\source\XAML\Day26-Gyrometer\Day26-Gyrometer\MainPage.xaml.cs,gyrometer_ReadingChanged,The following statement contains a magic number: await Dispatcher.RunAsync(CoreDispatcherPriority.Normal' () =>              {                  XValue.Text = args.Reading.AngularVelocityX.ToString();                  YValue.Text = args.Reading.AngularVelocityY.ToString();                  ZValue.Text = args.Reading.AngularVelocityZ.ToString();                  TimeStamp.Text = args.Reading.Timestamp.ToString();                    xLine.X2 = xLine.X1 + args.Reading.AngularVelocityX * 200;                  yLine.Y2 = yLine.Y1 - args.Reading.AngularVelocityY * 200;                  zLine.X2 = zLine.X1 - args.Reading.AngularVelocityZ * 100;                  zLine.Y2 = zLine.Y1 + args.Reading.AngularVelocityZ * 100;              });
Magic Number,Day26_Gyrometer,MainPage,C:\repos\csell5_31DaysOfWindows8\source\XAML\Day26-Gyrometer\Day26-Gyrometer\MainPage.xaml.cs,gyrometer_ReadingChanged,The following statement contains a magic number: await Dispatcher.RunAsync(CoreDispatcherPriority.Normal' () =>              {                  XValue.Text = args.Reading.AngularVelocityX.ToString();                  YValue.Text = args.Reading.AngularVelocityY.ToString();                  ZValue.Text = args.Reading.AngularVelocityZ.ToString();                  TimeStamp.Text = args.Reading.Timestamp.ToString();                    xLine.X2 = xLine.X1 + args.Reading.AngularVelocityX * 200;                  yLine.Y2 = yLine.Y1 - args.Reading.AngularVelocityY * 200;                  zLine.X2 = zLine.X1 - args.Reading.AngularVelocityZ * 100;                  zLine.Y2 = zLine.Y1 + args.Reading.AngularVelocityZ * 100;              });
Magic Number,Day26_Gyrometer,MainPage,C:\repos\csell5_31DaysOfWindows8\source\XAML\Day26-Gyrometer\Day26-Gyrometer\MainPage.xaml.cs,gyrometer_ReadingChanged,The following statement contains a magic number: await Dispatcher.RunAsync(CoreDispatcherPriority.Normal' () =>              {                  XValue.Text = args.Reading.AngularVelocityX.ToString();                  YValue.Text = args.Reading.AngularVelocityY.ToString();                  ZValue.Text = args.Reading.AngularVelocityZ.ToString();                  TimeStamp.Text = args.Reading.Timestamp.ToString();                    xLine.X2 = xLine.X1 + args.Reading.AngularVelocityX * 200;                  yLine.Y2 = yLine.Y1 - args.Reading.AngularVelocityY * 200;                  zLine.X2 = zLine.X1 - args.Reading.AngularVelocityZ * 100;                  zLine.Y2 = zLine.Y1 + args.Reading.AngularVelocityZ * 100;              });
