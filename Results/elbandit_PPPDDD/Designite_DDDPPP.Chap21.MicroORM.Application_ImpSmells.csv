Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,DDDPPP.Chap21.MicroORM.Application.Model.Auction,WinningBid,C:\repos\elbandit_PPPDDD\21 - Repositories\DDDPPP.Chap21.MicroORM\DDDPPP.Chap21.MicroORM.Application\Model\Auction\WinningBid.cs,WinningBid,The method has 5 parameters. Parameters: auctionId' bidder' maximumBid' bid' timeOfBid
Long Statement,DDDPPP.Chap21.MicroORM.Application.Application.Queries,BidHistoryQuery,C:\repos\elbandit_PPPDDD\21 - Repositories\DDDPPP.Chap21.MicroORM\DDDPPP.Chap21.MicroORM.Application\Application\Queries\BidHistoryQuery.cs,Convert,The length of the statement  "                bidInfo.Add(new BidInformation() { Bidder = bid.Bidder' AmountBid = bid.AmountBid.GetSnapshot().Value' TimeOfBid = bid.TimeOfBid }); " is 132.
Long Statement,DDDPPP.Chap21.MicroORM.Application.Infrastructure,AuctionRepository,C:\repos\elbandit_PPPDDD\21 - Repositories\DDDPPP.Chap21.MicroORM\DDDPPP.Chap21.MicroORM.Application\Infrastructure\AuctionRepository.cs,FindBy,The length of the statement  "            using (var connection = new SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["AuctionDB"].ConnectionString)) " is 133.
Long Statement,DDDPPP.Chap21.MicroORM.Application.Infrastructure,AuctionRepository,C:\repos\elbandit_PPPDDD\21 - Repositories\DDDPPP.Chap21.MicroORM\DDDPPP.Chap21.MicroORM.Application\Infrastructure\AuctionRepository.cs,FindBy,The length of the statement  "                auctionDTO = connection.Query<AuctionDTO>("Select * From Auctions Where Id = CAST(@Id AS uniqueidentifier)"' new { Id = Id }).FirstOrDefault(); " is 143.
Long Statement,DDDPPP.Chap21.MicroORM.Application.Infrastructure,AuctionRepository,C:\repos\elbandit_PPPDDD\21 - Repositories\DDDPPP.Chap21.MicroORM\DDDPPP.Chap21.MicroORM.Application\Infrastructure\AuctionRepository.cs,PersistCreationOf,The length of the statement  "            using (var connection = new SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["AuctionDB"].ConnectionString)) " is 133.
Long Statement,DDDPPP.Chap21.MicroORM.Application.Infrastructure,AuctionRepository,C:\repos\elbandit_PPPDDD\21 - Repositories\DDDPPP.Chap21.MicroORM\DDDPPP.Chap21.MicroORM.Application\Infrastructure\AuctionRepository.cs,PersistUpdateOf,The length of the statement  "            using (var connection = new SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["AuctionDB"].ConnectionString)) " is 133.
Long Statement,DDDPPP.Chap21.MicroORM.Application.Infrastructure,BidHistoryRepository,C:\repos\elbandit_PPPDDD\21 - Repositories\DDDPPP.Chap21.MicroORM\DDDPPP.Chap21.MicroORM.Application\Infrastructure\BidHistoryRepository.cs,NoOfBidsFor,The length of the statement  "            using (var connection = new SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["AuctionDB"].ConnectionString)) " is 133.
Long Statement,DDDPPP.Chap21.MicroORM.Application.Infrastructure,BidHistoryRepository,C:\repos\elbandit_PPPDDD\21 - Repositories\DDDPPP.Chap21.MicroORM\DDDPPP.Chap21.MicroORM.Application\Infrastructure\BidHistoryRepository.cs,NoOfBidsFor,The length of the statement  "                var count1 = connection.Query<int>("Select Count(*) From BidHistory Where AuctionId = @Id"' new { Id = auctionId }).FirstOrDefault(); " is 133.
Long Statement,DDDPPP.Chap21.MicroORM.Application.Infrastructure,BidHistoryRepository,C:\repos\elbandit_PPPDDD\21 - Repositories\DDDPPP.Chap21.MicroORM\DDDPPP.Chap21.MicroORM.Application\Infrastructure\BidHistoryRepository.cs,FindBy,The length of the statement  "            using (var connection = new SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["AuctionDB"].ConnectionString)) " is 133.
Long Statement,DDDPPP.Chap21.MicroORM.Application.Infrastructure,BidHistoryRepository,C:\repos\elbandit_PPPDDD\21 - Repositories\DDDPPP.Chap21.MicroORM\DDDPPP.Chap21.MicroORM.Application\Infrastructure\BidHistoryRepository.cs,PersistCreationOf,The length of the statement  "            using (var connection = new SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["AuctionDB"].ConnectionString)) " is 133.
Long Statement,DDDPPP.Chap21.MicroORM.Application.Model.Auction,WinningBid,C:\repos\elbandit_PPPDDD\21 - Repositories\DDDPPP.Chap21.MicroORM\DDDPPP.Chap21.MicroORM.Application\Model\Auction\WinningBid.cs,DetermineWinnerFromProxyBidding,The length of the statement  "                    return CreateNewBid(newbid.Bidder' nextIncrement.CurrentAuctionPrice.BidIncrement()' newbid.MaximumBid' newbid.TimeOfOffer);                 " is 124.
Long Statement,DDDPPP.Chap21.MicroORM.Application.Model.Auction,WinningBid,C:\repos\elbandit_PPPDDD\21 - Repositories\DDDPPP.Chap21.MicroORM\DDDPPP.Chap21.MicroORM.Application\Model\Auction\WinningBid.cs,DetermineWinnerFromProxyBidding,The length of the statement  "                    return CreateNewBid(winningBid.Bidder' nextIncrement.CurrentAuctionPrice.BidIncrement()' winningBid.MaximumBid' winningBid.TimeOfBid); " is 134.
Long Statement,DDDPPP.Chap21.MicroORM.Application.Model.Auction,WinningBid,C:\repos\elbandit_PPPDDD\21 - Repositories\DDDPPP.Chap21.MicroORM\DDDPPP.Chap21.MicroORM.Application\Model\Auction\WinningBid.cs,CreateFrom,The length of the statement  "            return new WinningBid(bidSnapShot.AuctionId' bidSnapShot.BiddersId' new Money(bidSnapShot.BiddersMaximumBid)' new Money(bidSnapShot.CurrentPrice)' bidSnapShot.TimeOfBid); " is 170.
Magic Number,DDDPPP.Chap21.MicroORM.Application.Infrastructure,ValueObject<T>,C:\repos\elbandit_PPPDDD\21 - Repositories\DDDPPP.Chap21.MicroORM\DDDPPP.Chap21.MicroORM.Application\Infrastructure\ValueObject.cs,GetHashCode,The following statement contains a magic number: int hash = 17;
Magic Number,DDDPPP.Chap21.MicroORM.Application.Infrastructure,ValueObject<T>,C:\repos\elbandit_PPPDDD\21 - Repositories\DDDPPP.Chap21.MicroORM\DDDPPP.Chap21.MicroORM.Application\Infrastructure\ValueObject.cs,GetHashCode,The following statement contains a magic number: foreach (var obj in this.GetAttributesToIncludeInEqualityCheck())                  hash = hash * 31 + (obj == null ? 0 : obj.GetHashCode());
