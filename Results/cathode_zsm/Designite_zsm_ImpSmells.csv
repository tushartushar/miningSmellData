Implementation smell,Namespace,Class,File,Method,Description
Long Method,zsm,PurgeTool,C:\repos\cathode_zsm\zsm\PurgeTool.cs,Run,The method has 113 lines of code.
Complex Method,zsm,Bucket,C:\repos\cathode_zsm\zsm\Bucket.cs,Purge,Cyclomatic complexity of the method is 8
Complex Method,zsm,PurgeTool,C:\repos\cathode_zsm\zsm\PurgeTool.cs,Run,Cyclomatic complexity of the method is 18
Complex Method,zsm,SnapshotWindow,C:\repos\cathode_zsm\zsm\SnapshotWindow.cs,MakeBuckets,Cyclomatic complexity of the method is 35
Long Statement,zsm,Bucket,C:\repos\cathode_zsm\zsm\Bucket.cs,Purge,The length of the statement  "					var snapsInTimeSlot = snaps.Where (e => e.Creation >= slot.Item1 && e.Creation <= slot.Item2).OrderBy (k => k.Creation).ToArray (); " is 131.
Long Statement,zsm,SnapshotWindow,C:\repos\cathode_zsm\zsm\SnapshotWindow.cs,MakeBuckets,The length of the statement  "			b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute % this.UnitsPerBucket * -1); " is 125.
Long Statement,zsm,SnapshotWindow,C:\repos\cathode_zsm\zsm\SnapshotWindow.cs,MakeBuckets,The length of the statement  "			b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour % this.UnitsPerBucket * -1); " is 148.
Long Statement,zsm,SnapshotWindow,C:\repos\cathode_zsm\zsm\SnapshotWindow.cs,MakeBuckets,The length of the statement  "			b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day % this.UnitsPerBucket * -1); " is 169.
Long Statement,zsm,SnapshotWindow,C:\repos\cathode_zsm\zsm\SnapshotWindow.cs,MakeBuckets,The length of the statement  "			b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day % (7 * this.UnitsPerBucket) * -1); " is 175.
Long Statement,zsm,SnapshotWindow,C:\repos\cathode_zsm\zsm\SnapshotWindow.cs,MakeBuckets,The length of the statement  "			b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day * -1).AddMonths (r.Month % this.UnitsPerBucket * -1); " is 194.
Long Statement,zsm,SnapshotWindow,C:\repos\cathode_zsm\zsm\SnapshotWindow.cs,MakeBuckets,The length of the statement  "			b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day * -1).AddMonths (r.Month * -1).AddYears (r.Year % this.UnitsPerBucket * -1); " is 217.
Magic Number,zsm,PurgeTool,C:\repos\cathode_zsm\zsm\PurgeTool.cs,Run,The following statement contains a magic number: foreach (var line in lines) {  	var ln = line.Trim ();  	if (string.IsNullOrWhiteSpace (ln))  		continue;  	var parts = ln.Split ('\t');  	if (parts.Length > 0) {  		var si = new SnapshotInfo ();  		var namePortion = parts [0];  		var datePortion = parts [1];  		var dsNameLength = namePortion.IndexOf ('@');  		si.DatasetName = namePortion.Substring (0' dsNameLength);  		si.SnapshotName = namePortion.Substring (dsNameLength + 1);  		if (!si.SnapshotName.StartsWith (startsWith))  			continue;  		// zfs list output (with -p) for date is UNIX date stamp (seconds since 00:00:00' Jan 1st' 1970).  		var unixStamp = long.Parse (datePortion);  		si.Creation = new DateTime (1970' 1' 1' 0' 0' 0' 0' DateTimeKind.Utc).AddSeconds (unixStamp).ToLocalTime ();  		snaps.Add (si);  	}  }  
Magic Number,zsm,PurgeTool,C:\repos\cathode_zsm\zsm\PurgeTool.cs,Run,The following statement contains a magic number: if (parts.Length > 0) {  	var si = new SnapshotInfo ();  	var namePortion = parts [0];  	var datePortion = parts [1];  	var dsNameLength = namePortion.IndexOf ('@');  	si.DatasetName = namePortion.Substring (0' dsNameLength);  	si.SnapshotName = namePortion.Substring (dsNameLength + 1);  	if (!si.SnapshotName.StartsWith (startsWith))  		continue;  	// zfs list output (with -p) for date is UNIX date stamp (seconds since 00:00:00' Jan 1st' 1970).  	var unixStamp = long.Parse (datePortion);  	si.Creation = new DateTime (1970' 1' 1' 0' 0' 0' 0' DateTimeKind.Utc).AddSeconds (unixStamp).ToLocalTime ();  	snaps.Add (si);  }  
Magic Number,zsm,PurgeTool,C:\repos\cathode_zsm\zsm\PurgeTool.cs,Run,The following statement contains a magic number: si.Creation = new DateTime (1970' 1' 1' 0' 0' 0' 0' DateTimeKind.Utc).AddSeconds (unixStamp).ToLocalTime ();  
Magic Number,zsm,PurgeTool,C:\repos\cathode_zsm\zsm\PurgeTool.cs,Run,The following statement contains a magic number: windows.Add (new SnapshotWindow (BucketUnit.Minute' 60' 1' 0));  
Magic Number,zsm,PurgeTool,C:\repos\cathode_zsm\zsm\PurgeTool.cs,Run,The following statement contains a magic number: windows.Add (new SnapshotWindow (BucketUnit.Hour' 1' 10' 12));  
Magic Number,zsm,PurgeTool,C:\repos\cathode_zsm\zsm\PurgeTool.cs,Run,The following statement contains a magic number: windows.Add (new SnapshotWindow (BucketUnit.Hour' 1' 10' 12));  
Magic Number,zsm,PurgeTool,C:\repos\cathode_zsm\zsm\PurgeTool.cs,Run,The following statement contains a magic number: windows.Add (new SnapshotWindow (BucketUnit.Hour' 1' 72' 4));  
Magic Number,zsm,PurgeTool,C:\repos\cathode_zsm\zsm\PurgeTool.cs,Run,The following statement contains a magic number: windows.Add (new SnapshotWindow (BucketUnit.Hour' 1' 72' 4));  
Magic Number,zsm,PurgeTool,C:\repos\cathode_zsm\zsm\PurgeTool.cs,Run,The following statement contains a magic number: windows.Add (new SnapshotWindow (BucketUnit.Day' 1' 21' 4));  
Magic Number,zsm,PurgeTool,C:\repos\cathode_zsm\zsm\PurgeTool.cs,Run,The following statement contains a magic number: windows.Add (new SnapshotWindow (BucketUnit.Day' 1' 21' 4));  
Magic Number,zsm,PurgeTool,C:\repos\cathode_zsm\zsm\PurgeTool.cs,Run,The following statement contains a magic number: windows.Add (new SnapshotWindow (BucketUnit.Day' 1' 60' 2));  
Magic Number,zsm,PurgeTool,C:\repos\cathode_zsm\zsm\PurgeTool.cs,Run,The following statement contains a magic number: windows.Add (new SnapshotWindow (BucketUnit.Day' 1' 60' 2));  
Magic Number,zsm,PurgeTool,C:\repos\cathode_zsm\zsm\PurgeTool.cs,Run,The following statement contains a magic number: windows.Add (new SnapshotWindow (BucketUnit.Month' 1' 12' 8));  
Magic Number,zsm,PurgeTool,C:\repos\cathode_zsm\zsm\PurgeTool.cs,Run,The following statement contains a magic number: windows.Add (new SnapshotWindow (BucketUnit.Month' 1' 12' 8));  
Magic Number,zsm,PurgeTool,C:\repos\cathode_zsm\zsm\PurgeTool.cs,Run,The following statement contains a magic number: windows.Add (new SnapshotWindow (BucketUnit.Year' 1' 10' 4));  
Magic Number,zsm,PurgeTool,C:\repos\cathode_zsm\zsm\PurgeTool.cs,Run,The following statement contains a magic number: windows.Add (new SnapshotWindow (BucketUnit.Year' 1' 10' 4));  
Magic Number,zsm,SnapshotWindow,C:\repos\cathode_zsm\zsm\SnapshotWindow.cs,MakeBuckets,The following statement contains a magic number: for (int i = 0; i < this.BucketCount; ++i) {  	var b = new Bucket ();  	b.Capacity = this.BucketCapacity;  	switch (this.Unit) {  	case zsm.BucketUnit.Minute:  		r = reference.AddMinutes (this.UnitsPerBucket * -1 * i);  		b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute % this.UnitsPerBucket * -1);  		b.End = b.Start.AddMinutes (this.UnitsPerBucket);  		break;  	case zsm.BucketUnit.Hour:  		r = reference.AddHours (this.UnitsPerBucket * -1 * i);  		b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour % this.UnitsPerBucket * -1);  		b.End = b.Start.AddHours (this.UnitsPerBucket);  		break;  	case zsm.BucketUnit.Day:  		r = reference.AddDays (this.UnitsPerBucket * -1 * i);  		b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day % this.UnitsPerBucket * -1);  		b.End = b.Start.AddDays (this.UnitsPerBucket);  		break;  	case zsm.BucketUnit.Week:  		r = reference.AddDays (7 * this.UnitsPerBucket * -1 * i);  		b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day % (7 * this.UnitsPerBucket) * -1);  		b.End = b.Start.AddDays (this.UnitsPerBucket * 7);  		break;  	case zsm.BucketUnit.Month:  		r = reference.AddMonths (this.UnitsPerBucket * -1 * i);  		b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day * -1).AddMonths (r.Month % this.UnitsPerBucket * -1);  		b.End = b.Start.AddMonths (this.UnitsPerBucket);  		break;  	case zsm.BucketUnit.Year:  		r = reference.AddYears (this.UnitsPerBucket * -1 * i);  		b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day * -1).AddMonths (r.Month * -1).AddYears (r.Year % this.UnitsPerBucket * -1);  		b.End = b.Start.AddYears (this.UnitsPerBucket);  		break;  	default:  		throw new NotImplementedException ();  	}  	// make the bucket end 1ms before to prevent overlap.  	b.End = b.End.AddMilliseconds (-1);  	if (b.End > cutoff)  		b.End = cutoff;  	if (b.Start > cutoff || b.Start > b.End || (b.End - b.Start).TotalMilliseconds < 1)  		continue;  	this.Buckets.Add (b);  }  
Magic Number,zsm,SnapshotWindow,C:\repos\cathode_zsm\zsm\SnapshotWindow.cs,MakeBuckets,The following statement contains a magic number: for (int i = 0; i < this.BucketCount; ++i) {  	var b = new Bucket ();  	b.Capacity = this.BucketCapacity;  	switch (this.Unit) {  	case zsm.BucketUnit.Minute:  		r = reference.AddMinutes (this.UnitsPerBucket * -1 * i);  		b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute % this.UnitsPerBucket * -1);  		b.End = b.Start.AddMinutes (this.UnitsPerBucket);  		break;  	case zsm.BucketUnit.Hour:  		r = reference.AddHours (this.UnitsPerBucket * -1 * i);  		b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour % this.UnitsPerBucket * -1);  		b.End = b.Start.AddHours (this.UnitsPerBucket);  		break;  	case zsm.BucketUnit.Day:  		r = reference.AddDays (this.UnitsPerBucket * -1 * i);  		b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day % this.UnitsPerBucket * -1);  		b.End = b.Start.AddDays (this.UnitsPerBucket);  		break;  	case zsm.BucketUnit.Week:  		r = reference.AddDays (7 * this.UnitsPerBucket * -1 * i);  		b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day % (7 * this.UnitsPerBucket) * -1);  		b.End = b.Start.AddDays (this.UnitsPerBucket * 7);  		break;  	case zsm.BucketUnit.Month:  		r = reference.AddMonths (this.UnitsPerBucket * -1 * i);  		b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day * -1).AddMonths (r.Month % this.UnitsPerBucket * -1);  		b.End = b.Start.AddMonths (this.UnitsPerBucket);  		break;  	case zsm.BucketUnit.Year:  		r = reference.AddYears (this.UnitsPerBucket * -1 * i);  		b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day * -1).AddMonths (r.Month * -1).AddYears (r.Year % this.UnitsPerBucket * -1);  		b.End = b.Start.AddYears (this.UnitsPerBucket);  		break;  	default:  		throw new NotImplementedException ();  	}  	// make the bucket end 1ms before to prevent overlap.  	b.End = b.End.AddMilliseconds (-1);  	if (b.End > cutoff)  		b.End = cutoff;  	if (b.Start > cutoff || b.Start > b.End || (b.End - b.Start).TotalMilliseconds < 1)  		continue;  	this.Buckets.Add (b);  }  
Magic Number,zsm,SnapshotWindow,C:\repos\cathode_zsm\zsm\SnapshotWindow.cs,MakeBuckets,The following statement contains a magic number: for (int i = 0; i < this.BucketCount; ++i) {  	var b = new Bucket ();  	b.Capacity = this.BucketCapacity;  	switch (this.Unit) {  	case zsm.BucketUnit.Minute:  		r = reference.AddMinutes (this.UnitsPerBucket * -1 * i);  		b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute % this.UnitsPerBucket * -1);  		b.End = b.Start.AddMinutes (this.UnitsPerBucket);  		break;  	case zsm.BucketUnit.Hour:  		r = reference.AddHours (this.UnitsPerBucket * -1 * i);  		b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour % this.UnitsPerBucket * -1);  		b.End = b.Start.AddHours (this.UnitsPerBucket);  		break;  	case zsm.BucketUnit.Day:  		r = reference.AddDays (this.UnitsPerBucket * -1 * i);  		b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day % this.UnitsPerBucket * -1);  		b.End = b.Start.AddDays (this.UnitsPerBucket);  		break;  	case zsm.BucketUnit.Week:  		r = reference.AddDays (7 * this.UnitsPerBucket * -1 * i);  		b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day % (7 * this.UnitsPerBucket) * -1);  		b.End = b.Start.AddDays (this.UnitsPerBucket * 7);  		break;  	case zsm.BucketUnit.Month:  		r = reference.AddMonths (this.UnitsPerBucket * -1 * i);  		b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day * -1).AddMonths (r.Month % this.UnitsPerBucket * -1);  		b.End = b.Start.AddMonths (this.UnitsPerBucket);  		break;  	case zsm.BucketUnit.Year:  		r = reference.AddYears (this.UnitsPerBucket * -1 * i);  		b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day * -1).AddMonths (r.Month * -1).AddYears (r.Year % this.UnitsPerBucket * -1);  		b.End = b.Start.AddYears (this.UnitsPerBucket);  		break;  	default:  		throw new NotImplementedException ();  	}  	// make the bucket end 1ms before to prevent overlap.  	b.End = b.End.AddMilliseconds (-1);  	if (b.End > cutoff)  		b.End = cutoff;  	if (b.Start > cutoff || b.Start > b.End || (b.End - b.Start).TotalMilliseconds < 1)  		continue;  	this.Buckets.Add (b);  }  
Magic Number,zsm,SnapshotWindow,C:\repos\cathode_zsm\zsm\SnapshotWindow.cs,MakeBuckets,The following statement contains a magic number: switch (this.Unit) {  case zsm.BucketUnit.Minute:  	r = reference.AddMinutes (this.UnitsPerBucket * -1 * i);  	b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute % this.UnitsPerBucket * -1);  	b.End = b.Start.AddMinutes (this.UnitsPerBucket);  	break;  case zsm.BucketUnit.Hour:  	r = reference.AddHours (this.UnitsPerBucket * -1 * i);  	b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour % this.UnitsPerBucket * -1);  	b.End = b.Start.AddHours (this.UnitsPerBucket);  	break;  case zsm.BucketUnit.Day:  	r = reference.AddDays (this.UnitsPerBucket * -1 * i);  	b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day % this.UnitsPerBucket * -1);  	b.End = b.Start.AddDays (this.UnitsPerBucket);  	break;  case zsm.BucketUnit.Week:  	r = reference.AddDays (7 * this.UnitsPerBucket * -1 * i);  	b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day % (7 * this.UnitsPerBucket) * -1);  	b.End = b.Start.AddDays (this.UnitsPerBucket * 7);  	break;  case zsm.BucketUnit.Month:  	r = reference.AddMonths (this.UnitsPerBucket * -1 * i);  	b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day * -1).AddMonths (r.Month % this.UnitsPerBucket * -1);  	b.End = b.Start.AddMonths (this.UnitsPerBucket);  	break;  case zsm.BucketUnit.Year:  	r = reference.AddYears (this.UnitsPerBucket * -1 * i);  	b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day * -1).AddMonths (r.Month * -1).AddYears (r.Year % this.UnitsPerBucket * -1);  	b.End = b.Start.AddYears (this.UnitsPerBucket);  	break;  default:  	throw new NotImplementedException ();  }  
Magic Number,zsm,SnapshotWindow,C:\repos\cathode_zsm\zsm\SnapshotWindow.cs,MakeBuckets,The following statement contains a magic number: switch (this.Unit) {  case zsm.BucketUnit.Minute:  	r = reference.AddMinutes (this.UnitsPerBucket * -1 * i);  	b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute % this.UnitsPerBucket * -1);  	b.End = b.Start.AddMinutes (this.UnitsPerBucket);  	break;  case zsm.BucketUnit.Hour:  	r = reference.AddHours (this.UnitsPerBucket * -1 * i);  	b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour % this.UnitsPerBucket * -1);  	b.End = b.Start.AddHours (this.UnitsPerBucket);  	break;  case zsm.BucketUnit.Day:  	r = reference.AddDays (this.UnitsPerBucket * -1 * i);  	b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day % this.UnitsPerBucket * -1);  	b.End = b.Start.AddDays (this.UnitsPerBucket);  	break;  case zsm.BucketUnit.Week:  	r = reference.AddDays (7 * this.UnitsPerBucket * -1 * i);  	b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day % (7 * this.UnitsPerBucket) * -1);  	b.End = b.Start.AddDays (this.UnitsPerBucket * 7);  	break;  case zsm.BucketUnit.Month:  	r = reference.AddMonths (this.UnitsPerBucket * -1 * i);  	b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day * -1).AddMonths (r.Month % this.UnitsPerBucket * -1);  	b.End = b.Start.AddMonths (this.UnitsPerBucket);  	break;  case zsm.BucketUnit.Year:  	r = reference.AddYears (this.UnitsPerBucket * -1 * i);  	b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day * -1).AddMonths (r.Month * -1).AddYears (r.Year % this.UnitsPerBucket * -1);  	b.End = b.Start.AddYears (this.UnitsPerBucket);  	break;  default:  	throw new NotImplementedException ();  }  
Magic Number,zsm,SnapshotWindow,C:\repos\cathode_zsm\zsm\SnapshotWindow.cs,MakeBuckets,The following statement contains a magic number: switch (this.Unit) {  case zsm.BucketUnit.Minute:  	r = reference.AddMinutes (this.UnitsPerBucket * -1 * i);  	b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute % this.UnitsPerBucket * -1);  	b.End = b.Start.AddMinutes (this.UnitsPerBucket);  	break;  case zsm.BucketUnit.Hour:  	r = reference.AddHours (this.UnitsPerBucket * -1 * i);  	b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour % this.UnitsPerBucket * -1);  	b.End = b.Start.AddHours (this.UnitsPerBucket);  	break;  case zsm.BucketUnit.Day:  	r = reference.AddDays (this.UnitsPerBucket * -1 * i);  	b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day % this.UnitsPerBucket * -1);  	b.End = b.Start.AddDays (this.UnitsPerBucket);  	break;  case zsm.BucketUnit.Week:  	r = reference.AddDays (7 * this.UnitsPerBucket * -1 * i);  	b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day % (7 * this.UnitsPerBucket) * -1);  	b.End = b.Start.AddDays (this.UnitsPerBucket * 7);  	break;  case zsm.BucketUnit.Month:  	r = reference.AddMonths (this.UnitsPerBucket * -1 * i);  	b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day * -1).AddMonths (r.Month % this.UnitsPerBucket * -1);  	b.End = b.Start.AddMonths (this.UnitsPerBucket);  	break;  case zsm.BucketUnit.Year:  	r = reference.AddYears (this.UnitsPerBucket * -1 * i);  	b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day * -1).AddMonths (r.Month * -1).AddYears (r.Year % this.UnitsPerBucket * -1);  	b.End = b.Start.AddYears (this.UnitsPerBucket);  	break;  default:  	throw new NotImplementedException ();  }  
Magic Number,zsm,SnapshotWindow,C:\repos\cathode_zsm\zsm\SnapshotWindow.cs,MakeBuckets,The following statement contains a magic number: r = reference.AddDays (7 * this.UnitsPerBucket * -1 * i);  
Magic Number,zsm,SnapshotWindow,C:\repos\cathode_zsm\zsm\SnapshotWindow.cs,MakeBuckets,The following statement contains a magic number: b.Start = r.AddMilliseconds (r.Millisecond * -1).AddSeconds (r.Second * -1).AddMinutes (r.Minute * -1).AddHours (r.Hour * -1).AddDays (r.Day % (7 * this.UnitsPerBucket) * -1);  
Magic Number,zsm,SnapshotWindow,C:\repos\cathode_zsm\zsm\SnapshotWindow.cs,MakeBuckets,The following statement contains a magic number: b.End = b.Start.AddDays (this.UnitsPerBucket * 7);  
