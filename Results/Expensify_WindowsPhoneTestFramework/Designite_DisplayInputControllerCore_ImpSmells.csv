Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,WindowsPhoneTestFramework.Server.DisplayInputControllerCore,NativeMethods,C:\repos\Expensify_WindowsPhoneTestFramework\Server\DisplayInputControllerCore\NativeMethods.cs,SetWindowPos,The method has 7 parameters. Parameters: hWnd' hWndInsertAfter' X' Y' cx' cy' uFlags
Long Identifier,WindowsPhoneTestFramework.Server.DisplayInputControllerCore,EmulatorDisplayInputControllerBase,C:\repos\Expensify_WindowsPhoneTestFramework\Server\DisplayInputControllerCore\EmulatorDisplayInputControllerBase.cs,,The length of the parameter DefaultPauseDurationAfterAction is 31.
Long Identifier,WindowsPhoneTestFramework.Server.DisplayInputControllerCore,EmulatorDisplayInputControllerBase,C:\repos\Expensify_WindowsPhoneTestFramework\Server\DisplayInputControllerCore\EmulatorDisplayInputControllerBase.cs,,The length of the parameter DefaultLongPressPauseDurationDuringAction is 41.
Magic Number,WindowsPhoneTestFramework.Server.DisplayInputControllerCore,DeviceDisplayInputController,C:\repos\Expensify_WindowsPhoneTestFramework\Server\DisplayInputControllerCore\DeviceDisplayInputController.cs,GetWindowRect,The following statement contains a magic number: return new Rectangle(0' 0' 480' 800);
Magic Number,WindowsPhoneTestFramework.Server.DisplayInputControllerCore,DeviceDisplayInputController,C:\repos\Expensify_WindowsPhoneTestFramework\Server\DisplayInputControllerCore\DeviceDisplayInputController.cs,GetWindowRect,The following statement contains a magic number: return new Rectangle(0' 0' 480' 800);
Magic Number,WindowsPhoneTestFramework.Server.DisplayInputControllerCore,EmulatorDisplayInputControllerBase,C:\repos\Expensify_WindowsPhoneTestFramework\Server\DisplayInputControllerCore\EmulatorDisplayInputControllerBase.cs,PerformMouseDownMoveUp,The following statement contains a magic number: if (array.Length < 2)                  throw new ManipulationFailedException("Requested PerformMouseDownMoveUp with too few points - {0}"'                                                        array.Length);
Magic Number,WindowsPhoneTestFramework.Server.DisplayInputControllerCore,EmulatorDisplayInputControllerBase,C:\repos\Expensify_WindowsPhoneTestFramework\Server\DisplayInputControllerCore\EmulatorDisplayInputControllerBase.cs,EstimateScaleRatio,The following statement contains a magic number: switch (orientation)              {                  case PhoneOrientation.Landscape800By480:                      return rect.Width/800.0;                    case PhoneOrientation.Portrait480By800:                      return rect.Width/480.0;              }
Magic Number,WindowsPhoneTestFramework.Server.DisplayInputControllerCore,EmulatorDisplayInputControllerBase,C:\repos\Expensify_WindowsPhoneTestFramework\Server\DisplayInputControllerCore\EmulatorDisplayInputControllerBase.cs,EstimateScaleRatio,The following statement contains a magic number: switch (orientation)              {                  case PhoneOrientation.Landscape800By480:                      return rect.Width/800.0;                    case PhoneOrientation.Portrait480By800:                      return rect.Width/480.0;              }
Magic Number,WindowsPhoneTestFramework.Server.DisplayInputControllerCore,EmulatorDisplayInputControllerBase,C:\repos\Expensify_WindowsPhoneTestFramework\Server\DisplayInputControllerCore\EmulatorDisplayInputControllerBase.cs,GuessOrientation,The following statement contains a magic number: if (Math.Abs(ratio - 800.0/480.0) < 0.01)                  return PhoneOrientation.Landscape800By480;
Magic Number,WindowsPhoneTestFramework.Server.DisplayInputControllerCore,EmulatorDisplayInputControllerBase,C:\repos\Expensify_WindowsPhoneTestFramework\Server\DisplayInputControllerCore\EmulatorDisplayInputControllerBase.cs,GuessOrientation,The following statement contains a magic number: if (Math.Abs(ratio - 800.0/480.0) < 0.01)                  return PhoneOrientation.Landscape800By480;
Magic Number,WindowsPhoneTestFramework.Server.DisplayInputControllerCore,EmulatorDisplayInputControllerBase,C:\repos\Expensify_WindowsPhoneTestFramework\Server\DisplayInputControllerCore\EmulatorDisplayInputControllerBase.cs,GuessOrientation,The following statement contains a magic number: if (Math.Abs(ratio - 800.0/480.0) < 0.01)                  return PhoneOrientation.Landscape800By480;
Magic Number,WindowsPhoneTestFramework.Server.DisplayInputControllerCore,EmulatorDisplayInputControllerBase,C:\repos\Expensify_WindowsPhoneTestFramework\Server\DisplayInputControllerCore\EmulatorDisplayInputControllerBase.cs,GuessOrientation,The following statement contains a magic number: if (Math.Abs(ratio - 480.0/800.0) < 0.01)                  return PhoneOrientation.Portrait480By800;
Magic Number,WindowsPhoneTestFramework.Server.DisplayInputControllerCore,EmulatorDisplayInputControllerBase,C:\repos\Expensify_WindowsPhoneTestFramework\Server\DisplayInputControllerCore\EmulatorDisplayInputControllerBase.cs,GuessOrientation,The following statement contains a magic number: if (Math.Abs(ratio - 480.0/800.0) < 0.01)                  return PhoneOrientation.Portrait480By800;
Magic Number,WindowsPhoneTestFramework.Server.DisplayInputControllerCore,EmulatorDisplayInputControllerBase,C:\repos\Expensify_WindowsPhoneTestFramework\Server\DisplayInputControllerCore\EmulatorDisplayInputControllerBase.cs,GuessOrientation,The following statement contains a magic number: if (Math.Abs(ratio - 480.0/800.0) < 0.01)                  return PhoneOrientation.Portrait480By800;
Missing Default,WindowsPhoneTestFramework.Server.DisplayInputControllerCore,EmulatorDisplayInputControllerBase,C:\repos\Expensify_WindowsPhoneTestFramework\Server\DisplayInputControllerCore\EmulatorDisplayInputControllerBase.cs,EstimateScaleRatio,The following switch statement is missing a default case: switch (orientation)              {                  case PhoneOrientation.Landscape800By480:                      return rect.Width/800.0;                    case PhoneOrientation.Portrait480By800:                      return rect.Width/480.0;              }
