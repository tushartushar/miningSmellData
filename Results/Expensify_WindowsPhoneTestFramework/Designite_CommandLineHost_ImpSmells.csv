Implementation smell,Namespace,Class,File,Method,Description
Long Statement,WindowsPhoneTestFramework.CommandLine.CommandLineHost.Commands,PhoneAutomationCommands,C:\repos\Expensify_WindowsPhoneTestFramework\CommandLine\CommandLineHost\Commands\PhoneAutomationCommands.cs,GetPosition,The length of the statement  "            Console.WriteLine(string.Format("getPosition: {0:0.0} {1:0.0} {2:0.0} {3:0.0}"' position.Left' position.Top' position.Width' position.Height)); " is 143.
Long Statement,WindowsPhoneTestFramework.CommandLine.CommandLineHost.Commands,PhoneAutomationCommands,C:\repos\Expensify_WindowsPhoneTestFramework\CommandLine\CommandLineHost\Commands\PhoneAutomationCommands.cs,GetProgress,The length of the statement  "            Console.WriteLine(string.Format("getProgress: min {0:0.0} max {1:0.0} current {2:0.0} "' progress.Min' progress.Max' progress.Current)); " is 136.
Magic Number,WindowsPhoneTestFramework.CommandLine.CommandLineHost,ProgramBase,C:\repos\Expensify_WindowsPhoneTestFramework\CommandLine\CommandLineHost\ProgramBase.cs,Run,The following statement contains a magic number: while (true)              {                  Console.WriteLine();                  Console.WriteLine("Next action?");                  var nextCommand = Console.ReadLine();                  if (nextCommand == null)                      continue;                    var split = nextCommand.Split(new[] {' '}' 2);                  string command = split[0];                  string argument = string.Empty;                  if (split.Length == 2)                  {                      argument = split[1];                  }                    DescribedMethod describedMethod;                  if (_actions.TryGetValue(command' out describedMethod))                  {                      ExceptionSafe(() => describedMethod.Action(argument));                  }                  else                  {                      Console.WriteLine("Unknown command: " + command);                  }              }
Magic Number,WindowsPhoneTestFramework.CommandLine.CommandLineHost,ProgramBase,C:\repos\Expensify_WindowsPhoneTestFramework\CommandLine\CommandLineHost\ProgramBase.cs,Run,The following statement contains a magic number: while (true)              {                  Console.WriteLine();                  Console.WriteLine("Next action?");                  var nextCommand = Console.ReadLine();                  if (nextCommand == null)                      continue;                    var split = nextCommand.Split(new[] {' '}' 2);                  string command = split[0];                  string argument = string.Empty;                  if (split.Length == 2)                  {                      argument = split[1];                  }                    DescribedMethod describedMethod;                  if (_actions.TryGetValue(command' out describedMethod))                  {                      ExceptionSafe(() => describedMethod.Action(argument));                  }                  else                  {                      Console.WriteLine("Unknown command: " + command);                  }              }
Magic Number,WindowsPhoneTestFramework.CommandLine.CommandLineHost.Commands,PhoneAutomationCommands,C:\repos\Expensify_WindowsPhoneTestFramework\CommandLine\CommandLineHost\Commands\PhoneAutomationCommands.cs,InvokeTap,The following statement contains a magic number: if (args.Length == 1)              {                  var result = ApplicationAutomationController.InvokeControlTapAction(args[0]);                  Console.WriteLine("invokeTap:" + result.ToString());              }              else if (args.Length == 3)              {                  var result = ApplicationAutomationController.InvokeControlTapAction(args[0]' int.Parse(args[1])' args[2]);                  Console.WriteLine("invokeTap: {0}"' result);              }              else              {                  Console.WriteLine("This method needs one or three arguments: controlId | controlId:ordinal:parentId");              }
Magic Number,WindowsPhoneTestFramework.CommandLine.CommandLineHost.Commands,PhoneAutomationCommands,C:\repos\Expensify_WindowsPhoneTestFramework\CommandLine\CommandLineHost\Commands\PhoneAutomationCommands.cs,InvokeTap,The following statement contains a magic number: if (args.Length == 1)              {                  var result = ApplicationAutomationController.InvokeControlTapAction(args[0]);                  Console.WriteLine("invokeTap:" + result.ToString());              }              else if (args.Length == 3)              {                  var result = ApplicationAutomationController.InvokeControlTapAction(args[0]' int.Parse(args[1])' args[2]);                  Console.WriteLine("invokeTap: {0}"' result);              }              else              {                  Console.WriteLine("This method needs one or three arguments: controlId | controlId:ordinal:parentId");              }
Magic Number,WindowsPhoneTestFramework.CommandLine.CommandLineHost.Commands,PhoneAutomationCommands,C:\repos\Expensify_WindowsPhoneTestFramework\CommandLine\CommandLineHost\Commands\PhoneAutomationCommands.cs,scrollIntoView,The following statement contains a magic number: if (args.Length == 1)              {                  var result = ApplicationAutomationController.ScrollIntoView(args[0]);                  Console.WriteLine("scrollIntoView:" + result.ToString());              }              else if (args.Length == 3)              {                  var result = ApplicationAutomationController.ScrollIntoView(args[0]' int.Parse(args[1])' args[2]);                  Console.WriteLine("scrollIntoView: {0}"' result);              }              else              {                  Console.WriteLine("This method needs one or three arguments: controlId | controlId:ordinal:parentId");              }
Magic Number,WindowsPhoneTestFramework.CommandLine.CommandLineHost.Commands,PhoneAutomationCommands,C:\repos\Expensify_WindowsPhoneTestFramework\CommandLine\CommandLineHost\Commands\PhoneAutomationCommands.cs,scrollIntoView,The following statement contains a magic number: if (args.Length == 1)              {                  var result = ApplicationAutomationController.ScrollIntoView(args[0]);                  Console.WriteLine("scrollIntoView:" + result.ToString());              }              else if (args.Length == 3)              {                  var result = ApplicationAutomationController.ScrollIntoView(args[0]' int.Parse(args[1])' args[2]);                  Console.WriteLine("scrollIntoView: {0}"' result);              }              else              {                  Console.WriteLine("This method needs one or three arguments: controlId | controlId:ordinal:parentId");              }
Magic Number,WindowsPhoneTestFramework.CommandLine.CommandLineHost.Commands,PhoneAutomationCommands,C:\repos\Expensify_WindowsPhoneTestFramework\CommandLine\CommandLineHost\Commands\PhoneAutomationCommands.cs,SetValue,The following statement contains a magic number: var items = whatToSetAndValue.Split(new char[] { '=' }' 2);
Magic Number,WindowsPhoneTestFramework.CommandLine.CommandLineHost.Commands,PhoneAutomationCommands,C:\repos\Expensify_WindowsPhoneTestFramework\CommandLine\CommandLineHost\Commands\PhoneAutomationCommands.cs,SetValue,The following statement contains a magic number: if (items.Count() != 2)              {                  Console.WriteLine("Incorrect syntax - require setValue id=value");                  return;              }
Magic Number,WindowsPhoneTestFramework.CommandLine.CommandLineHost.Commands,PhoneAutomationCommands,C:\repos\Expensify_WindowsPhoneTestFramework\CommandLine\CommandLineHost\Commands\PhoneAutomationCommands.cs,SetText,The following statement contains a magic number: var items = whatToSetAndValue.Split(new char[] { '=' }' 2);
Magic Number,WindowsPhoneTestFramework.CommandLine.CommandLineHost.Commands,PhoneAutomationCommands,C:\repos\Expensify_WindowsPhoneTestFramework\CommandLine\CommandLineHost\Commands\PhoneAutomationCommands.cs,SetText,The following statement contains a magic number: if (items.Count() != 2)              {                  Console.WriteLine("Incorrect syntax - require setText id=value");                  return;              }
Magic Number,WindowsPhoneTestFramework.CommandLine.CommandLineHost.Commands,PhoneAutomationCommands,C:\repos\Expensify_WindowsPhoneTestFramework\CommandLine\CommandLineHost\Commands\PhoneAutomationCommands.cs,GetPosition,The following statement contains a magic number: if (args.Length == 1)              {                  position = ApplicationAutomationController.GetPositionOfControl(args[0]);              }              else if (args.Length == 3)              {                  position = ApplicationAutomationController.GetPositionOfControl(args[0]' int.Parse(args[1])' args[2]);              }              else              {                  Console.WriteLine("This method needs one or three arguments: controlId | controlId:ordinal:parentId");              }
Magic Number,WindowsPhoneTestFramework.CommandLine.CommandLineHost.Commands,PhoneAutomationCommands,C:\repos\Expensify_WindowsPhoneTestFramework\CommandLine\CommandLineHost\Commands\PhoneAutomationCommands.cs,GetPosition,The following statement contains a magic number: if (args.Length == 1)              {                  position = ApplicationAutomationController.GetPositionOfControl(args[0]);              }              else if (args.Length == 3)              {                  position = ApplicationAutomationController.GetPositionOfControl(args[0]' int.Parse(args[1])' args[2]);              }              else              {                  Console.WriteLine("This method needs one or three arguments: controlId | controlId:ordinal:parentId");              }
