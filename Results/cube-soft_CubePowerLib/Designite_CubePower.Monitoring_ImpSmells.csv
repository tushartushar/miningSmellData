Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CubePower.Monitoring,ChubuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChubuClient.cs,GetResponse,Cyclomatic complexity of the method is 9
Complex Method,CubePower.Monitoring,ChugokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChugokuClient.cs,GetResponse,Cyclomatic complexity of the method is 11
Complex Method,CubePower.Monitoring,Client,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\Client.cs,CsvUnityCase,Cyclomatic complexity of the method is 8
Complex Method,CubePower.Monitoring,HokkaidoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokkaidoClient.cs,GetResponse,Cyclomatic complexity of the method is 11
Complex Method,CubePower.Monitoring,HokurikuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokurikuClient.cs,GetResponse,Cyclomatic complexity of the method is 11
Complex Method,CubePower.Monitoring,KansaiClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\KansaiClient.cs,GetResponse,Cyclomatic complexity of the method is 8
Complex Method,CubePower.Monitoring,KyushuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\KyushuClient.cs,GetResponse,Cyclomatic complexity of the method is 8
Complex Method,CubePower.Monitoring,ShikokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ShikokuClient.cs,GetResponse,Cyclomatic complexity of the method is 11
Complex Method,CubePower.Monitoring,TohokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TohokuClient.cs,GetResponse,Cyclomatic complexity of the method is 11
Complex Method,CubePower.Monitoring,TokyoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TokyoClient.cs,GetResponse,Cyclomatic complexity of the method is 11
Long Statement,CubePower.Monitoring,Client,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\Client.cs,GetUsage,The length of the statement  "			var time = DateTime.ParseExact (fields [0] + ''' + fields [1]' "yyyy'/'M'/'d'''H':'mm"' System.Globalization.DateTimeFormatInfo.InvariantInfo); " is 143.
Long Statement,CubePower.Monitoring,Client,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\Client.cs,CsvUnityCase,The length of the statement  "			var time = DateTime.ParseExact (fields [0] + ''' + fields [1]' "yyyy'/'M'/'d'''H':'mm"' System.Globalization.DateTimeFormatInfo.InvariantInfo); " is 143.
Empty Catch Block,CubePower.Monitoring,Client,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\Client.cs,GetUsage,The method has an empty catch block.
Empty Catch Block,CubePower.Monitoring,Client,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\Client.cs,CsvUnityCase,The method has an empty catch block.
Magic Number,CubePower.Monitoring,ChubuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChubuClient.cs,GetUrl,The following statement contains a magic number: if (time >= new DateTime (2013' 1' 1))  	return "http://denki-yoho.chuden.jp/denki_yoho_content_data/juyo_current_term.csv";  
Magic Number,CubePower.Monitoring,ChubuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChubuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	response.Capacity = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(77行目以降)  		for (int line = 4; line <= 76; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,ChubuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChubuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	response.Capacity = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(77行目以降)  		for (int line = 4; line <= 76; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,ChubuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChubuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	response.Capacity = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(77行目以降)  		for (int line = 4; line <= 76; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,ChubuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChubuClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(77行目以降)  	for (int line = 4; line <= 76; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,ChubuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChubuClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(77行目以降)  	for (int line = 4; line <= 76; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,ChubuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChubuClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(77行目以降)  	for (int line = 4; line <= 76; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,ChubuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChubuClient.cs,GetResponse,The following statement contains a magic number: for (int line = 1; line <= 2; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,ChubuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChubuClient.cs,GetResponse,The following statement contains a magic number: for (int line = 4; line <= 76; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,ChubuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChubuClient.cs,GetResponse,The following statement contains a magic number: for (int line = 4; line <= 76; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,ChugokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChugokuClient.cs,GetUrl,The following statement contains a magic number: if (time >= new DateTime (2012' 4' 2))  	return String.Format (format' time.Year);  
Magic Number,CubePower.Monitoring,ChugokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChugokuClient.cs,GetUrl,The following statement contains a magic number: if (time >= new DateTime (2012' 4' 2))  	return String.Format (format' time.Year);  
Magic Number,CubePower.Monitoring,ChugokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChugokuClient.cs,GetUrl,The following statement contains a magic number: if (time >= new DateTime (2012' 4' 2))  	return String.Format (format' time.Year);  
Magic Number,CubePower.Monitoring,ChugokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChugokuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  		for (int line = 4; line <= 44; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,ChugokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChugokuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  		for (int line = 4; line <= 44; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,ChugokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChugokuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  		for (int line = 4; line <= 44; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,ChugokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChugokuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  		for (int line = 4; line <= 44; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,ChugokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChugokuClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  	for (int line = 4; line <= 44; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,ChugokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChugokuClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  	for (int line = 4; line <= 44; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,ChugokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChugokuClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  	for (int line = 4; line <= 44; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,ChugokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChugokuClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  	for (int line = 4; line <= 44; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,ChugokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChugokuClient.cs,GetResponse,The following statement contains a magic number: for (int line = 1; line <= 2; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,ChugokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChugokuClient.cs,GetResponse,The following statement contains a magic number: for (int line = 4; line <= 44; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,ChugokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChugokuClient.cs,GetResponse,The following statement contains a magic number: for (int line = 4; line <= 44; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,ChugokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ChugokuClient.cs,GetResponse,The following statement contains a magic number: for (int line = 1; line <= 3; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,Client,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\Client.cs,GetUsage,The following statement contains a magic number: for (var line = reader.ReadLine (); !string.IsNullOrEmpty (line); line = reader.ReadLine ()) {  	var fields = line.Split (''');  	// DATE'TIME'USAGE  	if (fields.Length < 3)  		continue;  	try {  		var time = DateTime.ParseExact (fields [0] + ''' + fields [1]' "yyyy'/'M'/'d'''H':'mm"' System.Globalization.DateTimeFormatInfo.InvariantInfo);  		if (time > target)  			break;  		var usage = (int)double.Parse (fields [2]);  		if (usage <= 0)  			continue;  		dest.Time = time;  		dest.Usage = usage;  		found = true;  	}  	catch (FormatException/* err */) {  		/* フォーマットの不一致は無視 */}  	catch (Exception err) {  		Trace.TraceError (err.ToString ());  		return false;  	}  }  
Magic Number,CubePower.Monitoring,Client,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\Client.cs,GetUsage,The following statement contains a magic number: for (var line = reader.ReadLine (); !string.IsNullOrEmpty (line); line = reader.ReadLine ()) {  	var fields = line.Split (''');  	// DATE'TIME'USAGE  	if (fields.Length < 3)  		continue;  	try {  		var time = DateTime.ParseExact (fields [0] + ''' + fields [1]' "yyyy'/'M'/'d'''H':'mm"' System.Globalization.DateTimeFormatInfo.InvariantInfo);  		if (time > target)  			break;  		var usage = (int)double.Parse (fields [2]);  		if (usage <= 0)  			continue;  		dest.Time = time;  		dest.Usage = usage;  		found = true;  	}  	catch (FormatException/* err */) {  		/* フォーマットの不一致は無視 */}  	catch (Exception err) {  		Trace.TraceError (err.ToString ());  		return false;  	}  }  
Magic Number,CubePower.Monitoring,Client,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\Client.cs,GetUsage,The following statement contains a magic number: if (fields.Length < 3)  	continue;  
Magic Number,CubePower.Monitoring,Client,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\Client.cs,GetUsage,The following statement contains a magic number: try {  	var time = DateTime.ParseExact (fields [0] + ''' + fields [1]' "yyyy'/'M'/'d'''H':'mm"' System.Globalization.DateTimeFormatInfo.InvariantInfo);  	if (time > target)  		break;  	var usage = (int)double.Parse (fields [2]);  	if (usage <= 0)  		continue;  	dest.Time = time;  	dest.Usage = usage;  	found = true;  }  catch (FormatException/* err */) {  	/* フォーマットの不一致は無視 */}  catch (Exception err) {  	Trace.TraceError (err.ToString ());  	return false;  }  
Magic Number,CubePower.Monitoring,Client,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\Client.cs,CsvUnityCase,The following statement contains a magic number: for (var line = reader.ReadLine (); !string.IsNullOrEmpty (line); line = reader.ReadLine ()) {  	var fields = line.Split (''');  	// DATE'TIME'USAGE  	if (fields.Length != 3)  		continue;  	try {  		var time = DateTime.ParseExact (fields [0] + ''' + fields [1]' "yyyy'/'M'/'d'''H':'mm"' System.Globalization.DateTimeFormatInfo.InvariantInfo);  		if (range_begin <= target && target < range_end) {  			int elect = (int)double.Parse (fields [2]);  			if (dest.Capacity < elect)  				dest.Capacity = elect;  			if (time <= target) {  				dest.Time = time;  				dest.Usage = elect;  				found = true;  			}  		}  	}  	catch (FormatException/* err */) {  		/* フォーマットの不一致は無視 */}  	catch (Exception err) {  		Trace.TraceError (err.ToString ());  		return false;  	}  }  
Magic Number,CubePower.Monitoring,Client,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\Client.cs,CsvUnityCase,The following statement contains a magic number: for (var line = reader.ReadLine (); !string.IsNullOrEmpty (line); line = reader.ReadLine ()) {  	var fields = line.Split (''');  	// DATE'TIME'USAGE  	if (fields.Length != 3)  		continue;  	try {  		var time = DateTime.ParseExact (fields [0] + ''' + fields [1]' "yyyy'/'M'/'d'''H':'mm"' System.Globalization.DateTimeFormatInfo.InvariantInfo);  		if (range_begin <= target && target < range_end) {  			int elect = (int)double.Parse (fields [2]);  			if (dest.Capacity < elect)  				dest.Capacity = elect;  			if (time <= target) {  				dest.Time = time;  				dest.Usage = elect;  				found = true;  			}  		}  	}  	catch (FormatException/* err */) {  		/* フォーマットの不一致は無視 */}  	catch (Exception err) {  		Trace.TraceError (err.ToString ());  		return false;  	}  }  
Magic Number,CubePower.Monitoring,Client,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\Client.cs,CsvUnityCase,The following statement contains a magic number: if (fields.Length != 3)  	continue;  
Magic Number,CubePower.Monitoring,Client,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\Client.cs,CsvUnityCase,The following statement contains a magic number: try {  	var time = DateTime.ParseExact (fields [0] + ''' + fields [1]' "yyyy'/'M'/'d'''H':'mm"' System.Globalization.DateTimeFormatInfo.InvariantInfo);  	if (range_begin <= target && target < range_end) {  		int elect = (int)double.Parse (fields [2]);  		if (dest.Capacity < elect)  			dest.Capacity = elect;  		if (time <= target) {  			dest.Time = time;  			dest.Usage = elect;  			found = true;  		}  	}  }  catch (FormatException/* err */) {  	/* フォーマットの不一致は無視 */}  catch (Exception err) {  	Trace.TraceError (err.ToString ());  	return false;  }  
Magic Number,CubePower.Monitoring,Client,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\Client.cs,CsvUnityCase,The following statement contains a magic number: if (range_begin <= target && target < range_end) {  	int elect = (int)double.Parse (fields [2]);  	if (dest.Capacity < elect)  		dest.Capacity = elect;  	if (time <= target) {  		dest.Time = time;  		dest.Usage = elect;  		found = true;  	}  }  
Magic Number,CubePower.Monitoring,HokkaidoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokkaidoClient.cs,GetUrl,The following statement contains a magic number: if (time >= new DateTime (2010' 1' 1))  	return String.Format (format' time.Year);  
Magic Number,CubePower.Monitoring,HokkaidoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokkaidoClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  		for (int line = 4; line <= 44; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,HokkaidoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokkaidoClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  		for (int line = 4; line <= 44; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,HokkaidoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokkaidoClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  		for (int line = 4; line <= 44; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,HokkaidoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokkaidoClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  		for (int line = 4; line <= 44; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,HokkaidoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokkaidoClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  	for (int line = 4; line <= 44; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,HokkaidoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokkaidoClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  	for (int line = 4; line <= 44; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,HokkaidoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokkaidoClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  	for (int line = 4; line <= 44; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,HokkaidoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokkaidoClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  	for (int line = 4; line <= 44; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,HokkaidoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokkaidoClient.cs,GetResponse,The following statement contains a magic number: for (int line = 1; line <= 2; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,HokkaidoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokkaidoClient.cs,GetResponse,The following statement contains a magic number: for (int line = 4; line <= 44; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,HokkaidoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokkaidoClient.cs,GetResponse,The following statement contains a magic number: for (int line = 4; line <= 44; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,HokkaidoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokkaidoClient.cs,GetResponse,The following statement contains a magic number: for (int line = 1; line <= 3; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,HokurikuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokurikuClient.cs,GetUrl,The following statement contains a magic number: if (time >= new DateTime (2012' 7' 30))  	return "http://www.setsuden-rikuden.jp/csv/juyo-rikuden-2012.csv";  
Magic Number,CubePower.Monitoring,HokurikuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokurikuClient.cs,GetUrl,The following statement contains a magic number: if (time >= new DateTime (2012' 7' 30))  	return "http://www.setsuden-rikuden.jp/csv/juyo-rikuden-2012.csv";  
Magic Number,CubePower.Monitoring,HokurikuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokurikuClient.cs,GetUrl,The following statement contains a magic number: if (time >= new DateTime (2012' 7' 30))  	return "http://www.setsuden-rikuden.jp/csv/juyo-rikuden-2012.csv";  
Magic Number,CubePower.Monitoring,HokurikuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokurikuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  		for (int line = 4; line <= 44; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,HokurikuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokurikuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  		for (int line = 4; line <= 44; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,HokurikuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokurikuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  		for (int line = 4; line <= 44; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,HokurikuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokurikuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  		for (int line = 4; line <= 44; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,HokurikuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokurikuClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  	for (int line = 4; line <= 44; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,HokurikuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokurikuClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  	for (int line = 4; line <= 44; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,HokurikuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokurikuClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  	for (int line = 4; line <= 44; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,HokurikuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokurikuClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  	for (int line = 4; line <= 44; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,HokurikuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokurikuClient.cs,GetResponse,The following statement contains a magic number: for (int line = 1; line <= 2; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,HokurikuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokurikuClient.cs,GetResponse,The following statement contains a magic number: for (int line = 4; line <= 44; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,HokurikuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokurikuClient.cs,GetResponse,The following statement contains a magic number: for (int line = 4; line <= 44; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,HokurikuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\HokurikuClient.cs,GetResponse,The following statement contains a magic number: for (int line = 1; line <= 3; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,KansaiClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\KansaiClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(50行目以降)  	for (int i = 4; i <= 49; i++)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,KansaiClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\KansaiClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(50行目以降)  	for (int i = 4; i <= 49; i++)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,KansaiClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\KansaiClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(50行目以降)  	for (int i = 4; i <= 49; i++)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,KansaiClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\KansaiClient.cs,GetResponse,The following statement contains a magic number: for (int line = 1; line <= 2; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,KansaiClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\KansaiClient.cs,GetResponse,The following statement contains a magic number: for (int i = 4; i <= 49; i++)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,KansaiClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\KansaiClient.cs,GetResponse,The following statement contains a magic number: for (int i = 4; i <= 49; i++)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,KyushuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\KyushuClient.cs,GetUrl,The following statement contains a magic number: if (time >= new DateTime (2012' 6' 29))  	return String.Format (format' time.ToString ("yyyyMMdd"));  
Magic Number,CubePower.Monitoring,KyushuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\KyushuClient.cs,GetUrl,The following statement contains a magic number: if (time >= new DateTime (2012' 6' 29))  	return String.Format (format' time.ToString ("yyyyMMdd"));  
Magic Number,CubePower.Monitoring,KyushuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\KyushuClient.cs,GetUrl,The following statement contains a magic number: if (time >= new DateTime (2012' 6' 29))  	return String.Format (format' time.ToString ("yyyyMMdd"));  
Magic Number,CubePower.Monitoring,KyushuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\KyushuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻  	var skipline = _today ? 8 : 44;  	for (int line = 4; line <= skipline; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,KyushuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\KyushuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻  	var skipline = _today ? 8 : 44;  	for (int line = 4; line <= skipline; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,KyushuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\KyushuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻  	var skipline = _today ? 8 : 44;  	for (int line = 4; line <= skipline; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,KyushuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\KyushuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻  	var skipline = _today ? 8 : 44;  	for (int line = 4; line <= skipline; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,KyushuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\KyushuClient.cs,GetResponse,The following statement contains a magic number: for (int line = 1; line <= 2; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,KyushuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\KyushuClient.cs,GetResponse,The following statement contains a magic number: for (int line = 4; line <= skipline; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,ShikokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ShikokuClient.cs,GetUrl,The following statement contains a magic number: if (time >= new DateTime (2012' 7' 2))  	return String.Format (format' time.Year);  
Magic Number,CubePower.Monitoring,ShikokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ShikokuClient.cs,GetUrl,The following statement contains a magic number: if (time >= new DateTime (2012' 7' 2))  	return String.Format (format' time.Year);  
Magic Number,CubePower.Monitoring,ShikokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ShikokuClient.cs,GetUrl,The following statement contains a magic number: if (time >= new DateTime (2012' 7' 2))  	return String.Format (format' time.Year);  
Magic Number,CubePower.Monitoring,ShikokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ShikokuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(41行目以降)  		for (int line = 4; line <= 40; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,ShikokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ShikokuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(41行目以降)  		for (int line = 4; line <= 40; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,ShikokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ShikokuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(41行目以降)  		for (int line = 4; line <= 40; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,ShikokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ShikokuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(41行目以降)  		for (int line = 4; line <= 40; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,ShikokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ShikokuClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(41行目以降)  	for (int line = 4; line <= 40; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,ShikokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ShikokuClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(41行目以降)  	for (int line = 4; line <= 40; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,ShikokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ShikokuClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(41行目以降)  	for (int line = 4; line <= 40; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,ShikokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ShikokuClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(41行目以降)  	for (int line = 4; line <= 40; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,ShikokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ShikokuClient.cs,GetResponse,The following statement contains a magic number: for (int line = 1; line <= 2; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,ShikokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ShikokuClient.cs,GetResponse,The following statement contains a magic number: for (int line = 4; line <= 40; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,ShikokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ShikokuClient.cs,GetResponse,The following statement contains a magic number: for (int line = 4; line <= 40; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,ShikokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\ShikokuClient.cs,GetResponse,The following statement contains a magic number: for (int line = 1; line <= 3; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,TohokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TohokuClient.cs,GetUrl,The following statement contains a magic number: if (time >= new DateTime (2008' 4' 1))  	return String.Format (format' time.Year);  
Magic Number,CubePower.Monitoring,TohokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TohokuClient.cs,GetUrl,The following statement contains a magic number: if (time >= new DateTime (2008' 4' 1))  	return String.Format (format' time.Year);  
Magic Number,CubePower.Monitoring,TohokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TohokuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  		for (int line = 4; line <= 44; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,TohokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TohokuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  		for (int line = 4; line <= 44; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,TohokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TohokuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  		for (int line = 4; line <= 44; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,TohokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TohokuClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  		for (int line = 4; line <= 44; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,TohokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TohokuClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  	for (int line = 4; line <= 44; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,TohokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TohokuClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  	for (int line = 4; line <= 44; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,TohokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TohokuClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  	for (int line = 4; line <= 44; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,TohokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TohokuClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  	for (int line = 4; line <= 44; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,TohokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TohokuClient.cs,GetResponse,The following statement contains a magic number: for (int line = 1; line <= 2; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,TohokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TohokuClient.cs,GetResponse,The following statement contains a magic number: for (int line = 4; line <= 44; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,TohokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TohokuClient.cs,GetResponse,The following statement contains a magic number: for (int line = 4; line <= 44; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,TohokuClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TohokuClient.cs,GetResponse,The following statement contains a magic number: for (int line = 1; line <= 3; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,TokyoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TokyoClient.cs,GetUrl,The following statement contains a magic number: if (time >= new DateTime (2008' 1' 1))  	return String.Format (format' time.Year);  
Magic Number,CubePower.Monitoring,TokyoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TokyoClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  		for (int line = 4; line <= 44; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,TokyoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TokyoClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  		for (int line = 4; line <= 44; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,TokyoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TokyoClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  		for (int line = 4; line <= 44; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,TokyoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TokyoClient.cs,GetResponse,The following statement contains a magic number: using (var sr = new StreamReader (stream)) {  	var response = new Response ();  	response.Area = this.Area;  	response.Unit = "万kW";  	response.Time = time;  	response.Usage = 0;  	if (_today) {  		// 該当日の電力最大供給量(3行目)  		for (int line = 1; line <= 2; ++line)  			sr.ReadLine ();  		if (!GetCapacity (sr' response))  			return null;  		// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  		for (int line = 4; line <= 44; ++line)  			sr.ReadLine ();  		return GetUsage (sr' response) ? response : null;  	}  	else {  		for (int line = 1; line <= 3; ++line)  			sr.ReadLine ();  		return CsvUnityCase (sr' response) ? response : null;  	}  }  
Magic Number,CubePower.Monitoring,TokyoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TokyoClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  	for (int line = 4; line <= 44; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,TokyoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TokyoClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  	for (int line = 4; line <= 44; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,TokyoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TokyoClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  	for (int line = 4; line <= 44; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,TokyoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TokyoClient.cs,GetResponse,The following statement contains a magic number: if (_today) {  	// 該当日の電力最大供給量(3行目)  	for (int line = 1; line <= 2; ++line)  		sr.ReadLine ();  	if (!GetCapacity (sr' response))  		return null;  	// 現在の電力消費量、取得した情報の取得時刻(45行目以降)  	for (int line = 4; line <= 44; ++line)  		sr.ReadLine ();  	return GetUsage (sr' response) ? response : null;  }  else {  	for (int line = 1; line <= 3; ++line)  		sr.ReadLine ();  	return CsvUnityCase (sr' response) ? response : null;  }  
Magic Number,CubePower.Monitoring,TokyoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TokyoClient.cs,GetResponse,The following statement contains a magic number: for (int line = 1; line <= 2; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,TokyoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TokyoClient.cs,GetResponse,The following statement contains a magic number: for (int line = 4; line <= 44; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,TokyoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TokyoClient.cs,GetResponse,The following statement contains a magic number: for (int line = 4; line <= 44; ++line)  	sr.ReadLine ();  
Magic Number,CubePower.Monitoring,TokyoClient,C:\repos\cube-soft_CubePowerLib\CubePower.Monitoring\TokyoClient.cs,GetResponse,The following statement contains a magic number: for (int line = 1; line <= 3; ++line)  	sr.ReadLine ();  
