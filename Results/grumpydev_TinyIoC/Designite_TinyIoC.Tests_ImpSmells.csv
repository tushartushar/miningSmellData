Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,TinyIoC.Tests.TypeExtensions,TypeExtensionsTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TypeExtensionsTests.cs,GetGenericMethod_TwiceWithDifferentGenericParamters_ReturnsCorrectMethods,The length of the parameter methodOneFirstGenericParameter is 30.
Long Identifier,TinyIoC.Tests.TypeExtensions,TypeExtensionsTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TypeExtensionsTests.cs,GetGenericMethod_TwiceWithDifferentGenericParamters_ReturnsCorrectMethods,The length of the parameter methodOneSecondGenericParameter is 31.
Long Identifier,TinyIoC.Tests.TypeExtensions,TypeExtensionsTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TypeExtensionsTests.cs,GetGenericMethod_TwiceWithDifferentGenericParamters_ReturnsCorrectMethods,The length of the parameter methodTwoFirstGenericParameter is 30.
Long Identifier,TinyIoC.Tests.TypeExtensions,TypeExtensionsTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TypeExtensionsTests.cs,GetGenericMethod_TwiceWithDifferentGenericParamters_ReturnsCorrectMethods,The length of the parameter methodTwoSecondGenericParameter is 31.
Long Statement,TinyIoC.Tests,TinyIoCFunctionalTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCFunctionalTests.cs,NestedInterfaceDependencies_MissingIService3Registration_ThrowsExceptionWithDefaultSettings,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCResolutionException>(() => container.Resolve<NestedInterfaceDependencies.RootClass>()); " is 123.
Long Statement,TinyIoC.Tests,TinyIoCFunctionalTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCFunctionalTests.cs,NestedClassDependencies_MissingService3Registration_ResolvesRootResolutionOn,The length of the statement  "            var result = container.Resolve<NestedClassDependencies.RootClass>(new ResolveOptions() { UnregisteredResolutionAction = UnregisteredResolutionActions.AttemptResolve }); " is 168.
Long Statement,TinyIoC.Tests,TinyIoCFunctionalTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCFunctionalTests.cs,NestedClassDependencies_MissingService3RegistrationAndUnRegisteredResolutionOff_ThrowsException,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCResolutionException>(() => container.Resolve<NestedClassDependencies.RootClass>(new ResolveOptions() { UnregisteredResolutionAction = UnregisteredResolutionActions.Fail })); " is 209.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,CanResolveType_RegisteredTypeWithRegisteredDependenciesAndParameters_ReturnsTrue,The length of the statement  "            var result = container.CanResolve<TestClassWithDependencyAndParameters>(new NamedParameterOverloads { { "param1"' 12 }' { "param2"' "Testing" } }); " is 147.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_RegisteredTypeWithRegisteredDependenciesAndParameters_Resolves,The length of the statement  "            var result = container.Resolve<TestClassWithDependencyAndParameters>(new NamedParameterOverloads { { "param1"' 12 }' { "param2"' "Testing" } }); " is 144.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_RegisteredTypeWithRegisteredDependenciesAndParameters_ResolvesWithCorrectConstructor,The length of the statement  "            var result = container.Resolve<TestClassWithDependencyAndParameters>(new NamedParameterOverloads { { "param1"' 12 }' { "param2"' "Testing" } }); " is 144.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,CanResolveType_RegisteredTypeWithRegisteredDependenciesAndIncorrectParameters_ReturnsFalse,The length of the statement  "            var result = container.CanResolve<TestClassWithDependencyAndParameters>(new NamedParameterOverloads { { "wrongparam1"' 12 }' { "wrongparam2"' "Testing" } }); " is 157.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_RegisteredTypeWithRegisteredDependenciesAndIncorrectParameters_ThrowsException,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCResolutionException>(() => container.Resolve<TestClassWithDependencyAndParameters>(new NamedParameterOverloads { { "wrongparam1"' 12 }' { "wrongparam2"' "Testing" } })); " is 205.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Register_NamedFactoryRegistration_CanRegister,The length of the statement  "            container.Register<TestClassDefaultCtor>((c' p) => TestClassDefaultCtor.CreateNew(c) as TestClassDefaultCtor' "TestName"); " is 122.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_NoNameButOnlyNamedRegistered_ResolvesWithAttemptResolve,The length of the statement  "            var output = container.Resolve<TestClassDefaultCtor>(new ResolveOptions() { UnregisteredResolutionAction = UnregisteredResolutionActions.AttemptResolve }); " is 155.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_NoNameButOnlyNamedRegistered_ThrowsExceptionWithNoAttemptResolve,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCResolutionException>(() => container.Resolve<TestClassDefaultCtor>(new ResolveOptions() { UnregisteredResolutionAction = UnregisteredResolutionActions.Fail })); " is 196.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_NamedButOnlyUnnamedRegistered_ThrowsExceptionWithNoFallback,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCResolutionException>(() => container.Resolve<TestClassDefaultCtor>("Testing"' new ResolveOptions() { NamedResolutionFailureAction = NamedResolutionFailureActions.Fail })); " is 207.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_NamedButOnlyUnnamedRegistered_ResolvesWithFallbackEnabled,The length of the statement  "            var output = container.Resolve<TestClassDefaultCtor>("Testing"' new ResolveOptions() { NamedResolutionFailureAction = NamedResolutionFailureActions.AttemptUnnamedResolution }); " is 176.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,CanResolve_UnRegisteredType_TrueWithAttemptResolve,The length of the statement  "            var result = container.CanResolve<TestClassDefaultCtor>(new ResolveOptions() { UnregisteredResolutionAction = UnregisteredResolutionActions.AttemptResolve }); " is 158.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,CanResolve_UnRegisteredType_FalseWithAttemptResolveOff,The length of the statement  "            var result = container.CanResolve<TestClassDefaultCtor>(new ResolveOptions() { UnregisteredResolutionAction = UnregisteredResolutionActions.Fail }); " is 148.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,CanResolve_NamedTypeAndUnnamedRegistered_ReturnsTrueWithFallback,The length of the statement  "            var result = container.CanResolve<TestClassDefaultCtor>("TestName"' new ResolveOptions() { NamedResolutionFailureAction = NamedResolutionFailureActions.AttemptUnnamedResolution }); " is 180.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,CanResolve_NamedTypeAndUnnamedRegistered_ReturnsFalseWithFallbackOff,The length of the statement  "            var result = container.CanResolve<TestClassDefaultCtor>("TestName"' new ResolveOptions() { NamedResolutionFailureAction = NamedResolutionFailureActions.Fail }); " is 160.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_RegisteredSingletonWithParameters_ThrowsCorrectException,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCResolutionException>(() => container.Resolve<ITestInterface>(new NamedParameterOverloads { { "stringProperty"' "Testing" }' { "intProperty"' 12 } })); " is 186.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Register_MultiInstanceWithStrongReference_Throws,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCRegistrationException>(() => container.Register<TestClassDefaultCtor>().WithStrongReference()); " is 131.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Register_MultiInstanceWithWeakReference_Throws,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCRegistrationException>(() => container.Register<TestClassDefaultCtor>().WithWeakReference()); " is 129.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Register_SingletonWithStrongReference_Throws,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCRegistrationException>(() => container.Register<ITestInterface' TestClassDefaultCtor>().WithStrongReference()); " is 147.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Register_SingletonWithWeakReference_Throws,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCRegistrationException>(() => container.Register<ITestInterface' TestClassDefaultCtor>().WithWeakReference()); " is 145.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Register_FactoryToSingletonFluent_ThrowsException,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCRegistrationException>(() => container.Register<TestClassDefaultCtor>((c' p) => new TestClassDefaultCtor()).AsSingleton()); " is 159.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Register_FactoryToMultiInstanceFluent_ThrowsException,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCRegistrationException>(() => container.Register<TestClassDefaultCtor>((c' p) => new TestClassDefaultCtor()).AsMultiInstance()); " is 163.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Register_InstanceToSingletonFluent_ThrowsException,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCRegistrationException>(() => container.Register<TestClassDefaultCtor>(new TestClassDefaultCtor()).AsSingleton()); " is 149.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_BoundGenericTypeWithoutRegistered_FailsWithUnRegisteredFallbackOff,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCResolutionException>(() => container.Resolve<GenericClassWithInterface<int' string>>(new ResolveOptions() { UnregisteredResolutionAction = UnregisteredResolutionActions.Fail })); " is 214.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_NormalUnregisteredType_FailsWithUnregisteredFallbackSetToGenericsOnly,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCResolutionException>(() => container.Resolve<TestClassDefaultCtor>(new ResolveOptions() { UnregisteredResolutionAction = UnregisteredResolutionActions.GenericsOnly })); " is 204.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_BoundGenericTypeWithoutRegistered_ResolvesWithUnRegisteredFallbackSetToGenericsOnly,The length of the statement  "            var testing = container.Resolve<GenericClassWithInterface<int' string>>(new ResolveOptions() { UnregisteredResolutionAction = UnregisteredResolutionActions.GenericsOnly }); " is 172.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,CanResolve_BoundGenericTypeWithoutRegistered_ReturnsFalseWithUnRegisteredFallbackOff,The length of the statement  "            var testing = container.CanResolve<GenericClassWithInterface<int' string>>(new ResolveOptions() { UnregisteredResolutionAction = UnregisteredResolutionActions.Fail }); " is 167.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,CanResolve_BoundGenericTypeWithoutRegistered_ReturnsTrueWithUnRegisteredFallbackSetToGenericsOnly,The length of the statement  "            var testing = container.CanResolve<GenericClassWithInterface<int' string>>(new ResolveOptions() { UnregisteredResolutionAction = UnregisteredResolutionActions.GenericsOnly }); " is 175.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_UnRegisteredNonGenericType_FailsWithOptionsSetToGenericOnly,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCResolutionException>(() => container.Resolve<TestClassDefaultCtor>(new ResolveOptions() { UnregisteredResolutionAction = UnregisteredResolutionActions.GenericsOnly })); " is 204.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,CanResolve_UnRegisteredNonGenericType_ReturnsFalseWithOptionsSetToGenericOnly,The length of the statement  "            var result = container.CanResolve<TestClassDefaultCtor>(new ResolveOptions() { UnregisteredResolutionAction = UnregisteredResolutionActions.GenericsOnly }); " is 156.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_BoundGenericTypeWithParametersWithoutRegistered_ResolvesUsingCorrectCtor,The length of the statement  "            var testing = container.Resolve<GenericClassWithInterface<int' string>>(new NamedParameterOverloads() { { "prop1"' 27 }' { "prop2"' "Testing" } }); " is 147.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_BoundGenericTypeWithFailedDependenciesWithoutRegistered_ThrowsException,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCResolutionException>(() => container.Resolve<GenericClassWithParametersAndDependencies<int' string>>()); " is 140.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_BoundGenericTypeWithDependenciesAndParametersWithoutRegistered_ResolvesUsingCorrectCtor,The length of the statement  "            var testing = container.Resolve<GenericClassWithParametersAndDependencies<int' string>>(new NamedParameterOverloads() { { "prop1"' 27 }' { "prop2"' "Testing" } }); " is 163.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_NamedRegistrationButOnlyUnnamedRegistered_ResolvesCorrectUnnamedRegistrationWithUnnamedFallback,The length of the statement  "            var result = container.Resolve<TestClassDefaultCtor>("Testing"' new ResolveOptions() { NamedResolutionFailureAction = NamedResolutionFailureActions.AttemptUnnamedResolution }); " is 176.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,AutoRegister_TinyIoCAssembly_CannotResolveInternalTinyIoCClass,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCResolutionException>(() => container.Resolve<TinyIoCContainer.TypeRegistration>(new NamedParameterOverloads() { { "type"' this.GetType() } }' new ResolveOptions() { UnregisteredResolutionAction = UnregisteredResolutionActions.Fail })); " is 271.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,AutoRegister_SpecifiedDuplicateActionRegisterMultiple_RegistersMultipleImplementations,The length of the statement  "            container.AutoRegister(new[] { typeof(TestClassDefaultCtor).Assembly }' DuplicateImplementationActions.RegisterMultiple); " is 121.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Register_ConstructorSpecifiedForDelegateFactory_ThrowsException,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCConstructorResolutionException>(() => container.Register<TestClassDefaultCtor>((c' p) => new TestClassDefaultCtor()).UsingConstructor(() => new TestClassDefaultCtor())); " is 205.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Register_ConstructorSpecifiedForWeakDelegateFactory_ThrowsException,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCConstructorResolutionException>(() => container.Register<TestClassDefaultCtor>((c' p) => new TestClassDefaultCtor()).WithWeakReference().UsingConstructor(() => new TestClassDefaultCtor())); " is 225.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Register_ConstructorSpecifiedForInstanceFactory_ThrowsException,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCConstructorResolutionException>(() => container.Register<TestClassDefaultCtor>(new TestClassDefaultCtor()).UsingConstructor(() => new TestClassDefaultCtor())); " is 195.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Register_ConstructorSpecifiedForWeakInstanceFactory_ThrowsException,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCConstructorResolutionException>(() => container.Register<TestClassDefaultCtor>(new TestClassDefaultCtor()).WithWeakReference().UsingConstructor(() => new TestClassDefaultCtor())); " is 215.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_SingletonFactoryConstructorSpecified_UsesCorrectCtor,The length of the statement  "            container.Register<TestClassMultiDepsMultiCtors>().AsSingleton().UsingConstructor(() => new TestClassMultiDepsMultiCtors(null as TestClassDefaultCtor)); " is 152.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_MultiInstanceFactoryConstructorSpecified_UsesCorrectCtor,The length of the statement  "            container.Register<TestClassMultiDepsMultiCtors>().UsingConstructor(() => new TestClassMultiDepsMultiCtors(null as TestClassDefaultCtor)); " is 138.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_ConstructorSpecifiedThatRequiresParametersButNonePassed_FailsToResolve,The length of the statement  "            container.Register<TestClassWithInterfaceDependency>().UsingConstructor(() => new TestClassWithInterfaceDependency(null as ITestInterface' 27' "Testing")); " is 155.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,CanResolve_ConstructorSpecifiedThatRequiresParametersButNonePassed_ReturnsFalse,The length of the statement  "            container.Register<TestClassWithInterfaceDependency>().UsingConstructor(() => new TestClassWithInterfaceDependency(null as ITestInterface' 27' "Testing")); " is 155.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,CanResolve_SingletonFactoryConstructorSpecified_ReturnsTrue,The length of the statement  "            container.Register<TestClassMultiDepsMultiCtors>().AsSingleton().UsingConstructor(() => new TestClassMultiDepsMultiCtors(null as TestClassDefaultCtor)); " is 152.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,CanResolve_MultiInstanceFactoryConstructorSpecified_ReturnsTrue,The length of the statement  "            container.Register<TestClassMultiDepsMultiCtors>().UsingConstructor(() => new TestClassMultiDepsMultiCtors(null as TestClassDefaultCtor)); " is 138.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_DelegateFactoryResolvedWithUnnamedFallbackThrowsException_ThrowsTinyIoCException,The length of the statement  "            AssertHelper.ThrowsException<TinyIoCResolutionException>(() => container.Resolve<TestClassConstructorFailure>("Testing"' new ResolveOptions() { NamedResolutionFailureAction = NamedResolutionFailureActions.AttemptUnnamedResolution })); " is 234.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,AutoRegister_IEnumerableAssemblies_DoesNotThrow,The length of the statement  "            List<Assembly> assemblies = new List<Assembly>() { this.GetType().Assembly' typeof(ExternalTypes.IExternalTestInterface).Assembly }; " is 132.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,AutoRegister_IEnumerableAssemblies_TypesFromBothAssembliesResolve,The length of the statement  "            List<Assembly> assemblies = new List<Assembly>() { this.GetType().Assembly' typeof(ExternalTypes.IExternalTestInterface).Assembly }; " is 132.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,ChildContainerResolve_NamedOnlyRegisteredWithParentUnnamedFallbackOn_ResolvesFromChild,The length of the statement  "            var result = child.Resolve<ITestInterface>(new ResolveOptions() { NamedResolutionFailureAction = NamedResolutionFailureActions.AttemptUnnamedResolution }); " is 155.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,ChildContainerResolve_NamedOnlyRegisteredWithParentChildNoRegistrationUnnamedFallbackOn_ResolvesFromParent,The length of the statement  "            var result = child.Resolve<ITestInterface>("Testing"' new ResolveOptions() { NamedResolutionFailureAction = NamedResolutionFailureActions.AttemptUnnamedResolution }); " is 166.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_ValidResolveWithParameters_ReturnsTrue,The length of the statement  "            var result = container.TryResolve<TestClassWithParameters>(new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' out output); " is 157.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_ValidResolveWithParameters_ReturnsType,The length of the statement  "            var result = container.TryResolve<TestClassWithParameters>(new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' out output); " is 157.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_InvalidResolveWithParameters_ReturnsFalse,The length of the statement  "            var result = container.TryResolve<TestClassWithParameters>(new NamedParameterOverloads() { { "intProperty"' 2 } }' out output); " is 127.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_ValidResolveWithNameAndParameters_ReturnsTrue,The length of the statement  "            var result = container.TryResolve<TestClassWithParameters>("Testing"' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' out output); " is 168.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_ValidResolveWithNameAndParameters_ReturnsType,The length of the statement  "            var result = container.TryResolve<TestClassWithParameters>("Testing"' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' out output); " is 168.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_InvalidResolveWithNameAndParameters_ReturnsFalse,The length of the statement  "            var result = container.TryResolve<TestClassWithParameters>("Testing"' new NamedParameterOverloads() { { "intProperty"' 2 } }' out output); " is 138.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_ValidResolveWithParametersAndOptions_ReturnsTrue,The length of the statement  "            var result = container.TryResolve<TestClassWithParameters>(new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' new ResolveOptions()' out output); " is 179.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_ValidResolveWithParametersAndOptions_ReturnsType,The length of the statement  "            var result = container.TryResolve<TestClassWithParameters>(new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' new ResolveOptions()' out output); " is 179.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_InvalidResolveWithParametersAndOptions_ReturnsFalse,The length of the statement  "            var result = container.TryResolve<TestClassWithParameters>(new NamedParameterOverloads() { { "intProperty"' 2 } }' new ResolveOptions()' out output); " is 149.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_ValidResolveWithNameParametersAndOptions_ReturnsTrue,The length of the statement  "            var result = container.TryResolve<TestClassWithParameters>("Testing"' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' new ResolveOptions()' out output); " is 190.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_ValidResolveWithNameParametersAndOptions_ReturnsType,The length of the statement  "            var result = container.TryResolve<TestClassWithParameters>("Testing"' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' new ResolveOptions()' out output); " is 190.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_InvalidResolveWithNameParametersAndOptions_ReturnsFalse,The length of the statement  "            var result = container.TryResolve<TestClassWithParameters>("Testing"' new NamedParameterOverloads() { { "intProperty"' 2 } }' new ResolveOptions()' out output); " is 160.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_ValidResolveWithParameters_ReturnsTrue,The length of the statement  "            var result = container.TryResolve(typeof(TestClassWithParameters)' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' out output); " is 165.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_ValidResolveWithParameters_ReturnsType,The length of the statement  "            var result = container.TryResolve(typeof(TestClassWithParameters)' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' out output); " is 165.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_InvalidResolveWithParameters_ReturnsFalse,The length of the statement  "            var result = container.TryResolve(typeof(TestClassWithParameters)' new NamedParameterOverloads() { { "intProperty"' 2 } }' out output); " is 135.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_ValidResolveWithNameAndParameters_ReturnsTrue,The length of the statement  "            var result = container.TryResolve(typeof(TestClassWithParameters)' "Testing"' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' out output); " is 176.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_ValidResolveWithNameAndParameters_ReturnsType,The length of the statement  "            var result = container.TryResolve(typeof(TestClassWithParameters)' "Testing"' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' out output); " is 176.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_InvalidResolveWithNameAndParameters_ReturnsFalse,The length of the statement  "            var result = container.TryResolve(typeof(TestClassWithParameters)' "Testing"' new NamedParameterOverloads() { { "intProperty"' 2 } }' out output); " is 146.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_ValidResolveWithParametersAndOptions_ReturnsTrue,The length of the statement  "            var result = container.TryResolve(typeof(TestClassWithParameters)' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' new ResolveOptions()' out output); " is 187.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_ValidResolveWithParametersAndOptions_ReturnsType,The length of the statement  "            var result = container.TryResolve(typeof(TestClassWithParameters)' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' new ResolveOptions()' out output); " is 187.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_InvalidResolveWithParametersAndOptions_ReturnsFalse,The length of the statement  "            var result = container.TryResolve(typeof(TestClassWithParameters)' new NamedParameterOverloads() { { "intProperty"' 2 } }' new ResolveOptions()' out output); " is 157.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_ValidResolveWithNameParametersAndOptions_ReturnsTrue,The length of the statement  "            var result = container.TryResolve(typeof(TestClassWithParameters)' "Testing"' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' new ResolveOptions()' out output); " is 198.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_ValidResolveWithNameParametersAndOptions_ReturnsType,The length of the statement  "            var result = container.TryResolve(typeof(TestClassWithParameters)' "Testing"' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' new ResolveOptions()' out output); " is 198.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_InvalidResolveWithNameParametersAndOptions_ReturnsFalse,The length of the statement  "            var result = container.TryResolve(typeof(TestClassWithParameters)' "Testing"' new NamedParameterOverloads() { { "intProperty"' 2 } }' new ResolveOptions()' out output); " is 168.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,RegisterMultiple_TypesThatImplementTheRegisterType_DoesNotThrow,The length of the statement  "            container.RegisterMultiple<ITestInterface>(new Type[] { typeof(TestClassDefaultCtor)' typeof(DisposableTestClassWithInterface) }); " is 130.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,RegisterMultiple_ValidTypes_ReturnsMultipleRegisterOptions,The length of the statement  "            var result = container.RegisterMultiple<ITestInterface>(new Type[] { typeof(TestClassDefaultCtor)' typeof(DisposableTestClassWithInterface) }); " is 143.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,RegisterMultiple_ValidTypes_CorrectCountReturnedByResolveAll,The length of the statement  "            container.RegisterMultiple<ITestInterface>(new Type[] { typeof(TestClassDefaultCtor)' typeof(DisposableTestClassWithInterface) }); " is 130.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,RegisterMultiple_ValidTypes_InstancesOfCorrectTypesReturnedByResolveAll,The length of the statement  "            container.RegisterMultiple<ITestInterface>(new Type[] { typeof(TestClassDefaultCtor)' typeof(DisposableTestClassWithInterface) }); " is 130.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,RegisterMultiple_ValidTypesRegisteredAsSingleton_AlwaysReturnsSameInstance,The length of the statement  "            container.RegisterMultiple<ITestInterface>(new Type[] { typeof(TestClassDefaultCtor)' typeof(DisposableTestClassWithInterface) }).AsSingleton(); " is 144.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,RegisterMultiple_ValidTypesRegisteredAsSingleton_AlwaysReturnsSameInstance,The length of the statement  "            var result1Class2Instance = result1.Where(o => o.GetType() == typeof(DisposableTestClassWithInterface)).FirstOrDefault(); " is 121.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,RegisterMultiple_ValidTypesRegisteredAsSingleton_AlwaysReturnsSameInstance,The length of the statement  "            var result2Class2Instance = result2.Where(o => o.GetType() == typeof(DisposableTestClassWithInterface)).FirstOrDefault(); " is 121.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,RegisterMultiple_ValidTypesRegisteredAsMultiInstance_AlwaysReturnsNewInstance,The length of the statement  "            container.RegisterMultiple<ITestInterface>(new Type[] { typeof(TestClassDefaultCtor)' typeof(DisposableTestClassWithInterface) }).AsMultiInstance(); " is 148.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,RegisterMultiple_ValidTypesRegisteredAsMultiInstance_AlwaysReturnsNewInstance,The length of the statement  "            var result1Class2Instance = result1.Where(o => o.GetType() == typeof(DisposableTestClassWithInterface)).FirstOrDefault(); " is 121.
Long Statement,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,RegisterMultiple_ValidTypesRegisteredAsMultiInstance_AlwaysReturnsNewInstance,The length of the statement  "            var result2Class2Instance = result2.Where(o => o.GetType() == typeof(DisposableTestClassWithInterface)).FirstOrDefault(); " is 121.
Long Statement,TinyIoC.Tests,TinyMessageSubscriptionTokenTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessageSubscriptionTokenTests.cs,Dispose_WithValidHubReference_UnregistersWithHub,The length of the statement  "            messengerMock.Setup((messenger) => messenger.Unsubscribe<TestMessage>(Moq.It.IsAny<TinyMessageSubscriptionToken>())).Verifiable(); " is 130.
Long Statement,TinyIoC.Tests,TinyMessageSubscriptionTokenTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessageSubscriptionTokenTests.cs,Ctor_NullHub_ThrowsArgumentNullException,The length of the statement  "            AssertHelper.ThrowsException<ArgumentNullException>(() => new TinyMessageSubscriptionToken(null' typeof(ITinyMessage))); " is 120.
Long Statement,TinyIoC.Tests,TinyMessageSubscriptionTokenTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessageSubscriptionTokenTests.cs,Ctor_InvalidMessageType_ThrowsArgumentOutOfRangeException,The length of the statement  "            AssertHelper.ThrowsException<ArgumentOutOfRangeException>(() => new TinyMessageSubscriptionToken(messenger' typeof(object))); " is 125.
Long Statement,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,Subscribe_ValidDeliveryActionAndFilter_DoesNotThrow,The length of the statement  "            messenger.Subscribe<TestMessage>(new Action<TestMessage>(UtilityMethods.FakeDeliveryAction<TestMessage>)' new Func<TestMessage' bool>(UtilityMethods.FakeMessageFilter<TestMessage>)); " is 182.
Long Statement,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,Subscribe_NullDeliveryAction_Throws,The length of the statement  "            AssertHelper.ThrowsException<ArgumentNullException>(() => messenger.Subscribe<TestMessage>(null' new Func<TestMessage' bool>(UtilityMethods.FakeMessageFilter<TestMessage>))); " is 174.
Long Statement,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,Subscribe_NullFilter_Throws,The length of the statement  "            AssertHelper.ThrowsException<ArgumentNullException>(() => messenger.Subscribe<TestMessage>(new Action<TestMessage>(UtilityMethods.FakeDeliveryAction<TestMessage>)' null' new TestProxy())); " is 188.
Long Statement,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,Subscribe_NullProxy_Throws,The length of the statement  "            AssertHelper.ThrowsException<ArgumentNullException>(() => messenger.Subscribe<TestMessage>(new Action<TestMessage>(UtilityMethods.FakeDeliveryAction<TestMessage>)' new Func<TestMessage' bool>(UtilityMethods.FakeMessageFilter<TestMessage>)' null)); " is 247.
Long Statement,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,Unsubscribe_PreviousSubscription_DoesNotThrow,The length of the statement  "            var subscription = messenger.Subscribe<TestMessage>(new Action<TestMessage>(UtilityMethods.FakeDeliveryAction<TestMessage>)' new Func<TestMessage' bool>(UtilityMethods.FakeMessageFilter<TestMessage>)); " is 201.
Long Statement,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,Subscribe_PreviousSubscription_ReturnsDifferentSubscriptionObject,The length of the statement  "            var sub1 = messenger.Subscribe<TestMessage>(new Action<TestMessage>(UtilityMethods.FakeDeliveryAction<TestMessage>)' new Func<TestMessage' bool>(UtilityMethods.FakeMessageFilter<TestMessage>)); " is 193.
Long Statement,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,Subscribe_PreviousSubscription_ReturnsDifferentSubscriptionObject,The length of the statement  "            var sub2 = messenger.Subscribe<TestMessage>(new Action<TestMessage>(UtilityMethods.FakeDeliveryAction<TestMessage>)' new Func<TestMessage' bool>(UtilityMethods.FakeMessageFilter<TestMessage>)); " is 193.
Long Statement,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,Subscribe_CustomProxyWithFilter_DoesNotThrow,The length of the statement  "            messenger.Subscribe<TestMessage>(new Action<TestMessage>(UtilityMethods.FakeDeliveryAction<TestMessage>)' new Func<TestMessage' bool>(UtilityMethods.FakeMessageFilter<TestMessage>)' proxy); " is 189.
Long Statement,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,Subscribe_CustomProxyFilterStrongReference_DoesNotThrow,The length of the statement  "            messenger.Subscribe<TestMessage>(new Action<TestMessage>(UtilityMethods.FakeDeliveryAction<TestMessage>)' new Func<TestMessage' bool>(UtilityMethods.FakeMessageFilter<TestMessage>)' true' proxy); " is 195.
Long Statement,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,Publish_CustomProxyWithFilter_UsesCorrectProxy,The length of the statement  "            messenger.Subscribe<TestMessage>(new Action<TestMessage>(UtilityMethods.FakeDeliveryAction<TestMessage>)' new Func<TestMessage' bool>(UtilityMethods.FakeMessageFilter<TestMessage>)' proxy); " is 189.
Long Statement,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,Publish_CustomProxyFilterStrongReference_UsesCorrectProxy,The length of the statement  "            messenger.Subscribe<TestMessage>(new Action<TestMessage>(UtilityMethods.FakeDeliveryAction<TestMessage>)' new Func<TestMessage' bool>(UtilityMethods.FakeMessageFilter<TestMessage>)' true' proxy); " is 195.
Long Statement,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,Publish_Subscriber_DoesNotThrow,The length of the statement  "            messenger.Subscribe<TestMessage>(new Action<TestMessage>(UtilityMethods.FakeDeliveryAction<TestMessage>)' new Func<TestMessage' bool>(UtilityMethods.FakeMessageFilter<TestMessage>)); " is 182.
Long Statement,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,CancellableGenericTinyMessage_Publish_DoesNotThrow,The length of the statement  "            messenger.Publish<CancellableGenericTinyMessage<string>>(new CancellableGenericTinyMessage<string>(this' "Testing"' () => { bool test = true; })); " is 146.
Long Statement,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,CancellableGenericTinyMessage_PublishWithNullAction_Throws,The length of the statement  "            AssertHelper.ThrowsException<ArgumentNullException>(() => messenger.Publish<CancellableGenericTinyMessage<string>>(new CancellableGenericTinyMessage<string>(this' "Testing"' null))); " is 182.
Long Statement,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,CancellableGenericTinyMessage_SubscriberCancels_CancelActioned,The length of the statement  "            messenger.Publish<CancellableGenericTinyMessage<string>>(new CancellableGenericTinyMessage<string>(this' "Testing"' () => { cancelled = true; })); " is 146.
Long Statement,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,CancellableGenericTinyMessage_SeveralSubscribersOneCancels_CancelActioned,The length of the statement  "            messenger.Publish<CancellableGenericTinyMessage<string>>(new CancellableGenericTinyMessage<string>(this' "Testing"' () => { cancelled = true; })); " is 146.
Long Statement,TinyIoC.Tests.PlatformTestSuite,PlatformTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\PlatformTestSuite\PlatformTests.cs,RegisterMultiple,The length of the statement  "            container.RegisterMultiple<ITestInterface>(new Type[] { typeof(TestClassWithInterface)' typeof(TestClassWithInterface2) }); " is 123.
Empty Catch Block,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,RegisterMultiple_Null_Throws,The method has an empty catch block.
Empty Catch Block,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,RegisterMultiple_ATypeThatDoesntImplementTheRegisterType_Throws,The method has an empty catch block.
Empty Catch Block,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,RegisterMultiple_ValidTypesButSameTypeMoreThanOnce_Throws,The method has an empty catch block.
Empty Catch Block,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,ToCustomLifetimeProvider_NullInstance_Throws,The method has an empty catch block.
Empty Catch Block,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,ToCustomLifetimeProvider_NullProvider_Throws,The method has an empty catch block.
Empty Catch Block,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,ToCustomLifetimeProvider_NullErrorString_Throws,The method has an empty catch block.
Empty Catch Block,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,ToCustomLifetimeProvider_EmptyErrorString_Throws,The method has an empty catch block.
Empty Catch Block,TinyIoC.Tests.PlatformTestSuite,PlatformTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\PlatformTestSuite\PlatformTests.cs,AutoRegisterPredicateExclusion,The method has an empty catch block.
Empty Catch Block,TinyIoC.Tests.TypeExtensions,TypeExtensionsTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TypeExtensionsTests.cs,GetGenericMethod_RegisterTwoUnacceptableGenericParameterNoParameters_Throws,The method has an empty catch block.
Magic Number,TinyIoC.Tests,TinyIoCFunctionalTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCFunctionalTests.cs,Dependency_Hierarchy_Resolves_IEnumerable_Correctly,The following statement contains a magic number: Assert.AreEqual(viewCollection.Views.Count()' 2);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,CanResolveType_RegisteredTypeWithRegisteredDependenciesAndParameters_ReturnsTrue,The following statement contains a magic number: var result = container.CanResolve<TestClassWithDependencyAndParameters>(new NamedParameterOverloads { { "param1"' 12 }' { "param2"' "Testing" } });
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_RegisteredTypeWithRegisteredDependenciesAndParameters_Resolves,The following statement contains a magic number: var result = container.Resolve<TestClassWithDependencyAndParameters>(new NamedParameterOverloads { { "param1"' 12 }' { "param2"' "Testing" } });
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_RegisteredTypeWithRegisteredDependenciesAndParameters_ResolvesWithCorrectConstructor,The following statement contains a magic number: var result = container.Resolve<TestClassWithDependencyAndParameters>(new NamedParameterOverloads { { "param1"' 12 }' { "param2"' "Testing" } });
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_RegisteredTypeWithRegisteredDependenciesAndParameters_ResolvesWithCorrectConstructor,The following statement contains a magic number: Assert.AreEqual(result.Param1' 12);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,CanResolveType_RegisteredTypeWithRegisteredDependenciesAndIncorrectParameters_ReturnsFalse,The following statement contains a magic number: var result = container.CanResolve<TestClassWithDependencyAndParameters>(new NamedParameterOverloads { { "wrongparam1"' 12 }' { "wrongparam2"' "Testing" } });
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_RegisteredTypeWithRegisteredDependenciesAndIncorrectParameters_ThrowsException,The following statement contains a magic number: AssertHelper.ThrowsException<TinyIoCResolutionException>(() => container.Resolve<TestClassWithDependencyAndParameters>(new NamedParameterOverloads { { "wrongparam1"' 12 }' { "wrongparam2"' "Testing" } }));
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_CorrectlyRegisteredSpecifyingMistypedParameters_ThrowsCorrectException,The following statement contains a magic number: AssertHelper.ThrowsException<TinyIoCResolutionException>(() => container.Resolve<TestClassWithParameters>(                      new NamedParameterOverloads { { "StringProperty"' "Testing" }' { "IntProperty"' 12 } }                  ));
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_CorrectlyRegisteredSpecifyingParameters_Resolves,The following statement contains a magic number: var output = container.Resolve<TestClassWithParameters>(                      new NamedParameterOverloads { { "stringProperty"' "Testing" }' { "intProperty"' 12 } }                  );
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_CorrectlyRegisteredSpecifyingParametersAndOptions_Resolves,The following statement contains a magic number: var output = container.Resolve<TestClassWithParameters>(                      new NamedParameterOverloads { { "stringProperty"' "Testing" }' { "intProperty"' 12 } }'                      ResolveOptions.Default                  );
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,CanResolve_UnRegisteredTypeEithParameters_TrueWithAttemptResolve,The following statement contains a magic number: var result = container.CanResolve<TestClassWithParameters>(                      new NamedParameterOverloads { { "stringProperty"' "Testing" }' { "intProperty"' 12 } }'                      new ResolveOptions() { UnregisteredResolutionAction = UnregisteredResolutionActions.AttemptResolve }                  );
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,CanResolve_UnRegisteredTypeWithParameters_FalseWithAttemptResolveOff,The following statement contains a magic number: var result = container.CanResolve<TestClassWithParameters>(                      new NamedParameterOverloads { { "stringProperty"' "Testing" }' { "intProperty"' 12 } }'                      new ResolveOptions() { UnregisteredResolutionAction = UnregisteredResolutionActions.Fail }                  );
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,CanResolve_NamedTypeWithParametersAndNamedRegistered_ReturnsTrue,The following statement contains a magic number: var result = container.CanResolve<TestClassWithParameters>("TestName"'                      new NamedParameterOverloads { { "stringProperty"' "Testing" }' { "intProperty"' 12 } }                  );
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,CanResolve_NamedTypeWithParametersAndUnnamedRegistered_ReturnsTrueWithFallback,The following statement contains a magic number: var result = container.CanResolve<TestClassWithParameters>("TestName"'                      new NamedParameterOverloads { { "stringProperty"' "Testing" }' { "intProperty"' 12 } }'                      new ResolveOptions() { NamedResolutionFailureAction = NamedResolutionFailureActions.AttemptUnnamedResolution }                  );
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,CanResolve_NamedTypeWithParametersAndUnnamedRegistered_ReturnsFalseWithFallbackOff,The following statement contains a magic number: var result = container.CanResolve<TestClassWithParameters>("TestName"'                      new NamedParameterOverloads { { "stringProperty"' "Testing" }' { "intProperty"' 12 } }'                      new ResolveOptions() { NamedResolutionFailureAction = NamedResolutionFailureActions.Fail }                  );
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_RegisteredTypeWithNameParametersAndOptions_Resolves,The following statement contains a magic number: var result = container.Resolve<TestClassWithParameters>("TestName"'                      new NamedParameterOverloads { { "stringProperty"' "Testing" }' { "intProperty"' 12 } }'                      new ResolveOptions() { NamedResolutionFailureAction = NamedResolutionFailureActions.Fail }                  );
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_RegisteredTypeWithNameAndParameters_Resolves,The following statement contains a magic number: var result = container.Resolve<TestClassWithParameters>("TestName"'                      new NamedParameterOverloads { { "stringProperty"' "Testing" }' { "intProperty"' 12 } }                  );
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_RegisteredSingletonWithParameters_ThrowsCorrectException,The following statement contains a magic number: AssertHelper.ThrowsException<TinyIoCResolutionException>(() => container.Resolve<ITestInterface>(new NamedParameterOverloads { { "stringProperty"' "Testing" }' { "intProperty"' 12 } }));
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_OutOfScopeStrongReferencedInstance_ResolvesCorrectly,The following statement contains a magic number: GC.WaitForFullGCComplete(4000);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_OutOfScopeWeakReferencedInstance_ThrowsCorrectException,The following statement contains a magic number: GC.WaitForFullGCComplete(4000);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_OutOfScopeStrongReferencedFactory_ResolvesCorrectly,The following statement contains a magic number: GC.WaitForFullGCComplete(4000);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_OutOfScopeWeakReferencedFactory_ThrowsCorrectException,The following statement contains a magic number: GC.WaitForFullGCComplete(4000);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_BoundGenericTypeWithParametersWithoutRegistered_ResolvesUsingCorrectCtor,The following statement contains a magic number: var testing = container.Resolve<GenericClassWithInterface<int' string>>(new NamedParameterOverloads() { { "prop1"' 27 }' { "prop2"' "Testing" } });
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_BoundGenericTypeWithParametersWithoutRegistered_ResolvesUsingCorrectCtor,The following statement contains a magic number: Assert.AreEqual(27' testing.Prop1);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_BoundGenericTypeWithDependenciesAndParametersWithoutRegistered_ResolvesUsingCorrectCtor,The following statement contains a magic number: var testing = container.Resolve<GenericClassWithParametersAndDependencies<int' string>>(new NamedParameterOverloads() { { "prop1"' 27 }' { "prop2"' "Testing" } });
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_BoundGenericTypeWithDependenciesAndParametersWithoutRegistered_ResolvesUsingCorrectCtor,The following statement contains a magic number: Assert.AreEqual(27' testing.Prop1);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_SingletonFactoryNoConstructorSpecified_UsesCorrectCtor,The following statement contains a magic number: Assert.AreEqual(2' result.NumberOfDepsResolved);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_MultiInstanceFactoryNoConstructorSpecified_UsesCorrectCtor,The following statement contains a magic number: Assert.AreEqual(2' result.NumberOfDepsResolved);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_ConstructorSpecifiedThatRequiresParametersButNonePassed_FailsToResolve,The following statement contains a magic number: container.Register<TestClassWithInterfaceDependency>().UsingConstructor(() => new TestClassWithInterfaceDependency(null as ITestInterface' 27' "Testing"));
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,CanResolve_ConstructorSpecifiedThatRequiresParametersButNonePassed_ReturnsFalse,The following statement contains a magic number: container.Register<TestClassWithInterfaceDependency>().UsingConstructor(() => new TestClassWithInterfaceDependency(null as ITestInterface' 27' "Testing"));
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,NameAndParamsLazyFactoryInvoke_Params_ResolvesWithParameters,The following statement contains a magic number: Assert.AreEqual(result.Prop1.IntProperty' 22);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_ValidResolveWithParameters_ReturnsTrue,The following statement contains a magic number: var result = container.TryResolve<TestClassWithParameters>(new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_ValidResolveWithParameters_ReturnsType,The following statement contains a magic number: var result = container.TryResolve<TestClassWithParameters>(new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_InvalidResolveWithParameters_ReturnsFalse,The following statement contains a magic number: var result = container.TryResolve<TestClassWithParameters>(new NamedParameterOverloads() { { "intProperty"' 2 } }' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_ValidResolveWithNameAndParameters_ReturnsTrue,The following statement contains a magic number: var result = container.TryResolve<TestClassWithParameters>("Testing"' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_ValidResolveWithNameAndParameters_ReturnsType,The following statement contains a magic number: var result = container.TryResolve<TestClassWithParameters>("Testing"' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_InvalidResolveWithNameAndParameters_ReturnsFalse,The following statement contains a magic number: var result = container.TryResolve<TestClassWithParameters>("Testing"' new NamedParameterOverloads() { { "intProperty"' 2 } }' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_ValidResolveWithParametersAndOptions_ReturnsTrue,The following statement contains a magic number: var result = container.TryResolve<TestClassWithParameters>(new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' new ResolveOptions()' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_ValidResolveWithParametersAndOptions_ReturnsType,The following statement contains a magic number: var result = container.TryResolve<TestClassWithParameters>(new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' new ResolveOptions()' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_InvalidResolveWithParametersAndOptions_ReturnsFalse,The following statement contains a magic number: var result = container.TryResolve<TestClassWithParameters>(new NamedParameterOverloads() { { "intProperty"' 2 } }' new ResolveOptions()' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_ValidResolveWithNameParametersAndOptions_ReturnsTrue,The following statement contains a magic number: var result = container.TryResolve<TestClassWithParameters>("Testing"' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' new ResolveOptions()' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_ValidResolveWithNameParametersAndOptions_ReturnsType,The following statement contains a magic number: var result = container.TryResolve<TestClassWithParameters>("Testing"' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' new ResolveOptions()' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolve_InvalidResolveWithNameParametersAndOptions_ReturnsFalse,The following statement contains a magic number: var result = container.TryResolve<TestClassWithParameters>("Testing"' new NamedParameterOverloads() { { "intProperty"' 2 } }' new ResolveOptions()' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,ResolveAll_MultipleTypesRegistered_ReturnsIEnumerableWithCorrectCount,The following statement contains a magic number: Assert.AreEqual(3' result.Count());
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,ResolveAll_NamedAndUnnamedRegisteredAndPassedTrue_ReturnsIEnumerableWithNamedAndUnnamedRegistrations,The following statement contains a magic number: Assert.AreEqual(3' result.Count());
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,ResolveAll_NamedAndUnnamedRegisteredAndPassedFalse_ReturnsIEnumerableWithJustNamedRegistrations,The following statement contains a magic number: Assert.AreEqual(2' result.Count());
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_TypeWithIEnumerableOfRegisteredTypeDependency_ResolvesWithIEnumerableOfCorrectCount,The following statement contains a magic number: Assert.AreEqual(2' result.EnumerableCount);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_ValidResolveWithParameters_ReturnsTrue,The following statement contains a magic number: var result = container.TryResolve(typeof(TestClassWithParameters)' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_ValidResolveWithParameters_ReturnsType,The following statement contains a magic number: var result = container.TryResolve(typeof(TestClassWithParameters)' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_InvalidResolveWithParameters_ReturnsFalse,The following statement contains a magic number: var result = container.TryResolve(typeof(TestClassWithParameters)' new NamedParameterOverloads() { { "intProperty"' 2 } }' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_ValidResolveWithNameAndParameters_ReturnsTrue,The following statement contains a magic number: var result = container.TryResolve(typeof(TestClassWithParameters)' "Testing"' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_ValidResolveWithNameAndParameters_ReturnsType,The following statement contains a magic number: var result = container.TryResolve(typeof(TestClassWithParameters)' "Testing"' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_InvalidResolveWithNameAndParameters_ReturnsFalse,The following statement contains a magic number: var result = container.TryResolve(typeof(TestClassWithParameters)' "Testing"' new NamedParameterOverloads() { { "intProperty"' 2 } }' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_ValidResolveWithParametersAndOptions_ReturnsTrue,The following statement contains a magic number: var result = container.TryResolve(typeof(TestClassWithParameters)' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' new ResolveOptions()' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_ValidResolveWithParametersAndOptions_ReturnsType,The following statement contains a magic number: var result = container.TryResolve(typeof(TestClassWithParameters)' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' new ResolveOptions()' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_InvalidResolveWithParametersAndOptions_ReturnsFalse,The following statement contains a magic number: var result = container.TryResolve(typeof(TestClassWithParameters)' new NamedParameterOverloads() { { "intProperty"' 2 } }' new ResolveOptions()' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_ValidResolveWithNameParametersAndOptions_ReturnsTrue,The following statement contains a magic number: var result = container.TryResolve(typeof(TestClassWithParameters)' "Testing"' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' new ResolveOptions()' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_ValidResolveWithNameParametersAndOptions_ReturnsType,The following statement contains a magic number: var result = container.TryResolve(typeof(TestClassWithParameters)' "Testing"' new NamedParameterOverloads() { { "stringProperty"' "test" }' { "intProperty"' 2 } }' new ResolveOptions()' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,TryResolveNonGeneric_InvalidResolveWithNameParametersAndOptions_ReturnsFalse,The following statement contains a magic number: var result = container.TryResolve(typeof(TestClassWithParameters)' "Testing"' new NamedParameterOverloads() { { "intProperty"' 2 } }' new ResolveOptions()' out output);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,RegisterMultiple_ValidTypes_CorrectCountReturnedByResolveAll,The following statement contains a magic number: Assert.AreEqual(2' result.Count());
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,ResolveAll_ChildContainerNoRegistrationsParentContainerHasRegistrations_ReturnsAllParentRegistrations,The following statement contains a magic number: Assert.AreEqual(3' result.Count());
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,ResolveAll_ChildContainerHasRegistrationsParentContainerHasRegistrations_ReturnsAllRegistrations,The following statement contains a magic number: Assert.AreEqual(6' result.Count());
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,ResolveAll_ChildContainerRegistrationsParentContainerNoRegistrations_ReturnsAllChildRegistrations,The following statement contains a magic number: Assert.AreEqual(3' result.Count());
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,ResolveAll_ChildContainerRegistrationsOverrideParentContainerRegistrations_ReturnsChildRegistrationsWithoutDuplicates,The following statement contains a magic number: Assert.AreEqual(3' result.Count());
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_IEnumerableDependencyClassInChildContainerChildContainerNoRegistrationsParentContainerHasRegistrations_ReturnsAllParentRegistrations,The following statement contains a magic number: Assert.AreEqual(3' result.EnumerableCount);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_IEnumerableDependencyClassInChildContainerChildContainerHasRegistrationsParentContainerHasRegistrations_ReturnsAllRegistrations,The following statement contains a magic number: Assert.AreEqual(6' result.EnumerableCount);
Magic Number,TinyIoC.Tests,TinyIoCTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyIoCTests.cs,Resolve_IEnumerableDependencyClassInChildContainerChildContainerRegistrationsParentContainerNoRegistrations_ReturnsAllChildRegistrations,The following statement contains a magic number: Assert.AreEqual(3' result.EnumerableCount);
Magic Number,TinyIoC.Tests,TinyMessageSubscriptionTokenTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessageSubscriptionTokenTests.cs,Dispose_WithInvalidHubReference_DoesNotThrow,The following statement contains a magic number: GC.WaitForFullGCComplete(2000);
Magic Number,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,PublishAsync_NoCallback_PublishesMessage,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,PublishAsync_NoCallback_PublishesMessage,The following statement contains a magic number: !received && waitCount < 100
Magic Number,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,PublishAsync_Callback_PublishesMessage,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,PublishAsync_Callback_PublishesMessage,The following statement contains a magic number: !received && waitCount < 100
Magic Number,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,PublishAsync_Callback_CallsCallback,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,TinyIoC.Tests,TinyMessengerTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TinyMessengerTests.cs,PublishAsync_Callback_CallsCallback,The following statement contains a magic number: !callbackReceived && waitCount < 100
Magic Number,TinyIoC.Tests.PlatformTestSuite,PlatformTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\PlatformTestSuite\PlatformTests.cs,ResolveAll,The following statement contains a magic number: return (result.Count() == 3);
Magic Number,TinyIoC.Tests.PlatformTestSuite,PlatformTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\PlatformTestSuite\PlatformTests.cs,IEnumerableDependency,The following statement contains a magic number: return (result.EnumerableCount == 2);
Magic Number,TinyIoC.Tests.PlatformTestSuite,PlatformTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\PlatformTestSuite\PlatformTests.cs,RegisterMultiple,The following statement contains a magic number: return (result.Count() == 2);
Magic Number,TinyIoC.Tests.PlatformTestSuite,TestclassWithNameAndParamsLazyFactory,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\PlatformTestSuite\PlatformTests.cs,TestclassWithNameAndParamsLazyFactory,The following statement contains a magic number: Prop1 = _Factory.Invoke("Testing"' new Dictionary<String' object> { { "stringProperty"' "Testing" }' { "intProperty"' 22 } });
Magic Number,BasicClasses,TestclassWithNameAndParamsLazyFactory,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TestData\BasicClasses.cs,TestclassWithNameAndParamsLazyFactory,The following statement contains a magic number: Prop1 = _Factory.Invoke(""' new Dictionary<String' object> { { "stringProperty"' "Testing" }' { "intProperty"' 22 } });
Magic Number,BasicClasses,TestClassMultiDepsMultiCtors,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TestData\BasicClasses.cs,TestClassMultiDepsMultiCtors,The following statement contains a magic number: NumberOfDepsResolved = 2;
Magic Number,TinyIoC.Tests.TypeExtensions,TypeExtensionsTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TypeExtensionsTests.cs,GetGenericMethod_RegisterTwoAcceptableGenericParameterNoParameters_ReturnsCorrectMethod,The following statement contains a magic number: Assert.AreEqual(2' method.GetGenericArguments().Length);
Magic Number,TinyIoC.Tests.TypeExtensions,TypeExtensionsTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TypeExtensionsTests.cs,GetGenericMethod_TwiceWithDifferentGenericParamters_ReturnsCorrectMethods,The following statement contains a magic number: Assert.AreEqual(2' methodOne.GetGenericArguments().Length);
Magic Number,TinyIoC.Tests.TypeExtensions,TypeExtensionsTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TypeExtensionsTests.cs,GetGenericMethod_TwiceWithDifferentGenericParamters_ReturnsCorrectMethods,The following statement contains a magic number: Assert.AreEqual(2' methodTwo.GetGenericArguments().Length);
Magic Number,TinyIoC.Tests.TypeExtensions,TypeExtensionsTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TypeExtensionsTests.cs,GetGenericMethod_RegisterTwoAcceptableGenericParameterMethodParameters_ReturnsCorrectMethod,The following statement contains a magic number: Assert.AreEqual(2' method.GetGenericArguments().Length);
Magic Number,TinyIoC.Tests.TypeExtensions,TypeExtensionsTests,D:\research\architectureSmells\repos\grumpydev_TinyIoC\src\TinyIoC.Tests\TypeExtensionsTests.cs,GetGenericMethod_RegisterWithGenericTypeAsAMethodParameter_ReturnsCorrectMethod,The following statement contains a magic number: Assert.AreEqual(2' method.GetGenericArguments().Length);
