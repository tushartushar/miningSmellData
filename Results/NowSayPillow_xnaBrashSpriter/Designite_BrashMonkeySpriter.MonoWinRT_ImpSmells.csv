Implementation smell,Namespace,Class,File,Method,Description
Long Method,BrashMonkeySpriter.Content,SpriterReader,C:\repos\NowSayPillow_xnaBrashSpriter\BrashMonkeySpriter\Content\SpriterReader.cs,Read,The method has 117 lines of code.
Complex Method,BrashMonkeySpriter,CharacterAnimator,C:\repos\NowSayPillow_xnaBrashSpriter\BrashMonkeySpriter\Character.cs,Update,Cyclomatic complexity of the method is 11
Complex Method,BrashMonkeySpriter.Content,SpriterReader,C:\repos\NowSayPillow_xnaBrashSpriter\BrashMonkeySpriter\Content\SpriterReader.cs,Read,Cyclomatic complexity of the method is 13
Long Parameter List,BrashMonkeySpriter,CharacterAnimator,C:\repos\NowSayPillow_xnaBrashSpriter\BrashMonkeySpriter\Character.cs,Update,The method has 6 parameters. Parameters: p_gameTime' p_location' p_rotation' p_scale' p_flipX' p_flipY
Long Statement,BrashMonkeySpriter,CharacterAnimator,C:\repos\NowSayPillow_xnaBrashSpriter\BrashMonkeySpriter\Character.cs,Draw,The length of the statement  "            p_spriteBatch.Begin(SpriteSortMode.Deferred' BlendState.AlphaBlend' SamplerState.AnisotropicClamp' DepthStencilState.None' RasterizerState.CullNone); " is 149.
Long Statement,BrashMonkeySpriter.Content,SpriterReader,C:\repos\NowSayPillow_xnaBrashSpriter\BrashMonkeySpriter\Content\SpriterReader.cs,Read,The length of the statement  "                                //l_key.Pivot = new Vector2(l_pivotX * p_character.Rectangles[l_key.Folder][l_key.File].Width' (1.0f - l_pivotY) * p_character.Rectangles[l_key.Folder][l_key.File].Height); " is 172.
Virtual Method Call from Constructor,BrashMonkeySpriter,CharacterAnimator,C:\repos\NowSayPillow_xnaBrashSpriter\BrashMonkeySpriter\Character.cs,CharacterAnimator,The constructor "CharacterAnimator" calls a virtual method "ChangeAnimation".
Magic Number,BrashMonkeySpriter.Spriter,MainlineList,C:\repos\NowSayPillow_xnaBrashSpriter\BrashMonkeySpriter\Spriter\Animation.cs,KeyAtOrBefore,The following statement contains a magic number: while ((l_hi - l_lo) > 1) {                  int l_m = (l_hi + l_lo) / 2;                  if (this[l_m].Time == p_elapsedTime) {                      if (this[l_m].Time == this[l_m + 1].Time) {                          return (l_m + 1);                      }                        return l_m;                  } else if (this[l_m].Time > p_elapsedTime) {                      l_hi = (l_m - 1);                  } else {                      l_lo = l_m;                  }              }
Magic Number,BrashMonkeySpriter.Spriter,Timeline,C:\repos\NowSayPillow_xnaBrashSpriter\BrashMonkeySpriter\Spriter\Timeline.cs,KeyAtOrBefore,The following statement contains a magic number: while ((l_hi - l_lo) > 1) {                  int l_m = (l_hi + l_lo) / 2;                  if (Keys[l_m].Time == p_elapsedTime) {                      return l_m;                  } else if (Keys[l_m].Time > p_elapsedTime) {                      l_hi = l_m - 1;                  } else {                      l_lo = l_m;                  }              }
