Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DalSoft.Dynamic.DynamicExpressions,StringHelper,C:\repos\DalSoft_DuckObject\DuckObject\DynamicExpressions\StringHelper.cs,Validated,Cyclomatic complexity of the method is 19
Long Parameter List,DalSoft.Dynamic,DuckObject,C:\repos\DalSoft_DuckObject\DuckObject\DuckObject.cs,CopyTo,The method has 6 parameters.
Long Parameter List,DalSoft.Dynamic.DynamicExpressions,StringHelper,C:\repos\DalSoft_DuckObject\DuckObject\DynamicExpressions\StringHelper.cs,Validated,The method has 11 parameters.
Long Statement,DalSoft.Dynamic,DuckObject,C:\repos\DalSoft_DuckObject\DuckObject\DuckObject.cs,Contains,The length of the statement  "	return _reflectionProperties.ToDictionary (k => k.Name' v => v.GetValue (this' null)).Contains (item) || _properties.Contains (item); " is 133.
Long Statement,DalSoft.Dynamic,DuckObject,C:\repos\DalSoft_DuckObject\DuckObject\DuckObject.cs,CopyTo,The length of the statement  "	IDictionary<string' object> dictionary = properties.ToDictionary (k => k.name' v => v.value).Union (_properties).ToDictionary (k => k.Key' v => v.Value); " is 153.
Long Statement,DalSoft.Dynamic,DuckObjectExtensions,C:\repos\DalSoft_DuckObject\DuckObject\DuckObjectExtensions.cs,ExtendWithAnonymousType,The length of the statement  "			duckObject.Add (property.Name' ExtendWithAnonymousType (duckObject [property.Name].ToDuckObject ()' property.GetValue (anonymousType))); " is 136.
Long Statement,DalSoft.Dynamic,DuckObjectExtensions,C:\repos\DalSoft_DuckObject\DuckObject\DuckObjectExtensions.cs,SetPropertyValue,The length of the statement  "		value = value is IConvertible ? Convert.ChangeType (value' propertyType) : (propertyType.IsClassThatWeCanMap () ? value.ToDuckObject () : value); " is 145.
Long Statement,DalSoft.Dynamic,DuckObjectExtensions,C:\repos\DalSoft_DuckObject\DuckObject\DuckObjectExtensions.cs,SetPropertyValue,The length of the statement  "		var fieldInfo = instanceType.GetField (string.Format ("<{0}>i__Field"' propertyName)' BindingFlags.NonPublic | BindingFlags.Instance); " is 134.
Long Statement,DalSoft.Dynamic,DuckObjectExtensions,C:\repos\DalSoft_DuckObject\DuckObject\DuckObjectExtensions.cs,MapDuckObjectToType,The length of the statement  "	foreach (var property in TypeDescriptor.GetProperties (anonymousType).Cast<PropertyDescriptor> ().Where (property => currentDuckObject [property.Name] != null))//select only properties that have a matching value in the DuckObject " is 229.
Long Statement,DalSoft.Dynamic,DuckObjectExtensions,C:\repos\DalSoft_DuckObject\DuckObject\DuckObjectExtensions.cs,MapDuckObjectToType,The length of the statement  "			property.SetValue (anonymousType' IsAnonymousType (property.PropertyType) ? MapDuckObjectToType (valueFromDuckObject as DuckObject ?? valueFromDuckObject.ToDuckObject ()' property.GetValue (anonymousType)) : CreateInstance (valueFromDuckObject.ToDuckObject ()' property.PropertyType)); " is 285.
Long Statement,DalSoft.Dynamic,DuckObjectExtensions,C:\repos\DalSoft_DuckObject\DuckObject\DuckObjectExtensions.cs,MapDuckObjectToType,The length of the statement  "			SetPropertyValue (instance: anonymousType' propertyName: property.Name' propertyType: property.PropertyType' value: valueFromDuckObject); " is 137.
Long Statement,DalSoft.Dynamic,DuckObjectExtensions,C:\repos\DalSoft_DuckObject\DuckObject\DuckObjectExtensions.cs,CreateInstance,The length of the statement  "		throw new ArgumentException (string.Format ("Can't create the type {0} as it doesn't have a parameterless constructor"' type.FullName)); " is 136.
Long Statement,DalSoft.Dynamic,DuckObjectExtensions,C:\repos\DalSoft_DuckObject\DuckObject\DuckObjectExtensions.cs,CreateInstance,The length of the statement  "		throw new ArgumentException (string.Format ("The interface {0} contains method members AsIf supports interfaces with property members only"' type.FullName)); " is 157.
Long Statement,DalSoft.Dynamic,DuckObjectExtensions,C:\repos\DalSoft_DuckObject\DuckObject\DuckObjectExtensions.cs,CreateInstance,The length of the statement  "	return MapDuckObjectToType (duckObject' type.IsInterface ? DynamicDuck.AsIf (duckObject' type) : Activator.CreateInstance (type)); " is 130.
Long Statement,DalSoft.Dynamic.DynamicExpressions,DelegateNode,C:\repos\DalSoft_DuckObject\DuckObject\DynamicExpressions\DelegateParser.cs,GetMetaObject,The length of the statement  "	DynamicMetaObject meta = new DelegateMetaNode (parameter' BindingRestrictions.GetInstanceRestriction (parameter' this)' this); " is 126.
Long Statement,DalSoft.Dynamic.DynamicProxies,DynamicDuck,C:\repos\DalSoft_DuckObject\DuckObject\DynamicProxies\DynamicDuck.cs,ImplementConstructor,The length of the statement  "	ConstructorBuilder ctorBuilder = typeBuilder.DefineConstructor (MethodAttributes.Public | MethodAttributes.HideBySig | MethodAttributes.SpecialName | MethodAttributes.RTSpecialName' CallingConventions.Standard' new Type[] { " is 223.
Long Statement,DalSoft.Dynamic.DynamicProxies,DynamicDuck,C:\repos\DalSoft_DuckObject\DuckObject\DynamicProxies\DynamicDuck.cs,ImplementConstructor,The length of the statement  "	ctorILGen.Emit (OpCodes.Call' typeof(DynamicProxyBase).GetConstructor (BindingFlags.Instance | BindingFlags.NonPublic' null' new Type[] { " is 137.
Long Statement,DalSoft.Dynamic.DynamicProxies,DynamicDuck,C:\repos\DalSoft_DuckObject\DuckObject\DynamicProxies\DynamicDuck.cs,ImplementInterface,The length of the statement  "			PropertyBuilder propertyBuilder = typeBuilder.DefineProperty (propertyInfo.Name' PropertyAttributes.None' returnType' parameterTypes); " is 134.
Long Statement,DalSoft.Dynamic.DynamicProxies,DynamicDuck,C:\repos\DalSoft_DuckObject\DuckObject\DynamicProxies\DynamicDuck.cs,AddGetPropertyMethod,The length of the statement  "	MethodBuilder methodBuilder = typeBuilder.DefineMethod (GETPREFIX + methodName' attributes' CallingConventions.HasThis' propertyBuilder.PropertyType' null); " is 156.
Long Statement,DalSoft.Dynamic.DynamicProxies,DynamicDuck,C:\repos\DalSoft_DuckObject\DuckObject\DynamicProxies\DynamicDuck.cs,AddSetPropertyMethod,The length of the statement  "	MethodBuilder methodBuilder = typeBuilder.DefineMethod (SETPREFIX + methodName' attributes' CallingConventions.HasThis' typeof(void)' new Type[] { " is 146.
Long Statement,DalSoft.Dynamic.DynamicProxies,DynamicDuck,C:\repos\DalSoft_DuckObject\DuckObject\DynamicProxies\DynamicDuck.cs,GetTypeBuilder,The length of the statement  "	return ModuleBuilder.DefineType (thunkTypeName' TypeAttributes.Class | TypeAttributes.Public | TypeAttributes.AutoLayout | TypeAttributes.AnsiClass | TypeAttributes.Sealed | TypeAttributes.BeforeFieldInit); " is 206.
Magic Number,DalSoft.Dynamic,DuckObjectExtensions,C:\repos\DalSoft_DuckObject\DuckObject\DuckObjectExtensions.cs,Extend,The following statement contains a magic number: foreach (var key in expressionDictionary.Keys) {  	if (key == expressionDictionary.Keys.Last ()) {  		var previousKey = expressionDictionary.Keys.Skip (expressionDictionary.Count - 2).First ();  		if (newDictionary [previousKey] != null)  			((DuckObject)newDictionary [previousKey]).Add (key' expressionDictionary.Values.Last ());  		else  			duckObject.Add (key' expressionDictionary.Values.Last ());  	}  	else {  		newDictionary [key] = new DuckObject ();  	}  }  
Magic Number,DalSoft.Dynamic,DuckObjectExtensions,C:\repos\DalSoft_DuckObject\DuckObject\DuckObjectExtensions.cs,Extend,The following statement contains a magic number: if (key == expressionDictionary.Keys.Last ()) {  	var previousKey = expressionDictionary.Keys.Skip (expressionDictionary.Count - 2).First ();  	if (newDictionary [previousKey] != null)  		((DuckObject)newDictionary [previousKey]).Add (key' expressionDictionary.Values.Last ());  	else  		duckObject.Add (key' expressionDictionary.Values.Last ());  }  else {  	newDictionary [key] = new DuckObject ();  }  
Missing Default,DalSoft.Dynamic.DynamicExpressions,TypeHelper,C:\repos\DalSoft_DuckObject\DuckObject\DynamicExpressions\TypeHelper.cs,GetMemberValue,The following switch statement is missing a default case: switch (info.MemberType) {  case MemberTypes.Property:  	return ((PropertyInfo)info).GetValue (obj' null);  case MemberTypes.Field:  	return ((FieldInfo)info).GetValue (obj);  }  
Missing Default,DalSoft.Dynamic.DynamicExpressions,TypeHelper,C:\repos\DalSoft_DuckObject\DuckObject\DynamicExpressions\TypeHelper.cs,SetMemberValue,The following switch statement is missing a default case: switch (info.MemberType) {  case MemberTypes.Property:  	((PropertyInfo)info).SetValue (obj' val' null);  	return;  case MemberTypes.Field:  	((FieldInfo)info).SetValue (obj' val);  	return;  }  
