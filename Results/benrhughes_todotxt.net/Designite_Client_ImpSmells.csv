Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Client,IntellisenseTextBox,F:\newReposMay17\benrhughes_todotxt.net\Client\Controls\IntellisenseTextBox.cs,Intellisense_PreviewKeyUp,Cyclomatic complexity of the method is 12
Complex Method,Client,IntellisenseTextBox,F:\newReposMay17\benrhughes_todotxt.net\Client\Controls\IntellisenseTextBox.cs,OnPreviewKeyUp,Cyclomatic complexity of the method is 22
Complex Method,Client,IntellisenseTextBox,F:\newReposMay17\benrhughes_todotxt.net\Client\Controls\IntellisenseTextBox.cs,IntellisenseTextBox_TextChanged,Cyclomatic complexity of the method is 10
Complex Method,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,UpdateDisplayedTasks,Cyclomatic complexity of the method is 22
Complex Method,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,FilterList,Cyclomatic complexity of the method is 19
Complex Method,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ApplyFilterPreset,Cyclomatic complexity of the method is 31
Complex Method,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,SortList,Cyclomatic complexity of the method is 16
Complex Method,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,AddTaskFromTextbox,Cyclomatic complexity of the method is 8
Complex Method,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,TaskTextPreviewKeyUp,Cyclomatic complexity of the method is 8
Complex Method,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,GetPrintContents,Cyclomatic complexity of the method is 9
Long Parameter List,Client,Help,F:\newReposMay17\benrhughes_todotxt.net\Client\Controls\Help.xaml.cs,Help,The method has 5 parameters.
Long Statement,Client,IntellisenseTextBox,F:\newReposMay17\benrhughes_todotxt.net\Client\Controls\IntellisenseTextBox.cs,OnPreviewKeyUp,The length of the statement  "				var listBoxItem = (ListBoxItem)this.IntellisenseList.ItemContainerGenerator.ContainerFromItem (this.IntellisenseList.SelectedItem); " is 131.
Long Statement,Client,IntellisenseTextBox,F:\newReposMay17\benrhughes_todotxt.net\Client\Controls\IntellisenseTextBox.cs,OnPreviewKeyUp,The length of the statement  "				this.IntellisenseList.Items.Filter = o => (o.ToString ().IndexOf (word' StringComparison.CurrentCultureIgnoreCase) >= 0); " is 121.
Long Statement,Client,ExceptionExtensions,F:\newReposMay17\benrhughes_todotxt.net\Client\ExceptionExtensions.cs,Handle,The length of the statement  "	MessageBox.Show (errorMessage + Environment.NewLine + ex.Message + Environment.NewLine + "Please see Help -> Show Error Log for more details"' "Error"' MessageBoxButton.OK' MessageBoxImage.Error); " is 196.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,SetSelectedTasks,The length of the statement  "	// Loop through the listbox tasks' then loop through the items that should be selected. If the items match' select them in the list box. " is 136.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,SelectTaskByIndex,The length of the statement  "		var listBoxItem = (ListBoxItem)_window.lbTasks.ItemContainerGenerator.ContainerFromItem (_window.lbTasks.Items [index]); " is 120.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,FilterList,The length of the statement  "	var comparer = User.Default.FilterCaseSensitive ? StringComparison.InvariantCulture : StringComparison.InvariantCultureIgnoreCase; " is 130.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,FilterList,The length of the statement  "				if (filter.Equals ("due:today"' StringComparison.OrdinalIgnoreCase) && task.DueDate == DateTime.Now.ToString ("yyyy-MM-dd")) " is 124.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,FilterList,The length of the statement  "				else if (filter.Equals ("due:future"' StringComparison.OrdinalIgnoreCase) && task.DueDate.IsDateGreaterThan (DateTime.Now)) " is 123.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,FilterList,The length of the statement  "				else if (filter.Equals ("due:active"' StringComparison.OrdinalIgnoreCase) && !task.DueDate.IsNullOrEmpty () && !task.DueDate.IsDateGreaterThan (DateTime.Now)) " is 158.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,FilterList,The length of the statement  "				else if (filter.Equals ("-due:today"' StringComparison.OrdinalIgnoreCase) && task.DueDate == DateTime.Now.ToString ("yyyy-MM-dd")) { " is 132.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,FilterList,The length of the statement  "				} else if (filter.Equals ("-due:future"' StringComparison.OrdinalIgnoreCase) && task.DueDate.IsDateGreaterThan (DateTime.Now)) { " is 128.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,FilterList,The length of the statement  "				} else if (filter.Equals ("-due:past"' StringComparison.OrdinalIgnoreCase) && task.DueDate.IsDateLessThan (DateTime.Now)) { " is 123.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,FilterList,The length of the statement  "				} else if (filter.Equals ("-due:active"' StringComparison.OrdinalIgnoreCase) && !task.DueDate.IsNullOrEmpty () && !task.DueDate.IsDateGreaterThan (DateTime.Now)) { " is 163.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,SortList,The length of the statement  "		return tasks.OrderBy (t => t.Completed).ThenBy (t => (string.IsNullOrEmpty (t.Priority) ? "(zzz)" : t.Priority)).ThenBy (t => (string.IsNullOrEmpty (t.DueDate) ? "9999-99-99" : t.DueDate)).ThenBy (t => (string.IsNullOrEmpty (t.CreationDate) ? "0000-00-00" : t.CreationDate)); " is 275.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,SortList,The length of the statement  "		}).ThenBy (t => t.Completed).ThenBy (t => (string.IsNullOrEmpty (t.Priority) ? "(zzz)" : t.Priority)).ThenBy (t => (string.IsNullOrEmpty (t.DueDate) ? "9999-99-99" : t.DueDate)).ThenBy (t => (string.IsNullOrEmpty (t.CreationDate) ? "0000-00-00" : t.CreationDate)); " is 264.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,SortList,The length of the statement  "		return tasks.OrderBy (t => (string.IsNullOrEmpty (t.DueDate) ? "9999-99-99" : t.DueDate)).ThenBy (t => t.Completed).ThenBy (t => (string.IsNullOrEmpty (t.Priority) ? "(zzz)" : t.Priority)).ThenBy (t => (string.IsNullOrEmpty (t.CreationDate) ? "0000-00-00" : t.CreationDate)); " is 275.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,SortList,The length of the statement  "		return tasks.OrderBy (t => (string.IsNullOrEmpty (t.Priority) ? "(zzz)" : t.Priority)).ThenBy (t => t.Completed).ThenBy (t => (string.IsNullOrEmpty (t.DueDate) ? "9999-99-99" : t.DueDate)).ThenBy (t => (string.IsNullOrEmpty (t.CreationDate) ? "0000-00-00" : t.CreationDate)); " is 275.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,SortList,The length of the statement  "		}).ThenBy (t => t.Completed).ThenBy (t => (string.IsNullOrEmpty (t.Priority) ? "(zzz)" : t.Priority)).ThenBy (t => (string.IsNullOrEmpty (t.DueDate) ? "9999-99-99" : t.DueDate)).ThenBy (t => (string.IsNullOrEmpty (t.CreationDate) ? "0000-00-00" : t.CreationDate)); " is 264.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,SortList,The length of the statement  "		return tasks.OrderBy (t => (string.IsNullOrEmpty (t.CreationDate) ? "0000-00-00" : t.CreationDate)).ThenBy (t => t.Completed).ThenBy (t => (string.IsNullOrEmpty (t.Priority) ? "(zzz)" : t.Priority)).ThenBy (t => (string.IsNullOrEmpty (t.DueDate) ? "9999-99-99" : t.DueDate)); " is 275.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ModifySelectedTasks,The length of the statement  "	// For each selected task' perform the modification' update the task list' and update the copy of the task in _selectedTasks. " is 125.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,AddNewTask,The length of the statement  "	// create one-line string of all filter but not ones beginning with a minus' and use as the starting text for a new task " is 120.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,SetTaskPriority,The length of the statement  "	string newTaskRawText = (String.IsNullOrEmpty (oldPriority)) ? newPriorityRaw + oldTaskRawText : // prepend new priority " is 120.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,SetTaskDueDate,The length of the statement  "	string newTaskRawText = (String.IsNullOrEmpty (oldDueDateText)) ? oldTaskRawText + " due:" + ((DateTime)newDueDate).ToString ("yyyy-MM-dd") : rgx.Replace (oldTaskRawText' ((DateTime)newDueDate).ToString ("yyyy-MM-dd")); " is 219.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,PostponeTask,The length of the statement  "	string updatedRaw = (task.DueDate.Length > 0) ? task.Raw.Replace ("due:" + task.DueDate' "due:" + newDueDate.ToString ("yyyy-MM-dd")) : task.Raw.ToString () + " due:" + newDueDate.ToString ("yyyy-MM-dd"); " is 204.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ShowPostponeDialog,The length of the statement  "		if (sPostpone == "monday" | sPostpone == "tuesday" | sPostpone == "wednesday" | sPostpone == "thursday" | sPostpone == "friday" | sPostpone == "saturday" | sPostpone == "sunday") { " is 180.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ShowPostponeDialog,The length of the statement  "			// Set the current due date as today' otherwise if the task is overdue or in the future' the following count won't work correctly " is 129.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ShowPostponeDialog,The length of the statement  "				isValid = string.Equals (due.ToString ("dddd"' new CultureInfo ("en-US"))' sPostpone' StringComparison.CurrentCultureIgnoreCase); " is 129.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ShowOptionsDialog,The length of the statement  "	updateTaskListRequired = (User.Default.AutoRefresh != o.cbAutoRefresh.IsChecked.Value || User.Default.FilterCaseSensitive != o.cbCaseSensitiveFilter.IsChecked.Value || User.Default.AllowGrouping != o.cbAllowGrouping.IsChecked.Value || User.Default.TaskListFontFamily != o.TaskListFont.Family.ToString () || User.Default.TaskListFontSize != o.TaskListFont.Size || User.Default.TaskListFontStyle != o.TaskListFont.Style.ToString () || User.Default.TaskListFontWeight != o.TaskListFont.Weight.ToString () || User.Default.TaskListFontStretch != o.TaskListFont.Stretch.ToString () || User.Default.TaskListFontBrushColor != o.TaskListFont.BrushColor.ToString ()); " is 657.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ViewLog,The length of the statement  "		MessageBox.Show ("Log file does not exist: no errors have been logged"' "Log file does not exist"' MessageBoxButton.OK' MessageBoxImage.Information); " is 149.
Long Statement,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,TaskTextPreviewKeyUp,The length of the statement  "		MessageBox.Show ("You don't have a todo.txt file open - please use File\\New or File\\Open"' "Please open a file"' MessageBoxButton.OK' MessageBoxImage.Error); " is 159.
Empty Catch Block,Client,PortableSettingsProvider,F:\newReposMay17\benrhughes_todotxt.net\Client\PortableSettingsProvider.cs,SetPropertyValues,The method has an empty catch block.
Empty Catch Block,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ShowPostponeDialog,The method has an empty catch block.
Magic Number,Client,IntellisenseTextBox,F:\newReposMay17\benrhughes_todotxt.net\Client\Controls\IntellisenseTextBox.cs,IntellisenseTextBox,The following statement contains a magic number: this.IntellisensePopup.MinWidth = 150;  
Magic Number,Client,IntellisenseTextBox,F:\newReposMay17\benrhughes_todotxt.net\Client\Controls\IntellisenseTextBox.cs,IntellisenseTextBox,The following statement contains a magic number: this.IntellisensePopup.MaxWidth = 500;  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ApplyFilterPreset2,The following statement contains a magic number: ApplyFilterPreset (2);  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ApplyFilterPreset3,The following statement contains a magic number: ApplyFilterPreset (3);  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ApplyFilterPreset4,The following statement contains a magic number: ApplyFilterPreset (4);  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ApplyFilterPreset5,The following statement contains a magic number: ApplyFilterPreset (5);  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ApplyFilterPreset6,The following statement contains a magic number: ApplyFilterPreset (6);  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ApplyFilterPreset7,The following statement contains a magic number: ApplyFilterPreset (7);  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ApplyFilterPreset8,The following statement contains a magic number: ApplyFilterPreset (8);  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ApplyFilterPreset9,The following statement contains a magic number: ApplyFilterPreset (9);  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ApplyFilterPreset,The following statement contains a magic number: switch (filterPresetNumber) {  case 0:  	User.Default.FilterText = "";  	break;  case 1:  	User.Default.FilterText = User.Default.FilterTextPreset1;  	break;  case 2:  	User.Default.FilterText = User.Default.FilterTextPreset2;  	break;  case 3:  	User.Default.FilterText = User.Default.FilterTextPreset3;  	break;  case 4:  	User.Default.FilterText = User.Default.FilterTextPreset4;  	break;  case 5:  	User.Default.FilterText = User.Default.FilterTextPreset5;  	break;  case 6:  	User.Default.FilterText = User.Default.FilterTextPreset6;  	break;  case 7:  	User.Default.FilterText = User.Default.FilterTextPreset7;  	break;  case 8:  	User.Default.FilterText = User.Default.FilterTextPreset8;  	break;  case 9:  	User.Default.FilterText = User.Default.FilterTextPreset9;  	break;  default:  	return;  }  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ApplyFilterPreset,The following statement contains a magic number: switch (filterPresetNumber) {  case 0:  	User.Default.FilterText = "";  	break;  case 1:  	User.Default.FilterText = User.Default.FilterTextPreset1;  	break;  case 2:  	User.Default.FilterText = User.Default.FilterTextPreset2;  	break;  case 3:  	User.Default.FilterText = User.Default.FilterTextPreset3;  	break;  case 4:  	User.Default.FilterText = User.Default.FilterTextPreset4;  	break;  case 5:  	User.Default.FilterText = User.Default.FilterTextPreset5;  	break;  case 6:  	User.Default.FilterText = User.Default.FilterTextPreset6;  	break;  case 7:  	User.Default.FilterText = User.Default.FilterTextPreset7;  	break;  case 8:  	User.Default.FilterText = User.Default.FilterTextPreset8;  	break;  case 9:  	User.Default.FilterText = User.Default.FilterTextPreset9;  	break;  default:  	return;  }  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ApplyFilterPreset,The following statement contains a magic number: switch (filterPresetNumber) {  case 0:  	User.Default.FilterText = "";  	break;  case 1:  	User.Default.FilterText = User.Default.FilterTextPreset1;  	break;  case 2:  	User.Default.FilterText = User.Default.FilterTextPreset2;  	break;  case 3:  	User.Default.FilterText = User.Default.FilterTextPreset3;  	break;  case 4:  	User.Default.FilterText = User.Default.FilterTextPreset4;  	break;  case 5:  	User.Default.FilterText = User.Default.FilterTextPreset5;  	break;  case 6:  	User.Default.FilterText = User.Default.FilterTextPreset6;  	break;  case 7:  	User.Default.FilterText = User.Default.FilterTextPreset7;  	break;  case 8:  	User.Default.FilterText = User.Default.FilterTextPreset8;  	break;  case 9:  	User.Default.FilterText = User.Default.FilterTextPreset9;  	break;  default:  	return;  }  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ApplyFilterPreset,The following statement contains a magic number: switch (filterPresetNumber) {  case 0:  	User.Default.FilterText = "";  	break;  case 1:  	User.Default.FilterText = User.Default.FilterTextPreset1;  	break;  case 2:  	User.Default.FilterText = User.Default.FilterTextPreset2;  	break;  case 3:  	User.Default.FilterText = User.Default.FilterTextPreset3;  	break;  case 4:  	User.Default.FilterText = User.Default.FilterTextPreset4;  	break;  case 5:  	User.Default.FilterText = User.Default.FilterTextPreset5;  	break;  case 6:  	User.Default.FilterText = User.Default.FilterTextPreset6;  	break;  case 7:  	User.Default.FilterText = User.Default.FilterTextPreset7;  	break;  case 8:  	User.Default.FilterText = User.Default.FilterTextPreset8;  	break;  case 9:  	User.Default.FilterText = User.Default.FilterTextPreset9;  	break;  default:  	return;  }  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ApplyFilterPreset,The following statement contains a magic number: switch (filterPresetNumber) {  case 0:  	User.Default.FilterText = "";  	break;  case 1:  	User.Default.FilterText = User.Default.FilterTextPreset1;  	break;  case 2:  	User.Default.FilterText = User.Default.FilterTextPreset2;  	break;  case 3:  	User.Default.FilterText = User.Default.FilterTextPreset3;  	break;  case 4:  	User.Default.FilterText = User.Default.FilterTextPreset4;  	break;  case 5:  	User.Default.FilterText = User.Default.FilterTextPreset5;  	break;  case 6:  	User.Default.FilterText = User.Default.FilterTextPreset6;  	break;  case 7:  	User.Default.FilterText = User.Default.FilterTextPreset7;  	break;  case 8:  	User.Default.FilterText = User.Default.FilterTextPreset8;  	break;  case 9:  	User.Default.FilterText = User.Default.FilterTextPreset9;  	break;  default:  	return;  }  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ApplyFilterPreset,The following statement contains a magic number: switch (filterPresetNumber) {  case 0:  	User.Default.FilterText = "";  	break;  case 1:  	User.Default.FilterText = User.Default.FilterTextPreset1;  	break;  case 2:  	User.Default.FilterText = User.Default.FilterTextPreset2;  	break;  case 3:  	User.Default.FilterText = User.Default.FilterTextPreset3;  	break;  case 4:  	User.Default.FilterText = User.Default.FilterTextPreset4;  	break;  case 5:  	User.Default.FilterText = User.Default.FilterTextPreset5;  	break;  case 6:  	User.Default.FilterText = User.Default.FilterTextPreset6;  	break;  case 7:  	User.Default.FilterText = User.Default.FilterTextPreset7;  	break;  case 8:  	User.Default.FilterText = User.Default.FilterTextPreset8;  	break;  case 9:  	User.Default.FilterText = User.Default.FilterTextPreset9;  	break;  default:  	return;  }  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ApplyFilterPreset,The following statement contains a magic number: switch (filterPresetNumber) {  case 0:  	User.Default.FilterText = "";  	break;  case 1:  	User.Default.FilterText = User.Default.FilterTextPreset1;  	break;  case 2:  	User.Default.FilterText = User.Default.FilterTextPreset2;  	break;  case 3:  	User.Default.FilterText = User.Default.FilterTextPreset3;  	break;  case 4:  	User.Default.FilterText = User.Default.FilterTextPreset4;  	break;  case 5:  	User.Default.FilterText = User.Default.FilterTextPreset5;  	break;  case 6:  	User.Default.FilterText = User.Default.FilterTextPreset6;  	break;  case 7:  	User.Default.FilterText = User.Default.FilterTextPreset7;  	break;  case 8:  	User.Default.FilterText = User.Default.FilterTextPreset8;  	break;  case 9:  	User.Default.FilterText = User.Default.FilterTextPreset9;  	break;  default:  	return;  }  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ApplyFilterPreset,The following statement contains a magic number: switch (filterPresetNumber) {  case 0:  	User.Default.FilterText = "";  	break;  case 1:  	User.Default.FilterText = User.Default.FilterTextPreset1;  	break;  case 2:  	User.Default.FilterText = User.Default.FilterTextPreset2;  	break;  case 3:  	User.Default.FilterText = User.Default.FilterTextPreset3;  	break;  case 4:  	User.Default.FilterText = User.Default.FilterTextPreset4;  	break;  case 5:  	User.Default.FilterText = User.Default.FilterTextPreset5;  	break;  case 6:  	User.Default.FilterText = User.Default.FilterTextPreset6;  	break;  case 7:  	User.Default.FilterText = User.Default.FilterTextPreset7;  	break;  case 8:  	User.Default.FilterText = User.Default.FilterTextPreset8;  	break;  case 9:  	User.Default.FilterText = User.Default.FilterTextPreset9;  	break;  default:  	return;  }  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ShowPostponeDialog,The following statement contains a magic number: if (dialog.ShowDialog ().Value) {  	string sPostpone = dialog.PostponeText.Trim ();  	// Lower case for the comparison  	sPostpone = sPostpone.ToLower ();  	// Postpone to a day' not a number of days from now  	if (sPostpone == "monday" | sPostpone == "tuesday" | sPostpone == "wednesday" | sPostpone == "thursday" | sPostpone == "friday" | sPostpone == "saturday" | sPostpone == "sunday") {  		DateTime due = DateTime.Now;  		var count = 0;  		bool isValid = false;  		// Set the current due date as today' otherwise if the task is overdue or in the future' the following count won't work correctly  		ModifySelectedTasks (SetTaskDueDate' DateTime.Today);  		//if day of week' add days to today until weekday matches input  		//if today is the specified weekday' due date will be in one week  		do {  			count++;  			due = due.AddDays (1);  			isValid = string.Equals (due.ToString ("dddd"' new CultureInfo ("en-US"))' sPostpone' StringComparison.CurrentCultureIgnoreCase);  		} while (!isValid && (count < 7));  		// The count check is to prevent an endless loop in case of other culture.  		return count;  	}  	if (sPostpone.Length > 0) {  		try {  			iDays = Convert.ToInt32 (sPostpone);  		} catch {  			// No action needed.  iDays will be 0' which will leave the item unaltered.  		}  	}  }  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ShowPostponeDialog,The following statement contains a magic number: if (sPostpone == "monday" | sPostpone == "tuesday" | sPostpone == "wednesday" | sPostpone == "thursday" | sPostpone == "friday" | sPostpone == "saturday" | sPostpone == "sunday") {  	DateTime due = DateTime.Now;  	var count = 0;  	bool isValid = false;  	// Set the current due date as today' otherwise if the task is overdue or in the future' the following count won't work correctly  	ModifySelectedTasks (SetTaskDueDate' DateTime.Today);  	//if day of week' add days to today until weekday matches input  	//if today is the specified weekday' due date will be in one week  	do {  		count++;  		due = due.AddDays (1);  		isValid = string.Equals (due.ToString ("dddd"' new CultureInfo ("en-US"))' sPostpone' StringComparison.CurrentCultureIgnoreCase);  	} while (!isValid && (count < 7));  	// The count check is to prevent an endless loop in case of other culture.  	return count;  }  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,ShowPostponeDialog,The following statement contains a magic number: do {  	count++;  	due = due.AddDays (1);  	isValid = string.Equals (due.ToString ("dddd"' new CultureInfo ("en-US"))' sPostpone' StringComparison.CurrentCultureIgnoreCase);  } while (!isValid && (count < 7));  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,AddCalendarToTitle,The following statement contains a magic number: if (title.Length < 15) {  	title += "       Calendar:  ";  	for (double i = 0; i < 7; i++) {  		var today = DateTime.Now.AddDays (i).ToString ("MM-dd");  		var today_letter = DateTime.Now.AddDays (i).DayOfWeek.ToString ();  		today_letter = today_letter.Remove (2);  		title += "  " + today_letter + ":" + today;  	}  } else {  	title = "todotxt.net";  }  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,AddCalendarToTitle,The following statement contains a magic number: if (title.Length < 15) {  	title += "       Calendar:  ";  	for (double i = 0; i < 7; i++) {  		var today = DateTime.Now.AddDays (i).ToString ("MM-dd");  		var today_letter = DateTime.Now.AddDays (i).DayOfWeek.ToString ();  		today_letter = today_letter.Remove (2);  		title += "  " + today_letter + ":" + today;  	}  } else {  	title = "todotxt.net";  }  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,AddCalendarToTitle,The following statement contains a magic number: if (title.Length < 15) {  	title += "       Calendar:  ";  	for (double i = 0; i < 7; i++) {  		var today = DateTime.Now.AddDays (i).ToString ("MM-dd");  		var today_letter = DateTime.Now.AddDays (i).DayOfWeek.ToString ();  		today_letter = today_letter.Remove (2);  		title += "  " + today_letter + ":" + today;  	}  } else {  	title = "todotxt.net";  }  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,AddCalendarToTitle,The following statement contains a magic number: for (double i = 0; i < 7; i++) {  	var today = DateTime.Now.AddDays (i).ToString ("MM-dd");  	var today_letter = DateTime.Now.AddDays (i).DayOfWeek.ToString ();  	today_letter = today_letter.Remove (2);  	title += "  " + today_letter + ":" + today;  }  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,AddCalendarToTitle,The following statement contains a magic number: for (double i = 0; i < 7; i++) {  	var today = DateTime.Now.AddDays (i).ToString ("MM-dd");  	var today_letter = DateTime.Now.AddDays (i).DayOfWeek.ToString ();  	today_letter = today_letter.Remove (2);  	title += "  " + today_letter + ":" + today;  }  
Magic Number,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,AddCalendarToTitle,The following statement contains a magic number: today_letter = today_letter.Remove (2);  
Magic Number,Client,FileChangeObserver,F:\newReposMay17\benrhughes_todotxt.net\Client\FileChangeObserver.cs,FileChange,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,Client,App,F:\newReposMay17\benrhughes_todotxt.net\Client\Controls\App.xaml.cs,IsXP,The following statement contains a magic number: return os.Platform == PlatformID.Win32NT && vs.Major == 5 && vs.Minor != 0;  
Missing Default,Client,IntellisenseTextBox,F:\newReposMay17\benrhughes_todotxt.net\Client\Controls\IntellisenseTextBox.cs,Intellisense_PreviewKeyUp,The following switch statement is missing a default case: switch (e.Key) {  case Key.Enter:  case Key.Tab:  case Key.Space:  	InsertIntellisenseText ();  	e.Handled = true;  	break;  case Key.Escape:  	HideIntellisensePopup ();  	this.CaretIndex = this.Text.Length;  	this.Focus ();  	e.Handled = true;  	break;  }  
Missing Default,Client,IntellisenseTextBox,F:\newReposMay17\benrhughes_todotxt.net\Client\Controls\IntellisenseTextBox.cs,IntellisenseTextBox_TextChanged,The following switch statement is missing a default case: switch (lastAddedCharacter) {  case "+":  	this.IntelliPos = this.CaretIndex - 1;  	ShowIntellisensePopup (this.TaskList.Projects' this.GetRectFromCharacterIndex (this.IntelliPos));  	break;  case "@":  	this.IntelliPos = this.CaretIndex - 1;  	ShowIntellisensePopup (this.TaskList.Contexts' this.GetRectFromCharacterIndex (this.IntelliPos));  	break;  }  
Missing Default,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,UpdateDisplayedTasks,The following switch statement is missing a default case: switch (SortType) {  case SortType.Project:  	sortProperty = "Projects";  	break;  case SortType.Context:  	sortProperty = "Contexts";  	break;  case SortType.DueDate:  	sortProperty = "DueDate";  	break;  case SortType.Completed:  	sortProperty = "CompletedDate";  	break;  case SortType.Priority:  	sortProperty = "Priority";  	break;  case SortType.Created:  	sortProperty = "CreationDate";  	break;  }  
Missing Default,Client,MainWindowViewModel,F:\newReposMay17\benrhughes_todotxt.net\Client\MainWindowViewModel.cs,TaskTextPreviewKeyUp,The following switch statement is missing a default case: switch (e.Key) {  // In the task text box' the Escape key:   // 1. cancels updates  // 2. clears the text box if it is not empty  // 3. returns focus to the task list if the text box is empty  case Key.Escape:  	_updating = null;  	if (_window.taskText.Text == "") {  		GetSelectedTasks ();  		SetSelectedTasks ();  	} else {  		_window.taskText.Text = "";  	}  	break;  }  
