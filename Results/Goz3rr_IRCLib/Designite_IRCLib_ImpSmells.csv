Implementation smell,Namespace,Class,File,Method,Description
Complex Method,IRCLib,Client,C:\repos\Goz3rr_IRCLib\IRCLib\Client.cs,DataRecieved,Cyclomatic complexity of the method is 9
Complex Method,IRCLib.Data,Message,C:\repos\Goz3rr_IRCLib\IRCLib\Data\Message.cs,Message,Cyclomatic complexity of the method is 9
Long Statement,IRCLib,Client,C:\repos\Goz3rr_IRCLib\IRCLib\Client.cs,Connect,The length of the statement  "		Connection.Client.BeginReceive (_readBuffer' _readBufferIndex' _readBuffer.Length' SocketFlags.None' DataRecieved' null); " is 121.
Long Statement,IRCLib,Client,C:\repos\Goz3rr_IRCLib\IRCLib\Client.cs,DataRecieved,The length of the statement  "		Connection.Client.BeginReceive (_readBuffer' _readBufferIndex' _readBuffer.Length - _readBufferIndex' SocketFlags.None' DataRecieved' null); " is 140.
Magic Number,IRCLib,Client,C:\repos\Goz3rr_IRCLib\IRCLib\Client.cs,Client,The following statement contains a magic number: _readBuffer = new byte[1024];  
Magic Number,IRCLib,Client,C:\repos\Goz3rr_IRCLib\IRCLib\Client.cs,RetryNickname,The following statement contains a magic number: if (_usernameTries > 5) {  	if (Error != null) {  		Error.Invoke (this' new ErrorEventArgs (new NicknameInUseException (_usernameTries' User.NickName)));  	}  	return;  }  
Magic Number,IRCLib,Client,C:\repos\Goz3rr_IRCLib\IRCLib\Client.cs,RetryNickname,The following statement contains a magic number: if (_usernameTries < 4) {  	SendRaw ("NICK {0}-{1}"' User.NickName' _usernameTries);  }  else {  	SendRaw ("NICK {0}-{1}"' User.NickName.Substring (0' 7)' _usernameTries - 3);  }  
Magic Number,IRCLib,Client,C:\repos\Goz3rr_IRCLib\IRCLib\Client.cs,RetryNickname,The following statement contains a magic number: if (_usernameTries < 4) {  	SendRaw ("NICK {0}-{1}"' User.NickName' _usernameTries);  }  else {  	SendRaw ("NICK {0}-{1}"' User.NickName.Substring (0' 7)' _usernameTries - 3);  }  
Magic Number,IRCLib,Client,C:\repos\Goz3rr_IRCLib\IRCLib\Client.cs,RetryNickname,The following statement contains a magic number: if (_usernameTries < 4) {  	SendRaw ("NICK {0}-{1}"' User.NickName' _usernameTries);  }  else {  	SendRaw ("NICK {0}-{1}"' User.NickName.Substring (0' 7)' _usernameTries - 3);  }  
Magic Number,IRCLib,Client,C:\repos\Goz3rr_IRCLib\IRCLib\Client.cs,RetryNickname,The following statement contains a magic number: SendRaw ("NICK {0}-{1}"' User.NickName.Substring (0' 7)' _usernameTries - 3);  
Magic Number,IRCLib,Client,C:\repos\Goz3rr_IRCLib\IRCLib\Client.cs,RetryNickname,The following statement contains a magic number: SendRaw ("NICK {0}-{1}"' User.NickName.Substring (0' 7)' _usernameTries - 3);  
Magic Number,IRCLib,Client,C:\repos\Goz3rr_IRCLib\IRCLib\Client.cs,DataRecieved,The following statement contains a magic number: while (length > 0) {  	int messageLength = Array.IndexOf (_readBuffer' (byte)'\n'' 0' length);  	if (messageLength == -1) {  		_readBufferIndex = length;  		break;  	}  	messageLength++;  	string rawMessage = Encoding.UTF8.GetString (_readBuffer' 0' messageLength - 2);  	if (RawMessageReceived != null) {  		RawMessageReceived.Invoke (this' new RawMessageEventArgs (rawMessage));  	}  	Message message = new Message (rawMessage);  	if (_handlers.ContainsKey (message.Command.ToUpper ())) {  		_handlers [message.Command.ToUpper ()] (this' message);  	}  	else {  		Debug.WriteLine (String.Format ("Missing handler for command {0} ({1})"' message.Command.ToUpper ()' message.RawData));  	}  	if (MessageReceived != null) {  		MessageReceived.Invoke (this' new ProcessedMessageEventArgs (message));  	}  	Array.Copy (_readBuffer' messageLength' _readBuffer' 0' length - messageLength);  	length -= messageLength;  }  
