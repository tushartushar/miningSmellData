Implementation smell,Namespace,Class,File,Method,Description
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.AppendixB.ListingB_01,TicTacToeGame,C:\repos\IntelliTect_EssentialCSharp\src\ChapterAppB\TicTacToe.cs,Main,The following statement contains a magic number: for(int turn = 1; turn <= 10; ++turn)              {                  DisplayBoard(playerPositions);                    #region Check for End Game                  if(EndGame(winner' turn' input))                  {                      break;                  }                  #endregion Check for End Game                    input = NextMove(playerPositions' currentPlayer);                    winner = DetermineWinner(playerPositions);                    // Switch players.                  currentPlayer = (currentPlayer == 2) ? 1 : 2;              }
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.AppendixB.ListingB_01,TicTacToeGame,C:\repos\IntelliTect_EssentialCSharp\src\ChapterAppB\TicTacToe.cs,Main,The following statement contains a magic number: for(int turn = 1; turn <= 10; ++turn)              {                  DisplayBoard(playerPositions);                    #region Check for End Game                  if(EndGame(winner' turn' input))                  {                      break;                  }                  #endregion Check for End Game                    input = NextMove(playerPositions' currentPlayer);                    winner = DetermineWinner(playerPositions);                    // Switch players.                  currentPlayer = (currentPlayer == 2) ? 1 : 2;              }
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.AppendixB.ListingB_01,TicTacToeGame,C:\repos\IntelliTect_EssentialCSharp\src\ChapterAppB\TicTacToe.cs,Main,The following statement contains a magic number: for(int turn = 1; turn <= 10; ++turn)              {                  DisplayBoard(playerPositions);                    #region Check for End Game                  if(EndGame(winner' turn' input))                  {                      break;                  }                  #endregion Check for End Game                    input = NextMove(playerPositions' currentPlayer);                    winner = DetermineWinner(playerPositions);                    // Switch players.                  currentPlayer = (currentPlayer == 2) ? 1 : 2;              }
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.AppendixB.ListingB_01,TicTacToeGame,C:\repos\IntelliTect_EssentialCSharp\src\ChapterAppB\TicTacToe.cs,EndGame,The following statement contains a magic number: if(winner > 0)              {                  System.Console.WriteLine($"\nPlayer {winner} has won!!!!");                  endGame = true;              }              else if(turn == 10)              {                  // After completing the 10th display of the                  // board' exit rather than prompting the                  // user again.                  System.Console.WriteLine("\nThe game was a tie!");                  endGame = true;              }              else if(input == "" || input == "quit")              {                  // Check if user quit by hitting Enter without                   // any characters or by typing "quit".                  System.Console.WriteLine("The last player quit");                  endGame = true;              }
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.AppendixB.ListingB_01,TicTacToeGame,C:\repos\IntelliTect_EssentialCSharp\src\ChapterAppB\TicTacToe.cs,DetermineWinner,The following statement contains a magic number: int[] winningMasks = {            7' 56' 448' 73' 146' 292' 84' 273};
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.AppendixB.ListingB_01,TicTacToeGame,C:\repos\IntelliTect_EssentialCSharp\src\ChapterAppB\TicTacToe.cs,DetermineWinner,The following statement contains a magic number: int[] winningMasks = {            7' 56' 448' 73' 146' 292' 84' 273};
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.AppendixB.ListingB_01,TicTacToeGame,C:\repos\IntelliTect_EssentialCSharp\src\ChapterAppB\TicTacToe.cs,DetermineWinner,The following statement contains a magic number: int[] winningMasks = {            7' 56' 448' 73' 146' 292' 84' 273};
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.AppendixB.ListingB_01,TicTacToeGame,C:\repos\IntelliTect_EssentialCSharp\src\ChapterAppB\TicTacToe.cs,DetermineWinner,The following statement contains a magic number: int[] winningMasks = {            7' 56' 448' 73' 146' 292' 84' 273};
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.AppendixB.ListingB_01,TicTacToeGame,C:\repos\IntelliTect_EssentialCSharp\src\ChapterAppB\TicTacToe.cs,DetermineWinner,The following statement contains a magic number: int[] winningMasks = {            7' 56' 448' 73' 146' 292' 84' 273};
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.AppendixB.ListingB_01,TicTacToeGame,C:\repos\IntelliTect_EssentialCSharp\src\ChapterAppB\TicTacToe.cs,DetermineWinner,The following statement contains a magic number: int[] winningMasks = {            7' 56' 448' 73' 146' 292' 84' 273};
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.AppendixB.ListingB_01,TicTacToeGame,C:\repos\IntelliTect_EssentialCSharp\src\ChapterAppB\TicTacToe.cs,DetermineWinner,The following statement contains a magic number: int[] winningMasks = {            7' 56' 448' 73' 146' 292' 84' 273};
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.AppendixB.ListingB_01,TicTacToeGame,C:\repos\IntelliTect_EssentialCSharp\src\ChapterAppB\TicTacToe.cs,DetermineWinner,The following statement contains a magic number: int[] winningMasks = {            7' 56' 448' 73' 146' 292' 84' 273};
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.AppendixB.ListingB_01,TicTacToeGame,C:\repos\IntelliTect_EssentialCSharp\src\ChapterAppB\TicTacToe.cs,DetermineWinner,The following statement contains a magic number: foreach(int mask in winningMasks)              {                  if((mask & playerPositions[0]) == mask)                  {                      winner = 1;                      break;                  }                  else if((mask & playerPositions[1]) == mask)                  {                      winner = 2;                      break;                  }              }
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.AppendixB.ListingB_01,TicTacToeGame,C:\repos\IntelliTect_EssentialCSharp\src\ChapterAppB\TicTacToe.cs,DisplayBoard,The following statement contains a magic number: for(int position = 1;                   position <= 256;                   position <<= 1' border++)              {                  char token = CalculateToken(                      playerPositions' position);                    // Write out a cell value and the border that                   // comes after it.                  System.Console.Write($" {token} {borders[border]}");              }
