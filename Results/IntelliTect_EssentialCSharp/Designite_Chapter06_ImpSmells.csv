Implementation smell,Namespace,Class,File,Method,Description
Long Method,AddisonWesley.Michaelis.EssentialCSharp.Shared,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Shared\Program.cs,Main,The method has 117 lines of code.
Long Statement,AddisonWesley.Michaelis.EssentialCSharp.Chapter06.Listing06_42,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter06\Listing06.42.StaticCopyMethodForDirectoryInfo.cs,Main,The length of the statement  "                SearchOption.TopDirectoryOnly' "*");//Extension method. Is Defined below but appears to be a member of the DirectoryInfo object' directory' defined aboves        " is 154.
Long Statement,AddisonWesley.Michaelis.EssentialCSharp.Shared,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Shared\Program.cs,Main,The length of the statement  "                Console.Write($"Enter the listing number to execute (e.g. For Listing {chapterNumber}.1 enter \"{chapterNumber}.1\"): "); " is 121.
Long Statement,AddisonWesley.Michaelis.EssentialCSharp.Shared,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Shared\Program.cs,Main,The length of the statement  "                Console.WriteLine(string.Format("Error' could not run the Listing '{0}'' please make sure it is a valid listing and in the correct format"' listing)); " is 150.
Long Statement,AddisonWesley.Michaelis.EssentialCSharp.Shared,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Shared\Program.cs,GetArguments,The length of the statement  "                "Listing uses arguments for main method provided by user. Please see the listing and enter arguments or hit enter to pass in null: "); " is 134.
Long Statement,AddisonWesley.Michaelis.EssentialCSharp.Shared,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Shared\Program.cs,ParseListingName,The length of the statement  "                if (index == startPosition && string.IsNullOrEmpty(chapterName)) chapterName = "Chapter" + chapterListing[index].PadLeft(2' '0'); " is 129.
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter06.Listing06_21,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter06\Listing06.21.DefiningReadOnlyProperties.cs,Main,The following statement contains a magic number: employee1.Initialize(42);
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter06.Listing06_23,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter06\Listing06.23.PlacingAccessModifiersOnSetters.cs,Main,The following statement contains a magic number: employee1.Initialize(42);
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter06.Listing06_37,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter06\Listing06.37.AccessingAStaticField.cs,Main,The following statement contains a magic number: Employee.NextId = 1000000;
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter06.Listing06_39,Employee,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter06\Listing06.39.DeclaringAStaticConstructor.cs,Employee,The following statement contains a magic number: NextId = randomGenerator.Next(101' 999);
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter06.Listing06_39,Employee,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter06\Listing06.39.DeclaringAStaticConstructor.cs,Employee,The following statement contains a magic number: NextId = randomGenerator.Next(101' 999);
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter06.Listing06_45,TicTacToeBoardPreCSharp5,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter06\Listing06.45.DeclaringAReadonlyFieldOfATypeWithNoLiteralValues.cs,TicTacToeBoardPreCSharp5,The following statement contains a magic number: _Cells = new bool[2' 3' 3];
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter06.Listing06_45,TicTacToeBoardPreCSharp5,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter06\Listing06.45.DeclaringAReadonlyFieldOfATypeWithNoLiteralValues.cs,TicTacToeBoardPreCSharp5,The following statement contains a magic number: _Cells = new bool[2' 3' 3];
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter06.Listing06_45,TicTacToeBoardPreCSharp5,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter06\Listing06.45.DeclaringAReadonlyFieldOfATypeWithNoLiteralValues.cs,TicTacToeBoardPreCSharp5,The following statement contains a magic number: _Cells = new bool[2' 3' 3];
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter06.Listing06_46,CommandLine,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter06\Listing06.46.DefiningANestedClass.cs,CommandLine,The following statement contains a magic number: switch(argumentCounter)                      {                          case 0:                              Action = arguments[0].ToLower();                              break;                          case 1:                              Id = arguments[1];                              break;                          case 2:                              FirstName = arguments[2];                              break;                          case 3:                              LastName = arguments[3];                              break;                      }
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter06.Listing06_46,CommandLine,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter06\Listing06.46.DefiningANestedClass.cs,CommandLine,The following statement contains a magic number: switch(argumentCounter)                      {                          case 0:                              Action = arguments[0].ToLower();                              break;                          case 1:                              Id = arguments[1];                              break;                          case 2:                              FirstName = arguments[2];                              break;                          case 3:                              LastName = arguments[3];                              break;                      }
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter06.Listing06_46,CommandLine,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter06\Listing06.46.DefiningANestedClass.cs,CommandLine,The following statement contains a magic number: switch(argumentCounter)                      {                          case 0:                              Action = arguments[0].ToLower();                              break;                          case 1:                              Id = arguments[1];                              break;                          case 2:                              FirstName = arguments[2];                              break;                          case 3:                              LastName = arguments[3];                              break;                      }
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter06.Listing06_46,CommandLine,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter06\Listing06.46.DefiningANestedClass.cs,CommandLine,The following statement contains a magic number: switch(argumentCounter)                      {                          case 0:                              Action = arguments[0].ToLower();                              break;                          case 1:                              Id = arguments[1];                              break;                          case 2:                              FirstName = arguments[2];                              break;                          case 3:                              LastName = arguments[3];                              break;                      }
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Shared,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Shared\Program.cs,ParseListingName,The following statement contains a magic number: chapterName = "Chapter" + chapterListing[index].PadLeft(2' '0');
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Shared,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Shared\Program.cs,ParseListingName,The following statement contains a magic number: listing += chapterListing[index].PadLeft(2' '0')                              + ((index+1 != chapterListing.Length) ? "." : "");
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Shared,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Shared\Program.cs,ParseListingName,The following statement contains a magic number: listing = $"{parts[0]}.{parts[1]}To{string.Join('.'' parts.Skip(3))}";
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Shared,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Shared\Program.cs,ParseListingName,The following statement contains a magic number: parts.Length > 2
Missing Default,AddisonWesley.Michaelis.EssentialCSharp.Chapter06.Listing06_46,CommandLine,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter06\Listing06.46.DefiningANestedClass.cs,CommandLine,The following switch statement is missing a default case: switch(argumentCounter)                      {                          case 0:                              Action = arguments[0].ToLower();                              break;                          case 1:                              Id = arguments[1];                              break;                          case 2:                              FirstName = arguments[2];                              break;                          case 3:                              LastName = arguments[3];                              break;                      }
Missing Default,AddisonWesley.Michaelis.EssentialCSharp.Chapter06.Listing06_48,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter06\Listing06.48.DefiningANestedClassInASeperatePartialClass.cs,Main,The following switch statement is missing a default case: switch(commandLine.Action)              {                  // ...              }
