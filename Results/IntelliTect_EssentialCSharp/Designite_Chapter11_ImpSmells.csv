Implementation smell,Namespace,Class,File,Method,Description
Long Method,AddisonWesley.Michaelis.EssentialCSharp.Shared,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Shared\Program.cs,Main,The method has 117 lines of code.
Long Statement,AddisonWesley.Michaelis.EssentialCSharp.Shared,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Shared\Program.cs,Main,The length of the statement  "                Console.Write($"Enter the listing number to execute (e.g. For Listing {chapterNumber}.1 enter \"{chapterNumber}.1\"): "); " is 121.
Long Statement,AddisonWesley.Michaelis.EssentialCSharp.Shared,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Shared\Program.cs,Main,The length of the statement  "                Console.WriteLine(string.Format("Error' could not run the Listing '{0}'' please make sure it is a valid listing and in the correct format"' listing)); " is 150.
Long Statement,AddisonWesley.Michaelis.EssentialCSharp.Shared,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Shared\Program.cs,GetArguments,The length of the statement  "                "Listing uses arguments for main method provided by user. Please see the listing and enter arguments or hit enter to pass in null: "); " is 134.
Long Statement,AddisonWesley.Michaelis.EssentialCSharp.Shared,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Shared\Program.cs,ParseListingName,The length of the statement  "                if (index == startPosition && string.IsNullOrEmpty(chapterName)) chapterName = "Chapter" + chapterListing[index].PadLeft(2' '0'); " is 129.
Empty Catch Block,AddisonWesley.Michaelis.EssentialCSharp.Chapter11.Listing11_02,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter11\Listing11.02.CatchingDifferentExceptionTypes.cs,Main,The method has an empty catch block.
Empty Catch Block,AddisonWesley.Michaelis.EssentialCSharp.Chapter11.Listing11_02,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter11\Listing11.02.CatchingDifferentExceptionTypes.cs,Main,The method has an empty catch block.
Empty Catch Block,AddisonWesley.Michaelis.EssentialCSharp.Chapter11.Listing11_02,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter11\Listing11.02.CatchingDifferentExceptionTypes.cs,Main,The method has an empty catch block.
Empty Catch Block,AddisonWesley.Michaelis.EssentialCSharp.Chapter11.Listing11_02,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter11\Listing11.02.CatchingDifferentExceptionTypes.cs,Main,The method has an empty catch block.
Empty Catch Block,AddisonWesley.Michaelis.EssentialCSharp.Chapter11.Listing11_02,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter11\Listing11.02.CatchingDifferentExceptionTypes.cs,Main,The method has an empty catch block.
Empty Catch Block,AddisonWesley.Michaelis.EssentialCSharp.Chapter11.Listing11_04,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter11\Listing11.04.CatchingAnyException.cs,Main,The method has an empty catch block.
Empty Catch Block,AddisonWesley.Michaelis.EssentialCSharp.Chapter11.Listing11_04,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter11\Listing11.04.CatchingAnyException.cs,Main,The method has an empty catch block.
Empty Catch Block,AddisonWesley.Michaelis.EssentialCSharp.Chapter11.Listing11_04,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter11\Listing11.04.CatchingAnyException.cs,Main,The method has an empty catch block.
Empty Catch Block,AddisonWesley.Michaelis.EssentialCSharp.Chapter11.Listing11_04,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter11\Listing11.04.CatchingAnyException.cs,Main,The method has an empty catch block.
Empty Catch Block,AddisonWesley.Michaelis.EssentialCSharp.Chapter11.Listing11_04,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter11\Listing11.04.CatchingAnyException.cs,Main,The method has an empty catch block.
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter11.Listing11_02,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter11\Listing11.02.CatchingDifferentExceptionTypes.cs,Main,The following statement contains a magic number: throw new Win32Exception(42);
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter11.Listing11_03,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter11\Listing11.03.UsingExceptionDispatchInfoToRethrowException.cs,Main,The following statement contains a magic number: !task.Wait(100)
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter11.Listing11_03,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter11\Listing11.03.UsingExceptionDispatchInfoToRethrowException.cs,FormatBytes,The following statement contains a magic number: long max =                  (long)Math.Pow(1024' magnitudes.Length);
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter11.Listing11_03,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Chapter11\Listing11.03.UsingExceptionDispatchInfoToRethrowException.cs,FormatBytes,The following statement contains a magic number: return string.Format("{1:##.##} {0}"'                  magnitudes.FirstOrDefault(                      magnitude =>                          bytes > (max /= 1024)) ?? "0 Bytes"'                      (decimal)bytes / (decimal)max).Trim();
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Shared,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Shared\Program.cs,ParseListingName,The following statement contains a magic number: chapterName = "Chapter" + chapterListing[index].PadLeft(2' '0');
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Shared,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Shared\Program.cs,ParseListingName,The following statement contains a magic number: listing += chapterListing[index].PadLeft(2' '0')                              + ((index+1 != chapterListing.Length) ? "." : "");
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Shared,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Shared\Program.cs,ParseListingName,The following statement contains a magic number: listing = $"{parts[0]}.{parts[1]}To{string.Join('.'' parts.Skip(3))}";
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Shared,Program,D:\research\architectureSmells\repos\IntelliTect_EssentialCSharp\src\Shared\Program.cs,ParseListingName,The following statement contains a magic number: parts.Length > 2
