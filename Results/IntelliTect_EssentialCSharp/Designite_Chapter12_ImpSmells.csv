Implementation smell,Namespace,Class,File,Method,Description
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter12.Listing12_07,DelegateSample,C:\repos\IntelliTect_EssentialCSharp\src\Chapter12\Listing12.07.UsingMethodNameAsArgument.cs,ChapterMain,The following statement contains a magic number: int[] items = new int[5];
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter12.Listing12_08,DelegateSample,C:\repos\IntelliTect_EssentialCSharp\src\Chapter12\Listing12.08.PassingADelegateInstanceAsAParameterInCSharp.cs,ChapterMain,The following statement contains a magic number: int[] items = new int[100];
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter12.Listing12_10,DelegateSample,C:\repos\IntelliTect_EssentialCSharp\src\Chapter12\Listing12.10.UsingADifferentComparisonHandlerCompatibleMethod.cs,ChapterMain,The following statement contains a magic number: int[] items = new int[5];
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter12.Listing12_11,DelegateSample,C:\repos\IntelliTect_EssentialCSharp\src\Chapter12\Listing12.11.CreatingDelegateWithStatementLambda.cs,ChapterMain,The following statement contains a magic number: int[] items = new int[5];
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter12.Listing12_12,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter12\Listing12.12.OmittingParameterTypesFromStatementLambdas.cs,ChapterMain,The following statement contains a magic number: int[] items = new int[5];
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter12.Listing12_13,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter12\Listing12.13.StatementLambdasWithASingleInputParameter.cs,ChapterMain,The following statement contains a magic number: IEnumerable<Process> processes = Process.GetProcesses().Where(                  process => { return process.WorkingSet64 > 1000000000; });
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter12.Listing12_15,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter12\Listing12.15.PassingADelegateWithAnExpressionLambda.cs,ChapterMain,The following statement contains a magic number: int[] items = new int[5];
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter12.Listing12_15__,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter12\Listing12.15__.PassingADelegateWithAStatementLambda.cs,ChapterMain,The following statement contains a magic number: int[] items = new int[5];
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter12.Listing12_16,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter12\Listing12.16.PassingAnAnonymousMethod.cs,ChapterMain,The following statement contains a magic number: int[] items = new int[5];
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter12.Listing12_19,DelegateSample,C:\repos\IntelliTect_EssentialCSharp\src\Chapter12\Listing12.19.CSharpEquivalentOfCILGeneratedByTheCompilerForLambdaExpressions.cs,ChapterMain,The following statement contains a magic number: int[] items = new int[5];
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter12.Listing12_20,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter12\Listing12.20.UsingAnOuterVariableInALambdaExpression.cs,ChapterMain,The following statement contains a magic number: int[] items = new int[5];
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter12.Listing12_21,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter12\Listing12.21.CSharpEquivalentOfCILCodeGeneratedByCompilerForOuterVariables.cs,ChapterMain,The following statement contains a magic number: int[] items = new int[5];
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter12.Listing12_25,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter12\Listing12.25.ExamingingAnExpressTree.cs,PrintSingle,The following statement contains a magic number: Console.WriteLine("{0'" + indent * 5 + "}{1}"'                ""' NodeToString(expression));
Missing Default,AddisonWesley.Michaelis.EssentialCSharp.Chapter12.Listing12_02,SimpleSort2,C:\repos\IntelliTect_EssentialCSharp\src\Chapter12\Listing12.02.BubbleSortMethodAscendingOrDescending.cs,BubbleSort,The following switch statement is missing a default case: switch(sortOrder)                      {                          case SortType.Ascending:                              swap = items[j - 1] > items[j];                              break;                            case SortType.Descending:                              swap = items[j - 1] < items[j];                              break;                      }
