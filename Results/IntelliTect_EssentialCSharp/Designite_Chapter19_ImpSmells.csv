Implementation smell,Namespace,Class,File,Method,Description
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter19.Listing19_13,Pomodoro,C:\repos\IntelliTect_EssentialCSharp\src\Chapter19\Listing19.13.TaskDelayAsTimer.cs,TickAsync,The following statement contains a magic number: for(int minute = 0; minute < 25; minute++)              {                  DisplayMinuteTicker(minute);                  for(int second = 0; second < 60; second++)                  {                      await Task.Delay(1000);                      if(token.IsCancellationRequested)                          break;                      DisplaySecondTicker();                  }                  if(token.IsCancellationRequested)                      break;              }
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter19.Listing19_13,Pomodoro,C:\repos\IntelliTect_EssentialCSharp\src\Chapter19\Listing19.13.TaskDelayAsTimer.cs,TickAsync,The following statement contains a magic number: for(int minute = 0; minute < 25; minute++)              {                  DisplayMinuteTicker(minute);                  for(int second = 0; second < 60; second++)                  {                      await Task.Delay(1000);                      if(token.IsCancellationRequested)                          break;                      DisplaySecondTicker();                  }                  if(token.IsCancellationRequested)                      break;              }
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter19.Listing19_13,Pomodoro,C:\repos\IntelliTect_EssentialCSharp\src\Chapter19\Listing19.13.TaskDelayAsTimer.cs,TickAsync,The following statement contains a magic number: for(int minute = 0; minute < 25; minute++)              {                  DisplayMinuteTicker(minute);                  for(int second = 0; second < 60; second++)                  {                      await Task.Delay(1000);                      if(token.IsCancellationRequested)                          break;                      DisplaySecondTicker();                  }                  if(token.IsCancellationRequested)                      break;              }
