Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_18,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.18.CustomMethodWithProgressSupport.cs,RunProcessAsync,The method has 5 parameters. Parameters: fileName' arguments' cancellationToken' progress' objectState
Empty Catch Block,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_13,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.13.SynchronousWebRequest.cs,ChapterMain,The method has an empty catch block.
Empty Catch Block,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_13,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.13.SynchronousWebRequest.cs,ChapterMain,The method has an empty catch block.
Empty Catch Block,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_13,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.13.SynchronousWebRequest.cs,ChapterMain,The method has an empty catch block.
Empty Catch Block,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_14,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.14.AsynchronousWebRequest.cs,ChapterMain,The method has an empty catch block.
Empty Catch Block,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_14,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.14.AsynchronousWebRequest.cs,ChapterMain,The method has an empty catch block.
Empty Catch Block,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_14,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.14.AsynchronousWebRequest.cs,ChapterMain,The method has an empty catch block.
Empty Catch Block,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_15,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.15.AsynchronousWebRequestUsingTaskAsynchronyPattern.cs,WriteWebRequestSizeAsync,The method has an empty catch block.
Empty Catch Block,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_15,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.15.AsynchronousWebRequestUsingTaskAsynchronyPattern.cs,WriteWebRequestSizeAsync,The method has an empty catch block.
Empty Catch Block,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_15,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.15.AsynchronousWebRequestUsingTaskAsynchronyPattern.cs,WriteWebRequestSizeAsync,The method has an empty catch block.
Empty Catch Block,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_28,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.28.CancelingParallelLoop.cs,EncryptFiles,The method has an empty catch block.
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_02,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.02.UsingThreadPool.cs,ChapterMain,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_03,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.03.InvokingAnAsynchronousTask.cs,ChapterMain,The following statement contains a magic number: const int repetitions = 10000;
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_04,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.04.PollingATask.cs,ChapterMain,The following statement contains a magic number: Task<string> task =                  Task.Run<string>(                      () => PiCalculator.Calculate(100));
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_06,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.06.RegisteringForNotificationsWithContinueWith.cs,ChapterMain,The following statement contains a magic number: Task<string> task =                  Task.Run<string>(                      () => PiCalculator.Calculate(10));
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_13,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.13.SynchronousWebRequest.cs,FormatBytes,The following statement contains a magic number: long max =                  (long)Math.Pow(1024' magnitudes.Length);
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_13,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.13.SynchronousWebRequest.cs,FormatBytes,The following statement contains a magic number: return string.Format("{1:##.##} {0}"'                  magnitudes.FirstOrDefault(                      magnitude =>                          bytes > (max /= 1024)) ?? "0 Bytes"'                      (decimal)bytes / (decimal)max);
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_14,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.14.AsynchronousWebRequest.cs,ChapterMain,The following statement contains a magic number: try              {                  while(!task.Wait(100))                  {                      Console.Write(".");                  }              }              catch(AggregateException exception)              {                  exception = exception.Flatten();                  try                  {                      exception.Handle(innerException =>                      {                          // Rethrowing rather than using                          // if condition on the type.                          ExceptionDispatchInfo.Capture(                                                exception.InnerException)                                                .Throw();                          return true;                      });                  }                  catch(WebException)                  {                      // ...                  }                  catch(IOException)                  {                      // ...                  }                  catch(NotSupportedException)                  {                      // ...                  }              }
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_14,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.14.AsynchronousWebRequest.cs,FormatBytes,The following statement contains a magic number: long max =                  (long)Math.Pow(1024' magnitudes.Length);
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_14,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.14.AsynchronousWebRequest.cs,FormatBytes,The following statement contains a magic number: return string.Format("{1:##.##} {0}"'                  magnitudes.FirstOrDefault(                      magnitude =>                          bytes > (max /= 1024)) ?? "0 Bytes"'                      (decimal)bytes / (decimal)max).Trim();
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_15,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.15.AsynchronousWebRequestUsingTaskAsynchronyPattern.cs,ChapterMain,The following statement contains a magic number: while(!task.Wait(100))              {                  Console.Write(".");              }
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_15,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.15.AsynchronousWebRequestUsingTaskAsynchronyPattern.cs,FormatBytes,The following statement contains a magic number: long max =                  (long)Math.Pow(1024' magnitudes.Length);
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_15,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.15.AsynchronousWebRequestUsingTaskAsynchronyPattern.cs,FormatBytes,The following statement contains a magic number: return string.Format("{1:##.##} {0}"'                  magnitudes.FirstOrDefault(                      magnitude =>                          bytes > (max /= 1024)) ?? "0 Bytes"'                      (decimal)bytes / (decimal)max).Trim();
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_16,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.16.AsynchronousAsALambda.cs,ChapterMain,The following statement contains a magic number: while(!task.Wait(100))              {                  Console.Write(".");              }
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_16,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.16.AsynchronousAsALambda.cs,FormatBytes,The following statement contains a magic number: long max =                  (long)Math.Pow(1024' magnitudes.Length);
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_16,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.16.AsynchronousAsALambda.cs,FormatBytes,The following statement contains a magic number: return string.Format("{1:##.##} {0}"'                  magnitudes.FirstOrDefault(                      magnitude =>                          bytes > (max /= 1024)) ?? "0 Bytes"'                      (decimal)bytes / (decimal)max).Trim();
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_33,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.33.CancelingParallelLoop.cs,ParallelEncrypt,The following statement contains a magic number: return data.AsParallel().WithCancellation(                  cancellationToken).Select(                      (item) =>                      {                          if (Interlocked.CompareExchange(ref govener' 0' 100) % 100 == 0)                          {                              Console.Write('.');                          }                          Interlocked.Increment(ref govener);                          return Encrypt(item);                      }).ToList();
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_33,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.33.CancelingParallelLoop.cs,ParallelEncrypt,The following statement contains a magic number: return data.AsParallel().WithCancellation(                  cancellationToken).Select(                      (item) =>                      {                          if (Interlocked.CompareExchange(ref govener' 0' 100) % 100 == 0)                          {                              Console.Write('.');                          }                          Interlocked.Increment(ref govener);                          return Encrypt(item);                      }).ToList();
Magic Number,AddisonWesley.Michaelis.EssentialCSharp.Chapter18.Listing18_33,Program,C:\repos\IntelliTect_EssentialCSharp\src\Chapter18\Listing18.33.CancelingParallelLoop.cs,ChapterMain,The following statement contains a magic number: List<string> data = Utility.GetData(100000).ToList();
