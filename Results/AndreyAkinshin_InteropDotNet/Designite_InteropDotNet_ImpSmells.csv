Implementation smell,Namespace,Class,File,Method,Description
Complex Method,InteropDotNet,InteropRuntimeImplementer,C:\repos\AndreyAkinshin_InteropDotNet\InteropDotNet\InteropRuntimeImplementer.cs,ImplementConstructor,Cyclomatic complexity of the method is 8
Long Parameter List,InteropDotNet,InteropRuntimeImplementer,C:\repos\AndreyAkinshin_InteropDotNet\InteropDotNet\InteropRuntimeImplementer.cs,DefineMethod,The method has 5 parameters. Parameters: typeBuilder' name' attributes' returnType' infoArray
Long Statement,InteropDotNet,InteropRuntimeImplementer,C:\repos\AndreyAkinshin_InteropDotNet\InteropDotNet\InteropRuntimeImplementer.cs,CreateInstance,The length of the statement  "            var assemblyBuilder = Thread.GetDomain().DefineDynamicAssembly(new AssemblyName(assemblyName)' AssemblyBuilderAccess.Run); " is 122.
Long Statement,InteropDotNet,InteropRuntimeImplementer,C:\repos\AndreyAkinshin_InteropDotNet\InteropDotNet\InteropRuntimeImplementer.cs,BuildMethods,The length of the statement  "                    throw new Exception(string.Format("Method '{0}' of interface '{1}' should be marked with the RuntimeDllImport attribute"' " is 121.
Long Statement,InteropDotNet,LibraryLoader,C:\repos\AndreyAkinshin_InteropDotNet\InteropDotNet\LibraryLoader.cs,LoadLibrary,The length of the statement  "                        throw new DllNotFoundException(string.Format("Failed to find library \"{0}\" for platform {1}."' fileName' platformName)); " is 122.
Long Statement,InteropDotNet,UnixLibraryLoaderLogic,C:\repos\AndreyAkinshin_InteropDotNet\InteropDotNet\UnixLibraryLoaderLogic.cs,LoadLibrary,The length of the statement  "                    LibraryLoaderTrace.TraceInformation("Successfully loaded native library \"{0}\"' handle = {1}."' fileName' libraryHandle); " is 122.
Long Statement,InteropDotNet,UnixLibraryLoaderLogic,C:\repos\AndreyAkinshin_InteropDotNet\InteropDotNet\UnixLibraryLoaderLogic.cs,LoadLibrary,The length of the statement  "                LibraryLoaderTrace.TraceError("Failed to load native library \"{0}\".\r\nLast Error:{1}\r\nCheck inner exception and\\or windows event log.\r\nInner Exception: {2}"' fileName' lastError' e.ToString()); " is 201.
Long Statement,InteropDotNet,WindowsLibraryLoaderLogic,C:\repos\AndreyAkinshin_InteropDotNet\InteropDotNet\WindowsLibraryLoaderLogic.cs,LoadLibrary,The length of the statement  "                    LibraryLoaderTrace.TraceInformation("Successfully loaded native library \"{0}\"' handle = {1}."' fileName' libraryHandle); " is 122.
Long Statement,InteropDotNet,WindowsLibraryLoaderLogic,C:\repos\AndreyAkinshin_InteropDotNet\InteropDotNet\WindowsLibraryLoaderLogic.cs,LoadLibrary,The length of the statement  "                LibraryLoaderTrace.TraceError("Failed to load native library \"{0}\".\r\nLast Error:{1}\r\nCheck inner exception and\\or windows event log.\r\nInner Exception: {2}"' fileName' lastError' e.ToString()); " is 201.
Long Statement,InteropDotNet,WindowsLibraryLoaderLogic,C:\repos\AndreyAkinshin_InteropDotNet\InteropDotNet\WindowsLibraryLoaderLogic.cs,FreeLibrary,The length of the statement  "                    LibraryLoaderTrace.TraceError("Failed to free native library with handle {0}.\r\nCheck windows event log."' libraryHandle); " is 123.
Long Statement,InteropDotNet,WindowsLibraryLoaderLogic,C:\repos\AndreyAkinshin_InteropDotNet\InteropDotNet\WindowsLibraryLoaderLogic.cs,FreeLibrary,The length of the statement  "                LibraryLoaderTrace.TraceError("Failed to free native library with handle {0}.\r\nLast Error:{1}\r\nCheck inner exception and\\or windows event log.\r\nInner Exception: {2}"' libraryHandle' lastError' e.ToString()); " is 214.
Long Statement,InteropDotNet,WindowsLibraryLoaderLogic,C:\repos\AndreyAkinshin_InteropDotNet\InteropDotNet\WindowsLibraryLoaderLogic.cs,GetProcAddress,The length of the statement  "                LibraryLoaderTrace.TraceError("Failed to free native library with handle {0}.\r\nLast Error:{1}\r\nCheck inner exception and\\or windows event log.\r\nInner Exception: {2}"' libraryHandle' lastError' e.ToString()); " is 214.
Magic Number,InteropDotNet,InteropRuntimeImplementer,C:\repos\AndreyAkinshin_InteropDotNet\InteropDotNet\InteropRuntimeImplementer.cs,ImplementMethodDelegate,The following statement contains a magic number: ctorBuilder.DefineParameter(2' ParameterAttributes.HasDefault' "method");
Magic Number,InteropDotNet,InteropRuntimeImplementer,C:\repos\AndreyAkinshin_InteropDotNet\InteropDotNet\InteropRuntimeImplementer.cs,LdArg,The following statement contains a magic number: switch (index)              {                  case 0:                      ilGen.Emit(OpCodes.Ldarg_0);                      break;                  case 1:                      ilGen.Emit(OpCodes.Ldarg_1);                      break;                  case 2:                      ilGen.Emit(OpCodes.Ldarg_2);                      break;                  case 3:                      ilGen.Emit(OpCodes.Ldarg_3);                      break;                  default:                      ilGen.Emit(OpCodes.Ldarg' index);                      break;              }
Magic Number,InteropDotNet,InteropRuntimeImplementer,C:\repos\AndreyAkinshin_InteropDotNet\InteropDotNet\InteropRuntimeImplementer.cs,LdArg,The following statement contains a magic number: switch (index)              {                  case 0:                      ilGen.Emit(OpCodes.Ldarg_0);                      break;                  case 1:                      ilGen.Emit(OpCodes.Ldarg_1);                      break;                  case 2:                      ilGen.Emit(OpCodes.Ldarg_2);                      break;                  case 3:                      ilGen.Emit(OpCodes.Ldarg_3);                      break;                  default:                      ilGen.Emit(OpCodes.Ldarg' index);                      break;              }
Magic Number,InteropDotNet,SystemManager,C:\repos\AndreyAkinshin_InteropDotNet\InteropDotNet\SystemManager.cs,GetOperatingSystem,The following statement contains a magic number: switch (pid)              {                  case (int)PlatformID.Win32NT:                  case (int)PlatformID.Win32S:                  case (int)PlatformID.Win32Windows:                  case (int)PlatformID.WinCE:                      return OperatingSystem.Windows;                  case (int)PlatformID.Unix:                  case 128:                      return OperatingSystem.Unix;                  case (int)PlatformID.MacOSX:                      return OperatingSystem.MacOSX;                  default:                      return OperatingSystem.Unknown;              }
