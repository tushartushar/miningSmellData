Implementation smell,Namespace,Class,File,Method,Description
Long Method,Prism.General.Automation,PrismRequest,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismRequest,The method has 131 lines of code.
Complex Method,Prism.General.Automation,PrismRequestProducer,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,Terminate,Cyclomatic complexity of the method is 14
Long Parameter List,Prism.General,IUnit,C:\repos\vulsim_prism-client\Common\Prism.General\Interfaces\IUnit.cs,Initialize,The method has 5 parameters.
Long Parameter List,Prism.General.Automation,PrismSubscribe,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismSubscribe,The method has 5 parameters.
Long Statement,Prism.General.Automation,PrismRequestProducer,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,GetGroupList,The length of the statement  "		RequestQueue.Enqueue (new PrismRequest.PrismRequestItem (PrismRequest.PrismRequestItem.PrismRequestMethod.GroupList' JsonConvert.SerializeObject (new PrismZmqGroupListReqPacket ())' null' cb)); " is 193.
Long Statement,Prism.General.Automation,PrismRequestProducer,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,GetChannelList,The length of the statement  "		RequestQueue.Enqueue (new PrismRequest.PrismRequestItem (PrismRequest.PrismRequestItem.PrismRequestMethod.ChannelList' JsonConvert.SerializeObject (new PrismZmqChannelListReqPacket (group))' group' cb)); " is 203.
Long Statement,Prism.General.Automation,PrismRequestProducer,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,ReadChannelValue,The length of the statement  "		RequestQueue.Enqueue (new PrismRequest.PrismRequestItem (PrismRequest.PrismRequestItem.PrismRequestMethod.ReadChannel' JsonConvert.SerializeObject (new PrismZmqReadChannelReqPacket (channel))' channel' cb)); " is 207.
Long Statement,Prism.General.Automation,PrismRequestProducer,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,WriteChannelValue,The length of the statement  "		RequestQueue.Enqueue (new PrismRequest.PrismRequestItem (PrismRequest.PrismRequestItem.PrismRequestMethod.WriteChannel' JsonConvert.SerializeObject (new PrismZmqWriteChannelReqPacket (value))' value' cb)); " is 205.
Virtual Method Call from Constructor,Prism.General.Automation,PrismRequest,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismRequest,The constructor "PrismRequest" calls a virtual method "Send".
Virtual Method Call from Constructor,Prism.General.Automation,PrismPoll,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismPoll,The constructor "PrismPoll" calls a virtual method "Send".
Empty Catch Block,Prism.General.Automation,PrismSubscribe,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismSubscribe,The method has an empty catch block.
Empty Catch Block,Prism.General.Automation,PrismSubscribe,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismSubscribe,The method has an empty catch block.
Empty Catch Block,Prism.General.Automation,PrismRequest,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismRequest,The method has an empty catch block.
Empty Catch Block,Prism.General.Automation,PrismRequest,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismRequest,The method has an empty catch block.
Empty Catch Block,Prism.General.Automation,PrismPoll,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismPoll,The method has an empty catch block.
Empty Catch Block,Prism.General.Automation,PrismPoll,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismPoll,The method has an empty catch block.
Magic Number,Prism.General.Automation,PrismSubscribe,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,CreateSocket,The following statement contains a magic number: Socket.Linger = new TimeSpan (0' 0' 5);  
Magic Number,Prism.General.Automation,PrismSubscribe,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,CreateSocket,The following statement contains a magic number: Socket.ReconnectIntervalMax = new TimeSpan (0' 0' 5);  
Magic Number,Prism.General.Automation,PrismSubscribe,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismSubscribe,The following statement contains a magic number: Worker = new Thread (delegate () {  	while (Worker.IsAlive && !StopRequest) {  		if (Socket == null) {  			try {  				Socket = this.CreateSocket (context' endpoint' groups);  			}  			catch (Exception e1) {  				try {  					Socket.Close ();  				}  				catch (Exception e2) {  				}  				Socket = null;  				Thread.Sleep (1000);  				continue;  			}  		}  		string data = null;  		string action = "";  		string json = "";  		try {  			data = Socket.Receive (Encoding.UTF8);  		}  		catch (SystemException e) {  			System.Diagnostics.Debug.WriteLine (e.ToString ());  			continue;  		}  		catch (ZmqSocketException e) {  			System.Diagnostics.Debug.WriteLine (e.ToString ());  			Socket = null;  			continue;  		}  		try {  			string shortData = data.Substring (data.IndexOf (" ") + 1);  			action = shortData.Substring (0' shortData.IndexOf (" "));  			json = shortData.Substring (shortData.IndexOf (" ") + 1);  		}  		catch (SystemException e) {  			System.Diagnostics.Debug.WriteLine (e.ToString ());  			continue;  		}  		if (action.Equals ("pub")) {  			if (ChannelValueEvent != null) {  				ThreadPool.QueueUserWorkItem (delegate (object target) {  					string pubJson = (string)target;  					try {  						PrismZmqCommonPubPacket pubPacket = JsonConvert.DeserializeObject<PrismZmqCommonPubPacket> (pubJson);  						ChannelValueEvent (this' new ProducerChannelValue (pubPacket.Group' pubPacket.Channel' pubPacket.Value));  					}  					catch (SystemException e) {  						System.Diagnostics.Debug.WriteLine (e.ToString ());  					}  				}' json);  			}  		}  		else if (action.Equals ("upub")) {  			if (ChannelResetEvent != null) {  				ThreadPool.QueueUserWorkItem (delegate (object target) {  					string upubJson = (string)target;  					try {  						PrismZmqCommonPubPacket upubPacket = JsonConvert.DeserializeObject<PrismZmqCommonPubPacket> (upubJson);  						ChannelResetEvent (this' new ProducerChannel (upubPacket.Group' upubPacket.Channel));  					}  					catch (SystemException e) {  						System.Diagnostics.Debug.WriteLine (e.ToString ());  					}  				}' json);  			}  		}  	}  	try {  		Socket.Close ();  	}  	catch (Exception e) {  	}  	Socket = null;  });  
Magic Number,Prism.General.Automation,PrismSubscribe,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismSubscribe,The following statement contains a magic number: while (Worker.IsAlive && !StopRequest) {  	if (Socket == null) {  		try {  			Socket = this.CreateSocket (context' endpoint' groups);  		}  		catch (Exception e1) {  			try {  				Socket.Close ();  			}  			catch (Exception e2) {  			}  			Socket = null;  			Thread.Sleep (1000);  			continue;  		}  	}  	string data = null;  	string action = "";  	string json = "";  	try {  		data = Socket.Receive (Encoding.UTF8);  	}  	catch (SystemException e) {  		System.Diagnostics.Debug.WriteLine (e.ToString ());  		continue;  	}  	catch (ZmqSocketException e) {  		System.Diagnostics.Debug.WriteLine (e.ToString ());  		Socket = null;  		continue;  	}  	try {  		string shortData = data.Substring (data.IndexOf (" ") + 1);  		action = shortData.Substring (0' shortData.IndexOf (" "));  		json = shortData.Substring (shortData.IndexOf (" ") + 1);  	}  	catch (SystemException e) {  		System.Diagnostics.Debug.WriteLine (e.ToString ());  		continue;  	}  	if (action.Equals ("pub")) {  		if (ChannelValueEvent != null) {  			ThreadPool.QueueUserWorkItem (delegate (object target) {  				string pubJson = (string)target;  				try {  					PrismZmqCommonPubPacket pubPacket = JsonConvert.DeserializeObject<PrismZmqCommonPubPacket> (pubJson);  					ChannelValueEvent (this' new ProducerChannelValue (pubPacket.Group' pubPacket.Channel' pubPacket.Value));  				}  				catch (SystemException e) {  					System.Diagnostics.Debug.WriteLine (e.ToString ());  				}  			}' json);  		}  	}  	else if (action.Equals ("upub")) {  		if (ChannelResetEvent != null) {  			ThreadPool.QueueUserWorkItem (delegate (object target) {  				string upubJson = (string)target;  				try {  					PrismZmqCommonPubPacket upubPacket = JsonConvert.DeserializeObject<PrismZmqCommonPubPacket> (upubJson);  					ChannelResetEvent (this' new ProducerChannel (upubPacket.Group' upubPacket.Channel));  				}  				catch (SystemException e) {  					System.Diagnostics.Debug.WriteLine (e.ToString ());  				}  			}' json);  		}  	}  }  
Magic Number,Prism.General.Automation,PrismSubscribe,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismSubscribe,The following statement contains a magic number: if (Socket == null) {  	try {  		Socket = this.CreateSocket (context' endpoint' groups);  	}  	catch (Exception e1) {  		try {  			Socket.Close ();  		}  		catch (Exception e2) {  		}  		Socket = null;  		Thread.Sleep (1000);  		continue;  	}  }  
Magic Number,Prism.General.Automation,PrismSubscribe,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismSubscribe,The following statement contains a magic number: try {  	Socket = this.CreateSocket (context' endpoint' groups);  }  catch (Exception e1) {  	try {  		Socket.Close ();  	}  	catch (Exception e2) {  	}  	Socket = null;  	Thread.Sleep (1000);  	continue;  }  
Magic Number,Prism.General.Automation,PrismSubscribe,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismSubscribe,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,Prism.General.Automation,PrismRequest,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,CreateSocket,The following statement contains a magic number: Socket.Linger = new TimeSpan (0' 0' 5);  
Magic Number,Prism.General.Automation,PrismRequest,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,CreateSocket,The following statement contains a magic number: Socket.ReconnectIntervalMax = new TimeSpan (0' 0' 5);  
Magic Number,Prism.General.Automation,PrismRequest,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismRequest,The following statement contains a magic number: Worker = new Thread (delegate () {  	while (Worker.IsAlive && !StopRequest) {  		if (Socket == null) {  			try {  				Socket = this.CreateSocket (context' endpoint);  			}  			catch (Exception e1) {  				try {  					Socket.Close ();  				}  				catch (Exception e2) {  				}  				Socket = null;  				Thread.Sleep (1000);  				continue;  			}  		}  		if (OnPause) {  			PauseEvent.Reset ();  			PauseEvent.WaitOne ();  			OnPause = false;  		}  		if (queue.Count == 0) {  			ActiveState = false;  			ResumeEvent.Reset ();  			ResumeEvent.WaitOne ();  		}  		else {  			ActiveState = true;  			PrismRequestItem requestItem = queue.Dequeue ();  			if (requestItem != null) {  				string repJson = null;  				try {  					Socket.Send (requestItem.Json' Encoding.UTF8).ToString ();  					repJson = Socket.Receive (Encoding.UTF8);  				}  				catch (SystemException e) {  					System.Diagnostics.Debug.WriteLine (e.ToString ());  				}  				catch (ZmqSocketException e) {  					System.Diagnostics.Debug.WriteLine (e.ToString ());  					Socket = null;  				}  				switch (requestItem.Method) {  				case PrismRequestItem.PrismRequestMethod.GroupList: {  					GetGroupListCallback cb = (GetGroupListCallback)requestItem.ReturnCb;  					try {  						PrismZmqGroupListRepPacket packet = JsonConvert.DeserializeObject<PrismZmqGroupListRepPacket> (repJson);  						if (packet.Error != null) {  							cb (packet.Error' new List<string> ());  						}  						else {  							cb (null' packet.Groups);  						}  					}  					catch (SystemException e) {  						System.Diagnostics.Debug.WriteLine (e.ToString ());  						cb (e.ToString ()' new List<string> ());  					}  					break;  				}  				case PrismRequestItem.PrismRequestMethod.ChannelList: {  					GetChannelListCallback cb = (GetChannelListCallback)requestItem.ReturnCb;  					try {  						PrismZmqChannelListRepPacket packet = JsonConvert.DeserializeObject<PrismZmqChannelListRepPacket> (repJson);  						if (packet.Error != null) {  							cb (packet.Error' new List<ProducerChannel> ());  						}  						else {  							cb (null' packet.Channels);  						}  					}  					catch (SystemException e) {  						System.Diagnostics.Debug.WriteLine (e.ToString ());  						cb (e.ToString ()' new List<ProducerChannel> ());  					}  					break;  				}  				case PrismRequestItem.PrismRequestMethod.ReadChannel: {  					ReadChannelValueCallback cb = (ReadChannelValueCallback)requestItem.ReturnCb;  					ProducerChannel channel = (ProducerChannel)requestItem.DummyData;  					try {  						PrismZmqReadChannelRepPacket packet = JsonConvert.DeserializeObject<PrismZmqReadChannelRepPacket> (repJson);  						if (packet.Error != null) {  							cb (packet.Error' new ProducerChannelValue (channel.Group' channel.Channel' null));  						}  						else {  							cb (null' new ProducerChannelValue (packet.Group' packet.Channel' packet.Value));  						}  					}  					catch (SystemException e) {  						System.Diagnostics.Debug.WriteLine (e.ToString ());  						cb (e.ToString ()' new ProducerChannelValue (channel.Group' channel.Channel' null));  					}  					break;  				}  				case PrismRequestItem.PrismRequestMethod.WriteChannel: {  					WriteChannelValueCallback cb = (WriteChannelValueCallback)requestItem.ReturnCb;  					ProducerChannelValue value = (ProducerChannelValue)requestItem.DummyData;  					try {  						PrismZmqWriteChannelRepPacket packet = JsonConvert.DeserializeObject<PrismZmqWriteChannelRepPacket> (repJson);  						if (packet.Error != null) {  							cb (packet.Error' new ProducerChannelValue (value.Group' value.Channel' null));  						}  						else {  							cb (null' new ProducerChannelValue (packet.Group' packet.Channel' packet.Value));  						}  					}  					catch (SystemException e) {  						System.Diagnostics.Debug.WriteLine (e.ToString ());  						cb (e.ToString ()' new ProducerChannelValue (value.Group' value.Channel' null));  					}  					break;  				}  				default:  					throw new SystemException ();  				}  			}  		}  	}  	try {  		Socket.Close ();  	}  	catch (Exception e) {  	}  	Socket = null;  });  
Magic Number,Prism.General.Automation,PrismRequest,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismRequest,The following statement contains a magic number: while (Worker.IsAlive && !StopRequest) {  	if (Socket == null) {  		try {  			Socket = this.CreateSocket (context' endpoint);  		}  		catch (Exception e1) {  			try {  				Socket.Close ();  			}  			catch (Exception e2) {  			}  			Socket = null;  			Thread.Sleep (1000);  			continue;  		}  	}  	if (OnPause) {  		PauseEvent.Reset ();  		PauseEvent.WaitOne ();  		OnPause = false;  	}  	if (queue.Count == 0) {  		ActiveState = false;  		ResumeEvent.Reset ();  		ResumeEvent.WaitOne ();  	}  	else {  		ActiveState = true;  		PrismRequestItem requestItem = queue.Dequeue ();  		if (requestItem != null) {  			string repJson = null;  			try {  				Socket.Send (requestItem.Json' Encoding.UTF8).ToString ();  				repJson = Socket.Receive (Encoding.UTF8);  			}  			catch (SystemException e) {  				System.Diagnostics.Debug.WriteLine (e.ToString ());  			}  			catch (ZmqSocketException e) {  				System.Diagnostics.Debug.WriteLine (e.ToString ());  				Socket = null;  			}  			switch (requestItem.Method) {  			case PrismRequestItem.PrismRequestMethod.GroupList: {  				GetGroupListCallback cb = (GetGroupListCallback)requestItem.ReturnCb;  				try {  					PrismZmqGroupListRepPacket packet = JsonConvert.DeserializeObject<PrismZmqGroupListRepPacket> (repJson);  					if (packet.Error != null) {  						cb (packet.Error' new List<string> ());  					}  					else {  						cb (null' packet.Groups);  					}  				}  				catch (SystemException e) {  					System.Diagnostics.Debug.WriteLine (e.ToString ());  					cb (e.ToString ()' new List<string> ());  				}  				break;  			}  			case PrismRequestItem.PrismRequestMethod.ChannelList: {  				GetChannelListCallback cb = (GetChannelListCallback)requestItem.ReturnCb;  				try {  					PrismZmqChannelListRepPacket packet = JsonConvert.DeserializeObject<PrismZmqChannelListRepPacket> (repJson);  					if (packet.Error != null) {  						cb (packet.Error' new List<ProducerChannel> ());  					}  					else {  						cb (null' packet.Channels);  					}  				}  				catch (SystemException e) {  					System.Diagnostics.Debug.WriteLine (e.ToString ());  					cb (e.ToString ()' new List<ProducerChannel> ());  				}  				break;  			}  			case PrismRequestItem.PrismRequestMethod.ReadChannel: {  				ReadChannelValueCallback cb = (ReadChannelValueCallback)requestItem.ReturnCb;  				ProducerChannel channel = (ProducerChannel)requestItem.DummyData;  				try {  					PrismZmqReadChannelRepPacket packet = JsonConvert.DeserializeObject<PrismZmqReadChannelRepPacket> (repJson);  					if (packet.Error != null) {  						cb (packet.Error' new ProducerChannelValue (channel.Group' channel.Channel' null));  					}  					else {  						cb (null' new ProducerChannelValue (packet.Group' packet.Channel' packet.Value));  					}  				}  				catch (SystemException e) {  					System.Diagnostics.Debug.WriteLine (e.ToString ());  					cb (e.ToString ()' new ProducerChannelValue (channel.Group' channel.Channel' null));  				}  				break;  			}  			case PrismRequestItem.PrismRequestMethod.WriteChannel: {  				WriteChannelValueCallback cb = (WriteChannelValueCallback)requestItem.ReturnCb;  				ProducerChannelValue value = (ProducerChannelValue)requestItem.DummyData;  				try {  					PrismZmqWriteChannelRepPacket packet = JsonConvert.DeserializeObject<PrismZmqWriteChannelRepPacket> (repJson);  					if (packet.Error != null) {  						cb (packet.Error' new ProducerChannelValue (value.Group' value.Channel' null));  					}  					else {  						cb (null' new ProducerChannelValue (packet.Group' packet.Channel' packet.Value));  					}  				}  				catch (SystemException e) {  					System.Diagnostics.Debug.WriteLine (e.ToString ());  					cb (e.ToString ()' new ProducerChannelValue (value.Group' value.Channel' null));  				}  				break;  			}  			default:  				throw new SystemException ();  			}  		}  	}  }  
Magic Number,Prism.General.Automation,PrismRequest,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismRequest,The following statement contains a magic number: if (Socket == null) {  	try {  		Socket = this.CreateSocket (context' endpoint);  	}  	catch (Exception e1) {  		try {  			Socket.Close ();  		}  		catch (Exception e2) {  		}  		Socket = null;  		Thread.Sleep (1000);  		continue;  	}  }  
Magic Number,Prism.General.Automation,PrismRequest,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismRequest,The following statement contains a magic number: try {  	Socket = this.CreateSocket (context' endpoint);  }  catch (Exception e1) {  	try {  		Socket.Close ();  	}  	catch (Exception e2) {  	}  	Socket = null;  	Thread.Sleep (1000);  	continue;  }  
Magic Number,Prism.General.Automation,PrismRequest,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismRequest,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,Prism.General.Automation,PrismPoll,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,CreateSocket,The following statement contains a magic number: Socket.Linger = new TimeSpan (0' 0' 5);  
Magic Number,Prism.General.Automation,PrismPoll,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,CreateSocket,The following statement contains a magic number: Socket.ReconnectIntervalMax = new TimeSpan (0' 0' 5);  
Magic Number,Prism.General.Automation,PrismPoll,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismPoll,The following statement contains a magic number: Worker = new Thread (delegate () {  	while (Worker.IsAlive && !StopRequest) {  		if (Socket == null) {  			try {  				Socket = this.CreateSocket (context' endpoint);  			}  			catch (Exception e1) {  				try {  					Socket.Close ();  				}  				catch (Exception e2) {  				}  				Socket = null;  				Thread.Sleep (1000);  				continue;  			}  		}  		if (OnPause) {  			PauseEvent.Reset ();  			PauseEvent.WaitOne ();  			OnPause = false;  		}  		if (Queue.Count == 0) {  			ActiveState = false;  			ResumeEvent.Reset ();  			ResumeEvent.WaitOne ();  		}  		else {  			ActiveState = true;  			PrismPollItem pollItem = Queue.Dequeue ();  			if (pollItem != null) {  				string pollJson = null;  				try {  					Socket.Send (pollItem.Json' Encoding.UTF8).ToString ();  					pollJson = Socket.Receive (Encoding.UTF8);  				}  				catch (SystemException e) {  					System.Diagnostics.Debug.WriteLine (e.ToString ());  				}  				catch (ZmqSocketException e) {  					System.Diagnostics.Debug.WriteLine (e.ToString ());  					Socket = null;  				}  				PollCallback cb = (PollCallback)pollItem.ReturnCb;  				try {  					List<ProducerChannelValue> packet = JsonConvert.DeserializeObject<List<ProducerChannelValue>> (pollJson);  					if (packet == null) {  						cb ("Result packet is null"' new List<ProducerChannelValue> ());  					}  					else {  						cb (null' packet);  					}  				}  				catch (SystemException e) {  					System.Diagnostics.Debug.WriteLine (e.ToString ());  					cb (e.ToString ()' new List<ProducerChannelValue> ());  				}  			}  		}  	}  	try {  		Socket.Close ();  	}  	catch (Exception e) {  	}  	Socket = null;  });  
Magic Number,Prism.General.Automation,PrismPoll,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismPoll,The following statement contains a magic number: while (Worker.IsAlive && !StopRequest) {  	if (Socket == null) {  		try {  			Socket = this.CreateSocket (context' endpoint);  		}  		catch (Exception e1) {  			try {  				Socket.Close ();  			}  			catch (Exception e2) {  			}  			Socket = null;  			Thread.Sleep (1000);  			continue;  		}  	}  	if (OnPause) {  		PauseEvent.Reset ();  		PauseEvent.WaitOne ();  		OnPause = false;  	}  	if (Queue.Count == 0) {  		ActiveState = false;  		ResumeEvent.Reset ();  		ResumeEvent.WaitOne ();  	}  	else {  		ActiveState = true;  		PrismPollItem pollItem = Queue.Dequeue ();  		if (pollItem != null) {  			string pollJson = null;  			try {  				Socket.Send (pollItem.Json' Encoding.UTF8).ToString ();  				pollJson = Socket.Receive (Encoding.UTF8);  			}  			catch (SystemException e) {  				System.Diagnostics.Debug.WriteLine (e.ToString ());  			}  			catch (ZmqSocketException e) {  				System.Diagnostics.Debug.WriteLine (e.ToString ());  				Socket = null;  			}  			PollCallback cb = (PollCallback)pollItem.ReturnCb;  			try {  				List<ProducerChannelValue> packet = JsonConvert.DeserializeObject<List<ProducerChannelValue>> (pollJson);  				if (packet == null) {  					cb ("Result packet is null"' new List<ProducerChannelValue> ());  				}  				else {  					cb (null' packet);  				}  			}  			catch (SystemException e) {  				System.Diagnostics.Debug.WriteLine (e.ToString ());  				cb (e.ToString ()' new List<ProducerChannelValue> ());  			}  		}  	}  }  
Magic Number,Prism.General.Automation,PrismPoll,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismPoll,The following statement contains a magic number: if (Socket == null) {  	try {  		Socket = this.CreateSocket (context' endpoint);  	}  	catch (Exception e1) {  		try {  			Socket.Close ();  		}  		catch (Exception e2) {  		}  		Socket = null;  		Thread.Sleep (1000);  		continue;  	}  }  
Magic Number,Prism.General.Automation,PrismPoll,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismPoll,The following statement contains a magic number: try {  	Socket = this.CreateSocket (context' endpoint);  }  catch (Exception e1) {  	try {  		Socket.Close ();  	}  	catch (Exception e2) {  	}  	Socket = null;  	Thread.Sleep (1000);  	continue;  }  
Magic Number,Prism.General.Automation,PrismPoll,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Producer.cs,PrismPoll,The following statement contains a magic number: Thread.Sleep (1000);  
Missing Default,Prism.General.Automation,Param,C:\repos\vulsim_prism-client\Common\Prism.General\Classes\Param.cs,RealatedTo,The following switch statement is missing a default case: switch (this.AssignType) {  case ParamAssignType.Value:  case ParamAssignType.Map:  	return key.Equals (Key);  case ParamAssignType.Relation:  	foreach (var relation in Relations) {  		if (relation.RelatedTo (key)) {  			return true;  		}  	}  	return false;  }  
