Implementation smell,Namespace,Class,File,Method,Description
Magic Number,ZeroMQ.Perf.LatLocal,Program,C:\repos\vulsim_prism-client\External\Clrzmq\src\ZeroMQ.Perf.LatLocal\Program.cs,Main,The following statement contains a magic number: if (args.Length != 3) {  	Console.Out.WriteLine ("usage: local_lat <address> <message-size> <roundtrip-count>\n");  	return 1;  }  
Magic Number,ZeroMQ.Perf.LatLocal,Program,C:\repos\vulsim_prism-client\External\Clrzmq\src\ZeroMQ.Perf.LatLocal\Program.cs,Main,The following statement contains a magic number: using (ZmqContext ctx = ZmqContext.Create ())  	using (ZmqSocket skt = ctx.CreateSocket (SocketType.REP)) {  		skt.Bind (address);  		// Bounce the messages.  		for (int i = 0; i < roundtripCount; i++) {  			var msg = new byte[messageSize];  			int receivedBytes = skt.Receive (msg);  			Debug.Assert (receivedBytes == messageSize' "Received message did not have the expected length.");  			skt.Send (msg);  		}  		Thread.Sleep (1000);  	}  
Magic Number,ZeroMQ.Perf.LatLocal,Program,C:\repos\vulsim_prism-client\External\Clrzmq\src\ZeroMQ.Perf.LatLocal\Program.cs,Main,The following statement contains a magic number: using (ZmqSocket skt = ctx.CreateSocket (SocketType.REP)) {  	skt.Bind (address);  	// Bounce the messages.  	for (int i = 0; i < roundtripCount; i++) {  		var msg = new byte[messageSize];  		int receivedBytes = skt.Receive (msg);  		Debug.Assert (receivedBytes == messageSize' "Received message did not have the expected length.");  		skt.Send (msg);  	}  	Thread.Sleep (1000);  }  
Magic Number,ZeroMQ.Perf.LatLocal,Program,C:\repos\vulsim_prism-client\External\Clrzmq\src\ZeroMQ.Perf.LatLocal\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (1000);  
