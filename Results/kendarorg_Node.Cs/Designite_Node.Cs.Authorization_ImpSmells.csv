Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Node.Cs.Authorization,Authorize,C:\repos\kendarorg_Node.Cs\Src\Node.Cs.Authorization\Authorize.cs,OnPreExecuteBasicAuthentication,Cyclomatic complexity of the method is 8
Complex Method,Node.Cs.Authorization,Authorize,C:\repos\kendarorg_Node.Cs\Src\Node.Cs.Authorization\Authorize.cs,OnPreExecute,Cyclomatic complexity of the method is 8
Long Parameter List,Node.Cs.Authorization,DummyAuthenticationDataProvider,C:\repos\kendarorg_Node.Cs\Src\Node.Cs.Authorization\DummyAuthenticationDataProvider.cs,CreateUser,The method has 8 parameters.
Long Parameter List,Node.Cs.Authorization,JsonAuthenticationDataProvider,C:\repos\kendarorg_Node.Cs\Src\Node.Cs.Authorization\JsonAuthenticationDataProvider.cs,CreateUser,The method has 8 parameters.
Magic Number,Node.Cs.Authorization,Authorize,C:\repos\kendarorg_Node.Cs\Src\Node.Cs.Authorization\Authorize.cs,FormSetAuthCookie,The following statement contains a magic number: ctx.Response.AppendCookie (new HttpCookie (AUTH_COOKIE_ID' userName) {  	Expires = DateTime.Now.AddMinutes (30)  });  
Magic Number,Node.Cs.Authorization,Authorize,C:\repos\kendarorg_Node.Cs\Src\Node.Cs.Authorization\Authorize.cs,OnPreExecuteBasicAuthentication,The following statement contains a magic number: if (splittedEncoding.Length != 2) {  	if (throwOnError)  		throw new NodeCsException ("Invalid Basic Authentication header"' 401);  	return false;  }  
Magic Number,Node.Cs.Authorization,Authorize,C:\repos\kendarorg_Node.Cs\Src\Node.Cs.Authorization\Authorize.cs,OnPreExecuteBasicAuthentication,The following statement contains a magic number: if (splittedEncoding.Length != 2) {  	if (throwOnError)  		throw new NodeCsException ("Invalid Basic Authentication header"' 401);  	return false;  }  
Magic Number,Node.Cs.Authorization,Authorize,C:\repos\kendarorg_Node.Cs\Src\Node.Cs.Authorization\Authorize.cs,OnPreExecuteBasicAuthentication,The following statement contains a magic number: if (throwOnError)  	throw new NodeCsException ("Invalid Basic Authentication header"' 401);  
Magic Number,Node.Cs.Authorization,Authorize,C:\repos\kendarorg_Node.Cs\Src\Node.Cs.Authorization\Authorize.cs,OnPreExecuteBasicAuthentication,The following statement contains a magic number: throw new NodeCsException ("Invalid Basic Authentication header"' 401);  
Magic Number,Node.Cs.Authorization,Authorize,C:\repos\kendarorg_Node.Cs\Src\Node.Cs.Authorization\Authorize.cs,OnPreExecuteBasicAuthentication,The following statement contains a magic number: if (splitted.Length != 2) {  	if (throwOnError)  		throw new NodeCsException ("Invalid Basic Authentication data"' 401);  	return false;  }  
Magic Number,Node.Cs.Authorization,Authorize,C:\repos\kendarorg_Node.Cs\Src\Node.Cs.Authorization\Authorize.cs,OnPreExecuteBasicAuthentication,The following statement contains a magic number: if (splitted.Length != 2) {  	if (throwOnError)  		throw new NodeCsException ("Invalid Basic Authentication data"' 401);  	return false;  }  
Magic Number,Node.Cs.Authorization,Authorize,C:\repos\kendarorg_Node.Cs\Src\Node.Cs.Authorization\Authorize.cs,OnPreExecuteBasicAuthentication,The following statement contains a magic number: if (throwOnError)  	throw new NodeCsException ("Invalid Basic Authentication data"' 401);  
Magic Number,Node.Cs.Authorization,Authorize,C:\repos\kendarorg_Node.Cs\Src\Node.Cs.Authorization\Authorize.cs,OnPreExecuteBasicAuthentication,The following statement contains a magic number: throw new NodeCsException ("Invalid Basic Authentication data"' 401);  
Magic Number,Node.Cs.Authorization,Authorize,C:\repos\kendarorg_Node.Cs\Src\Node.Cs.Authorization\Authorize.cs,RequireBasicAuthentication,The following statement contains a magic number: context.Response.StatusCode = 401;  
