Implementation smell,Namespace,Class,File,Method,Description
Long Method,SharpEntropy,GisTrainer,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisTrainer.cs,TrainModel,The method has 112 lines of code.
Complex Method,SharpEntropy,ComparableEvent,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\ComparableEvent.cs,CompareTo,Cyclomatic complexity of the method is 8
Complex Method,SharpEntropy,GisTrainer,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisTrainer.cs,TrainModel,Cyclomatic complexity of the method is 18
Complex Method,SharpEntropy,GisTrainer,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisTrainer.cs,FindParameters,Cyclomatic complexity of the method is 7
Complex Method,SharpEntropy,GisTrainer,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisTrainer.cs,Evaluate,Cyclomatic complexity of the method is 7
Complex Method,SharpEntropy,GisTrainer,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisTrainer.cs,NextIteration,Cyclomatic complexity of the method is 12
Complex Method,SharpEntropy,TwoPassDataIndexer,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\TwoPassDataIndexer.cs,ComputeEventCounts,Cyclomatic complexity of the method is 8
Long Parameter List,SharpEntropy,TwoPassDataIndexer,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\TwoPassDataIndexer.cs,ComputeEventCounts,The method has 4 parameters.
Long Statement,SharpEntropy,BasicEventReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\BasicEventReader.cs,CreateEvent,The length of the statement  "		return new TrainingEvent (observation.Substring (lastSpace + 1)' mContext.GetContext (observation.Substring (0' (lastSpace) - (0)))); " is 133.
Long Statement,SharpEntropy,ComparableEvent,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\ComparableEvent.cs,CompareTo,The length of the statement  "	int smallerLength = (mPredicateIndexes.Length > eventToCompare.GetPredicateIndexes ().Length ? eventToCompare.GetPredicateIndexes ().Length : GetPredicateIndexes ().Length); " is 173.
Long Statement,SharpEntropy,GisModel,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisModel.cs,Evaluate,The length of the statement  "		outcomeSums [outcomeIndex] = System.Math.Exp ((outcomeSums [outcomeIndex] * mCorrectionConstantInverse) + ((1.0 - (mFeatureCounts [outcomeIndex] / mCorrectionConstant)) * mCorrectionParameter)); " is 194.
Long Statement,SharpEntropy,GisModel,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisModel.cs,GetAllOutcomes,The length of the statement  "		throw new ArgumentException ("The double array sent as a parameter to GisModel.GetAllOutcomes() must not have been produced by this model."); " is 141.
Long Statement,SharpEntropy,GisModel,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisModel.cs,GetAllOutcomes,The length of the statement  "		outcomeInfo.Append (mOutcomeNames [0]).Append ("[").Append (outcomes [0].ToString ("0.0000"' System.Globalization.CultureInfo.CurrentCulture)).Append ("]"); " is 156.
Long Statement,SharpEntropy,GisModel,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisModel.cs,GetAllOutcomes,The length of the statement  "			outcomeInfo.Append ("  ").Append (mOutcomeNames [currentOutcome]).Append ("[").Append (outcomes [currentOutcome].ToString ("0.0000"' System.Globalization.CultureInfo.CurrentCulture)).Append ("]"); " is 196.
Long Statement,SharpEntropy,GisTrainer,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisTrainer.cs,Evaluate,The length of the statement  "			outcomeSums [currentOutcomeId] += ((1.0 - ((double)mFeatureCounts [currentOutcomeId] / mMaximumFeatureCount)) * mCorrectionParameter); " is 134.
Long Statement,SharpEntropy,GisTrainer,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisTrainer.cs,NextIteration,The length of the statement  "			for (int currentActiveOutcome = 0; currentActiveOutcome < mOutcomePatterns [mPredicateId].Length; currentActiveOutcome++) { " is 123.
Long Statement,SharpEntropy,GisTrainer,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisTrainer.cs,NextIteration,The length of the statement  "				mModelExpections [mPredicateId] [currentActiveOutcome] += (mModelDistribution [outcomeId] * mNumTimesEventsSeen [mTokenID]); " is 124.
Long Statement,SharpEntropy,GisTrainer,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisTrainer.cs,NextIteration,The length of the statement  "		for (int currentActiveOutcome = 0; currentActiveOutcome < mOutcomePatterns [mPredicateId].Length; currentActiveOutcome++) { " is 123.
Long Statement,SharpEntropy,GisTrainer,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisTrainer.cs,NextIteration,The length of the statement  "			mParameters [mPredicateId] [currentActiveOutcome] += (mObservedExpections [mPredicateId] [currentActiveOutcome] - System.Math.Log (mModelExpections [mPredicateId] [currentActiveOutcome])); " is 188.
Long Statement,SharpEntropy.IO,GisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\GisModelReader.cs,CheckModelType,The length of the statement  "		throw new ApplicationException ("Error: attempting to load a " + modelType + " model as a GIS model." + " You should expect problems."); " is 136.
Long Statement,SharpEntropy.IO,GisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\GisModelReader.cs,ReadOutcomePatterns,The length of the statement  "			patternData [currentPatternValue] = int.Parse (tokens [currentPatternValue]' System.Globalization.CultureInfo.InvariantCulture); " is 128.
Long Statement,SharpEntropy.IO,GisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\GisModelReader.cs,ReadParameters,The length of the statement  "	Dictionary<string' PatternedPredicate> predicates = new Dictionary<string' PatternedPredicate> (predicateLabels.Length); " is 120.
Long Statement,SharpEntropy.IO,GisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\GisModelReader.cs,ReadParameters,The length of the statement  "		for (int currentOutcomeInfo = 0; currentOutcomeInfo < outcomePatterns [currentOutcomePattern] [0]; currentOutcomeInfo++) { " is 122.
Long Statement,SharpEntropy.IO,GisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\GisModelReader.cs,ReadParameters,The length of the statement  "			for (int currentParameter = 0; currentParameter < outcomePatterns [currentOutcomePattern].Length - 1; currentParameter++) { " is 123.
Virtual Method Call from Constructor,SharpEntropy.IO,BinaryGisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\BinaryGisModelReader.cs,BinaryGisModelReader,The constructor "BinaryGisModelReader" calls a virtual method "ReadModel".
Virtual Method Call from Constructor,SharpEntropy.IO,BinaryGisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\BinaryGisModelReader.cs,BinaryGisModelReader,The constructor "BinaryGisModelReader" calls a virtual method "ReadModel".
Virtual Method Call from Constructor,SharpEntropy.IO,JavaBinaryGisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\JavaBinaryGisModelReader.cs,JavaBinaryGisModelReader,The constructor "JavaBinaryGisModelReader" calls a virtual method "ReadModel".
Virtual Method Call from Constructor,SharpEntropy.IO,JavaBinaryGisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\JavaBinaryGisModelReader.cs,JavaBinaryGisModelReader,The constructor "JavaBinaryGisModelReader" calls a virtual method "ReadModel".
Virtual Method Call from Constructor,SharpEntropy.IO,PlainTextGisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\PlainTextGisModelReader.cs,PlainTextGisModelReader,The constructor "PlainTextGisModelReader" calls a virtual method "ReadModel".
Virtual Method Call from Constructor,SharpEntropy.IO,PlainTextGisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\PlainTextGisModelReader.cs,PlainTextGisModelReader,The constructor "PlainTextGisModelReader" calls a virtual method "ReadModel".
Magic Number,SharpEntropy,GisModel,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisModel.cs,GetAllOutcomes,The following statement contains a magic number: if (outcomes.Length != mOutcomeNames.Length) {  	throw new ArgumentException ("The double array sent as a parameter to GisModel.GetAllOutcomes() must not have been produced by this model.");  } else {  	System.Text.StringBuilder outcomeInfo = new System.Text.StringBuilder (outcomes.Length * 2);  	outcomeInfo.Append (mOutcomeNames [0]).Append ("[").Append (outcomes [0].ToString ("0.0000"' System.Globalization.CultureInfo.CurrentCulture)).Append ("]");  	for (int currentOutcome = 1; currentOutcome < outcomes.Length; currentOutcome++) {  		outcomeInfo.Append ("  ").Append (mOutcomeNames [currentOutcome]).Append ("[").Append (outcomes [currentOutcome].ToString ("0.0000"' System.Globalization.CultureInfo.CurrentCulture)).Append ("]");  	}  	return outcomeInfo.ToString ();  }  
Magic Number,SharpEntropy,GisTrainer,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisTrainer.cs,GisTrainer,The following statement contains a magic number: mSmoothingObservation = 0.1;  
Magic Number,SharpEntropy,GisTrainer,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisTrainer.cs,GisTrainer,The following statement contains a magic number: mSmoothingObservation = 0.1;  
Magic Number,SharpEntropy,GisTrainer,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisTrainer.cs,TrainModel,The following statement contains a magic number: TrainModel (eventReader' 100' 0);  
Magic Number,SharpEntropy,GisTrainer,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisTrainer.cs,FindParameters,The following statement contains a magic number: for (int currentIteration = 1; currentIteration <= iterations; currentIteration++) {  	if (currentIteration < 10) {  		NotifyProgress ("  " + currentIteration + ":  ");  	} else if (currentIteration < 100) {  		NotifyProgress (" " + currentIteration + ":  ");  	} else {  		NotifyProgress (currentIteration + ":  ");  	}  	currentLogLikelihood = NextIteration ();  	if (currentIteration > 1) {  		if (previousLogLikelihood > currentLogLikelihood) {  			throw new SystemException ("Model Diverging: loglikelihood decreased");  		}  		if (currentLogLikelihood - previousLogLikelihood < mLLThreshold) {  			break;  		}  	}  	previousLogLikelihood = currentLogLikelihood;  }  
Magic Number,SharpEntropy,GisTrainer,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisTrainer.cs,FindParameters,The following statement contains a magic number: for (int currentIteration = 1; currentIteration <= iterations; currentIteration++) {  	if (currentIteration < 10) {  		NotifyProgress ("  " + currentIteration + ":  ");  	} else if (currentIteration < 100) {  		NotifyProgress (" " + currentIteration + ":  ");  	} else {  		NotifyProgress (currentIteration + ":  ");  	}  	currentLogLikelihood = NextIteration ();  	if (currentIteration > 1) {  		if (previousLogLikelihood > currentLogLikelihood) {  			throw new SystemException ("Model Diverging: loglikelihood decreased");  		}  		if (currentLogLikelihood - previousLogLikelihood < mLLThreshold) {  			break;  		}  	}  	previousLogLikelihood = currentLogLikelihood;  }  
Magic Number,SharpEntropy,GisTrainer,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisTrainer.cs,FindParameters,The following statement contains a magic number: if (currentIteration < 10) {  	NotifyProgress ("  " + currentIteration + ":  ");  } else if (currentIteration < 100) {  	NotifyProgress (" " + currentIteration + ":  ");  } else {  	NotifyProgress (currentIteration + ":  ");  }  
Magic Number,SharpEntropy,GisTrainer,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisTrainer.cs,FindParameters,The following statement contains a magic number: if (currentIteration < 10) {  	NotifyProgress ("  " + currentIteration + ":  ");  } else if (currentIteration < 100) {  	NotifyProgress (" " + currentIteration + ":  ");  } else {  	NotifyProgress (currentIteration + ":  ");  }  
Magic Number,SharpEntropy,GisTrainer,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\GisTrainer.cs,FindParameters,The following statement contains a magic number: if (currentIteration < 100) {  	NotifyProgress (" " + currentIteration + ":  ");  } else {  	NotifyProgress (currentIteration + ":  ");  }  
Magic Number,SharpEntropy.IO,BinaryGisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\BinaryGisModelReader.cs,BinaryGisModelReader,The following statement contains a magic number: using (mInput = dataInputStream) {  	mBuffer = new byte[256];  	base.ReadModel ();  }  
Magic Number,SharpEntropy.IO,BinaryGisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\BinaryGisModelReader.cs,BinaryGisModelReader,The following statement contains a magic number: mBuffer = new byte[256];  
Magic Number,SharpEntropy.IO,BinaryGisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\BinaryGisModelReader.cs,BinaryGisModelReader,The following statement contains a magic number: using (mInput = new FileStream (fileName' FileMode.Open' FileAccess.Read)) {  	mBuffer = new byte[256];  	base.ReadModel ();  }  
Magic Number,SharpEntropy.IO,BinaryGisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\BinaryGisModelReader.cs,BinaryGisModelReader,The following statement contains a magic number: mBuffer = new byte[256];  
Magic Number,SharpEntropy.IO,BinaryGisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\BinaryGisModelReader.cs,ReadInt32,The following statement contains a magic number: mInput.Read (mBuffer' 0' 4);  
Magic Number,SharpEntropy.IO,BinaryGisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\BinaryGisModelReader.cs,ReadDouble,The following statement contains a magic number: mInput.Read (mBuffer' 0' 8);  
Magic Number,SharpEntropy.IO,BinaryGisModelWriter,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\BinaryGisModelWriter.cs,WriteInt32,The following statement contains a magic number: mOutput.Write (mBuffer' 0' 4);  
Magic Number,SharpEntropy.IO,BinaryGisModelWriter,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\BinaryGisModelWriter.cs,WriteDouble,The following statement contains a magic number: mOutput.Write (mBuffer' 0' 8);  
Magic Number,SharpEntropy.IO,JavaBinaryGisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\JavaBinaryGisModelReader.cs,JavaBinaryGisModelReader,The following statement contains a magic number: using (mInput = dataInputStream) {  	mBuffer = new byte[256];  	base.ReadModel ();  }  
Magic Number,SharpEntropy.IO,JavaBinaryGisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\JavaBinaryGisModelReader.cs,JavaBinaryGisModelReader,The following statement contains a magic number: mBuffer = new byte[256];  
Magic Number,SharpEntropy.IO,JavaBinaryGisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\JavaBinaryGisModelReader.cs,JavaBinaryGisModelReader,The following statement contains a magic number: using (mInput = new FileStream (fileName' FileMode.Open' FileAccess.Read)) {  	mBuffer = new byte[256];  	base.ReadModel ();  }  
Magic Number,SharpEntropy.IO,JavaBinaryGisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\JavaBinaryGisModelReader.cs,JavaBinaryGisModelReader,The following statement contains a magic number: mBuffer = new byte[256];  
Magic Number,SharpEntropy.IO,JavaBinaryGisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\JavaBinaryGisModelReader.cs,ReadInt32,The following statement contains a magic number: mInput.Read (mBuffer' 0' 4);  
Magic Number,SharpEntropy.IO,JavaBinaryGisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\JavaBinaryGisModelReader.cs,ReadInt32,The following statement contains a magic number: Array.Reverse (mBuffer' 0' 4);  
Magic Number,SharpEntropy.IO,JavaBinaryGisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\JavaBinaryGisModelReader.cs,ReadDouble,The following statement contains a magic number: mInput.Read (mBuffer' 0' 8);  
Magic Number,SharpEntropy.IO,JavaBinaryGisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\JavaBinaryGisModelReader.cs,ReadDouble,The following statement contains a magic number: Array.Reverse (mBuffer' 0' 8);  
Magic Number,SharpEntropy.IO,JavaBinaryGisModelReader,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\JavaBinaryGisModelReader.cs,ReadString,The following statement contains a magic number: mStringLength = (mInput.ReadByte () * 256) + mInput.ReadByte ();  
Magic Number,SharpEntropy.IO,JavaBinaryGisModelWriter,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\JavaBinaryGisModelWriter.cs,WriteString,The following statement contains a magic number: mOutput.WriteByte ((byte)(mEncoding.GetByteCount (data) / 256));  
Magic Number,SharpEntropy.IO,JavaBinaryGisModelWriter,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\JavaBinaryGisModelWriter.cs,WriteString,The following statement contains a magic number: mOutput.WriteByte ((byte)(mEncoding.GetByteCount (data) % 256));  
Magic Number,SharpEntropy.IO,JavaBinaryGisModelWriter,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\JavaBinaryGisModelWriter.cs,WriteInt32,The following statement contains a magic number: mOutput.Write (mBuffer' 0' 4);  
Magic Number,SharpEntropy.IO,JavaBinaryGisModelWriter,D:\newReposJune17\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SharpEntropy\IO\JavaBinaryGisModelWriter.cs,WriteDouble,The following statement contains a magic number: mOutput.Write (mBuffer' 0' 8);  
