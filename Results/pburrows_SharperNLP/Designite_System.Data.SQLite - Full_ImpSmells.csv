Implementation smell,Namespace,Class,File,Method,Description
Long Method,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Indexes,The method has 126 lines of code.
Long Method,System.Data.SQLite,SQLiteDataReader,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteDataReader.cs,GetSchemaTable,The method has 167 lines of code.
Complex Method,System.Data.SQLite,SQLite3,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3.cs,Step,Cyclomatic complexity of the method is 9
Complex Method,System.Data.SQLite,SQLiteBase,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteBase.cs,GetValue,Cyclomatic complexity of the method is 9
Complex Method,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Open,Cyclomatic complexity of the method is 14
Complex Method,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,GetSchema,Cyclomatic complexity of the method is 14
Complex Method,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Indexes,Cyclomatic complexity of the method is 15
Complex Method,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_IndexColumns,Cyclomatic complexity of the method is 13
Complex Method,System.Data.SQLite,SQLiteDataReader,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteDataReader.cs,VerifyType,Cyclomatic complexity of the method is 20
Complex Method,System.Data.SQLite,SQLiteDataReader,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteDataReader.cs,GetSchemaTable,Cyclomatic complexity of the method is 21
Complex Method,System.Data.SQLite,SQLiteDataReader,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteDataReader.cs,NextResult,Cyclomatic complexity of the method is 14
Complex Method,System.Data.SQLite,SQLiteFunction,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteFunction.cs,SetReturnValue,Cyclomatic complexity of the method is 8
Complex Method,System.Data.SQLite,SQLiteParameterCollection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteParameterCollection.cs,MapParameters,Cyclomatic complexity of the method is 15
Complex Method,System.Data.SQLite,SQLiteStatement,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteStatement.cs,BindParameter,Cyclomatic complexity of the method is 10
Long Parameter List,System.Data.SQLite,SQLite3,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3.cs,ColumnMetaData,The method has 8 parameters. Parameters: dataBase' table' column' dataType' collateSequence' notNull' primaryKey' autoIncrement
Long Parameter List,System.Data.SQLite,SQLite3,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3.cs,GetBytes,The method has 6 parameters. Parameters: stmt' index' nDataOffset' bDest' nStart' nLength
Long Parameter List,System.Data.SQLite,SQLite3,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3.cs,GetChars,The method has 6 parameters. Parameters: stmt' index' nDataOffset' bDest' nStart' nLength
Long Parameter List,System.Data.SQLite,SQLite3,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3.cs,CreateFunction,The method has 5 parameters. Parameters: strFunction' nArgs' func' funcstep' funcfinal
Long Parameter List,System.Data.SQLite,SQLite3,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3.cs,GetParamValueBytes,The method has 5 parameters. Parameters: p' nDataOffset' bDest' nStart' nLength
Long Parameter List,System.Data.SQLite,SQLite3_UTF16,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3_UTF16.cs,CreateFunction,The method has 5 parameters. Parameters: strFunction' nArgs' func' funcstep' funcfinal
Long Parameter List,System.Data.SQLite,SQLiteBase,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteBase.cs,ColumnMetaData,The method has 8 parameters. Parameters: dataBase' table' column' dataType' collateSequence' notNull' primaryKey' autoIncrement
Long Parameter List,System.Data.SQLite,SQLiteBase,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteBase.cs,GetBytes,The method has 6 parameters. Parameters: stmt' index' nDataoffset' bDest' nStart' nLength
Long Parameter List,System.Data.SQLite,SQLiteBase,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteBase.cs,GetChars,The method has 6 parameters. Parameters: stmt' index' nDataoffset' bDest' nStart' nLength
Long Parameter List,System.Data.SQLite,SQLiteBase,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteBase.cs,CreateFunction,The method has 5 parameters. Parameters: strFunction' nArgs' func' funcstep' funcfinal
Long Parameter List,System.Data.SQLite,SQLiteBase,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteBase.cs,GetParamValueBytes,The method has 5 parameters. Parameters: ptr' nDataOffset' bDest' nStart' nLength
Long Parameter List,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,UpdateCallback,The method has 6 parameters. Parameters: type' database' databaseLen' table' tableLen' rowid
Long Parameter List,System.Data.SQLite,SQLiteDataReader,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteDataReader.cs,GetBytes,The method has 5 parameters. Parameters: i' fieldOffset' buffer' bufferoffset' length
Long Parameter List,System.Data.SQLite,SQLiteDataReader,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteDataReader.cs,GetChars,The method has 5 parameters. Parameters: i' fieldoffset' buffer' bufferoffset' length
Long Parameter List,System.Data.SQLite,SQLiteParameter,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteParameter.cs,SQLiteParameter,The method has 5 parameters. Parameters: parameterName' parameterType' parameterSize' sourceColumn' rowVersion
Long Parameter List,System.Data.SQLite,SQLiteParameter,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteParameter.cs,SQLiteParameter,The method has 10 parameters. Parameters: parameterName' parameterType' parameterSize' direction' isNullable' precision' scale' sourceColumn' rowVersion' value
Long Parameter List,System.Data.SQLite,SQLiteParameter,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteParameter.cs,SQLiteParameter,The method has 10 parameters. Parameters: parameterName' parameterType' parameterSize' direction' precision' scale' sourceColumn' rowVersion' sourceColumnNullMapping' value
Long Parameter List,System.Data.SQLite,UnsafeNativeMethods,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\UnsafeNativeMethods.cs,sqlite3_exec_interop,The method has 6 parameters. Parameters: db' strSql' pvCallback' pvParam' errMsg' len
Long Parameter List,System.Data.SQLite,UnsafeNativeMethods,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\UnsafeNativeMethods.cs,sqlite3_prepare_interop,The method has 6 parameters. Parameters: db' pSql' nBytes' stmt' ptrRemain' nRemain
Long Parameter List,System.Data.SQLite,UnsafeNativeMethods,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\UnsafeNativeMethods.cs,sqlite3_bind_blob_interop,The method has 5 parameters. Parameters: stmt' index' value' nSize' nTransient
Long Parameter List,System.Data.SQLite,UnsafeNativeMethods,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\UnsafeNativeMethods.cs,sqlite3_bind_text_interop,The method has 5 parameters. Parameters: stmt' index' value' nlen' pvReserved
Long Parameter List,System.Data.SQLite,UnsafeNativeMethods,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\UnsafeNativeMethods.cs,sqlite3_create_collation_interop,The method has 6 parameters. Parameters: db' strName' nType' nArgs' func' nCookie
Long Parameter List,System.Data.SQLite,UnsafeNativeMethods,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\UnsafeNativeMethods.cs,sqlite3_create_function_interop,The method has 8 parameters. Parameters: db' strName' nArgs' nType' func' fstep' ffinal' nCookie
Long Parameter List,System.Data.SQLite,UnsafeNativeMethods,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\UnsafeNativeMethods.cs,sqlite3_table_column_metadata_interop,The method has 11 parameters. Parameters: db' dbName' tblName' colName' ptrDataType' ptrCollSeq' notNull' primaryKey' autoInc' dtLen' csLen
Long Parameter List,System.Data.SQLite,UnsafeNativeMethods,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\UnsafeNativeMethods.cs,sqlite3_prepare16_interop,The method has 6 parameters. Parameters: db' pSql' sqlLen' stmt' ptrRemain' len
Long Parameter List,System.Data.SQLite,UnsafeNativeMethods,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\UnsafeNativeMethods.cs,sqlite3_bind_text16_interop,The method has 5 parameters. Parameters: stmt' index' value' nlen' nTransient
Long Parameter List,System.Data.SQLite,UnsafeNativeMethods,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\UnsafeNativeMethods.cs,sqlite3_create_collation16_interop,The method has 6 parameters. Parameters: db' strName' nType' nArgs' func' nCookie
Long Parameter List,System.Data.SQLite,UnsafeNativeMethods,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\UnsafeNativeMethods.cs,sqlite3_create_function16_interop,The method has 8 parameters. Parameters: db' strName' nArgs' nType' func' funcstep' funcfinal' nCookie
Long Statement,System.Data.SQLite,SQLite3,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3.cs,Prepare,The length of the statement  "          if (stmt != IntPtr.Zero) cmd = new SQLiteStatement(this' stmt' strSql.Substring(0' strSql.Length - strRemain.Length)' previous); " is 128.
Long Statement,System.Data.SQLite,SQLite3,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3.cs,Bind_Blob,The length of the statement  "      int n = UnsafeNativeMethods.sqlite3_bind_blob_interop(stmt._sqlite_stmt' index' blobData' blobData.Length' (IntPtr)(-1)); " is 121.
Long Statement,System.Data.SQLite,SQLite3,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3.cs,ColumnMetaData,The length of the statement  "      n = UnsafeNativeMethods.sqlite3_table_column_metadata_interop(_sql' ToUTF8(dataBase)' ToUTF8(table)' ToUTF8(column)' out dataTypePtr' out collSeqPtr' out nnotNull' out nprimaryKey' out nautoInc' out dtLen' out csLen); " is 217.
Long Statement,System.Data.SQLite,SQLite3,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3.cs,CreateFunction,The length of the statement  "      int n = UnsafeNativeMethods.sqlite3_create_function_interop(_sql' ToUTF8(strFunction)' nArgs' 1' func' funcstep' funcfinal' out nCookie); " is 137.
Long Statement,System.Data.SQLite,SQLite3,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3.cs,ChangePassword,The length of the statement  "      int n = UnsafeNativeMethods.sqlite3_rekey_interop(_sql' newPasswordBytes' (newPasswordBytes == null) ? 0 : newPasswordBytes.Length); " is 132.
Long Statement,System.Data.SQLite,SQLite3_UTF16,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3_UTF16.cs,CreateFunction,The length of the statement  "      int n = UnsafeNativeMethods.sqlite3_create_function16_interop(_sql' strFunction' nArgs' 4' func' funcstep' funcfinal' out nCookie); " is 131.
Long Statement,System.Data.SQLite,SQLiteCommand,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteCommand.cs,BuildNextCommand,The length of the statement  "        stmt = _cnn._sql.Prepare(_remainingText' (_statementList == null) ? null : _statementList[_statementList.Count - 1]' out _remainingText); " is 137.
Long Statement,System.Data.SQLite,SQLiteCommandBuilder,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteCommandBuilder.cs,UnquoteIdentifier,The length of the statement  "      return quotedIdentifier.Substring(QuotePrefix.Length' quotedIdentifier.Length - (QuotePrefix.Length + QuoteSuffix.Length)).Replace(QuoteSuffix + QuoteSuffix' QuoteSuffix); " is 171.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,ParseConnectionString,The length of the statement  "        else throw new ArgumentException(String.Format(CultureInfo.CurrentCulture' "Invalid ConnectionString format for parameter \"{0}\""' (arPiece.Length > 0) ? arPiece[0] : "null")); " is 177.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Open,The length of the statement  "        fileName = System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetCallingAssembly().GetName().CodeBase) + fileName.Substring(1); " is 135.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Open,The length of the statement  "        SQLiteDateFormats dateFormat = String.Compare(FindKey(opts' "DateTimeFormat"' "ISO8601")' "ticks"' true' CultureInfo.InvariantCulture) == 0 ? SQLiteDateFormats.Ticks : SQLiteDateFormats.ISO8601; " is 194.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Open,The length of the statement  "            throw new IO.FileNotFoundException(String.Format(CultureInfo.CurrentCulture' "Unable to locate file \"{0}\"' creating new database."' fileName)); " is 145.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Columns,The length of the statement  "      using (SQLiteCommand cmdTables = new SQLiteCommand(String.Format(CultureInfo.InvariantCulture' "SELECT * FROM [{0}].[sqlite_master] WHERE [type] LIKE 'table' OR [type] LIKE 'view'"' strCatalog)' this)) " is 201.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Columns,The length of the statement  "          if (String.IsNullOrEmpty(strTable) || String.Compare(strTable' rdTables.GetString(2)' true' CultureInfo.InvariantCulture) == 0) " is 127.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Columns,The length of the statement  "            using (SQLiteCommand cmd = new SQLiteCommand(String.Format(CultureInfo.InvariantCulture' "SELECT * FROM [{0}].[{1}]"' strCatalog' rdTables.GetString(2))' this)) " is 160.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Columns,The length of the statement  "                if (String.Compare(schemaRow[SchemaTableColumn.ColumnName].ToString()' strColumn' true' CultureInfo.InvariantCulture) == 0 " is 122.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Columns,The length of the statement  "                  row["DATA_TYPE"] = schemaRow["DataTypeName"]; // SQLiteConvert.DbTypeToType((DbType)schemaRow[SchemaTableColumn.ProviderType]).ToString(); " is 138.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Indexes,The length of the statement  "      using (SQLiteCommand cmdTables = new SQLiteCommand(String.Format(CultureInfo.InvariantCulture' "SELECT * FROM [{0}].[sqlite_master] WHERE [type] LIKE 'table'"' strCatalog)' this)) " is 179.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Indexes,The length of the statement  "          if (String.IsNullOrEmpty(strTable) || String.Compare(rdTables.GetString(2)' strTable' true' CultureInfo.InvariantCulture) == 0) " is 127.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Indexes,The length of the statement  "            using (SQLiteCommand cmdTable = new SQLiteCommand(String.Format(CultureInfo.InvariantCulture' "PRAGMA [{0}].table_info([{1}])"' strCatalog' rdTables.GetString(2))' this)) " is 170.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Indexes,The length of the statement  "            using (SQLiteCommand cmd = new SQLiteCommand(String.Format(CultureInfo.InvariantCulture' "PRAGMA [{0}].index_list([{1}])"' strCatalog' rdTables.GetString(2))' this)) " is 165.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Indexes,The length of the statement  "                  if (primaryKeys.Count > 0 && rd.GetString(1).StartsWith("sqlite_autoindex_" + rdTables.GetString(2)' StringComparison.InvariantCultureIgnoreCase) == true) " is 154.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Indexes,The length of the statement  "                    using (SQLiteCommand cmdDetails = new SQLiteCommand(String.Format(CultureInfo.InvariantCulture' "PRAGMA [{0}].index_info([{1}])"' strCatalog' rd.GetString(1))' this)) " is 166.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Tables,The length of the statement  "      using (SQLiteCommand cmd = new SQLiteCommand(String.Format(CultureInfo.InvariantCulture' "SELECT * FROM [{0}].[sqlite_master] WHERE [type] LIKE 'table'"' strCatalog)' this)) " is 173.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Views,The length of the statement  "      using (SQLiteCommand cmd = new SQLiteCommand(String.Format(CultureInfo.InvariantCulture' "SELECT * FROM [{0}].[sqlite_master] WHERE [type] LIKE 'view'"' strCatalog)' this)) " is 172.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_IndexColumns,The length of the statement  "      using (SQLiteCommand cmdTables = new SQLiteCommand(String.Format(CultureInfo.InvariantCulture' "SELECT * FROM [{0}].[sqlite_master] WHERE [type] LIKE 'table'"' strCatalog)' this)) " is 179.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_IndexColumns,The length of the statement  "          if (String.IsNullOrEmpty(strTable) || String.Compare(rdTables.GetString(2)' strTable' true' CultureInfo.InvariantCulture) == 0) " is 127.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_IndexColumns,The length of the statement  "            using (SQLiteCommand cmdTable = new SQLiteCommand(String.Format(CultureInfo.InvariantCulture' "PRAGMA [{0}].table_info([{1}])"' strCatalog' rdTables.GetString(2))' this)) " is 170.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_IndexColumns,The length of the statement  "              if (String.IsNullOrEmpty(strIndex) || String.Compare(strIndex' (string)row["INDEX_NAME"]' true' CultureInfo.InvariantCulture) == 0) " is 131.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_IndexColumns,The length of the statement  "            using (SQLiteCommand cmdIndexes = new SQLiteCommand(String.Format(CultureInfo.InvariantCulture' "SELECT * FROM [{0}].[sqlite_master] WHERE [type] LIKE 'index' AND [tbl_name] LIKE '{1}'"' strCatalog' rdTables.GetString(2).Replace("'"' "''"))' this)) " is 248.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_IndexColumns,The length of the statement  "                if (String.IsNullOrEmpty(strIndex) || String.Compare(strIndex' rdIndexes.GetString(1)' true' CultureInfo.InvariantCulture) == 0) " is 128.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_IndexColumns,The length of the statement  "                  using (SQLiteCommand cmdIndex = new SQLiteCommand(String.Format(CultureInfo.InvariantCulture' "PRAGMA [{0}].index_info([{1}])"' strCatalog' rdIndexes.GetString(1))' this)) " is 171.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_IndexColumns,The length of the statement  "                      if (String.IsNullOrEmpty(strColumn) || String.Compare(strColumn' row["COLUMN_NAME"].ToString()' true' CultureInfo.InvariantCulture) == 0) " is 137.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_ViewColumns,The length of the statement  "      using (SQLiteCommand cmdViews = new SQLiteCommand(String.Format(CultureInfo.InvariantCulture' "SELECT * FROM [{0}].[sqlite_master] WHERE [type] LIKE 'view'"' strCatalog)' this)) " is 177.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_ViewColumns,The length of the statement  "          if (String.IsNullOrEmpty(strView) || String.Compare(strView' rdViews.GetString(2)' true' CultureInfo.InvariantCulture) == 0) " is 124.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_ViewColumns,The length of the statement  "            using (SQLiteCommand cmdViewSelect = new SQLiteCommand(String.Format(CultureInfo.InvariantCulture' "SELECT * FROM [{0}].[{1}]"' strCatalog' rdViews.GetString(2))' this)) " is 169.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_ViewColumns,The length of the statement  "                  if (String.Compare(viewRow[SchemaTableColumn.ColumnName].ToString()' strColumn' true' CultureInfo.InvariantCulture) == 0 " is 120.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_ForeignKeys,The length of the statement  "      using (SQLiteCommand cmdTables = new SQLiteCommand(String.Format(CultureInfo.InvariantCulture' "SELECT * FROM [{0}].[sqlite_master] WHERE [type] LIKE 'table'"' strCatalog)' this)) " is 179.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_ForeignKeys,The length of the statement  "          if (String.IsNullOrEmpty(strTable) || String.Compare(strTable' rdTables.GetString(2)' true' CultureInfo.InvariantCulture) == 0) " is 127.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_ForeignKeys,The length of the statement  "            using (SQLiteCommand cmdTable = new SQLiteCommand(String.Format(CultureInfo.InvariantCulture' "SELECT * FROM [{0}].[{1}]"' strCatalog' rdTables.GetString(2))' this)) " is 165.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_ForeignKeys,The length of the statement  "            using (SQLiteCommand cmdKey = new SQLiteCommand(String.Format(CultureInfo.InvariantCulture' "PRAGMA [{0}].foreign_key_list([{1}])"' strCatalog' rdTables.GetString(2))' this)) " is 174.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_ForeignKeys,The length of the statement  "                row["CONSTRAINT_NAME"] = String.Format(CultureInfo.InvariantCulture' "FK_{0}_{1}_{2}"' rdTables.GetString(2)' rdKey.GetString(3)' rdKey.GetString(4)); " is 150.
Long Statement,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_ForeignKeys,The length of the statement  "                if (String.IsNullOrEmpty(strKeyName) || String.Compare(strKeyName' row["CONSTRAINT_NAME"].ToString()' true' CultureInfo.InvariantCulture) == 0) " is 143.
Long Statement,System.Data.SQLite,SQLiteConvert,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConvert.cs,TypeNameToDbType,The length of the statement  "        if (String.Compare(Name' 0' _typeNames[n].typeName' 0' _typeNames[n].typeName.Length' true' CultureInfo.InvariantCulture) == 0) " is 127.
Long Statement,System.Data.SQLite,SQLiteDataReader,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteDataReader.cs,GetSchemaTable,The length of the statement  "            using (SQLiteCommand cmdTable = new SQLiteCommand(String.Format(CultureInfo.InvariantCulture' "PRAGMA [{0}].TABLE_INFO([{1}])"' " is 127.
Long Statement,System.Data.SQLite,SQLiteDataReader,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteDataReader.cs,GetSchemaTable,The length of the statement  "                if (String.Compare((string)row[SchemaTableColumn.BaseColumnName]' rdTable.GetString(1)' true' CultureInfo.InvariantCulture) == 0) " is 129.
Long Statement,System.Data.SQLite,SQLiteDataReader,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteDataReader.cs,NextResult,The length of the statement  "            _readingState = 1; // This command returned columns but no rows' so return true' but HasRows = false and Read() returns false " is 125.
Long Statement,System.Data.SQLite,SQLiteDataReader,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteDataReader.cs,GetSQLiteType,The length of the statement  "        _fieldTypeArray[i].Type = SQLiteConvert.TypeNameToDbType(_activeStatement._sql.ColumnType(_activeStatement' i' out _fieldTypeArray[i].Affinity)); " is 145.
Long Statement,System.Data.SQLite,SQLiteDataReader,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteDataReader.cs,Read,The length of the statement  "      if (_readingState == -1) // First step was already done at the NextResult() level' so don't step again' just return true. " is 121.
Long Statement,System.Data.SQLite,SQLiteStatement,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteStatement.cs,MapParameter,The length of the statement  "        if (String.Compare(_paramNames[n]' startAt' s' 0' Math.Max(_paramNames[n].Length - startAt' s.Length)' true' CultureInfo.InvariantCulture) == 0) " is 144.
Virtual Method Call from Constructor,System.Data.SQLite,SQLiteStatement,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteStatement.cs,SQLiteStatement,The constructor "SQLiteStatement" calls a virtual method "Bind_ParamCount".
Virtual Method Call from Constructor,System.Data.SQLite,SQLiteStatement,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteStatement.cs,SQLiteStatement,The constructor "SQLiteStatement" calls a virtual method "Bind_ParamName".
Empty Catch Block,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Open,The method has an empty catch block.
Magic Number,System.Data.SQLite,SQLite3,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3.cs,Step,The following statement contains a magic number: n == 100
Magic Number,System.Data.SQLite,SQLite3,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3.cs,Step,The following statement contains a magic number: n == 101
Magic Number,System.Data.SQLite,SQLite3,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3.cs,Reset,The following statement contains a magic number: n == 17
Magic Number,System.Data.SQLite,SQLite3,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3.cs,Prepare,The following statement contains a magic number: int n = 17;
Magic Number,System.Data.SQLite,SQLite3,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3.cs,Prepare,The following statement contains a magic number: n == 17 && retries < 3
Magic Number,System.Data.SQLite,SQLite3,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3.cs,Prepare,The following statement contains a magic number: n == 17 && retries < 3
Magic Number,System.Data.SQLite,SQLite3_UTF16,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3_UTF16.cs,ToString,The following statement contains a magic number: return Marshal.PtrToStringUni(b' nbytelen / 2);
Magic Number,System.Data.SQLite,SQLite3_UTF16,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3_UTF16.cs,Bind_Text,The following statement contains a magic number: int n = UnsafeNativeMethods.sqlite3_bind_text16_interop(stmt._sqlite_stmt' index' value' value.Length * 2' -1);
Magic Number,System.Data.SQLite,SQLite3_UTF16,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3_UTF16.cs,CreateFunction,The following statement contains a magic number: int n = UnsafeNativeMethods.sqlite3_create_function16_interop(_sql' strFunction' nArgs' 4' func' funcstep' funcfinal' out nCookie);
Magic Number,System.Data.SQLite,SQLite3_UTF16,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLite3_UTF16.cs,CreateCollation,The following statement contains a magic number: int n = UnsafeNativeMethods.sqlite3_create_collation16_interop(_sql' strCollation' 4' 0' func' out nCookie);
Magic Number,System.Data.SQLite,SQLiteBase,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteBase.cs,GetValue,The following statement contains a magic number: switch (TypeToAffinity(t))        {          case TypeAffinity.Blob:            if (typ.Type == DbType.Guid && typ.Affinity == TypeAffinity.Text)              return new Guid(GetText(stmt' index));              int n = (int)GetBytes(stmt' index' 0' null' 0' 0);            byte[] b = new byte[n];            GetBytes(stmt' index' 0' b' 0' n);              if (typ.Type == DbType.Guid && n == 16)              return new Guid(b);              return b;          case TypeAffinity.DateTime:            return GetDateTime(stmt' index);          case TypeAffinity.Double:            return Convert.ChangeType(GetDouble(stmt' index)' t' null);          case TypeAffinity.Int64:            return Convert.ChangeType(GetInt64(stmt' index)' t' null);          default:            return GetText(stmt' index);        }
Magic Number,System.Data.SQLite,SQLiteCommand,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteCommand.cs,SQLiteCommand,The following statement contains a magic number: _commandTimeout = 30;
Magic Number,System.Data.SQLite,SQLiteCommand,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteCommand.cs,InitializeForReader,The following statement contains a magic number: _cnn._sql.SetTimeout(_commandTimeout * 1000);
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,ParseConnectionString,The following statement contains a magic number: arPiece.Length == 2
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Open,The following statement contains a magic number: Convert.ToInt32(FindKey(opts' "Version"' "3")' CultureInfo.InvariantCulture) != 3
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Open,The following statement contains a magic number: Convert.ToInt32(defValue) != 2000
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Open,The following statement contains a magic number: Convert.ToInt32(defValue) != 1024
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,GetSchema,The following statement contains a magic number: string[] parms = new string[5];
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,GetSchema,The following statement contains a magic number: switch (collectionName.ToUpper(CultureInfo.InvariantCulture))        {          case "METADATACOLLECTIONS":            return Schema_MetaDataCollections();          case "DATASOURCEINFORMATION":            return Schema_DataSourceInformation();          case "DATATYPES":            return Schema_DataTypes();          case "COLUMNS":            return Schema_Columns(parms[0]' parms[2]' parms[3]);          case "INDEXES":            return Schema_Indexes(parms[0]' parms[2]' parms[4]);          case "INDEXCOLUMNS":            return Schema_IndexColumns(parms[0]' parms[2]' parms[3]' parms[4]);          case "TABLES":            return Schema_Tables(parms[0]' parms[2]' parms[3]);          case "VIEWS":            return Schema_Views(parms[0]' parms[2]);          case "VIEWCOLUMNS":            return Schema_ViewColumns(parms[0]' parms[2]' parms[3]);          case "FOREIGNKEYS":            return Schema_ForeignKeys(parms[0]' parms[2]' parms[3]);          case "CATALOGS":            return Schema_Catalogs(parms[0]);          case "RESERVEDWORDS":            return Schema_ReservedWords();        }
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,GetSchema,The following statement contains a magic number: switch (collectionName.ToUpper(CultureInfo.InvariantCulture))        {          case "METADATACOLLECTIONS":            return Schema_MetaDataCollections();          case "DATASOURCEINFORMATION":            return Schema_DataSourceInformation();          case "DATATYPES":            return Schema_DataTypes();          case "COLUMNS":            return Schema_Columns(parms[0]' parms[2]' parms[3]);          case "INDEXES":            return Schema_Indexes(parms[0]' parms[2]' parms[4]);          case "INDEXCOLUMNS":            return Schema_IndexColumns(parms[0]' parms[2]' parms[3]' parms[4]);          case "TABLES":            return Schema_Tables(parms[0]' parms[2]' parms[3]);          case "VIEWS":            return Schema_Views(parms[0]' parms[2]);          case "VIEWCOLUMNS":            return Schema_ViewColumns(parms[0]' parms[2]' parms[3]);          case "FOREIGNKEYS":            return Schema_ForeignKeys(parms[0]' parms[2]' parms[3]);          case "CATALOGS":            return Schema_Catalogs(parms[0]);          case "RESERVEDWORDS":            return Schema_ReservedWords();        }
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,GetSchema,The following statement contains a magic number: switch (collectionName.ToUpper(CultureInfo.InvariantCulture))        {          case "METADATACOLLECTIONS":            return Schema_MetaDataCollections();          case "DATASOURCEINFORMATION":            return Schema_DataSourceInformation();          case "DATATYPES":            return Schema_DataTypes();          case "COLUMNS":            return Schema_Columns(parms[0]' parms[2]' parms[3]);          case "INDEXES":            return Schema_Indexes(parms[0]' parms[2]' parms[4]);          case "INDEXCOLUMNS":            return Schema_IndexColumns(parms[0]' parms[2]' parms[3]' parms[4]);          case "TABLES":            return Schema_Tables(parms[0]' parms[2]' parms[3]);          case "VIEWS":            return Schema_Views(parms[0]' parms[2]);          case "VIEWCOLUMNS":            return Schema_ViewColumns(parms[0]' parms[2]' parms[3]);          case "FOREIGNKEYS":            return Schema_ForeignKeys(parms[0]' parms[2]' parms[3]);          case "CATALOGS":            return Schema_Catalogs(parms[0]);          case "RESERVEDWORDS":            return Schema_ReservedWords();        }
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,GetSchema,The following statement contains a magic number: switch (collectionName.ToUpper(CultureInfo.InvariantCulture))        {          case "METADATACOLLECTIONS":            return Schema_MetaDataCollections();          case "DATASOURCEINFORMATION":            return Schema_DataSourceInformation();          case "DATATYPES":            return Schema_DataTypes();          case "COLUMNS":            return Schema_Columns(parms[0]' parms[2]' parms[3]);          case "INDEXES":            return Schema_Indexes(parms[0]' parms[2]' parms[4]);          case "INDEXCOLUMNS":            return Schema_IndexColumns(parms[0]' parms[2]' parms[3]' parms[4]);          case "TABLES":            return Schema_Tables(parms[0]' parms[2]' parms[3]);          case "VIEWS":            return Schema_Views(parms[0]' parms[2]);          case "VIEWCOLUMNS":            return Schema_ViewColumns(parms[0]' parms[2]' parms[3]);          case "FOREIGNKEYS":            return Schema_ForeignKeys(parms[0]' parms[2]' parms[3]);          case "CATALOGS":            return Schema_Catalogs(parms[0]);          case "RESERVEDWORDS":            return Schema_ReservedWords();        }
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,GetSchema,The following statement contains a magic number: switch (collectionName.ToUpper(CultureInfo.InvariantCulture))        {          case "METADATACOLLECTIONS":            return Schema_MetaDataCollections();          case "DATASOURCEINFORMATION":            return Schema_DataSourceInformation();          case "DATATYPES":            return Schema_DataTypes();          case "COLUMNS":            return Schema_Columns(parms[0]' parms[2]' parms[3]);          case "INDEXES":            return Schema_Indexes(parms[0]' parms[2]' parms[4]);          case "INDEXCOLUMNS":            return Schema_IndexColumns(parms[0]' parms[2]' parms[3]' parms[4]);          case "TABLES":            return Schema_Tables(parms[0]' parms[2]' parms[3]);          case "VIEWS":            return Schema_Views(parms[0]' parms[2]);          case "VIEWCOLUMNS":            return Schema_ViewColumns(parms[0]' parms[2]' parms[3]);          case "FOREIGNKEYS":            return Schema_ForeignKeys(parms[0]' parms[2]' parms[3]);          case "CATALOGS":            return Schema_Catalogs(parms[0]);          case "RESERVEDWORDS":            return Schema_ReservedWords();        }
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,GetSchema,The following statement contains a magic number: switch (collectionName.ToUpper(CultureInfo.InvariantCulture))        {          case "METADATACOLLECTIONS":            return Schema_MetaDataCollections();          case "DATASOURCEINFORMATION":            return Schema_DataSourceInformation();          case "DATATYPES":            return Schema_DataTypes();          case "COLUMNS":            return Schema_Columns(parms[0]' parms[2]' parms[3]);          case "INDEXES":            return Schema_Indexes(parms[0]' parms[2]' parms[4]);          case "INDEXCOLUMNS":            return Schema_IndexColumns(parms[0]' parms[2]' parms[3]' parms[4]);          case "TABLES":            return Schema_Tables(parms[0]' parms[2]' parms[3]);          case "VIEWS":            return Schema_Views(parms[0]' parms[2]);          case "VIEWCOLUMNS":            return Schema_ViewColumns(parms[0]' parms[2]' parms[3]);          case "FOREIGNKEYS":            return Schema_ForeignKeys(parms[0]' parms[2]' parms[3]);          case "CATALOGS":            return Schema_Catalogs(parms[0]);          case "RESERVEDWORDS":            return Schema_ReservedWords();        }
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,GetSchema,The following statement contains a magic number: switch (collectionName.ToUpper(CultureInfo.InvariantCulture))        {          case "METADATACOLLECTIONS":            return Schema_MetaDataCollections();          case "DATASOURCEINFORMATION":            return Schema_DataSourceInformation();          case "DATATYPES":            return Schema_DataTypes();          case "COLUMNS":            return Schema_Columns(parms[0]' parms[2]' parms[3]);          case "INDEXES":            return Schema_Indexes(parms[0]' parms[2]' parms[4]);          case "INDEXCOLUMNS":            return Schema_IndexColumns(parms[0]' parms[2]' parms[3]' parms[4]);          case "TABLES":            return Schema_Tables(parms[0]' parms[2]' parms[3]);          case "VIEWS":            return Schema_Views(parms[0]' parms[2]);          case "VIEWCOLUMNS":            return Schema_ViewColumns(parms[0]' parms[2]' parms[3]);          case "FOREIGNKEYS":            return Schema_ForeignKeys(parms[0]' parms[2]' parms[3]);          case "CATALOGS":            return Schema_Catalogs(parms[0]);          case "RESERVEDWORDS":            return Schema_ReservedWords();        }
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,GetSchema,The following statement contains a magic number: switch (collectionName.ToUpper(CultureInfo.InvariantCulture))        {          case "METADATACOLLECTIONS":            return Schema_MetaDataCollections();          case "DATASOURCEINFORMATION":            return Schema_DataSourceInformation();          case "DATATYPES":            return Schema_DataTypes();          case "COLUMNS":            return Schema_Columns(parms[0]' parms[2]' parms[3]);          case "INDEXES":            return Schema_Indexes(parms[0]' parms[2]' parms[4]);          case "INDEXCOLUMNS":            return Schema_IndexColumns(parms[0]' parms[2]' parms[3]' parms[4]);          case "TABLES":            return Schema_Tables(parms[0]' parms[2]' parms[3]);          case "VIEWS":            return Schema_Views(parms[0]' parms[2]);          case "VIEWCOLUMNS":            return Schema_ViewColumns(parms[0]' parms[2]' parms[3]);          case "FOREIGNKEYS":            return Schema_ForeignKeys(parms[0]' parms[2]' parms[3]);          case "CATALOGS":            return Schema_Catalogs(parms[0]);          case "RESERVEDWORDS":            return Schema_ReservedWords();        }
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,GetSchema,The following statement contains a magic number: switch (collectionName.ToUpper(CultureInfo.InvariantCulture))        {          case "METADATACOLLECTIONS":            return Schema_MetaDataCollections();          case "DATASOURCEINFORMATION":            return Schema_DataSourceInformation();          case "DATATYPES":            return Schema_DataTypes();          case "COLUMNS":            return Schema_Columns(parms[0]' parms[2]' parms[3]);          case "INDEXES":            return Schema_Indexes(parms[0]' parms[2]' parms[4]);          case "INDEXCOLUMNS":            return Schema_IndexColumns(parms[0]' parms[2]' parms[3]' parms[4]);          case "TABLES":            return Schema_Tables(parms[0]' parms[2]' parms[3]);          case "VIEWS":            return Schema_Views(parms[0]' parms[2]);          case "VIEWCOLUMNS":            return Schema_ViewColumns(parms[0]' parms[2]' parms[3]);          case "FOREIGNKEYS":            return Schema_ForeignKeys(parms[0]' parms[2]' parms[3]);          case "CATALOGS":            return Schema_Catalogs(parms[0]);          case "RESERVEDWORDS":            return Schema_ReservedWords();        }
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,GetSchema,The following statement contains a magic number: switch (collectionName.ToUpper(CultureInfo.InvariantCulture))        {          case "METADATACOLLECTIONS":            return Schema_MetaDataCollections();          case "DATASOURCEINFORMATION":            return Schema_DataSourceInformation();          case "DATATYPES":            return Schema_DataTypes();          case "COLUMNS":            return Schema_Columns(parms[0]' parms[2]' parms[3]);          case "INDEXES":            return Schema_Indexes(parms[0]' parms[2]' parms[4]);          case "INDEXCOLUMNS":            return Schema_IndexColumns(parms[0]' parms[2]' parms[3]' parms[4]);          case "TABLES":            return Schema_Tables(parms[0]' parms[2]' parms[3]);          case "VIEWS":            return Schema_Views(parms[0]' parms[2]);          case "VIEWCOLUMNS":            return Schema_ViewColumns(parms[0]' parms[2]' parms[3]);          case "FOREIGNKEYS":            return Schema_ForeignKeys(parms[0]' parms[2]' parms[3]);          case "CATALOGS":            return Schema_Catalogs(parms[0]);          case "RESERVEDWORDS":            return Schema_ReservedWords();        }
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,GetSchema,The following statement contains a magic number: switch (collectionName.ToUpper(CultureInfo.InvariantCulture))        {          case "METADATACOLLECTIONS":            return Schema_MetaDataCollections();          case "DATASOURCEINFORMATION":            return Schema_DataSourceInformation();          case "DATATYPES":            return Schema_DataTypes();          case "COLUMNS":            return Schema_Columns(parms[0]' parms[2]' parms[3]);          case "INDEXES":            return Schema_Indexes(parms[0]' parms[2]' parms[4]);          case "INDEXCOLUMNS":            return Schema_IndexColumns(parms[0]' parms[2]' parms[3]' parms[4]);          case "TABLES":            return Schema_Tables(parms[0]' parms[2]' parms[3]);          case "VIEWS":            return Schema_Views(parms[0]' parms[2]);          case "VIEWCOLUMNS":            return Schema_ViewColumns(parms[0]' parms[2]' parms[3]);          case "FOREIGNKEYS":            return Schema_ForeignKeys(parms[0]' parms[2]' parms[3]);          case "CATALOGS":            return Schema_Catalogs(parms[0]);          case "RESERVEDWORDS":            return Schema_ReservedWords();        }
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,GetSchema,The following statement contains a magic number: switch (collectionName.ToUpper(CultureInfo.InvariantCulture))        {          case "METADATACOLLECTIONS":            return Schema_MetaDataCollections();          case "DATASOURCEINFORMATION":            return Schema_DataSourceInformation();          case "DATATYPES":            return Schema_DataTypes();          case "COLUMNS":            return Schema_Columns(parms[0]' parms[2]' parms[3]);          case "INDEXES":            return Schema_Indexes(parms[0]' parms[2]' parms[4]);          case "INDEXCOLUMNS":            return Schema_IndexColumns(parms[0]' parms[2]' parms[3]' parms[4]);          case "TABLES":            return Schema_Tables(parms[0]' parms[2]' parms[3]);          case "VIEWS":            return Schema_Views(parms[0]' parms[2]);          case "VIEWCOLUMNS":            return Schema_ViewColumns(parms[0]' parms[2]' parms[3]);          case "FOREIGNKEYS":            return Schema_ForeignKeys(parms[0]' parms[2]' parms[3]);          case "CATALOGS":            return Schema_Catalogs(parms[0]);          case "RESERVEDWORDS":            return Schema_ReservedWords();        }
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,GetSchema,The following statement contains a magic number: switch (collectionName.ToUpper(CultureInfo.InvariantCulture))        {          case "METADATACOLLECTIONS":            return Schema_MetaDataCollections();          case "DATASOURCEINFORMATION":            return Schema_DataSourceInformation();          case "DATATYPES":            return Schema_DataTypes();          case "COLUMNS":            return Schema_Columns(parms[0]' parms[2]' parms[3]);          case "INDEXES":            return Schema_Indexes(parms[0]' parms[2]' parms[4]);          case "INDEXCOLUMNS":            return Schema_IndexColumns(parms[0]' parms[2]' parms[3]' parms[4]);          case "TABLES":            return Schema_Tables(parms[0]' parms[2]' parms[3]);          case "VIEWS":            return Schema_Views(parms[0]' parms[2]);          case "VIEWCOLUMNS":            return Schema_ViewColumns(parms[0]' parms[2]' parms[3]);          case "FOREIGNKEYS":            return Schema_ForeignKeys(parms[0]' parms[2]' parms[3]);          case "CATALOGS":            return Schema_Catalogs(parms[0]);          case "RESERVEDWORDS":            return Schema_ReservedWords();        }
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,GetSchema,The following statement contains a magic number: switch (collectionName.ToUpper(CultureInfo.InvariantCulture))        {          case "METADATACOLLECTIONS":            return Schema_MetaDataCollections();          case "DATASOURCEINFORMATION":            return Schema_DataSourceInformation();          case "DATATYPES":            return Schema_DataTypes();          case "COLUMNS":            return Schema_Columns(parms[0]' parms[2]' parms[3]);          case "INDEXES":            return Schema_Indexes(parms[0]' parms[2]' parms[4]);          case "INDEXCOLUMNS":            return Schema_IndexColumns(parms[0]' parms[2]' parms[3]' parms[4]);          case "TABLES":            return Schema_Tables(parms[0]' parms[2]' parms[3]);          case "VIEWS":            return Schema_Views(parms[0]' parms[2]);          case "VIEWCOLUMNS":            return Schema_ViewColumns(parms[0]' parms[2]' parms[3]);          case "FOREIGNKEYS":            return Schema_ForeignKeys(parms[0]' parms[2]' parms[3]);          case "CATALOGS":            return Schema_Catalogs(parms[0]);          case "RESERVEDWORDS":            return Schema_ReservedWords();        }
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_DataSourceInformation,The following statement contains a magic number: row.ItemArray = new object[] {          null'          "SQLite"'          _sql.Version'          _sql.Version'          3'          @"(^\[\p{Lo}\p{Lu}\p{Ll}_@#][\p{Lo}\p{Lu}\p{Ll}\p{Nd}@$#_]*$)|(^\[[^\]\0]|\]\]+\]$)|(^\""[^\""\0]|\""\""+\""$)"'          1'          false'          "{0}"'          @"@[\p{Lo}\p{Lu}\p{Ll}\p{Lm}_@#][\p{Lo}\p{Lu}\p{Ll}\p{Lm}\p{Nd}\uff3f_@#\$]*(?=\s+|$)"'          255'          @"^[\p{Lo}\p{Lu}\p{Ll}\p{Lm}_@#][\p{Lo}\p{Lu}\p{Ll}\p{Lm}\p{Nd}\uff3f_@#\$]*(?=\s+|$)"'          @"(([^\[]|\]\])*)"'          1'          ";"'          @"'(([^']|'')*)'"'          15        };
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_DataSourceInformation,The following statement contains a magic number: row.ItemArray = new object[] {          null'          "SQLite"'          _sql.Version'          _sql.Version'          3'          @"(^\[\p{Lo}\p{Lu}\p{Ll}_@#][\p{Lo}\p{Lu}\p{Ll}\p{Nd}@$#_]*$)|(^\[[^\]\0]|\]\]+\]$)|(^\""[^\""\0]|\""\""+\""$)"'          1'          false'          "{0}"'          @"@[\p{Lo}\p{Lu}\p{Ll}\p{Lm}_@#][\p{Lo}\p{Lu}\p{Ll}\p{Lm}\p{Nd}\uff3f_@#\$]*(?=\s+|$)"'          255'          @"^[\p{Lo}\p{Lu}\p{Ll}\p{Lm}_@#][\p{Lo}\p{Lu}\p{Ll}\p{Lm}\p{Nd}\uff3f_@#\$]*(?=\s+|$)"'          @"(([^\[]|\]\])*)"'          1'          ";"'          @"'(([^']|'')*)'"'          15        };
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_DataSourceInformation,The following statement contains a magic number: row.ItemArray = new object[] {          null'          "SQLite"'          _sql.Version'          _sql.Version'          3'          @"(^\[\p{Lo}\p{Lu}\p{Ll}_@#][\p{Lo}\p{Lu}\p{Ll}\p{Nd}@$#_]*$)|(^\[[^\]\0]|\]\]+\]$)|(^\""[^\""\0]|\""\""+\""$)"'          1'          false'          "{0}"'          @"@[\p{Lo}\p{Lu}\p{Ll}\p{Lm}_@#][\p{Lo}\p{Lu}\p{Ll}\p{Lm}\p{Nd}\uff3f_@#\$]*(?=\s+|$)"'          255'          @"^[\p{Lo}\p{Lu}\p{Ll}\p{Lm}_@#][\p{Lo}\p{Lu}\p{Ll}\p{Lm}\p{Nd}\uff3f_@#\$]*(?=\s+|$)"'          @"(([^\[]|\]\])*)"'          1'          ";"'          @"'(([^']|'')*)'"'          15        };
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Columns,The following statement contains a magic number: row["TABLE_NAME"] = rdTables.GetString(2);
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Indexes,The following statement contains a magic number: String.Compare(rdTable.GetString(2)' "INTEGER"' true' CultureInfo.InvariantCulture) == 0
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Indexes,The following statement contains a magic number: rdTable.GetInt32(5) == 1
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Indexes,The following statement contains a magic number: row["TABLE_NAME"] = rdTables.GetString(2);
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Indexes,The following statement contains a magic number: row["INDEX_NAME"] = String.Format(CultureInfo.InvariantCulture' "sqlite_master_PK_{0}"' rdTables.GetString(2));
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Indexes,The following statement contains a magic number: row["TABLE_NAME"] = rdTables.GetString(2);
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Indexes,The following statement contains a magic number: row["UNIQUE"] = rd.GetBoolean(2);
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Indexes,The following statement contains a magic number: primaryKeys.Count > 0 && rd.GetString(1).StartsWith("sqlite_autoindex_" + rdTables.GetString(2)' StringComparison.InvariantCultureIgnoreCase) == true
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Tables,The following statement contains a magic number: row["TABLE_NAME"] = rd.GetString(2);
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Views,The following statement contains a magic number: strItem = rd.GetString(4).Replace('\r'' ' ').Replace('\n'' ' ').Replace('\t'' ' ');
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Views,The following statement contains a magic number: strItem = strItem.Substring(nPos + 4).Trim();
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Views,The following statement contains a magic number: row["TABLE_NAME"] = rd.GetString(2);
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_Catalogs,The following statement contains a magic number: row["DESCRIPTION"] = rd.GetString(2);
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_IndexColumns,The following statement contains a magic number: String.Compare(rdTable.GetString(2)' "INTEGER"' true' CultureInfo.InvariantCulture) == 0
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_IndexColumns,The following statement contains a magic number: rdTable.GetInt32(5) == 1
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_IndexColumns,The following statement contains a magic number: row["CONSTRAINT_NAME"] = String.Format(CultureInfo.InvariantCulture' "sqlite_master_PK_{0}"' rdTables.GetString(2));
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_IndexColumns,The following statement contains a magic number: row["TABLE_NAME"] = rdTables.GetString(2);
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_IndexColumns,The following statement contains a magic number: row["TABLE_NAME"] = rdIndexes.GetString(2);
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_IndexColumns,The following statement contains a magic number: row["COLUMN_NAME"] = rdIndex.GetString(2);
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_ViewColumns,The following statement contains a magic number: strSql = rdViews.GetString(4).Replace('\r'' ' ').Replace('\n'' ' ').Replace('\t'' ' ');
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_ViewColumns,The following statement contains a magic number: strSql = strSql.Substring(n + 4);
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_ViewColumns,The following statement contains a magic number: row["VIEW_NAME"] = rdViews.GetString(2);
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_ForeignKeys,The following statement contains a magic number: row["CONSTRAINT_NAME"] = String.Format(CultureInfo.InvariantCulture' "FK_{0}_{1}_{2}"' rdTables.GetString(2)' rdKey.GetString(3)' rdKey.GetString(4));
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_ForeignKeys,The following statement contains a magic number: row["CONSTRAINT_NAME"] = String.Format(CultureInfo.InvariantCulture' "FK_{0}_{1}_{2}"' rdTables.GetString(2)' rdKey.GetString(3)' rdKey.GetString(4));
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_ForeignKeys,The following statement contains a magic number: row["CONSTRAINT_NAME"] = String.Format(CultureInfo.InvariantCulture' "FK_{0}_{1}_{2}"' rdTables.GetString(2)' rdKey.GetString(3)' rdKey.GetString(4));
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_ForeignKeys,The following statement contains a magic number: row["TABLE_NAME"] = rdTables.GetString(2);
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_ForeignKeys,The following statement contains a magic number: row["FKEY_FROM_COLUMN"] = rdKey.GetString(3);
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_ForeignKeys,The following statement contains a magic number: row["FKEY_TO_TABLE"] = rdKey.GetString(2);
Magic Number,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,Schema_ForeignKeys,The following statement contains a magic number: row["FKEY_TO_COLUMN"] = rdKey.GetString(4);
Magic Number,System.Data.SQLite,SQLiteConvert,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConvert.cs,Split,The following statement contains a magic number: char[] toks = new char[2] { '\"'' separator };
Magic Number,System.Data.SQLite,SQLiteDataReader,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteDataReader.cs,GetGuid,The following statement contains a magic number: byte[] buffer = new byte[16];
Magic Number,System.Data.SQLite,SQLiteDataReader,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteDataReader.cs,GetGuid,The following statement contains a magic number: _activeStatement._sql.GetBytes(_activeStatement' i' 0' buffer' 0' 16);
Magic Number,System.Data.SQLite,SQLiteDataReader,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteDataReader.cs,GetSchemaTable,The following statement contains a magic number: row[SchemaTableColumn.NumericPrecision] = 255;
Magic Number,System.Data.SQLite,SQLiteDataReader,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteDataReader.cs,GetSchemaTable,The following statement contains a magic number: row[SchemaTableColumn.NumericScale] = 255;
Magic Number,System.Data.SQLite,SQLiteDataReader,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteDataReader.cs,GetSchemaTable,The following statement contains a magic number: row[SchemaTableOptionalColumn.DefaultValue] = rdTable[4];
Missing Default,System.Data.SQLite,SQLiteConnection,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteConnection.cs,GetSchema,The following switch statement is missing a default case: switch (collectionName.ToUpper(CultureInfo.InvariantCulture))        {          case "METADATACOLLECTIONS":            return Schema_MetaDataCollections();          case "DATASOURCEINFORMATION":            return Schema_DataSourceInformation();          case "DATATYPES":            return Schema_DataTypes();          case "COLUMNS":            return Schema_Columns(parms[0]' parms[2]' parms[3]);          case "INDEXES":            return Schema_Indexes(parms[0]' parms[2]' parms[4]);          case "INDEXCOLUMNS":            return Schema_IndexColumns(parms[0]' parms[2]' parms[3]' parms[4]);          case "TABLES":            return Schema_Tables(parms[0]' parms[2]' parms[3]);          case "VIEWS":            return Schema_Views(parms[0]' parms[2]);          case "VIEWCOLUMNS":            return Schema_ViewColumns(parms[0]' parms[2]' parms[3]);          case "FOREIGNKEYS":            return Schema_ForeignKeys(parms[0]' parms[2]' parms[3]);          case "CATALOGS":            return Schema_Catalogs(parms[0]);          case "RESERVEDWORDS":            return Schema_ReservedWords();        }
Missing Default,System.Data.SQLite,SQLiteDataReader,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteDataReader.cs,VerifyType,The following switch statement is missing a default case: switch (affinity)        {          case TypeAffinity.Int64:            if (typ == DbType.Int16) return affinity;            if (typ == DbType.Int32) return affinity;            if (typ == DbType.Int64) return affinity;            if (typ == DbType.Boolean) return affinity;            if (typ == DbType.Byte) return affinity;            break;          case TypeAffinity.Double:            if (typ == DbType.Single) return affinity;            if (typ == DbType.Double) return affinity;            if (typ == DbType.Decimal) return affinity;            break;          case TypeAffinity.Text:            if (typ == DbType.SByte) return affinity;            if (typ == DbType.String) return affinity;            if (typ == DbType.SByte) return affinity;            if (typ == DbType.Guid) return affinity;            if (typ == DbType.DateTime) return affinity;            break;          case TypeAffinity.Blob:            if (typ == DbType.Guid) return affinity;            if (typ == DbType.String) return affinity;            if (typ == DbType.Binary) return affinity;            break;        }
Missing Default,System.Data.SQLite,SQLiteFunction,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteFunction.cs,ConvertParams,The following switch statement is missing a default case: switch (_base.GetParamValueType((IntPtr)argint[n]))          {            case TypeAffinity.Null:              parms[n] = DBNull.Value;              break;            case TypeAffinity.Int64:              parms[n] = _base.GetParamValueInt64((IntPtr)argint[n]);              break;            case TypeAffinity.Double:              parms[n] = _base.GetParamValueDouble((IntPtr)argint[n]);              break;            case TypeAffinity.Text:              parms[n] = _base.GetParamValueText((IntPtr)argint[n]);              break;            case TypeAffinity.Blob:              {                int x;                byte[] blob;                  x = (int)_base.GetParamValueBytes((IntPtr)argint[n]' 0' null' 0' 0);                blob = new byte[x];                _base.GetParamValueBytes((IntPtr)argint[n]' 0' blob' 0' x);                parms[n] = blob;              }              break;            case TypeAffinity.DateTime: // Never happens here but what the heck' maybe it will one day.              parms[n] = _base.ToDateTime(_base.GetParamValueText((IntPtr)argint[n]));              break;          }
Missing Default,System.Data.SQLite,SQLiteFunction,C:\research\architectureSmells\repos\pburrows_SharperNLP\SharpNLP-Original\SharpNLP\SQLite.NET\System.Data.SQLite\SQLiteFunction.cs,SetReturnValue,The following switch statement is missing a default case: switch (SQLiteConvert.TypeToAffinity(t))        {          case TypeAffinity.Null:            _base.ReturnNull(context);            return;          case TypeAffinity.Int64:            _base.ReturnInt64(context' Convert.ToInt64(returnValue' CultureInfo.CurrentCulture));            return;          case TypeAffinity.Double:            _base.ReturnDouble(context' Convert.ToDouble(returnValue' CultureInfo.CurrentCulture));            return;          case TypeAffinity.Text:            _base.ReturnText(context' returnValue.ToString());            return;          case TypeAffinity.Blob:            _base.ReturnBlob(context' (byte[])returnValue);            return;        }
