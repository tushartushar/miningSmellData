Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Alteridem.GitHub.Model,GitHubApi,C:\repos\rprouse_GitHubExtension\GitHubIssues\Model\GitHubApi.cs,GetMilestones,The length of the statement  "                    var milestones = await _github.Issue.Milestone.GetAllForRepository(Repository.Repository.Owner.Login' Repository.Repository.Name' request); " is 139.
Long Statement,Alteridem.GitHub.Model,GitHubApi,C:\repos\rprouse_GitHubExtension\GitHubIssues\Model\GitHubApi.cs,GetLabels,The length of the statement  "                    var labels = await _github.Issue.Labels.GetAllForRepository(Repository.Repository.Owner.Login' Repository.Repository.Name); " is 123.
Long Statement,Alteridem.GitHub.Model,GitHubApi,C:\repos\rprouse_GitHubExtension\GitHubIssues\Model\GitHubApi.cs,GetComments,The length of the statement  "                IReadOnlyList<IssueComment> comments = await _github.Issue.Comment.GetAllForIssue(Repository.Repository.Owner.Login' Repository.Repository.Name' issue.Number); " is 159.
Long Statement,Alteridem.GitHub.Model,GitHubApi,C:\repos\rprouse_GitHubExtension\GitHubIssues\Model\GitHubApi.cs,AddComment,The length of the statement  "                var newComment = await _github.Issue.Comment.Create(Repository.Repository.Owner.Login' Repository.Repository.Name' issue.Number' comment); " is 138.
Long Statement,Alteridem.GitHub.Model,GitHubApi,C:\repos\rprouse_GitHubExtension\GitHubIssues\Model\GitHubApi.cs,CloseIssue,The length of the statement  "                var updatedIssue = await _github.Issue.Update(Repository.Repository.Owner.Login' Repository.Repository.Name' issue.Number' update); " is 131.
Long Statement,Alteridem.GitHub.Model,GitHubApi,C:\repos\rprouse_GitHubExtension\GitHubIssues\Model\GitHubApi.cs,LoginWithUsernameAndPassword,The length of the statement  "                var auth = await _github.Authorization.GetOrCreateApplicationAuthentication( Secrets.CLIENT_ID' Secrets.CLIENT_SECRET' newAuth ); " is 129.
Long Statement,Alteridem.GitHub.Model,GitHubApi,C:\repos\rprouse_GitHubExtension\GitHubIssues\Model\GitHubApi.cs,AppendComments,The length of the statement  "                    "{0}<div class=\"header\">{0}<div class=\"user\"><img align=\"left\" alt=\"{1}\" src=\"{2}\" width=\"22\" height=\"22\">&nbsp; {1}</div><div class=\"date\">{3:d}</div>{0}</div>{0}{0}{4}"' " is 187.
Long Statement,Alteridem.GitHub.Model,CredentialCache,C:\repos\rprouse_GitHubExtension\GitHubIssues\Model\CredentialCache.cs,FromString,The length of the statement  "                return new CredentialCache { Logon = split[0]' Password = Decrypt(split[1])' AccessToken = Decrypt(encryptedAccessToken) }; " is 123.
Complex Conditional,Alteridem.GitHub.Converters,StringToInverseColorConverter,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\StringToInverseColorConverter.cs,Convert,The conditional expression  "(hsb.B > 0.6 && hsb.S < 0.4) || (hsb.B > 0.7 && hsb.H > 40 && hsb.H < 200)"  is complex.
Empty Catch Block,Alteridem.GitHub.Converters,ColorExtensions,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\ColorExtensions.cs,ParseColor,The method has an empty catch block.
Magic Number,Alteridem.GitHub.Converters,ColorExtensions,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\ColorExtensions.cs,ToHsb,The following statement contains a magic number: hsbColor.A = alpha / 255;
Magic Number,Alteridem.GitHub.Converters,ColorExtensions,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\ColorExtensions.cs,ToHsb,The following statement contains a magic number: if (r == max) hsbColor.H = (g - b) / delta;              else if (g == max) hsbColor.H = 2 + (b - r) / delta;              else if (b == max) hsbColor.H = 4 + (r - g) / delta;
Magic Number,Alteridem.GitHub.Converters,ColorExtensions,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\ColorExtensions.cs,ToHsb,The following statement contains a magic number: if (r == max) hsbColor.H = (g - b) / delta;              else if (g == max) hsbColor.H = 2 + (b - r) / delta;              else if (b == max) hsbColor.H = 4 + (r - g) / delta;
Magic Number,Alteridem.GitHub.Converters,ColorExtensions,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\ColorExtensions.cs,ToHsb,The following statement contains a magic number: hsbColor.H *= 60;
Magic Number,Alteridem.GitHub.Converters,ColorExtensions,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\ColorExtensions.cs,ToHsb,The following statement contains a magic number: if (hsbColor.H < 0.0) hsbColor.H += 360;
Magic Number,Alteridem.GitHub.Converters,ColorExtensions,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\ColorExtensions.cs,ToHsb,The following statement contains a magic number: hsbColor.B = max / 255;
Magic Number,Alteridem.GitHub.Converters,ColorExtensions,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\ColorExtensions.cs,ToRgb,The following statement contains a magic number: if (hsbColor.S == 0.0)              {                  rgbColor.A = (byte)(hsbColor.A * 255);                  rgbColor.R = (byte)(hsbColor.B * 255);                  rgbColor.G = (byte)(hsbColor.B * 255);                  rgbColor.B = (byte)(hsbColor.B * 255);                  return rgbColor;              }
Magic Number,Alteridem.GitHub.Converters,ColorExtensions,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\ColorExtensions.cs,ToRgb,The following statement contains a magic number: if (hsbColor.S == 0.0)              {                  rgbColor.A = (byte)(hsbColor.A * 255);                  rgbColor.R = (byte)(hsbColor.B * 255);                  rgbColor.G = (byte)(hsbColor.B * 255);                  rgbColor.B = (byte)(hsbColor.B * 255);                  return rgbColor;              }
Magic Number,Alteridem.GitHub.Converters,ColorExtensions,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\ColorExtensions.cs,ToRgb,The following statement contains a magic number: if (hsbColor.S == 0.0)              {                  rgbColor.A = (byte)(hsbColor.A * 255);                  rgbColor.R = (byte)(hsbColor.B * 255);                  rgbColor.G = (byte)(hsbColor.B * 255);                  rgbColor.B = (byte)(hsbColor.B * 255);                  return rgbColor;              }
Magic Number,Alteridem.GitHub.Converters,ColorExtensions,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\ColorExtensions.cs,ToRgb,The following statement contains a magic number: if (hsbColor.S == 0.0)              {                  rgbColor.A = (byte)(hsbColor.A * 255);                  rgbColor.R = (byte)(hsbColor.B * 255);                  rgbColor.G = (byte)(hsbColor.B * 255);                  rgbColor.B = (byte)(hsbColor.B * 255);                  return rgbColor;              }
Magic Number,Alteridem.GitHub.Converters,ColorExtensions,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\ColorExtensions.cs,ToRgb,The following statement contains a magic number: var h = (hsbColor.H == 360) ? 0 : hsbColor.H / 60;
Magic Number,Alteridem.GitHub.Converters,ColorExtensions,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\ColorExtensions.cs,ToRgb,The following statement contains a magic number: var h = (hsbColor.H == 360) ? 0 : hsbColor.H / 60;
Magic Number,Alteridem.GitHub.Converters,ColorExtensions,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\ColorExtensions.cs,ToRgb,The following statement contains a magic number: switch (i)              {                  case 0:                      r = hsbColor.B;                      g = t;                      b = p;                      break;                    case 1:                      r = q;                      g = hsbColor.B;                      b = p;                      break;                    case 2:                      r = p;                      g = hsbColor.B;                      b = t;                      break;                    case 3:                      r = p;                      g = q;                      b = hsbColor.B;                      break;                    case 4:                      r = t;                      g = p;                      b = hsbColor.B;                      break;                    default:                      r = hsbColor.B;                      g = p;                      b = q;                      break;              }
Magic Number,Alteridem.GitHub.Converters,ColorExtensions,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\ColorExtensions.cs,ToRgb,The following statement contains a magic number: switch (i)              {                  case 0:                      r = hsbColor.B;                      g = t;                      b = p;                      break;                    case 1:                      r = q;                      g = hsbColor.B;                      b = p;                      break;                    case 2:                      r = p;                      g = hsbColor.B;                      b = t;                      break;                    case 3:                      r = p;                      g = q;                      b = hsbColor.B;                      break;                    case 4:                      r = t;                      g = p;                      b = hsbColor.B;                      break;                    default:                      r = hsbColor.B;                      g = p;                      b = q;                      break;              }
Magic Number,Alteridem.GitHub.Converters,ColorExtensions,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\ColorExtensions.cs,ToRgb,The following statement contains a magic number: switch (i)              {                  case 0:                      r = hsbColor.B;                      g = t;                      b = p;                      break;                    case 1:                      r = q;                      g = hsbColor.B;                      b = p;                      break;                    case 2:                      r = p;                      g = hsbColor.B;                      b = t;                      break;                    case 3:                      r = p;                      g = q;                      b = hsbColor.B;                      break;                    case 4:                      r = t;                      g = p;                      b = hsbColor.B;                      break;                    default:                      r = hsbColor.B;                      g = p;                      b = q;                      break;              }
Magic Number,Alteridem.GitHub.Converters,ColorExtensions,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\ColorExtensions.cs,ToRgb,The following statement contains a magic number: rgbColor.A = (byte)(hsbColor.A * 255);
Magic Number,Alteridem.GitHub.Converters,ColorExtensions,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\ColorExtensions.cs,ToRgb,The following statement contains a magic number: rgbColor.R = (byte)(r * 255);
Magic Number,Alteridem.GitHub.Converters,ColorExtensions,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\ColorExtensions.cs,ToRgb,The following statement contains a magic number: rgbColor.G = (byte)(g * 255);
Magic Number,Alteridem.GitHub.Converters,ColorExtensions,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\ColorExtensions.cs,ToRgb,The following statement contains a magic number: rgbColor.B = (byte)(b * 255);
Magic Number,Alteridem.GitHub.Converters,StringToInverseColorConverter,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\StringToInverseColorConverter.cs,Convert,The following statement contains a magic number: if ( (hsb.B > 0.6 && hsb.S < 0.4) || (hsb.B > 0.7 && hsb.H > 40 && hsb.H < 200))              {                  hsb.B = 0.4F;                  foreground = hsb.ToRgb();              }
Magic Number,Alteridem.GitHub.Converters,StringToInverseColorConverter,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\StringToInverseColorConverter.cs,Convert,The following statement contains a magic number: if ( (hsb.B > 0.6 && hsb.S < 0.4) || (hsb.B > 0.7 && hsb.H > 40 && hsb.H < 200))              {                  hsb.B = 0.4F;                  foreground = hsb.ToRgb();              }
Magic Number,Alteridem.GitHub.Converters,StringToInverseColorConverter,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\StringToInverseColorConverter.cs,Convert,The following statement contains a magic number: if ( (hsb.B > 0.6 && hsb.S < 0.4) || (hsb.B > 0.7 && hsb.H > 40 && hsb.H < 200))              {                  hsb.B = 0.4F;                  foreground = hsb.ToRgb();              }
Magic Number,Alteridem.GitHub.Converters,StringToInverseColorConverter,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\StringToInverseColorConverter.cs,Convert,The following statement contains a magic number: if ( (hsb.B > 0.6 && hsb.S < 0.4) || (hsb.B > 0.7 && hsb.H > 40 && hsb.H < 200))              {                  hsb.B = 0.4F;                  foreground = hsb.ToRgb();              }
Magic Number,Alteridem.GitHub.Converters,StringToInverseColorConverter,C:\repos\rprouse_GitHubExtension\GitHubIssues\Converters\StringToInverseColorConverter.cs,Convert,The following statement contains a magic number: if ( (hsb.B > 0.6 && hsb.S < 0.4) || (hsb.B > 0.7 && hsb.H > 40 && hsb.H < 200))              {                  hsb.B = 0.4F;                  foreground = hsb.ToRgb();              }
Magic Number,Alteridem.GitHub.Model,AuthenticationHelpers,C:\repos\rprouse_GitHubExtension\GitHubIssues\Model\AuthenticationHelpers.cs,GetNetworkInterface,The following statement contains a magic number: return nics.FirstOrDefault(addr => addr.Length > 12) ?? GetMachineName();
Magic Number,Alteridem.GitHub.Model,CredentialCache,C:\repos\rprouse_GitHubExtension\GitHubIssues\Model\CredentialCache.cs,FromString,The following statement contains a magic number: var split = cached.Split(new[] { '\t' }' 3);
Magic Number,Alteridem.GitHub.Model,CredentialCache,C:\repos\rprouse_GitHubExtension\GitHubIssues\Model\CredentialCache.cs,FromString,The following statement contains a magic number: if (split.Length < 2 || split.Length > 3)                  return null;
Magic Number,Alteridem.GitHub.Model,CredentialCache,C:\repos\rprouse_GitHubExtension\GitHubIssues\Model\CredentialCache.cs,FromString,The following statement contains a magic number: if (split.Length < 2 || split.Length > 3)                  return null;
Magic Number,Alteridem.GitHub.Model,CredentialCache,C:\repos\rprouse_GitHubExtension\GitHubIssues\Model\CredentialCache.cs,FromString,The following statement contains a magic number: try              {                  string encryptedAccessToken = split.Length > 2 ? split[2] : null;                  return new CredentialCache { Logon = split[0]' Password = Decrypt(split[1])' AccessToken = Decrypt(encryptedAccessToken) };              }              catch (Exception)              {                  return null;              }
Magic Number,Alteridem.GitHub.Model,CredentialCache,C:\repos\rprouse_GitHubExtension\GitHubIssues\Model\CredentialCache.cs,FromString,The following statement contains a magic number: try              {                  string encryptedAccessToken = split.Length > 2 ? split[2] : null;                  return new CredentialCache { Logon = split[0]' Password = Decrypt(split[1])' AccessToken = Decrypt(encryptedAccessToken) };              }              catch (Exception)              {                  return null;              }
