Implementation smell,Namespace,Class,File,Method,Description
Long Method,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The method has 1270 lines of code.
Long Method,Orchestra.StylesExplorer.MarkupReflection,XmlBamlReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\XmlBamlReader.cs,ProcessNext,The method has 137 lines of code.
Complex Method,Orchestra,StyleHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\StyleHelper.cs,CreateStyleForwardersForDefaultStyles,Cyclomatic complexity of the method is 13
Complex Method,Orchestra.Services,RecentlyUsedItemsService,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Services\RecentlyUsedItemsService.cs,AddSorted,Cyclomatic complexity of the method is 8
Complex Method,Orchestra.ViewModels,KeyboardMappingsOverviewViewModel,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\ViewModels\KeyboardMappingsOverviewViewModel.cs,InitializeAsync,Cyclomatic complexity of the method is 8
Long Parameter List,Orchestra,ToggleConfigurationCommandContainerBase,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Commands\ToggleConfigurationCommandContainerBase.cs,ToggleConfigurationCommandContainerBase,The method has 5 parameters. Parameters: commandName' configurationKey' defaultValue' commandManager' configurationService
Long Parameter List,Orchestra,ToggleConfigurationCommandContainerBase<TParameter>,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Commands\ToggleConfigurationCommandContainerBase.cs,ToggleConfigurationCommandContainerBase,The method has 5 parameters. Parameters: commandName' configurationKey' defaultValue' commandManager' configurationService
Long Parameter List,Orchestra,ToggleConfigurationCommandContainerBase<TExecuteParameter;TCanExecuteParameter>,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Commands\ToggleConfigurationCommandContainerBase.cs,ToggleConfigurationCommandContainerBase,The method has 5 parameters. Parameters: commandName' configurationKey' defaultValue' commandManager' configurationService
Long Parameter List,Orchestra,StyleHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\StyleHelper.cs,CreateStyleForwardersForDefaultStyles,The method has 6 parameters. Parameters: rootResourceDictionary' sourceResources' targetResources' forceForwarders' defaultPrefix' recreateStylesBasedOnTheme
Long Parameter List,Orchestra.Logging,FileLogListener,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Logging\FileLogListener.cs,ShouldIgnoreLogMessage,The method has 6 parameters. Parameters: log' message' logEvent' extraData' logData' time
Long Parameter List,Orchestra.Logging,RichTextBoxLogListener,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Logging\RichTextBoxLogListener.cs,Write,The method has 6 parameters. Parameters: log' message' logEvent' extraData' logData' time
Long Parameter List,Orchestra.Logging,StatusLogListener,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Logging\StatusLogListener.cs,Write,The method has 6 parameters. Parameters: log' message' logEvent' extraData' logData' time
Long Parameter List,Orchestra.Logging,TextBoxLogListener,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Logging\TextBoxLogListener.cs,Write,The method has 6 parameters. Parameters: log' message' logEvent' extraData' logData' time
Long Parameter List,Orchestra.Markup,FontImage,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\FontImage.cs,CreateGlyph,The method has 6 parameters. Parameters: text' fontFamily' fontStyle' fontWeight' fontStretch' foreBrush
Long Parameter List,Orchestra.StylesExplorer.MarkupReflection,TypeDeclaration,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\TypeDeclaration.cs,TypeDeclaration,The method has 5 parameters. Parameters: resolver' name' namespaceName' assemblyId' isExtension
Long Parameter List,Orchestra.StylesExplorer.MarkupReflection,TypeDeclaration,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\TypeDeclaration.cs,TypeDeclaration,The method has 5 parameters. Parameters: reader' resolver' name' namespaceName' assemblyId
Long Parameter List,Orchestra.StylesExplorer.MarkupReflection,TypeDeclaration,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\TypeDeclaration.cs,TypeDeclaration,The method has 6 parameters. Parameters: reader' resolver' name' namespaceName' assemblyId' isKnown
Long Parameter List,Orchestra.Models,AboutInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Models\AboutInfo.cs,AboutInfo,The method has 16 parameters. Parameters: companyLogoUri' logoImageSource' uriInfo' assembly' companyLogoForSplashScreenUri' appIcon' buildDateTime' company' copyright' copyrightUri' description' displayVersion' informationalVersion' name' productName' version
Long Parameter List,Orchestra.Services,AppDataService,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Services\AppDataService.cs,AppDataService,The method has 5 parameters. Parameters: messageService' saveFileService' processService' directoryService' fileService
Long Parameter List,Orchestra.ViewModels,AboutViewModel,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\ViewModels\AboutViewModel.cs,AboutViewModel,The method has 5 parameters. Parameters: aboutInfo' processService' uiVisualizerService' messageService' languageService
Long Parameter List,Orchestra.ViewModels,KeyboardMappingsCustomizationViewModel,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\ViewModels\KeyboardMappingsCustomizationViewModel.cs,KeyboardMappingsCustomizationViewModel,The method has 5 parameters. Parameters: keyboardMappingsService' commandManager' commandInfoService' languageService' messageService
Long Parameter List,Orchestra.ViewModels,KeyboardMappingsOverviewViewModel,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\ViewModels\KeyboardMappingsOverviewViewModel.cs,KeyboardMappingsOverviewViewModel,The method has 6 parameters. Parameters: commandManager' commandInfoService' uiVisualizerService' languageService' viewExportService' keyboardMappingsService
Long Parameter List,Orchestra.Windows,FixMaximize,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Windows\FixMaximize.cs,FixMaximize_RibbonWindow_WndProc,The method has 5 parameters. Parameters: hwnd' msg' wParam' lParam' handled
Long Parameter List,Orchestra.Windows,FixMaximize,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Windows\FixMaximize.cs,SetWindowPos,The method has 7 parameters. Parameters: hWnd' hWndInsertAfter' X' Y' cx' cy' uFlags
Long Identifier,Orchestra,StyleHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\StyleHelper.cs,CreateStyleForwardersForDefaultStyles,The length of the parameter resourceDictionaryDefiningStyle is 31.
Long Identifier,Orchestra,StyleHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\StyleHelper.cs,,The length of the parameter _styleToFrameworkElementTypeCache is 33.
Long Identifier,Orchestra,ThemeHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\ThemeHelper.cs,,The length of the parameter _accentColorResourceDictionary is 30.
Long Identifier,Orchestra.Behaviors,HintsBehavior,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Behaviors\HintsBehavior.cs,HintsBehavior,The length of the parameter adorneredTooltipsManagerFactory is 31.
Long Identifier,Orchestra.Behaviors,HintsBehavior,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Behaviors\HintsBehavior.cs,,The length of the parameter _adorneredTooltipsManagerFactory is 32.
Long Identifier,Orchestra.Controls,BusyIndicator,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Controls\BusyIndicator.xaml.cs,,The length of the parameter IgnoreUnloadedEventCountProperty is 32.
Long Identifier,Orchestra.StylesExplorer.MarkupReflection,XmlBamlReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\XmlBamlReader.cs,,The length of the parameter staticConvertCustomBinaryToObjectMethod is 39.
Long Statement,Orchestra,WindowExtensions,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Extensions\WindowExtensions.cs,CenterWindowToParent,The length of the statement  "                window.CenterWindowToSize(new Rect(parentWindow.Left' parentWindow.Top' parentWindow.ActualWidth' parentWindow.ActualHeight)); " is 126.
Long Statement,Orchestra,WindowExtensions,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Extensions\WindowExtensions.cs,BringWindowToTop,The length of the statement  "                var windowHandle = (ownerWindow != null) ? new WindowInteropHelper(ownerWindow).Handle : Process.GetCurrentProcess().MainWindowHandle; " is 134.
Long Statement,Orchestra,WindowExtensions,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Extensions\WindowExtensions.cs,SaveWindowSize,The length of the statement  "                var contents = $"{ObjectToStringHelper.ToString(window.Width' culture)}{SizeSeparator}{ObjectToStringHelper.ToString(window.Height' culture)}{SizeSeparator}{window.WindowState}"; " is 178.
Long Statement,Orchestra,DotNetPatchHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\DotNetPatchHelper.cs,HandleException,The length of the statement  "                    const string message = "Unfortunately the application stopped working. It looks like a system update is not installed. Please make sure to update Windows or to download the patch manually from http://support.microsoft.com/kb/2468871"; " is 234.
Long Statement,Orchestra,DotNetPatchHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\DotNetPatchHelper.cs,HandleException,The length of the statement  "            Log.Info("Below is a list of the last first chance exceptions that occurred. It might provide more information to the issue."); " is 127.
Long Statement,Orchestra,IconHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,ExtractIcon,The length of the statement  "            var bitmapSource = Imaging.CreateBitmapSourceFromHIcon(icon.Handle' Int32Rect.Empty' BitmapSizeOptions.FromEmptyOptions()); " is 123.
Long Statement,Orchestra,IconHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,ToBitmap,The length of the statement  "            var data = bitmap.LockBits(new Rectangle(Point.Empty' bitmap.Size)' ImageLockMode.WriteOnly' PixelFormat.Format32bppPArgb); " is 123.
Long Statement,Orchestra,LogHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\LogHelper.cs,CleanUpLogFiles,The length of the statement  "                var files = Directory.GetFiles(directory' filter).Select(file => new { FileName = file' LastWriteTime = File.GetLastWriteTime(file)} ).ToList(); " is 144.
Long Statement,Orchestra,StyleHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\StyleHelper.cs,EnsureApplicationResourcesAndCreateStyleForwarders,The length of the statement  "                    Application.Current.Resources.MergedDictionaries.Add(Application.LoadComponent(applicationResourceDictionary) as ResourceDictionary); " is 133.
Long Statement,Orchestra,StyleHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\StyleHelper.cs,CreateStyleForwardersForDefaultStyles,The length of the statement  "                    CreateStyleForwardersForDefaultStyles(rootResourceDictionary' resourceDictionary' targetResources' forceForwarders' defaultPrefix); " is 131.
Long Statement,Orchestra,StyleHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\StyleHelper.cs,CreateStyleForwardersForDefaultStyles,The length of the statement  "                                Log.Debug("Completing the style info for '{0}' with the additional info from the default style definition"' targetType); " is 120.
Long Statement,Orchestra,StyleHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\StyleHelper.cs,FindFrameworkElementStyleIsBasedOn,The length of the statement  "                    string typeNamespace = (splittedType.Length == 2) ? splittedType[0] : "http://schemas.microsoft.com/winfx/2006/xaml/presentation"; " is 130.
Long Statement,Orchestra,ThemeHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\ThemeHelper.cs,CreateAccentColorResourceDictionary,The length of the statement  "            resourceDictionary.Add("IdealForegroundColorBrush"' new SolidColorBrush((Color)resourceDictionary["IdealForegroundColor"])); " is 124.
Long Statement,Orchestra,ThemeHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\ThemeHelper.cs,CreateAccentColorResourceDictionary,The length of the statement  "            resourceDictionary.Add("IdealForegroundDisabledBrush"' new SolidColorBrush((Color)resourceDictionary["IdealForegroundColor"]) { Opacity = 0.4 }); " is 145.
Long Statement,Orchestra,ThemeHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\ThemeHelper.cs,CreateAccentColorResourceDictionary,The length of the statement  "            resourceDictionary.Add("MetroDataGrid.HighlightTextBrush"' new SolidColorBrush((Color)resourceDictionary["IdealForegroundColor"])); " is 131.
Long Statement,Orchestra,ThemeHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\ThemeHelper.cs,CreateAccentColorResourceDictionary,The length of the statement  "            resourceDictionary.Add("MetroDataGrid.MouseOverHighlightBrush"' new SolidColorBrush((Color)resourceDictionary["AccentColor3"])); " is 128.
Long Statement,Orchestra,ThemeHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\ThemeHelper.cs,CreateAccentColorResourceDictionary,The length of the statement  "            resourceDictionary.Add("MetroDataGrid.FocusBorderBrush"' new SolidColorBrush((Color)resourceDictionary["AccentColor"])); " is 120.
Long Statement,Orchestra,ThemeHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\ThemeHelper.cs,CreateAccentColorResourceDictionary,The length of the statement  "            resourceDictionary.Add("MetroDataGrid.InactiveSelectionHighlightBrush"' new SolidColorBrush((Color)resourceDictionary["AccentColor2"])); " is 136.
Long Statement,Orchestra,ThemeHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\ThemeHelper.cs,CreateAccentColorResourceDictionary,The length of the statement  "            resourceDictionary.Add("MetroDataGrid.InactiveSelectionHighlightTextBrush"' new SolidColorBrush((Color)resourceDictionary["IdealForegroundColor"])); " is 148.
Long Statement,Orchestra.Behaviors,HintsBehavior,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Behaviors\HintsBehavior.cs,Initialize,The length of the statement  "                Log.Error("Cannot find AdornerLayer. Use the Adorner property to specify a specific instance to use when searching for an adorner layer"); " is 138.
Long Statement,Orchestra.Configuration,ConfigurationSynchronizerBase<T>,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Configuration\ConfigurationSynchronizerBase.cs,Initialize,The length of the statement  "            // Note: important to apply first' otherwise the check for values might be equal (which we don't want during first apply) " is 121.
Long Statement,Orchestra.Markup,FontImage,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\FontImage.cs,GetImageSource,The length of the statement  "                throw Log.ErrorAndCreateException<InvalidOperationException>("FontFamily cannot be null' make sure to set it or use the DefaultFontFamily"); " is 140.
Long Statement,Orchestra.Markup,FontImage,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\FontImage.cs,GetImageSource,The length of the statement  "                throw Log.ErrorAndCreateException<InvalidOperationException>("FontFamily '{0}' is not yet registered' register it first using the RegisterFont method"' fontFamily); " is 164.
Long Statement,Orchestra.Markup,FontImage,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\FontImage.cs,CreateGlyph,The length of the statement  "                    var glyphRun = new GlyphRun(glyphTypeface' 0' false' RenderingEmSize' glyphIndexes' new Point(0' 0)' advanceWidths' null' null' null' null' null' null); " is 152.
Long Statement,Orchestra.StylesExplorer.MarkupReflection,AppDomainTypeResolver,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\AppDomainTypeResolver.cs,GetIntoNewAppDomain,The length of the statement  "            var domain = AppDomain.CreateDomain("AppDomainTypeResolver"' null' info' new PermissionSet(PermissionState.Unrestricted)); " is 122.
Long Statement,Orchestra.StylesExplorer.MarkupReflection,AppDomainTypeResolver,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\AppDomainTypeResolver.cs,GetIntoNewAppDomain,The length of the statement  "                typeof(AppDomainTypeResolver).FullName' false' BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.CreateInstance' null' new object[] { domain' baseDir }' null' null); " is 177.
Long Statement,Orchestra.StylesExplorer.MarkupReflection,BamlAssembly,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\BamlAssembly.cs,GetAssemblyResourceUri,The length of the statement  "            return new Uri(String.Format(@"{0};V{1};{2};component\{3}"' asm.Name' asm.Version' token' Path.ChangeExtension(resourceName' ".xaml"))' UriKind.RelativeOrAbsolute); " is 164.
Long Statement,Orchestra.StylesExplorer.MarkupReflection,PropertyDeclaration,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\PropertyDeclaration.cs,ToString,The length of the statement  "            if (((this.DeclaringType != null) && (this.DeclaringType.Name == "XmlNamespace")) && ((this.DeclaringType.Namespace == null) && (this.DeclaringType.Assembly == null))) " is 167.
Long Statement,Orchestra.StylesExplorer.MarkupReflection,XmlBamlReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\XmlBamlReader.cs,ReadPropertyCustom,The length of the statement  "                    value = ((IFormattable)staticConvertCustomBinaryToObjectMethod.Invoke(null' new object[] { this.reader })).ToString("G"' CultureInfo.InvariantCulture); " is 151.
Long Statement,Orchestra.StylesExplorer.MarkupReflection,XmlBamlReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\XmlBamlReader.cs,ReadKeyElementStart,The length of the statement  "            XmlBamlPropertyElement property = new XmlBamlPropertyElement(elements.Peek()' PropertyType.Key' new PropertyDeclaration("Key"' declaration)); " is 141.
Long Statement,Orchestra.StylesExplorer.MarkupReflection,XmlBamlReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\XmlBamlReader.cs,FormatPropertyDeclaration,The length of the statement  "            TypeDeclaration elementDeclaration = (useReading) ? readingElements.Peek().TypeDeclaration : elements.Peek().TypeDeclaration; " is 125.
Long Statement,Orchestra.StylesExplorer.MarkupReflection,XmlBamlReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\XmlBamlReader.cs,FormatPropertyDeclaration,The length of the statement  "                descriptor = this.Resolver.GetDependencyPropertyDescriptor(propertyDeclaration.Name' elementDeclaration.Type' propertyDeclaration.DeclaringType.Type); " is 150.
Long Statement,Orchestra.StylesExplorer.MarkupReflection,XmlBamlReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\XmlBamlReader.cs,FormatPropertyDeclaration,The length of the statement  "            bool isDescendant = (areValidTypes && (propertyDeclaration.DeclaringType.Type.Equals(elementDeclaration.Type) || elementDeclaration.Type.IsSubclassOf(propertyDeclaration.DeclaringType.Type))); " is 192.
Long Statement,Orchestra.StylesExplorer.MarkupReflection,XmlBamlReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\XmlBamlReader.cs,FormatPropertyDeclaration,The length of the statement  "                XmlPIMapping mapping = FindByClrNamespaceAndAssemblyId(propertyDeclaration.DeclaringType.Namespace' propertyDeclaration.DeclaringType.AssemblyId); " is 146.
Long Statement,Orchestra.StylesExplorer.MarkupReflection,XmlBamlReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\XmlBamlReader.cs,ReadPropertyWithStaticResourceIdentifier,The length of the statement  "            string value = String.Format("{{{0}{1}StaticResource {2}}}"' prefix' (String.IsNullOrEmpty(prefix)) ? String.Empty : ":"' staticResource); " is 138.
Long Statement,Orchestra.Services,AboutInfoService,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Services\AboutInfoService.cs,GetAboutInfo,The length of the statement  "            var aboutInfo = new AboutInfo(new Uri("pack://application:'''/Resources/Images/CompanyLogo.png"' UriKind.RelativeOrAbsolute)); " is 126.
Long Statement,Orchestra.Services,AdorneredTooltipsManager,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Services\AdorneredTooltipsManager.cs,FindElement,The length of the statement  "            return dependencyObject.FindVisualDescendant(o => (o is FrameworkElement) && string.Equals(((FrameworkElement)o).Name' hint.ControlName)) as UIElement; " is 151.
Long Statement,Orchestra.Services,AdorneredTooltipsManagerFactory,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Services\AdorneredTooltipsManagerFactory.cs,Create,The length of the statement  "            var adorneredHintsCollection = _serviceLocator.ResolveTypeUsingParameters<IAdorneredTooltipFactory>(new object[] { adorneredHintFactory }); " is 139.
Long Statement,Orchestra.Services,AdorneredTooltipsManagerFactory,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Services\AdorneredTooltipsManagerFactory.cs,Create,The length of the statement  "            return _typeFactory.CreateInstanceWithParameters<AdorneredTooltipsManager>(adornerGenerator' hintsProvider' hintsAdornerLayer' adorneredHintsCollection); " is 153.
Long Statement,Orchestra.Services,AppDataService,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Services\AppDataService.cs,BackupUserDataAsync,The length of the statement  "            _saveFileService.FileName = string.Format("{0} backup {1}.zip"' assembly.Title()' DateTime.Now.ToString("yyyyMMdd hhmmss")); " is 124.
Long Statement,Orchestra.Services,KeyboardMappingsService,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Services\KeyboardMappingsService.cs,Load,The length of the statement  "                            Log.Debug("Updating keyboard mapping for command '{0}' to '{1}'"' keyboardMapping.CommandName' keyboardMapping.InputGesture); " is 125.
Long Statement,Orchestra.Services,KeyboardMappingsService,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Services\KeyboardMappingsService.cs,Load,The length of the statement  "                                Log.Debug("Command '{0}' is not created in the CommandManager' cannot update input gesture"' keyboardMapping.CommandName); " is 122.
Long Statement,Orchestra.Tooltips,AdorneredTooltip,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Tooltips\AdorneredTooltip.cs,UpdateVisibility,The length of the statement  "            _adorner.SetCurrentValue(UIElement.VisibilityProperty' _visible && _adornerLayerVisible ? Visibility.Visible : Visibility.Collapsed); " is 133.
Long Statement,Orchestra.ViewModels,KeyboardMappingsCustomizationViewModel,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\ViewModels\KeyboardMappingsCustomizationViewModel.cs,OnResetExecuteAsync,The length of the statement  "            var messageResult = await _messageService.ShowAsync(_languageService.GetString("Orchestra_ResetKeyboardShortcutsAreYouSure")' string.Empty' MessageButton.YesNo' MessageImage.Question); " is 184.
Long Statement,Orchestra.ViewModels,KeyboardMappingsCustomizationViewModel,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\ViewModels\KeyboardMappingsCustomizationViewModel.cs,OnAssignExecuteAsync,The length of the statement  "                    messageBuilder.AppendLine(_languageService.GetString("Orchestra_AssignInputGestureUsedByFollowCommands")' selectedInputGesture); " is 128.
Long Statement,Orchestra.ViewModels,KeyboardMappingsCustomizationViewModel,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\ViewModels\KeyboardMappingsCustomizationViewModel.cs,OnAssignExecuteAsync,The length of the statement  "                    if (await _messageService.ShowAsync(messageBuilder.ToString()' _languageService.GetString("Orchestra_ReplaceInputGesture")'  " is 123.
Long Statement,Orchestra.ViewModels,KeyboardMappingsOverviewViewModel,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\ViewModels\KeyboardMappingsOverviewViewModel.cs,InitializeAsync,The length of the statement  "            Title = string.Format(_languageService.GetString("Orchestra_ShortcutsForApplication")' AssemblyHelper.GetEntryAssembly().Title()); " is 130.
Long Statement,Orchestra.Views,CrashWarningViewModel,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\ViewModels\CrashWarningViewModel.cs,OnResetUserSettingsExecuteAsync,The length of the statement  "            await _messageService.ShowInformationAsync(_languageService.GetString("Orchestra_DeletedUserDataSettings")' _assembly.Title()); " is 127.
Long Statement,Orchestra.Windows,FixMaximize,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Windows\FixMaximize.cs,FixMaximize_RibbonWindow_WndProc,The length of the statement  "                    window.Dispatcher.BeginInvoke(() => SetWindowPos(hwnd' IntPtr.Zero' newRect.left' newRect.top' width' height' SWP_NOOWNERZORDER)); " is 130.
Long Statement,Orchestra.Windows,FixMaximize,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Windows\FixMaximize.cs,FixMaximize_RibbonWindow_WndProc,The length of the statement  "                window.Dispatcher.BeginInvoke(() => SetWindowPos(hwnd' IntPtr.Zero' newRect.left' newRect.top' 0' 0' SWP_NOOWNERZORDER | SWP_NOSIZE)); " is 134.
Long Statement,Orchestra.Windows,FixMaximize,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Windows\FixMaximize.cs,FixMaximize_RibbonWindow_WndProc,The length of the statement  "                mmi.ptMaxPosition.x = 1; // need to set this to positive value for MaxSize to have any effect' we will reposition later anyway " is 126.
Long Statement,Orchestra.Windows,FixMaximize,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Windows\FixMaximize.cs,FixMaximize_RibbonWindow_WndProc,The length of the statement  "                mmi.ptMaxPosition.y = 1; // need to set this to positive value for MaxSize to have any effect' we will reposition later anyway " is 126.
Complex Conditional,Orchestra.StylesExplorer.MarkupReflection,PropertyDeclaration,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\PropertyDeclaration.cs,ToString,The conditional expression  "((this.DeclaringType != null) && (this.DeclaringType.Name == "XmlNamespace")) && ((this.DeclaringType.Namespace == null) && (this.DeclaringType.Assembly == null))"  is complex.
Complex Conditional,Orchestra.StylesExplorer.MarkupReflection,XmlBamlReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\XmlBamlReader.cs,FormatPropertyDeclaration,The conditional expression  "(differentType || isAttached || !checkType) && propertyDeclaration.DeclaringType.Name.Length > 0"  is complex.
Empty Catch Block,Orchestra,WindowExtensions,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Extensions\WindowExtensions.cs,BringWindowToTop,The method has an empty catch block.
Empty Catch Block,Orchestra,LogHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\LogHelper.cs,CleanUpLogFiles,The method has an empty catch block.
Empty Catch Block,Orchestra.Controls,MediaElementThreadFactory,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Controls\MediaElementThreadFactory.cs,WorkerThread,The method has an empty catch block.
Empty Catch Block,Orchestra.StylesExplorer.MarkupReflection,BamlAssembly,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\BamlAssembly.cs,ReadBaml,The method has an empty catch block.
Magic Number,Orchestra,ApplicationWatcherBase,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\ApplicationWatchers\ApplicationWatcherBase.cs,ApplicationWatcherBase,The following statement contains a magic number: DispatcherTimer.Interval = TimeSpan.FromMilliseconds(5);
Magic Number,Orchestra,WindowExtensions,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Extensions\WindowExtensions.cs,SetMaximumWidth,The following statement contains a magic number: window.SetCurrentValue(FrameworkElement.MaxWidthProperty' SystemParameters.WorkArea.Width - 40);
Magic Number,Orchestra,WindowExtensions,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Extensions\WindowExtensions.cs,SetMaximumHeight,The following statement contains a magic number: window.SetCurrentValue(FrameworkElement.MaxHeightProperty' SystemParameters.WorkArea.Height - 40);
Magic Number,Orchestra,WindowExtensions,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Extensions\WindowExtensions.cs,CenterWindowToSize,The following statement contains a magic number: window.SetCurrentValue(Window.LeftProperty' parentRect.Left + (parentRect.Width / 2) - (windowWidth / 2));
Magic Number,Orchestra,WindowExtensions,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Extensions\WindowExtensions.cs,CenterWindowToSize,The following statement contains a magic number: window.SetCurrentValue(Window.LeftProperty' parentRect.Left + (parentRect.Width / 2) - (windowWidth / 2));
Magic Number,Orchestra,WindowExtensions,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Extensions\WindowExtensions.cs,CenterWindowToSize,The following statement contains a magic number: window.SetCurrentValue(Window.TopProperty' parentRect.Top + (parentRect.Height / 2) - (windowHeight / 2));
Magic Number,Orchestra,WindowExtensions,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Extensions\WindowExtensions.cs,CenterWindowToSize,The following statement contains a magic number: window.SetCurrentValue(Window.TopProperty' parentRect.Top + (parentRect.Height / 2) - (windowHeight / 2));
Magic Number,Orchestra,WindowExtensions,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Extensions\WindowExtensions.cs,LoadWindowSize,The following statement contains a magic number: try              {                  var sizeText = File.ReadAllText(storageFile);                  if (string.IsNullOrWhiteSpace(sizeText))                  {                      Log.Warning($"Size text for window is empty' cannot restore window size");                      return;                  }                    var splitted = sizeText.Split(new [] { SizeSeparator }' StringSplitOptions.RemoveEmptyEntries);                  if (splitted.Length < 2)                  {                      Log.Warning($"Size text for window could not be splitted correctly' cannot restore window size");                      return;                  }                    var culture = CultureInfo.InvariantCulture;                    var width = StringToObjectHelper.ToDouble(splitted[0]' culture);                  var height = StringToObjectHelper.ToDouble(splitted[1]' culture);                    Log.Debug($"Setting window size for '{windowName}' to '{width} x {height}'");                    window.SetCurrentValue(FrameworkElement.WidthProperty' width);                  window.SetCurrentValue(FrameworkElement.HeightProperty' height);                    if (restoreWindowState)                  {                      if (splitted.Length > 2)                      {                          var windowState = Enum<WindowState>.Parse(splitted[2]);                          if (windowState != window.WindowState)                          {                              Log.Debug($"Restoring window state for '{windowName}' to '{windowState}'");                                window.SetCurrentValue(Window.WindowStateProperty' windowState);                          }                      }                  }              }              catch (Exception ex)              {                  Log.Warning(ex' $"Failed to load window size from file '{storageFile}'");              }
Magic Number,Orchestra,WindowExtensions,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Extensions\WindowExtensions.cs,LoadWindowSize,The following statement contains a magic number: try              {                  var sizeText = File.ReadAllText(storageFile);                  if (string.IsNullOrWhiteSpace(sizeText))                  {                      Log.Warning($"Size text for window is empty' cannot restore window size");                      return;                  }                    var splitted = sizeText.Split(new [] { SizeSeparator }' StringSplitOptions.RemoveEmptyEntries);                  if (splitted.Length < 2)                  {                      Log.Warning($"Size text for window could not be splitted correctly' cannot restore window size");                      return;                  }                    var culture = CultureInfo.InvariantCulture;                    var width = StringToObjectHelper.ToDouble(splitted[0]' culture);                  var height = StringToObjectHelper.ToDouble(splitted[1]' culture);                    Log.Debug($"Setting window size for '{windowName}' to '{width} x {height}'");                    window.SetCurrentValue(FrameworkElement.WidthProperty' width);                  window.SetCurrentValue(FrameworkElement.HeightProperty' height);                    if (restoreWindowState)                  {                      if (splitted.Length > 2)                      {                          var windowState = Enum<WindowState>.Parse(splitted[2]);                          if (windowState != window.WindowState)                          {                              Log.Debug($"Restoring window state for '{windowName}' to '{windowState}'");                                window.SetCurrentValue(Window.WindowStateProperty' windowState);                          }                      }                  }              }              catch (Exception ex)              {                  Log.Warning(ex' $"Failed to load window size from file '{storageFile}'");              }
Magic Number,Orchestra,WindowExtensions,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Extensions\WindowExtensions.cs,LoadWindowSize,The following statement contains a magic number: try              {                  var sizeText = File.ReadAllText(storageFile);                  if (string.IsNullOrWhiteSpace(sizeText))                  {                      Log.Warning($"Size text for window is empty' cannot restore window size");                      return;                  }                    var splitted = sizeText.Split(new [] { SizeSeparator }' StringSplitOptions.RemoveEmptyEntries);                  if (splitted.Length < 2)                  {                      Log.Warning($"Size text for window could not be splitted correctly' cannot restore window size");                      return;                  }                    var culture = CultureInfo.InvariantCulture;                    var width = StringToObjectHelper.ToDouble(splitted[0]' culture);                  var height = StringToObjectHelper.ToDouble(splitted[1]' culture);                    Log.Debug($"Setting window size for '{windowName}' to '{width} x {height}'");                    window.SetCurrentValue(FrameworkElement.WidthProperty' width);                  window.SetCurrentValue(FrameworkElement.HeightProperty' height);                    if (restoreWindowState)                  {                      if (splitted.Length > 2)                      {                          var windowState = Enum<WindowState>.Parse(splitted[2]);                          if (windowState != window.WindowState)                          {                              Log.Debug($"Restoring window state for '{windowName}' to '{windowState}'");                                window.SetCurrentValue(Window.WindowStateProperty' windowState);                          }                      }                  }              }              catch (Exception ex)              {                  Log.Warning(ex' $"Failed to load window size from file '{storageFile}'");              }
Magic Number,Orchestra,DotNetPatchHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\DotNetPatchHelper.cs,OnAppDomainFirstChanceException,The following statement contains a magic number: lock (LastFirstChanceExceptions)              {                  if (!LastFirstChanceExceptions.Contains(e.Exception))                  {                      LastFirstChanceExceptions.Enqueue(e.Exception);                  }                    while (LastFirstChanceExceptions.Count > 5)                  {                      LastFirstChanceExceptions.Dequeue();                  }              }
Magic Number,Orchestra,IconHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,ExtractVistaIcon,The following statement contains a magic number: try              {                  byte[] srcBuf = null;                  using (var stream = new MemoryStream())                  {                      icon.Save(stream);                      srcBuf = stream.ToArray();                  }                    const int SizeICONDIR = 6;                  const int SizeICONDIRENTRY = 16;                  int iCount = BitConverter.ToInt16(srcBuf' 4);                  for (int iIndex = 0; iIndex < iCount; iIndex++)                  {                      int width = srcBuf[SizeICONDIR + SizeICONDIRENTRY * iIndex];                      int height = srcBuf[SizeICONDIR + SizeICONDIRENTRY * iIndex + 1];                      int bitCount = BitConverter.ToInt16(srcBuf' SizeICONDIR + SizeICONDIRENTRY * iIndex + 6);                        if (width == 0 && height == 0 && bitCount == 32)                      {                          int imageSize = BitConverter.ToInt32(srcBuf' SizeICONDIR + SizeICONDIRENTRY * iIndex + 8);                          int imageOffset = BitConverter.ToInt32(srcBuf' SizeICONDIR + SizeICONDIRENTRY * iIndex + 12);                          using (var destStream = new MemoryStream())                          {                              var writer = new BinaryWriter(destStream);                              writer.Write(srcBuf' imageOffset' imageSize);                              destStream.Seek(0' SeekOrigin.Begin);                                extractedIcon = new Bitmap(destStream); // This is PNG! :)                              return extractedIcon;                          }                      }                  }              }              catch              {                  return null;                }
Magic Number,Orchestra,IconHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,ExtractVistaIcon,The following statement contains a magic number: try              {                  byte[] srcBuf = null;                  using (var stream = new MemoryStream())                  {                      icon.Save(stream);                      srcBuf = stream.ToArray();                  }                    const int SizeICONDIR = 6;                  const int SizeICONDIRENTRY = 16;                  int iCount = BitConverter.ToInt16(srcBuf' 4);                  for (int iIndex = 0; iIndex < iCount; iIndex++)                  {                      int width = srcBuf[SizeICONDIR + SizeICONDIRENTRY * iIndex];                      int height = srcBuf[SizeICONDIR + SizeICONDIRENTRY * iIndex + 1];                      int bitCount = BitConverter.ToInt16(srcBuf' SizeICONDIR + SizeICONDIRENTRY * iIndex + 6);                        if (width == 0 && height == 0 && bitCount == 32)                      {                          int imageSize = BitConverter.ToInt32(srcBuf' SizeICONDIR + SizeICONDIRENTRY * iIndex + 8);                          int imageOffset = BitConverter.ToInt32(srcBuf' SizeICONDIR + SizeICONDIRENTRY * iIndex + 12);                          using (var destStream = new MemoryStream())                          {                              var writer = new BinaryWriter(destStream);                              writer.Write(srcBuf' imageOffset' imageSize);                              destStream.Seek(0' SeekOrigin.Begin);                                extractedIcon = new Bitmap(destStream); // This is PNG! :)                              return extractedIcon;                          }                      }                  }              }              catch              {                  return null;                }
Magic Number,Orchestra,IconHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,ExtractVistaIcon,The following statement contains a magic number: try              {                  byte[] srcBuf = null;                  using (var stream = new MemoryStream())                  {                      icon.Save(stream);                      srcBuf = stream.ToArray();                  }                    const int SizeICONDIR = 6;                  const int SizeICONDIRENTRY = 16;                  int iCount = BitConverter.ToInt16(srcBuf' 4);                  for (int iIndex = 0; iIndex < iCount; iIndex++)                  {                      int width = srcBuf[SizeICONDIR + SizeICONDIRENTRY * iIndex];                      int height = srcBuf[SizeICONDIR + SizeICONDIRENTRY * iIndex + 1];                      int bitCount = BitConverter.ToInt16(srcBuf' SizeICONDIR + SizeICONDIRENTRY * iIndex + 6);                        if (width == 0 && height == 0 && bitCount == 32)                      {                          int imageSize = BitConverter.ToInt32(srcBuf' SizeICONDIR + SizeICONDIRENTRY * iIndex + 8);                          int imageOffset = BitConverter.ToInt32(srcBuf' SizeICONDIR + SizeICONDIRENTRY * iIndex + 12);                          using (var destStream = new MemoryStream())                          {                              var writer = new BinaryWriter(destStream);                              writer.Write(srcBuf' imageOffset' imageSize);                              destStream.Seek(0' SeekOrigin.Begin);                                extractedIcon = new Bitmap(destStream); // This is PNG! :)                              return extractedIcon;                          }                      }                  }              }              catch              {                  return null;                }
Magic Number,Orchestra,IconHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,ExtractVistaIcon,The following statement contains a magic number: try              {                  byte[] srcBuf = null;                  using (var stream = new MemoryStream())                  {                      icon.Save(stream);                      srcBuf = stream.ToArray();                  }                    const int SizeICONDIR = 6;                  const int SizeICONDIRENTRY = 16;                  int iCount = BitConverter.ToInt16(srcBuf' 4);                  for (int iIndex = 0; iIndex < iCount; iIndex++)                  {                      int width = srcBuf[SizeICONDIR + SizeICONDIRENTRY * iIndex];                      int height = srcBuf[SizeICONDIR + SizeICONDIRENTRY * iIndex + 1];                      int bitCount = BitConverter.ToInt16(srcBuf' SizeICONDIR + SizeICONDIRENTRY * iIndex + 6);                        if (width == 0 && height == 0 && bitCount == 32)                      {                          int imageSize = BitConverter.ToInt32(srcBuf' SizeICONDIR + SizeICONDIRENTRY * iIndex + 8);                          int imageOffset = BitConverter.ToInt32(srcBuf' SizeICONDIR + SizeICONDIRENTRY * iIndex + 12);                          using (var destStream = new MemoryStream())                          {                              var writer = new BinaryWriter(destStream);                              writer.Write(srcBuf' imageOffset' imageSize);                              destStream.Seek(0' SeekOrigin.Begin);                                extractedIcon = new Bitmap(destStream); // This is PNG! :)                              return extractedIcon;                          }                      }                  }              }              catch              {                  return null;                }
Magic Number,Orchestra,IconHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,ExtractVistaIcon,The following statement contains a magic number: try              {                  byte[] srcBuf = null;                  using (var stream = new MemoryStream())                  {                      icon.Save(stream);                      srcBuf = stream.ToArray();                  }                    const int SizeICONDIR = 6;                  const int SizeICONDIRENTRY = 16;                  int iCount = BitConverter.ToInt16(srcBuf' 4);                  for (int iIndex = 0; iIndex < iCount; iIndex++)                  {                      int width = srcBuf[SizeICONDIR + SizeICONDIRENTRY * iIndex];                      int height = srcBuf[SizeICONDIR + SizeICONDIRENTRY * iIndex + 1];                      int bitCount = BitConverter.ToInt16(srcBuf' SizeICONDIR + SizeICONDIRENTRY * iIndex + 6);                        if (width == 0 && height == 0 && bitCount == 32)                      {                          int imageSize = BitConverter.ToInt32(srcBuf' SizeICONDIR + SizeICONDIRENTRY * iIndex + 8);                          int imageOffset = BitConverter.ToInt32(srcBuf' SizeICONDIR + SizeICONDIRENTRY * iIndex + 12);                          using (var destStream = new MemoryStream())                          {                              var writer = new BinaryWriter(destStream);                              writer.Write(srcBuf' imageOffset' imageSize);                              destStream.Seek(0' SeekOrigin.Begin);                                extractedIcon = new Bitmap(destStream); // This is PNG! :)                              return extractedIcon;                          }                      }                  }              }              catch              {                  return null;                }
Magic Number,Orchestra,IconHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,ExtractVistaIcon,The following statement contains a magic number: try              {                  byte[] srcBuf = null;                  using (var stream = new MemoryStream())                  {                      icon.Save(stream);                      srcBuf = stream.ToArray();                  }                    const int SizeICONDIR = 6;                  const int SizeICONDIRENTRY = 16;                  int iCount = BitConverter.ToInt16(srcBuf' 4);                  for (int iIndex = 0; iIndex < iCount; iIndex++)                  {                      int width = srcBuf[SizeICONDIR + SizeICONDIRENTRY * iIndex];                      int height = srcBuf[SizeICONDIR + SizeICONDIRENTRY * iIndex + 1];                      int bitCount = BitConverter.ToInt16(srcBuf' SizeICONDIR + SizeICONDIRENTRY * iIndex + 6);                        if (width == 0 && height == 0 && bitCount == 32)                      {                          int imageSize = BitConverter.ToInt32(srcBuf' SizeICONDIR + SizeICONDIRENTRY * iIndex + 8);                          int imageOffset = BitConverter.ToInt32(srcBuf' SizeICONDIR + SizeICONDIRENTRY * iIndex + 12);                          using (var destStream = new MemoryStream())                          {                              var writer = new BinaryWriter(destStream);                              writer.Write(srcBuf' imageOffset' imageSize);                              destStream.Seek(0' SeekOrigin.Begin);                                extractedIcon = new Bitmap(destStream); // This is PNG! :)                              return extractedIcon;                          }                      }                  }              }              catch              {                  return null;                }
Magic Number,Orchestra,IconHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,ExtractVistaIcon,The following statement contains a magic number: try              {                  byte[] srcBuf = null;                  using (var stream = new MemoryStream())                  {                      icon.Save(stream);                      srcBuf = stream.ToArray();                  }                    const int SizeICONDIR = 6;                  const int SizeICONDIRENTRY = 16;                  int iCount = BitConverter.ToInt16(srcBuf' 4);                  for (int iIndex = 0; iIndex < iCount; iIndex++)                  {                      int width = srcBuf[SizeICONDIR + SizeICONDIRENTRY * iIndex];                      int height = srcBuf[SizeICONDIR + SizeICONDIRENTRY * iIndex + 1];                      int bitCount = BitConverter.ToInt16(srcBuf' SizeICONDIR + SizeICONDIRENTRY * iIndex + 6);                        if (width == 0 && height == 0 && bitCount == 32)                      {                          int imageSize = BitConverter.ToInt32(srcBuf' SizeICONDIR + SizeICONDIRENTRY * iIndex + 8);                          int imageOffset = BitConverter.ToInt32(srcBuf' SizeICONDIR + SizeICONDIRENTRY * iIndex + 12);                          using (var destStream = new MemoryStream())                          {                              var writer = new BinaryWriter(destStream);                              writer.Write(srcBuf' imageOffset' imageSize);                              destStream.Seek(0' SeekOrigin.Begin);                                extractedIcon = new Bitmap(destStream); // This is PNG! :)                              return extractedIcon;                          }                      }                  }              }              catch              {                  return null;                }
Magic Number,Orchestra,IconExtractor,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,Initialize,The following statement contains a magic number: try                  {                      hModule = NativeMethods.LoadLibraryEx(fileName' IntPtr.Zero' LOAD_LIBRARY_AS_DATAFILE);                      if (hModule == IntPtr.Zero)                      {                          throw new Win32Exception();                      }                        FileName = GetFileName(hModule);                        // Enumerate the icon resource and build .ico files in memory.                        var tmpData = new List<byte[]>();                        ENUMRESNAMEPROC callback = (h' t' name' l) =>                      {                          // Refer the following URL for the data structures used here:                          // http://msdn.microsoft.com/en-us/library/ms997538.aspx                            // RT_GROUP_ICON resource consists of a GRPICONDIR and GRPICONDIRENTRY's.                            var dir = GetDataFromResource(hModule' RT_GROUP_ICON' name);                            // Calculate the size of an entire .icon file.                            int count = BitConverter.ToUInt16(dir' 4);  // GRPICONDIR.idCount                          int len = 6 + 16 * count;                   // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                          for (int i = 0; i < count; ++i)                          {                              len += BitConverter.ToInt32(dir' 6 + 14 * i + 8);   // GRPICONDIRENTRY.dwBytesInRes                          }                            using (var dst = new BinaryWriter(new MemoryStream(len)))                          {                              // Copy GRPICONDIR to ICONDIR.                                dst.Write(dir' 0' 6);                                int picOffset = 6 + 16 * count; // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                                for (int i = 0; i < count; ++i)                              {                                  // Load the picture.                                    ushort id = BitConverter.ToUInt16(dir' 6 + 14 * i + 12);    // GRPICONDIRENTRY.nID                                  var pic = GetDataFromResource(hModule' RT_ICON' (IntPtr)id);                                    // Copy GRPICONDIRENTRY to ICONDIRENTRY.                                    dst.Seek(6 + 16 * i' SeekOrigin.Begin);                                    dst.Write(dir' 6 + 14 * i' 8);  // First 8bytes are identical.                                  dst.Write(pic.Length);          // ICONDIRENTRY.dwBytesInRes                                  dst.Write(picOffset);           // ICONDIRENTRY.dwImageOffset                                    // Copy a picture.                                    dst.Seek(picOffset' SeekOrigin.Begin);                                  dst.Write(pic' 0' pic.Length);                                    picOffset += pic.Length;                              }                                tmpData.Add(((MemoryStream)dst.BaseStream).ToArray());                          }                            return true;                      };                      NativeMethods.EnumResourceNames(hModule' RT_GROUP_ICON' callback' IntPtr.Zero);                        iconData = tmpData.ToArray();                  }                  finally                  {                      if (hModule != IntPtr.Zero)                      {                          NativeMethods.FreeLibrary(hModule);                      }                  }
Magic Number,Orchestra,IconExtractor,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,Initialize,The following statement contains a magic number: try                  {                      hModule = NativeMethods.LoadLibraryEx(fileName' IntPtr.Zero' LOAD_LIBRARY_AS_DATAFILE);                      if (hModule == IntPtr.Zero)                      {                          throw new Win32Exception();                      }                        FileName = GetFileName(hModule);                        // Enumerate the icon resource and build .ico files in memory.                        var tmpData = new List<byte[]>();                        ENUMRESNAMEPROC callback = (h' t' name' l) =>                      {                          // Refer the following URL for the data structures used here:                          // http://msdn.microsoft.com/en-us/library/ms997538.aspx                            // RT_GROUP_ICON resource consists of a GRPICONDIR and GRPICONDIRENTRY's.                            var dir = GetDataFromResource(hModule' RT_GROUP_ICON' name);                            // Calculate the size of an entire .icon file.                            int count = BitConverter.ToUInt16(dir' 4);  // GRPICONDIR.idCount                          int len = 6 + 16 * count;                   // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                          for (int i = 0; i < count; ++i)                          {                              len += BitConverter.ToInt32(dir' 6 + 14 * i + 8);   // GRPICONDIRENTRY.dwBytesInRes                          }                            using (var dst = new BinaryWriter(new MemoryStream(len)))                          {                              // Copy GRPICONDIR to ICONDIR.                                dst.Write(dir' 0' 6);                                int picOffset = 6 + 16 * count; // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                                for (int i = 0; i < count; ++i)                              {                                  // Load the picture.                                    ushort id = BitConverter.ToUInt16(dir' 6 + 14 * i + 12);    // GRPICONDIRENTRY.nID                                  var pic = GetDataFromResource(hModule' RT_ICON' (IntPtr)id);                                    // Copy GRPICONDIRENTRY to ICONDIRENTRY.                                    dst.Seek(6 + 16 * i' SeekOrigin.Begin);                                    dst.Write(dir' 6 + 14 * i' 8);  // First 8bytes are identical.                                  dst.Write(pic.Length);          // ICONDIRENTRY.dwBytesInRes                                  dst.Write(picOffset);           // ICONDIRENTRY.dwImageOffset                                    // Copy a picture.                                    dst.Seek(picOffset' SeekOrigin.Begin);                                  dst.Write(pic' 0' pic.Length);                                    picOffset += pic.Length;                              }                                tmpData.Add(((MemoryStream)dst.BaseStream).ToArray());                          }                            return true;                      };                      NativeMethods.EnumResourceNames(hModule' RT_GROUP_ICON' callback' IntPtr.Zero);                        iconData = tmpData.ToArray();                  }                  finally                  {                      if (hModule != IntPtr.Zero)                      {                          NativeMethods.FreeLibrary(hModule);                      }                  }
Magic Number,Orchestra,IconExtractor,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,Initialize,The following statement contains a magic number: try                  {                      hModule = NativeMethods.LoadLibraryEx(fileName' IntPtr.Zero' LOAD_LIBRARY_AS_DATAFILE);                      if (hModule == IntPtr.Zero)                      {                          throw new Win32Exception();                      }                        FileName = GetFileName(hModule);                        // Enumerate the icon resource and build .ico files in memory.                        var tmpData = new List<byte[]>();                        ENUMRESNAMEPROC callback = (h' t' name' l) =>                      {                          // Refer the following URL for the data structures used here:                          // http://msdn.microsoft.com/en-us/library/ms997538.aspx                            // RT_GROUP_ICON resource consists of a GRPICONDIR and GRPICONDIRENTRY's.                            var dir = GetDataFromResource(hModule' RT_GROUP_ICON' name);                            // Calculate the size of an entire .icon file.                            int count = BitConverter.ToUInt16(dir' 4);  // GRPICONDIR.idCount                          int len = 6 + 16 * count;                   // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                          for (int i = 0; i < count; ++i)                          {                              len += BitConverter.ToInt32(dir' 6 + 14 * i + 8);   // GRPICONDIRENTRY.dwBytesInRes                          }                            using (var dst = new BinaryWriter(new MemoryStream(len)))                          {                              // Copy GRPICONDIR to ICONDIR.                                dst.Write(dir' 0' 6);                                int picOffset = 6 + 16 * count; // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                                for (int i = 0; i < count; ++i)                              {                                  // Load the picture.                                    ushort id = BitConverter.ToUInt16(dir' 6 + 14 * i + 12);    // GRPICONDIRENTRY.nID                                  var pic = GetDataFromResource(hModule' RT_ICON' (IntPtr)id);                                    // Copy GRPICONDIRENTRY to ICONDIRENTRY.                                    dst.Seek(6 + 16 * i' SeekOrigin.Begin);                                    dst.Write(dir' 6 + 14 * i' 8);  // First 8bytes are identical.                                  dst.Write(pic.Length);          // ICONDIRENTRY.dwBytesInRes                                  dst.Write(picOffset);           // ICONDIRENTRY.dwImageOffset                                    // Copy a picture.                                    dst.Seek(picOffset' SeekOrigin.Begin);                                  dst.Write(pic' 0' pic.Length);                                    picOffset += pic.Length;                              }                                tmpData.Add(((MemoryStream)dst.BaseStream).ToArray());                          }                            return true;                      };                      NativeMethods.EnumResourceNames(hModule' RT_GROUP_ICON' callback' IntPtr.Zero);                        iconData = tmpData.ToArray();                  }                  finally                  {                      if (hModule != IntPtr.Zero)                      {                          NativeMethods.FreeLibrary(hModule);                      }                  }
Magic Number,Orchestra,IconExtractor,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,Initialize,The following statement contains a magic number: try                  {                      hModule = NativeMethods.LoadLibraryEx(fileName' IntPtr.Zero' LOAD_LIBRARY_AS_DATAFILE);                      if (hModule == IntPtr.Zero)                      {                          throw new Win32Exception();                      }                        FileName = GetFileName(hModule);                        // Enumerate the icon resource and build .ico files in memory.                        var tmpData = new List<byte[]>();                        ENUMRESNAMEPROC callback = (h' t' name' l) =>                      {                          // Refer the following URL for the data structures used here:                          // http://msdn.microsoft.com/en-us/library/ms997538.aspx                            // RT_GROUP_ICON resource consists of a GRPICONDIR and GRPICONDIRENTRY's.                            var dir = GetDataFromResource(hModule' RT_GROUP_ICON' name);                            // Calculate the size of an entire .icon file.                            int count = BitConverter.ToUInt16(dir' 4);  // GRPICONDIR.idCount                          int len = 6 + 16 * count;                   // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                          for (int i = 0; i < count; ++i)                          {                              len += BitConverter.ToInt32(dir' 6 + 14 * i + 8);   // GRPICONDIRENTRY.dwBytesInRes                          }                            using (var dst = new BinaryWriter(new MemoryStream(len)))                          {                              // Copy GRPICONDIR to ICONDIR.                                dst.Write(dir' 0' 6);                                int picOffset = 6 + 16 * count; // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                                for (int i = 0; i < count; ++i)                              {                                  // Load the picture.                                    ushort id = BitConverter.ToUInt16(dir' 6 + 14 * i + 12);    // GRPICONDIRENTRY.nID                                  var pic = GetDataFromResource(hModule' RT_ICON' (IntPtr)id);                                    // Copy GRPICONDIRENTRY to ICONDIRENTRY.                                    dst.Seek(6 + 16 * i' SeekOrigin.Begin);                                    dst.Write(dir' 6 + 14 * i' 8);  // First 8bytes are identical.                                  dst.Write(pic.Length);          // ICONDIRENTRY.dwBytesInRes                                  dst.Write(picOffset);           // ICONDIRENTRY.dwImageOffset                                    // Copy a picture.                                    dst.Seek(picOffset' SeekOrigin.Begin);                                  dst.Write(pic' 0' pic.Length);                                    picOffset += pic.Length;                              }                                tmpData.Add(((MemoryStream)dst.BaseStream).ToArray());                          }                            return true;                      };                      NativeMethods.EnumResourceNames(hModule' RT_GROUP_ICON' callback' IntPtr.Zero);                        iconData = tmpData.ToArray();                  }                  finally                  {                      if (hModule != IntPtr.Zero)                      {                          NativeMethods.FreeLibrary(hModule);                      }                  }
Magic Number,Orchestra,IconExtractor,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,Initialize,The following statement contains a magic number: try                  {                      hModule = NativeMethods.LoadLibraryEx(fileName' IntPtr.Zero' LOAD_LIBRARY_AS_DATAFILE);                      if (hModule == IntPtr.Zero)                      {                          throw new Win32Exception();                      }                        FileName = GetFileName(hModule);                        // Enumerate the icon resource and build .ico files in memory.                        var tmpData = new List<byte[]>();                        ENUMRESNAMEPROC callback = (h' t' name' l) =>                      {                          // Refer the following URL for the data structures used here:                          // http://msdn.microsoft.com/en-us/library/ms997538.aspx                            // RT_GROUP_ICON resource consists of a GRPICONDIR and GRPICONDIRENTRY's.                            var dir = GetDataFromResource(hModule' RT_GROUP_ICON' name);                            // Calculate the size of an entire .icon file.                            int count = BitConverter.ToUInt16(dir' 4);  // GRPICONDIR.idCount                          int len = 6 + 16 * count;                   // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                          for (int i = 0; i < count; ++i)                          {                              len += BitConverter.ToInt32(dir' 6 + 14 * i + 8);   // GRPICONDIRENTRY.dwBytesInRes                          }                            using (var dst = new BinaryWriter(new MemoryStream(len)))                          {                              // Copy GRPICONDIR to ICONDIR.                                dst.Write(dir' 0' 6);                                int picOffset = 6 + 16 * count; // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                                for (int i = 0; i < count; ++i)                              {                                  // Load the picture.                                    ushort id = BitConverter.ToUInt16(dir' 6 + 14 * i + 12);    // GRPICONDIRENTRY.nID                                  var pic = GetDataFromResource(hModule' RT_ICON' (IntPtr)id);                                    // Copy GRPICONDIRENTRY to ICONDIRENTRY.                                    dst.Seek(6 + 16 * i' SeekOrigin.Begin);                                    dst.Write(dir' 6 + 14 * i' 8);  // First 8bytes are identical.                                  dst.Write(pic.Length);          // ICONDIRENTRY.dwBytesInRes                                  dst.Write(picOffset);           // ICONDIRENTRY.dwImageOffset                                    // Copy a picture.                                    dst.Seek(picOffset' SeekOrigin.Begin);                                  dst.Write(pic' 0' pic.Length);                                    picOffset += pic.Length;                              }                                tmpData.Add(((MemoryStream)dst.BaseStream).ToArray());                          }                            return true;                      };                      NativeMethods.EnumResourceNames(hModule' RT_GROUP_ICON' callback' IntPtr.Zero);                        iconData = tmpData.ToArray();                  }                  finally                  {                      if (hModule != IntPtr.Zero)                      {                          NativeMethods.FreeLibrary(hModule);                      }                  }
Magic Number,Orchestra,IconExtractor,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,Initialize,The following statement contains a magic number: try                  {                      hModule = NativeMethods.LoadLibraryEx(fileName' IntPtr.Zero' LOAD_LIBRARY_AS_DATAFILE);                      if (hModule == IntPtr.Zero)                      {                          throw new Win32Exception();                      }                        FileName = GetFileName(hModule);                        // Enumerate the icon resource and build .ico files in memory.                        var tmpData = new List<byte[]>();                        ENUMRESNAMEPROC callback = (h' t' name' l) =>                      {                          // Refer the following URL for the data structures used here:                          // http://msdn.microsoft.com/en-us/library/ms997538.aspx                            // RT_GROUP_ICON resource consists of a GRPICONDIR and GRPICONDIRENTRY's.                            var dir = GetDataFromResource(hModule' RT_GROUP_ICON' name);                            // Calculate the size of an entire .icon file.                            int count = BitConverter.ToUInt16(dir' 4);  // GRPICONDIR.idCount                          int len = 6 + 16 * count;                   // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                          for (int i = 0; i < count; ++i)                          {                              len += BitConverter.ToInt32(dir' 6 + 14 * i + 8);   // GRPICONDIRENTRY.dwBytesInRes                          }                            using (var dst = new BinaryWriter(new MemoryStream(len)))                          {                              // Copy GRPICONDIR to ICONDIR.                                dst.Write(dir' 0' 6);                                int picOffset = 6 + 16 * count; // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                                for (int i = 0; i < count; ++i)                              {                                  // Load the picture.                                    ushort id = BitConverter.ToUInt16(dir' 6 + 14 * i + 12);    // GRPICONDIRENTRY.nID                                  var pic = GetDataFromResource(hModule' RT_ICON' (IntPtr)id);                                    // Copy GRPICONDIRENTRY to ICONDIRENTRY.                                    dst.Seek(6 + 16 * i' SeekOrigin.Begin);                                    dst.Write(dir' 6 + 14 * i' 8);  // First 8bytes are identical.                                  dst.Write(pic.Length);          // ICONDIRENTRY.dwBytesInRes                                  dst.Write(picOffset);           // ICONDIRENTRY.dwImageOffset                                    // Copy a picture.                                    dst.Seek(picOffset' SeekOrigin.Begin);                                  dst.Write(pic' 0' pic.Length);                                    picOffset += pic.Length;                              }                                tmpData.Add(((MemoryStream)dst.BaseStream).ToArray());                          }                            return true;                      };                      NativeMethods.EnumResourceNames(hModule' RT_GROUP_ICON' callback' IntPtr.Zero);                        iconData = tmpData.ToArray();                  }                  finally                  {                      if (hModule != IntPtr.Zero)                      {                          NativeMethods.FreeLibrary(hModule);                      }                  }
Magic Number,Orchestra,IconExtractor,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,Initialize,The following statement contains a magic number: try                  {                      hModule = NativeMethods.LoadLibraryEx(fileName' IntPtr.Zero' LOAD_LIBRARY_AS_DATAFILE);                      if (hModule == IntPtr.Zero)                      {                          throw new Win32Exception();                      }                        FileName = GetFileName(hModule);                        // Enumerate the icon resource and build .ico files in memory.                        var tmpData = new List<byte[]>();                        ENUMRESNAMEPROC callback = (h' t' name' l) =>                      {                          // Refer the following URL for the data structures used here:                          // http://msdn.microsoft.com/en-us/library/ms997538.aspx                            // RT_GROUP_ICON resource consists of a GRPICONDIR and GRPICONDIRENTRY's.                            var dir = GetDataFromResource(hModule' RT_GROUP_ICON' name);                            // Calculate the size of an entire .icon file.                            int count = BitConverter.ToUInt16(dir' 4);  // GRPICONDIR.idCount                          int len = 6 + 16 * count;                   // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                          for (int i = 0; i < count; ++i)                          {                              len += BitConverter.ToInt32(dir' 6 + 14 * i + 8);   // GRPICONDIRENTRY.dwBytesInRes                          }                            using (var dst = new BinaryWriter(new MemoryStream(len)))                          {                              // Copy GRPICONDIR to ICONDIR.                                dst.Write(dir' 0' 6);                                int picOffset = 6 + 16 * count; // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                                for (int i = 0; i < count; ++i)                              {                                  // Load the picture.                                    ushort id = BitConverter.ToUInt16(dir' 6 + 14 * i + 12);    // GRPICONDIRENTRY.nID                                  var pic = GetDataFromResource(hModule' RT_ICON' (IntPtr)id);                                    // Copy GRPICONDIRENTRY to ICONDIRENTRY.                                    dst.Seek(6 + 16 * i' SeekOrigin.Begin);                                    dst.Write(dir' 6 + 14 * i' 8);  // First 8bytes are identical.                                  dst.Write(pic.Length);          // ICONDIRENTRY.dwBytesInRes                                  dst.Write(picOffset);           // ICONDIRENTRY.dwImageOffset                                    // Copy a picture.                                    dst.Seek(picOffset' SeekOrigin.Begin);                                  dst.Write(pic' 0' pic.Length);                                    picOffset += pic.Length;                              }                                tmpData.Add(((MemoryStream)dst.BaseStream).ToArray());                          }                            return true;                      };                      NativeMethods.EnumResourceNames(hModule' RT_GROUP_ICON' callback' IntPtr.Zero);                        iconData = tmpData.ToArray();                  }                  finally                  {                      if (hModule != IntPtr.Zero)                      {                          NativeMethods.FreeLibrary(hModule);                      }                  }
Magic Number,Orchestra,IconExtractor,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,Initialize,The following statement contains a magic number: try                  {                      hModule = NativeMethods.LoadLibraryEx(fileName' IntPtr.Zero' LOAD_LIBRARY_AS_DATAFILE);                      if (hModule == IntPtr.Zero)                      {                          throw new Win32Exception();                      }                        FileName = GetFileName(hModule);                        // Enumerate the icon resource and build .ico files in memory.                        var tmpData = new List<byte[]>();                        ENUMRESNAMEPROC callback = (h' t' name' l) =>                      {                          // Refer the following URL for the data structures used here:                          // http://msdn.microsoft.com/en-us/library/ms997538.aspx                            // RT_GROUP_ICON resource consists of a GRPICONDIR and GRPICONDIRENTRY's.                            var dir = GetDataFromResource(hModule' RT_GROUP_ICON' name);                            // Calculate the size of an entire .icon file.                            int count = BitConverter.ToUInt16(dir' 4);  // GRPICONDIR.idCount                          int len = 6 + 16 * count;                   // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                          for (int i = 0; i < count; ++i)                          {                              len += BitConverter.ToInt32(dir' 6 + 14 * i + 8);   // GRPICONDIRENTRY.dwBytesInRes                          }                            using (var dst = new BinaryWriter(new MemoryStream(len)))                          {                              // Copy GRPICONDIR to ICONDIR.                                dst.Write(dir' 0' 6);                                int picOffset = 6 + 16 * count; // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                                for (int i = 0; i < count; ++i)                              {                                  // Load the picture.                                    ushort id = BitConverter.ToUInt16(dir' 6 + 14 * i + 12);    // GRPICONDIRENTRY.nID                                  var pic = GetDataFromResource(hModule' RT_ICON' (IntPtr)id);                                    // Copy GRPICONDIRENTRY to ICONDIRENTRY.                                    dst.Seek(6 + 16 * i' SeekOrigin.Begin);                                    dst.Write(dir' 6 + 14 * i' 8);  // First 8bytes are identical.                                  dst.Write(pic.Length);          // ICONDIRENTRY.dwBytesInRes                                  dst.Write(picOffset);           // ICONDIRENTRY.dwImageOffset                                    // Copy a picture.                                    dst.Seek(picOffset' SeekOrigin.Begin);                                  dst.Write(pic' 0' pic.Length);                                    picOffset += pic.Length;                              }                                tmpData.Add(((MemoryStream)dst.BaseStream).ToArray());                          }                            return true;                      };                      NativeMethods.EnumResourceNames(hModule' RT_GROUP_ICON' callback' IntPtr.Zero);                        iconData = tmpData.ToArray();                  }                  finally                  {                      if (hModule != IntPtr.Zero)                      {                          NativeMethods.FreeLibrary(hModule);                      }                  }
Magic Number,Orchestra,IconExtractor,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,Initialize,The following statement contains a magic number: try                  {                      hModule = NativeMethods.LoadLibraryEx(fileName' IntPtr.Zero' LOAD_LIBRARY_AS_DATAFILE);                      if (hModule == IntPtr.Zero)                      {                          throw new Win32Exception();                      }                        FileName = GetFileName(hModule);                        // Enumerate the icon resource and build .ico files in memory.                        var tmpData = new List<byte[]>();                        ENUMRESNAMEPROC callback = (h' t' name' l) =>                      {                          // Refer the following URL for the data structures used here:                          // http://msdn.microsoft.com/en-us/library/ms997538.aspx                            // RT_GROUP_ICON resource consists of a GRPICONDIR and GRPICONDIRENTRY's.                            var dir = GetDataFromResource(hModule' RT_GROUP_ICON' name);                            // Calculate the size of an entire .icon file.                            int count = BitConverter.ToUInt16(dir' 4);  // GRPICONDIR.idCount                          int len = 6 + 16 * count;                   // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                          for (int i = 0; i < count; ++i)                          {                              len += BitConverter.ToInt32(dir' 6 + 14 * i + 8);   // GRPICONDIRENTRY.dwBytesInRes                          }                            using (var dst = new BinaryWriter(new MemoryStream(len)))                          {                              // Copy GRPICONDIR to ICONDIR.                                dst.Write(dir' 0' 6);                                int picOffset = 6 + 16 * count; // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                                for (int i = 0; i < count; ++i)                              {                                  // Load the picture.                                    ushort id = BitConverter.ToUInt16(dir' 6 + 14 * i + 12);    // GRPICONDIRENTRY.nID                                  var pic = GetDataFromResource(hModule' RT_ICON' (IntPtr)id);                                    // Copy GRPICONDIRENTRY to ICONDIRENTRY.                                    dst.Seek(6 + 16 * i' SeekOrigin.Begin);                                    dst.Write(dir' 6 + 14 * i' 8);  // First 8bytes are identical.                                  dst.Write(pic.Length);          // ICONDIRENTRY.dwBytesInRes                                  dst.Write(picOffset);           // ICONDIRENTRY.dwImageOffset                                    // Copy a picture.                                    dst.Seek(picOffset' SeekOrigin.Begin);                                  dst.Write(pic' 0' pic.Length);                                    picOffset += pic.Length;                              }                                tmpData.Add(((MemoryStream)dst.BaseStream).ToArray());                          }                            return true;                      };                      NativeMethods.EnumResourceNames(hModule' RT_GROUP_ICON' callback' IntPtr.Zero);                        iconData = tmpData.ToArray();                  }                  finally                  {                      if (hModule != IntPtr.Zero)                      {                          NativeMethods.FreeLibrary(hModule);                      }                  }
Magic Number,Orchestra,IconExtractor,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,Initialize,The following statement contains a magic number: try                  {                      hModule = NativeMethods.LoadLibraryEx(fileName' IntPtr.Zero' LOAD_LIBRARY_AS_DATAFILE);                      if (hModule == IntPtr.Zero)                      {                          throw new Win32Exception();                      }                        FileName = GetFileName(hModule);                        // Enumerate the icon resource and build .ico files in memory.                        var tmpData = new List<byte[]>();                        ENUMRESNAMEPROC callback = (h' t' name' l) =>                      {                          // Refer the following URL for the data structures used here:                          // http://msdn.microsoft.com/en-us/library/ms997538.aspx                            // RT_GROUP_ICON resource consists of a GRPICONDIR and GRPICONDIRENTRY's.                            var dir = GetDataFromResource(hModule' RT_GROUP_ICON' name);                            // Calculate the size of an entire .icon file.                            int count = BitConverter.ToUInt16(dir' 4);  // GRPICONDIR.idCount                          int len = 6 + 16 * count;                   // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                          for (int i = 0; i < count; ++i)                          {                              len += BitConverter.ToInt32(dir' 6 + 14 * i + 8);   // GRPICONDIRENTRY.dwBytesInRes                          }                            using (var dst = new BinaryWriter(new MemoryStream(len)))                          {                              // Copy GRPICONDIR to ICONDIR.                                dst.Write(dir' 0' 6);                                int picOffset = 6 + 16 * count; // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                                for (int i = 0; i < count; ++i)                              {                                  // Load the picture.                                    ushort id = BitConverter.ToUInt16(dir' 6 + 14 * i + 12);    // GRPICONDIRENTRY.nID                                  var pic = GetDataFromResource(hModule' RT_ICON' (IntPtr)id);                                    // Copy GRPICONDIRENTRY to ICONDIRENTRY.                                    dst.Seek(6 + 16 * i' SeekOrigin.Begin);                                    dst.Write(dir' 6 + 14 * i' 8);  // First 8bytes are identical.                                  dst.Write(pic.Length);          // ICONDIRENTRY.dwBytesInRes                                  dst.Write(picOffset);           // ICONDIRENTRY.dwImageOffset                                    // Copy a picture.                                    dst.Seek(picOffset' SeekOrigin.Begin);                                  dst.Write(pic' 0' pic.Length);                                    picOffset += pic.Length;                              }                                tmpData.Add(((MemoryStream)dst.BaseStream).ToArray());                          }                            return true;                      };                      NativeMethods.EnumResourceNames(hModule' RT_GROUP_ICON' callback' IntPtr.Zero);                        iconData = tmpData.ToArray();                  }                  finally                  {                      if (hModule != IntPtr.Zero)                      {                          NativeMethods.FreeLibrary(hModule);                      }                  }
Magic Number,Orchestra,IconExtractor,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,Initialize,The following statement contains a magic number: try                  {                      hModule = NativeMethods.LoadLibraryEx(fileName' IntPtr.Zero' LOAD_LIBRARY_AS_DATAFILE);                      if (hModule == IntPtr.Zero)                      {                          throw new Win32Exception();                      }                        FileName = GetFileName(hModule);                        // Enumerate the icon resource and build .ico files in memory.                        var tmpData = new List<byte[]>();                        ENUMRESNAMEPROC callback = (h' t' name' l) =>                      {                          // Refer the following URL for the data structures used here:                          // http://msdn.microsoft.com/en-us/library/ms997538.aspx                            // RT_GROUP_ICON resource consists of a GRPICONDIR and GRPICONDIRENTRY's.                            var dir = GetDataFromResource(hModule' RT_GROUP_ICON' name);                            // Calculate the size of an entire .icon file.                            int count = BitConverter.ToUInt16(dir' 4);  // GRPICONDIR.idCount                          int len = 6 + 16 * count;                   // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                          for (int i = 0; i < count; ++i)                          {                              len += BitConverter.ToInt32(dir' 6 + 14 * i + 8);   // GRPICONDIRENTRY.dwBytesInRes                          }                            using (var dst = new BinaryWriter(new MemoryStream(len)))                          {                              // Copy GRPICONDIR to ICONDIR.                                dst.Write(dir' 0' 6);                                int picOffset = 6 + 16 * count; // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                                for (int i = 0; i < count; ++i)                              {                                  // Load the picture.                                    ushort id = BitConverter.ToUInt16(dir' 6 + 14 * i + 12);    // GRPICONDIRENTRY.nID                                  var pic = GetDataFromResource(hModule' RT_ICON' (IntPtr)id);                                    // Copy GRPICONDIRENTRY to ICONDIRENTRY.                                    dst.Seek(6 + 16 * i' SeekOrigin.Begin);                                    dst.Write(dir' 6 + 14 * i' 8);  // First 8bytes are identical.                                  dst.Write(pic.Length);          // ICONDIRENTRY.dwBytesInRes                                  dst.Write(picOffset);           // ICONDIRENTRY.dwImageOffset                                    // Copy a picture.                                    dst.Seek(picOffset' SeekOrigin.Begin);                                  dst.Write(pic' 0' pic.Length);                                    picOffset += pic.Length;                              }                                tmpData.Add(((MemoryStream)dst.BaseStream).ToArray());                          }                            return true;                      };                      NativeMethods.EnumResourceNames(hModule' RT_GROUP_ICON' callback' IntPtr.Zero);                        iconData = tmpData.ToArray();                  }                  finally                  {                      if (hModule != IntPtr.Zero)                      {                          NativeMethods.FreeLibrary(hModule);                      }                  }
Magic Number,Orchestra,IconExtractor,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,Initialize,The following statement contains a magic number: try                  {                      hModule = NativeMethods.LoadLibraryEx(fileName' IntPtr.Zero' LOAD_LIBRARY_AS_DATAFILE);                      if (hModule == IntPtr.Zero)                      {                          throw new Win32Exception();                      }                        FileName = GetFileName(hModule);                        // Enumerate the icon resource and build .ico files in memory.                        var tmpData = new List<byte[]>();                        ENUMRESNAMEPROC callback = (h' t' name' l) =>                      {                          // Refer the following URL for the data structures used here:                          // http://msdn.microsoft.com/en-us/library/ms997538.aspx                            // RT_GROUP_ICON resource consists of a GRPICONDIR and GRPICONDIRENTRY's.                            var dir = GetDataFromResource(hModule' RT_GROUP_ICON' name);                            // Calculate the size of an entire .icon file.                            int count = BitConverter.ToUInt16(dir' 4);  // GRPICONDIR.idCount                          int len = 6 + 16 * count;                   // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                          for (int i = 0; i < count; ++i)                          {                              len += BitConverter.ToInt32(dir' 6 + 14 * i + 8);   // GRPICONDIRENTRY.dwBytesInRes                          }                            using (var dst = new BinaryWriter(new MemoryStream(len)))                          {                              // Copy GRPICONDIR to ICONDIR.                                dst.Write(dir' 0' 6);                                int picOffset = 6 + 16 * count; // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                                for (int i = 0; i < count; ++i)                              {                                  // Load the picture.                                    ushort id = BitConverter.ToUInt16(dir' 6 + 14 * i + 12);    // GRPICONDIRENTRY.nID                                  var pic = GetDataFromResource(hModule' RT_ICON' (IntPtr)id);                                    // Copy GRPICONDIRENTRY to ICONDIRENTRY.                                    dst.Seek(6 + 16 * i' SeekOrigin.Begin);                                    dst.Write(dir' 6 + 14 * i' 8);  // First 8bytes are identical.                                  dst.Write(pic.Length);          // ICONDIRENTRY.dwBytesInRes                                  dst.Write(picOffset);           // ICONDIRENTRY.dwImageOffset                                    // Copy a picture.                                    dst.Seek(picOffset' SeekOrigin.Begin);                                  dst.Write(pic' 0' pic.Length);                                    picOffset += pic.Length;                              }                                tmpData.Add(((MemoryStream)dst.BaseStream).ToArray());                          }                            return true;                      };                      NativeMethods.EnumResourceNames(hModule' RT_GROUP_ICON' callback' IntPtr.Zero);                        iconData = tmpData.ToArray();                  }                  finally                  {                      if (hModule != IntPtr.Zero)                      {                          NativeMethods.FreeLibrary(hModule);                      }                  }
Magic Number,Orchestra,IconExtractor,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,Initialize,The following statement contains a magic number: try                  {                      hModule = NativeMethods.LoadLibraryEx(fileName' IntPtr.Zero' LOAD_LIBRARY_AS_DATAFILE);                      if (hModule == IntPtr.Zero)                      {                          throw new Win32Exception();                      }                        FileName = GetFileName(hModule);                        // Enumerate the icon resource and build .ico files in memory.                        var tmpData = new List<byte[]>();                        ENUMRESNAMEPROC callback = (h' t' name' l) =>                      {                          // Refer the following URL for the data structures used here:                          // http://msdn.microsoft.com/en-us/library/ms997538.aspx                            // RT_GROUP_ICON resource consists of a GRPICONDIR and GRPICONDIRENTRY's.                            var dir = GetDataFromResource(hModule' RT_GROUP_ICON' name);                            // Calculate the size of an entire .icon file.                            int count = BitConverter.ToUInt16(dir' 4);  // GRPICONDIR.idCount                          int len = 6 + 16 * count;                   // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                          for (int i = 0; i < count; ++i)                          {                              len += BitConverter.ToInt32(dir' 6 + 14 * i + 8);   // GRPICONDIRENTRY.dwBytesInRes                          }                            using (var dst = new BinaryWriter(new MemoryStream(len)))                          {                              // Copy GRPICONDIR to ICONDIR.                                dst.Write(dir' 0' 6);                                int picOffset = 6 + 16 * count; // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                                for (int i = 0; i < count; ++i)                              {                                  // Load the picture.                                    ushort id = BitConverter.ToUInt16(dir' 6 + 14 * i + 12);    // GRPICONDIRENTRY.nID                                  var pic = GetDataFromResource(hModule' RT_ICON' (IntPtr)id);                                    // Copy GRPICONDIRENTRY to ICONDIRENTRY.                                    dst.Seek(6 + 16 * i' SeekOrigin.Begin);                                    dst.Write(dir' 6 + 14 * i' 8);  // First 8bytes are identical.                                  dst.Write(pic.Length);          // ICONDIRENTRY.dwBytesInRes                                  dst.Write(picOffset);           // ICONDIRENTRY.dwImageOffset                                    // Copy a picture.                                    dst.Seek(picOffset' SeekOrigin.Begin);                                  dst.Write(pic' 0' pic.Length);                                    picOffset += pic.Length;                              }                                tmpData.Add(((MemoryStream)dst.BaseStream).ToArray());                          }                            return true;                      };                      NativeMethods.EnumResourceNames(hModule' RT_GROUP_ICON' callback' IntPtr.Zero);                        iconData = tmpData.ToArray();                  }                  finally                  {                      if (hModule != IntPtr.Zero)                      {                          NativeMethods.FreeLibrary(hModule);                      }                  }
Magic Number,Orchestra,IconExtractor,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,Initialize,The following statement contains a magic number: try                  {                      hModule = NativeMethods.LoadLibraryEx(fileName' IntPtr.Zero' LOAD_LIBRARY_AS_DATAFILE);                      if (hModule == IntPtr.Zero)                      {                          throw new Win32Exception();                      }                        FileName = GetFileName(hModule);                        // Enumerate the icon resource and build .ico files in memory.                        var tmpData = new List<byte[]>();                        ENUMRESNAMEPROC callback = (h' t' name' l) =>                      {                          // Refer the following URL for the data structures used here:                          // http://msdn.microsoft.com/en-us/library/ms997538.aspx                            // RT_GROUP_ICON resource consists of a GRPICONDIR and GRPICONDIRENTRY's.                            var dir = GetDataFromResource(hModule' RT_GROUP_ICON' name);                            // Calculate the size of an entire .icon file.                            int count = BitConverter.ToUInt16(dir' 4);  // GRPICONDIR.idCount                          int len = 6 + 16 * count;                   // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                          for (int i = 0; i < count; ++i)                          {                              len += BitConverter.ToInt32(dir' 6 + 14 * i + 8);   // GRPICONDIRENTRY.dwBytesInRes                          }                            using (var dst = new BinaryWriter(new MemoryStream(len)))                          {                              // Copy GRPICONDIR to ICONDIR.                                dst.Write(dir' 0' 6);                                int picOffset = 6 + 16 * count; // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                                for (int i = 0; i < count; ++i)                              {                                  // Load the picture.                                    ushort id = BitConverter.ToUInt16(dir' 6 + 14 * i + 12);    // GRPICONDIRENTRY.nID                                  var pic = GetDataFromResource(hModule' RT_ICON' (IntPtr)id);                                    // Copy GRPICONDIRENTRY to ICONDIRENTRY.                                    dst.Seek(6 + 16 * i' SeekOrigin.Begin);                                    dst.Write(dir' 6 + 14 * i' 8);  // First 8bytes are identical.                                  dst.Write(pic.Length);          // ICONDIRENTRY.dwBytesInRes                                  dst.Write(picOffset);           // ICONDIRENTRY.dwImageOffset                                    // Copy a picture.                                    dst.Seek(picOffset' SeekOrigin.Begin);                                  dst.Write(pic' 0' pic.Length);                                    picOffset += pic.Length;                              }                                tmpData.Add(((MemoryStream)dst.BaseStream).ToArray());                          }                            return true;                      };                      NativeMethods.EnumResourceNames(hModule' RT_GROUP_ICON' callback' IntPtr.Zero);                        iconData = tmpData.ToArray();                  }                  finally                  {                      if (hModule != IntPtr.Zero)                      {                          NativeMethods.FreeLibrary(hModule);                      }                  }
Magic Number,Orchestra,IconExtractor,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,Initialize,The following statement contains a magic number: try                  {                      hModule = NativeMethods.LoadLibraryEx(fileName' IntPtr.Zero' LOAD_LIBRARY_AS_DATAFILE);                      if (hModule == IntPtr.Zero)                      {                          throw new Win32Exception();                      }                        FileName = GetFileName(hModule);                        // Enumerate the icon resource and build .ico files in memory.                        var tmpData = new List<byte[]>();                        ENUMRESNAMEPROC callback = (h' t' name' l) =>                      {                          // Refer the following URL for the data structures used here:                          // http://msdn.microsoft.com/en-us/library/ms997538.aspx                            // RT_GROUP_ICON resource consists of a GRPICONDIR and GRPICONDIRENTRY's.                            var dir = GetDataFromResource(hModule' RT_GROUP_ICON' name);                            // Calculate the size of an entire .icon file.                            int count = BitConverter.ToUInt16(dir' 4);  // GRPICONDIR.idCount                          int len = 6 + 16 * count;                   // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                          for (int i = 0; i < count; ++i)                          {                              len += BitConverter.ToInt32(dir' 6 + 14 * i + 8);   // GRPICONDIRENTRY.dwBytesInRes                          }                            using (var dst = new BinaryWriter(new MemoryStream(len)))                          {                              // Copy GRPICONDIR to ICONDIR.                                dst.Write(dir' 0' 6);                                int picOffset = 6 + 16 * count; // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                                for (int i = 0; i < count; ++i)                              {                                  // Load the picture.                                    ushort id = BitConverter.ToUInt16(dir' 6 + 14 * i + 12);    // GRPICONDIRENTRY.nID                                  var pic = GetDataFromResource(hModule' RT_ICON' (IntPtr)id);                                    // Copy GRPICONDIRENTRY to ICONDIRENTRY.                                    dst.Seek(6 + 16 * i' SeekOrigin.Begin);                                    dst.Write(dir' 6 + 14 * i' 8);  // First 8bytes are identical.                                  dst.Write(pic.Length);          // ICONDIRENTRY.dwBytesInRes                                  dst.Write(picOffset);           // ICONDIRENTRY.dwImageOffset                                    // Copy a picture.                                    dst.Seek(picOffset' SeekOrigin.Begin);                                  dst.Write(pic' 0' pic.Length);                                    picOffset += pic.Length;                              }                                tmpData.Add(((MemoryStream)dst.BaseStream).ToArray());                          }                            return true;                      };                      NativeMethods.EnumResourceNames(hModule' RT_GROUP_ICON' callback' IntPtr.Zero);                        iconData = tmpData.ToArray();                  }                  finally                  {                      if (hModule != IntPtr.Zero)                      {                          NativeMethods.FreeLibrary(hModule);                      }                  }
Magic Number,Orchestra,IconExtractor,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,Initialize,The following statement contains a magic number: try                  {                      hModule = NativeMethods.LoadLibraryEx(fileName' IntPtr.Zero' LOAD_LIBRARY_AS_DATAFILE);                      if (hModule == IntPtr.Zero)                      {                          throw new Win32Exception();                      }                        FileName = GetFileName(hModule);                        // Enumerate the icon resource and build .ico files in memory.                        var tmpData = new List<byte[]>();                        ENUMRESNAMEPROC callback = (h' t' name' l) =>                      {                          // Refer the following URL for the data structures used here:                          // http://msdn.microsoft.com/en-us/library/ms997538.aspx                            // RT_GROUP_ICON resource consists of a GRPICONDIR and GRPICONDIRENTRY's.                            var dir = GetDataFromResource(hModule' RT_GROUP_ICON' name);                            // Calculate the size of an entire .icon file.                            int count = BitConverter.ToUInt16(dir' 4);  // GRPICONDIR.idCount                          int len = 6 + 16 * count;                   // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                          for (int i = 0; i < count; ++i)                          {                              len += BitConverter.ToInt32(dir' 6 + 14 * i + 8);   // GRPICONDIRENTRY.dwBytesInRes                          }                            using (var dst = new BinaryWriter(new MemoryStream(len)))                          {                              // Copy GRPICONDIR to ICONDIR.                                dst.Write(dir' 0' 6);                                int picOffset = 6 + 16 * count; // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                                for (int i = 0; i < count; ++i)                              {                                  // Load the picture.                                    ushort id = BitConverter.ToUInt16(dir' 6 + 14 * i + 12);    // GRPICONDIRENTRY.nID                                  var pic = GetDataFromResource(hModule' RT_ICON' (IntPtr)id);                                    // Copy GRPICONDIRENTRY to ICONDIRENTRY.                                    dst.Seek(6 + 16 * i' SeekOrigin.Begin);                                    dst.Write(dir' 6 + 14 * i' 8);  // First 8bytes are identical.                                  dst.Write(pic.Length);          // ICONDIRENTRY.dwBytesInRes                                  dst.Write(picOffset);           // ICONDIRENTRY.dwImageOffset                                    // Copy a picture.                                    dst.Seek(picOffset' SeekOrigin.Begin);                                  dst.Write(pic' 0' pic.Length);                                    picOffset += pic.Length;                              }                                tmpData.Add(((MemoryStream)dst.BaseStream).ToArray());                          }                            return true;                      };                      NativeMethods.EnumResourceNames(hModule' RT_GROUP_ICON' callback' IntPtr.Zero);                        iconData = tmpData.ToArray();                  }                  finally                  {                      if (hModule != IntPtr.Zero)                      {                          NativeMethods.FreeLibrary(hModule);                      }                  }
Magic Number,Orchestra,IconExtractor,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\IconHelper.cs,Initialize,The following statement contains a magic number: try                  {                      hModule = NativeMethods.LoadLibraryEx(fileName' IntPtr.Zero' LOAD_LIBRARY_AS_DATAFILE);                      if (hModule == IntPtr.Zero)                      {                          throw new Win32Exception();                      }                        FileName = GetFileName(hModule);                        // Enumerate the icon resource and build .ico files in memory.                        var tmpData = new List<byte[]>();                        ENUMRESNAMEPROC callback = (h' t' name' l) =>                      {                          // Refer the following URL for the data structures used here:                          // http://msdn.microsoft.com/en-us/library/ms997538.aspx                            // RT_GROUP_ICON resource consists of a GRPICONDIR and GRPICONDIRENTRY's.                            var dir = GetDataFromResource(hModule' RT_GROUP_ICON' name);                            // Calculate the size of an entire .icon file.                            int count = BitConverter.ToUInt16(dir' 4);  // GRPICONDIR.idCount                          int len = 6 + 16 * count;                   // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                          for (int i = 0; i < count; ++i)                          {                              len += BitConverter.ToInt32(dir' 6 + 14 * i + 8);   // GRPICONDIRENTRY.dwBytesInRes                          }                            using (var dst = new BinaryWriter(new MemoryStream(len)))                          {                              // Copy GRPICONDIR to ICONDIR.                                dst.Write(dir' 0' 6);                                int picOffset = 6 + 16 * count; // sizeof(ICONDIR) + sizeof(ICONDIRENTRY) * count                                for (int i = 0; i < count; ++i)                              {                                  // Load the picture.                                    ushort id = BitConverter.ToUInt16(dir' 6 + 14 * i + 12);    // GRPICONDIRENTRY.nID                                  var pic = GetDataFromResource(hModule' RT_ICON' (IntPtr)id);                                    // Copy GRPICONDIRENTRY to ICONDIRENTRY.                                    dst.Seek(6 + 16 * i' SeekOrigin.Begin);                                    dst.Write(dir' 6 + 14 * i' 8);  // First 8bytes are identical.                                  dst.Write(pic.Length);          // ICONDIRENTRY.dwBytesInRes                                  dst.Write(picOffset);           // ICONDIRENTRY.dwImageOffset                                    // Copy a picture.                                    dst.Seek(picOffset' SeekOrigin.Begin);                                  dst.Write(pic' 0' pic.Length);                                    picOffset += pic.Length;                              }                                tmpData.Add(((MemoryStream)dst.BaseStream).ToArray());                          }                            return true;                      };                      NativeMethods.EnumResourceNames(hModule' RT_GROUP_ICON' callback' IntPtr.Zero);                        iconData = tmpData.ToArray();                  }                  finally                  {                      if (hModule != IntPtr.Zero)                      {                          NativeMethods.FreeLibrary(hModule);                      }                  }
Magic Number,Orchestra,LogHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\LogHelper.cs,CreateFileLogListener,The following statement contains a magic number: var fileLogListener = new Orchestra.Logging.FileLogListener(fileName' 10 * 1024);
Magic Number,Orchestra,LogHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\LogHelper.cs,CreateFileLogListener,The following statement contains a magic number: var fileLogListener = new Orchestra.Logging.FileLogListener(fileName' 10 * 1024);
Magic Number,Orchestra,LogHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\LogHelper.cs,CleanUpLogFiles,The following statement contains a magic number: try              {                  var files = Directory.GetFiles(directory' filter).Select(file => new { FileName = file' LastWriteTime = File.GetLastWriteTime(file)} ).ToList();                    files.Sort((f1' f2) => f1.LastWriteTime.CompareTo(f2.LastWriteTime));                    int i = 0;                  while (i < files.Count && (files[i].LastWriteTime < DateTime.Now.AddDays(-7) || files.Count - i > 10))                  {                      File.Delete(files[i].FileName);                      i++;                  }              }              catch (Exception)              {              }
Magic Number,Orchestra,LogHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\LogHelper.cs,CleanUpLogFiles,The following statement contains a magic number: try              {                  var files = Directory.GetFiles(directory' filter).Select(file => new { FileName = file' LastWriteTime = File.GetLastWriteTime(file)} ).ToList();                    files.Sort((f1' f2) => f1.LastWriteTime.CompareTo(f2.LastWriteTime));                    int i = 0;                  while (i < files.Count && (files[i].LastWriteTime < DateTime.Now.AddDays(-7) || files.Count - i > 10))                  {                      File.Delete(files[i].FileName);                      i++;                  }              }              catch (Exception)              {              }
Magic Number,Orchestra,StyleHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\StyleHelper.cs,FindFrameworkElementStyleIsBasedOn,The following statement contains a magic number: return _styleToFrameworkElementTypeCache.GetFromCacheOrFetch(styleKey' () =>              {                  try                  {                      var xmlDocInfo = GetResourceXmlDocument(resourceDictionaryUri);                      var doc = xmlDocInfo.Item1;                      var xmlNamespaceManager = xmlDocInfo.Item2;                        string xpath = string.Format("/ctl:ResourceDictionary/ctl:Style[@x:Key='{0}']/@BasedOn"' styleKey);                      var xmlAttribute = doc.SelectSingleNode(xpath' xmlNamespaceManager) as XmlAttribute;                      if (xmlAttribute == null)                      {                          Log.Warning("Style '{0}' does not have the 'BasedOn' attribute defined"' styleKey);                          return null;                      }                        string basedOnValue = xmlAttribute.Value;                      basedOnValue = basedOnValue.Replace("StaticResource"' "");                      basedOnValue = basedOnValue.Replace("x:Type"' "").Trim(new[] {' '' '{'' '}'});                        #region Create xml type mapper                      var xamlTypeMapper = new XamlTypeMapper(new[] {"PresentationFramework"});                      foreach (XmlAttribute namespaceAttribute in doc.DocumentElement.Attributes)                      {                          string xmlNamespace = namespaceAttribute.Name.Replace("xmlns"' string.Empty).TrimStart(new[] {':'});                            string value = namespaceAttribute.Value;                          string clrNamespace = value;                          string assemblyName = string.Empty;                            if (clrNamespace.StartsWith("clr-namespace:"))                          {                              // We have a hit (formatting is normally one of the 2 below):                              // * clr-namespace:[NAMESPACE]                              // * clr-namespace:[NAMESPACE];assembly=[ASSEMBLY]                              if (clrNamespace.Contains(";"))                              {                                  clrNamespace = clrNamespace.Split(new[] {';'})[0];                              }                              clrNamespace = clrNamespace.Replace("clr-namespace:"' string.Empty);                                if (value.Contains(";"))                              {                                  assemblyName = value.Split(new[] {';'})[1].Replace("assembly:"' string.Empty);                              }                                xamlTypeMapper.AddMappingProcessingInstruction(xmlNamespace' clrNamespace' assemblyName);                          }                      }                      #endregion                        string[] splittedType = basedOnValue.Split(new[] {':'});                      string typeNamespace = (splittedType.Length == 2) ? splittedType[0] : "http://schemas.microsoft.com/winfx/2006/xaml/presentation";                      string typeName = (splittedType.Length == 2) ? splittedType[1] : splittedType[0];                      var type = xamlTypeMapper.GetType(typeNamespace' typeName);                      if (type == null)                      {                          return null;                      }                        Log.Debug("Style '{0}' is based on type '{1}'"' styleKey' type);                        if ((type == typeof(FrameworkElement)) || type.IsSubclassOf(typeof(FrameworkElement)))                      {                          return type;                      }                        return null;                  }                  catch (Exception ex)                  {                      Log.Error(ex' "Failed to find the framework element where style '{0}' is based on"' styleKey);                      return null;                  }              });
Magic Number,Orchestra,StyleHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\StyleHelper.cs,FindFrameworkElementStyleIsBasedOn,The following statement contains a magic number: return _styleToFrameworkElementTypeCache.GetFromCacheOrFetch(styleKey' () =>              {                  try                  {                      var xmlDocInfo = GetResourceXmlDocument(resourceDictionaryUri);                      var doc = xmlDocInfo.Item1;                      var xmlNamespaceManager = xmlDocInfo.Item2;                        string xpath = string.Format("/ctl:ResourceDictionary/ctl:Style[@x:Key='{0}']/@BasedOn"' styleKey);                      var xmlAttribute = doc.SelectSingleNode(xpath' xmlNamespaceManager) as XmlAttribute;                      if (xmlAttribute == null)                      {                          Log.Warning("Style '{0}' does not have the 'BasedOn' attribute defined"' styleKey);                          return null;                      }                        string basedOnValue = xmlAttribute.Value;                      basedOnValue = basedOnValue.Replace("StaticResource"' "");                      basedOnValue = basedOnValue.Replace("x:Type"' "").Trim(new[] {' '' '{'' '}'});                        #region Create xml type mapper                      var xamlTypeMapper = new XamlTypeMapper(new[] {"PresentationFramework"});                      foreach (XmlAttribute namespaceAttribute in doc.DocumentElement.Attributes)                      {                          string xmlNamespace = namespaceAttribute.Name.Replace("xmlns"' string.Empty).TrimStart(new[] {':'});                            string value = namespaceAttribute.Value;                          string clrNamespace = value;                          string assemblyName = string.Empty;                            if (clrNamespace.StartsWith("clr-namespace:"))                          {                              // We have a hit (formatting is normally one of the 2 below):                              // * clr-namespace:[NAMESPACE]                              // * clr-namespace:[NAMESPACE];assembly=[ASSEMBLY]                              if (clrNamespace.Contains(";"))                              {                                  clrNamespace = clrNamespace.Split(new[] {';'})[0];                              }                              clrNamespace = clrNamespace.Replace("clr-namespace:"' string.Empty);                                if (value.Contains(";"))                              {                                  assemblyName = value.Split(new[] {';'})[1].Replace("assembly:"' string.Empty);                              }                                xamlTypeMapper.AddMappingProcessingInstruction(xmlNamespace' clrNamespace' assemblyName);                          }                      }                      #endregion                        string[] splittedType = basedOnValue.Split(new[] {':'});                      string typeNamespace = (splittedType.Length == 2) ? splittedType[0] : "http://schemas.microsoft.com/winfx/2006/xaml/presentation";                      string typeName = (splittedType.Length == 2) ? splittedType[1] : splittedType[0];                      var type = xamlTypeMapper.GetType(typeNamespace' typeName);                      if (type == null)                      {                          return null;                      }                        Log.Debug("Style '{0}' is based on type '{1}'"' styleKey' type);                        if ((type == typeof(FrameworkElement)) || type.IsSubclassOf(typeof(FrameworkElement)))                      {                          return type;                      }                        return null;                  }                  catch (Exception ex)                  {                      Log.Error(ex' "Failed to find the framework element where style '{0}' is based on"' styleKey);                      return null;                  }              });
Magic Number,Orchestra,ThemeHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\ThemeHelper.cs,GetAccentColor,The following statement contains a magic number: return _accentColorsCache.GetFromCacheOrFetch(colorStyle' () =>              {                  var color = GetAccentColorBrush().Color;                    switch (colorStyle)                  {                      case AccentColorStyle.AccentColor:                          return Color.FromArgb(255' color.R' color.G' color.B);                        case AccentColorStyle.AccentColor1:                          return Color.FromArgb(204' color.R' color.G' color.B);                        case AccentColorStyle.AccentColor2:                          return Color.FromArgb(153' color.R' color.G' color.B);                        case AccentColorStyle.AccentColor3:                          return Color.FromArgb(102' color.R' color.G' color.B);                        case AccentColorStyle.AccentColor4:                          return Color.FromArgb(51' color.R' color.G' color.B);                        default:                          throw new ArgumentOutOfRangeException("colorStyle");                  }              });
Magic Number,Orchestra,ThemeHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\ThemeHelper.cs,GetAccentColor,The following statement contains a magic number: return _accentColorsCache.GetFromCacheOrFetch(colorStyle' () =>              {                  var color = GetAccentColorBrush().Color;                    switch (colorStyle)                  {                      case AccentColorStyle.AccentColor:                          return Color.FromArgb(255' color.R' color.G' color.B);                        case AccentColorStyle.AccentColor1:                          return Color.FromArgb(204' color.R' color.G' color.B);                        case AccentColorStyle.AccentColor2:                          return Color.FromArgb(153' color.R' color.G' color.B);                        case AccentColorStyle.AccentColor3:                          return Color.FromArgb(102' color.R' color.G' color.B);                        case AccentColorStyle.AccentColor4:                          return Color.FromArgb(51' color.R' color.G' color.B);                        default:                          throw new ArgumentOutOfRangeException("colorStyle");                  }              });
Magic Number,Orchestra,ThemeHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\ThemeHelper.cs,GetAccentColor,The following statement contains a magic number: return _accentColorsCache.GetFromCacheOrFetch(colorStyle' () =>              {                  var color = GetAccentColorBrush().Color;                    switch (colorStyle)                  {                      case AccentColorStyle.AccentColor:                          return Color.FromArgb(255' color.R' color.G' color.B);                        case AccentColorStyle.AccentColor1:                          return Color.FromArgb(204' color.R' color.G' color.B);                        case AccentColorStyle.AccentColor2:                          return Color.FromArgb(153' color.R' color.G' color.B);                        case AccentColorStyle.AccentColor3:                          return Color.FromArgb(102' color.R' color.G' color.B);                        case AccentColorStyle.AccentColor4:                          return Color.FromArgb(51' color.R' color.G' color.B);                        default:                          throw new ArgumentOutOfRangeException("colorStyle");                  }              });
Magic Number,Orchestra,ThemeHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\ThemeHelper.cs,GetAccentColor,The following statement contains a magic number: return _accentColorsCache.GetFromCacheOrFetch(colorStyle' () =>              {                  var color = GetAccentColorBrush().Color;                    switch (colorStyle)                  {                      case AccentColorStyle.AccentColor:                          return Color.FromArgb(255' color.R' color.G' color.B);                        case AccentColorStyle.AccentColor1:                          return Color.FromArgb(204' color.R' color.G' color.B);                        case AccentColorStyle.AccentColor2:                          return Color.FromArgb(153' color.R' color.G' color.B);                        case AccentColorStyle.AccentColor3:                          return Color.FromArgb(102' color.R' color.G' color.B);                        case AccentColorStyle.AccentColor4:                          return Color.FromArgb(51' color.R' color.G' color.B);                        default:                          throw new ArgumentOutOfRangeException("colorStyle");                  }              });
Magic Number,Orchestra,ThemeHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\ThemeHelper.cs,GetAccentColor,The following statement contains a magic number: return _accentColorsCache.GetFromCacheOrFetch(colorStyle' () =>              {                  var color = GetAccentColorBrush().Color;                    switch (colorStyle)                  {                      case AccentColorStyle.AccentColor:                          return Color.FromArgb(255' color.R' color.G' color.B);                        case AccentColorStyle.AccentColor1:                          return Color.FromArgb(204' color.R' color.G' color.B);                        case AccentColorStyle.AccentColor2:                          return Color.FromArgb(153' color.R' color.G' color.B);                        case AccentColorStyle.AccentColor3:                          return Color.FromArgb(102' color.R' color.G' color.B);                        case AccentColorStyle.AccentColor4:                          return Color.FromArgb(51' color.R' color.G' color.B);                        default:                          throw new ArgumentOutOfRangeException("colorStyle");                  }              });
Magic Number,Orchestra,ThemeHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\ThemeHelper.cs,CreateAccentColorResourceDictionary,The following statement contains a magic number: resourceDictionary.Add("ProgressBrush"' new LinearGradientBrush(new GradientStopCollection(new[]                  {                      new GradientStop((Color)resourceDictionary["HighlightColor"]' 0)'                      new GradientStop((Color)resourceDictionary["AccentColor3"]' 1)                  })' new Point(0.001' 0.5)' new Point(1.002' 0.5)));
Magic Number,Orchestra,ThemeHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\ThemeHelper.cs,CreateAccentColorResourceDictionary,The following statement contains a magic number: resourceDictionary.Add("ProgressBrush"' new LinearGradientBrush(new GradientStopCollection(new[]                  {                      new GradientStop((Color)resourceDictionary["HighlightColor"]' 0)'                      new GradientStop((Color)resourceDictionary["AccentColor3"]' 1)                  })' new Point(0.001' 0.5)' new Point(1.002' 0.5)));
Magic Number,Orchestra,ThemeHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\ThemeHelper.cs,CreateAccentColorResourceDictionary,The following statement contains a magic number: resourceDictionary.Add("ProgressBrush"' new LinearGradientBrush(new GradientStopCollection(new[]                  {                      new GradientStop((Color)resourceDictionary["HighlightColor"]' 0)'                      new GradientStop((Color)resourceDictionary["AccentColor3"]' 1)                  })' new Point(0.001' 0.5)' new Point(1.002' 0.5)));
Magic Number,Orchestra,ThemeHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\ThemeHelper.cs,CreateAccentColorResourceDictionary,The following statement contains a magic number: resourceDictionary.Add("ProgressBrush"' new LinearGradientBrush(new GradientStopCollection(new[]                  {                      new GradientStop((Color)resourceDictionary["HighlightColor"]' 0)'                      new GradientStop((Color)resourceDictionary["AccentColor3"]' 1)                  })' new Point(0.001' 0.5)' new Point(1.002' 0.5)));
Magic Number,Orchestra,ThemeHelper,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Helpers\ThemeHelper.cs,CreateAccentColorResourceDictionary,The following statement contains a magic number: resourceDictionary.Add("IdealForegroundDisabledBrush"' new SolidColorBrush((Color)resourceDictionary["IdealForegroundColor"]) { Opacity = 0.4 });
Magic Number,Orchestra.Controls,AnimatingTextBlock,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Controls\AnimatingTextBlock.cs,CreateContent,The following statement contains a magic number: for (int i = 0; i < 2; i++)              {                  var textBlock = new TextBlock();                  textBlock.HorizontalAlignment = HorizontalAlignment.Left;                  textBlock.VerticalAlignment = VerticalAlignment.Center;                  textBlock.Opacity = 0d;                  textBlock.RenderTransform = renderTransform;                    _textBlocks.Add(textBlock);                    grid.Children.Add(textBlock);              }
Magic Number,Orchestra.Controls,FluidProgressBar,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Controls\FluidProgressBar.xaml.cs,OnDurationBChanged,The following statement contains a magic number: UpdateKeyTimes(2' newDurationB);
Magic Number,Orchestra.Controls,FluidProgressBar,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Controls\FluidProgressBar.xaml.cs,OnDurationCChanged,The following statement contains a magic number: UpdateKeyTimes(3' newDurationC);
Magic Number,Orchestra.Controls,FluidProgressBar,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Controls\FluidProgressBar.xaml.cs,UpdateKeyFrames,The following statement contains a magic number: if ((width > 0.0) && (Visibility == Visibility.Visible))              {                  var point0 = -10;                  var pointA = width*KeyFrameA;                  var pointB = width*KeyFrameB;                  var pointC = width + 10;                    // Update the keyframes stored in the map                  UpdateKeyFrame(0' point0);                  UpdateKeyFrame(1' pointA);                  UpdateKeyFrame(2' pointB);                  UpdateKeyFrame(3' pointC);              }
Magic Number,Orchestra.Controls,FluidProgressBar,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Controls\FluidProgressBar.xaml.cs,UpdateKeyFrames,The following statement contains a magic number: if ((width > 0.0) && (Visibility == Visibility.Visible))              {                  var point0 = -10;                  var pointA = width*KeyFrameA;                  var pointB = width*KeyFrameB;                  var pointC = width + 10;                    // Update the keyframes stored in the map                  UpdateKeyFrame(0' point0);                  UpdateKeyFrame(1' pointA);                  UpdateKeyFrame(2' pointB);                  UpdateKeyFrame(3' pointC);              }
Magic Number,Orchestra.Controls,FluidProgressBar,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Controls\FluidProgressBar.xaml.cs,UpdateKeyFrames,The following statement contains a magic number: if ((width > 0.0) && (Visibility == Visibility.Visible))              {                  var point0 = -10;                  var pointA = width*KeyFrameA;                  var pointB = width*KeyFrameB;                  var pointC = width + 10;                    // Update the keyframes stored in the map                  UpdateKeyFrame(0' point0);                  UpdateKeyFrame(1' pointA);                  UpdateKeyFrame(2' pointB);                  UpdateKeyFrame(3' pointC);              }
Magic Number,Orchestra.Controls,FluidProgressBar,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Controls\FluidProgressBar.xaml.cs,UpdateKeyFrames,The following statement contains a magic number: if ((width > 0.0) && (Visibility == Visibility.Visible))              {                  var point0 = -10;                  var pointA = width*KeyFrameA;                  var pointB = width*KeyFrameB;                  var pointC = width + 10;                    // Update the keyframes stored in the map                  UpdateKeyFrame(0' point0);                  UpdateKeyFrame(1' pointA);                  UpdateKeyFrame(2' pointB);                  UpdateKeyFrame(3' pointC);              }
Magic Number,Orchestra.Controls,FluidProgressBar,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Controls\FluidProgressBar.xaml.cs,UpdateKeyTimes,The following statement contains a magic number: switch (key)              {                  case 1:                      UpdateKeyTime(1' newDuration);                      UpdateKeyTime(2' newDuration + DurationB);                      UpdateKeyTime(3' newDuration + DurationB + DurationC);                      break;                    case 2:                      UpdateKeyTime(2' DurationA + newDuration);                      UpdateKeyTime(3' DurationA + newDuration + DurationC);                      break;                    case 3:                      UpdateKeyTime(3' DurationA + DurationB + newDuration);                      break;                    default:                      break;              }
Magic Number,Orchestra.Controls,FluidProgressBar,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Controls\FluidProgressBar.xaml.cs,UpdateKeyTimes,The following statement contains a magic number: switch (key)              {                  case 1:                      UpdateKeyTime(1' newDuration);                      UpdateKeyTime(2' newDuration + DurationB);                      UpdateKeyTime(3' newDuration + DurationB + DurationC);                      break;                    case 2:                      UpdateKeyTime(2' DurationA + newDuration);                      UpdateKeyTime(3' DurationA + newDuration + DurationC);                      break;                    case 3:                      UpdateKeyTime(3' DurationA + DurationB + newDuration);                      break;                    default:                      break;              }
Magic Number,Orchestra.Controls,FluidProgressBar,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Controls\FluidProgressBar.xaml.cs,UpdateKeyTimes,The following statement contains a magic number: switch (key)              {                  case 1:                      UpdateKeyTime(1' newDuration);                      UpdateKeyTime(2' newDuration + DurationB);                      UpdateKeyTime(3' newDuration + DurationB + DurationC);                      break;                    case 2:                      UpdateKeyTime(2' DurationA + newDuration);                      UpdateKeyTime(3' DurationA + newDuration + DurationC);                      break;                    case 3:                      UpdateKeyTime(3' DurationA + DurationB + newDuration);                      break;                    default:                      break;              }
Magic Number,Orchestra.Controls,FluidProgressBar,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Controls\FluidProgressBar.xaml.cs,UpdateKeyTimes,The following statement contains a magic number: switch (key)              {                  case 1:                      UpdateKeyTime(1' newDuration);                      UpdateKeyTime(2' newDuration + DurationB);                      UpdateKeyTime(3' newDuration + DurationB + DurationC);                      break;                    case 2:                      UpdateKeyTime(2' DurationA + newDuration);                      UpdateKeyTime(3' DurationA + newDuration + DurationC);                      break;                    case 3:                      UpdateKeyTime(3' DurationA + DurationB + newDuration);                      break;                    default:                      break;              }
Magic Number,Orchestra.Controls,FluidProgressBar,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Controls\FluidProgressBar.xaml.cs,UpdateKeyTimes,The following statement contains a magic number: switch (key)              {                  case 1:                      UpdateKeyTime(1' newDuration);                      UpdateKeyTime(2' newDuration + DurationB);                      UpdateKeyTime(3' newDuration + DurationB + DurationC);                      break;                    case 2:                      UpdateKeyTime(2' DurationA + newDuration);                      UpdateKeyTime(3' DurationA + newDuration + DurationC);                      break;                    case 3:                      UpdateKeyTime(3' DurationA + DurationB + newDuration);                      break;                    default:                      break;              }
Magic Number,Orchestra.Controls,FluidProgressBar,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Controls\FluidProgressBar.xaml.cs,UpdateKeyTimes,The following statement contains a magic number: switch (key)              {                  case 1:                      UpdateKeyTime(1' newDuration);                      UpdateKeyTime(2' newDuration + DurationB);                      UpdateKeyTime(3' newDuration + DurationB + DurationC);                      break;                    case 2:                      UpdateKeyTime(2' DurationA + newDuration);                      UpdateKeyTime(3' DurationA + newDuration + DurationC);                      break;                    case 3:                      UpdateKeyTime(3' DurationA + DurationB + newDuration);                      break;                    default:                      break;              }
Magic Number,Orchestra.Controls,FluidProgressBar,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Controls\FluidProgressBar.xaml.cs,UpdateKeyTimes,The following statement contains a magic number: switch (key)              {                  case 1:                      UpdateKeyTime(1' newDuration);                      UpdateKeyTime(2' newDuration + DurationB);                      UpdateKeyTime(3' newDuration + DurationB + DurationC);                      break;                    case 2:                      UpdateKeyTime(2' DurationA + newDuration);                      UpdateKeyTime(3' DurationA + newDuration + DurationC);                      break;                    case 3:                      UpdateKeyTime(3' DurationA + DurationB + newDuration);                      break;                    default:                      break;              }
Magic Number,Orchestra.Controls,FluidProgressBar,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Controls\FluidProgressBar.xaml.cs,UpdateTimelineDelay,The following statement contains a magic number: if (_sb != null)              {                  for (int i = 0; i < _sb.Children.Count; i++)                  {                      // The first five animations are for translation                      // The next five animations are for opacity                      if (i == 5)                      {                          nextDelay = newDelay;                      }                      else                      {                          nextDelay += newDelay;                      }                        var timeline = _sb.Children[i] as DoubleAnimationUsingKeyFrames;                      if (timeline != null)                      {                          timeline.SetCurrentValue(Timeline.BeginTimeProperty' nextDelay.TimeSpan);                      }                  }              }
Magic Number,Orchestra.Converters,PathToStringConverter,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Converters\PathToStringConverter.cs,Convert,The following statement contains a magic number: var maxCharacters = 25;
Magic Number,Orchestra.Markup,FontImage,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\FontImage.cs,CreateGlyph,The following statement contains a magic number: if (fontFamily != null && !string.IsNullOrEmpty(text))              {                  var typeface = new Typeface(fontFamily' fontStyle' fontWeight' fontStretch);                    GlyphTypeface glyphTypeface;                  if (!typeface.TryGetGlyphTypeface(out glyphTypeface))                  {                      throw Log.ErrorAndCreateException<InvalidOperationException>("No glyph type face found");                  }                    var glyphIndexes = new ushort[text.Length];                  var advanceWidths = new double[text.Length];                    for (var i = 0; i < text.Length; i++)                  {                      ushort glyphIndex;                        try                      {                          var key = text[i];                            if (!glyphTypeface.CharacterToGlyphMap.TryGetValue(key' out glyphIndex))                          {                              glyphIndex = 42;                          }                      }                      catch (Exception)                      {                          glyphIndex = 42;                      }                        glyphIndexes[i] = glyphIndex;                        var width = glyphTypeface.AdvanceWidths[glyphIndex] * 1.0;                      advanceWidths[i] = width;                  }                    try                  {  #pragma warning disable 618                      var glyphRun = new GlyphRun(glyphTypeface' 0' false' RenderingEmSize' glyphIndexes' new Point(0' 0)' advanceWidths' null' null' null' null' null' null);  #pragma warning restore 618                      var glyphRunDrawing = new GlyphRunDrawing(foreBrush' glyphRun);                        //TextOptions.SetTextRenderingMode(glyphRunDrawing' TextRenderingMode.Aliased);                        var drawingImage = new DrawingImage(glyphRunDrawing);                        //TextOptions.SetTextRenderingMode(drawingImage' TextRenderingMode.Aliased);                        return drawingImage;                  }                  catch (Exception ex)                  {                      Log.Error(ex' "Error in generating Glyphrun");                  }              }
Magic Number,Orchestra.Markup,FontImage,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\FontImage.cs,CreateGlyph,The following statement contains a magic number: if (fontFamily != null && !string.IsNullOrEmpty(text))              {                  var typeface = new Typeface(fontFamily' fontStyle' fontWeight' fontStretch);                    GlyphTypeface glyphTypeface;                  if (!typeface.TryGetGlyphTypeface(out glyphTypeface))                  {                      throw Log.ErrorAndCreateException<InvalidOperationException>("No glyph type face found");                  }                    var glyphIndexes = new ushort[text.Length];                  var advanceWidths = new double[text.Length];                    for (var i = 0; i < text.Length; i++)                  {                      ushort glyphIndex;                        try                      {                          var key = text[i];                            if (!glyphTypeface.CharacterToGlyphMap.TryGetValue(key' out glyphIndex))                          {                              glyphIndex = 42;                          }                      }                      catch (Exception)                      {                          glyphIndex = 42;                      }                        glyphIndexes[i] = glyphIndex;                        var width = glyphTypeface.AdvanceWidths[glyphIndex] * 1.0;                      advanceWidths[i] = width;                  }                    try                  {  #pragma warning disable 618                      var glyphRun = new GlyphRun(glyphTypeface' 0' false' RenderingEmSize' glyphIndexes' new Point(0' 0)' advanceWidths' null' null' null' null' null' null);  #pragma warning restore 618                      var glyphRunDrawing = new GlyphRunDrawing(foreBrush' glyphRun);                        //TextOptions.SetTextRenderingMode(glyphRunDrawing' TextRenderingMode.Aliased);                        var drawingImage = new DrawingImage(glyphRunDrawing);                        //TextOptions.SetTextRenderingMode(drawingImage' TextRenderingMode.Aliased);                        return drawingImage;                  }                  catch (Exception ex)                  {                      Log.Error(ex' "Error in generating Glyphrun");                  }              }
Magic Number,Orchestra.StylesExplorer.MarkupReflection,BamlAssembly,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\BamlAssembly.cs,GetAssemblyResourceUri,The following statement contains a magic number: StringBuilder token = new StringBuilder(data.Length * 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,BamlBinaryReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\BamlBinaryReader.cs,ReadCompressedDouble,The following statement contains a magic number: switch (this.ReadByte())              {                  case 1:                      return 0;                    case 2:                      return 1;                    case 3:                      return -1;                    case 4:                      {                          double num = this.ReadInt32();                          return (num * 1E-06);                      }                  case 5:                      return this.ReadDouble();              }
Magic Number,Orchestra.StylesExplorer.MarkupReflection,BamlBinaryReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\BamlBinaryReader.cs,ReadCompressedDouble,The following statement contains a magic number: switch (this.ReadByte())              {                  case 1:                      return 0;                    case 2:                      return 1;                    case 3:                      return -1;                    case 4:                      {                          double num = this.ReadInt32();                          return (num * 1E-06);                      }                  case 5:                      return this.ReadDouble();              }
Magic Number,Orchestra.StylesExplorer.MarkupReflection,BamlBinaryReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\BamlBinaryReader.cs,ReadCompressedDouble,The following statement contains a magic number: switch (this.ReadByte())              {                  case 1:                      return 0;                    case 2:                      return 1;                    case 3:                      return -1;                    case 4:                      {                          double num = this.ReadInt32();                          return (num * 1E-06);                      }                  case 5:                      return this.ReadDouble();              }
Magic Number,Orchestra.StylesExplorer.MarkupReflection,BamlBinaryReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\BamlBinaryReader.cs,ReadCompressedDouble,The following statement contains a magic number: switch (this.ReadByte())              {                  case 1:                      return 0;                    case 2:                      return 1;                    case 3:                      return -1;                    case 4:                      {                          double num = this.ReadInt32();                          return (num * 1E-06);                      }                  case 5:                      return this.ReadDouble();              }
Magic Number,Orchestra.StylesExplorer.MarkupReflection,BamlBinaryReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\BamlBinaryReader.cs,ReadCompressedDouble,The following statement contains a magic number: switch (this.ReadByte())              {                  case 1:                      return 0;                    case 2:                      return 1;                    case 3:                      return -1;                    case 4:                      {                          double num = this.ReadInt32();                          return (num * 1E-06);                      }                  case 5:                      return this.ReadDouble();              }
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownAssemblyTable = new string[5];
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownAssemblyTable[2] = "mscorlib' Version=2.0.0.0' Culture=neutral' PublicKeyToken=b77a5c561934e089";
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownAssemblyTable[3] = "System' Version=2.0.0.0' Culture=neutral' PublicKeyToken=b77a5c561934e089";
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownAssemblyTable[4] = "WindowBase' Version=3.0.0.0' Culture=neutral' PublicKeyToken=31bf3856ad364e35";
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownAssemblyTable = new string[5];
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownAssemblyTable[2] = "mscorlib' Version=2.0.0.0' Culture=neutral' PublicKeyToken=b77a5c561934e089";
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownAssemblyTable[3] = "System' Version=2.0.0.0' Culture=neutral' PublicKeyToken=b77a5c561934e089";
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownAssemblyTable[4] = "WindowBase' Version=3.0.0.0' Culture=neutral' PublicKeyToken=31bf3856ad364e35";
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable = new TypeDeclaration[760];
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[2] = new TypeDeclaration(resolver' "AdornedElementPlaceholder"' "System.Windows.Controls"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[3] = new TypeDeclaration(resolver' "Adorner"' "System.Windows.Documents"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[4] = new TypeDeclaration(resolver' "AdornerDecorator"' "System.Windows.Documents"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[5] = new TypeDeclaration(resolver' "AdornerLayer"' "System.Windows.Documents"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[6] = new TypeDeclaration(resolver' "AffineTransform3D"' "System.Windows.Media.Media3D"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[7] = new TypeDeclaration(resolver' "AmbientLight"' "System.Windows.Media.Media3D"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[8] = new TypeDeclaration(resolver' "AnchoredBlock"' "System.Windows.Documents"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[9] = new TypeDeclaration(resolver' "Animatable"' "System.Windows.Media.Animaton"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[10] = new TypeDeclaration(resolver' "AnimationClock"' "System.Windows.Media.Animation"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[11] = new TypeDeclaration(resolver' "AnimationTimeline"' "System.Windows.Media.Animation"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[12] = new TypeDeclaration(resolver' "Application"' "System.Net.Mime"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[12] = new TypeDeclaration(resolver' "Application"' "System.Net.Mime"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[13] = new TypeDeclaration(resolver' "ArcSegment"' "System.Windows.Media"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[14] = new TypeDeclaration(resolver' "ArrayExtension"' "System.Windows.Markup"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[15] = new TypeDeclaration(resolver' "AxisAngleRotation3D"' "System.Windows.Media.Media3D"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[20] = new TypeDeclaration(resolver' "Binding"' "System.Windows.Data"' 0' true);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[30] = new TypeDeclaration(resolver' "BitmapEncoder"' "System.Windows.Media.Imaging"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[40] = new TypeDeclaration(resolver' "BmpBitmapEncoder"' "System.Windows.Media.Imaging"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x2b] = new TypeDeclaration(resolver' "Boolean"' "System"' 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x2e] = new TypeDeclaration(resolver' "BooleanConverter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[50] = new TypeDeclaration(resolver' "Border"' "System.Windows.Controls"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x39] = new TypeDeclaration(resolver' "Byte"' "System"' 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[60] = new TypeDeclaration(resolver' "ByteAnimationUsingKeyFrames"' "System.Windows.Media.Animation"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x3d] = new TypeDeclaration(resolver' "ByteConverter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x43] = new TypeDeclaration(resolver' "Char"' "System"' 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[70] = new TypeDeclaration(resolver' "CharConverter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[70] = new TypeDeclaration(resolver' "CharConverter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[80] = new TypeDeclaration(resolver' "CollectionViewSource"' "System.Windows.Data"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x51] = new TypeDeclaration(resolver' "Color"' "Microsoft.Win32"' 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[90] = new TypeDeclaration(resolver' "ColumnDefinition"' "System.Windows.Controls"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[100] = new TypeDeclaration(resolver' "ContentControl"' "System.Windows.Controls"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x67] = new TypeDeclaration(resolver' "ContentPropertyAttribute"' "System.Windows.Markup"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x68] = new TypeDeclaration(resolver' "ContentWrapperAttribute"' "System.Windows.Markup"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[110] = new TypeDeclaration(resolver' "CornerRadius"' "System.Windows"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x71] = new TypeDeclaration(resolver' "CultureInfo"' "System.Globalization"' 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x72] = new TypeDeclaration(resolver' "CultureInfoConverter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[120] = new TypeDeclaration(resolver' "DataTemplate"' "System.Windows"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x7b] = new TypeDeclaration(resolver' "DateTime"' "System"' 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x7c] = new TypeDeclaration(resolver' "DateTimeConverter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x7d] = new TypeDeclaration(resolver' "DateTimeConverter2"' "System.Windows.Markup"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x7e] = new TypeDeclaration(resolver' "Decimal"' "System"' 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[130] = new TypeDeclaration(resolver' "DecimalConverter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[130] = new TypeDeclaration(resolver' "DecimalConverter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x87] = new TypeDeclaration(resolver' "DependencyObject"' "System.Windows"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x88] = new TypeDeclaration(resolver' "DependencyProperty"' "System.Windows"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[140] = new TypeDeclaration(resolver' "DirectionalLight"' "System.Windows.Media.Media3D"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[150] = new TypeDeclaration(resolver' "DiscreteMatrixKeyFrame"' "System.Windows.Media.Animation"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[160] = new TypeDeclaration(resolver' "DiscreteThicknessKeyFrame"' "System.Windows.Media.Animation"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0xa8] = new TypeDeclaration(resolver' "Double"' "System"' 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[170] = new TypeDeclaration(resolver' "DoubleAnimationBase"' "System.Windows.Media.Animation"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0xaf] = new TypeDeclaration(resolver' "DoubleConverter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[180] = new TypeDeclaration(resolver' "DrawingBrush"' "System.Windows.Media"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[190] = new TypeDeclaration(resolver' "DynamicResourceExtensionConverter"' "System.Windows"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0xc3] = new TypeDeclaration(resolver' "EnumConverter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[200] = new TypeDeclaration(resolver' "Expression"' "System.Windows"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[200] = new TypeDeclaration(resolver' "Expression"' "System.Windows"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0xc9] = new TypeDeclaration(resolver' "ExpressionConverter"' "System.Windows"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[210] = new TypeDeclaration(resolver' "FlowDocumentPageViewer"' "System.Windows.Controls"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[220] = new TypeDeclaration(resolver' "FontStyleConverter"' "System.Windows"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[230] = new TypeDeclaration(resolver' "FrameworkRichTextComposition"' "System.Windows.Documents"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0xe9] = new TypeDeclaration(resolver' "Freezable"' "System.Windows"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[240] = new TypeDeclaration(resolver' "GeometryConverter"' "System.Windows.Media"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[250] = new TypeDeclaration(resolver' "Glyphs"' "System.Windows.Documents"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[260] = new TypeDeclaration(resolver' "GridViewColumnHeader"' "System.Windows.Controls"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x10a] = new TypeDeclaration(resolver' "Guid"' "System"' 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x10b] = new TypeDeclaration(resolver' "GuidConverter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[270] = new TypeDeclaration(resolver' "HeaderedItemsControl"' "System.Windows.Controls"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x115] = new TypeDeclaration(resolver' "IComponentConnector"' "System.Windows.Markup"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[280] = new TypeDeclaration(resolver' "IconBitmapDecoder"' "System.Windows.Media.Imaging"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x116] = new TypeDeclaration(resolver' "INameScope"' "System.Windows.Markup"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[290] = new TypeDeclaration(resolver' "Inline"' "System.Windows.Documents"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[300] = new TypeDeclaration(resolver' "InputScopeName"' "System.Windows.Input"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x12e] = new TypeDeclaration(resolver' "Int16"' "System"' 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x132] = new TypeDeclaration(resolver' "Int16Converter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x135] = new TypeDeclaration(resolver' "Int32"' "System"' 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[310] = new TypeDeclaration(resolver' "Int32Animation"' "System.Windows.Media.Animation"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x13b] = new TypeDeclaration(resolver' "Int32Converter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x13e] = new TypeDeclaration(resolver' "Int32Rect"' "System.Windows"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x13f] = new TypeDeclaration(resolver' "Int32RectConverter"' "System.Windows"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[320] = new TypeDeclaration(resolver' "Int64"' "System"' 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[320] = new TypeDeclaration(resolver' "Int64"' "System"' 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x144] = new TypeDeclaration(resolver' "Int64Converter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[330] = new TypeDeclaration(resolver' "ItemsPanelTemplate"' "System.Windows.Controls"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x152] = new TypeDeclaration(resolver' "KeyConverter"' "System.Windows.Input"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[340] = new TypeDeclaration(resolver' "KeyGestureConverter"' "System.Windows.Input"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[350] = new TypeDeclaration(resolver' "Line"' "System.Windows.Shapes"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[360] = new TypeDeclaration(resolver' "LinearInt32KeyFrame"' "System.Windows.Media.Animation"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[370] = new TypeDeclaration(resolver' "LinearVector3DKeyFrame"' "System.Windows.Media.Animation"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[380] = new TypeDeclaration(resolver' "LostFocusEventManager"' "System.Windows"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x17d] = new TypeDeclaration(resolver' "MarkupExtension"' "System.Windows.Markup"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x181] = new TypeDeclaration(resolver' "Matrix"' "System.Windows.Media"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[390] = new TypeDeclaration(resolver' "MatrixAnimationUsingPath"' "System.Windows.Media.Animation"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x188] = new TypeDeclaration(resolver' "MatrixConverter"' "System.Windows.Media"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[400] = new TypeDeclaration(resolver' "MediaTimeline"' "System.Windows.Media"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[410] = new TypeDeclaration(resolver' "ModifierKeysConverter"' "System.Windows.Input"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[410] = new TypeDeclaration(resolver' "ModifierKeysConverter"' "System.Windows.Input"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[420] = new TypeDeclaration(resolver' "NameScope"' "System.Windows"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x1a8] = new TypeDeclaration(resolver' "NullableConverter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x1aa] = new TypeDeclaration(resolver' "Object"' "System"' 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[430] = new TypeDeclaration(resolver' "ObjectKeyFrame"' "System.Windows.Media.Animation"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[440] = new TypeDeclaration(resolver' "ParserContext"' "System.Windows.Markup"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[450] = new TypeDeclaration(resolver' "Pen"' "System.Windows.Media"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x1c8] = new TypeDeclaration(resolver' "Point"' "System.Windows"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[460] = new TypeDeclaration(resolver' "Point3DAnimationUsingKeyFrames"' "System.Windows.Media.Animation"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[470] = new TypeDeclaration(resolver' "PointAnimationUsingKeyFrames"' "System.Windows.Media.Animation"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x1da] = new TypeDeclaration(resolver' "PointConverter"' "System.Windows"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[480] = new TypeDeclaration(resolver' "PolyBezierSegment"' "System.Windows.Media"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[490] = new TypeDeclaration(resolver' "ProjectionCamera"' "System.Windows.Media.Media3D"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[500] = new TypeDeclaration(resolver' "QuaternionKeyFrameCollection"' "System.Windows.Media.Animation"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[510] = new TypeDeclaration(resolver' "RectAnimationUsingKeyFrames"' "System.Windows.Media.Animation"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x1ff] = new TypeDeclaration(resolver' "RectConverter"' "System.Windows"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[520] = new TypeDeclaration(resolver' "RepeatBehavior"' "System.Windows.Media.Animation"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[530] = new TypeDeclaration(resolver' "Rotation3D"' "System.Windows.Media.Media3D"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[540] = new TypeDeclaration(resolver' "RoutingStrategy"' "System.Windows"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x21f] = new TypeDeclaration(resolver' "RuntimeNamePropertyAttribute"' "System.Windows.Markup"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x220] = new TypeDeclaration(resolver' "SByte"' "System"' 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x221] = new TypeDeclaration(resolver' "SByteConverter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[550] = new TypeDeclaration(resolver' "ScrollViewer"' "System.Windows.Controls"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x22f] = new TypeDeclaration(resolver' "Single"' "System"' 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[560] = new TypeDeclaration(resolver' "SingleAnimation"' "System.Windows.Media.Animation"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x233] = new TypeDeclaration(resolver' "SingleConverter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x236] = new TypeDeclaration(resolver' "Size"' "System.Windows"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[570] = new TypeDeclaration(resolver' "SizeAnimationBase"' "System.Windows.Media.Animation"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x23c] = new TypeDeclaration(resolver' "SizeConverter"' "System.Windows"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[580] = new TypeDeclaration(resolver' "Span"' "System.Windows.Documents"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[590] = new TypeDeclaration(resolver' "SplinePoint3DKeyFrame"' "System.Windows.Media.Animation"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[600] = new TypeDeclaration(resolver' "SpotLight"' "System.Windows.Media.Media3D"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[610] = new TypeDeclaration(resolver' "StreamGeometryContext"' "System.Windows.Media"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x264] = new TypeDeclaration(resolver' "String"' "System"' 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x267] = new TypeDeclaration(resolver' "StringConverter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[620] = new TypeDeclaration(resolver' "Style"' "System.Windows"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[630] = new TypeDeclaration(resolver' "TableRowGroup"' "System.Windows.Documents"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[640] = new TypeDeclaration(resolver' "TextBoxBase"' "System.Windows.Controls.Primitives"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[650] = new TypeDeclaration(resolver' "ThemeDictionaryExtension"' "System.Windows"' 0' true);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[660] = new TypeDeclaration(resolver' "TiffBitmapDecoder"' "System.Windows.Media.Imaging"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x297] = new TypeDeclaration(resolver' "TimeSpan"' "System"' 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x298] = new TypeDeclaration(resolver' "TimeSpanConverter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[670] = new TypeDeclaration(resolver' "ToolBarOverflowPanel"' "System.Windows.Controls.Primitives"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[680] = new TypeDeclaration(resolver' "TransformCollection"' "System.Windows.Media"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[690] = new TypeDeclaration(resolver' "TriggerBase"' "System.Windows"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x2b4] = new TypeDeclaration(resolver' "TypeTypeConverter"' "System.Net.Configuration"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x2b7] = new TypeDeclaration(resolver' "UInt16"' "System"' 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x2b8] = new TypeDeclaration(resolver' "UInt16Converter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x2b9] = new TypeDeclaration(resolver' "UInt32"' "System"' 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x2ba] = new TypeDeclaration(resolver' "UInt32Converter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x2bb] = new TypeDeclaration(resolver' "UInt64"' "System"' 2);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[700] = new TypeDeclaration(resolver' "UInt64Converter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[700] = new TypeDeclaration(resolver' "UInt64Converter"' "System.ComponentModel"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x2c0] = new TypeDeclaration(resolver' "Uri"' "System"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x2c1] = new TypeDeclaration(resolver' "UriTypeConverter"' "System"' 3);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[710] = new TypeDeclaration(resolver' "Vector3DAnimation"' "System.Windows.Media.Animation"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[720] = new TypeDeclaration(resolver' "VectorAnimationUsingKeyFrames"' "System.Windows.Media.Animation"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x2d3] = new TypeDeclaration(resolver' "VectorConverter"' "System.Windows"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[730] = new TypeDeclaration(resolver' "Viewport3DVisual"' "System.Windows.Media.Media3D"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x2e1] = new TypeDeclaration(resolver' "WeakEventManager"' "System.Windows"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x2e2] = new TypeDeclaration(resolver' "WhitespaceSignificantCollectionAttribute"' "System.Windows.Markup"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[740] = new TypeDeclaration(resolver' "WmpBitmapDecoder"' "System.Windows.Media.Imaging"' 1);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[750] = new TypeDeclaration(resolver' "XamlStyleSerializer"' "System.Windows.Markup"' 0);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownTypeTable[0x2f3] = new TypeDeclaration(resolver' "XmlLangPropertyAttribute"' "System.Windows.Markup"' 4);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[2] = new PropertyDeclaration("Storyboard"' KnownTypeTable[0x11]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[3] = new PropertyDeclaration("Children"' KnownTypeTable[0x1c]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[4] = new PropertyDeclaration("Background"' KnownTypeTable[50]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[4] = new PropertyDeclaration("Background"' KnownTypeTable[50]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[5] = new PropertyDeclaration("BorderBrush"' KnownTypeTable[50]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[5] = new PropertyDeclaration("BorderBrush"' KnownTypeTable[50]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[6] = new PropertyDeclaration("BorderThickness"' KnownTypeTable[50]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[6] = new PropertyDeclaration("BorderThickness"' KnownTypeTable[50]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[7] = new PropertyDeclaration("Command"' KnownTypeTable[0x38]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[8] = new PropertyDeclaration("CommandParameter"' KnownTypeTable[0x38]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[9] = new PropertyDeclaration("CommandTarget"' KnownTypeTable[0x38]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[10] = new PropertyDeclaration("IsPressed"' KnownTypeTable[0x38]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[11] = new PropertyDeclaration("MaxWidth"' KnownTypeTable[90]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[11] = new PropertyDeclaration("MaxWidth"' KnownTypeTable[90]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[12] = new PropertyDeclaration("MinWidth"' KnownTypeTable[90]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[12] = new PropertyDeclaration("MinWidth"' KnownTypeTable[90]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[13] = new PropertyDeclaration("Width"' KnownTypeTable[90]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[13] = new PropertyDeclaration("Width"' KnownTypeTable[90]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[14] = new PropertyDeclaration("Content"' KnownTypeTable[100]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[14] = new PropertyDeclaration("Content"' KnownTypeTable[100]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[15] = new PropertyDeclaration("ContentTemplate"' KnownTypeTable[100]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[15] = new PropertyDeclaration("ContentTemplate"' KnownTypeTable[100]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0x10] = new PropertyDeclaration("ContentTemplateSelector"' KnownTypeTable[100]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0x11] = new PropertyDeclaration("HasContent"' KnownTypeTable[100]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[20] = new PropertyDeclaration("ContentSource"' KnownTypeTable[0x66]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[30] = new PropertyDeclaration("FontStyle"' KnownTypeTable[0x6b]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[40] = new PropertyDeclaration("LastChildFill"' KnownTypeTable[0xa3]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[50] = new PropertyDeclaration("MaxHeight"' KnownTypeTable[0xe2]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[60] = new PropertyDeclaration("GradientStops"' KnownTypeTable[0xfb]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[70] = new PropertyDeclaration("HasHeader"' KnownTypeTable[270]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[70] = new PropertyDeclaration("HasHeader"' KnownTypeTable[270]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0x47] = new PropertyDeclaration("Header"' KnownTypeTable[270]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0x48] = new PropertyDeclaration("HeaderTemplate"' KnownTypeTable[270]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0x49] = new PropertyDeclaration("HeaderTemplateSelector"' KnownTypeTable[270]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[80] = new PropertyDeclaration("ItemTemplateSelector"' KnownTypeTable[0x149]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[90] = new PropertyDeclaration("Child"' KnownTypeTable[0x1e5]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0x61] = new PropertyDeclaration("CanContentScroll"' KnownTypeTable[550]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0x62] = new PropertyDeclaration("HorizontalScrollBarVisibility"' KnownTypeTable[550]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0x63] = new PropertyDeclaration("VerticalScrollBarVisibility"' KnownTypeTable[550]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[100] = new PropertyDeclaration("Fill"' KnownTypeTable[0x22e]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[110] = new PropertyDeclaration("Text"' KnownTypeTable[0x27e]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[120] = new PropertyDeclaration("FontWeight"' KnownTypeTable[0x288]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[130] = new PropertyDeclaration("Children"' KnownTypeTable[0x2aa]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0x8a] = new PropertyDeclaration("Child"' KnownTypeTable[2]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0x8b] = new PropertyDeclaration("Child"' KnownTypeTable[4]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[140] = new PropertyDeclaration("Blocks"' KnownTypeTable[8]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[140] = new PropertyDeclaration("Blocks"' KnownTypeTable[8]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0x8d] = new PropertyDeclaration("Items"' KnownTypeTable[14]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0x91] = new PropertyDeclaration("Child"' KnownTypeTable[50]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0x95] = new PropertyDeclaration("KeyFrames"' KnownTypeTable[60]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[150] = new PropertyDeclaration("Children"' KnownTypeTable[0x42]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0x9e] = new PropertyDeclaration("VisualTree"' KnownTypeTable[120]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[160] = new PropertyDeclaration("KeyFrames"' KnownTypeTable[0x81]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[170] = new PropertyDeclaration("Children"' KnownTypeTable[0xcf]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0xad] = new PropertyDeclaration("Document"' KnownTypeTable[210]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0xb1] = new PropertyDeclaration("Content"' KnownTypeTable[260]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[180] = new PropertyDeclaration("Content"' KnownTypeTable[0x10d]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0xb5] = new PropertyDeclaration("Items"' KnownTypeTable[270]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0xbb] = new PropertyDeclaration("NameValue"' KnownTypeTable[300]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[190] = new PropertyDeclaration("KeyFrames"' KnownTypeTable[0x143]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0xc1] = new PropertyDeclaration("VisualTree"' KnownTypeTable[330]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[200] = new PropertyDeclaration("Items"' KnownTypeTable[0x179]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[210] = new PropertyDeclaration("KeyFrames"' KnownTypeTable[0x1ac]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0xd8] = new PropertyDeclaration("KeyFrames"' KnownTypeTable[460]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0xd9] = new PropertyDeclaration("KeyFrames"' KnownTypeTable[470]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[220] = new PropertyDeclaration("GradientStops"' KnownTypeTable[0x1f6]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0xde] = new PropertyDeclaration("KeyFrames"' KnownTypeTable[510]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0xe3] = new PropertyDeclaration("Content"' KnownTypeTable[550]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[230] = new PropertyDeclaration("KeyFrames"' KnownTypeTable[0x232]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0xe8] = new PropertyDeclaration("Inlines"' KnownTypeTable[580]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0xee] = new PropertyDeclaration("Setters"' KnownTypeTable[620]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[240] = new PropertyDeclaration("Content"' KnownTypeTable[0x270]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0xf5] = new PropertyDeclaration("Rows"' KnownTypeTable[630]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[250] = new PropertyDeclaration("Children"' KnownTypeTable[670]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[250] = new PropertyDeclaration("Children"' KnownTypeTable[670]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[260] = new PropertyDeclaration("KeyFrames"' KnownTypeTable[0x2c8]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0x105] = new PropertyDeclaration("KeyFrames"' KnownTypeTable[720]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownPropertyTable[0x107] = new PropertyDeclaration("Children"' KnownTypeTable[730]);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(2' new ResourceName("SystemColors.ActiveCaptionBrush"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(3' new ResourceName("SystemColors.ActiveCaptionTextBrush"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(4' new ResourceName("SystemColors.AppWorkspaceBrush"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(210' new ResourceName("SystemParameters.ComboBoxPopupAnimation"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(5' new ResourceName("SystemColors.ControlBrush"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(6' new ResourceName("SystemColors.ControlDarkBrush"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(7' new ResourceName("SystemColors.ControlDarkDarkBrush"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(8' new ResourceName("SystemColors.ControlLightBrush"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(9' new ResourceName("SystemColors.ControlLightLightBrush"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(10' new ResourceName("SystemColors.ControlTextBrush"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(40' new ResourceName("SystemColors.ControlTextColor"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(11' new ResourceName("SystemColors.DesktopBrush"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(200' new ResourceName("SystemParameters.ForegroundFlashCount"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(12' new ResourceName("SystemColors.GradientActiveCaptionBrush"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(13' new ResourceName("SystemColors.GradientInactiveCaptionBrush"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(14' new ResourceName("SystemColors.GrayTextBrush"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(220' new ResourceName("GridView.GridViewScrollViewerStyle"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(15' new ResourceName("SystemColors.HighlightBrush"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(90' new ResourceName("SystemParameters.IconFontStyle"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(170' new ResourceName("SystemParameters.IconHorizontalSpacing"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(110' new ResourceName("SystemParameters.IconWidth"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(20' new ResourceName("SystemColors.InactiveCaptionTextBrush"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(50' new ResourceName("SystemColors.InactiveCaptionTextColor"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(150' new ResourceName("SystemParameters.IsMediaCenter"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(190' new ResourceName("SystemParameters.ListBoxSmoothScrolling"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(120' new ResourceName("SystemParameters.MenuButtonWidth"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(180' new ResourceName("SystemParameters.MouseHoverHeight"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(130' new ResourceName("SystemParameters.PrimaryScreenWidth"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(70' new ResourceName("SystemFonts.SmallCaptionFontStyle"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(80' new ResourceName("SystemFonts.StatusFontStyle"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(160' new ResourceName("SystemParameters.SwapButtons"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(100' new ResourceName("SystemParameters.ThickVerticalBorderWidth"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(230' new ResourceName("ToolBar.TextBoxStyle"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(140' new ResourceName("SystemParameters.VirtualScreenWidth"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(30' new ResourceName("SystemColors.WindowTextBrush"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,KnownInfo,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\KnownInfo.cs,KnownInfo,The following statement contains a magic number: KnownResourceTable.Add(60' new ResourceName("SystemColors.WindowTextColor"));
Magic Number,Orchestra.StylesExplorer.MarkupReflection,XmlBamlReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\XmlBamlReader.cs,DeserializePoints,The following statement contains a magic number: using (StringWriter writer = new StringWriter())              {                  int num10 = reader.ReadInt32();                  for (int k = 0; k < num10; k++)                  {                      if (k != 0)                          writer.Write(" ");                      for (int m = 0; m < 2; m++)                      {                          if (m != 0)                              writer.Write("'");                          writer.Write(reader.ReadCompressedDouble().ToString());                      }                  }                  return writer.ToString();              }
Magic Number,Orchestra.StylesExplorer.MarkupReflection,XmlBamlReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\XmlBamlReader.cs,Deserialize3DPoints,The following statement contains a magic number: using (StringWriter writer = new StringWriter())              {                  int num14 = reader.ReadInt32();                  for (int i = 0; i < num14; i++)                  {                      if (i != 0)                      {                          writer.Write(" ");                      }                      for (int j = 0; j < 3; j++)                      {                          if (j != 0)                          {                              writer.Write("'");                          }                          writer.Write(reader.ReadCompressedDouble().ToString());                      }                  }                  return writer.ToString();              }
Magic Number,Orchestra.StylesExplorer.MarkupReflection,XmlBamlReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\XmlBamlReader.cs,ReadDefAttribute,The following statement contains a magic number: switch (identifier)              {                  case -2:                      pd = new PropertyDeclaration("Uid"' XamlTypeDeclaration);                      break;                  case -1:                      pd = new PropertyDeclaration("Name"' XamlTypeDeclaration);                      break;                  default:                      string recordName = (string)this.stringTable[identifier];                      if (recordName != "Key") throw new NotSupportedException(recordName);                      pd = new PropertyDeclaration(recordName' XamlTypeDeclaration);                        AddDefKey(-1' text);                      break;              }
Magic Number,Orchestra.StylesExplorer.MarkupReflection,XmlBamlReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\XmlBamlReader.cs,ReadOptimizedStaticResource,The following statement contains a magic number: bool isStaticType = (num & 2) == 2;
Magic Number,Orchestra.StylesExplorer.MarkupReflection,XmlBamlReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\XmlBamlReader.cs,ReadOptimizedStaticResource,The following statement contains a magic number: bool isStaticType = (num & 2) == 2;
Magic Number,Orchestra.StylesExplorer.MarkupReflection,XmlBamlReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\XmlBamlReader.cs,FormatTypeDeclaration,The following statement contains a magic number: if (name.EndsWith("Extension"))                  name = name.Substring(0' name.Length - 9);
Magic Number,Orchestra.StylesExplorer.MarkupReflection,XmlNamespace,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\XmlNamespace.cs,GetHashCode,The following statement contains a magic number: return _prefix.GetHashCode() + _namespace.GetHashCode() >> 20;
Magic Number,Orchestra.Services,CloseApplicationService,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Services\CloseApplicationService.cs,Close,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,Orchestra.Services,RecentlyUsedItemsService,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Services\RecentlyUsedItemsService.cs,RecentlyUsedItemsService,The following statement contains a magic number: MaximumItemCount = 10;
Magic Number,Orchestra.Services,StatusService,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Services\StatusService.cs,UpdateStatus,The following statement contains a magic number: resetTimer.Interval = TimeSpan.FromSeconds(8);
Magic Number,Orchestra.Tooltips,TextBlockAdorner,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Tooltips\TextBlockAdorner.cs,TextBlockAdorner,The following statement contains a magic number: border.Background = new SolidColorBrush(Color.FromRgb(255' 255' 180));
Magic Number,Orchestra.Tooltips,TextBlockAdorner,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Tooltips\TextBlockAdorner.cs,TextBlockAdorner,The following statement contains a magic number: border.Background = new SolidColorBrush(Color.FromRgb(255' 255' 180));
Magic Number,Orchestra.Tooltips,TextBlockAdorner,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Tooltips\TextBlockAdorner.cs,TextBlockAdorner,The following statement contains a magic number: border.Background = new SolidColorBrush(Color.FromRgb(255' 255' 180));
Magic Number,Orchestra.Tooltips,TextBlockAdorner,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Tooltips\TextBlockAdorner.cs,TextBlockAdorner,The following statement contains a magic number: border.Padding = new Thickness(4' 1' 4' 1);
Magic Number,Orchestra.Tooltips,TextBlockAdorner,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Tooltips\TextBlockAdorner.cs,TextBlockAdorner,The following statement contains a magic number: border.Padding = new Thickness(4' 1' 4' 1);
Magic Number,Orchestra.Tooltips,TextBlockAdorner,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Tooltips\TextBlockAdorner.cs,TextBlockAdorner,The following statement contains a magic number: border.Margin = new Thickness(0' -5' -5' 0);
Magic Number,Orchestra.Tooltips,TextBlockAdorner,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Tooltips\TextBlockAdorner.cs,TextBlockAdorner,The following statement contains a magic number: border.Margin = new Thickness(0' -5' -5' 0);
Magic Number,Orchestra.Tooltips,TextBlockAdorner,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Tooltips\TextBlockAdorner.cs,TextBlockAdorner,The following statement contains a magic number: shortcut.FontSize = 10;
Magic Number,Orchestra.Windows,FixMaximize,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Windows\FixMaximize.cs,FixMaximize_RibbonWindow_WndProc,The following statement contains a magic number: const int AllowedNegativeOffset = 4;
Magic Number,Orchestra.Windows,FixMaximize,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Windows\FixMaximize.cs,GetWindowSize,The following statement contains a magic number: var size = new Size(screen.WorkingArea.Width + 8' screen.WorkingArea.Height + 8);
Magic Number,Orchestra.Windows,FixMaximize,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Windows\FixMaximize.cs,GetWindowSize,The following statement contains a magic number: var size = new Size(screen.WorkingArea.Width + 8' screen.WorkingArea.Height + 8);
Missing Default,Orchestra.StylesExplorer.MarkupReflection,BamlBinaryReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\BamlBinaryReader.cs,ReadCompressedDouble,The following switch statement is missing a default case: switch (this.ReadByte())              {                  case 1:                      return 0;                    case 2:                      return 1;                    case 3:                      return -1;                    case 4:                      {                          double num = this.ReadInt32();                          return (num * 1E-06);                      }                  case 5:                      return this.ReadDouble();              }
Missing Default,Orchestra.StylesExplorer.MarkupReflection,XmlBamlReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\XmlBamlReader.cs,ComputeBytesToSkip,The following switch statement is missing a default case: switch (currentType)              {                  case BamlRecordType.PropertyWithConverter:                  case BamlRecordType.DefAttributeKeyString:                  case BamlRecordType.PresentationOptionsAttribute:                  case BamlRecordType.Property:                  case BamlRecordType.PropertyCustom:                  case BamlRecordType.Text:                  case BamlRecordType.TextWithConverter:                  case BamlRecordType.XmlnsProperty:                  case BamlRecordType.DefAttribute:                  case BamlRecordType.PIMapping:                  case BamlRecordType.AssemblyInfo:                  case BamlRecordType.TypeInfo:                  case BamlRecordType.AttributeInfo:                  case BamlRecordType.StringInfo:                      bytesToSkip = reader.ReadCompressedInt32();                      break;              }
Missing Default,Orchestra.StylesExplorer.MarkupReflection,XmlBamlReader,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\Markup\Ricciolo\XmlBamlReader.cs,DeserializeInt32CollectionFrom,The following switch statement is missing a default case: switch (type)              {                  case IntegerCollectionType.Byte:                      for (int i = 0; i < capacity; i++)                      {                          ints.Add(reader.ReadByte());                      }                      return ints;                    case IntegerCollectionType.UShort:                      for (int j = 0; j < capacity; j++)                      {                          ints.Add(reader.ReadUInt16());                      }                      return ints;                    case IntegerCollectionType.Integer:                      for (int k = 0; k < capacity; k++)                      {                          int num7 = reader.ReadInt32();                          ints.Add(num7);                      }                      return ints;                    case IntegerCollectionType.Consecutive:                      for (int m = reader.ReadInt32(); m < capacity; m++)                      {                          ints.Add(m);                      }                      return ints;              }
Missing Default,Orchestra.ViewModels,MessageBoxViewModel,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\ViewModels\MessageBoxViewModel.cs,CloseAsync,The following switch statement is missing a default case: switch (Button)                  {                      case MessageButton.OK:                          Result = MessageResult.OK;                          break;                        case MessageButton.OKCancel:                          Result = MessageResult.Cancel;                          break;                        case MessageButton.YesNoCancel:                          Result = MessageResult.Cancel;                          break;                  }
Missing Default,Orchestra.ViewModels,MessageBoxViewModel,C:\repos\Orcomp_Orchestra\src\Orchestra.Core\Orchestra.Core\Orchestra.Core.Shared\ViewModels\MessageBoxViewModel.cs,OnEscapeCommandExecuteAsync,The following switch statement is missing a default case: switch (Button)              {                  case MessageButton.OK:                      await OnOkCommandExecuteAsync();                      break;                    case MessageButton.OKCancel:                      await OnCancelCommandExecuteAsync();                      break;                    case MessageButton.YesNo:                      break;                    case MessageButton.YesNoCancel:                      await OnCancelCommandExecuteAsync();                      break;              }
