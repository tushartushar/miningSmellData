Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,FakeItEasy.IntegrationTests,ConcurrentCallTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\ConcurrentCallTests.cs,User_rule_mutating_action_concurrent_with_member_invocation_should_not_throw_concurrent_modification_exception,The length of the parameter slowMemberInvocationApplyCheckStartedLock is 41.
Long Identifier,FakeItEasy.IntegrationTests,ConcurrentCallTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\ConcurrentCallTests.cs,User_rule_mutating_action_concurrent_with_member_invocation_should_not_throw_concurrent_modification_exception,The length of the parameter fastRuleMutatingActionFinishedLock is 34.
Long Identifier,FakeItEasy.IntegrationTests,ClassWithLongSelfReferentialConstructor,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\DummyTests.cs,ClassWithLongSelfReferentialConstructor,The length of the parameter classWithLongSelfReferentialConstructor is 39.
Long Identifier,FakeItEasy.IntegrationTests,Argument1OfLongConstructor,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\DummyTests.cs,,The length of the parameter Task1IsResolvingLongConstructor is 31.
Long Identifier,FakeItEasy.IntegrationTests,Argument1OfLongConstructor,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\DummyTests.cs,,The length of the parameter Task2IsResolvingLongConstructor is 31.
Long Identifier,FakeItEasy.IntegrationTests,Argument1OfLongConstructor,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\DummyTests.cs,,The length of the parameter Task1IsFinishedResolvingItsDummy is 32.
Long Statement,FakeItEasy.IntegrationTests,DummyTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\DummyTests.cs,Short_constructor_is_always_used_when_simultaneously_creating_two_dummies_with_self_referential_constructors,The length of the statement  "            // Implemented to ensure #1639 is fixed. Essentially a very fancy version of just making two Dummies on separate threads' " is 121.
Long Statement,FakeItEasy.IntegrationTests,DummyTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\DummyTests.cs,Short_constructor_is_always_used_when_simultaneously_creating_two_dummies_with_self_referential_constructors,The length of the statement  "            // but with a whole lot of extra synchronization built in to ensure that different phases of the creation in the two threads " is 124.
Long Statement,FakeItEasy.IntegrationTests,DummyTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\DummyTests.cs,Short_constructor_is_always_used_when_simultaneously_creating_two_dummies_with_self_referential_constructors,The length of the statement  "            // - task1 should start resolving long constructor before task2 starts (this is mostly to help establish which task is which) " is 125.
Long Statement,FakeItEasy.IntegrationTests,DummyTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\DummyTests.cs,Short_constructor_is_always_used_when_simultaneously_creating_two_dummies_with_self_referential_constructors,The length of the statement  "            // - task1 should finish resolving its Dummy before task2 tries to resolve the ClassWithLongSelfReferentialConstructor argument " is 127.
Long Statement,FakeItEasy.IntegrationTests,ExceptionMessagesTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\ExceptionMessagesTests.cs,Should_give_pretty_message_when_trying_to_fake_static_method,The length of the statement  "  The current proxy generator can not intercept the method System.Object.Equals(System.Object objA' System.Object objB) for the following reason: " is 143.
Long Statement,FakeItEasy.IntegrationTests,ExceptionMessagesTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\ExceptionMessagesTests.cs,Should_give_pretty_message_when_trying_to_fake_extension_method,The length of the statement  "  The current proxy generator can not intercept the method System.Linq.Enumerable.Any`1[System.Int32](System.Collections.Generic.IEnumerable`1[System.Int32] source) for the following reason: " is 188.
Long Statement,FakeItEasy.IntegrationTests,ExceptionMessagesTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\ExceptionMessagesTests.cs,Should_give_pretty_message_when_trying_to_fake_an_indexed_property_that_is_not_virtual,The length of the statement  "  The current proxy generator can not intercept the property System.Collections.Generic.Dictionary`2[System.String'System.Int32].Item[System.String key] for the following reason: " is 176.
Long Statement,FakeItEasy.IntegrationTests,ExceptionMessagesTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\ExceptionMessagesTests.cs,Should_give_pretty_message_when_trying_to_fake_an_indexed_property_that_is_not_virtual,The length of the statement  "    - Non-virtual members can not be intercepted. Only interface members and virtual' overriding' and abstract members can be intercepted. " is 134.
Long Statement,FakeItEasy.IntegrationTests,TypeCatalogueTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\TypeCatalogueTests.cs,Should_warn_of_duplicate_input_assemblies_with_different_paths,The length of the statement  "@"*Warning: FakeItEasy failed to load assembly '*{0}' while scanning for extension points. Any IArgumentValueFormatters' IDummyFactories' and IFakeOptionsBuilders in that assembly will not be available.*"; " is 205.
Long Statement,FakeItEasy.IntegrationTests,TypeCatalogueTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\TypeCatalogueTests.cs,Should_warn_of_bad_assembly_files,The length of the statement  "@"*Warning: FakeItEasy failed to load assembly '{0}' while scanning for extension points. Any IArgumentValueFormatters' IDummyFactories' and IFakeOptionsBuilders in that assembly will not be available.*"; " is 204.
Long Statement,FakeItEasy.IntegrationTests,TypeCatalogueTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\TypeCatalogueTests.cs,Should_be_able_to_get_types_from_external_assembly,The length of the statement  "            catalogue.GetAvailableTypes().Select(type => type.FullName).Should().Contain("FakeItEasy.IntegrationTests.External.GuidValueFormatter"); " is 136.
Long Statement,FakeItEasy.IntegrationTests,TypeCatalogueTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\TypeCatalogueTests.cs,Should_warn_if_some_types_cannot_be_loaded_from_external_assembly,The length of the statement  "            output.Should().MatchModuloLineEndings(@"*Warning: FakeItEasy failed to get some types from assembly 'FakeItEasy.ExtensionPoints.External' Version=0.0.0.0' Culture=neutral' PublicKeyToken=null' while scanning for extension points. Some IArgumentValueFormatters' IDummyFactories' and IFakeOptionsBuilders in that assembly might not be available. " is 344.
Empty Catch Block,FakeItEasy.IntegrationTests,AssertionsTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\AssertionsTests.cs,Method_that_is_configured_to_throw_should_still_be_recorded,The method has an empty catch block.
Magic Number,FakeItEasy.IntegrationTests,ConcurrentCallTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\ConcurrentCallTests.cs,User_rule_mutating_action_concurrent_with_member_invocation_should_not_throw_concurrent_modification_exception,The following statement contains a magic number: A.CallTo(() => fake.IntProperty).WhenArgumentsMatch(call =>              {                  slowMemberInvocationApplyCheckStartedLock.Set();                    // Timing out isn't ideal' as it introduces the possibility that we'll just finish                  // the test before the fact rule list mutating-action is complete' but it's unlikely'                  // and we can't wait forever' or any lock on the user rules will deadlock the test.                  // When written (before serializing access to user rules) the tests did fail                  // consistently with a timeout of 0.1 seconds.                  fastRuleMutatingActionFinishedLock.Wait(TimeSpan.FromSeconds(0.1));                    // Return false so we keep iterating through the list of user rules. Otherwise' we                  // never suffer the "collection was modified during iteration" failure case.                  return false;              }).Returns(0);
Magic Number,FakeItEasy.IntegrationTests,AddConfigurationViaThen,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\ConcurrentCallTests.cs,MutateRules,The following statement contains a magic number: this.firstCallConfiguration!.Then.Returns(2);
Magic Number,FakeItEasy.IntegrationTests,GeneralTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\GeneralTests.cs,ErrorMessage_when_configuring_function_call_that_cannot_be_configured_should_be_correct,The following statement contains a magic number: var exception = Record.Exception(() =>                  A.CallTo(() => fake.NonVirtualFunction(string.Empty' 1)).Returns(10));
Magic Number,FakeItEasy.IntegrationTests,GeneralTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\GeneralTests.cs,ErrorMessage_when_configuring_generic_function_call_that_cannot_be_configured_should_be_correct,The following statement contains a magic number: var exception = Record.Exception(() =>                  A.CallTo(() => fake.GenericNonVirtualFunction<int>()).Returns(10));
Magic Number,FakeItEasy.IntegrationTests,GeneralTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\GeneralTests.cs,FakeCollection_should_return_list_where_all_objects_are_fakes,The following statement contains a magic number: var result = A.CollectionOfFake<IFoo>(10);
Magic Number,FakeItEasy.IntegrationTests,GeneralTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\GeneralTests.cs,DummyCollection_should_return_correct_number_of_dummies,The following statement contains a magic number: var result = A.CollectionOfDummy<IFoo>(10);
Magic Number,FakeItEasy.IntegrationTests,GeneralTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\GeneralTests.cs,DummyCollection_should_return_correct_number_of_dummies,The following statement contains a magic number: result.Should().HaveCount(10);
Magic Number,FakeItEasy.IntegrationTests,GeneralTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\GeneralTests.cs,Returns_from_sequence_only_applies_the_number_as_many_times_as_the_number_of_specified_values,The following statement contains a magic number: A.CallTo(() => foo.Baz()).ReturnsNextFromSequence(1' 2);
Magic Number,FakeItEasy.IntegrationTests.Assertions,ExceptionMessagesTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\Assertions\ExceptionMessagesTests.cs,Exception_message_should_be_correctly_formatted,The following statement contains a magic number: foo.Bar(42' "hello");
Magic Number,FakeItEasy.IntegrationTests.Assertions,ExceptionMessagesTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\Assertions\ExceptionMessagesTests.cs,Exception_message_should_be_correctly_formatted_when_containing_call_with_three_or_more_arguments,The following statement contains a magic number: foo.Bar(1' 2' "three");
Magic Number,FakeItEasy.IntegrationTests.Assertions,ExceptionMessagesTests,D:\research\architectureSmells\repos\FakeItEasy_FakeItEasy\tests\FakeItEasy.IntegrationTests\Assertions\ExceptionMessagesTests.cs,Exception_message_should_be_correctly_formatted_when_containing_call_with_three_or_more_arguments,The following statement contains a magic number: foo.Bar(1' 2' "three");
