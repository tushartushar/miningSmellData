Implementation smell,Namespace,Class,File,Method,Description
Long Method,Npgsql,ConnectorPool,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\ConnectorPool.cs,AllocateLong,The method has 155 lines of code.
Long Method,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,RawOpen,The method has 101 lines of code.
Long Method,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,DoReadMessage,The method has 135 lines of code.
Long Method,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,DoWaitAsync,The method has 104 lines of code.
Long Method,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,NextResult,The method has 135 lines of code.
Long Method,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetDataTypes,The method has 118 lines of code.
Long Method,Npgsql,SqlQueryParser,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\SqlQueryParser.cs,ParseRawQuery,The method has 372 lines of code.
Long Method,NpgsqlTypes,NpgsqlTsQuery,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTsQuery.cs,Parse,The method has 230 lines of code.
Long Method,NpgsqlTypes,NpgsqlTsVector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTsVector.cs,Parse,The method has 130 lines of code.
Complex Method,Npgsql,ConnectorPool,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\ConnectorPool.cs,AllocateLong,Cyclomatic complexity of the method is 20
Complex Method,Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlCommand.cs,DeriveParametersForFunction,Cyclomatic complexity of the method is 11
Complex Method,Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlCommand.cs,ProcessRawQuery,Cyclomatic complexity of the method is 16
Complex Method,Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlCommand.cs,ExecuteReaderAsync,Cyclomatic complexity of the method is 13
Complex Method,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,GetUsername,Cyclomatic complexity of the method is 8
Complex Method,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,RawOpen,Cyclomatic complexity of the method is 13
Complex Method,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,SetSocketOptions,Cyclomatic complexity of the method is 9
Complex Method,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,ParseServerMessage,Cyclomatic complexity of the method is 24
Complex Method,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Reset,Cyclomatic complexity of the method is 10
Complex Method,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Wait,Cyclomatic complexity of the method is 12
Complex Method,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,DoWaitAsync,Cyclomatic complexity of the method is 13
Complex Method,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteBind,Cyclomatic complexity of the method is 14
Complex Method,Npgsql,NpgsqlDatabaseInfo,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDatabaseInfo.cs,ProcessTypes,Cyclomatic complexity of the method is 8
Complex Method,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,NextResult,Cyclomatic complexity of the method is 16
Complex Method,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,GetBytes,Cyclomatic complexity of the method is 9
Complex Method,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,GetChars,Cyclomatic complexity of the method is 12
Complex Method,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,SeekToColumnSequential,Cyclomatic complexity of the method is 8
Complex Method,Npgsql,NpgsqlLargeObjectStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlLargeObjectStream.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Npgsql,NpgsqlParameterCollection,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlParameterCollection.cs,IndexOf,Cyclomatic complexity of the method is 16
Complex Method,Npgsql,NpgsqlRawCopyStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlRawCopyStream.cs,Read,Cyclomatic complexity of the method is 8
Complex Method,Npgsql,ColumnStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlReadBuffer.Stream.cs,Seek,Cyclomatic complexity of the method is 9
Complex Method,Npgsql,ColumnStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlReadBuffer.Stream.cs,Read,Cyclomatic complexity of the method is 8
Complex Method,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetDataTypes,Cyclomatic complexity of the method is 23
Complex Method,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,PopulateHardcodedDataTypeInfo,Cyclomatic complexity of the method is 8
Complex Method,Npgsql,NpgsqlWriteBuffer,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlWriteBuffer.cs,Flush,Cyclomatic complexity of the method is 9
Complex Method,Npgsql,ParameterStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlWriteBuffer.Stream.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Npgsql,PostgresDatabaseInfo,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresDatabaseInfo.cs,LoadBackendTypes,Cyclomatic complexity of the method is 17
Complex Method,Npgsql,PreparedStatementManager,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PreparedStatementManager.cs,TryGetAutoPrepared,Cyclomatic complexity of the method is 11
Complex Method,Npgsql.BackendMessages,AuthenticationSCRAMServerFirstMessage,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\BackendMessages\AuthenticationMessages.cs,Load,Cyclomatic complexity of the method is 8
Complex Method,Npgsql.BackendMessages,CommandCompleteMessage,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\BackendMessages\CommandCompleteMessage.cs,Load,Cyclomatic complexity of the method is 15
Complex Method,Npgsql.BackendMessages,ErrorOrNoticeMessage,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\BackendMessages\ErrorOrNoticeMessage.cs,Load,Cyclomatic complexity of the method is 25
Complex Method,Npgsql.NameTranslation,NpgsqlSnakeCaseNameTranslator,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NameTranslation\NpgsqlSnakeCaseNameTranslator.cs,ConvertToSnakeCase,Cyclomatic complexity of the method is 9
Complex Method,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,Parse,Cyclomatic complexity of the method is 8
Complex Method,NpgsqlTypes,NpgsqlRange,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlRange.cs,Parse,Cyclomatic complexity of the method is 8
Complex Method,NpgsqlTypes,NpgsqlTimeSpan,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTimeSpan.cs,Parse,Cyclomatic complexity of the method is 9
Complex Method,NpgsqlTypes,NpgsqlTimeSpan,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTimeSpan.cs,ToString,Cyclomatic complexity of the method is 8
Complex Method,NpgsqlTypes,NpgsqlTsQuery,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTsQuery.cs,Parse,Cyclomatic complexity of the method is 42
Complex Method,NpgsqlTypes,NpgsqlTsVector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTsVector.cs,NpgsqlTsVector,Cyclomatic complexity of the method is 9
Complex Method,NpgsqlTypes,NpgsqlTsVector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTsVector.cs,Parse,Cyclomatic complexity of the method is 18
Complex Method,NpgsqlTypes,Lexeme,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTsVector.cs,UniquePos,Cyclomatic complexity of the method is 10
Complex Method,Npgsql.PostgresTypes,PostgresBaseType,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresTypes\PostgresBaseType.cs,GetFacets,Cyclomatic complexity of the method is 9
Complex Method,Npgsql.Schema,DbColumnSchemaGenerator,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\Schema\DbColumnSchemaGenerator.cs,ColumnPostConfig,Cyclomatic complexity of the method is 8
Complex Method,Npgsql.TypeHandlers,ArrayHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,ReadArray,Cyclomatic complexity of the method is 11
Complex Method,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Npgsql.TypeHandlers,JsonHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\JsonHandler.cs,WriteWithLength,Cyclomatic complexity of the method is 9
Complex Method,Npgsql.TypeHandlers.CompositeHandlers,CompositeConstructorHandler<TComposite;T1;T2;T3;T4;T5;T6;T7;T8>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\CompositeHandlers\CompositeConstructorHandler`.cs,Read,Cyclomatic complexity of the method is 10
Complex Method,Npgsql.TypeHandlers.CompositeHandlers,CompositeHandler<T>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\CompositeHandlers\CompositeHandler.cs,CreateConstructorHandler,Cyclomatic complexity of the method is 13
Complex Method,Npgsql.TypeHandlers.FullTextSearchHandlers,TsQueryHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsQueryHandler.cs,Write,Cyclomatic complexity of the method is 9
Complex Method,Npgsql.TypeHandlers.NumericHandlers,NumericHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\NumericHandlers\NumericHandler.cs,Read,Cyclomatic complexity of the method is 10
Complex Method,Npgsql.TypeMapping,ConnectorTypeMapper,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\ConnectorTypeMapper.cs,BindType,Cyclomatic complexity of the method is 13
Complex Method,Npgsql.TypeMapping,ConnectorTypeMapper,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\ConnectorTypeMapper.cs,BindType,Cyclomatic complexity of the method is 11
Complex Method,Npgsql.TypeMapping,GlobalTypeMapper,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\GlobalTypeMapper.cs,SetupGlobalTypeMapper,Cyclomatic complexity of the method is 8
Long Parameter List,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteBind,The method has 6 parameters. Parameters: inputParameters' portal' statement' allResultTypesAreUnknown' unknownResultTypeList' async
Long Parameter List,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,GetBytes,The method has 5 parameters. Parameters: ordinal' dataOffset' buffer' bufferOffset' length
Long Parameter List,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,GetChars,The method has 5 parameters. Parameters: ordinal' dataOffset' buffer' bufferOffset' length
Long Parameter List,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,DecodeChars,The method has 5 parameters. Parameters: decoder' output' outputOffset' charCount' byteCount
Long Parameter List,Npgsql,NpgsqlLargeObjectManager,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlLargeObjectManager.cs,ExecuteFunctionGetBytes,The method has 6 parameters. Parameters: function' buffer' offset' len' async' arguments
Long Parameter List,Npgsql,NpgsqlParameter,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlParameter.cs,NpgsqlParameter,The method has 10 parameters. Parameters: parameterName' parameterType' size' sourceColumn' direction' isNullable' precision' scale' sourceVersion' value
Long Parameter List,Npgsql,NpgsqlParameter,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlParameter.cs,NpgsqlParameter,The method has 10 parameters. Parameters: parameterName' parameterType' size' sourceColumn' direction' isNullable' precision' scale' sourceVersion' value
Long Parameter List,Npgsql,NpgsqlParameterCollection,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlParameterCollection.cs,AddWithValue,The method has 5 parameters. Parameters: parameterName' parameterType' size' sourceColumn' value
Long Parameter List,Npgsql,NpgsqlReadBuffer,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlReadBuffer.cs,NpgsqlReadBuffer,The method has 5 parameters. Parameters: connector' stream' size' textEncoding' relaxedTextEncoding
Long Parameter List,Npgsql,ColumnStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlReadBuffer.Stream.cs,Read,The method has 5 parameters. Parameters: buffer' offset' count' cancellationToken' async
Long Parameter List,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,BuildCommand,The method has 5 parameters. Parameters: conn' query' restrictions' addWhere' names
Long Parameter List,Npgsql,NpgsqlWriteBuffer,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlWriteBuffer.cs,WriteChars,The method has 5 parameters. Parameters: chars' offset' charLen' byteLen' async
Long Parameter List,Npgsql,NpgsqlWriteBuffer,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlWriteBuffer.cs,WriteStringChunked,The method has 6 parameters. Parameters: chars' charIndex' charCount' flush' charsUsed' completed
Long Parameter List,Npgsql,NpgsqlWriteBuffer,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlWriteBuffer.cs,WriteStringChunked,The method has 6 parameters. Parameters: s' charIndex' charCount' flush' charsUsed' completed
Long Parameter List,Npgsql,ParameterStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlWriteBuffer.Stream.cs,Write,The method has 5 parameters. Parameters: buffer' offset' count' cancellationToken' async
Long Parameter List,Npgsql,Entry,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PgPassFile.cs,Entry,The method has 5 parameters. Parameters: host' port' database' username' password
Long Parameter List,Npgsql,PostgresDatabaseInfo,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresDatabaseInfo.cs,GenerateTypesQuery,The method has 5 parameters. Parameters: withRange' withEnum' withEnumSortOrder' loadTableComposites' withTypeCategory
Long Parameter List,Npgsql,PreparedStatement,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PreparedStatement.cs,CreateExplicit,The method has 5 parameters. Parameters: manager' sql' name' parameters' statementBeingReplaced
Long Parameter List,Npgsql.BackendMessages,ErrorOrNoticeMessage,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\BackendMessages\ErrorOrNoticeMessage.cs,ErrorOrNoticeMessage,The method has 18 parameters. Parameters: severity' invariantSeverity' code' message' detail' hint' position' internalPosition' internalQuery' where' schemaName' tableName' columnName' dataTypeName' constraintName' file' line' routine
Long Parameter List,Npgsql.BackendMessages,FieldDescription,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\BackendMessages\RowDescriptionMessage.cs,Populate,The method has 8 parameters. Parameters: typeMapper' name' tableOID' columnAttributeNumber' oid' typeSize' typeModifier' formatCode
Long Parameter List,NpgsqlTypes,NpgsqlDateTime,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDateTime.cs,NpgsqlDateTime,The method has 7 parameters. Parameters: year' month' day' hours' minutes' seconds' kind
Long Parameter List,NpgsqlTypes,NpgsqlDateTime,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDateTime.cs,NpgsqlDateTime,The method has 8 parameters. Parameters: year' month' day' hours' minutes' seconds' milliseconds' kind
Long Parameter List,NpgsqlTypes,NpgsqlRange,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlRange.cs,NpgsqlRange,The method has 6 parameters. Parameters: lowerBound' lowerBoundIsInclusive' lowerBoundInfinite' upperBound' upperBoundIsInclusive' upperBoundInfinite
Long Parameter List,NpgsqlTypes,NpgsqlTimeSpan,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTimeSpan.cs,NpgsqlTimeSpan,The method has 5 parameters. Parameters: days' hours' minutes' seconds' milliseconds
Long Parameter List,NpgsqlTypes,NpgsqlTimeSpan,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTimeSpan.cs,NpgsqlTimeSpan,The method has 6 parameters. Parameters: months' days' hours' minutes' seconds' milliseconds
Long Parameter List,NpgsqlTypes,NpgsqlTimeSpan,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTimeSpan.cs,NpgsqlTimeSpan,The method has 7 parameters. Parameters: years' months' days' hours' minutes' seconds' milliseconds
Long Parameter List,Npgsql.PostgresTypes,PostgresDomainType,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresTypes\PostgresDomainType.cs,PostgresDomainType,The method has 5 parameters. Parameters: ns' name' oid' baseType' notNull
Long Parameter List,Npgsql.TypeHandlers,ArrayHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,WriteWithLengthInternal,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,ArrayHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,WriteObjectWithLength,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,ByteaHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ByteaHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,ByteaHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ByteaHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,ByteaHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ByteaHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' offset' count' async
Long Parameter List,Npgsql.TypeHandlers,HstoreHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\HstoreHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,HstoreHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\HstoreHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,JsonHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\JsonHandler.cs,WriteWithLength,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,JsonHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\JsonHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,JsonHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\JsonHandler.cs,WriteObjectWithLength,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,MappedEnumHandler<T>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\MappedEnumHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,RangeHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\RangeHandler.cs,WriteWithLengthInternal,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,RangeHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\RangeHandler.cs,WriteObjectWithLength,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,RangeHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\RangeHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,RecordHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\RecordHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,TextHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\TextHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,TextHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\TextHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,TextHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\TextHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,TextHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\TextHandler.cs,WriteString,The method has 5 parameters. Parameters: str' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,TextHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\TextHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,TextHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\TextHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,UnknownTypeHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\UnknownTypeHandler.cs,WriteObjectWithLength,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,UnmappedEnumHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\UnmappedEnumHandler.cs,WriteWithLength,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,UnmappedEnumHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\UnmappedEnumHandler.cs,WriteObjectWithLength,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers,UnmappedEnumHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\UnmappedEnumHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers.CompositeHandlers,CompositeHandler<T>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\CompositeHandlers\CompositeHandler.cs,Write,The method has 5 parameters. Parameters: value' buffer' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers.FullTextSearchHandlers,TsQueryHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsQueryHandler.cs,Write,The method has 5 parameters. Parameters: query' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers.FullTextSearchHandlers,TsQueryHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsQueryHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers.FullTextSearchHandlers,TsQueryHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsQueryHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers.FullTextSearchHandlers,TsQueryHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsQueryHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers.FullTextSearchHandlers,TsQueryHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsQueryHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers.FullTextSearchHandlers,TsQueryHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsQueryHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers.FullTextSearchHandlers,TsQueryHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsQueryHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers.FullTextSearchHandlers,TsVectorHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsVectorHandler.cs,Write,The method has 5 parameters. Parameters: vector' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers.GeometricHandlers,PathHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\GeometricHandlers\PathHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers.GeometricHandlers,PolygonHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\GeometricHandlers\PolygonHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandlers.NetworkHandlers,InetHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\NetworkHandlers\InetHandler.cs,WriteObjectWithLength,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandling,INpgsqlTypeHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\INpgsqlTypeHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandling,NpgsqlSimpleTypeHandler<TDefault>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\NpgsqlSimpleTypeHandler.cs,WriteWithLengthInternal,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandling,NpgsqlSimpleTypeHandler<TDefault>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\NpgsqlSimpleTypeHandler.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandling,NpgsqlSimpleTypeHandler<TDefault>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\NpgsqlSimpleTypeHandler.cs,WriteObjectWithLength,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandling,NpgsqlTypeHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\NpgsqlTypeHandler.cs,WriteWithLengthInternal,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandling,NpgsqlTypeHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\NpgsqlTypeHandler.cs,WriteObjectWithLength,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandling,NpgsqlTypeHandler<TDefault>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\NpgsqlTypeHandler`.cs,Write,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandling,NpgsqlTypeHandler<TDefault>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\NpgsqlTypeHandler`.cs,WriteWithLengthInternal,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandling,NpgsqlTypeHandler<TDefault>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\NpgsqlTypeHandler`.cs,WriteWithLength,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandling,NpgsqlTypeHandler<TDefault>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\NpgsqlTypeHandler`.cs,WriteObjectWithLength,The method has 5 parameters. Parameters: value' buf' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeHandling,NullableHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\NullableHandler.cs,ReadAsync,The method has 5 parameters. Parameters: handler' buffer' columnLength' async' fieldDescription
Long Parameter List,Npgsql.TypeHandling,NullableHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\NullableHandler.cs,WriteAsync,The method has 6 parameters. Parameters: handler' value' buffer' lengthCache' parameter' async
Long Parameter List,Npgsql.TypeMapping,ConnectorTypeMapper,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\ConnectorTypeMapper.cs,BindType,The method has 5 parameters. Parameters: handler' pgType' npgsqlDbType' dbTypes' clrTypes
Long Parameter List,Npgsql.TypeMapping,NpgsqlTypeMapping,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\NpgsqlTypeMapping.cs,NpgsqlTypeMapping,The method has 6 parameters. Parameters: pgTypeName' npgsqlDbType' dbTypes' clrTypes' inferredDbType' typeHandlerFactory
Long Parameter List,Npgsql.TypeMapping,TypeMappingAttribute,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\TypeMappingAttribute.cs,TypeMappingAttribute,The method has 5 parameters. Parameters: pgName' npgsqlDbType' dbTypes' clrTypes' inferredDbType
Long Parameter List,Npgsql.TypeMapping,TypeMappingAttribute,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\TypeMappingAttribute.cs,TypeMappingAttribute,The method has 5 parameters. Parameters: pgName' npgsqlDbType' dbTypes' clrTypes' inferredDbType
Long Parameter List,Npgsql.TypeMapping,TypeMappingAttribute,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\TypeMappingAttribute.cs,TypeMappingAttribute,The method has 5 parameters. Parameters: pgName' npgsqlDbType' dbTypes' clrType' inferredDbType
Long Identifier,Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlCommand.cs,,The length of the parameter SingleThreadSynchronizationContext is 34.
Long Identifier,Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlCommand.cs,,The length of the parameter DeriveParametersForFunctionQuery is 32.
Long Identifier,Npgsql,NpgsqlConnectionStringBuilder,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnectionStringBuilder.cs,,The length of the parameter PropertyNameToCanonicalKeyword is 30.
Long Identifier,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,AuthenticateSASL,The length of the parameter clientFinalMessageWithoutProof is 30.
Long Identifier,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,,The length of the parameter _resetWithoutDeallocateMessage is 30.
Long Identifier,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,,The length of the parameter _resetWithoutDeallocateResponseCount is 36.
Long Identifier,Npgsql,NpgsqlFactory,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlFactory.cs,,The length of the parameter _legacyEntityFrameworkServices is 30.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter DynamicResultSetsReturnedWarning is 32.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter NullValueEliminatedInSetFunctionWarning is 39.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter StringDataRightTruncationWarning is 32.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter NoAdditionalDynamicResultSetsReturned is 37.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter SqlClientUnableToEstablishSqlConnection is 39.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter SqlServerRejectedEstablishmentOfSqlConnection is 45.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter StackedDiagnosticsAccessedWithoutActiveHandler is 46.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter InvalidArgumentForNtileFunction is 31.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter InvalidArgumentForNthValueFunction is 34.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter InvalidArgumentForPowerFunction is 31.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter InvalidArgumentForWidthBucketFunction is 37.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter NonstandardUseOfEscapeCharacter is 31.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter InvalidIndicatorParameterValue is 30.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter InvalidRowCountInResultOffsetClause is 35.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter InvalidTimeZoneDisplacementValue is 32.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter InvalidXmlProcessingInstruction is 31.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter BranchTransactionAlreadyActive is 30.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter HeldCursorRequiresSameIsolationLevel is 36.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter InappropriateAccessModeForBranchTransaction is 43.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter InappropriateIsolationLevelForBranchTransaction is 47.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter NoActiveSqlTransactionForBranchTransaction is 42.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter SchemaAndDataStatementMixingNotSupported is 40.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter InvalidAuthorizationSpecification is 33.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter DependentPrivilegeDescriptorsStillExist is 39.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter FunctionExecutedNoReturnStatementSqlRoutineException is 52.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter ModifyingSqlDataNotPermittedSqlRoutineException is 47.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter ProhibitedSqlStatementAttemptedSqlRoutineException is 50.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter ReadingSqlDataNotPermittedSqlRoutineException is 45.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter ContainingSqlNotPermittedExternalRoutineException is 49.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter ModifyingSqlDataNotPermittedExternalRoutineException is 52.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter ProhibitedSqlStatementAttemptedExternalRoutineException is 55.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter ReadingSqlDataNotPermittedExternalRoutineException is 50.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter ExternalRoutineInvocationException is 34.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter InvalidSqlstateReturnedExternalRoutineInvocationException is 57.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter NullValueNotAllowedExternalRoutineInvocationException is 53.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter TriggerProtocolViolatedExternalRoutineInvocationException is 57.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter SrfProtocolViolatedExternalRoutineInvocationException is 53.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter EventTriggerProtocolViolatedExternalRoutineInvocationException is 62.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter TransactionIntegrityConstraintViolation is 39.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter SyntaxErrorOrAccessRuleViolation is 32.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter InvalidPreparedStatementDefinition is 34.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter FdwDynamicParameterValueNeeded is 30.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter FdwInconsistentDescriptorInformation is 36.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter FdwInvalidDescriptorFieldIdentifier is 35.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter FdwInvalidStringLengthOrBufferLength is 36.
Long Identifier,Npgsql,PostgresErrorCodes,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresErrorCodes.cs,,The length of the parameter FdwUnableToEstablishConnection is 30.
Long Identifier,Npgsql.TypeHandlers,ArrayHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,,The length of the parameter ReadNonNullableCollectionWithNullsExceptionMessage is 50.
Long Identifier,Npgsql.TypeHandling,NpgsqlSimpleTypeHandler<TDefault>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\NpgsqlSimpleTypeHandler.cs,,The length of the parameter _nonGenericValidateAndGetLength is 31.
Long Identifier,Npgsql.TypeHandling,NpgsqlTypeHandler<TDefault>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\NpgsqlTypeHandler`.cs,,The length of the parameter _nonGenericValidateAndGetLength is 31.
Long Statement,Npgsql,ConnectorPool,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\ConnectorPool.cs,AllocateLong,The length of the statement  "                                    if (timeLeft <= TimeSpan.Zero || await Task.WhenAny(tcs.Task' Task.Delay(timeLeft' delayCancellationToken.Token)) != tcs.Task) " is 126.
Long Statement,Npgsql,ConnectorPool,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\ConnectorPool.cs,AllocateLong,The length of the statement  "                                            $"The connection pool has been exhausted' either raise MaxPoolSize (currently {_max}) or Timeout (currently {Settings.Timeout} seconds)"); " is 138.
Long Statement,Npgsql,ConnectorPool,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\ConnectorPool.cs,AllocateLong,The length of the statement  "                                        $"The connection pool has been exhausted' either raise MaxPoolSize (currently {_max}) or Timeout (currently {Settings.Timeout} seconds)"); " is 138.
Long Statement,Npgsql,Counters,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\Counters.cs,Initialize,The length of the statement  "                            Log.Warn($"{nameof(NpgsqlConnectionStringBuilder.UsePerfCounters)} was specified but the Performance Counter category wasn't found. You probably need to install the Npgsql MSI."); " is 179.
Long Statement,Npgsql,Counter,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\Counters.cs,GetInstanceName,The length of the statement  "                // For example: if path is c:\long_path\very_(Ax200)_long__path\perftest.exe and process ID is 1234 than the resulted instance name will be: " is 140.
Long Statement,Npgsql,Counter,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\Counters.cs,GetInstanceName,The length of the statement  "                    string.Format(null' "wrong calculation of the instance name: expected {0}' actual: {1}"' CounterInstanceNameMaxLength' result.Length)); " is 135.
Long Statement,Npgsql,NpgsqlBinaryExporter,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlBinaryExporter.cs,DoRead,The length of the statement  "#pragma warning disable CS8653 // A default expression introduces a null value when 'T' is a non-nullable reference type. " is 121.
Long Statement,Npgsql,NpgsqlBinaryImporter,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlBinaryImporter.cs,Write,The length of the statement  "            //    throw new InvalidOperationException($"Can't change {nameof(p.DataTypeName)} from {p.DataTypeName} to {dataTypeName}"); " is 124.
Long Statement,Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlCommand.cs,DeriveParametersForQuery,The length of the statement  "                        throw new NpgsqlException("There was a mismatch in the number of derived parameters between the Npgsql SQL parser and the PostgreSQL parser. Please report this as bug to the Npgsql developers (https://github.com/npgsql/npgsql/issues)."); " is 237.
Long Statement,Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlCommand.cs,DeriveParametersForQuery,The length of the statement  "                                throw new NpgsqlException("The backend parser inferred different types for parameters with the same name. Please try explicit casting within your SQL statement or batch or use different placeholder names."); " is 207.
Long Statement,Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlCommand.cs,ProcessRawQuery,The length of the statement  "                throw new InvalidOperationException($"Internal Npgsql bug: unexpected value {CommandType} of enum {nameof(CommandType)}. Please file a bug."); " is 142.
Long Statement,Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlCommand.cs,FixupRowDescription,The length of the statement  "                rowDescription[i].FormatCode = (UnknownResultTypeList == null || !isFirst ? AllResultTypesAreUnknown : UnknownResultTypeList[i]) ? FormatCode.Text : FormatCode.Binary; " is 167.
Long Statement,Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlCommand.cs,Clone,The length of the statement  "                CommandTimeout = CommandTimeout' CommandType = CommandType' DesignTimeVisible = DesignTimeVisible' _allResultTypesAreUnknown = _allResultTypesAreUnknown' _unknownResultTypeList = _unknownResultTypeList' ObjectResultTypes = ObjectResultTypes " is 240.
Long Statement,Npgsql,NpgsqlConnection,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnection.cs,BeginTransaction,The length of the statement  "                    throw new InvalidOperationException("A transaction is already in progress; nested/concurrent transactions aren't supported."); " is 126.
Long Statement,Npgsql,NpgsqlConnection,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnection.cs,EnlistTransaction,The length of the statement  "                        throw new InvalidOperationException($"Already enlisted to transaction (localid={EnlistedTransaction.TransactionInformation.LocalIdentifier})"); " is 143.
Long Statement,Npgsql,NpgsqlConnection,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnection.cs,EnlistTransaction,The length of the statement  "            Log.Debug($"Enlisted volatile resource manager (localid={transaction.TransactionInformation.LocalIdentifier})"' connector.Id); " is 126.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,AuthenticateSASL,The length of the statement  "                throw new InvalidOperationException("[SCRAM] Malformed SCRAMServerFirst message: server nonce doesn't start with client nonce"); " is 128.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,GetPassword,The length of the statement  "                throw new NpgsqlException($"Obtaining password using {nameof(NpgsqlConnection)}.{nameof(ProvidePasswordCallback)} delegate failed"' e); " is 135.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,RawOpen,The length of the statement  "                    TextEncoding = Encoding.GetEncoding(Settings.Encoding' EncoderFallback.ExceptionFallback' DecoderFallback.ExceptionFallback); " is 125.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,RawOpen,The length of the statement  "                    RelaxedTextEncoding = Encoding.GetEncoding(Settings.Encoding' EncoderFallback.ReplacementFallback' DecoderFallback.ReplacementFallback); " is 136.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,RawOpen,The length of the statement  "                            await sslStream.AuthenticateAsClientAsync(Host' clientCertificates' SslProtocols.Tls | SslProtocols.Tls11 | SslProtocols.Tls12' Settings.CheckCertificateRevocation); " is 165.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,RawOpen,The length of the statement  "                            sslStream.AuthenticateAsClient(Host' clientCertificates' SslProtocols.Tls | SslProtocols.Tls11 | SslProtocols.Tls12' Settings.CheckCertificateRevocation); " is 154.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,SetSocketOptions,The length of the statement  "                        "TCP keepalives can still be used on other systems but are enabled via the TcpKeepAlive option or configured globally for the machine' see the relevant docs."); " is 160.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,ParseServerMessage,The length of the statement  "                        AuthenticationRequestType.AuthenticationOk                => (AuthenticationRequestMessage)AuthenticationOkMessage.Instance' " is 124.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,ParseServerMessage,The length of the statement  "                    throw new InvalidOperationException($"Internal Npgsql bug: unexpected value {code} of enum {nameof(BackendMessageCode)}. Please file a bug."); " is 142.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,ProcessNewTransactionStatus,The length of the statement  "                TransactionStatus.Pending                  => throw new Exception("Invalid TransactionStatus (should be frontend-only)")' " is 121.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,ProcessNewTransactionStatus,The length of the statement  "                _ => throw new InvalidOperationException($"Internal Npgsql bug: unexpected value {newStatus} of enum {nameof(TransactionStatus)}. Please file a bug.") " is 150.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,CancelRequest,The length of the statement  "                throw new NpgsqlException("Cancellation not supported on this database (no BackendKeyData was received during connection)"); " is 124.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Reset,The length of the statement  "                throw new InvalidOperationException($"Internal Npgsql bug: unexpected value {State} of enum {nameof(ConnectorState)}. Please file a bug."); " is 139.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Reset,The length of the statement  "                throw new InvalidOperationException($"Internal Npgsql bug: unexpected value {TransactionStatus} of enum {nameof(TransactionStatus)}. Please file a bug."); " is 154.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Wait,The length of the statement  "                throw new NotSupportedException("Wait() with timeout isn't supported when SSL is used' see https://github.com/npgsql/npgsql/issues/1501"); " is 138.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Wait,The length of the statement  "                            throw new NpgsqlException($"Received unexpected message of type {msg.Code} while expecting {expectedMessageCode} as part of keepalive"); " is 136.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,DoWaitAsync,The length of the statement  "                                    throw new NpgsqlException($"Received unexpected message of type {msg.Code} while expecting {expectedMessageCode} as part of keepalive"); " is 136.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteDescribe,The length of the statement  "                Debug.Assert(len <= WriteBuffer.WriteSpaceLeft' $"Message of type {GetType().Name} has length {len} which is bigger than the buffer ({WriteBuffer.WriteSpaceLeft})"); " is 165.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteSync,The length of the statement  "                Debug.Assert(len <= WriteBuffer.WriteSpaceLeft' $"Message of type {GetType().Name} has length {len} which is bigger than the buffer ({WriteBuffer.WriteSpaceLeft})"); " is 165.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteExecute,The length of the statement  "                Debug.Assert(10 <= WriteBuffer.WriteSpaceLeft' $"Message of type {GetType().Name} has length 10 which is bigger than the buffer ({WriteBuffer.WriteSpaceLeft})"); " is 161.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteBind,The length of the statement  "            var formatCodeListLength = formatCodesSum == 0 ? 0 : formatCodesSum == inputParameters.Count ? 1 : inputParameters.Count; " is 121.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteClose,The length of the statement  "                Debug.Assert(len <= WriteBuffer.WriteSpaceLeft' $"Message of type {GetType().Name} has length {len} which is bigger than the buffer ({WriteBuffer.WriteSpaceLeft})"); " is 165.
Long Statement,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WritePregenerated,The length of the statement  "                Debug.Assert(data.Length <= WriteBuffer.WriteSpaceLeft' $"Pregenerated message has length {data.Length} which is bigger than the buffer ({WriteBuffer.WriteSpaceLeft})"); " is 169.
Long Statement,Npgsql,GSSPasswordMessageStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Write,The length of the statement  "                    throw new NpgsqlException($"NegotiateStream trying to write {count} bytes but according to frame header we only have {_leftToWrite} left!"); " is 140.
Long Statement,Npgsql,GSSPasswordMessageStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Read,The length of the statement  "                    throw new NpgsqlException($"NegotiateStream trying to read {count} bytes but according to frame header we only have {_leftToRead} left!"); " is 138.
Long Statement,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,GetBytes,The length of the statement  "                throw new ArgumentOutOfRangeException(nameof(dataOffset)' dataOffset' $"dataOffset must be between {0} and {int.MaxValue}"); " is 124.
Long Statement,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,GetStreamInternal,The length of the statement  "            return new ValueTask<Stream>(_columnStream = (NpgsqlReadBuffer.ColumnStream)Buffer.GetStream(ColumnLen' !_isSequential)); " is 121.
Long Statement,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,GetChars,The length of the statement  "                throw new ArgumentOutOfRangeException(nameof(dataOffset)' dataOffset' $"dataOffset must be between {0} and {int.MaxValue}"); " is 124.
Long Statement,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,SkipChars,The length of the statement  "                var (bytesRead' charsRead) = DecodeChars(decoder' _tempCharBuf' 0' Math.Min(charCount' _tempCharBuf.Length)' byteCount); " is 120.
Long Statement,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,SeekToColumnSequential,The length of the statement  "                throw new InvalidOperationException($"Invalid attempt to read from column ordinal '{column}'. With CommandBehavior.SequentialAccess' you may only read from column ordinal '{_column}' or greater."); " is 197.
Long Statement,Npgsql,NpgsqlFactory,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlFactory.cs,GetService,The length of the statement  "                Log.Debug("A service request was made for System.Data.Common.DbProviderServices' but the EntityFramework5.Npgsql assemby could not be loaded."' e); " is 147.
Long Statement,Npgsql,NpgsqlLargeObjectStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlLargeObjectStream.cs,Read,The length of the statement  "                var bytesRead = await _manager.ExecuteFunctionGetBytes("loread"' buffer' offset + read' count - read' async' _fd' chunkCount); " is 126.
Long Statement,Npgsql,NpgsqlLargeObjectStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlLargeObjectStream.cs,Write,The length of the statement  "                var bytesWritten = await _manager.ExecuteFunction<int>("lowrite"' async' _fd' new ArraySegment<byte>(buffer' offset + totalWritten' chunkSize)); " is 144.
Long Statement,Npgsql,NpgsqlLargeObjectStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlLargeObjectStream.cs,Seek,The length of the statement  "                throw new ArgumentOutOfRangeException(nameof(offset)' "offset must fit in 32 bits for PostgreSQL versions older than 9.3"); " is 123.
Long Statement,Npgsql,NpgsqlLargeObjectStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlLargeObjectStream.cs,SetLength,The length of the statement  "                throw new ArgumentOutOfRangeException(nameof(value)' "offset must fit in 32 bits for PostgreSQL versions older than 9.3"); " is 122.
Long Statement,Npgsql,NpgsqlParameterCollection,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlParameterCollection.cs,Cast,The length of the statement  "                throw new InvalidCastException($"The value \"{value}\" is not of type \"{nameof(NpgsqlParameter)}\" and cannot be used in this parameter collection."); " is 151.
Long Statement,Npgsql,ColumnStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlReadBuffer.Stream.cs,Seek,The length of the statement  "                    throw new ArgumentOutOfRangeException(nameof(offset)' "Stream length must be non-negative and less than 2^31 - 1 - origin."); " is 125.
Long Statement,Npgsql,ColumnStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlReadBuffer.Stream.cs,Read,The length of the statement  "                    throw new ArgumentException("Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection."); " is 178.
Long Statement,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetDatabases,The length of the statement  "            getDatabases.Append("SELECT d.datname AS database_name' u.usename AS owner' pg_catalog.pg_encoding_to_char(d.encoding) AS encoding FROM pg_catalog.pg_database d LEFT JOIN pg_catalog.pg_user u ON d.datdba = u.usesysid"); " is 219.
Long Statement,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetTables,The length of the statement  "            //getTables.Append("SELECT * FROM (SELECT table_catalog' table_schema' table_name' table_type FROM information_schema.tables WHERE table_type = 'BASE TABLE' AND table_schema NOT IN ('pg_catalog'' 'information_schema')) tmp"); " is 225.
Long Statement,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetTables,The length of the statement  "            using (var command = BuildCommand(conn' getTables' restrictions' false' "table_catalog"' "table_schema"' "table_name"' "table_type")) " is 133.
Long Statement,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetColumns,The length of the statement  "                "SELECT table_catalog' table_schema' table_name' column_name' ordinal_position' column_default' is_nullable' udt_name AS data_type' character_maximum_length' character_octet_length' numeric_precision' numeric_precision_radix' numeric_scale' datetime_precision' character_set_catalog' character_set_schema' character_set_name' collation_catalog FROM information_schema.columns"); " is 378.
Long Statement,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetColumns,The length of the statement  "            using (var command = BuildCommand(conn' getColumns' restrictions' "table_catalog"' "table_schema"' "table_name"' "column_name")) " is 128.
Long Statement,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetViews,The length of the statement  "            //getViews.Append("SELECT table_catalog' table_schema' table_name' check_option' is_updatable FROM information_schema.views WHERE table_schema NOT IN ('pg_catalog'' 'information_schema')"); " is 189.
Long Statement,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetIndexes,The length of the statement  "            using (var command = BuildCommand(conn' getIndexes' restrictions' false' "current_database()"' "n.nspname"' "t.relname"' "i.relname")) " is 134.
Long Statement,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetIndexColumns,The length of the statement  "            using (var command = BuildCommand(conn' getIndexColumns' restrictions' false' "current_database()"' "n.nspname"' "t.relname"' "i.relname"' "a.attname")) " is 152.
Long Statement,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetConstraints,The length of the statement  "            using var command = BuildCommand(conn' getConstraints' restrictions' false' "current_database()"' "pgtn.nspname"' "pgt.relname"' "pgc.conname"); " is 144.
Long Statement,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetConstraintColumns,The length of the statement  "            using var command = BuildCommand(conn' getConstraintColumns' restrictions' false' "current_database()"' "n.nspname"' "t.relname"' "c.conname"' "a.attname"); " is 156.
Long Statement,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetDataSourceInformation,The length of the statement  "            row["IdentifierPattern"] = @"(^\[\p{Lo}\p{Lu}\p{Ll}_@#][\p{Lo}\p{Lu}\p{Ll}\p{Nd}@$#_]*$)|(^\[[^\]\0]|\]\]+\]$)|(^\""[^\""\0]|\""\""+\""$)"; " is 139.
Long Statement,Npgsql,ParameterStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlWriteBuffer.Stream.cs,Write,The length of the statement  "                    throw new ArgumentException("Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection."); " is 178.
Long Statement,Npgsql,Entry,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PgPassFile.cs,Parse,The length of the statement  "                var parts = Regex.Split(serializedEntry' @"(?<!\\):"); // split on any colons that aren't preceded by a \ (\ indicates that the colon is part of the content and not a separator) " is 177.
Long Statement,Npgsql,Entry,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PgPassFile.cs,Parse,The length of the statement  "                    throw new FormatException("pgpass entry was not well-formed. Please ensure all non-comment entries are formatted as hostname:port:database:username:password. If colon is included' it must be escaped like \\:."); " is 211.
Long Statement,Npgsql,PostgresDatabaseInfo,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresDatabaseInfo.cs,LoadBackendTypes,The length of the statement  "            var typeLoadingQuery = GenerateTypesQuery(SupportsRangeTypes' SupportsEnumTypes' HasEnumSortOrder' conn.Settings.LoadTableComposites' HasTypeCategory); " is 151.
Long Statement,Npgsql,PostgresDatabaseInfo,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresDatabaseInfo.cs,LoadBackendTypes,The length of the statement  "                            Log.Trace($"Domain type '{internalName}' refers to unknown base type with OID {baseTypeOID}' skipping"' conn.ProcessID); " is 120.
Long Statement,Npgsql,PostgresDatabaseInfo,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresDatabaseInfo.cs,LoadBackendTypes,The length of the statement  "                        var domainType = new PostgresDomainType(ns' internalName' oid' basePostgresType' reader.GetString("typnotnull") == "t"); " is 120.
Long Statement,Npgsql,PostgresDatabaseInfo,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresDatabaseInfo.cs,LoadCompositeFields,The length of the statement  "                    Log.Warn($"Skipping composite type {currentComposite!.DisplayName} with field {fieldName} with type OID {fieldTypeOID}' which could not be resolved to a PostgreSQL type."); " is 172.
Long Statement,Npgsql,PreparedStatementManager,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PreparedStatementManager.cs,GetOrAddExplicit,The length of the statement  "            return BySql[sql] = PreparedStatement.CreateExplicit(this' sql' NextPreparedStatementName()' statement.InputParameters' statementBeingReplaced); " is 144.
Long Statement,Npgsql,VolatileResourceManager,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\VolatileResourceManager.cs,RollbackLocal,The length of the statement  "                        throw new Exception($"Could not roll back after {MaximumRollbackAttempts} attempts' aborting. Transaction is in an unknown state."); " is 132.
Long Statement,Npgsql,WindowsUsernameProvider,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\WindowsUsernameProvider.cs,GetUsername,The length of the statement  "                    using var search = new DirectorySearcher(entry' "(objectSid=" + identity.User.Value + ")"' new[] { "userPrincipalName" }); " is 122.
Long Statement,Npgsql.BackendMessages,ErrorOrNoticeMessage,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\BackendMessages\ErrorOrNoticeMessage.cs,Load,The length of the statement  "            (string? severity' string? invariantSeverity' string? code' string? message' string? detail' string? hint) = (null' null' null' null' null' null); " is 146.
Long Statement,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,AddYears,The length of the statement  "                throw new InvalidOperationException($"Internal Npgsql bug: unexpected value {_type} of enum {nameof(NpgsqlDate)}.{nameof(InternalType)}. Please file a bug."); " is 158.
Long Statement,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,AddMonths,The length of the statement  "                throw new InvalidOperationException($"Internal Npgsql bug: unexpected value {_type} of enum {nameof(NpgsqlDate)}.{nameof(InternalType)}. Please file a bug."); " is 158.
Long Statement,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,Add,The length of the statement  "                throw new InvalidOperationException($"Internal Npgsql bug: unexpected value {_type} of enum {nameof(NpgsqlDate)}.{nameof(InternalType)}. Please file a bug."); " is 158.
Long Statement,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,Add,The length of the statement  "                throw new InvalidOperationException($"Internal Npgsql bug: unexpected value {_type} of enum {nameof(NpgsqlDate)}.{nameof(InternalType)}. Please file a bug."); " is 158.
Long Statement,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,ToDateTime,The length of the statement  "                throw new InvalidOperationException($"Internal Npgsql bug: unexpected value {date._type} of enum {nameof(NpgsqlDate)}.{nameof(InternalType)}. Please file a bug."); " is 163.
Long Statement,NpgsqlTypes,NpgsqlDateTime,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDateTime.cs,ToUniversalTime,The length of the statement  "                    return new NpgsqlDateTime(Subtract(TimeZoneInfo.Local.GetUtcOffset(new DateTime(ToDateTime().Ticks' DateTimeKind.Local))).Ticks' DateTimeKind.Utc); " is 147.
Long Statement,NpgsqlTypes,NpgsqlDateTime,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDateTime.cs,ToUniversalTime,The length of the statement  "                throw new InvalidOperationException($"Internal Npgsql bug: unexpected value {_type} of enum {nameof(NpgsqlDateTime)}.{nameof(InternalType)}. Please file a bug."); " is 162.
Long Statement,NpgsqlTypes,NpgsqlDateTime,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDateTime.cs,ToLocalTime,The length of the statement  "                    return new NpgsqlDateTime(TimeZoneInfo.ConvertTime(new DateTime(ToDateTime().Ticks' DateTimeKind.Utc)' TimeZoneInfo.Local)); " is 124.
Long Statement,NpgsqlTypes,NpgsqlDateTime,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDateTime.cs,ToLocalTime,The length of the statement  "                throw new InvalidOperationException($"Internal Npgsql bug: unexpected value {_type} of enum {nameof(NpgsqlDateTime)}.{nameof(InternalType)}. Please file a bug."); " is 162.
Long Statement,NpgsqlTypes,NpgsqlRange,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlRange.cs,Parse,The length of the statement  "            // TODO: infinity literals have special meaning to some types (e.g. daterange)' we should consider a flag to track them. " is 120.
Long Statement,NpgsqlTypes,NpgsqlTimeSpan,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTimeSpan.cs,ToString,The length of the statement  "                sb.Append(Math.Abs(Hours).ToString("D2")).Append(':').Append(Math.Abs(Minutes).ToString("D2")).Append(':').Append(Math.Abs(seconds).ToString("0#.######"' System.Globalization.CultureInfo.InvariantCulture.NumberFormat)); " is 219.
Long Statement,NpgsqlTypes,NpgsqlTsQuery,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTsQuery.cs,Parse,The length of the statement  "            if (pos >= value.Length || char.IsWhiteSpace(ch = value[pos]) || ch == '!' || ch == '&' || ch == '|' || ch == '(' || ch == ')') " is 127.
Long Statement,NpgsqlTypes,NpgsqlPoint,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,Parse,The length of the statement  "            return new NpgsqlPoint(double.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)' " is 121.
Long Statement,Npgsql.PostgresTypes,PostgresBaseType,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresTypes\PostgresBaseType.cs,GetFacets,The length of the statement  "                // See http://stackoverflow.com/questions/3350148/where-are-numeric-precision-and-scale-for-a-field-found-in-the-pg-catalog-tables " is 130.
Long Statement,Npgsql.Schema,DbColumnSchemaGenerator,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\Schema\DbColumnSchemaGenerator.cs,GetColumnSchema,The length of the statement  "                        var ordinal = fields.FindIndex(f => f.TableOID == column.TableOID && f.ColumnAttributeNumber - 1 == column.ColumnAttributeNumber); " is 130.
Long Statement,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Read,The length of the statement  "            throw new NpgsqlSafeReadException(new NotSupportedException("Only writing string to PostgreSQL bitstring is supported' no reading.")); " is 134.
Long Statement,Npgsql.TypeHandlers,ByteaHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ByteaHandler.cs,Read,The length of the statement  "            throw new NpgsqlSafeReadException(new NotSupportedException("Only writing ArraySegment<byte> to PostgreSQL bytea is supported' no reading.")); " is 142.
Long Statement,Npgsql.TypeHandlers,EnumHandler<TEnum>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\EnumHandler.cs,Read,The length of the statement  "                throw new NpgsqlSafeReadException(new InvalidCastException($"Received enum value '{str}' from database which wasn't found on enum {typeof(TEnum)}")); " is 149.
Long Statement,Npgsql.TypeHandlers,JsonHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\JsonHandler.cs,Read,The length of the statement  "                    throw new NotSupportedException($"Don't know how to decode JSONB with wire format {version}' your connection is now broken"); " is 125.
Long Statement,Npgsql.TypeHandlers,TextHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\TextHandler.cs,Read,The length of the statement  "            decoder.Convert(buf.Buffer' buf.ReadPosition' maxBytes' _singleCharArray' 0' 1' true' out var bytesUsed' out var charsUsed' out _); " is 131.
Long Statement,Npgsql.TypeHandlers,TextHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\TextHandler.cs,Read,The length of the statement  "            throw new NpgsqlSafeReadException(new NotSupportedException("Only writing ArraySegment<char> to PostgreSQL text is supported' no reading.")); " is 141.
Long Statement,Npgsql.TypeHandlers,TextHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\TextHandler.cs,ValidateAndGetLength,The length of the statement  "                throw new ArgumentException($"Parameter {parameter.ParameterName} is of type ArraySegment<char> and should not have its Size set"' parameter.ParameterName); " is 156.
Long Statement,Npgsql.TypeHandlers,UnknownTypeHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\UnknownTypeHandler.cs,Read,The length of the statement  "                        ? $"The field '{fieldDescription.Name}' has type '{pgType.DisplayName}'' which is currently unknown to Npgsql. You can retrieve it as a string by marking it as unknown' please see the FAQ." " is 189.
Long Statement,Npgsql.TypeHandlers,UnknownTypeHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\UnknownTypeHandler.cs,Read,The length of the statement  "                        : $"The field '{fieldDescription.Name}' has a type currently unknown to Npgsql (OID {fieldDescription.TypeOID}). You can retrieve it as a string by marking it as unknown' please see the FAQ." " is 191.
Long Statement,Npgsql.TypeHandlers,UnmappedEnumHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\UnmappedEnumHandler.cs,Read,The length of the statement  "                throw new NpgsqlSafeReadException(new InvalidCastException($"Received enum value '{s}' from database which wasn't found on enum {typeof(TAny)}")); " is 146.
Long Statement,Npgsql.TypeHandlers.CompositeHandlers,CompositeConstructorHandler<TComposite>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\CompositeHandlers\CompositeConstructorHandler.cs,Read,The length of the statement  "                throw new InvalidOperationException($"pg_attributes contains {Handlers.Length} fields for type {PostgresType.DisplayName}' but {fieldCount} fields were received."); " is 164.
Long Statement,Npgsql.TypeHandlers.CompositeHandlers,CompositeConstructorHandler<TComposite;T1;T2;T3;T4;T5;T6;T7;T8>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\CompositeHandlers\CompositeConstructorHandler`.cs,Read,The length of the statement  "                throw new InvalidOperationException($"pg_attributes contains {Handlers.Length} fields for type {PostgresType.DisplayName}' but {fieldCount} fields were received."); " is 164.
Long Statement,Npgsql.TypeHandlers.CompositeHandlers,CompositeHandler<T>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\CompositeHandlers\CompositeHandler.cs,Read,The length of the statement  "                    throw new InvalidOperationException($"pg_attributes contains {_memberHandlers.Length} fields for type {PgDisplayName}' but {fieldCount} fields were received."); " is 160.
Long Statement,Npgsql.TypeHandlers.CompositeHandlers,CompositeHandler<T>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\CompositeHandlers\CompositeHandler.cs,CreateConstructorHandler,The length of the statement  "                        throw new NpgsqlException($"PostgreSQL composite type {pgType.DisplayName} has field {pgField.Type.DisplayName} with an unknown type (OID = {pgField.Type.OID})."); " is 163.
Long Statement,Npgsql.TypeHandlers.CompositeHandlers,CompositeHandler<T>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\CompositeHandlers\CompositeHandler.cs,CreateMemberHandlers,The length of the statement  "                throw new InvalidOperationException($"PostgreSQL composite type {pgType.DisplayName} contains fields {notMappedFields} which could not match any on CLR type {clrType.Name}"); " is 174.
Long Statement,Npgsql.TypeHandlers.CompositeHandlers,CompositeHandler<T>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\CompositeHandlers\CompositeHandler.cs,CreateMemberHandlers,The length of the statement  "                        throw new NpgsqlException($"PostgreSQL composite type {pgType.DisplayName} has field {pgField.Type.DisplayName} with an unknown type (OID = {pgField.Type.OID})."); " is 163.
Long Statement,Npgsql.TypeHandlers.DateTimeHandlers,TimestampTzHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\DateTimeHandlers\TimestampTzHandler.cs,Write,The length of the statement  "                throw new InvalidOperationException($"Internal Npgsql bug: unexpected value {value.Kind} of enum {nameof(DateTimeKind)}. Please file a bug."); " is 142.
Long Statement,Npgsql.TypeHandlers.DateTimeHandlers,TimestampTzHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\DateTimeHandlers\TimestampTzHandler.cs,Write,The length of the statement  "                throw new InvalidOperationException($"Internal Npgsql bug: unexpected value {value.Kind} of enum {nameof(DateTimeKind)}. Please file a bug."); " is 142.
Long Statement,Npgsql.TypeHandlers.DateTimeHandlers,TimeTzHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\DateTimeHandlers\TimeTzHandler.cs,Write,The length of the statement  "                throw new InvalidOperationException($"Internal Npgsql bug: unexpected value {value.Kind} of enum {nameof(DateTimeKind)}. Please file a bug."); " is 142.
Long Statement,Npgsql.TypeHandlers.FullTextSearchHandlers,TsQueryHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsQueryHandler.cs,Read,The length of the statement  "                            _ => throw new InvalidOperationException($"Internal Npgsql bug: unexpected value {operKind} of enum {nameof(NpgsqlTsQuery.NodeKind)}. Please file a bug.") " is 154.
Long Statement,Npgsql.TypeHandlers.NetworkHandlers,InetHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\NetworkHandlers\InetHandler.cs,DoWrite,The length of the statement  "                throw new InvalidCastException($"Can't handle IPAddress with AddressFamily {ip.AddressFamily}' only InterNetwork or InterNetworkV6!"); " is 134.
Long Statement,Npgsql.TypeHandling,NpgsqlTypeHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\NpgsqlTypeHandler.cs,GenerateNonGenericWriteMethod,The length of the statement  "            // NpgsqlTypeHandler handler' object value' NpgsqlWriteBuffer buf' NpgsqlLengthCache lengthCache' NpgsqlParameter parameter' bool async " is 135.
Long Statement,Npgsql.TypeMapping,ConnectorTypeMapper,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\ConnectorTypeMapper.cs,GetByClrType,The length of the statement  "                                                "If you wish to map it to an  PostgreSQL composite type array you need to register it before usage' please refer to the documentation."); " is 137.
Long Statement,Npgsql.TypeMapping,ConnectorTypeMapper,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\ConnectorTypeMapper.cs,GetByClrType,The length of the statement  "                throw new NotSupportedException($"The CLR enum type {type.Name} must be registered with Npgsql before usage' please refer to the documentation."); " is 146.
Long Statement,Npgsql.TypeMapping,ConnectorTypeMapper,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\ConnectorTypeMapper.cs,GetByClrType,The length of the statement  "                throw new NotSupportedException("Npgsql 3.x removed support for writing a parameter with an IEnumerable value' use .ToList()/.ToArray() instead"); " is 146.
Long Statement,Npgsql.TypeMapping,ConnectorTypeMapper,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\ConnectorTypeMapper.cs,GetByClrType,The length of the statement  "                                            $"To use it with a PostgreSQL composite you need to specify {nameof(NpgsqlParameter.DataTypeName)} or to map it' please refer to the documentation."); " is 150.
Long Statement,Npgsql.TypeMapping,ConnectorTypeMapper,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\ConnectorTypeMapper.cs,GetArrayElementType,The length of the statement  "                return GetUnderlyingType(type.GetElementType()!); // The use of bang operator is justified here as Type.GetElementType() only returns null for the Array base class which can't be mapped in a useful way. " is 202.
Long Statement,Npgsql.TypeMapping,ConnectorTypeMapper,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\ConnectorTypeMapper.cs,GetArrayElementType,The length of the statement  "            var ilist = typeInfo.ImplementedInterfaces.FirstOrDefault(x => x.GetTypeInfo().IsGenericType && x.GetGenericTypeDefinition() == typeof(IList<>)); " is 145.
Long Statement,Npgsql.TypeMapping,ConnectorTypeMapper,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\ConnectorTypeMapper.cs,GetArrayElementType,The length of the statement  "                throw new NotSupportedException("Non-generic IList is a supported parameter' but the NpgsqlDbType parameter must be set on the parameter"); " is 139.
Long Statement,Npgsql.TypeMapping,ConnectorTypeMapper,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\ConnectorTypeMapper.cs,BindType,The length of the statement  "                    var msg = $"More than one PostgreSQL type was found with the name {mapping.PgTypeName}' please specify a full name including schema"; " is 133.
Long Statement,Npgsql.TypeMapping,ConnectorTypeMapper,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\ConnectorTypeMapper.cs,BindType,The length of the statement  "                    throw new InvalidOperationException($"Two type handlers registered on same NpgsqlDbType '{npgsqlDbType}': {_byNpgsqlDbType[value].GetType().Name} and {handler.GetType().Name}"); " is 177.
Long Statement,Npgsql.TypeMapping,ConnectorTypeMapper,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\ConnectorTypeMapper.cs,BindType,The length of the statement  "                        throw new InvalidOperationException($"Two type handlers registered on same DbType {dbType}: {_byDbType[dbType].GetType().Name} and {handler.GetType().Name}"); " is 158.
Long Statement,Npgsql.TypeMapping,ConnectorTypeMapper,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\ConnectorTypeMapper.cs,BindType,The length of the statement  "                        throw new InvalidOperationException($"Two type handlers registered on same .NET type '{type}': {_byClrType[type].GetType().Name} and {handler.GetType().Name}"); " is 160.
Long Statement,Npgsql.TypeMapping,ConnectorTypeMapper,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\ConnectorTypeMapper.cs,BindArrayType,The length of the statement  "                            $"Two array type handlers registered on same .NET type {elementType}: {_arrayHandlerByClrType[elementType].GetType().Name} and {arrayHandler.GetType().Name}"); " is 159.
Long Statement,Npgsql.TypeMapping,GlobalTypeMapper,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\GlobalTypeMapper.cs,ToNpgsqlDbType,The length of the statement  "            var ilist = typeInfo.ImplementedInterfaces.FirstOrDefault(x => x.GetTypeInfo().IsGenericType && x.GetGenericTypeDefinition() == typeof(IList<>)); " is 145.
Long Statement,Npgsql.TypeMapping,GlobalTypeMapper,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\GlobalTypeMapper.cs,SetupGlobalTypeMapper,The length of the statement  "            foreach (var t in typeof(TypeMapperBase).GetTypeInfo().Assembly.GetTypes().Where(t => typeof(NpgsqlTypeHandlerFactory).IsAssignableFrom(t.GetTypeInfo()))) " is 154.
Long Statement,Npgsql.TypeMapping,GlobalTypeMapper,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\GlobalTypeMapper.cs,SetupGlobalTypeMapper,The length of the statement  "            foreach (var t in typeof(TypeMapperBase).GetTypeInfo().Assembly.GetTypes().Where(t => t.GetTypeInfo().IsSubclassOf(typeof(NpgsqlTypeHandler)))) " is 143.
Long Statement,Npgsql.TypeMapping,NpgsqlTypeMappingBuilder,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeMapping\NpgsqlTypeMapping.cs,Build,The length of the statement  "                throw new ArgumentException($"{nameof(PgTypeName)} must contain the name of a PostgreSQL data type"' nameof(PgTypeName)); " is 121.
Complex Conditional,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,DoReadMessage,The conditional expression  "_pendingPrependedResponses > 0 ||                  dataRowLoadingMode != DataRowLoadingMode.NonSequential ||                  readingNotifications ||                  ReadBuffer.ReadBytesLeft < 5"  is complex.
Complex Conditional,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,CloseOngoingOperations,The conditional expression  "copyOperation is NpgsqlBinaryImporter ||                  copyOperation is NpgsqlCopyTextWriter ||                  copyOperation is NpgsqlRawCopyStream rawCopyStream && rawCopyStream.CanWrite"  is complex.
Complex Conditional,Npgsql.NameTranslation,NpgsqlSnakeCaseNameTranslator,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NameTranslation\NpgsqlSnakeCaseNameTranslator.cs,ConvertToSnakeCase,The conditional expression  "previousCategory == UnicodeCategory.SpaceSeparator ||                              previousCategory == UnicodeCategory.LowercaseLetter ||                              previousCategory != UnicodeCategory.DecimalDigitNumber &&                              currentIndex > 0 &&                              currentIndex + 1 < name.Length &&                              char.IsLower(name[currentIndex + 1])"  is complex.
Complex Conditional,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,NpgsqlDate,The conditional expression  "year == 0 || year < MinYear || year > MaxYear || month < 1 || month > 12 || day < 1 ||                  (day > (IsLeap(year) ? 366 : 365))"  is complex.
Complex Conditional,NpgsqlTypes,NpgsqlTsQuery,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTsQuery.cs,Parse,The conditional expression  "(ch == ')' || ch == '|' || ch == '&') && !expectingBinOp || (ch == '(' || ch == '!') && expectingBinOp"  is complex.
Complex Conditional,NpgsqlTypes,NpgsqlTsQuery,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTsQuery.cs,Parse,The conditional expression  "ch == '(' || ch == '!' || ch == '&' || ch == '<'"  is complex.
Complex Conditional,NpgsqlTypes,NpgsqlTsQuery,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTsQuery.cs,Parse,The conditional expression  "pos >= value.Length || char.IsWhiteSpace(ch = value[pos]) || ch == '!' || ch == '&' || ch == '|' || ch == '(' || ch == ')'"  is complex.
Complex Conditional,NpgsqlTypes,NpgsqlTsVector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTsVector.cs,Parse,The conditional expression  "value[pos] >= 'B' && value[pos] <= 'D' || value[pos] >= 'b' && value[pos] <= 'd'"  is complex.
Complex Conditional,NpgsqlTypes,NpgsqlInet,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,ToString,The conditional expression  "(Address.AddressFamily == AddressFamily.InterNetwork   && Netmask == 32) ||                  (Address.AddressFamily == AddressFamily.InterNetworkV6 && Netmask == 128)"  is complex.
Complex Conditional,Npgsql.TypeHandlers,JsonHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\JsonHandler.cs,ValidateAndGetLength,The conditional expression  "typeof(TAny) == typeof(string)             ||                  typeof(TAny) == typeof(char[])             ||                  typeof(TAny) == typeof(ArraySegment<char>) ||                  typeof(TAny) == typeof(char)               ||                  typeof(TAny) == typeof(byte[])"  is complex.
Complex Conditional,Npgsql.TypeHandlers,JsonHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\JsonHandler.cs,Read,The conditional expression  "typeof(T) == typeof(string)             ||                  typeof(T) == typeof(char[])             ||                  typeof(T) == typeof(ArraySegment<char>) ||                  typeof(T) == typeof(char)               ||                  typeof(T) == typeof(byte[])"  is complex.
Empty Catch Block,Npgsql,NpgsqlConnection,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnection.cs,EnlistTransaction,The method has an empty catch block.
Empty Catch Block,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,RawOpen,The method has an empty catch block.
Empty Catch Block,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,RawOpen,The method has an empty catch block.
Empty Catch Block,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,RawOpen,The method has an empty catch block.
Empty Catch Block,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Connect,The method has an empty catch block.
Empty Catch Block,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,ConnectAsync,The method has an empty catch block.
Empty Catch Block,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Cleanup,The method has an empty catch block.
Empty Catch Block,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Cleanup,The method has an empty catch block.
Magic Number,Npgsql,ConnectorPool,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\ConnectorPool.cs,ConnectorPool,The following statement contains a magic number: _pruningMedianIndex = DivideRoundingUp(_pruningSampleSize' 2) - 1;
Magic Number,Npgsql,Counter,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\Counters.cs,GetInstanceName,The following statement contains a magic number: var firstPartLength = (CounterInstanceNameMaxLength - insertString.Length) / 2;
Magic Number,Npgsql,KerberosUsernameProvider,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\KerberosUsernameProvider.cs,DetectUsername,The following statement contains a magic number: i < 2
Magic Number,Npgsql,KerberosUsernameProvider,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\KerberosUsernameProvider.cs,DetectUsername,The following statement contains a magic number: components.Length != 2
Magic Number,Npgsql,KerberosUsernameProvider,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\KerberosUsernameProvider.cs,DetectUsername,The following statement contains a magic number: components.Length != 2
Magic Number,Npgsql,NpgsqlBinaryExporter,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlBinaryExporter.cs,ReadHeader,The following statement contains a magic number: var headerLen = NpgsqlRawCopyStream.BinarySignature.Length + 4 + 4;
Magic Number,Npgsql,NpgsqlBinaryExporter,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlBinaryExporter.cs,ReadHeader,The following statement contains a magic number: var headerLen = NpgsqlRawCopyStream.BinarySignature.Length + 4 + 4;
Magic Number,Npgsql,NpgsqlBinaryExporter,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlBinaryExporter.cs,StartRow,The following statement contains a magic number: await _buf.Ensure(2' async);
Magic Number,Npgsql,NpgsqlBinaryExporter,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlBinaryExporter.cs,StartRow,The following statement contains a magic number: _leftToReadInDataMsg -= 2;
Magic Number,Npgsql,NpgsqlBinaryExporter,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlBinaryExporter.cs,ReadColumnLenIfNeeded,The following statement contains a magic number: await _buf.Ensure(4' async);
Magic Number,Npgsql,NpgsqlBinaryExporter,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlBinaryExporter.cs,ReadColumnLenIfNeeded,The following statement contains a magic number: _leftToReadInDataMsg -= 4;
Magic Number,Npgsql,NpgsqlBinaryImporter,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlBinaryImporter.cs,StartRow,The following statement contains a magic number: _buf.WriteSpaceLeft < 2
Magic Number,Npgsql,NpgsqlBinaryImporter,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlBinaryImporter.cs,WriteNull,The following statement contains a magic number: _buf.WriteSpaceLeft < 4
Magic Number,Npgsql,NpgsqlBinaryImporter,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlBinaryImporter.cs,WriteTrailer,The following statement contains a magic number: _buf.WriteSpaceLeft < 2
Magic Number,Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlCommand.cs,DeriveParametersForFunction,The following statement contains a magic number: types = rdr.GetFieldValue<uint[]>(2);
Magic Number,Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlCommand.cs,DeriveParametersForFunction,The following statement contains a magic number: !rdr.IsDBNull(2)
Magic Number,Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlCommand.cs,DeriveParametersForFunction,The following statement contains a magic number: modes = rdr.GetFieldValue<char[]>(3);
Magic Number,Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlCommand.cs,DeriveParametersForFunction,The following statement contains a magic number: !rdr.IsDBNull(3)
Magic Number,Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlCommand.cs,ExecuteReaderAsync,The following statement contains a magic number: connector.UserTimeout = CommandTimeout * 1000;
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,AuthenticateSASL,The following statement contains a magic number: var nonceBytes = new byte[18];
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,AuthenticateSASL,The following statement contains a magic number: var salt1 = new byte[salt.Length + 4];
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,AuthenticateMD5,The following statement contains a magic number: cryptBuf = new byte[prehashbytes.Length + 4];
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,AuthenticateMD5,The following statement contains a magic number: Array.Copy(salt' 0' cryptBuf' prehashbytes.Length' 4);
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Connect,The following statement contains a magic number: perEndpointTimeout = (int)(timeoutTicks / endpoints.Length / 10);
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,SetSocketOptions,The following statement contains a magic number: var inOptionValues = new byte[uintSize * 3];
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,SetSocketOptions,The following statement contains a magic number: BitConverter.GetBytes((uint)interval).CopyTo(inOptionValues' uintSize * 2);
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,DoReadMessage,The following statement contains a magic number: _pendingPrependedResponses > 0 ||                  dataRowLoadingMode != DataRowLoadingMode.NonSequential ||                  readingNotifications ||                  ReadBuffer.ReadBytesLeft < 5
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,DoReadMessage,The following statement contains a magic number: var len = ReadBuffer.ReadInt32() - 4;
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,DoReadMessage,The following statement contains a magic number: ReadBuffer.ReadPosition -= 5;
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,DoReadMessage,The following statement contains a magic number: await ReadBuffer.Ensure(5' async' readingNotifications2);
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,DoReadMessage,The following statement contains a magic number: len = ReadBuffer.ReadInt32() - 4;
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,ParseServerMessage,The following statement contains a magic number: switch (code)              {                  case BackendMessageCode.RowDescription:                      return _rowDescriptionMessage.Load(buf' TypeMapper);                  case BackendMessageCode.DataRow:                      return _dataRowMessage.Load(len);                  case BackendMessageCode.CompletedResponse:                      return _commandCompleteMessage.Load(buf' len);                  case BackendMessageCode.ReadyForQuery:                      var rfq = _readyForQueryMessage.Load(buf);                      if (!isPrependedMessage) {                          // Transaction status on prepended messages shouldn't be processed' because there may be prepended messages                          // before the begin transaction message. In this case' they will contain transaction status Idle' which will                          // clear our Pending transaction status. Only process transaction status on RFQ's from user-provided' non                          // prepended messages.                          ProcessNewTransactionStatus(rfq.TransactionStatusIndicator);                      }                      return rfq;                  case BackendMessageCode.EmptyQueryResponse:                      return EmptyQueryMessage.Instance;                  case BackendMessageCode.ParseComplete:                      return ParseCompleteMessage.Instance;                  case BackendMessageCode.ParameterDescription:                      return _parameterDescriptionMessage.Load(buf);                  case BackendMessageCode.BindComplete:                      return BindCompleteMessage.Instance;                  case BackendMessageCode.NoData:                      return NoDataMessage.Instance;                  case BackendMessageCode.CloseComplete:                      return CloseCompletedMessage.Instance;                  case BackendMessageCode.ParameterStatus:                      ReadParameterStatus(buf.GetNullTerminatedBytes()' buf.GetNullTerminatedBytes());                      return null;                  case BackendMessageCode.NoticeResponse:                      var notice = PostgresNotice.Load(buf);                      Log.Debug($"Received notice: {notice.MessageText}"' Id);                      Connection?.OnNotice(notice);                      return null;                  case BackendMessageCode.NotificationResponse:                      Connection?.OnNotification(new NpgsqlNotificationEventArgs(buf));                      return null;                    case BackendMessageCode.AuthenticationRequest:                      var authType = (AuthenticationRequestType)buf.ReadInt32();                      return authType switch                      {                          AuthenticationRequestType.AuthenticationOk                => (AuthenticationRequestMessage)AuthenticationOkMessage.Instance'                          AuthenticationRequestType.AuthenticationCleartextPassword => AuthenticationCleartextPasswordMessage.Instance'                          AuthenticationRequestType.AuthenticationMD5Password       => AuthenticationMD5PasswordMessage.Load(buf)'                          AuthenticationRequestType.AuthenticationGSS               => AuthenticationGSSMessage.Instance'                          AuthenticationRequestType.AuthenticationSSPI              => AuthenticationSSPIMessage.Instance'                          AuthenticationRequestType.AuthenticationGSSContinue       => AuthenticationGSSContinueMessage.Load(buf' len)'                          AuthenticationRequestType.AuthenticationSASL              => new AuthenticationSASLMessage(buf)'                          AuthenticationRequestType.AuthenticationSASLContinue      => new AuthenticationSASLContinueMessage(buf' len - 4)'                          AuthenticationRequestType.AuthenticationSASLFinal         => new AuthenticationSASLFinalMessage(buf' len - 4)'                          _ => throw new NotSupportedException($"Authentication method not supported (Received: {authType})")                      };                    case BackendMessageCode.BackendKeyData:                      return new BackendKeyDataMessage(buf);                    case BackendMessageCode.CopyInResponse:                      return (_copyInResponseMessage ??= new CopyInResponseMessage()).Load(ReadBuffer);                  case BackendMessageCode.CopyOutResponse:                      return (_copyOutResponseMessage ??= new CopyOutResponseMessage()).Load(ReadBuffer);                  case BackendMessageCode.CopyData:                      return (_copyDataMessage ??= new CopyDataMessage()).Load(len);                  case BackendMessageCode.CopyDone:                      return CopyDoneMessage.Instance;                    case BackendMessageCode.PortalSuspended:                      throw new NpgsqlException("Unimplemented message: " + code);                  case BackendMessageCode.ErrorResponse:                      return null;                    case BackendMessageCode.FunctionCallResponse:                      // We don't use the obsolete function call protocol                      throw new NpgsqlException("Unexpected backend message: " + code);                    default:                      throw new InvalidOperationException($"Internal Npgsql bug: unexpected value {code} of enum {nameof(BackendMessageCode)}. Please file a bug.");              }
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,ParseServerMessage,The following statement contains a magic number: switch (code)              {                  case BackendMessageCode.RowDescription:                      return _rowDescriptionMessage.Load(buf' TypeMapper);                  case BackendMessageCode.DataRow:                      return _dataRowMessage.Load(len);                  case BackendMessageCode.CompletedResponse:                      return _commandCompleteMessage.Load(buf' len);                  case BackendMessageCode.ReadyForQuery:                      var rfq = _readyForQueryMessage.Load(buf);                      if (!isPrependedMessage) {                          // Transaction status on prepended messages shouldn't be processed' because there may be prepended messages                          // before the begin transaction message. In this case' they will contain transaction status Idle' which will                          // clear our Pending transaction status. Only process transaction status on RFQ's from user-provided' non                          // prepended messages.                          ProcessNewTransactionStatus(rfq.TransactionStatusIndicator);                      }                      return rfq;                  case BackendMessageCode.EmptyQueryResponse:                      return EmptyQueryMessage.Instance;                  case BackendMessageCode.ParseComplete:                      return ParseCompleteMessage.Instance;                  case BackendMessageCode.ParameterDescription:                      return _parameterDescriptionMessage.Load(buf);                  case BackendMessageCode.BindComplete:                      return BindCompleteMessage.Instance;                  case BackendMessageCode.NoData:                      return NoDataMessage.Instance;                  case BackendMessageCode.CloseComplete:                      return CloseCompletedMessage.Instance;                  case BackendMessageCode.ParameterStatus:                      ReadParameterStatus(buf.GetNullTerminatedBytes()' buf.GetNullTerminatedBytes());                      return null;                  case BackendMessageCode.NoticeResponse:                      var notice = PostgresNotice.Load(buf);                      Log.Debug($"Received notice: {notice.MessageText}"' Id);                      Connection?.OnNotice(notice);                      return null;                  case BackendMessageCode.NotificationResponse:                      Connection?.OnNotification(new NpgsqlNotificationEventArgs(buf));                      return null;                    case BackendMessageCode.AuthenticationRequest:                      var authType = (AuthenticationRequestType)buf.ReadInt32();                      return authType switch                      {                          AuthenticationRequestType.AuthenticationOk                => (AuthenticationRequestMessage)AuthenticationOkMessage.Instance'                          AuthenticationRequestType.AuthenticationCleartextPassword => AuthenticationCleartextPasswordMessage.Instance'                          AuthenticationRequestType.AuthenticationMD5Password       => AuthenticationMD5PasswordMessage.Load(buf)'                          AuthenticationRequestType.AuthenticationGSS               => AuthenticationGSSMessage.Instance'                          AuthenticationRequestType.AuthenticationSSPI              => AuthenticationSSPIMessage.Instance'                          AuthenticationRequestType.AuthenticationGSSContinue       => AuthenticationGSSContinueMessage.Load(buf' len)'                          AuthenticationRequestType.AuthenticationSASL              => new AuthenticationSASLMessage(buf)'                          AuthenticationRequestType.AuthenticationSASLContinue      => new AuthenticationSASLContinueMessage(buf' len - 4)'                          AuthenticationRequestType.AuthenticationSASLFinal         => new AuthenticationSASLFinalMessage(buf' len - 4)'                          _ => throw new NotSupportedException($"Authentication method not supported (Received: {authType})")                      };                    case BackendMessageCode.BackendKeyData:                      return new BackendKeyDataMessage(buf);                    case BackendMessageCode.CopyInResponse:                      return (_copyInResponseMessage ??= new CopyInResponseMessage()).Load(ReadBuffer);                  case BackendMessageCode.CopyOutResponse:                      return (_copyOutResponseMessage ??= new CopyOutResponseMessage()).Load(ReadBuffer);                  case BackendMessageCode.CopyData:                      return (_copyDataMessage ??= new CopyDataMessage()).Load(len);                  case BackendMessageCode.CopyDone:                      return CopyDoneMessage.Instance;                    case BackendMessageCode.PortalSuspended:                      throw new NpgsqlException("Unimplemented message: " + code);                  case BackendMessageCode.ErrorResponse:                      return null;                    case BackendMessageCode.FunctionCallResponse:                      // We don't use the obsolete function call protocol                      throw new NpgsqlException("Unexpected backend message: " + code);                    default:                      throw new InvalidOperationException($"Internal Npgsql bug: unexpected value {code} of enum {nameof(BackendMessageCode)}. Please file a bug.");              }
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,GenerateResetMessage,The following statement contains a magic number: _resetWithoutDeallocateResponseCount = 2;
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,GenerateResetMessage,The following statement contains a magic number: _resetWithoutDeallocateResponseCount += 2;
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,EndUserAction,The following statement contains a magic number: var keepAlive = Settings.KeepAlive * 1000;
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Wait,The following statement contains a magic number: var keepaliveMs = Settings.KeepAlive * 1000;
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,DoWaitAsync,The following statement contains a magic number: keepaliveTimer = new Timer(performKeepaliveMethod' null' Settings.KeepAlive*1000' Timeout.Infinite);
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,DoWaitAsync,The following statement contains a magic number: keepaliveTimer!.Change(Settings.KeepAlive*1000' Timeout.Infinite);
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteDescribe,The following statement contains a magic number: Debug.Assert(name.All(c => c < 128));
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteExecute,The following statement contains a magic number: Debug.Assert(10 <= WriteBuffer.WriteSpaceLeft' $"Message of type {GetType().Name} has length 10 which is bigger than the buffer ({WriteBuffer.WriteSpaceLeft})");
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteParse,The following statement contains a magic number: Debug.Assert(statementName.All(c => c < 128));
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteParse,The following statement contains a magic number: WriteBuffer.WriteSpaceLeft < 1 + 4 + statementName.Length + 1
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteParse,The following statement contains a magic number: WriteBuffer.WriteSpaceLeft < 1 + 2
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteParse,The following statement contains a magic number: WriteBuffer.WriteSpaceLeft < 4
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteBind,The following statement contains a magic number: Debug.Assert(statement.All(c => c < 128));
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteBind,The following statement contains a magic number: Debug.Assert(portal.All(c => c < 128));
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteBind,The following statement contains a magic number: WriteBuffer.WriteSpaceLeft < 2
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteBind,The following statement contains a magic number: WriteBuffer.WriteSpaceLeft < 2
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteBind,The following statement contains a magic number: WriteBuffer.WriteSpaceLeft < 2 + unknownResultTypeList.Length * 2
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteBind,The following statement contains a magic number: WriteBuffer.WriteSpaceLeft < 2 + unknownResultTypeList.Length * 2
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteClose,The following statement contains a magic number: WriteBuffer.WriteSpaceLeft < 10
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteQuery,The following statement contains a magic number: WriteBuffer.WriteSpaceLeft < 1 + 4
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteCancelRequest,The following statement contains a magic number: WriteBuffer.WriteInt32(1234 << 16 | 5678);
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteCancelRequest,The following statement contains a magic number: WriteBuffer.WriteInt32(1234 << 16 | 5678);
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteCancelRequest,The following statement contains a magic number: WriteBuffer.WriteInt32(1234 << 16 | 5678);
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteSslRequest,The following statement contains a magic number: WriteBuffer.WriteInt32(80877103);
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteStartup,The following statement contains a magic number: const int protocolVersion3 = 3 << 16;
Magic Number,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,WriteStartup,The following statement contains a magic number: const int protocolVersion3 = 3 << 16;
Magic Number,Npgsql,GSSPasswordMessageStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Write,The following statement contains a magic number: _leftToWrite = (buffer[3] << 8) | buffer[4];
Magic Number,Npgsql,GSSPasswordMessageStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Write,The following statement contains a magic number: _leftToWrite = (buffer[3] << 8) | buffer[4];
Magic Number,Npgsql,GSSPasswordMessageStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Write,The following statement contains a magic number: _leftToWrite = (buffer[3] << 8) | buffer[4];
Magic Number,Npgsql,GSSPasswordMessageStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Write,The following statement contains a magic number: buffer[0] = 22;
Magic Number,Npgsql,GSSPasswordMessageStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Write,The following statement contains a magic number: throw new NotSupportedException($"Received frame header minor v {buffer[2]} (different from 0)");
Magic Number,Npgsql,GSSPasswordMessageStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Write,The following statement contains a magic number: buffer[2] != 0
Magic Number,Npgsql,GSSPasswordMessageStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Write,The following statement contains a magic number: count == 5
Magic Number,Npgsql,GSSPasswordMessageStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Write,The following statement contains a magic number: count -= 5;
Magic Number,Npgsql,GSSPasswordMessageStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Write,The following statement contains a magic number: offset += 5;
Magic Number,Npgsql,GSSPasswordMessageStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Read,The following statement contains a magic number: buffer[0] = 22;
Magic Number,Npgsql,GSSPasswordMessageStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Read,The following statement contains a magic number: buffer[2] = 0;
Magic Number,Npgsql,GSSPasswordMessageStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Read,The following statement contains a magic number: buffer[3] = (byte)((_leftToRead >> 8) & 0xFF);
Magic Number,Npgsql,GSSPasswordMessageStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Read,The following statement contains a magic number: buffer[3] = (byte)((_leftToRead >> 8) & 0xFF);
Magic Number,Npgsql,GSSPasswordMessageStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Read,The following statement contains a magic number: buffer[4] = (byte)(_leftToRead & 0xFF);
Magic Number,Npgsql,GSSPasswordMessageStream,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Read,The following statement contains a magic number: return 5;
Magic Number,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,TryFastRead,The following statement contains a magic number: readBuf.ReadBytesLeft < 5
Magic Number,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,TryFastRead,The following statement contains a magic number: var len = readBuf.ReadInt32() - 4;
Magic Number,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,TryFastRead,The following statement contains a magic number: readBuf.ReadPosition -= 5;
Magic Number,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,ReadMessage,The following statement contains a magic number: await Connector.ReadBuffer.Ensure(2' async);
Magic Number,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,ProcessDataRowMessage,The following statement contains a magic number: _dataMsgEnd = Buffer.ReadPosition + msg.Length - 2;
Magic Number,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,SkipChars,The following statement contains a magic number: _tempCharBuf = new char[1024];
Magic Number,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,SeekToColumnSequential,The following statement contains a magic number: await Buffer.Ensure(4' async);
Magic Number,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,SeekToColumnSequential,The following statement contains a magic number: await Buffer.Ensure(4' async);
Magic Number,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,ConsumeRow,The following statement contains a magic number: await Buffer.Ensure(4' async2);
Magic Number,Npgsql,NpgsqlLargeObjectManager,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlLargeObjectManager.cs,NpgsqlLargeObjectManager,The following statement contains a magic number: MaxTransferBlockSize = 4 * 1024 * 1024;
Magic Number,Npgsql,NpgsqlLargeObjectManager,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlLargeObjectManager.cs,NpgsqlLargeObjectManager,The following statement contains a magic number: MaxTransferBlockSize = 4 * 1024 * 1024;
Magic Number,Npgsql,NpgsqlLargeObjectManager,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlLargeObjectManager.cs,NpgsqlLargeObjectManager,The following statement contains a magic number: MaxTransferBlockSize = 4 * 1024 * 1024;
Magic Number,Npgsql,NpgsqlParameterCollection,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlParameterCollection.cs,IndexOf,The following statement contains a magic number: _internalList.Count >= 5
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetMetaDataCollections,The following statement contains a magic number: table.Rows.Add("Tables"' 4' 3);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetMetaDataCollections,The following statement contains a magic number: table.Rows.Add("Tables"' 4' 3);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetMetaDataCollections,The following statement contains a magic number: table.Rows.Add("Columns"' 4' 4);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetMetaDataCollections,The following statement contains a magic number: table.Rows.Add("Columns"' 4' 4);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetMetaDataCollections,The following statement contains a magic number: table.Rows.Add("Views"' 3' 3);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetMetaDataCollections,The following statement contains a magic number: table.Rows.Add("Views"' 3' 3);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetMetaDataCollections,The following statement contains a magic number: table.Rows.Add("Indexes"' 4' 4);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetMetaDataCollections,The following statement contains a magic number: table.Rows.Add("Indexes"' 4' 4);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetMetaDataCollections,The following statement contains a magic number: table.Rows.Add("IndexColumns"' 5' 5);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetMetaDataCollections,The following statement contains a magic number: table.Rows.Add("IndexColumns"' 5' 5);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetRestrictions,The following statement contains a magic number: table.Rows.Add("Tables"' "Schema"' "schema_catalog"' 2);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetRestrictions,The following statement contains a magic number: table.Rows.Add("Tables"' "Table"' "table_name"' 3);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetRestrictions,The following statement contains a magic number: table.Rows.Add("Tables"' "TableType"' "table_type"' 4);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetRestrictions,The following statement contains a magic number: table.Rows.Add("Columns"' "Schema"' "table_schema"' 2);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetRestrictions,The following statement contains a magic number: table.Rows.Add("Columns"' "TableName"' "table_name"' 3);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetRestrictions,The following statement contains a magic number: table.Rows.Add("Columns"' "Column"' "column_name"' 4);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetRestrictions,The following statement contains a magic number: table.Rows.Add("Views"' "Schema"' "table_schema"' 2);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetRestrictions,The following statement contains a magic number: table.Rows.Add("Views"' "Table"' "table_name"' 3);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetRestrictions,The following statement contains a magic number: table.Rows.Add("Indexes"' "Schema"' "table_schema"' 2);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetRestrictions,The following statement contains a magic number: table.Rows.Add("Indexes"' "Table"' "table_name"' 3);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetRestrictions,The following statement contains a magic number: table.Rows.Add("Indexes"' "Index"' "index_name"' 4);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetRestrictions,The following statement contains a magic number: table.Rows.Add("IndexColumns"' "Schema"' "table_schema"' 2);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetRestrictions,The following statement contains a magic number: table.Rows.Add("IndexColumns"' "Table"' "table_name"' 3);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetRestrictions,The following statement contains a magic number: table.Rows.Add("IndexColumns"' "Index"' "index_name"' 4);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetRestrictions,The following statement contains a magic number: table.Rows.Add("IndexColumns"' "Column"' "column_name"' 5);
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,GetDataSourceInformation,The following statement contains a magic number: row["ParameterNameMaxLength"] = 63;
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,PopulateHardcodedDataTypeInfo,The following statement contains a magic number: switch (type.Name)              {              case "varchar":              case "char":                  row["DataType"] = "String";                  row["IsBestMatch"] = false;                  goto case "text";              case "text":                  row["CreateFormat"] += "({0})";                  row["CreateParameters"] = "size";                  row["IsSearchableWithLike"] = true;                  row["IsLiteralSupported"] = true;                  row["LiteralPrefix"] = "'";                  row["LiteralSuffix"] = "'";                  return;              case "numeric":                  row["CreateFormat"] += "({0}'{1})";                  row["CreateParameters"] = "precision' scale";                  row["MaximumScale"] = 16383;                  row["MinimumScale"] = 16383;                  row["IsUnsigned"] = false;                  return;              case "bytea":                  row["IsLong"] = true;                  return;              case "citext":                  row["IsCaseSensitive"] = false;                  return;              case "integer":              case "smallint":              case "bigint":              case "double precision":              case "real":              case "money":                  row["IsUnsigned"] = false;                  return;              case "oid":              case "cid":              case "regtype":              case "regconfig":                  row["IsUnsigned"] = true;                  return;              case "xid":                  row["IsUnsigned"] = true;                  row["IsConcurrencyType"] = true;                  return;              }
Magic Number,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,PopulateHardcodedDataTypeInfo,The following statement contains a magic number: switch (type.Name)              {              case "varchar":              case "char":                  row["DataType"] = "String";                  row["IsBestMatch"] = false;                  goto case "text";              case "text":                  row["CreateFormat"] += "({0})";                  row["CreateParameters"] = "size";                  row["IsSearchableWithLike"] = true;                  row["IsLiteralSupported"] = true;                  row["LiteralPrefix"] = "'";                  row["LiteralSuffix"] = "'";                  return;              case "numeric":                  row["CreateFormat"] += "({0}'{1})";                  row["CreateParameters"] = "precision' scale";                  row["MaximumScale"] = 16383;                  row["MinimumScale"] = 16383;                  row["IsUnsigned"] = false;                  return;              case "bytea":                  row["IsLong"] = true;                  return;              case "citext":                  row["IsCaseSensitive"] = false;                  return;              case "integer":              case "smallint":              case "bigint":              case "double precision":              case "real":              case "money":                  row["IsUnsigned"] = false;                  return;              case "oid":              case "cid":              case "regtype":              case "regconfig":                  row["IsUnsigned"] = true;                  return;              case "xid":                  row["IsUnsigned"] = true;                  row["IsConcurrencyType"] = true;                  return;              }
Magic Number,Npgsql,NpgsqlTransaction,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTransaction.cs,Init,The following statement contains a magic number: switch (isolationLevel)              {              case IsolationLevel.RepeatableRead:              case IsolationLevel.Snapshot:                  _connector.PrependInternalMessage(PregeneratedMessages.BeginTransRepeatableRead' 2);                  break;              case IsolationLevel.Serializable:                  _connector.PrependInternalMessage(PregeneratedMessages.BeginTransSerializable' 2);                  break;              case IsolationLevel.ReadUncommitted:                  // PG doesn't really support ReadUncommitted' it's the same as ReadCommitted. But we still                  // send as if.                  _connector.PrependInternalMessage(PregeneratedMessages.BeginTransReadUncommitted' 2);                  break;              case IsolationLevel.ReadCommitted:                  _connector.PrependInternalMessage(PregeneratedMessages.BeginTransReadCommitted' 2);                  break;              case IsolationLevel.Unspecified:                  isolationLevel = DefaultIsolationLevel;                  goto case DefaultIsolationLevel;              default:                  throw new NotSupportedException("Isolation level not supported: " + isolationLevel);              }
Magic Number,Npgsql,NpgsqlTransaction,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTransaction.cs,Init,The following statement contains a magic number: switch (isolationLevel)              {              case IsolationLevel.RepeatableRead:              case IsolationLevel.Snapshot:                  _connector.PrependInternalMessage(PregeneratedMessages.BeginTransRepeatableRead' 2);                  break;              case IsolationLevel.Serializable:                  _connector.PrependInternalMessage(PregeneratedMessages.BeginTransSerializable' 2);                  break;              case IsolationLevel.ReadUncommitted:                  // PG doesn't really support ReadUncommitted' it's the same as ReadCommitted. But we still                  // send as if.                  _connector.PrependInternalMessage(PregeneratedMessages.BeginTransReadUncommitted' 2);                  break;              case IsolationLevel.ReadCommitted:                  _connector.PrependInternalMessage(PregeneratedMessages.BeginTransReadCommitted' 2);                  break;              case IsolationLevel.Unspecified:                  isolationLevel = DefaultIsolationLevel;                  goto case DefaultIsolationLevel;              default:                  throw new NotSupportedException("Isolation level not supported: " + isolationLevel);              }
Magic Number,Npgsql,NpgsqlTransaction,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTransaction.cs,Init,The following statement contains a magic number: switch (isolationLevel)              {              case IsolationLevel.RepeatableRead:              case IsolationLevel.Snapshot:                  _connector.PrependInternalMessage(PregeneratedMessages.BeginTransRepeatableRead' 2);                  break;              case IsolationLevel.Serializable:                  _connector.PrependInternalMessage(PregeneratedMessages.BeginTransSerializable' 2);                  break;              case IsolationLevel.ReadUncommitted:                  // PG doesn't really support ReadUncommitted' it's the same as ReadCommitted. But we still                  // send as if.                  _connector.PrependInternalMessage(PregeneratedMessages.BeginTransReadUncommitted' 2);                  break;              case IsolationLevel.ReadCommitted:                  _connector.PrependInternalMessage(PregeneratedMessages.BeginTransReadCommitted' 2);                  break;              case IsolationLevel.Unspecified:                  isolationLevel = DefaultIsolationLevel;                  goto case DefaultIsolationLevel;              default:                  throw new NotSupportedException("Isolation level not supported: " + isolationLevel);              }
Magic Number,Npgsql,NpgsqlTransaction,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTransaction.cs,Init,The following statement contains a magic number: switch (isolationLevel)              {              case IsolationLevel.RepeatableRead:              case IsolationLevel.Snapshot:                  _connector.PrependInternalMessage(PregeneratedMessages.BeginTransRepeatableRead' 2);                  break;              case IsolationLevel.Serializable:                  _connector.PrependInternalMessage(PregeneratedMessages.BeginTransSerializable' 2);                  break;              case IsolationLevel.ReadUncommitted:                  // PG doesn't really support ReadUncommitted' it's the same as ReadCommitted. But we still                  // send as if.                  _connector.PrependInternalMessage(PregeneratedMessages.BeginTransReadUncommitted' 2);                  break;              case IsolationLevel.ReadCommitted:                  _connector.PrependInternalMessage(PregeneratedMessages.BeginTransReadCommitted' 2);                  break;              case IsolationLevel.Unspecified:                  isolationLevel = DefaultIsolationLevel;                  goto case DefaultIsolationLevel;              default:                  throw new NotSupportedException("Isolation level not supported: " + isolationLevel);              }
Magic Number,Npgsql,NpgsqlWriteBuffer,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlWriteBuffer.cs,DirectWrite,The following statement contains a magic number: Debug.Assert(WritePosition == 5);
Magic Number,Npgsql,NpgsqlWriteBuffer,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlWriteBuffer.cs,DirectWrite,The following statement contains a magic number: WriteInt32(count + 4);
Magic Number,Npgsql,NpgsqlWriteBuffer,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlWriteBuffer.cs,DirectWrite,The following statement contains a magic number: WritePosition = 5;
Magic Number,Npgsql,NpgsqlWriteBuffer,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlWriteBuffer.cs,WriteNullTerminatedString,The following statement contains a magic number: Debug.Assert(s.All(c => c < 128)' "Method only supports ASCII strings");
Magic Number,Npgsql,NpgsqlWriteBuffer,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlWriteBuffer.cs,StartCopyMode,The following statement contains a magic number: Size -= 5;
Magic Number,Npgsql,NpgsqlWriteBuffer,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlWriteBuffer.cs,EndCopyMode,The following statement contains a magic number: Size += 5;
Magic Number,Npgsql,Entry,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PgPassFile.cs,Parse,The following statement contains a magic number: parts == null || parts.Length != 5
Magic Number,Npgsql,Entry,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PgPassFile.cs,Parse,The following statement contains a magic number: return new Entry(parts[0]' port' parts[2]' parts[3]' parts[4]);
Magic Number,Npgsql,Entry,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PgPassFile.cs,Parse,The following statement contains a magic number: return new Entry(parts[0]' port' parts[2]' parts[3]' parts[4]);
Magic Number,Npgsql,Entry,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PgPassFile.cs,Parse,The following statement contains a magic number: return new Entry(parts[0]' port' parts[2]' parts[3]' parts[4]);
Magic Number,Npgsql,PoolManager,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PoolManager.cs,GetOrAdd,The following statement contains a magic number: var newPools = new (string' ConnectorPool)[_pools.Length * 2];
Magic Number,Npgsql,PregeneratedMessages,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PregeneratedMessages.cs,Generate,The following statement contains a magic number: Debug.Assert(query.All(c => c < 128));
Magic Number,Npgsql,PregeneratedMessages,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PregeneratedMessages.cs,Generate,The following statement contains a magic number: buf.WriteInt32(4 +            // Message length (including self excluding code)                             queryByteLen + // Query byte length                             1);
Magic Number,Npgsql,PreparedStatementManager,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PreparedStatementManager.cs,PreparedStatementManager,The following statement contains a magic number: MaxAutoPrepared > 256
Magic Number,Npgsql,SqlQueryParser,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\SqlQueryParser.cs,ParseRawQuery,The following statement contains a magic number: var tag = sql.Slice(dollarTagStart - 1' dollarTagEnd - dollarTagStart + 2);
Magic Number,Npgsql,SqlQueryParser,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\SqlQueryParser.cs,ParseRawQuery,The following statement contains a magic number: currCharOfs = pos + dollarTagEnd - dollarTagStart + 2;
Magic Number,Npgsql,WindowsUsernameProvider,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\WindowsUsernameProvider.cs,GetUsername,The following statement contains a magic number: cachedUpn = new CachedUpn(upn' DateTime.UtcNow.AddHours(3.0));
Magic Number,Npgsql.BackendMessages,AuthenticationMD5PasswordMessage,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\BackendMessages\AuthenticationMessages.cs,Load,The following statement contains a magic number: var salt = new byte[4];
Magic Number,Npgsql.BackendMessages,AuthenticationMD5PasswordMessage,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\BackendMessages\AuthenticationMessages.cs,Load,The following statement contains a magic number: buf.ReadBytes(salt' 0' 4);
Magic Number,Npgsql.BackendMessages,AuthenticationGSSContinueMessage,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\BackendMessages\AuthenticationMessages.cs,Load,The following statement contains a magic number: len -= 4;
Magic Number,Npgsql.BackendMessages,AuthenticationSCRAMServerFirstMessage,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\BackendMessages\AuthenticationMessages.cs,Load,The following statement contains a magic number: nonce = part.Substring(2);
Magic Number,Npgsql.BackendMessages,AuthenticationSCRAMServerFinalMessage,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\BackendMessages\AuthenticationMessages.cs,Load,The following statement contains a magic number: serverSignature = part.Substring(2);
Magic Number,Npgsql.BackendMessages,CommandCompleteMessage,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\BackendMessages\CommandCompleteMessage.cs,Load,The following statement contains a magic number: switch (bytes[i])              {              case (byte)'I':                  if (!AreEqual(bytes' i' "INSERT "))                      goto default;                  StatementType = StatementType.Insert;                  i += 7;                  OID = (uint) ParseNumber(bytes' ref i);                  i++;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'D':                  if (!AreEqual(bytes' i' "DELETE "))                      goto default;                  StatementType = StatementType.Delete;                  i += 7;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'U':                  if (!AreEqual(bytes' i' "UPDATE "))                      goto default;                  StatementType = StatementType.Update;                  i += 7;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'S':                  if (!AreEqual(bytes' i' "SELECT "))                      goto default;                  StatementType = StatementType.Select;                  i += 7;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'M':                  if (!AreEqual(bytes' i' "MOVE "))                      goto default;                  StatementType = StatementType.Move;                  i += 5;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'F':                  if (!AreEqual(bytes' i' "FETCH "))                      goto default;                  StatementType = StatementType.Fetch;                  i += 6;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'C':                  if (!AreEqual(bytes' i' "COPY "))                      goto default;                  StatementType = StatementType.Copy;                  i += 5;                  Rows = ParseNumber(bytes' ref i);                  return this;                default:                  StatementType = StatementType.Other;                  return this;              }
Magic Number,Npgsql.BackendMessages,CommandCompleteMessage,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\BackendMessages\CommandCompleteMessage.cs,Load,The following statement contains a magic number: switch (bytes[i])              {              case (byte)'I':                  if (!AreEqual(bytes' i' "INSERT "))                      goto default;                  StatementType = StatementType.Insert;                  i += 7;                  OID = (uint) ParseNumber(bytes' ref i);                  i++;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'D':                  if (!AreEqual(bytes' i' "DELETE "))                      goto default;                  StatementType = StatementType.Delete;                  i += 7;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'U':                  if (!AreEqual(bytes' i' "UPDATE "))                      goto default;                  StatementType = StatementType.Update;                  i += 7;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'S':                  if (!AreEqual(bytes' i' "SELECT "))                      goto default;                  StatementType = StatementType.Select;                  i += 7;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'M':                  if (!AreEqual(bytes' i' "MOVE "))                      goto default;                  StatementType = StatementType.Move;                  i += 5;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'F':                  if (!AreEqual(bytes' i' "FETCH "))                      goto default;                  StatementType = StatementType.Fetch;                  i += 6;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'C':                  if (!AreEqual(bytes' i' "COPY "))                      goto default;                  StatementType = StatementType.Copy;                  i += 5;                  Rows = ParseNumber(bytes' ref i);                  return this;                default:                  StatementType = StatementType.Other;                  return this;              }
Magic Number,Npgsql.BackendMessages,CommandCompleteMessage,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\BackendMessages\CommandCompleteMessage.cs,Load,The following statement contains a magic number: switch (bytes[i])              {              case (byte)'I':                  if (!AreEqual(bytes' i' "INSERT "))                      goto default;                  StatementType = StatementType.Insert;                  i += 7;                  OID = (uint) ParseNumber(bytes' ref i);                  i++;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'D':                  if (!AreEqual(bytes' i' "DELETE "))                      goto default;                  StatementType = StatementType.Delete;                  i += 7;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'U':                  if (!AreEqual(bytes' i' "UPDATE "))                      goto default;                  StatementType = StatementType.Update;                  i += 7;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'S':                  if (!AreEqual(bytes' i' "SELECT "))                      goto default;                  StatementType = StatementType.Select;                  i += 7;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'M':                  if (!AreEqual(bytes' i' "MOVE "))                      goto default;                  StatementType = StatementType.Move;                  i += 5;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'F':                  if (!AreEqual(bytes' i' "FETCH "))                      goto default;                  StatementType = StatementType.Fetch;                  i += 6;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'C':                  if (!AreEqual(bytes' i' "COPY "))                      goto default;                  StatementType = StatementType.Copy;                  i += 5;                  Rows = ParseNumber(bytes' ref i);                  return this;                default:                  StatementType = StatementType.Other;                  return this;              }
Magic Number,Npgsql.BackendMessages,CommandCompleteMessage,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\BackendMessages\CommandCompleteMessage.cs,Load,The following statement contains a magic number: switch (bytes[i])              {              case (byte)'I':                  if (!AreEqual(bytes' i' "INSERT "))                      goto default;                  StatementType = StatementType.Insert;                  i += 7;                  OID = (uint) ParseNumber(bytes' ref i);                  i++;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'D':                  if (!AreEqual(bytes' i' "DELETE "))                      goto default;                  StatementType = StatementType.Delete;                  i += 7;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'U':                  if (!AreEqual(bytes' i' "UPDATE "))                      goto default;                  StatementType = StatementType.Update;                  i += 7;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'S':                  if (!AreEqual(bytes' i' "SELECT "))                      goto default;                  StatementType = StatementType.Select;                  i += 7;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'M':                  if (!AreEqual(bytes' i' "MOVE "))                      goto default;                  StatementType = StatementType.Move;                  i += 5;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'F':                  if (!AreEqual(bytes' i' "FETCH "))                      goto default;                  StatementType = StatementType.Fetch;                  i += 6;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'C':                  if (!AreEqual(bytes' i' "COPY "))                      goto default;                  StatementType = StatementType.Copy;                  i += 5;                  Rows = ParseNumber(bytes' ref i);                  return this;                default:                  StatementType = StatementType.Other;                  return this;              }
Magic Number,Npgsql.BackendMessages,CommandCompleteMessage,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\BackendMessages\CommandCompleteMessage.cs,Load,The following statement contains a magic number: switch (bytes[i])              {              case (byte)'I':                  if (!AreEqual(bytes' i' "INSERT "))                      goto default;                  StatementType = StatementType.Insert;                  i += 7;                  OID = (uint) ParseNumber(bytes' ref i);                  i++;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'D':                  if (!AreEqual(bytes' i' "DELETE "))                      goto default;                  StatementType = StatementType.Delete;                  i += 7;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'U':                  if (!AreEqual(bytes' i' "UPDATE "))                      goto default;                  StatementType = StatementType.Update;                  i += 7;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'S':                  if (!AreEqual(bytes' i' "SELECT "))                      goto default;                  StatementType = StatementType.Select;                  i += 7;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'M':                  if (!AreEqual(bytes' i' "MOVE "))                      goto default;                  StatementType = StatementType.Move;                  i += 5;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'F':                  if (!AreEqual(bytes' i' "FETCH "))                      goto default;                  StatementType = StatementType.Fetch;                  i += 6;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'C':                  if (!AreEqual(bytes' i' "COPY "))                      goto default;                  StatementType = StatementType.Copy;                  i += 5;                  Rows = ParseNumber(bytes' ref i);                  return this;                default:                  StatementType = StatementType.Other;                  return this;              }
Magic Number,Npgsql.BackendMessages,CommandCompleteMessage,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\BackendMessages\CommandCompleteMessage.cs,Load,The following statement contains a magic number: switch (bytes[i])              {              case (byte)'I':                  if (!AreEqual(bytes' i' "INSERT "))                      goto default;                  StatementType = StatementType.Insert;                  i += 7;                  OID = (uint) ParseNumber(bytes' ref i);                  i++;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'D':                  if (!AreEqual(bytes' i' "DELETE "))                      goto default;                  StatementType = StatementType.Delete;                  i += 7;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'U':                  if (!AreEqual(bytes' i' "UPDATE "))                      goto default;                  StatementType = StatementType.Update;                  i += 7;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'S':                  if (!AreEqual(bytes' i' "SELECT "))                      goto default;                  StatementType = StatementType.Select;                  i += 7;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'M':                  if (!AreEqual(bytes' i' "MOVE "))                      goto default;                  StatementType = StatementType.Move;                  i += 5;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'F':                  if (!AreEqual(bytes' i' "FETCH "))                      goto default;                  StatementType = StatementType.Fetch;                  i += 6;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'C':                  if (!AreEqual(bytes' i' "COPY "))                      goto default;                  StatementType = StatementType.Copy;                  i += 5;                  Rows = ParseNumber(bytes' ref i);                  return this;                default:                  StatementType = StatementType.Other;                  return this;              }
Magic Number,Npgsql.BackendMessages,CommandCompleteMessage,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\BackendMessages\CommandCompleteMessage.cs,Load,The following statement contains a magic number: switch (bytes[i])              {              case (byte)'I':                  if (!AreEqual(bytes' i' "INSERT "))                      goto default;                  StatementType = StatementType.Insert;                  i += 7;                  OID = (uint) ParseNumber(bytes' ref i);                  i++;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'D':                  if (!AreEqual(bytes' i' "DELETE "))                      goto default;                  StatementType = StatementType.Delete;                  i += 7;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'U':                  if (!AreEqual(bytes' i' "UPDATE "))                      goto default;                  StatementType = StatementType.Update;                  i += 7;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'S':                  if (!AreEqual(bytes' i' "SELECT "))                      goto default;                  StatementType = StatementType.Select;                  i += 7;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'M':                  if (!AreEqual(bytes' i' "MOVE "))                      goto default;                  StatementType = StatementType.Move;                  i += 5;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'F':                  if (!AreEqual(bytes' i' "FETCH "))                      goto default;                  StatementType = StatementType.Fetch;                  i += 6;                  Rows = ParseNumber(bytes' ref i);                  return this;                case (byte)'C':                  if (!AreEqual(bytes' i' "COPY "))                      goto default;                  StatementType = StatementType.Copy;                  i += 5;                  Rows = ParseNumber(bytes' ref i);                  return this;                default:                  StatementType = StatementType.Other;                  return this;              }
Magic Number,Npgsql.BackendMessages,CommandCompleteMessage,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\BackendMessages\CommandCompleteMessage.cs,ParseNumber,The following statement contains a magic number: result = result * 10 + bytes[pos++] - '0';
Magic Number,Npgsql.NameTranslation,NpgsqlSnakeCaseNameTranslator,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NameTranslation\NpgsqlSnakeCaseNameTranslator.cs,ConvertToSnakeCase,The following statement contains a magic number: var builder = new StringBuilder(name.Length + Math.Min(2' name.Length / 5));
Magic Number,Npgsql.NameTranslation,NpgsqlSnakeCaseNameTranslator,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NameTranslation\NpgsqlSnakeCaseNameTranslator.cs,ConvertToSnakeCase,The following statement contains a magic number: var builder = new StringBuilder(name.Length + Math.Min(2' name.Length / 5));
Magic Number,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,NpgsqlDate,The following statement contains a magic number: year == 0 || year < MinYear || year > MaxYear || month < 1 || month > 12 || day < 1 ||                  (day > (IsLeap(year) ? 366 : 365))
Magic Number,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,NpgsqlDate,The following statement contains a magic number: year == 0 || year < MinYear || year > MaxYear || month < 1 || month > 12 || day < 1 ||                  (day > (IsLeap(year) ? 366 : 365))
Magic Number,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,NpgsqlDate,The following statement contains a magic number: year == 0 || year < MinYear || year > MaxYear || month < 1 || month > 12 || day < 1 ||                  (day > (IsLeap(year) ? 366 : 365))
Magic Number,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,DaysForYears,The following statement contains a magic number: return calcYear / 400 * DaysIn4Centuries //Blocks of 400 years with their leap and common years                     + calcYear % 400 / 100 * DaysInCentury //Remaining blocks of 100 years with their leap and common years                     + calcYear % 100 / 4 * DaysIn4Years //Remaining blocks of 4 years with their leap and common years                     + calcYear % 4 * DaysInYear //Remaining years' all common                     + (calcYear < 0 ? -1 : 0);
Magic Number,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,DaysForYears,The following statement contains a magic number: return calcYear / 400 * DaysIn4Centuries //Blocks of 400 years with their leap and common years                     + calcYear % 400 / 100 * DaysInCentury //Remaining blocks of 100 years with their leap and common years                     + calcYear % 100 / 4 * DaysIn4Years //Remaining blocks of 4 years with their leap and common years                     + calcYear % 4 * DaysInYear //Remaining years' all common                     + (calcYear < 0 ? -1 : 0);
Magic Number,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,DaysForYears,The following statement contains a magic number: return calcYear / 400 * DaysIn4Centuries //Blocks of 400 years with their leap and common years                     + calcYear % 400 / 100 * DaysInCentury //Remaining blocks of 100 years with their leap and common years                     + calcYear % 100 / 4 * DaysIn4Years //Remaining blocks of 4 years with their leap and common years                     + calcYear % 4 * DaysInYear //Remaining years' all common                     + (calcYear < 0 ? -1 : 0);
Magic Number,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,DaysForYears,The following statement contains a magic number: return calcYear / 400 * DaysIn4Centuries //Blocks of 400 years with their leap and common years                     + calcYear % 400 / 100 * DaysInCentury //Remaining blocks of 100 years with their leap and common years                     + calcYear % 100 / 4 * DaysIn4Years //Remaining blocks of 4 years with their leap and common years                     + calcYear % 4 * DaysInYear //Remaining years' all common                     + (calcYear < 0 ? -1 : 0);
Magic Number,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,DaysForYears,The following statement contains a magic number: return calcYear / 400 * DaysIn4Centuries //Blocks of 400 years with their leap and common years                     + calcYear % 400 / 100 * DaysInCentury //Remaining blocks of 100 years with their leap and common years                     + calcYear % 100 / 4 * DaysIn4Years //Remaining blocks of 4 years with their leap and common years                     + calcYear % 4 * DaysInYear //Remaining years' all common                     + (calcYear < 0 ? -1 : 0);
Magic Number,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,DaysForYears,The following statement contains a magic number: return calcYear / 400 * DaysIn4Centuries //Blocks of 400 years with their leap and common years                     + calcYear % 400 / 100 * DaysInCentury //Remaining blocks of 100 years with their leap and common years                     + calcYear % 100 / 4 * DaysIn4Years //Remaining blocks of 4 years with their leap and common years                     + calcYear % 4 * DaysInYear //Remaining years' all common                     + (calcYear < 0 ? -1 : 0);
Magic Number,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,IsLeap,The following statement contains a magic number: return (year%4 == 0) && ((year%100 != 0) || (year%400 == 0));
Magic Number,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,IsLeap,The following statement contains a magic number: return (year%4 == 0) && ((year%100 != 0) || (year%400 == 0));
Magic Number,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,IsLeap,The following statement contains a magic number: return (year%4 == 0) && ((year%100 != 0) || (year%400 == 0));
Magic Number,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,AddMonths,The following statement contains a magic number: newMonth -= 12;
Magic Number,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,AddMonths,The following statement contains a magic number: newMonth > 12
Magic Number,NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDate.cs,AddMonths,The following statement contains a magic number: newMonth += 12;
Magic Number,NpgsqlTypes,NpgsqlRange,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlRange.cs,Parse,The following statement contains a magic number: value.Length < 3
Magic Number,NpgsqlTypes,NpgsqlRange,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlRange.cs,Parse,The following statement contains a magic number: var upperSegment = value.Substring(separator + 1' value.Length - separator - 2).Trim();
Magic Number,NpgsqlTypes,NpgsqlTimeSpan,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTimeSpan.cs,Parse,The following statement contains a magic number: str = SafeSubstring(str' idx + 5);
Magic Number,NpgsqlTypes,NpgsqlTimeSpan,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTimeSpan.cs,Parse,The following statement contains a magic number: str = SafeSubstring(str' idx + 4);
Magic Number,NpgsqlTypes,NpgsqlTimeSpan,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTimeSpan.cs,Parse,The following statement contains a magic number: str = SafeSubstring(str' idx + 4).Trim();
Magic Number,NpgsqlTypes,NpgsqlTimeSpan,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTimeSpan.cs,Parse,The following statement contains a magic number: switch (parts.Length) //One of those times that fall-through would actually be good.                      {                      case 1:                          hours = int.Parse(parts[0]);                          break;                      case 2:                          hours = int.Parse(parts[0]);                          minutes = int.Parse(parts[1]);                          break;                      default:                          hours = int.Parse(parts[0]);                          minutes = int.Parse(parts[1]);                          seconds = decimal.Parse(parts[2]' System.Globalization.CultureInfo.InvariantCulture.NumberFormat);                          break;                      }
Magic Number,NpgsqlTypes,NpgsqlTimeSpan,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTimeSpan.cs,Parse,The following statement contains a magic number: switch (parts.Length) //One of those times that fall-through would actually be good.                      {                      case 1:                          hours = int.Parse(parts[0]);                          break;                      case 2:                          hours = int.Parse(parts[0]);                          minutes = int.Parse(parts[1]);                          break;                      default:                          hours = int.Parse(parts[0]);                          minutes = int.Parse(parts[1]);                          seconds = decimal.Parse(parts[2]' System.Globalization.CultureInfo.InvariantCulture.NumberFormat);                          break;                      }
Magic Number,NpgsqlTypes,NpgsqlTimeSpan,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTimeSpan.cs,ToString,The following statement contains a magic number: var seconds = _ticks / (decimal)TicksPerSecond - (_ticks / TicksPerMinute) * 60;
Magic Number,NpgsqlTypes,NpgsqlTsQuery,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTsQuery.cs,Parse,The following statement contains a magic number: valStack.Count < 2
Magic Number,NpgsqlTypes,NpgsqlTsQuery,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTsQuery.cs,Parse,The following statement contains a magic number: valStack.Count < 2 || opStack.Peek() == '!'
Magic Number,NpgsqlTypes,NpgsqlTsQuery,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTsQuery.cs,Parse,The following statement contains a magic number: switch (tsOp)                  {                  case '&':                      if (valStack.Count < 2)                          throw new FormatException("Syntax error in tsquery");                      var andRight = valStack.Pop();                      var andLeft = valStack.Pop();                      valStack.Push(new NpgsqlTsQueryAnd(andLeft' andRight));                      opStack.Pop();                      break;                    case '!':                      if (valStack.Count == 0)                          throw new FormatException("Syntax error in tsquery");                      valStack.Push(new NpgsqlTsQueryNot(valStack.Pop()));                      opStack.Pop();                      break;                    case '<':                      if (valStack.Count < 2)                          throw new FormatException("Syntax error in tsquery");                      var followedByRight = valStack.Pop();                      var followedByLeft = valStack.Pop();                      valStack.Push(                          new NpgsqlTsQueryFollowedBy(                              followedByLeft'                              tsOp.FollowedByDistance'                              followedByRight));                      opStack.Pop();                      break;                    default:                      processTightBindingOperator = false;                      break;                  }
Magic Number,NpgsqlTypes,NpgsqlTsQuery,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTsQuery.cs,Parse,The following statement contains a magic number: switch (tsOp)                  {                  case '&':                      if (valStack.Count < 2)                          throw new FormatException("Syntax error in tsquery");                      var andRight = valStack.Pop();                      var andLeft = valStack.Pop();                      valStack.Push(new NpgsqlTsQueryAnd(andLeft' andRight));                      opStack.Pop();                      break;                    case '!':                      if (valStack.Count == 0)                          throw new FormatException("Syntax error in tsquery");                      valStack.Push(new NpgsqlTsQueryNot(valStack.Pop()));                      opStack.Pop();                      break;                    case '<':                      if (valStack.Count < 2)                          throw new FormatException("Syntax error in tsquery");                      var followedByRight = valStack.Pop();                      var followedByLeft = valStack.Pop();                      valStack.Push(                          new NpgsqlTsQueryFollowedBy(                              followedByLeft'                              tsOp.FollowedByDistance'                              followedByRight));                      opStack.Pop();                      break;                    default:                      processTightBindingOperator = false;                      break;                  }
Magic Number,NpgsqlTypes,WordEntryPos,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTsVector.cs,WordEntryPos,The following statement contains a magic number: pos = (1 << 14) - 1;
Magic Number,NpgsqlTypes,WordEntryPos,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTsVector.cs,WordEntryPos,The following statement contains a magic number: pos >> 14 != 0
Magic Number,NpgsqlTypes,WordEntryPos,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTsVector.cs,WordEntryPos,The following statement contains a magic number: Value = (short)(((int)weight << 14) | pos);
Magic Number,NpgsqlTypes,NpgsqlPoint,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,Parse,The following statement contains a magic number: return new NpgsqlPoint(double.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                                     double.Parse(m.Groups[2].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat));
Magic Number,NpgsqlTypes,NpgsqlLine,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,Parse,The following statement contains a magic number: return new NpgsqlLine(                  double.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                  double.Parse(m.Groups[2].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                  double.Parse(m.Groups[3].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)              );
Magic Number,NpgsqlTypes,NpgsqlLine,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,Parse,The following statement contains a magic number: return new NpgsqlLine(                  double.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                  double.Parse(m.Groups[2].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                  double.Parse(m.Groups[3].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)              );
Magic Number,NpgsqlTypes,NpgsqlLSeg,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,Parse,The following statement contains a magic number: return new NpgsqlLSeg(                  double.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                  double.Parse(m.Groups[2].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                  double.Parse(m.Groups[3].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                  double.Parse(m.Groups[4].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)              );
Magic Number,NpgsqlTypes,NpgsqlLSeg,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,Parse,The following statement contains a magic number: return new NpgsqlLSeg(                  double.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                  double.Parse(m.Groups[2].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                  double.Parse(m.Groups[3].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                  double.Parse(m.Groups[4].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)              );
Magic Number,NpgsqlTypes,NpgsqlLSeg,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,Parse,The following statement contains a magic number: return new NpgsqlLSeg(                  double.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                  double.Parse(m.Groups[2].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                  double.Parse(m.Groups[3].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                  double.Parse(m.Groups[4].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)              );
Magic Number,NpgsqlTypes,NpgsqlBox,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,Parse,The following statement contains a magic number: return new NpgsqlBox(                  new NpgsqlPoint(double.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                                  double.Parse(m.Groups[2].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat))'                  new NpgsqlPoint(double.Parse(m.Groups[3].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                                  double.Parse(m.Groups[4].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat))              );
Magic Number,NpgsqlTypes,NpgsqlBox,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,Parse,The following statement contains a magic number: return new NpgsqlBox(                  new NpgsqlPoint(double.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                                  double.Parse(m.Groups[2].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat))'                  new NpgsqlPoint(double.Parse(m.Groups[3].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                                  double.Parse(m.Groups[4].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat))              );
Magic Number,NpgsqlTypes,NpgsqlBox,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,Parse,The following statement contains a magic number: return new NpgsqlBox(                  new NpgsqlPoint(double.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                                  double.Parse(m.Groups[2].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat))'                  new NpgsqlPoint(double.Parse(m.Groups[3].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                                  double.Parse(m.Groups[4].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat))              );
Magic Number,NpgsqlTypes,NpgsqlPath,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,GetHashCode,The following statement contains a magic number: var ret = 266370105;
Magic Number,NpgsqlTypes,NpgsqlPath,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,Parse,The following statement contains a magic number: i = i2 + 2;
Magic Number,NpgsqlTypes,NpgsqlPolygon,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,GetHashCode,The following statement contains a magic number: var ret = 266370105;
Magic Number,NpgsqlTypes,NpgsqlPolygon,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,Parse,The following statement contains a magic number: i = i2 + 2;
Magic Number,NpgsqlTypes,NpgsqlCircle,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,Parse,The following statement contains a magic number: return new NpgsqlCircle(                  double.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                  double.Parse(m.Groups[2].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                  double.Parse(m.Groups[3].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)              );
Magic Number,NpgsqlTypes,NpgsqlCircle,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,Parse,The following statement contains a magic number: return new NpgsqlCircle(                  double.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                  double.Parse(m.Groups[2].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'                  double.Parse(m.Groups[3].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)              );
Magic Number,NpgsqlTypes,NpgsqlInet,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,NpgsqlInet,The following statement contains a magic number: Netmask = address.AddressFamily == AddressFamily.InterNetwork ? 32 : 128;
Magic Number,NpgsqlTypes,NpgsqlInet,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,NpgsqlInet,The following statement contains a magic number: Netmask = address.AddressFamily == AddressFamily.InterNetwork ? 32 : 128;
Magic Number,NpgsqlTypes,NpgsqlInet,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,ToString,The following statement contains a magic number: (Address.AddressFamily == AddressFamily.InterNetwork   && Netmask == 32) ||                  (Address.AddressFamily == AddressFamily.InterNetworkV6 && Netmask == 128)
Magic Number,NpgsqlTypes,NpgsqlInet,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,ToString,The following statement contains a magic number: (Address.AddressFamily == AddressFamily.InterNetwork   && Netmask == 32) ||                  (Address.AddressFamily == AddressFamily.InterNetworkV6 && Netmask == 128)
Magic Number,NpgsqlTypes,NpgsqlInet,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlTypes.cs,ToIPAddress,The following statement contains a magic number: inet.Netmask != 32
Magic Number,Npgsql.PostgresTypes,PostgresBaseType,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresTypes\PostgresBaseType.cs,GetFacets,The following statement contains a magic number: switch (Name)              {              case "character":                  return new PostgresFacets(typeModifier - 4' null' null);              case "character varying":                  return new PostgresFacets(typeModifier - 4' null' null);  // Max length              case "numeric":              case "decimal":                  // See http://stackoverflow.com/questions/3350148/where-are-numeric-precision-and-scale-for-a-field-found-in-the-pg-catalog-tables                  var precision = ((typeModifier - 4) >> 16) & 65535;                  var scale = (typeModifier - 4) & 65535;                  return new PostgresFacets(null' precision' scale == 0 ? (int?)null : scale);              case "timestamp":              case "time":              case "interval":                  precision = typeModifier & 0xFFFF;                  return new PostgresFacets(null' precision' null);              case "timestamp with time zone":                  precision = typeModifier & 0xFFFF;                  return new PostgresFacets(null' precision' null);              case "time with time zone":                  precision = typeModifier & 0xFFFF;                  return new PostgresFacets(null' precision' null);              case "bit":              case "bit varying":                  return new PostgresFacets(typeModifier' null' null);              default:                  return PostgresFacets.None;              }
Magic Number,Npgsql.PostgresTypes,PostgresBaseType,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresTypes\PostgresBaseType.cs,GetFacets,The following statement contains a magic number: switch (Name)              {              case "character":                  return new PostgresFacets(typeModifier - 4' null' null);              case "character varying":                  return new PostgresFacets(typeModifier - 4' null' null);  // Max length              case "numeric":              case "decimal":                  // See http://stackoverflow.com/questions/3350148/where-are-numeric-precision-and-scale-for-a-field-found-in-the-pg-catalog-tables                  var precision = ((typeModifier - 4) >> 16) & 65535;                  var scale = (typeModifier - 4) & 65535;                  return new PostgresFacets(null' precision' scale == 0 ? (int?)null : scale);              case "timestamp":              case "time":              case "interval":                  precision = typeModifier & 0xFFFF;                  return new PostgresFacets(null' precision' null);              case "timestamp with time zone":                  precision = typeModifier & 0xFFFF;                  return new PostgresFacets(null' precision' null);              case "time with time zone":                  precision = typeModifier & 0xFFFF;                  return new PostgresFacets(null' precision' null);              case "bit":              case "bit varying":                  return new PostgresFacets(typeModifier' null' null);              default:                  return PostgresFacets.None;              }
Magic Number,Npgsql.PostgresTypes,PostgresBaseType,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresTypes\PostgresBaseType.cs,GetFacets,The following statement contains a magic number: switch (Name)              {              case "character":                  return new PostgresFacets(typeModifier - 4' null' null);              case "character varying":                  return new PostgresFacets(typeModifier - 4' null' null);  // Max length              case "numeric":              case "decimal":                  // See http://stackoverflow.com/questions/3350148/where-are-numeric-precision-and-scale-for-a-field-found-in-the-pg-catalog-tables                  var precision = ((typeModifier - 4) >> 16) & 65535;                  var scale = (typeModifier - 4) & 65535;                  return new PostgresFacets(null' precision' scale == 0 ? (int?)null : scale);              case "timestamp":              case "time":              case "interval":                  precision = typeModifier & 0xFFFF;                  return new PostgresFacets(null' precision' null);              case "timestamp with time zone":                  precision = typeModifier & 0xFFFF;                  return new PostgresFacets(null' precision' null);              case "time with time zone":                  precision = typeModifier & 0xFFFF;                  return new PostgresFacets(null' precision' null);              case "bit":              case "bit varying":                  return new PostgresFacets(typeModifier' null' null);              default:                  return PostgresFacets.None;              }
Magic Number,Npgsql.PostgresTypes,PostgresBaseType,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresTypes\PostgresBaseType.cs,GetFacets,The following statement contains a magic number: switch (Name)              {              case "character":                  return new PostgresFacets(typeModifier - 4' null' null);              case "character varying":                  return new PostgresFacets(typeModifier - 4' null' null);  // Max length              case "numeric":              case "decimal":                  // See http://stackoverflow.com/questions/3350148/where-are-numeric-precision-and-scale-for-a-field-found-in-the-pg-catalog-tables                  var precision = ((typeModifier - 4) >> 16) & 65535;                  var scale = (typeModifier - 4) & 65535;                  return new PostgresFacets(null' precision' scale == 0 ? (int?)null : scale);              case "timestamp":              case "time":              case "interval":                  precision = typeModifier & 0xFFFF;                  return new PostgresFacets(null' precision' null);              case "timestamp with time zone":                  precision = typeModifier & 0xFFFF;                  return new PostgresFacets(null' precision' null);              case "time with time zone":                  precision = typeModifier & 0xFFFF;                  return new PostgresFacets(null' precision' null);              case "bit":              case "bit varying":                  return new PostgresFacets(typeModifier' null' null);              default:                  return PostgresFacets.None;              }
Magic Number,Npgsql.PostgresTypes,PostgresBaseType,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresTypes\PostgresBaseType.cs,GetFacets,The following statement contains a magic number: switch (Name)              {              case "character":                  return new PostgresFacets(typeModifier - 4' null' null);              case "character varying":                  return new PostgresFacets(typeModifier - 4' null' null);  // Max length              case "numeric":              case "decimal":                  // See http://stackoverflow.com/questions/3350148/where-are-numeric-precision-and-scale-for-a-field-found-in-the-pg-catalog-tables                  var precision = ((typeModifier - 4) >> 16) & 65535;                  var scale = (typeModifier - 4) & 65535;                  return new PostgresFacets(null' precision' scale == 0 ? (int?)null : scale);              case "timestamp":              case "time":              case "interval":                  precision = typeModifier & 0xFFFF;                  return new PostgresFacets(null' precision' null);              case "timestamp with time zone":                  precision = typeModifier & 0xFFFF;                  return new PostgresFacets(null' precision' null);              case "time with time zone":                  precision = typeModifier & 0xFFFF;                  return new PostgresFacets(null' precision' null);              case "bit":              case "bit varying":                  return new PostgresFacets(typeModifier' null' null);              default:                  return PostgresFacets.None;              }
Magic Number,Npgsql.PostgresTypes,PostgresBaseType,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresTypes\PostgresBaseType.cs,GetFacets,The following statement contains a magic number: switch (Name)              {              case "character":                  return new PostgresFacets(typeModifier - 4' null' null);              case "character varying":                  return new PostgresFacets(typeModifier - 4' null' null);  // Max length              case "numeric":              case "decimal":                  // See http://stackoverflow.com/questions/3350148/where-are-numeric-precision-and-scale-for-a-field-found-in-the-pg-catalog-tables                  var precision = ((typeModifier - 4) >> 16) & 65535;                  var scale = (typeModifier - 4) & 65535;                  return new PostgresFacets(null' precision' scale == 0 ? (int?)null : scale);              case "timestamp":              case "time":              case "interval":                  precision = typeModifier & 0xFFFF;                  return new PostgresFacets(null' precision' null);              case "timestamp with time zone":                  precision = typeModifier & 0xFFFF;                  return new PostgresFacets(null' precision' null);              case "time with time zone":                  precision = typeModifier & 0xFFFF;                  return new PostgresFacets(null' precision' null);              case "bit":              case "bit varying":                  return new PostgresFacets(typeModifier' null' null);              default:                  return PostgresFacets.None;              }
Magic Number,Npgsql.PostgresTypes,PostgresBaseType,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresTypes\PostgresBaseType.cs,GetFacets,The following statement contains a magic number: switch (Name)              {              case "character":                  return new PostgresFacets(typeModifier - 4' null' null);              case "character varying":                  return new PostgresFacets(typeModifier - 4' null' null);  // Max length              case "numeric":              case "decimal":                  // See http://stackoverflow.com/questions/3350148/where-are-numeric-precision-and-scale-for-a-field-found-in-the-pg-catalog-tables                  var precision = ((typeModifier - 4) >> 16) & 65535;                  var scale = (typeModifier - 4) & 65535;                  return new PostgresFacets(null' precision' scale == 0 ? (int?)null : scale);              case "timestamp":              case "time":              case "interval":                  precision = typeModifier & 0xFFFF;                  return new PostgresFacets(null' precision' null);              case "timestamp with time zone":                  precision = typeModifier & 0xFFFF;                  return new PostgresFacets(null' precision' null);              case "time with time zone":                  precision = typeModifier & 0xFFFF;                  return new PostgresFacets(null' precision' null);              case "bit":              case "bit varying":                  return new PostgresFacets(typeModifier' null' null);              default:                  return PostgresFacets.None;              }
Magic Number,Npgsql.PostgresTypes,PostgresFacets,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresTypes\PostgresFacets.cs,GetHashCode,The following statement contains a magic number: hashcode = (hashcode * 397) ^ (Precision?.GetHashCode() ?? 0);
Magic Number,Npgsql.PostgresTypes,PostgresFacets,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PostgresTypes\PostgresFacets.cs,GetHashCode,The following statement contains a magic number: hashcode = (hashcode * 397) ^ (Scale?.GetHashCode() ?? 0);
Magic Number,Npgsql.TypeHandlers,ArrayHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,ReadArray,The following statement contains a magic number: await buf.Ensure(12' async);
Magic Number,Npgsql.TypeHandlers,ArrayHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,ReadArray,The following statement contains a magic number: await buf.Ensure(dimensions * 8' async);
Magic Number,Npgsql.TypeHandlers,ArrayHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,ReadList,The following statement contains a magic number: await buf.Ensure(12' async);
Magic Number,Npgsql.TypeHandlers,ArrayHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,ReadList,The following statement contains a magic number: await buf.Ensure(8' async);
Magic Number,Npgsql.TypeHandlers,ArrayHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,ValidateAndGetLengthGeneric,The following statement contains a magic number: var len =                  4 +              // dimensions                  4 +              // has_nulls (unused)                  4 +              // type OID                  1 * 8 +          // number of dimensions (1) * (length + lower bound)                  4 * value.Count;
Magic Number,Npgsql.TypeHandlers,ArrayHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,ValidateAndGetLengthGeneric,The following statement contains a magic number: var len =                  4 +              // dimensions                  4 +              // has_nulls (unused)                  4 +              // type OID                  1 * 8 +          // number of dimensions (1) * (length + lower bound)                  4 * value.Count;
Magic Number,Npgsql.TypeHandlers,ArrayHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,ValidateAndGetLengthGeneric,The following statement contains a magic number: var len =                  4 +              // dimensions                  4 +              // has_nulls (unused)                  4 +              // type OID                  1 * 8 +          // number of dimensions (1) * (length + lower bound)                  4 * value.Count;
Magic Number,Npgsql.TypeHandlers,ArrayHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,ValidateAndGetLengthGeneric,The following statement contains a magic number: var len =                  4 +              // dimensions                  4 +              // has_nulls (unused)                  4 +              // type OID                  1 * 8 +          // number of dimensions (1) * (length + lower bound)                  4 * value.Count;
Magic Number,Npgsql.TypeHandlers,ArrayHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,ValidateAndGetLengthGeneric,The following statement contains a magic number: var len =                  4 +              // dimensions                  4 +              // has_nulls (unused)                  4 +              // type OID                  1 * 8 +          // number of dimensions (1) * (length + lower bound)                  4 * value.Count;
Magic Number,Npgsql.TypeHandlers,ArrayHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,ValidateAndGetLengthNonGeneric,The following statement contains a magic number: var len =                  4 +              // dimensions                  4 +              // has_nulls (unused)                  4 +              // type OID                  dimensions * 8 + // number of dimensions * (length + lower bound)                  4 * value.Count;
Magic Number,Npgsql.TypeHandlers,ArrayHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,ValidateAndGetLengthNonGeneric,The following statement contains a magic number: var len =                  4 +              // dimensions                  4 +              // has_nulls (unused)                  4 +              // type OID                  dimensions * 8 + // number of dimensions * (length + lower bound)                  4 * value.Count;
Magic Number,Npgsql.TypeHandlers,ArrayHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,ValidateAndGetLengthNonGeneric,The following statement contains a magic number: var len =                  4 +              // dimensions                  4 +              // has_nulls (unused)                  4 +              // type OID                  dimensions * 8 + // number of dimensions * (length + lower bound)                  4 * value.Count;
Magic Number,Npgsql.TypeHandlers,ArrayHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,ValidateAndGetLengthNonGeneric,The following statement contains a magic number: var len =                  4 +              // dimensions                  4 +              // has_nulls (unused)                  4 +              // type OID                  dimensions * 8 + // number of dimensions * (length + lower bound)                  4 * value.Count;
Magic Number,Npgsql.TypeHandlers,ArrayHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,ValidateAndGetLengthNonGeneric,The following statement contains a magic number: var len =                  4 +              // dimensions                  4 +              // has_nulls (unused)                  4 +              // type OID                  dimensions * 8 + // number of dimensions * (length + lower bound)                  4 * value.Count;
Magic Number,Npgsql.TypeHandlers,ArrayHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,WriteWithLengthInternal,The following statement contains a magic number: buf.WriteSpaceLeft < 4
Magic Number,Npgsql.TypeHandlers,ArrayHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,WriteGeneric,The following statement contains a magic number: var len =                  4 +    // dimensions                  4 +    // has_nulls (unused)                  4 +    // type OID                  1 * 8;
Magic Number,Npgsql.TypeHandlers,ArrayHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,WriteGeneric,The following statement contains a magic number: var len =                  4 +    // dimensions                  4 +    // has_nulls (unused)                  4 +    // type OID                  1 * 8;
Magic Number,Npgsql.TypeHandlers,ArrayHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,WriteGeneric,The following statement contains a magic number: var len =                  4 +    // dimensions                  4 +    // has_nulls (unused)                  4 +    // type OID                  1 * 8;
Magic Number,Npgsql.TypeHandlers,ArrayHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,WriteGeneric,The following statement contains a magic number: var len =                  4 +    // dimensions                  4 +    // has_nulls (unused)                  4 +    // type OID                  1 * 8;
Magic Number,Npgsql.TypeHandlers,ArrayHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,WriteNonGeneric,The following statement contains a magic number: var len =                  4 +               // ndim                  4 +               // has_nulls                  4 +               // element_oid                  dimensions * 8;
Magic Number,Npgsql.TypeHandlers,ArrayHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,WriteNonGeneric,The following statement contains a magic number: var len =                  4 +               // ndim                  4 +               // has_nulls                  4 +               // element_oid                  dimensions * 8;
Magic Number,Npgsql.TypeHandlers,ArrayHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,WriteNonGeneric,The following statement contains a magic number: var len =                  4 +               // ndim                  4 +               // has_nulls                  4 +               // element_oid                  dimensions * 8;
Magic Number,Npgsql.TypeHandlers,ArrayHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\ArrayHandler.cs,WriteNonGeneric,The following statement contains a magic number: var len =                  4 +               // ndim                  4 +               // has_nulls                  4 +               // element_oid                  dimensions * 8;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Read,The following statement contains a magic number: await buf.Ensure(4' async);
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Read,The following statement contains a magic number: var bytesLeft = len - 4;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Read,The following statement contains a magic number: result[bitNo++] = (chunk & (1 << 7)) != 0;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Read,The following statement contains a magic number: result[bitNo++] = (chunk & (1 << 6)) != 0;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Read,The following statement contains a magic number: result[bitNo++] = (chunk & (1 << 5)) != 0;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Read,The following statement contains a magic number: result[bitNo++] = (chunk & (1 << 4)) != 0;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Read,The following statement contains a magic number: result[bitNo++] = (chunk & (1 << 3)) != 0;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Read,The following statement contains a magic number: result[bitNo++] = (chunk & (1 << 2)) != 0;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Read,The following statement contains a magic number: i >= 8 - remainder
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Read,The following statement contains a magic number: len > 4 + 4
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Read,The following statement contains a magic number: len > 4 + 4
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Read,The following statement contains a magic number: await buf.Ensure(4 + 4' async);
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Read,The following statement contains a magic number: await buf.Ensure(4 + 4' async);
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Read,The following statement contains a magic number: await buf.Ensure(5' async);
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Read,The following statement contains a magic number: buf.Skip(len - 4);
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Read,The following statement contains a magic number: return (b & 128) != 0;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,ValidateAndGetLength,The following statement contains a magic number: return 4 + (value.Length + 7) / 8;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,ValidateAndGetLength,The following statement contains a magic number: return 4 + (value.Length + 7) / 8;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,ValidateAndGetLength,The following statement contains a magic number: return 4 + (value.Length + 7) / 8;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The following statement contains a magic number: buf.WriteSpaceLeft < 4
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The following statement contains a magic number: var byteLen = (value.Length + 7) / 8;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The following statement contains a magic number: var byteLen = (value.Length + 7) / 8;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The following statement contains a magic number: var bitPos = pos*8;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The following statement contains a magic number: b += (value[bitPos + i] ? 1 : 0) << (8 - i - 1);
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The following statement contains a magic number: i < Math.Min(8' value.Length - bitPos)
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The following statement contains a magic number: buf.WriteSpaceLeft < 8
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The following statement contains a magic number: buf.WriteSpaceLeft < 5
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The following statement contains a magic number: buf.WriteSpaceLeft < 4
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The following statement contains a magic number: var byteLen = (value.Length + 7) / 8;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The following statement contains a magic number: var byteLen = (value.Length + 7) / 8;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The following statement contains a magic number: b += (value[pos++] - '0') << 7;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The following statement contains a magic number: b += (value[pos++] - '0') << 6;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The following statement contains a magic number: b += (value[pos++] - '0') << 5;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The following statement contains a magic number: b += (value[pos++] - '0') << 4;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The following statement contains a magic number: b += (value[pos++] - '0') << 3;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The following statement contains a magic number: b += (value[pos++] - '0') << 2;
Magic Number,Npgsql.TypeHandlers,BitStringHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\BitStringHandler.cs,Write,The following statement contains a magic number: i >= 8 - remainder
Magic Number,Npgsql.TypeHandlers,HstoreHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\HstoreHandler.cs,ValidateAndGetLength,The following statement contains a magic number: var totalLen = 4;
Magic Number,Npgsql.TypeHandlers,HstoreHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\HstoreHandler.cs,ValidateAndGetLength,The following statement contains a magic number: totalLen += 8;
Magic Number,Npgsql.TypeHandlers,HstoreHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\HstoreHandler.cs,Write,The following statement contains a magic number: buf.WriteSpaceLeft < 4
Magic Number,Npgsql.TypeHandlers,HstoreHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\HstoreHandler.cs,Read,The following statement contains a magic number: await buf.Ensure(4' async);
Magic Number,Npgsql.TypeHandlers,HstoreHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\HstoreHandler.cs,Read,The following statement contains a magic number: await buf.Ensure(4' async);
Magic Number,Npgsql.TypeHandlers,HstoreHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\HstoreHandler.cs,Read,The following statement contains a magic number: await buf.Ensure(4' async);
Magic Number,Npgsql.TypeHandlers,JsonHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\JsonHandler.cs,WriteObjectWithLength,The following statement contains a magic number: buf.WriteSpaceLeft < 4
Magic Number,Npgsql.TypeHandlers,RangeHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\RangeHandler.cs,ValidateAndGetLength,The following statement contains a magic number: totalLen += 4 + _elementHandler.ValidateAndGetLength(value.LowerBound' ref lengthCache' null);
Magic Number,Npgsql.TypeHandlers,RangeHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\RangeHandler.cs,ValidateAndGetLength,The following statement contains a magic number: totalLen += 4 + _elementHandler.ValidateAndGetLength(value.UpperBound' ref lengthCache' null);
Magic Number,Npgsql.TypeHandlers,RangeHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\RangeHandler.cs,WriteWithLengthInternal,The following statement contains a magic number: buf.WriteSpaceLeft < 4
Magic Number,Npgsql.TypeHandlers,RangeHandler<TElement>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\RangeHandler.cs,WriteWithLengthInternal,The following statement contains a magic number: buf.WriteSpaceLeft < 4
Magic Number,Npgsql.TypeHandlers,RecordHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\RecordHandler.cs,Read,The following statement contains a magic number: await buf.Ensure(4' async);
Magic Number,Npgsql.TypeHandlers,RecordHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\RecordHandler.cs,Read,The following statement contains a magic number: await buf.Ensure(8' async);
Magic Number,Npgsql.TypeHandlers,UnknownTypeHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\UnknownTypeHandler.cs,WriteObjectWithLength,The following statement contains a magic number: buf.WriteSpaceLeft < 4
Magic Number,Npgsql.TypeHandlers,UnmappedEnumHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\UnmappedEnumHandler.cs,WriteObjectWithLength,The following statement contains a magic number: buf.WriteSpaceLeft < 4
Magic Number,Npgsql.TypeHandlers.CompositeHandlers,CompositeConstructorHandler<TComposite>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\CompositeHandlers\CompositeConstructorHandler.cs,Create,The following statement contains a magic number: const int maxGenericParameters = 8;
Magic Number,Npgsql.TypeHandlers.CompositeHandlers,CompositeHandler<T>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\CompositeHandlers\CompositeHandler.cs,ValidateAndGetLength,The following statement contains a magic number: var length = sizeof(int) + sizeof(int) * 2 * _memberHandlers.Length;
Magic Number,Npgsql.TypeHandlers.DateTimeHandlers,DateHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\DateTimeHandlers\DateHandler.cs,ReadPsv,The following statement contains a magic number: return binDate switch              {                  int.MaxValue => NpgsqlDate.Infinity'                  int.MinValue => NpgsqlDate.NegativeInfinity'                  _            => new NpgsqlDate(binDate + 730119)              };
Magic Number,Npgsql.TypeHandlers.DateTimeHandlers,IntervalHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\DateTimeHandlers\IntervalHandler.cs,ReadPsv,The following statement contains a magic number: return new NpgsqlTimeSpan(month' day' ticks * 10);
Magic Number,Npgsql.TypeHandlers.DateTimeHandlers,IntervalHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\DateTimeHandlers\IntervalHandler.cs,Write,The following statement contains a magic number: buf.WriteInt64(value.Ticks / 10);
Magic Number,Npgsql.TypeHandlers.DateTimeHandlers,TimestampHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\DateTimeHandlers\TimestampHandler.cs,ReadTimeStamp,The following statement contains a magic number: var date = (int)(value / 86400000000L);
Magic Number,Npgsql.TypeHandlers.DateTimeHandlers,TimestampHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\DateTimeHandlers\TimestampHandler.cs,ReadTimeStamp,The following statement contains a magic number: var time = value % 86400000000L;
Magic Number,Npgsql.TypeHandlers.DateTimeHandlers,TimestampHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\DateTimeHandlers\TimestampHandler.cs,ReadTimeStamp,The following statement contains a magic number: date += 730119;
Magic Number,Npgsql.TypeHandlers.DateTimeHandlers,TimestampHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\DateTimeHandlers\TimestampHandler.cs,ReadTimeStamp,The following statement contains a magic number: time *= 10;
Magic Number,Npgsql.TypeHandlers.DateTimeHandlers,TimestampHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\DateTimeHandlers\TimestampHandler.cs,Write,The following statement contains a magic number: var uSecsTime = value.Time.Ticks / 10;
Magic Number,Npgsql.TypeHandlers.DateTimeHandlers,TimestampHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\DateTimeHandlers\TimestampHandler.cs,Write,The following statement contains a magic number: var uSecsDate = (value.Date.DaysSinceEra - 730119) * 86400000000L;
Magic Number,Npgsql.TypeHandlers.DateTimeHandlers,TimestampHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\DateTimeHandlers\TimestampHandler.cs,Write,The following statement contains a magic number: var uSecsDate = (value.Date.DaysSinceEra - 730119) * 86400000000L;
Magic Number,Npgsql.TypeHandlers.DateTimeHandlers,TimestampHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\DateTimeHandlers\TimestampHandler.cs,Write,The following statement contains a magic number: value >= new NpgsqlDateTime(2000' 1' 1' 0' 0' 0)
Magic Number,Npgsql.TypeHandlers.DateTimeHandlers,TimeTzHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\DateTimeHandlers\TimeTzHandler.cs,Read,The following statement contains a magic number: var ticks = buf.ReadInt64() * 10;
Magic Number,Npgsql.TypeHandlers.DateTimeHandlers,TimeTzHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\DateTimeHandlers\TimeTzHandler.cs,Write,The following statement contains a magic number: buf.WriteInt64(value.TimeOfDay.Ticks / 10);
Magic Number,Npgsql.TypeHandlers.DateTimeHandlers,TimeTzHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\DateTimeHandlers\TimeTzHandler.cs,Write,The following statement contains a magic number: buf.WriteInt64(value.TimeOfDay.Ticks / 10);
Magic Number,Npgsql.TypeHandlers.DateTimeHandlers,TimeTzHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\DateTimeHandlers\TimeTzHandler.cs,Write,The following statement contains a magic number: buf.WriteInt64(value.Ticks / 10);
Magic Number,Npgsql.TypeHandlers.FullTextSearchHandlers,TsQueryHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsQueryHandler.cs,Read,The following statement contains a magic number: await buf.Ensure(4' async);
Magic Number,Npgsql.TypeHandlers.FullTextSearchHandlers,TsQueryHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsQueryHandler.cs,Read,The following statement contains a magic number: len -= 4;
Magic Number,Npgsql.TypeHandlers.FullTextSearchHandlers,TsQueryHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsQueryHandler.cs,Read,The following statement contains a magic number: var isOper = buf.ReadByte() == 2;
Magic Number,Npgsql.TypeHandlers.FullTextSearchHandlers,TsQueryHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsQueryHandler.cs,GetNodeLength,The following statement contains a magic number: switch (node.Kind)              {              case NpgsqlTsQuery.NodeKind.Lexeme:                  var strLen = Encoding.UTF8.GetByteCount(((NpgsqlTsQueryLexeme)node).Text);                  if (strLen > 2046)                      throw new InvalidCastException("Lexeme text too long. Must be at most 2046 bytes in UTF8.");                  return 4 + strLen;              case NpgsqlTsQuery.NodeKind.And:              case NpgsqlTsQuery.NodeKind.Or:                  return 2 + GetNodeLength(((NpgsqlTsQueryBinOp)node).Left) + GetNodeLength(((NpgsqlTsQueryBinOp)node).Right);              case NpgsqlTsQuery.NodeKind.Phrase:                  // 2 additional bytes for uint16 phrase operator "distance" field.                  return 4 + GetNodeLength(((NpgsqlTsQueryBinOp)node).Left) + GetNodeLength(((NpgsqlTsQueryBinOp)node).Right);              case NpgsqlTsQuery.NodeKind.Not:                  return 2 + GetNodeLength(((NpgsqlTsQueryNot)node).Child);              case NpgsqlTsQuery.NodeKind.Empty:                  throw new InvalidOperationException("Empty tsquery nodes must be top-level");              default:                  throw new InvalidOperationException("Illegal node kind: " + node.Kind);              }
Magic Number,Npgsql.TypeHandlers.FullTextSearchHandlers,TsQueryHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsQueryHandler.cs,GetNodeLength,The following statement contains a magic number: switch (node.Kind)              {              case NpgsqlTsQuery.NodeKind.Lexeme:                  var strLen = Encoding.UTF8.GetByteCount(((NpgsqlTsQueryLexeme)node).Text);                  if (strLen > 2046)                      throw new InvalidCastException("Lexeme text too long. Must be at most 2046 bytes in UTF8.");                  return 4 + strLen;              case NpgsqlTsQuery.NodeKind.And:              case NpgsqlTsQuery.NodeKind.Or:                  return 2 + GetNodeLength(((NpgsqlTsQueryBinOp)node).Left) + GetNodeLength(((NpgsqlTsQueryBinOp)node).Right);              case NpgsqlTsQuery.NodeKind.Phrase:                  // 2 additional bytes for uint16 phrase operator "distance" field.                  return 4 + GetNodeLength(((NpgsqlTsQueryBinOp)node).Left) + GetNodeLength(((NpgsqlTsQueryBinOp)node).Right);              case NpgsqlTsQuery.NodeKind.Not:                  return 2 + GetNodeLength(((NpgsqlTsQueryNot)node).Child);              case NpgsqlTsQuery.NodeKind.Empty:                  throw new InvalidOperationException("Empty tsquery nodes must be top-level");              default:                  throw new InvalidOperationException("Illegal node kind: " + node.Kind);              }
Magic Number,Npgsql.TypeHandlers.FullTextSearchHandlers,TsQueryHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsQueryHandler.cs,GetNodeLength,The following statement contains a magic number: switch (node.Kind)              {              case NpgsqlTsQuery.NodeKind.Lexeme:                  var strLen = Encoding.UTF8.GetByteCount(((NpgsqlTsQueryLexeme)node).Text);                  if (strLen > 2046)                      throw new InvalidCastException("Lexeme text too long. Must be at most 2046 bytes in UTF8.");                  return 4 + strLen;              case NpgsqlTsQuery.NodeKind.And:              case NpgsqlTsQuery.NodeKind.Or:                  return 2 + GetNodeLength(((NpgsqlTsQueryBinOp)node).Left) + GetNodeLength(((NpgsqlTsQueryBinOp)node).Right);              case NpgsqlTsQuery.NodeKind.Phrase:                  // 2 additional bytes for uint16 phrase operator "distance" field.                  return 4 + GetNodeLength(((NpgsqlTsQueryBinOp)node).Left) + GetNodeLength(((NpgsqlTsQueryBinOp)node).Right);              case NpgsqlTsQuery.NodeKind.Not:                  return 2 + GetNodeLength(((NpgsqlTsQueryNot)node).Child);              case NpgsqlTsQuery.NodeKind.Empty:                  throw new InvalidOperationException("Empty tsquery nodes must be top-level");              default:                  throw new InvalidOperationException("Illegal node kind: " + node.Kind);              }
Magic Number,Npgsql.TypeHandlers.FullTextSearchHandlers,TsQueryHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsQueryHandler.cs,GetNodeLength,The following statement contains a magic number: switch (node.Kind)              {              case NpgsqlTsQuery.NodeKind.Lexeme:                  var strLen = Encoding.UTF8.GetByteCount(((NpgsqlTsQueryLexeme)node).Text);                  if (strLen > 2046)                      throw new InvalidCastException("Lexeme text too long. Must be at most 2046 bytes in UTF8.");                  return 4 + strLen;              case NpgsqlTsQuery.NodeKind.And:              case NpgsqlTsQuery.NodeKind.Or:                  return 2 + GetNodeLength(((NpgsqlTsQueryBinOp)node).Left) + GetNodeLength(((NpgsqlTsQueryBinOp)node).Right);              case NpgsqlTsQuery.NodeKind.Phrase:                  // 2 additional bytes for uint16 phrase operator "distance" field.                  return 4 + GetNodeLength(((NpgsqlTsQueryBinOp)node).Left) + GetNodeLength(((NpgsqlTsQueryBinOp)node).Right);              case NpgsqlTsQuery.NodeKind.Not:                  return 2 + GetNodeLength(((NpgsqlTsQueryNot)node).Child);              case NpgsqlTsQuery.NodeKind.Empty:                  throw new InvalidOperationException("Empty tsquery nodes must be top-level");              default:                  throw new InvalidOperationException("Illegal node kind: " + node.Kind);              }
Magic Number,Npgsql.TypeHandlers.FullTextSearchHandlers,TsQueryHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsQueryHandler.cs,GetNodeLength,The following statement contains a magic number: switch (node.Kind)              {              case NpgsqlTsQuery.NodeKind.Lexeme:                  var strLen = Encoding.UTF8.GetByteCount(((NpgsqlTsQueryLexeme)node).Text);                  if (strLen > 2046)                      throw new InvalidCastException("Lexeme text too long. Must be at most 2046 bytes in UTF8.");                  return 4 + strLen;              case NpgsqlTsQuery.NodeKind.And:              case NpgsqlTsQuery.NodeKind.Or:                  return 2 + GetNodeLength(((NpgsqlTsQueryBinOp)node).Left) + GetNodeLength(((NpgsqlTsQueryBinOp)node).Right);              case NpgsqlTsQuery.NodeKind.Phrase:                  // 2 additional bytes for uint16 phrase operator "distance" field.                  return 4 + GetNodeLength(((NpgsqlTsQueryBinOp)node).Left) + GetNodeLength(((NpgsqlTsQueryBinOp)node).Right);              case NpgsqlTsQuery.NodeKind.Not:                  return 2 + GetNodeLength(((NpgsqlTsQueryNot)node).Child);              case NpgsqlTsQuery.NodeKind.Empty:                  throw new InvalidOperationException("Empty tsquery nodes must be top-level");              default:                  throw new InvalidOperationException("Illegal node kind: " + node.Kind);              }
Magic Number,Npgsql.TypeHandlers.FullTextSearchHandlers,TsQueryHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsQueryHandler.cs,Write,The following statement contains a magic number: buf.WriteSpaceLeft < 4
Magic Number,Npgsql.TypeHandlers.FullTextSearchHandlers,TsQueryHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsQueryHandler.cs,Write,The following statement contains a magic number: buf.WriteSpaceLeft < 2
Magic Number,Npgsql.TypeHandlers.FullTextSearchHandlers,TsQueryHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsQueryHandler.cs,Write,The following statement contains a magic number: buf.WriteByte(node.Kind == NpgsqlTsQuery.NodeKind.Lexeme ? (byte)1 : (byte)2);
Magic Number,Npgsql.TypeHandlers.FullTextSearchHandlers,TsVectorHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsVectorHandler.cs,Read,The following statement contains a magic number: await buf.Ensure(4' async);
Magic Number,Npgsql.TypeHandlers.FullTextSearchHandlers,TsVectorHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsVectorHandler.cs,Read,The following statement contains a magic number: len -= 4;
Magic Number,Npgsql.TypeHandlers.FullTextSearchHandlers,TsVectorHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsVectorHandler.cs,Write,The following statement contains a magic number: buf.WriteSpaceLeft < 4
Magic Number,Npgsql.TypeHandlers.GeometricHandlers,PathHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\GeometricHandlers\PathHandler.cs,Read,The following statement contains a magic number: await buf.Ensure(5' async);
Magic Number,Npgsql.TypeHandlers.GeometricHandlers,PathHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\GeometricHandlers\PathHandler.cs,Read,The following statement contains a magic number: await buf.Ensure(16' async);
Magic Number,Npgsql.TypeHandlers.GeometricHandlers,PathHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\GeometricHandlers\PathHandler.cs,Write,The following statement contains a magic number: buf.WriteSpaceLeft < 5
Magic Number,Npgsql.TypeHandlers.GeometricHandlers,PathHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\GeometricHandlers\PathHandler.cs,Write,The following statement contains a magic number: buf.WriteSpaceLeft < 16
Magic Number,Npgsql.TypeHandlers.GeometricHandlers,PolygonHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\GeometricHandlers\PolygonHandler.cs,Read,The following statement contains a magic number: await buf.Ensure(4' async);
Magic Number,Npgsql.TypeHandlers.GeometricHandlers,PolygonHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\GeometricHandlers\PolygonHandler.cs,Read,The following statement contains a magic number: await buf.Ensure(16' async);
Magic Number,Npgsql.TypeHandlers.GeometricHandlers,PolygonHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\GeometricHandlers\PolygonHandler.cs,Write,The following statement contains a magic number: buf.WriteSpaceLeft < 4
Magic Number,Npgsql.TypeHandlers.GeometricHandlers,PolygonHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\GeometricHandlers\PolygonHandler.cs,Write,The following statement contains a magic number: buf.WriteSpaceLeft < 16
Magic Number,Npgsql.TypeHandlers.InternalTypeHandlers,TidHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\InternalTypeHandlers\TidHandler.cs,Read,The following statement contains a magic number: Debug.Assert(len == 6);
Magic Number,Npgsql.TypeHandlers.NetworkHandlers,InetHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\NetworkHandlers\InetHandler.cs,DoWrite,The following statement contains a magic number: switch (ip.AddressFamily) {              case AddressFamily.InterNetwork:                  buf.WriteByte(IPv4);                  if (mask == -1)                      mask = 32;                  break;              case AddressFamily.InterNetworkV6:                  buf.WriteByte(IPv6);                  if (mask == -1)                      mask = 128;                  break;              default:                  throw new InvalidCastException($"Can't handle IPAddress with AddressFamily {ip.AddressFamily}' only InterNetwork or InterNetworkV6!");              }
Magic Number,Npgsql.TypeHandlers.NetworkHandlers,InetHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\NetworkHandlers\InetHandler.cs,DoWrite,The following statement contains a magic number: switch (ip.AddressFamily) {              case AddressFamily.InterNetwork:                  buf.WriteByte(IPv4);                  if (mask == -1)                      mask = 32;                  break;              case AddressFamily.InterNetworkV6:                  buf.WriteByte(IPv6);                  if (mask == -1)                      mask = 128;                  break;              default:                  throw new InvalidCastException($"Can't handle IPAddress with AddressFamily {ip.AddressFamily}' only InterNetwork or InterNetworkV6!");              }
Magic Number,Npgsql.TypeHandlers.NetworkHandlers,MacaddrHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\NetworkHandlers\MacaddrHandler.cs,Read,The following statement contains a magic number: Debug.Assert(len == 6 || len == 8);
Magic Number,Npgsql.TypeHandlers.NetworkHandlers,MacaddrHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\NetworkHandlers\MacaddrHandler.cs,Read,The following statement contains a magic number: Debug.Assert(len == 6 || len == 8);
Magic Number,Npgsql.TypeHandlers.NumericHandlers,DecimalRaw,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\NumericHandlers\DecimalRaw.cs,DecimalRaw,The following statement contains a magic number: _mid = (uint)(value >> 32);
Magic Number,Npgsql.TypeHandlers.NumericHandlers,DecimalRaw,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\NumericHandlers\DecimalRaw.cs,Multiply,The following statement contains a magic number: remainder = (uint)(integer >> 32);
Magic Number,Npgsql.TypeHandlers.NumericHandlers,DecimalRaw,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\NumericHandlers\DecimalRaw.cs,Multiply,The following statement contains a magic number: remainder = (uint)(integer >> 32);
Magic Number,Npgsql.TypeHandlers.NumericHandlers,DecimalRaw,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\NumericHandlers\DecimalRaw.cs,Multiply,The following statement contains a magic number: remainder = (uint)(integer >> 32);
Magic Number,Npgsql.TypeHandlers.NumericHandlers,DecimalRaw,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\NumericHandlers\DecimalRaw.cs,Divide,The following statement contains a magic number: integer = ((ulong)remainder << 32) | value._mid;
Magic Number,Npgsql.TypeHandlers.NumericHandlers,DecimalRaw,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\NumericHandlers\DecimalRaw.cs,Divide,The following statement contains a magic number: integer = ((ulong)remainder << 32) | value._low;
Magic Number,Npgsql.TypeHandlers.NumericHandlers,MoneyHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\NumericHandlers\MoneyHandler.cs,Write,The following statement contains a magic number: var result = (long)raw.Mid << 32 | raw.Low;
Magic Number,Npgsql.TypeHandlers.NumericHandlers,NumericHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\NumericHandlers\NumericHandler.cs,ValidateAndGetLength,The following statement contains a magic number: return 4 * sizeof(short) + groupCount * sizeof(short);
Magic Number,Npgsql.TypeHandling,NpgsqlSimpleTypeHandler<TDefault>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\NpgsqlSimpleTypeHandler.cs,WriteWithLengthInternal,The following statement contains a magic number: buf.WriteSpaceLeft < 4
Magic Number,Npgsql.TypeHandling,NpgsqlSimpleTypeHandler<TDefault>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\NpgsqlSimpleTypeHandler.cs,WriteWithLengthInternal,The following statement contains a magic number: buf.WriteSpaceLeft < 4 + elementLen
Magic Number,Npgsql.TypeHandling,NpgsqlSimpleTypeHandler<TDefault>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\NpgsqlSimpleTypeHandler.cs,WriteWithLengthInternal,The following statement contains a magic number: buf.WriteSpaceLeft < 4
Magic Number,Npgsql.TypeHandling,NpgsqlSimpleTypeHandler<TDefault>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\NpgsqlSimpleTypeHandler.cs,WriteWithLengthInternal,The following statement contains a magic number: buf.WriteSpaceLeft < 4 + elementLen
Magic Number,Npgsql.TypeHandling,NpgsqlTypeHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\NpgsqlTypeHandler.cs,ReadWithLength,The following statement contains a magic number: await buf.Ensure(4' async);
Magic Number,Npgsql.TypeHandling,NpgsqlTypeHandler<TDefault>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\NpgsqlTypeHandler`.cs,WriteWithLengthInternal,The following statement contains a magic number: buf.WriteSpaceLeft < 4
Magic Number,Npgsql.TypeHandling,NpgsqlTypeHandler<TDefault>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandling\NpgsqlTypeHandler`.cs,WriteWithLengthInternal,The following statement contains a magic number: buf.WriteSpaceLeft < 4
Magic Number,System.Net,UnixEndPoint,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\UnixEndPoint.cs,Create,The following statement contains a magic number: socketAddress.Size == 2
Magic Number,System.Net,UnixEndPoint,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\UnixEndPoint.cs,Create,The following statement contains a magic number: var size = socketAddress.Size - 2;
Magic Number,System.Net,UnixEndPoint,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\UnixEndPoint.cs,Create,The following statement contains a magic number: bytes[i] = socketAddress[i + 2];
Magic Number,System.Net,UnixEndPoint,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\UnixEndPoint.cs,Serialize,The following statement contains a magic number: var sa = new SocketAddress(AddressFamily' 2 + bytes.Length + 1);
Magic Number,System.Net,UnixEndPoint,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\UnixEndPoint.cs,Serialize,The following statement contains a magic number: sa[2 + i] = bytes[i];
Magic Number,System.Net,UnixEndPoint,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\UnixEndPoint.cs,Serialize,The following statement contains a magic number: sa[2 + bytes.Length] = 0;
Missing Default,Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlCommand.cs,ExecuteReaderAsync,The following switch statement is missing a default case: switch (IsExplicitlyPrepared)                      {                      case true:                          Debug.Assert(_connectorPreparedOn != null);                          if (_connectorPreparedOn != connector)                          {                              // The command was prepared' but since then the connector has changed. Detach all prepared statements.                              foreach (var s in _statements)                                  s.PreparedStatement = null;                              ResetExplicitPreparation();                              goto case false;                          }                          NpgsqlEventSource.Log.CommandStartPrepared();                          break;                        case false:                          ProcessRawQuery();                            if (connector.Settings.MaxAutoPrepare > 0)                          {                              var numPrepared = 0;                              foreach (var statement in _statements)                              {                                  // If this statement isn't prepared' see if it gets implicitly prepared.                                  // Note that this may return null (not enough usages for automatic preparation).                                  if (!statement.IsPrepared)                                      statement.PreparedStatement = connector.PreparedStatementManager.TryGetAutoPrepared(statement);                                  if (statement.PreparedStatement != null)                                      numPrepared++;                              }                                if (numPrepared > 0)                              {                                  _connectorPreparedOn = connector;                                  if (numPrepared == _statements.Count)                                      NpgsqlEventSource.Log.CommandStartPrepared();                              }                          }                          break;                      }
Missing Default,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,DoReadMessage,The following switch statement is missing a default case: switch (messageCode)              {              case BackendMessageCode.NoticeResponse:              case BackendMessageCode.NotificationResponse:              case BackendMessageCode.ParameterStatus:              case BackendMessageCode.ErrorResponse:                  ReadBuffer.ReadPosition--;                  return ReadMessageLong(dataRowLoadingMode' readingNotifications2: false);              }
Missing Default,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,DoReadMessage,The following switch statement is missing a default case: switch (messageCode)                          {                          case BackendMessageCode.ErrorResponse:                              Debug.Assert(msg == null);                                // An ErrorResponse is (almost) always followed by a ReadyForQuery. Save the error                              // and throw it as an exception when the ReadyForQuery is received (next).                              error = PostgresException.Load(ReadBuffer);                                if (State == ConnectorState.Connecting)                              {                                  // During the startup/authentication phase' an ErrorResponse isn't followed by                                  // an RFQ. Instead' the server closes the connection immediately                                  throw error;                              }                                continue;                            case BackendMessageCode.ReadyForQuery:                              if (error != null)                              {                                  NpgsqlEventSource.Log.CommandFailed();                                  throw error;                              }                                break;                            // Asynchronous messages which can come anytime' they have already been handled                          // in ParseServerMessage. Read the next message.                          case BackendMessageCode.NoticeResponse:                          case BackendMessageCode.NotificationResponse:                          case BackendMessageCode.ParameterStatus:                              Debug.Assert(msg == null);                              if (!readingNotifications2)                                  continue;                              return null;                          }
Missing Default,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Close,The following switch statement is missing a default case: switch (State)                  {                  case ConnectorState.Broken:                  case ConnectorState.Closed:                      return;                  }
Missing Default,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,Wait,The following switch statement is missing a default case: switch (msg.Code)                          {                          case BackendMessageCode.RowDescription:                              expectedMessageCode = BackendMessageCode.DataRow;                              continue;                          case BackendMessageCode.DataRow:                              // DataRow is usually consumed by a reader' here we have to skip it manually.                              ReadBuffer.Skip(((DataRowMessage)msg).Length);                              expectedMessageCode = BackendMessageCode.CompletedResponse;                              continue;                          case BackendMessageCode.CompletedResponse:                              expectedMessageCode = BackendMessageCode.ReadyForQuery;                              continue;                          case BackendMessageCode.ReadyForQuery:                              break;                          }
Missing Default,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,DoWaitAsync,The following switch statement is missing a default case: switch (msg.Code)                                  {                                  case BackendMessageCode.RowDescription:                                      expectedMessageCode = BackendMessageCode.DataRow;                                      break;                                  case BackendMessageCode.DataRow:                                      // DataRow is usually consumed by a reader' here we have to skip it manually.                                      await ReadBuffer.Skip(((DataRowMessage)msg).Length' true);                                      expectedMessageCode = BackendMessageCode.CompletedResponse;                                      break;                                  case BackendMessageCode.CompletedResponse:                                      expectedMessageCode = BackendMessageCode.ReadyForQuery;                                      break;                                  case BackendMessageCode.ReadyForQuery:                                      finishedKeepalive = true;                                      break;                                  }
Missing Default,Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlConnector.Auth.cs,ReadParameterStatus,The following switch statement is missing a default case: switch (name)              {              case "standard_conforming_strings":                  UseConformingStrings = value == "on";                  SqlParser.StandardConformingStrings = UseConformingStrings;                  return;                case "TimeZone":                  Timezone = value;                  return;              }
Missing Default,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,TryFastRead,The following switch statement is missing a default case: switch (State)              {              case ReaderState.BeforeResult:                  // First Read() after NextResult. Data row has already been processed.                  State = ReaderState.InResult;                  return true;              case ReaderState.InResult:                  if (_isSequential)                      return null;                  ConsumeRowNonSequential();                  break;              case ReaderState.BetweenResults:              case ReaderState.Consumed:              case ReaderState.Closed:                  return false;              }
Missing Default,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,ProcessMessage,The following switch statement is missing a default case: switch (completed.StatementType)                  {                  case StatementType.Update:                  case StatementType.Insert:                  case StatementType.Delete:                  case StatementType.Copy:                  case StatementType.Move:                      if (!_recordsAffected.HasValue)                          _recordsAffected = 0;                      _recordsAffected += completed.Rows;                      break;                  }
Missing Default,Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlDataReader.cs,Close,The following switch statement is missing a default case: switch (Connector.State)              {              case ConnectorState.Broken:              case ConnectorState.Closed:                  // This may have happen because an I/O error while reading a value' or some non-safe                  // exception thrown from a type handler. Or if the connection was closed while the reader                  // was still open                  State = ReaderState.Closed;                  Command.State = CommandState.Idle;                  ReaderClosed?.Invoke(this' EventArgs.Empty);                  return;              }
Missing Default,Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlSchema.cs,PopulateHardcodedDataTypeInfo,The following switch statement is missing a default case: switch (type.Name)              {              case "varchar":              case "char":                  row["DataType"] = "String";                  row["IsBestMatch"] = false;                  goto case "text";              case "text":                  row["CreateFormat"] += "({0})";                  row["CreateParameters"] = "size";                  row["IsSearchableWithLike"] = true;                  row["IsLiteralSupported"] = true;                  row["LiteralPrefix"] = "'";                  row["LiteralSuffix"] = "'";                  return;              case "numeric":                  row["CreateFormat"] += "({0}'{1})";                  row["CreateParameters"] = "precision' scale";                  row["MaximumScale"] = 16383;                  row["MinimumScale"] = 16383;                  row["IsUnsigned"] = false;                  return;              case "bytea":                  row["IsLong"] = true;                  return;              case "citext":                  row["IsCaseSensitive"] = false;                  return;              case "integer":              case "smallint":              case "bigint":              case "double precision":              case "real":              case "money":                  row["IsUnsigned"] = false;                  return;              case "oid":              case "cid":              case "regtype":              case "regconfig":                  row["IsUnsigned"] = true;                  return;              case "xid":                  row["IsUnsigned"] = true;                  row["IsConcurrencyType"] = true;                  return;              }
Missing Default,Npgsql,PreparedStatementManager,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\PreparedStatementManager.cs,TryGetAutoPrepared,The following switch statement is missing a default case: switch (pStatement.State)              {                  case PreparedState.Prepared:                  case PreparedState.ToBePrepared:                  // The statement has already been prepared (explicitly or automatically)' or has been selected                  // for preparation (earlier identical statement in the same command).                  // We just need to check that the parameter types correspond' since prepared statements are                  // only keyed by SQL (to prevent pointless allocations). If we have a mismatch' simply run unprepared.                  return pStatement.DoParametersMatch(statement.InputParameters)                      ? pStatement                      : null;              }
Missing Default,Npgsql,SqlQueryParser,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\SqlQueryParser.cs,ParseRawQuery,The following switch statement is missing a default case: switch (ch)                  {                  case '/':                      goto BlockCommentBegin;                  case '-':                      goto LineCommentBegin;                  case '\'':                      if (StandardConformingStrings)                          goto Quoted;                      else                          goto Escaped;                  case '$':                      if (!IsIdentifier(lastChar))                          goto DollarQuotedStart;                      else                          break;                  case '"':                      goto DoubleQuoted;                  case ':':                      if (lastChar != ':')                          goto ParamStart;                      else                          break;                  case '@':                      if (lastChar != '@')                          goto ParamStart;                      else                          break;                  case ';':                      if (parenthesisLevel == 0)                          goto SemiColon;                      break;                  case '(':                      parenthesisLevel++;                      break;                  case ')':                      parenthesisLevel--;                      break;                  case 'e':                  case 'E':                      if (!IsLetter(lastChar))                          goto EscapedStart;                      else                          break;                  }
Missing Default,Npgsql,SqlQueryParser,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\SqlQueryParser.cs,ParseRawQuery,The following switch statement is missing a default case: switch (ch)                  {                  case '\'':                      goto MaybeConcatenatedEscaped;                  case '\\':                  {                      if (currCharOfs >= end)                          goto Finish;                      currCharOfs++;                      break;                  }                  }
Missing Default,Npgsql,SqlQueryParser,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\SqlQueryParser.cs,ParseRawQuery,The following switch statement is missing a default case: switch (ch)                  {                  case '*':                      goto BlockCommentEnd;                  case '/':                      goto BlockCommentBegin;                  }
Missing Default,NpgsqlTypes,NpgsqlDateTime,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDateTime.cs,Subtract,The following switch statement is missing a default case: switch (_type) {              case InternalType.Infinity:              case InternalType.NegativeInfinity:                  throw new InvalidOperationException("You cannot subtract infinity timestamps");              }
Missing Default,NpgsqlTypes,NpgsqlDateTime,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\NpgsqlTypes\NpgsqlDateTime.cs,Subtract,The following switch statement is missing a default case: switch (timestamp._type) {              case InternalType.Infinity:              case InternalType.NegativeInfinity:                  throw new InvalidOperationException("You cannot subtract infinity timestamps");              }
Missing Default,Npgsql.TypeHandlers.CompositeHandlers,CompositeConstructorHandler<TComposite;T1;T2;T3;T4;T5;T6;T7;T8>,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\CompositeHandlers\CompositeConstructorHandler`.cs,Read,The following switch statement is missing a default case: switch (handler.Position)                  {                      case 0: args.Argument1 = await handler.Read<T1>(buffer' async); break;                      case 1: args.Argument2 = await handler.Read<T2>(buffer' async); break;                      case 2: args.Argument3 = await handler.Read<T3>(buffer' async); break;                      case 3: args.Argument4 = await handler.Read<T4>(buffer' async); break;                      case 4: args.Argument5 = await handler.Read<T5>(buffer' async); break;                      case 5: args.Argument6 = await handler.Read<T6>(buffer' async); break;                      case 6: args.Argument7 = await handler.Read<T7>(buffer' async); break;                      case 7: args.Argument8 = await handler.Read<T8>(buffer' async); break;                  }
Missing Default,Npgsql.TypeHandlers.FullTextSearchHandlers,TsQueryHandler,C:\research\architectureSmells\repos\npgsql_Npgsql\src\Npgsql\TypeHandlers\FullTextSearchHandlers\TsQueryHandler.cs,GetTokenCount,The following switch statement is missing a default case: switch (node.Kind)              {              case NpgsqlTsQuery.NodeKind.Lexeme:                  return 1;              case NpgsqlTsQuery.NodeKind.And:              case NpgsqlTsQuery.NodeKind.Or:              case NpgsqlTsQuery.NodeKind.Phrase:                  return 1 + GetTokenCount(((NpgsqlTsQueryBinOp)node).Left) + GetTokenCount(((NpgsqlTsQueryBinOp)node).Right);              case NpgsqlTsQuery.NodeKind.Not:                  return 1 + GetTokenCount(((NpgsqlTsQueryNot)node).Child);              case NpgsqlTsQuery.NodeKind.Empty:                  return 0;              }
