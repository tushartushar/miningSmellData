Implementation smell,Namespace,Class,File,Method,Description
Long Method,ZenDeskApi.XmlSerializers,ZenDeskXmlDeserializer,C:\repos\eneifert_ZenDeskApi\ZenDeskApi\XmlSerializers\ZenDeskXmlDeserializer.cs,Map,The method has 105 lines of code.
Complex Method,ZenDeskApi.XmlSerializers,ZenDeskXmlDeserializer,C:\repos\eneifert_ZenDeskApi\ZenDeskApi\XmlSerializers\ZenDeskXmlDeserializer.cs,Map,Cyclomatic complexity of the method is 8
Long Parameter List,ZenDeskApi,ZenDeskApi,C:\repos\eneifert_ZenDeskApi\ZenDeskApi\Attachment.cs,GetLoginUrl,The method has 5 parameters. Parameters: authToken' httpsUrl' name' email' returnToUrl
Long Parameter List,ZenDeskApi,ZenDeskApi,C:\repos\eneifert_ZenDeskApi\ZenDeskApi\Attachment.cs,CreateEntry,The method has 7 parameters. Parameters: forumId' submitterId' title' body' currentTags' isLocked' isPinned
Long Parameter List,ZenDeskApi,ZenDeskApi,C:\repos\eneifert_ZenDeskApi\ZenDeskApi\Attachment.cs,CreateTicket,The method has 5 parameters. Parameters: description' requesterId' priority' setTags' ticketFields
Long Parameter List,ZenDeskApi,ZenDeskApi,C:\repos\eneifert_ZenDeskApi\ZenDeskApi\Attachment.cs,CreateOrUpdateUser,The method has 7 parameters. Parameters: email' name' password' role' restrictionId' groupIDs' isVerified
Long Statement,ZenDeskApi,ZenDeskApi,C:\repos\eneifert_ZenDeskApi\ZenDeskApi\Attachment.cs,CreateTicketAsEndUser,The length of the statement  "            //request.AddParameter("text/xml"' string.Format("<ticket><subject>{0}</subject><description>{1}</description></ticket>"' ticket.Subject' ticket.Description)' ParameterType.RequestBody); " is 186.
Long Statement,ZenDeskApi,ZenDeskApi,C:\repos\eneifert_ZenDeskApi\ZenDeskApi\Attachment.cs,UpdateTicketAsEndUser,The length of the statement  "            //request.AddParameter("text/xml"' string.Format("<ticket><subject>{0}</subject><description>{1}</description></ticket>"' ticket.Subject' ticket.Description)' ParameterType.RequestBody); " is 186.
Long Statement,ZenDeskApi.XmlSerializers,ZenDeskXmlDeserializer,C:\repos\eneifert_ZenDeskApi\ZenDeskApi\XmlSerializers\ZenDeskXmlDeserializer.cs,RemoveNamespace,The length of the statement  "                    e.ReplaceAttributes(e.Attributes().Select(a => a.IsNamespaceDeclaration ? null : a.Name.Namespace != XNamespace.None ? new XAttribute(XNamespace.None.GetName(a.Name.LocalName)' a.Value) : a)); " is 192.
Empty Catch Block,ZenDeskApi,ZenDeskApi,C:\repos\eneifert_ZenDeskApi\ZenDeskApi\Attachment.cs,GetAttachmentToken,The method has an empty catch block.
Empty Catch Block,ZenDeskApi,ZenDeskApi,C:\repos\eneifert_ZenDeskApi\ZenDeskApi\Attachment.cs,GetAllTicketsForTag,The method has an empty catch block.
Empty Catch Block,ZenDeskApi,ZenDeskApi,C:\repos\eneifert_ZenDeskApi\ZenDeskApi\Attachment.cs,ValidateZenDeskRestResponse,The method has an empty catch block.
Empty Catch Block,ZenDeskApi,ZenDeskApi,C:\repos\eneifert_ZenDeskApi\ZenDeskApi\Attachment.cs,GetAllTicketsForUser,The method has an empty catch block.
Empty Catch Block,ZenDeskApi,ZenDeskApi,C:\repos\eneifert_ZenDeskApi\ZenDeskApi\Attachment.cs,GetAllTicketsInView,The method has an empty catch block.
Magic Number,ZenDeskApi,ZenDeskApi,C:\repos\eneifert_ZenDeskApi\ZenDeskApi\Attachment.cs,GetUnixEpoch,The following statement contains a magic number: var unixTime = dateTime.ToUniversalTime() -                  new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc);
Magic Number,ZenDeskApi,ZenDeskApi,C:\repos\eneifert_ZenDeskApi\ZenDeskApi\Attachment.cs,ByteArrayToHexString,The following statement contains a magic number: foreach (byte B in Bytes)              {                  Result.Append(HexAlphabet[(int)(B >> 4)]);                  Result.Append(HexAlphabet[(int)(B & 0xF)]);              }
Missing Default,ZenDeskApi.XmlSerializers,ZenDeskSerializationAttribute,C:\repos\eneifert_ZenDeskApi\ZenDeskApi\XmlSerializers\ZendDeskSerializationAttribute.cs,TransformName,The following switch statement is missing a default case: switch (NameStyle) {  				case NameStyle.CamelCase:  					return name.ToCamelCase();  				case NameStyle.PascalCase:  					return name.ToPascalCase();  				case NameStyle.LowerCase:  					return name.ToLower();  			}
