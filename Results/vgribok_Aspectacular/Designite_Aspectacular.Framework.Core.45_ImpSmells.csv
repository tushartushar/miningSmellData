Implementation smell,Namespace,Class,File,Method,Description
Long Method,Aspectacular,Order,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\QueryModifiers.cs,Augment,The method has 99 lines of code.
Long Method,Aspectacular,Order,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\QueryModifiers.cs,Augment,The method has 99 lines of code.
Complex Method,Aspectacular,RelativeTimeSpan,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,GetDateTimeRange,Cyclomatic complexity of the method is 25
Complex Method,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,CalculationParent,Cyclomatic complexity of the method is 10
Complex Method,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,StartOf,Cyclomatic complexity of the method is 20
Complex Method,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,StartOf,Cyclomatic complexity of the method is 20
Complex Method,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,Add,Cyclomatic complexity of the method is 10
Complex Method,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,Add,Cyclomatic complexity of the method is 10
Complex Method,Aspectacular,FastDynamicActivator,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\FastDynamicActivator.cs,FindConstructorByParams,Cyclomatic complexity of the method is 7
Complex Method,Aspectacular,TypeAndReflectionExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\TypeAndReflectionExtensions.cs,FormatCSharpType,Cyclomatic complexity of the method is 9
Complex Method,Aspectacular,PredicateBuilder,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\PredicateBuilder.cs,GetFilterPredicate,Cyclomatic complexity of the method is 25
Complex Method,Aspectacular,EmailHelper,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\Email.cs,SendSmtpEmail,Cyclomatic complexity of the method is 9
Long Parameter List,Aspectacular,CollectionExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\CollectionExtensions.cs,OrderByMember,The method has 4 parameters.
Long Parameter List,Aspectacular,QueryableExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\FullOuterJoin.cs,FullOuterJoin,The method has 5 parameters.
Long Parameter List,Aspectacular,QueryableExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\FullOuterJoin.cs,FullOuterJoin,The method has 5 parameters.
Long Parameter List,Aspectacular,ExceptionExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\ExceptionExtensions.cs,Consolidate,The method has 4 parameters.
Long Parameter List,Aspectacular,Threading,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\Threading.cs,WaitAny,The method has 4 parameters.
Long Parameter List,Aspectacular,EmailHelper,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\Email.cs,SendSmtpEmail,The method has 6 parameters.
Long Parameter List,Aspectacular,XmlSerializationHelpers,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\XmlSerializationHelpers.cs,SerializeInto,The method has 4 parameters.
Long Identifier,Aspectacular,BlockingPoll,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\BlockingPoll.cs,BlockingPoll,The length of the parameter delayAfterFirstEmptyPollMillisec is 32.
Long Identifier,Aspectacular,BlockingObjectPoll,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\BlockingPoll.cs,BlockingObjectPoll,The length of the parameter delayAfterFirstEmptyPollMillisec is 32.
Long Statement,Aspectacular,CollectionExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\CollectionExtensions.cs,OrderByProperty,The length of the statement  "	IEnumerable<T> ordered = collection.OrderByMember (entityPropertyName' orderAscending' (propName' entity) => entity.GetType ().GetPropertyValue (propName' entity)); " is 164.
Long Statement,Aspectacular,CollectionExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\CollectionExtensions.cs,OrderByField,The length of the statement  "	IEnumerable<T> ordered = collection.OrderByMember (entityFieldName' orderAscending' (fldName' entity) => entity.GetType ().GetMemberFieldValue (fldName' entity)); " is 162.
Long Statement,Aspectacular,DateTimeExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\DateTimeExtensions.cs,WeekOfYear,The length of the statement  "	int week = CultureInfo.CurrentCulture.Calendar.GetWeekOfYear (dt' whatIsFirstWeek' CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek); " is 141.
Long Statement,Aspectacular,DateTimeExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\DateTimeExtensions.cs,WeekOfYear,The length of the statement  "	int week = CultureInfo.CurrentCulture.Calendar.GetWeekOfYear (dt.DateTime' whatIsFirstWeek' CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek); " is 150.
Long Statement,Aspectacular,DateTimeExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\DateTimeExtensions.cs,FromSortableIntTime,The length of the statement  "	DateTime dt = new DateTime (datePart.Year' datePart.Month' datePart.Day' hours' minutes' seconds' milliseconds' datePart.Kind); " is 127.
Long Statement,Aspectacular,BlockingPoll,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\BlockingPoll.cs,Poll,The length of the statement  "		throw new InvalidDataException ("Poll function must either be supplied to a constructor as a delegate' or Poll() method must be overridden in a subclass."); " is 156.
Long Statement,Aspectacular,BlockingObjectPoll,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\BlockingPoll.cs,PollEasy,The length of the statement  "		throw new InvalidDataException ("Poll function must either be supplied to a constructor as a delegate' or Poll() method must be overridden in a subclass."); " is 156.
Long Statement,Aspectacular,QueryableExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\FullOuterJoin.cs,FullOuterJoin,The length of the statement  "	IEnumerable<TResult> leftJoin = left.GroupJoin (right' leftKeySelector' rightKeySelector' (l' rs) => new OuterJoinTemp<TLeft' TRight> { " is 135.
Long Statement,Aspectacular,QueryableExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\FullOuterJoin.cs,FullOuterJoin,The length of the statement  "	IEnumerable<TResult> rightJoin = right.GroupJoin (left' rightKeySelector' leftKeySelector' (r' ls) => new OuterJoinTemp<TRight' TLeft> { " is 136.
Long Statement,Aspectacular,QueryableExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\FullOuterJoin.cs,FullOuterJoin,The length of the statement  "	IQueryable<TResult> leftJoin = left.GroupJoin (right' leftKeySelector' rightKeySelector' (l' rs) => new OuterJoinTemp<TLeft' TRight> { " is 134.
Long Statement,Aspectacular,QueryableExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\FullOuterJoin.cs,FullOuterJoin,The length of the statement  "	IQueryable<TResult> rightJoin = right.GroupJoin (left' rightKeySelector' leftKeySelector' (r' ls) => new OuterJoinTemp<TRight' TLeft> { " is 135.
Long Statement,Aspectacular,QueryableExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\FullOuterJoin.cs,MakeJoinExpressionLeft,The length of the statement  "	var retExp = Expression.Lambda<Func<OuterJoinTemp<TLeft' TRight>' TRight' TResult>> (body' ojtParmExp' resultSelector.Parameters [1]); " is 134.
Long Statement,Aspectacular,QueryableExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\FullOuterJoin.cs,MakeJoinExpressionRight,The length of the statement  "	var retExp = Expression.Lambda<Func<OuterJoinTemp<TRight' TLeft>' TLeft' TResult>> (body' ojtParmExp' resultSelector.Parameters [0]); " is 133.
Long Statement,Aspectacular,QueryModifiersExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\QueryModifiers.cs,AugmentQuery,The length of the statement  "	return query == null ? null : optionalQueryModifiers.Where (mod => mod != null).Aggregate (query' (current' modifier) => modifier.Augment (current)); " is 149.
Long Statement,Aspectacular,QueryModifiersExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\QueryModifiers.cs,AugmentCollection,The length of the statement  "	return collection == null ? null : optionalQueryModifiers.Where (mod => mod != null).Aggregate (collection' (current' modifier) => modifier.Augment (current)); " is 159.
Long Statement,Aspectacular,Order,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\QueryModifiers.cs,Augment,The length of the statement  "	throw new Exception (string.Format ("Type \"{0}\" of {1}.{2} is not supported for dynamic sorting."' propType.FormatCSharp ()' typeof(TEntity).FormatCSharp ()' this.PropertyName)); " is 180.
Long Statement,Aspectacular,Order,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\QueryModifiers.cs,Augment,The length of the statement  "	throw new Exception (string.Format ("Type \"{0}\" of {1}.{2} is not supported for dynamic sorting."' propType.FormatCSharp ()' typeof(TEntity).FormatCSharp ()' this.PropertyName)); " is 180.
Long Statement,Aspectacular,Order,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\QueryModifiers.cs,GetPropertyType,The length of the statement  "		throw new Exception (string.Format ("\"{0}\" is not a property of type \"{1}\"."' this.PropertyName' typeof(TEntity).FormatCSharp ())); " is 135.
Long Statement,Aspectacular,Order,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\QueryModifiers.cs,ModifyQuery,The length of the statement  "	Expression<Func<TEntity' TKey>> sortExpression = PredicateBuilder.GetSortingExpression<TEntity' TKey> (this.PropertyName); " is 122.
Long Statement,Aspectacular,Order,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\QueryModifiers.cs,ModifyCollection,The length of the statement  "	Func<TEntity' TKey> sortExpression = PredicateBuilder.GetSortingExpression<TEntity' TKey> (this.PropertyName).Compile (); " is 121.
Long Statement,Aspectacular,RelativeTimeSpan,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,GetDateTimeRange,The length of the statement  "	DateTime refMoment = referenceMoment.IsNullOrDefault () ? (this.Unit.IsMomentInTime () ? DateTime.UtcNow : DateTime.Now) : referenceMoment.Value; " is 145.
Long Statement,Aspectacular,RelativeTimeSpan,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,GetTimeMomentRange,The length of the statement  "	DateTime? refMoment = referenceMoment == null ? (DateTime?)null : new DateTime (referenceMoment.Value.UtcDateTime.Ticks); " is 121.
Long Statement,Aspectacular,ExceptionExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\ExceptionExtensions.cs,Consolidate,The length of the statement  "	Func<Exception' IEnumerable<Exception>> iterator = innerFirst ? AllExceptions : new Func<Exception' IEnumerable<Exception>> (AllExceptionsBack); " is 144.
Long Statement,Aspectacular,Threading,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\Threading.cs,AsTask,The length of the statement  "	RegisteredWaitHandle registration = ThreadPool.RegisterWaitForSingleObject (handle' WaitHandleWaiter' tcs' waitTimeoutMillisec' true); " is 134.
Long Statement,Aspectacular,Threading,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\Threading.cs,AsTask,The length of the statement  "	//tcs.Task.ContinueWith((hkw' state) => ((RegisteredWaitHandle)state).Unregister(null)' registration' TaskScheduler.Default); " is 125.
Long Statement,Aspectacular,TypeAndReflectionExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\TypeAndReflectionExtensions.cs,TypeToCSharpString,The length of the statement  "	string generic = string.Join ("' "' type.GetGenericArguments ().Select (paramType => TypeToCSharpString (paramType' fullyQualified))); " is 134.
Magic Number,Aspectacular,DateTimeExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\DateTimeExtensions.cs,Quarter,The following statement contains a magic number: return (dt.Month - 1) / 3 + 1;  
Magic Number,Aspectacular,DateTimeExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\DateTimeExtensions.cs,Quarter,The following statement contains a magic number: return (dt.Month - 1) / 3 + 1;  
Magic Number,Aspectacular,DateTimeExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\DateTimeExtensions.cs,ToSortableLongTime,The following statement contains a magic number: if (includeMilliseconds)  	retVal = retVal * 1000 + dt.Millisecond;  
Magic Number,Aspectacular,DateTimeExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\DateTimeExtensions.cs,ToSortableLongTime,The following statement contains a magic number: retVal = retVal * 1000 + dt.Millisecond;  
Magic Number,Aspectacular,DateTimeExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\DateTimeExtensions.cs,FromSortableIntDateTime,The following statement contains a magic number: sortableDate /= 100;  
Magic Number,Aspectacular,DateTimeExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\DateTimeExtensions.cs,FromSortableIntDateTime,The following statement contains a magic number: sortableDate /= 100;  
Magic Number,Aspectacular,DateTimeExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\DateTimeExtensions.cs,FromSortableIntTime,The following statement contains a magic number: if (hasMilliseconds) {  	milliseconds = (int)(sortableDateTime % 1000);  	sortableDateTime /= 1000;  }  
Magic Number,Aspectacular,DateTimeExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\DateTimeExtensions.cs,FromSortableIntTime,The following statement contains a magic number: if (hasMilliseconds) {  	milliseconds = (int)(sortableDateTime % 1000);  	sortableDateTime /= 1000;  }  
Magic Number,Aspectacular,DateTimeExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\DateTimeExtensions.cs,FromSortableIntTime,The following statement contains a magic number: milliseconds = (int)(sortableDateTime % 1000);  
Magic Number,Aspectacular,DateTimeExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\DateTimeExtensions.cs,FromSortableIntTime,The following statement contains a magic number: sortableDateTime /= 1000;  
Magic Number,Aspectacular,DateTimeExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\DateTimeExtensions.cs,FromSortableIntTime,The following statement contains a magic number: sortableDateTime /= 100;  
Magic Number,Aspectacular,DateTimeExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\DateTimeExtensions.cs,FromSortableIntTime,The following statement contains a magic number: sortableDateTime /= 100;  
Magic Number,Aspectacular,BlockingPoll,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\BlockingPoll.cs,IncreasePollDelay,The following statement contains a magic number: if (delayMillisec > this.MaxPollSleepDelayMillisec)  	// Ensure delay does not exceed specified maximum  	delayMillisec = this.MaxPollSleepDelayMillisec;  else  	delayIncrementMillisec *= 2;  
Magic Number,Aspectacular,BlockingPoll,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\BlockingPoll.cs,IncreasePollDelay,The following statement contains a magic number: delayIncrementMillisec *= 2;  
Magic Number,Aspectacular,QueryModifiers,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\QueryModifiers.cs,GetHashCode,The following statement contains a magic number: if (this.Paging != null)  	hashCodes [2] = this.Paging.GetHashCode ();  
Magic Number,Aspectacular,QueryModifiers,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\QueryModifiers.cs,GetHashCode,The following statement contains a magic number: hashCodes [2] = this.Paging.GetHashCode ();  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,StartOf,The following statement contains a magic number: switch (unit) {  case TimeUnits.Century: {  	int year = dt.Year / 100 * 100;  	return new DateTime (year' 1' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Decade: {  	int year = dt.Year / 10 * 10;  	return new DateTime (year' 1' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Year: {  	return new DateTime (dt.Year' 1' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Quarter: {  	int month = (dt.Quarter () - 1) * 3 + 1;  	return new DateTime (dt.Year' month' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Week: {  	DayOfWeek weekStart = CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek;  	int delta = weekStart - dt.DayOfWeek;  	return dt.AddDays (delta).StartOf (TimeUnits.Day);  }  case TimeUnits.Month: {  	return new DateTime (dt.Year' dt.Month' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Day: {  	return new DateTime (dt.Year' dt.Month' dt.Day' 0' 0' 0' dt.Kind);  }  case TimeUnits.Hour: {  	return new DateTime (dt.Year' dt.Month' dt.Day' dt.Hour' 0' 0' dt.Kind);  }  case TimeUnits.Minute: {  	return new DateTime (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' 0' dt.Kind);  }  case TimeUnits.Second: {  	return new DateTime (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' dt.Second' dt.Kind);  }  }  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,StartOf,The following statement contains a magic number: switch (unit) {  case TimeUnits.Century: {  	int year = dt.Year / 100 * 100;  	return new DateTime (year' 1' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Decade: {  	int year = dt.Year / 10 * 10;  	return new DateTime (year' 1' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Year: {  	return new DateTime (dt.Year' 1' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Quarter: {  	int month = (dt.Quarter () - 1) * 3 + 1;  	return new DateTime (dt.Year' month' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Week: {  	DayOfWeek weekStart = CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek;  	int delta = weekStart - dt.DayOfWeek;  	return dt.AddDays (delta).StartOf (TimeUnits.Day);  }  case TimeUnits.Month: {  	return new DateTime (dt.Year' dt.Month' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Day: {  	return new DateTime (dt.Year' dt.Month' dt.Day' 0' 0' 0' dt.Kind);  }  case TimeUnits.Hour: {  	return new DateTime (dt.Year' dt.Month' dt.Day' dt.Hour' 0' 0' dt.Kind);  }  case TimeUnits.Minute: {  	return new DateTime (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' 0' dt.Kind);  }  case TimeUnits.Second: {  	return new DateTime (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' dt.Second' dt.Kind);  }  }  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,StartOf,The following statement contains a magic number: switch (unit) {  case TimeUnits.Century: {  	int year = dt.Year / 100 * 100;  	return new DateTime (year' 1' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Decade: {  	int year = dt.Year / 10 * 10;  	return new DateTime (year' 1' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Year: {  	return new DateTime (dt.Year' 1' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Quarter: {  	int month = (dt.Quarter () - 1) * 3 + 1;  	return new DateTime (dt.Year' month' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Week: {  	DayOfWeek weekStart = CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek;  	int delta = weekStart - dt.DayOfWeek;  	return dt.AddDays (delta).StartOf (TimeUnits.Day);  }  case TimeUnits.Month: {  	return new DateTime (dt.Year' dt.Month' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Day: {  	return new DateTime (dt.Year' dt.Month' dt.Day' 0' 0' 0' dt.Kind);  }  case TimeUnits.Hour: {  	return new DateTime (dt.Year' dt.Month' dt.Day' dt.Hour' 0' 0' dt.Kind);  }  case TimeUnits.Minute: {  	return new DateTime (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' 0' dt.Kind);  }  case TimeUnits.Second: {  	return new DateTime (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' dt.Second' dt.Kind);  }  }  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,StartOf,The following statement contains a magic number: switch (unit) {  case TimeUnits.Century: {  	int year = dt.Year / 100 * 100;  	return new DateTime (year' 1' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Decade: {  	int year = dt.Year / 10 * 10;  	return new DateTime (year' 1' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Year: {  	return new DateTime (dt.Year' 1' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Quarter: {  	int month = (dt.Quarter () - 1) * 3 + 1;  	return new DateTime (dt.Year' month' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Week: {  	DayOfWeek weekStart = CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek;  	int delta = weekStart - dt.DayOfWeek;  	return dt.AddDays (delta).StartOf (TimeUnits.Day);  }  case TimeUnits.Month: {  	return new DateTime (dt.Year' dt.Month' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Day: {  	return new DateTime (dt.Year' dt.Month' dt.Day' 0' 0' 0' dt.Kind);  }  case TimeUnits.Hour: {  	return new DateTime (dt.Year' dt.Month' dt.Day' dt.Hour' 0' 0' dt.Kind);  }  case TimeUnits.Minute: {  	return new DateTime (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' 0' dt.Kind);  }  case TimeUnits.Second: {  	return new DateTime (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' dt.Second' dt.Kind);  }  }  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,StartOf,The following statement contains a magic number: switch (unit) {  case TimeUnits.Century: {  	int year = dt.Year / 100 * 100;  	return new DateTime (year' 1' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Decade: {  	int year = dt.Year / 10 * 10;  	return new DateTime (year' 1' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Year: {  	return new DateTime (dt.Year' 1' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Quarter: {  	int month = (dt.Quarter () - 1) * 3 + 1;  	return new DateTime (dt.Year' month' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Week: {  	DayOfWeek weekStart = CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek;  	int delta = weekStart - dt.DayOfWeek;  	return dt.AddDays (delta).StartOf (TimeUnits.Day);  }  case TimeUnits.Month: {  	return new DateTime (dt.Year' dt.Month' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Day: {  	return new DateTime (dt.Year' dt.Month' dt.Day' 0' 0' 0' dt.Kind);  }  case TimeUnits.Hour: {  	return new DateTime (dt.Year' dt.Month' dt.Day' dt.Hour' 0' 0' dt.Kind);  }  case TimeUnits.Minute: {  	return new DateTime (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' 0' dt.Kind);  }  case TimeUnits.Second: {  	return new DateTime (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' dt.Second' dt.Kind);  }  }  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,StartOf,The following statement contains a magic number: switch (unit) {  case TimeUnits.Century: {  	int year = dt.Year / 100 * 100;  	return new DateTimeOffset (year' 1' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Decade: {  	int year = dt.Year / 10 * 10;  	return new DateTimeOffset (year' 1' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Year: {  	return new DateTimeOffset (dt.Year' 1' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Quarter: {  	int month = (dt.Quarter () - 1) * 3 + 1;  	return new DateTimeOffset (dt.Year' month' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Week: {  	DayOfWeek weekStart = CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek;  	int delta = weekStart - dt.DayOfWeek;  	return dt.AddDays (delta).StartOf (TimeUnits.Day);  }  case TimeUnits.Month: {  	return new DateTimeOffset (dt.Year' dt.Month' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Day: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' 0' 0' 0' dt.Offset);  }  case TimeUnits.Hour: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' dt.Hour' 0' 0' dt.Offset);  }  case TimeUnits.Minute: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' 0' dt.Offset);  }  case TimeUnits.Second: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' dt.Second' dt.Offset);  }  }  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,StartOf,The following statement contains a magic number: switch (unit) {  case TimeUnits.Century: {  	int year = dt.Year / 100 * 100;  	return new DateTimeOffset (year' 1' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Decade: {  	int year = dt.Year / 10 * 10;  	return new DateTimeOffset (year' 1' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Year: {  	return new DateTimeOffset (dt.Year' 1' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Quarter: {  	int month = (dt.Quarter () - 1) * 3 + 1;  	return new DateTimeOffset (dt.Year' month' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Week: {  	DayOfWeek weekStart = CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek;  	int delta = weekStart - dt.DayOfWeek;  	return dt.AddDays (delta).StartOf (TimeUnits.Day);  }  case TimeUnits.Month: {  	return new DateTimeOffset (dt.Year' dt.Month' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Day: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' 0' 0' 0' dt.Offset);  }  case TimeUnits.Hour: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' dt.Hour' 0' 0' dt.Offset);  }  case TimeUnits.Minute: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' 0' dt.Offset);  }  case TimeUnits.Second: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' dt.Second' dt.Offset);  }  }  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,StartOf,The following statement contains a magic number: switch (unit) {  case TimeUnits.Century: {  	int year = dt.Year / 100 * 100;  	return new DateTimeOffset (year' 1' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Decade: {  	int year = dt.Year / 10 * 10;  	return new DateTimeOffset (year' 1' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Year: {  	return new DateTimeOffset (dt.Year' 1' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Quarter: {  	int month = (dt.Quarter () - 1) * 3 + 1;  	return new DateTimeOffset (dt.Year' month' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Week: {  	DayOfWeek weekStart = CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek;  	int delta = weekStart - dt.DayOfWeek;  	return dt.AddDays (delta).StartOf (TimeUnits.Day);  }  case TimeUnits.Month: {  	return new DateTimeOffset (dt.Year' dt.Month' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Day: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' 0' 0' 0' dt.Offset);  }  case TimeUnits.Hour: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' dt.Hour' 0' 0' dt.Offset);  }  case TimeUnits.Minute: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' 0' dt.Offset);  }  case TimeUnits.Second: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' dt.Second' dt.Offset);  }  }  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,StartOf,The following statement contains a magic number: switch (unit) {  case TimeUnits.Century: {  	int year = dt.Year / 100 * 100;  	return new DateTimeOffset (year' 1' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Decade: {  	int year = dt.Year / 10 * 10;  	return new DateTimeOffset (year' 1' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Year: {  	return new DateTimeOffset (dt.Year' 1' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Quarter: {  	int month = (dt.Quarter () - 1) * 3 + 1;  	return new DateTimeOffset (dt.Year' month' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Week: {  	DayOfWeek weekStart = CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek;  	int delta = weekStart - dt.DayOfWeek;  	return dt.AddDays (delta).StartOf (TimeUnits.Day);  }  case TimeUnits.Month: {  	return new DateTimeOffset (dt.Year' dt.Month' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Day: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' 0' 0' 0' dt.Offset);  }  case TimeUnits.Hour: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' dt.Hour' 0' 0' dt.Offset);  }  case TimeUnits.Minute: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' 0' dt.Offset);  }  case TimeUnits.Second: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' dt.Second' dt.Offset);  }  }  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,StartOf,The following statement contains a magic number: switch (unit) {  case TimeUnits.Century: {  	int year = dt.Year / 100 * 100;  	return new DateTimeOffset (year' 1' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Decade: {  	int year = dt.Year / 10 * 10;  	return new DateTimeOffset (year' 1' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Year: {  	return new DateTimeOffset (dt.Year' 1' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Quarter: {  	int month = (dt.Quarter () - 1) * 3 + 1;  	return new DateTimeOffset (dt.Year' month' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Week: {  	DayOfWeek weekStart = CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek;  	int delta = weekStart - dt.DayOfWeek;  	return dt.AddDays (delta).StartOf (TimeUnits.Day);  }  case TimeUnits.Month: {  	return new DateTimeOffset (dt.Year' dt.Month' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Day: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' 0' 0' 0' dt.Offset);  }  case TimeUnits.Hour: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' dt.Hour' 0' 0' dt.Offset);  }  case TimeUnits.Minute: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' 0' dt.Offset);  }  case TimeUnits.Second: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' dt.Second' dt.Offset);  }  }  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,Add,The following statement contains a magic number: switch (unit) {  case TimeUnits.Century:  	return dt.AddYears (count * 100);  case TimeUnits.Day:  	return dt.AddDays (count);  case TimeUnits.Decade:  	return dt.AddYears (count * 10);  case TimeUnits.Hour:  	return dt.AddHours (count);  case TimeUnits.Minute:  	return dt.AddMinutes (count);  case TimeUnits.Month:  	return dt.AddMonths (count);  case TimeUnits.Quarter:  	return dt.AddMonths (count * 3);  case TimeUnits.Second:  	return dt.AddSeconds (count);  case TimeUnits.Week:  	return dt.AddDays (count * 7);  case TimeUnits.Year:  	return dt.AddYears (count);  }  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,Add,The following statement contains a magic number: switch (unit) {  case TimeUnits.Century:  	return dt.AddYears (count * 100);  case TimeUnits.Day:  	return dt.AddDays (count);  case TimeUnits.Decade:  	return dt.AddYears (count * 10);  case TimeUnits.Hour:  	return dt.AddHours (count);  case TimeUnits.Minute:  	return dt.AddMinutes (count);  case TimeUnits.Month:  	return dt.AddMonths (count);  case TimeUnits.Quarter:  	return dt.AddMonths (count * 3);  case TimeUnits.Second:  	return dt.AddSeconds (count);  case TimeUnits.Week:  	return dt.AddDays (count * 7);  case TimeUnits.Year:  	return dt.AddYears (count);  }  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,Add,The following statement contains a magic number: switch (unit) {  case TimeUnits.Century:  	return dt.AddYears (count * 100);  case TimeUnits.Day:  	return dt.AddDays (count);  case TimeUnits.Decade:  	return dt.AddYears (count * 10);  case TimeUnits.Hour:  	return dt.AddHours (count);  case TimeUnits.Minute:  	return dt.AddMinutes (count);  case TimeUnits.Month:  	return dt.AddMonths (count);  case TimeUnits.Quarter:  	return dt.AddMonths (count * 3);  case TimeUnits.Second:  	return dt.AddSeconds (count);  case TimeUnits.Week:  	return dt.AddDays (count * 7);  case TimeUnits.Year:  	return dt.AddYears (count);  }  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,Add,The following statement contains a magic number: switch (unit) {  case TimeUnits.Century:  	return dt.AddYears (count * 100);  case TimeUnits.Day:  	return dt.AddDays (count);  case TimeUnits.Decade:  	return dt.AddYears (count * 10);  case TimeUnits.Hour:  	return dt.AddHours (count);  case TimeUnits.Minute:  	return dt.AddMinutes (count);  case TimeUnits.Month:  	return dt.AddMonths (count);  case TimeUnits.Quarter:  	return dt.AddMonths (count * 3);  case TimeUnits.Second:  	return dt.AddSeconds (count);  case TimeUnits.Week:  	return dt.AddDays (count * 7);  case TimeUnits.Year:  	return dt.AddYears (count);  }  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,Add,The following statement contains a magic number: return dt.AddYears (count * 100);  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,Add,The following statement contains a magic number: return dt.AddYears (count * 10);  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,Add,The following statement contains a magic number: return dt.AddMonths (count * 3);  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,Add,The following statement contains a magic number: return dt.AddDays (count * 7);  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,Add,The following statement contains a magic number: switch (unit) {  case TimeUnits.Century:  	return dt.AddYears (count * 100);  case TimeUnits.Day:  	return dt.AddDays (count);  case TimeUnits.Decade:  	return dt.AddYears (count * 10);  case TimeUnits.Hour:  	return dt.AddHours (count);  case TimeUnits.Minute:  	return dt.AddMinutes (count);  case TimeUnits.Month:  	return dt.AddMonths (count);  case TimeUnits.Quarter:  	return dt.AddMonths (count * 3);  case TimeUnits.Second:  	return dt.AddSeconds (count);  case TimeUnits.Week:  	return dt.AddDays (count * 7);  case TimeUnits.Year:  	return dt.AddYears (count);  }  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,Add,The following statement contains a magic number: switch (unit) {  case TimeUnits.Century:  	return dt.AddYears (count * 100);  case TimeUnits.Day:  	return dt.AddDays (count);  case TimeUnits.Decade:  	return dt.AddYears (count * 10);  case TimeUnits.Hour:  	return dt.AddHours (count);  case TimeUnits.Minute:  	return dt.AddMinutes (count);  case TimeUnits.Month:  	return dt.AddMonths (count);  case TimeUnits.Quarter:  	return dt.AddMonths (count * 3);  case TimeUnits.Second:  	return dt.AddSeconds (count);  case TimeUnits.Week:  	return dt.AddDays (count * 7);  case TimeUnits.Year:  	return dt.AddYears (count);  }  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,Add,The following statement contains a magic number: switch (unit) {  case TimeUnits.Century:  	return dt.AddYears (count * 100);  case TimeUnits.Day:  	return dt.AddDays (count);  case TimeUnits.Decade:  	return dt.AddYears (count * 10);  case TimeUnits.Hour:  	return dt.AddHours (count);  case TimeUnits.Minute:  	return dt.AddMinutes (count);  case TimeUnits.Month:  	return dt.AddMonths (count);  case TimeUnits.Quarter:  	return dt.AddMonths (count * 3);  case TimeUnits.Second:  	return dt.AddSeconds (count);  case TimeUnits.Week:  	return dt.AddDays (count * 7);  case TimeUnits.Year:  	return dt.AddYears (count);  }  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,Add,The following statement contains a magic number: switch (unit) {  case TimeUnits.Century:  	return dt.AddYears (count * 100);  case TimeUnits.Day:  	return dt.AddDays (count);  case TimeUnits.Decade:  	return dt.AddYears (count * 10);  case TimeUnits.Hour:  	return dt.AddHours (count);  case TimeUnits.Minute:  	return dt.AddMinutes (count);  case TimeUnits.Month:  	return dt.AddMonths (count);  case TimeUnits.Quarter:  	return dt.AddMonths (count * 3);  case TimeUnits.Second:  	return dt.AddSeconds (count);  case TimeUnits.Week:  	return dt.AddDays (count * 7);  case TimeUnits.Year:  	return dt.AddYears (count);  }  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,Add,The following statement contains a magic number: return dt.AddYears (count * 100);  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,Add,The following statement contains a magic number: return dt.AddYears (count * 10);  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,Add,The following statement contains a magic number: return dt.AddMonths (count * 3);  
Magic Number,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,Add,The following statement contains a magic number: return dt.AddDays (count * 7);  
Magic Number,Aspectacular,Threading,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\Threading.cs,WaitUntilStopped,The following statement contains a magic number: return index == 2 ? ((Task<T>)completedTask).Result : default(T);  
Magic Number,Aspectacular,Threading,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\Threading.cs,WaitUntilStopped,The following statement contains a magic number: return index == 2;  
Missing Default,Aspectacular,RelativeTimeSpan,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,GetDateTimeRange,The following switch statement is missing a default case: switch (this.Direction) {  case Timeline.EntireCurrentOrSpecified:  	start = refMoment.StartOf (this.Unit);  	end = refMoment.EndOf (this.Unit);  	break;  case Timeline.ToDateOrTillSpecified:  	start = refMoment.StartOf (this.Unit);  	end = refMoment;  	// refMoment.EndOf(TimeUnits.Day);  	break;  case Timeline.Past:  	end = refMoment;  	start = this.Unit == TimeUnits.Eternity ? (DateTime?)null : end.Value.Add (-(int)this.UnitCount' this.Unit);  	break;  case Timeline.Future:  	start = refMoment;  	end = this.Unit == TimeUnits.Eternity ? (DateTime?)null : start.Value.Add ((int)this.UnitCount' this.Unit);  	break;  case Timeline.PreviousExcludingCurrent:  	end = refMoment.StartOf (this.Unit);  	start = end.Value.Add (-(int)this.UnitCount' this.Unit);  	end = end.Value.PreviousMoment ();  	break;  case Timeline.NextExcludingCurrent:  	start = refMoment.StartOf (this.Unit).Add (1' this.Unit);  	end = start.Value.Add ((int)this.UnitCount' this.Unit);  	break;  }  
Missing Default,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,CalculationParent,The following switch statement is missing a default case: switch (unit) {  case TimeUnits.Century:  	return null;  // no parent.  case TimeUnits.Decade:  	return TimeUnits.Century;  case TimeUnits.Year:  	return null;  // no parent.  case TimeUnits.Quarter:  	return TimeUnits.Year;  case TimeUnits.Month:  	return TimeUnits.Year;  case TimeUnits.Week:  	return TimeUnits.Year;  case TimeUnits.Day:  	return TimeUnits.Month;  case TimeUnits.Hour:  	return TimeUnits.Day;  case TimeUnits.Minute:  	return TimeUnits.Hour;  case TimeUnits.Second:  	return TimeUnits.Minute;  }  
Missing Default,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,StartOf,The following switch statement is missing a default case: switch (unit) {  case TimeUnits.Century: {  	int year = dt.Year / 100 * 100;  	return new DateTime (year' 1' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Decade: {  	int year = dt.Year / 10 * 10;  	return new DateTime (year' 1' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Year: {  	return new DateTime (dt.Year' 1' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Quarter: {  	int month = (dt.Quarter () - 1) * 3 + 1;  	return new DateTime (dt.Year' month' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Week: {  	DayOfWeek weekStart = CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek;  	int delta = weekStart - dt.DayOfWeek;  	return dt.AddDays (delta).StartOf (TimeUnits.Day);  }  case TimeUnits.Month: {  	return new DateTime (dt.Year' dt.Month' 1' 0' 0' 0' dt.Kind);  }  case TimeUnits.Day: {  	return new DateTime (dt.Year' dt.Month' dt.Day' 0' 0' 0' dt.Kind);  }  case TimeUnits.Hour: {  	return new DateTime (dt.Year' dt.Month' dt.Day' dt.Hour' 0' 0' dt.Kind);  }  case TimeUnits.Minute: {  	return new DateTime (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' 0' dt.Kind);  }  case TimeUnits.Second: {  	return new DateTime (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' dt.Second' dt.Kind);  }  }  
Missing Default,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,StartOf,The following switch statement is missing a default case: switch (unit) {  case TimeUnits.Century: {  	int year = dt.Year / 100 * 100;  	return new DateTimeOffset (year' 1' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Decade: {  	int year = dt.Year / 10 * 10;  	return new DateTimeOffset (year' 1' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Year: {  	return new DateTimeOffset (dt.Year' 1' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Quarter: {  	int month = (dt.Quarter () - 1) * 3 + 1;  	return new DateTimeOffset (dt.Year' month' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Week: {  	DayOfWeek weekStart = CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek;  	int delta = weekStart - dt.DayOfWeek;  	return dt.AddDays (delta).StartOf (TimeUnits.Day);  }  case TimeUnits.Month: {  	return new DateTimeOffset (dt.Year' dt.Month' 1' 0' 0' 0' dt.Offset);  }  case TimeUnits.Day: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' 0' 0' 0' dt.Offset);  }  case TimeUnits.Hour: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' dt.Hour' 0' 0' dt.Offset);  }  case TimeUnits.Minute: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' 0' dt.Offset);  }  case TimeUnits.Second: {  	return new DateTimeOffset (dt.Year' dt.Month' dt.Day' dt.Hour' dt.Minute' dt.Second' dt.Offset);  }  }  
Missing Default,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,Add,The following switch statement is missing a default case: switch (unit) {  case TimeUnits.Century:  	return dt.AddYears (count * 100);  case TimeUnits.Day:  	return dt.AddDays (count);  case TimeUnits.Decade:  	return dt.AddYears (count * 10);  case TimeUnits.Hour:  	return dt.AddHours (count);  case TimeUnits.Minute:  	return dt.AddMinutes (count);  case TimeUnits.Month:  	return dt.AddMonths (count);  case TimeUnits.Quarter:  	return dt.AddMonths (count * 3);  case TimeUnits.Second:  	return dt.AddSeconds (count);  case TimeUnits.Week:  	return dt.AddDays (count * 7);  case TimeUnits.Year:  	return dt.AddYears (count);  }  
Missing Default,Aspectacular,RelativeTimeSpanExtensions,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\RelativeTimeSpan.cs,Add,The following switch statement is missing a default case: switch (unit) {  case TimeUnits.Century:  	return dt.AddYears (count * 100);  case TimeUnits.Day:  	return dt.AddDays (count);  case TimeUnits.Decade:  	return dt.AddYears (count * 10);  case TimeUnits.Hour:  	return dt.AddHours (count);  case TimeUnits.Minute:  	return dt.AddMinutes (count);  case TimeUnits.Month:  	return dt.AddMonths (count);  case TimeUnits.Quarter:  	return dt.AddMonths (count * 3);  case TimeUnits.Second:  	return dt.AddSeconds (count);  case TimeUnits.Week:  	return dt.AddDays (count * 7);  case TimeUnits.Year:  	return dt.AddYears (count);  }  
Missing Default,Aspectacular,PredicateBuilder,D:\newReposJune17\vgribok_Aspectacular\NET 4.5\Aspectacular.Framework.Core.45\PredicateBuilder.cs,GetFilterPredicate,The following switch statement is missing a default case: switch (dynamicFilterOperator) {  case DynamicFilterOperator.Equal:  	boolExpression = Expression.Equal (propertyExpression' rvalue);  	break;  case DynamicFilterOperator.NotEqual:  	boolExpression = Expression.NotEqual (propertyExpression' rvalue);  	break;  case DynamicFilterOperator.GreaterThan:  	boolExpression = Expression.GreaterThan (propertyExpression' rvalue);  	break;  case DynamicFilterOperator.GreaterThanOrEqual:  	boolExpression = Expression.GreaterThanOrEqual (propertyExpression' rvalue);  	break;  case DynamicFilterOperator.LessThan:  	boolExpression = Expression.LessThan (propertyExpression' rvalue);  	break;  case DynamicFilterOperator.LessThanOrEqual:  	boolExpression = Expression.LessThanOrEqual (propertyExpression' rvalue);  	break;  case DynamicFilterOperator.StringStartsWith:  	boolExpression = Expression.Call (propertyExpression' stringStartsWithMethod' rvalueString);  	break;  case DynamicFilterOperator.StringContains:  	boolExpression = Expression.Call (propertyExpression' stringContainsMethod' rvalueString);  	break;  }  
