Implementation smell,Namespace,Class,File,Method,Description
Long Method,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,CloseCurrentNode,The method has 112 lines of code.
Long Method,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The method has 346 lines of code.
Long Method,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The method has 519 lines of code.
Long Method,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,The method has 104 lines of code.
Long Method,HtmlAgilityPack,HtmlNode,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteTo,The method has 158 lines of code.
Long Method,HtmlAgilityPack,HtmlWeb,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlWeb.cs,Get,The method has 159 lines of code.
Long Method,ChanArchiver,BoardWatcher,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\BoardWatcher.cs,load_catalog,The method has 155 lines of code.
Long Method,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,Main,The method has 143 lines of code.
Long Method,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,interactive_console,The method has 166 lines of code.
Long Method,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,get_file_priority,The method has 107 lines of code.
Long Method,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,download_file,The method has 188 lines of code.
Long Method,ChanArchiver,ThreadServerModule,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ThreadServerModule.cs,Process,The method has 683 lines of code.
Long Method,ChanArchiver,ThreadWorker,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\ThreadWorker.cs,worker_DoWork,The method has 166 lines of code.
Long Method,ChanArchiver.HttpServerHandlers.PageHandlers,ThreadFiltersPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\ThreadsFiltersPageHandler.cs,Process,The method has 107 lines of code.
Long Method,ChanArchiver.HttpServerHandlers,FileHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\FileHandler.cs,Process,The method has 208 lines of code.
Long Method,ChanArchiver.HttpServerHandlers,ResourcesHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ResourcesHandler.cs,Process,The method has 129 lines of code.
Long Method,ChanArchiver.HttpServerHandlers,SettingsPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\SettingsPageHandler.cs,Process,The method has 250 lines of code.
Long Method,Jayrock,InternetDate,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\InternetDate.cs,Parse,The method has 122 lines of code.
Long Method,Jayrock.Json.Conversion,CustomTypeDescriptor,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\CustomTypeDescriptor.cs,CustomTypeDescriptor,The method has 106 lines of code.
Long Method,Jayrock.JsonRpc.Web,JsonRpcProxyGenerator,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\Web\JsonRpcProxyGenerator.cs,Version1,The method has 160 lines of code.
Long Method,Jayrock.JsonRpc.Web,JsonRpcProxyGenerator,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\Web\JsonRpcProxyGenerator.cs,Version2,The method has 105 lines of code.
Long Method,Jayrock.JsonRpc.Web,JsonRpcTester,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\Web\JsonRpcTester.cs,AddContent,The method has 134 lines of code.
Long Method,Amib.Threading,SmartThreadPool,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\SmartThreadPool.cs,ProcessQueuedItems,The method has 146 lines of code.
Complex Method,AniWrap,AniWrap,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\AniWrap.cs,ParseThread,Cyclomatic complexity of the method is 14
Complex Method,AniWrap,AniWrap,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\AniWrap.cs,ParseReply,Cyclomatic complexity of the method is 11
Complex Method,AniWrap,AniWrap,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\AniWrap.cs,ParseJToken_Catalog,Cyclomatic complexity of the method is 10
Complex Method,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Load,Cyclomatic complexity of the method is 10
Complex Method,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,CloseCurrentNode,Cyclomatic complexity of the method is 17
Complex Method,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,NewCheck,Cyclomatic complexity of the method is 11
Complex Method,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,Cyclomatic complexity of the method is 77
Complex Method,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,PushNodeEnd,Cyclomatic complexity of the method is 11
Complex Method,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,ReadDocumentEncoding,Cyclomatic complexity of the method is 12
Complex Method,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,Cyclomatic complexity of the method is 14
Complex Method,HtmlAgilityPack,HtmlNode,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,CloneNode,Cyclomatic complexity of the method is 9
Complex Method,HtmlAgilityPack,HtmlNode,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteTo,Cyclomatic complexity of the method is 28
Complex Method,HtmlAgilityPack,HtmlNode,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteTo,Cyclomatic complexity of the method is 9
Complex Method,HtmlAgilityPack,HtmlNode,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,CloseNode,Cyclomatic complexity of the method is 9
Complex Method,HtmlAgilityPack,HtmlNode,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteAttribute,Cyclomatic complexity of the method is 9
Complex Method,HtmlAgilityPack,HtmlNode,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteAttributes,Cyclomatic complexity of the method is 14
Complex Method,HtmlAgilityPack,HtmlWeb,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlWeb.cs,GetExtensionForContentType,Cyclomatic complexity of the method is 8
Complex Method,HtmlAgilityPack,HtmlWeb,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlWeb.cs,Get,Cyclomatic complexity of the method is 21
Complex Method,ChanArchiver,ArchivedThreadAdder,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\ArchivedThreadAdder.cs,AddThreadFromArchive,Cyclomatic complexity of the method is 17
Complex Method,ChanArchiver,BoardWatcher,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\BoardWatcher.cs,load_catalog,Cyclomatic complexity of the method is 13
Complex Method,ChanArchiver,BoardWatcher,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\BoardWatcher.cs,LoadFilters,Cyclomatic complexity of the method is 10
Complex Method,ChanArchiver,FoolFuukaParser,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\FoolFuukaParser.cs,parse_thread,Cyclomatic complexity of the method is 10
Complex Method,ChanArchiver,FoolFuukaParser,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\FoolFuukaParser.cs,parse_reply,Cyclomatic complexity of the method is 9
Complex Method,ChanArchiver,PostFormatter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\PostFormatter.cs,ToString,Cyclomatic complexity of the method is 9
Complex Method,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,Main,Cyclomatic complexity of the method is 20
Complex Method,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,interactive_console,Cyclomatic complexity of the method is 23
Complex Method,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,get_file_priority,Cyclomatic complexity of the method is 14
Complex Method,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,download_file,Cyclomatic complexity of the method is 15
Complex Method,ChanArchiver,Settings,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Settings.cs,Load,Cyclomatic complexity of the method is 22
Complex Method,ChanArchiver,ThreadServerModule,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ThreadServerModule.cs,Process,Cyclomatic complexity of the method is 102
Complex Method,ChanArchiver,ThreadWorker,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\ThreadWorker.cs,worker_DoWork,Cyclomatic complexity of the method is 20
Complex Method,ChanArchiver.HttpServerHandlers.PageHandlers,FileQueuePageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\FileQueuePageHandler.cs,get_file_status,Cyclomatic complexity of the method is 8
Complex Method,ChanArchiver.HttpServerHandlers.PageHandlers,ThreadFiltersPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\ThreadsFiltersPageHandler.cs,Process,Cyclomatic complexity of the method is 15
Complex Method,ChanArchiver.HttpServerHandlers,FileBrowserPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\FileBrowserPageHandler.cs,Process,Cyclomatic complexity of the method is 15
Complex Method,ChanArchiver.HttpServerHandlers,FileHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\FileHandler.cs,Process,Cyclomatic complexity of the method is 23
Complex Method,ChanArchiver.HttpServerHandlers,LogPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\LogPageHandler.cs,Process,Cyclomatic complexity of the method is 16
Complex Method,ChanArchiver.HttpServerHandlers,ResourcesHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ResourcesHandler.cs,Process,Cyclomatic complexity of the method is 27
Complex Method,ChanArchiver.HttpServerHandlers,SettingsPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\SettingsPageHandler.cs,Process,Cyclomatic complexity of the method is 22
Complex Method,ChanArchiver.HttpServerHandlers.ThreadsAction,DownloadAsZipHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ThreadsAction\DownloadAsZipHandler.cs,Process,Cyclomatic complexity of the method is 10
Complex Method,Jayrock,InternetDate,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\InternetDate.cs,Parse,Cyclomatic complexity of the method is 16
Complex Method,Jayrock.Configuration,DictionarySectionHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Configuration\DictionarySectionHandler.cs,Create,Cyclomatic complexity of the method is 9
Complex Method,Jayrock.JsonML,JsonMLCodec,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\JsonML\JsonMLCodec.cs,DecodeArrayForm,Cyclomatic complexity of the method is 12
Complex Method,Jayrock.JsonML,JsonMLCodec,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\JsonML\JsonMLCodec.cs,DecodeObjectForm,Cyclomatic complexity of the method is 20
Complex Method,Jayrock.JsonML,JsonMLCodec,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\JsonML\JsonMLCodec.cs,EncodeArrayForm,Cyclomatic complexity of the method is 9
Complex Method,Jayrock.JsonML,JsonMLCodec,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\JsonML\JsonMLCodec.cs,EncodeObjectForm,Cyclomatic complexity of the method is 12
Complex Method,Jayrock.Json,JsonString,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonString.cs,Enquote,Cyclomatic complexity of the method is 10
Complex Method,Jayrock.Json,JsonString,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonString.cs,Dequote,Cyclomatic complexity of the method is 13
Complex Method,Jayrock.Json,JsonTextReader,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonTextReader.cs,Parse,Cyclomatic complexity of the method is 14
Complex Method,Jayrock.Json,JsonTextReader,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonTextReader.cs,NextClean,Cyclomatic complexity of the method is 11
Complex Method,Jayrock.Json,JsonWriter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonWriter.cs,WriteFromReader,Cyclomatic complexity of the method is 11
Complex Method,Jayrock.Json.Conversion,CustomTypeDescriptor,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\CustomTypeDescriptor.cs,CustomTypeDescriptor,Cyclomatic complexity of the method is 13
Complex Method,Jayrock.Json.Conversion,ExportContext,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\ExportContext.cs,FindCompatibleExporter,Cyclomatic complexity of the method is 12
Complex Method,Jayrock.Json.Conversion,ImportContext,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\ImportContext.cs,FindCompatibleImporter,Cyclomatic complexity of the method is 12
Complex Method,Jayrock.Json.Conversion.Converters,ImporterBase,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\ImporterBase.cs,Import,Cyclomatic complexity of the method is 10
Complex Method,Jayrock.JsonRpc,JsonRpcDispatcher,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\JsonRpcDispatcher.cs,Invoke,Cyclomatic complexity of the method is 8
Complex Method,Jayrock.JsonRpc,JsonRpcDispatcher,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\JsonRpcDispatcher.cs,ParseRequest,Cyclomatic complexity of the method is 9
Complex Method,Jayrock.JsonRpc,JsonRpcMethodAttribute,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\JsonRpcMethodAttribute.cs,Build,Cyclomatic complexity of the method is 9
Complex Method,Jayrock.JsonRpc.Web,JsonRpcProxyGenerator,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\Web\JsonRpcProxyGenerator.cs,Version1,Cyclomatic complexity of the method is 9
Complex Method,Jayrock.JsonRpc.Web,JsonRpcProxyGenerator,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\Web\JsonRpcProxyGenerator.cs,Version2,Cyclomatic complexity of the method is 9
Complex Method,Jayrock.Services,Method,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\Services\Method.cs,MapArguments,Cyclomatic complexity of the method is 11
Complex Method,Amib.Threading.Internal,WorkItem,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItem.cs,WaitAll,Cyclomatic complexity of the method is 8
Complex Method,Amib.Threading.Internal,WorkItem,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItem.cs,Cancel,Cyclomatic complexity of the method is 9
Complex Method,Amib.Threading.Internal,WorkItem,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItem.cs,GetResult,Cyclomatic complexity of the method is 8
Complex Method,Amib.Threading.Internal,WorkItemsGroup,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItemsGroup.cs,EnqueueToSTPNextWorkItem,Cyclomatic complexity of the method is 11
Complex Method,Amib.Threading,SmartThreadPool,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\SmartThreadPool.cs,ProcessQueuedItems,Cyclomatic complexity of the method is 9
Complex Method,Amib.Threading,SmartThreadPool,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\SmartThreadPool.cs,Shutdown,Cyclomatic complexity of the method is 9
Complex Method,ChanArchiver.Thread_Storage,FolderStorageEngine,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Thread Storage\FolderStorageEngine.cs,GetThread,Cyclomatic complexity of the method is 12
Complex Method,ChanArchiver.Thread_Storage,FolderStorageEngine,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Thread Storage\FolderStorageEngine.cs,GetIndex,Cyclomatic complexity of the method is 11
Complex Method,ChanArchiver.Thread_Storage,FolderStorageEngine,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Thread Storage\FolderStorageEngine.cs,load_post_data_str,Cyclomatic complexity of the method is 12
Complex Method,ChanArchiver.Thread_Storage,FolderStorageEngine,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Thread Storage\FolderStorageEngine.cs,get_post_string,Cyclomatic complexity of the method is 11
Long Parameter List,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,AddError,The method has 6 parameters. Parameters: code' line' linePosition' streamPosition' sourceText' reason
Long Parameter List,HtmlAgilityPack,HtmlParseError,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlParseError.cs,HtmlParseError,The method has 6 parameters. Parameters: code' line' linePosition' streamPosition' sourceText' reason
Long Parameter List,HtmlAgilityPack,HtmlWeb,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlWeb.cs,CreateInstance,The method has 5 parameters. Parameters: htmlUrl' xsltUrl' xsltArgs' type' xmlPath
Long Parameter List,HtmlAgilityPack,HtmlWeb,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlWeb.cs,Get,The method has 5 parameters. Parameters: url' path' proxy' credentials' method
Long Parameter List,HtmlAgilityPack,HtmlWeb,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlWeb.cs,Load,The method has 5 parameters. Parameters: url' proxyHost' proxyPort' userId' password
Long Parameter List,HtmlAgilityPack,HtmlWeb,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlWeb.cs,LoadHtmlAsXml,The method has 5 parameters. Parameters: htmlUrl' xsltUrl' xsltArgs' writer' xmlPath
Long Parameter List,HtmlAgilityPack,HtmlWeb,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlWeb.cs,Get,The method has 6 parameters. Parameters: uri' method' path' doc' proxy' creds
Long Parameter List,Jayrock.Dynamic,DynamicMetaObject<T>,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Dynamic\DynamicMetaObject.cs,CallMethodWithResult,The method has 5 parameters. Parameters: methodName' binder' args' fallback' fallbackInvoke
Long Parameter List,Jayrock.Dynamic,DynamicMetaObject<T>,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Dynamic\DynamicMetaObject.cs,BuildCallMethodWithResult,The method has 5 parameters. Parameters: methodName' binder' args' fallbackResult' fallbackInvoke
Long Parameter List,Jayrock.Dynamic,DynamicMetaObject<T>,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Dynamic\DynamicMetaObject.cs,CallMethodWithResult,The method has 5 parameters. Parameters: methodName' binder' args' fallback' fallbackInvoke
Long Parameter List,Jayrock.Dynamic,DynamicMetaObject<T>,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Dynamic\DynamicMetaObject.cs,BuildCallMethodWithResult,The method has 5 parameters. Parameters: methodName' binder' args' fallbackResult' fallbackInvoke
Long Parameter List,Jayrock.Json,JsonString,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonString.cs,EnquoteStringOrChars,The method has 5 parameters. Parameters: str' chars' offset' length' sb
Long Parameter List,Jayrock.Services,Method,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\Services\Method.cs,BeginInvoke,The method has 5 parameters. Parameters: service' names' args' callback' asyncState
Long Parameter List,Amib.Threading.Internal,WorkItemFactory,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItemFactory.cs,CreateWorkItem,The method has 5 parameters. Parameters: workItemsGroup' wigStartInfo' callback' state' workItemPriority
Long Parameter List,Amib.Threading.Internal,WorkItemFactory,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItemFactory.cs,CreateWorkItem,The method has 5 parameters. Parameters: workItemsGroup' wigStartInfo' workItemInfo' callback' state
Long Parameter List,Amib.Threading.Internal,WorkItemFactory,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItemFactory.cs,CreateWorkItem,The method has 5 parameters. Parameters: workItemsGroup' wigStartInfo' callback' state' postExecuteWorkItemCallback
Long Parameter List,Amib.Threading.Internal,WorkItemFactory,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItemFactory.cs,CreateWorkItem,The method has 6 parameters. Parameters: workItemsGroup' wigStartInfo' callback' state' postExecuteWorkItemCallback' workItemPriority
Long Parameter List,Amib.Threading.Internal,WorkItemFactory,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItemFactory.cs,CreateWorkItem,The method has 6 parameters. Parameters: workItemsGroup' wigStartInfo' callback' state' postExecuteWorkItemCallback' callToPostExecute
Long Parameter List,Amib.Threading.Internal,WorkItemFactory,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItemFactory.cs,CreateWorkItem,The method has 7 parameters. Parameters: workItemsGroup' wigStartInfo' callback' state' postExecuteWorkItemCallback' callToPostExecute' workItemPriority
Long Parameter List,Amib.Threading.Internal,WorkItemsGroupBase,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItemsGroupBase.cs,QueueWorkItem,The method has 5 parameters. Parameters: callback' state' postExecuteWorkItemCallback' callToPostExecute' workItemPriority
Long Parameter List,Amib.Threading.Internal,WorkItemsGroupBase,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItemsGroupBase.cs,QueueWorkItem,The method has 5 parameters. Parameters: action' arg1' arg2' arg3' priority
Long Parameter List,Amib.Threading.Internal,WorkItemsGroupBase,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItemsGroupBase.cs,QueueWorkItem,The method has 5 parameters. Parameters: action' arg1' arg2' arg3' arg4
Long Parameter List,Amib.Threading.Internal,WorkItemsGroupBase,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItemsGroupBase.cs,QueueWorkItem,The method has 6 parameters. Parameters: action' arg1' arg2' arg3' arg4' priority
Long Parameter List,Amib.Threading.Internal,WorkItemsGroupBase,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItemsGroupBase.cs,QueueWorkItem,The method has 5 parameters. Parameters: func' arg1' arg2' arg3' arg4
Long Parameter List,Amib.Threading,IWorkItemsGroup,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\Interfaces.cs,QueueWorkItem,The method has 5 parameters. Parameters: callback' state' postExecuteWorkItemCallback' callToPostExecute' workItemPriority
Long Parameter List,Amib.Threading,IWorkItemsGroup,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\Interfaces.cs,QueueWorkItem,The method has 5 parameters. Parameters: action' arg1' arg2' arg3' priority
Long Parameter List,Amib.Threading,IWorkItemsGroup,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\Interfaces.cs,QueueWorkItem,The method has 5 parameters. Parameters: action' arg1' arg2' arg3' arg4
Long Parameter List,Amib.Threading,IWorkItemsGroup,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\Interfaces.cs,QueueWorkItem,The method has 6 parameters. Parameters: action' arg1' arg2' arg3' arg4' priority
Long Parameter List,Amib.Threading,IWorkItemsGroup,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\Interfaces.cs,QueueWorkItem,The method has 5 parameters. Parameters: func' arg1' arg2' arg3' arg4
Long Identifier,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,,The length of the parameter OptionExtractErrorSourceTextMaxLength is 37.
Long Identifier,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,,The length of the parameter OptionOutputOptimizeAttributeValues is 35.
Long Identifier,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,,The length of the parameter HtmlExceptionUseIdAttributeFalse is 32.
Long Identifier,HtmlAgilityPack,HtmlNodeNavigator,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNodeNavigator.cs,HtmlNodeNavigator,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlNodeNavigator,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNodeNavigator.cs,HtmlNodeNavigator,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlNodeNavigator,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNodeNavigator.cs,HtmlNodeNavigator,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlNodeNavigator,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNodeNavigator.cs,HtmlNodeNavigator,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlNodeNavigator,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNodeNavigator.cs,HtmlNodeNavigator,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlNodeNavigator,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNodeNavigator.cs,HtmlNodeNavigator,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,MixedCodeDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\MixedCodeDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,MixedCodeDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\MixedCodeDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,MixedCodeDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\MixedCodeDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,MixedCodeDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\MixedCodeDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,MixedCodeDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\MixedCodeDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,MixedCodeDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\MixedCodeDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,ChanArchiver.HttpServerHandlers.PageHandlers,OverviewPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\OverviewPageHandler.cs,,The length of the parameter ThumbnailOnlyWarningMessageHtml is 31.
Long Identifier,ChanArchiver.HttpServerHandlers.PageHandlers,OverviewPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\OverviewPageHandler.cs,,The length of the parameter LowDiskSpaceWarningMessageHtml is 30.
Long Identifier,Jayrock.Json.Conversion,JsonConvert,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\JsonConvert.cs,,The length of the parameter _defaultExportContextFactoryHandler is 35.
Long Identifier,Jayrock.Json.Conversion,JsonConvert,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\JsonConvert.cs,,The length of the parameter _defaultImportContextFactoryHandler is 35.
Long Identifier,Jayrock.Json.Conversion,JsonConvert,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\JsonConvert.cs,,The length of the parameter _currentExportContextFactoryHandler is 35.
Long Identifier,Jayrock.Json.Conversion,JsonConvert,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\JsonConvert.cs,,The length of the parameter _currentImportContextFactoryHandler is 35.
Long Identifier,Amib.Threading.Internal,CallerThreadContext,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\CallerThreadContext.cs,,The length of the parameter getLogicalCallContextMethodInfo is 31.
Long Identifier,Amib.Threading.Internal,CallerThreadContext,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\CallerThreadContext.cs,,The length of the parameter setLogicalCallContextMethodInfo is 31.
Long Identifier,Amib.Threading.Internal,STPInstancePerformanceCounters,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\STPPerformanceCounter.cs,,The length of the parameter _stpInstanceNullPerformanceCounter is 34.
Long Identifier,Amib.Threading,SmartThreadPool,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\SmartThreadPool.cs,ProcessQueuedItems,The length of the parameter bInUseWorkerThreadsWasIncremented is 33.
Long Identifier,Amib.Threading,SmartThreadPool,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\SmartThreadPool.cs,,The length of the parameter DefaultPostExecuteWorkItemCallback is 34.
Long Identifier,Amib.Threading,SmartThreadPool,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\SmartThreadPool.cs,,The length of the parameter DefaultPerformanceCounterInstanceName is 37.
Long Identifier,Amib.Threading,STPStartInfo,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\STPStartInfo.cs,,The length of the parameter _performanceCounterInstanceName is 31.
Long Identifier,Amib.Threading,STPStartInfo,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\STPStartInfo.cs,,The length of the parameter _enableLocalPerformanceCounters is 31.
Long Statement,AniWrap,AniWrap,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\AniWrap.cs,GetAvailableBoards,The length of the statement  "            if (cached_catalog_data == null || cached_catalog_data != null && (DateTime.Now - cached_catalog_data.LastModified).Days > 6) " is 125.
Long Statement,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,ReadDocumentEncoding,The length of the statement  "                    // The following check fixes the the bug described at: http://htmlagilitypack.codeplex.com/WorkItem/View.aspx?WorkItemId=25273 " is 126.
Long Statement,HtmlAgilityPack,HtmlNodeNavigator,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNodeNavigator.cs,InternalTrace,The length of the statement  "            System.Diagnostics.Trace.WriteLine(string.Format("oid={0}'n={1}'a={2}'v={3}'{4}"' GetHashCode()' nodename' _attindex' nodevalue' traceValue)' "N!" + name); " is 155.
Long Statement,HtmlAgilityPack,HtmlWeb,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlWeb.cs,Get,The length of the statement  "                //						HtmlLibrary.Trace("Cookie " + cookie.Name + "=" + cookie.Value + " path=" + cookie.Path + " domain=" + cookie.Domain); " is 126.
Long Statement,ChanArchiver,BoardWatcher,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\BoardWatcher.cs,load_board_sleep_times,The length of the statement  "                this.Log(new LogEntry() { Level = LogEntry.LogLevel.Info' Message = "Board speed detected: " + this.Speed.ToString()' Sender = "BoardWatcher"' Title = this.Board }); " is 165.
Long Statement,ChanArchiver,BoardWatcher,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\BoardWatcher.cs,AddThreadId,The length of the statement  "            t.AddedAutomatically = false; // THIS IS CRITICAL' OTHERWISE IT PREVENT MANUALLY ADDED THREADS FROM STARTING IN MONITOR MODE " is 124.
Long Statement,ChanArchiver,FileFormatter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\FileFormatter.cs,ToString,The length of the statement  "            image_template.Replace("{file:fulllink}"' string.Format("{0}file/{1}.{2}"' image_url_start' this.Hash' this.Extension)); " is 120.
Long Statement,ChanArchiver,FileOperations,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\FileOperations.cs,ResolveFullFilePath,The length of the statement  "            fullpath = Path.Combine(Program.file_save_dir' hash[0].ToString().ToUpper()' hash[1].ToString().ToUpper()' hash + "." + extension); " is 131.
Long Statement,ChanArchiver,FileOperations,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\FileOperations.cs,CheckFullFileExist,The length of the statement  "            string p = Path.Combine(Program.file_save_dir' filename[0].ToString().ToUpper()' filename[1].ToString().ToUpper()' filename); " is 125.
Long Statement,ChanArchiver,FileOperations,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\FileOperations.cs,MapFullFile,The length of the statement  "            return Path.Combine(Program.file_save_dir' hash[0].ToString().ToUpper()' hash[1].ToString().ToUpper()' hash + "." + extension); " is 127.
Long Statement,ChanArchiver,FileOperations,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\FileOperations.cs,CheckThumbFileExist,The length of the statement  "            string p = Path.Combine(Program.thumb_save_dir' hash[0].ToString().ToUpper()' hash[1].ToString().ToUpper()' hash + ".jpg"); " is 123.
Long Statement,ChanArchiver,NetworkUsageCounter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\NetworkUsageCounter.cs,get_today_array,The length of the statement  "            string k = string.Format("{0}-{1}-{2}-{3}"' DateTime.Now.Day' DateTime.Now.Month' DateTime.Now.Year' DateTime.Now.Hour); " is 120.
Long Statement,ChanArchiver,PostFormatter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\PostFormatter.cs,ToString,The length of the statement  "                    template.Replace("{op:sticky}"' this.IsSticky ? string.Format("<img src='{0}res/sticky.png' />"' image_url_start) : ""); " is 120.
Long Statement,ChanArchiver,PostFormatter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\PostFormatter.cs,ToString,The length of the statement  "                    template.Replace("{op:locked}"' this.IsLocked ? string.Format("<img src='{0}res/locked.png' />"' image_url_start) : ""); " is 120.
Long Statement,ChanArchiver,PostFormatter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\PostFormatter.cs,ToString,The length of the statement  "                template.Replace("{post:posterid}"' string.Format("<span class=\"posteruid id_{0}\">(ID: <span class=\"hand\" title=\"Highlight posts by this ID\">{0}</span>)</span>"' this.PosterID)); " is 184.
Long Statement,ChanArchiver,PostFormatter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\PostFormatter.cs,ToString,The length of the statement  "                template.Replace("{post:nameblock}"' string.Format("<a href=\"mailto:{0}\" class=\"useremail\"><span class=\"name\">{1}</span></a>"' this.Email' this.Name)); " is 157.
Long Statement,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,Main,The length of the statement  "            html_templates_dir = Path.Combine(program_dir' "html_templates"' Version); Directory.CreateDirectory(html_templates_dir); " is 121.
Long Statement,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,interactive_console,The length of the statement  "                        Console.WriteLine("- reset-creds: Enable HTTP server authentication and set the credentials to random values"); Console.WriteLine(); " is 132.
Long Statement,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,interactive_console,The length of the statement  "                            Console.WriteLine("The command line version of this feature was deprecated in favor of the WebUI interface. Use that instead"); " is 127.
Long Statement,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,convert_all_gifs,The length of the statement  "                Console.WriteLine("Disk space saved: {0} ( {1} % )"' format_size_string(gif_processed - webm_produced)' 100 - ((webm_produced / gif_processed) * 100)); " is 151.
Long Statement,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,verify_file_checksums,The length of the statement  "            using (System.Security.Cryptography.MD5CryptoServiceProvider md = new System.Security.Cryptography.MD5CryptoServiceProvider()) " is 126.
Long Statement,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,PrintLog,The length of the statement  "            Console.WriteLine("[{0}] {1} {2}: {3}"' entry.Level.ToString()' entry.Time.ToShortDateString() + entry.Time.ToShortTimeString()' entry.Title == "-" ? string.Format("({0})"' entry.Sender) : string.Format("({0} - {1})"' entry.Sender' entry.Title)' entry.Message); " is 261.
Long Statement,ChanArchiver,Settings,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Settings.cs,Load,The length of the statement  "                AutoStartManuallyAddedThreads = true; ThumbnailOnly = false; EnableFileStats = false; ConvertGifsToWebm = false; ConvertWebmToMp4 = true; " is 137.
Long Statement,ChanArchiver,Settings,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Settings.cs,Load,The length of the statement  "                ConvertPNGImageWithNoTransparencyToJPG = false; AutoRemoveCompleteFiles = true; UseHttps = true; RemoveThreadsWhenTheyEnterArchivedState = true; " is 144.
Long Statement,ChanArchiver,Settings,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Settings.cs,Load,The length of the statement  "                EnableAuthentication = true; AuthPassword = "admin"; AuthUsername = "admin"; AllowGuestAccess = false; SaveBannedFileThumbnail = true; " is 134.
Long Statement,ChanArchiver,ThreadServerModule,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ThreadServerModule.cs,Process,The length of the statement  "                            sb.AppendFormat("<td><code><a href='/boards/{0}/{1}#p{2}'>{2}</a></code></td>"' rposts[i].Board' rposts[i].ThreadID' rposts[i].PostID); " is 135.
Long Statement,ChanArchiver,ThreadWorker,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\ThreadWorker.cs,worker_DoWork,The length of the statement  "                        Message = string.Format("Updated in {0} seconds {1}"' sw.Elapsed.Seconds' new_rc > 0 ? "' + " + new_rc.ToString() + " new replies" : "")' " is 137.
Long Statement,ChanArchiver.HttpServerHandlers.PageHandlers,BannedFilesPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\BannedFilesPageHandler.cs,Process,The length of the statement  "                    </td><td>{0}</td><td><a class=""btn btn-default"" href='/action/unbanfile?hash={0}' title='Remove Ban'><i class=""fa fa-trash-o""></i></a></td></tr>"' hashes[j]); " is 162.
Long Statement,ChanArchiver.HttpServerHandlers.PageHandlers,FileQueuePageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\FileQueuePageHandler.cs,GetFileQueueTableHtml,The length of the statement  "                    sb.AppendFormat("<td><code><a href='/boards/{0}/{1}'>{1}</a></code></td>"' f.PostFile.board' f.PostFile.owner.OwnerThread.ID); " is 126.
Long Statement,ChanArchiver.HttpServerHandlers.PageHandlers,FileQueuePageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\FileQueuePageHandler.cs,GetFileQueueTableHtml,The length of the statement  "                    sb.AppendFormat("<td><code><a href='/boards/{0}/{1}#p{2}'>{2}</a></code></td>"' f.PostFile.board' f.PostFile.owner.OwnerThread.ID' f.PostFile.owner.ID); " is 152.
Long Statement,ChanArchiver.HttpServerHandlers.PageHandlers,FileQueuePageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\FileQueuePageHandler.cs,GetFileQueueTableHtml,The length of the statement  "                    sb.AppendFormat("<td> <a href=\"{0}\" class=\"label label-primary\">Info</a> </td>"' FileInfoPageHandler.GetLinkToThisPage(kvp.Key)); " is 133.
Long Statement,ChanArchiver.HttpServerHandlers.PageHandlers,FileQueuePageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\FileQueuePageHandler.cs,GetFileQueueTableHtml,The length of the statement  "                    sb.AppendFormat("<td><span class=\"label label-primary\">{0}</span></td>"' f.Type == FileQueueStateInfo.FileType.FullFile ? f.Priority.ToString().Replace("Level"' "") : "N/A"); " is 176.
Long Statement,ChanArchiver.HttpServerHandlers.PageHandlers,OverviewPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\OverviewPageHandler.cs,get_NetWorkStats,The length of the statement  "            double percent_api = NetworkUsageCounter.TotalThisHour == 0 ? 0 : (NetworkUsageCounter.ApiConsumedThisHour / NetworkUsageCounter.TotalThisHour) * 100; " is 150.
Long Statement,ChanArchiver.HttpServerHandlers.PageHandlers,OverviewPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\OverviewPageHandler.cs,get_NetWorkStats,The length of the statement  "            double percent_thumb = NetworkUsageCounter.TotalThisHour == 0 ? 0 : (NetworkUsageCounter.ThumbConsumedThisHour / NetworkUsageCounter.TotalThisHour) * 100; " is 154.
Long Statement,ChanArchiver.HttpServerHandlers.PageHandlers,OverviewPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\OverviewPageHandler.cs,get_NetWorkStats,The length of the statement  "            double percent_file = NetworkUsageCounter.TotalThisHour == 0 ? 0 : (NetworkUsageCounter.FileConsumedThisHour / NetworkUsageCounter.TotalThisHour) * 100; " is 152.
Long Statement,ChanArchiver.HttpServerHandlers.PageHandlers,ThreadFiltersPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\ThreadsFiltersPageHandler.cs,GetThreadFiltersTableHtml,The length of the statement  "                            notes_form.Append("<span class=\"input-group-btn\"><button type='submit' class='btn btn-default'>Save</button></span>"); " is 120.
Long Statement,ChanArchiver.HttpServerHandlers.PageHandlers,ThreadFiltersPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\ThreadsFiltersPageHandler.cs,GetThreadFiltersTableHtml,The length of the statement  "                        //sb.AppendFormat("<td><a class='label label-warning' href='/filters/?mode=edit&b={0}&i={1}'>Edit</a></td>"' bw.Board' index); " is 126.
Long Statement,ChanArchiver.HttpServerHandlers.PageHandlers,ThreadFiltersPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\ThreadsFiltersPageHandler.cs,GetThreadFiltersTableHtml,The length of the statement  "                        sb.AppendFormat("<td><a class=\"btn btn-default\" title='Delete' href='/filters/?mode=delete&b={0}&i={1}'><i class=\"fa fa-trash-o\"></i></a></td>"' bw.Board' index); " is 166.
Long Statement,ChanArchiver.HttpServerHandlers.PageHandlers,ThreadFiltersPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\ThreadsFiltersPageHandler.cs,get_available_filters,The length of the statement  "            sb.AppendFormat("<option value='{0}'>{1}</option>"' "ChanArchiver.Filters.CommentFilter"' "Comment Filter (case insensitive)"); " is 127.
Long Statement,ChanArchiver.HttpServerHandlers.PageHandlers,ThreadFiltersPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\ThreadsFiltersPageHandler.cs,get_available_filters,The length of the statement  "            sb.AppendFormat("<option value='{0}'>{1}</option>"' "ChanArchiver.Filters.SubjectFilter"' "Subject Filter (case insensitive)"); " is 127.
Long Statement,ChanArchiver.HttpServerHandlers.PageHandlers,ThreadFiltersPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\ThreadsFiltersPageHandler.cs,get_available_filters,The length of the statement  "            sb.AppendFormat("<option value='{0}'>{1}</option>"' "ChanArchiver.Filters.FileHashFilter"' "FileHash Filter (not regex)"); " is 122.
Long Statement,ChanArchiver.HttpServerHandlers.PageHandlers,ThreadFiltersPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\ThreadsFiltersPageHandler.cs,get_available_filters,The length of the statement  "            sb.AppendFormat("<option value='{0}'>{1}</option>"' "ChanArchiver.Filters.FileNameFilter"' "FileName Filter (case insensitive)"); " is 129.
Long Statement,ChanArchiver.HttpServerHandlers.PageHandlers,WatchJobsPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\WatchJobsPageHandler.cs,GetWatchedThreadsTableHtml,The length of the statement  "                            sb.AppendFormat("<td><a class=\"btn btn-default\" href='/action/removethreadworker/?board={0}&id={1}' title='Remove'><i class=\"fa fa-trash-o\"></i></a></td>"' tw.Board.Board' tw.ID); " is 183.
Long Statement,ChanArchiver.HttpServerHandlers.PageHandlers,WatchJobsPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\WatchJobsPageHandler.cs,GetWatchedThreadsTableHtml,The length of the statement  "                            sb.AppendFormat("<td>{0}</td>"' tw.AddedAutomatically ? "<span class=\"label label-primary\">Yes</span>" : "<span class=\"label label-default\">No</span>"); " is 156.
Long Statement,ChanArchiver.HttpServerHandlers.PageHandlers,WatchJobsPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\WatchJobsPageHandler.cs,GetWatchedThreadsTableHtml,The length of the statement  "                            sb.AppendFormat("<td>{0}</td>"' tw.ThumbOnly ? "<span class=\"label label-primary\">Yes</span>" : "<span class=\"label label-default\">No</span>"); " is 147.
Long Statement,ChanArchiver.HttpServerHandlers.PageHandlers,WatchJobsPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\WatchJobsPageHandler.cs,GetWatchedThreadsTableHtml,The length of the statement  "                            sb.AppendFormat("<td>{0}</td>"' tw.AutoSage ? "<span class=\"label label-primary\">Yes</span>" : "<span class=\"label label-default\">No</span>"); " is 146.
Long Statement,ChanArchiver.HttpServerHandlers.PageHandlers,WatchJobsPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\WatchJobsPageHandler.cs,GetWatchedThreadsTableHtml,The length of the statement  "                            sb.AppendFormat("<td>{0}</td>"' tw.ImageLimitReached ? "<span class=\"label label-primary\">Yes</span>" : "<span class=\"label label-default\">No</span>"); " is 155.
Long Statement,ChanArchiver.HttpServerHandlers.PageHandlers,WatchJobsPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\WatchJobsPageHandler.cs,GetWatchedThreadsTableHtml,The length of the statement  "                            sb.AppendFormat("<td> <a href='/threadinfo?board={0}&id={1}' class='label label-primary'>Info</a> </td>"' bw.Board' tw.ID); " is 123.
Long Statement,ChanArchiver.HttpServerHandlers,FileHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\FileHandler.cs,Process,The length of the statement  "                            psr.Arguments = string.Format("-y -i \"{0}\" -c:v libx264 -preset ultrafast -vf scale=320:240 -threads 2 \"{1}\""' path' temp_path); " is 132.
Long Statement,ChanArchiver.HttpServerHandlers,FileHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\FileHandler.cs,Process,The length of the statement  "                                psr.Arguments = string.Format("-y -i \"{0}\" -threads 2 -c:v libx264 -preset ultrafast \"{1}\""' was_gif_path' temp_path); " is 122.
Long Statement,ChanArchiver.HttpServerHandlers,FileHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\FileHandler.cs,Process,The length of the statement  "                        response.AddHeader("content-disposition"' string.Format("attachment; filename=\"{0}\""' custom_name.Replace("\""' ""))); " is 120.
Long Statement,ChanArchiver.HttpServerHandlers.JsonApi,GetFileInfoJsonApiHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\JsonApi\GetFileInfoJsonApiHandler.cs,Process,The length of the statement  "                        ob.Add("s"' string.Format("{0} / {1}"' Program.format_size_string(f.Downloaded)' Program.format_size_string(f.Length))); " is 120.
Long Statement,ChanArchiver.HttpServerHandlers.SettingsAction,ThumbnailOnlySettingsController,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\SettingsAction\ThumbnailOnlySettingsController.cs,GetLinkToThisPage,The length of the statement  "            return string.Format("{0}?{1}={2}&{3}={4}"' Url' UrlParameters.IsEnabled' isEnabled' UrlParameters.RedirectUrl' redirectUrl); " is 125.
Long Statement,ChanArchiver.HttpServerHandlers.ThreadsAction,DownloadAsZipHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ThreadsAction\DownloadAsZipHandler.cs,Process,The length of the statement  "                zipStream.SetLevel(0); // no compression is needed since most of the files are media files' and they are already compressed anyway " is 130.
Long Statement,ChanArchiver.HttpServerHandlers.ThreadsAction,DownloadAsZipHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ThreadsAction\DownloadAsZipHandler.cs,GetLinkToThisPage,The length of the statement  "            return string.Format("{0}?{1}={2}&{3}={4}"' Url' UrlParameters.Board' board' UrlParameters.ThreadId' threadid.ToString()); " is 122.
Long Statement,ChanArchiver.HttpServerHandlers.ThreadsAction,ThreadNotesHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ThreadsAction\ThreadNotesHandler.cs,GetLinkToThisPage,The length of the statement  "            return string.Format("{0}?{1}={2}&{3}={4}"' Url' UrlParameters.Board' board' UrlParameters.ThreadId' threadid.ToString()); " is 122.
Long Statement,Jayrock.Configuration,DictionarySectionHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Configuration\DictionarySectionHandler.cs,Create,The length of the statement  "                        throw new ConfigurationException(string.Format("'{0}' is not a valid dictionary node. Use add' remove or clear."' nodeName)' childNode); " is 136.
Long Statement,Jayrock.Configuration,ListSectionHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Configuration\ListSectionHandler.cs,Create,The length of the statement  "                    throw new ConfigurationException(string.Format("Element <{0}> is not valid here in configuration. Use <{1}> elements only."'  " is 124.
Long Statement,Jayrock.Configuration,TypeListSectionHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Configuration\TypeListSectionHandler.cs,GetItem,The length of the statement  "                throw new ConfigurationException(string.Format("Missing type name specification on <{0}> element."' ElementName)' element); " is 123.
Long Statement,Jayrock.Configuration,TypeListSectionHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Configuration\TypeListSectionHandler.cs,ValidateType,The length of the statement  "                throw new ConfigurationException(string.Format("The type {0} is not valid for the <{2}> configuration element. It must be compatible with the type {1}."' type.FullName' ExpectedType.FullName' element.Name)' element); " is 216.
Long Statement,Jayrock.Dynamic,DynamicMetaObject<T>,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Dynamic\DynamicMetaObject.cs,BindCreateInstance,The length of the statement  "                 ? CallMethodWithResult("TryCreateInstance"' binder' GetArgArray(args)' e => binder.FallbackCreateInstance(this' args' e))  " is 121.
Long Statement,Jayrock.Dynamic,DynamicMetaObject<T>,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Dynamic\DynamicMetaObject.cs,BindInvoke,The length of the statement  "            return _runtime.TryInvoke != null ? CallMethodWithResult("TryInvoke"' binder' GetArgArray(args)' e => binder.FallbackInvoke(this' args' e)) : base.BindInvoke(binder' args); " is 172.
Long Statement,Jayrock.Dynamic,DynamicMetaObject<T>,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Dynamic\DynamicMetaObject.cs,BindBinaryOperation,The length of the statement  "                return CallMethodWithResult("TryBinaryOperation"' binder' GetArgs(arg)' e => binder.FallbackBinaryOperation(this' arg' e)); " is 123.
Long Statement,Jayrock.Dynamic,DynamicMetaObject<T>,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Dynamic\DynamicMetaObject.cs,BindSetIndex,The length of the statement  "                 ? CallMethodReturnLast("TrySetIndex"' binder' GetArgArray(indexes' value)' e => binder.FallbackSetIndex(this' indexes' value' e))  " is 129.
Long Statement,Jayrock.Dynamic,DynamicMetaObject<T>,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Dynamic\DynamicMetaObject.cs,BindCreateInstance,The length of the statement  "                 ? CallMethodWithResult("TryCreateInstance"' binder' GetArgArray(args)' e => binder.FallbackCreateInstance(this' args' e))  " is 121.
Long Statement,Jayrock.Dynamic,DynamicMetaObject<T>,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Dynamic\DynamicMetaObject.cs,BindInvoke,The length of the statement  "            return _runtime.TryInvoke != null ? CallMethodWithResult("TryInvoke"' binder' GetArgArray(args)' e => binder.FallbackInvoke(this' args' e)) : base.BindInvoke(binder' args); " is 172.
Long Statement,Jayrock.Dynamic,DynamicMetaObject<T>,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Dynamic\DynamicMetaObject.cs,BindBinaryOperation,The length of the statement  "                return CallMethodWithResult("TryBinaryOperation"' binder' GetArgs(arg)' e => binder.FallbackBinaryOperation(this' arg' e)); " is 123.
Long Statement,Jayrock.Dynamic,DynamicMetaObject<T>,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Dynamic\DynamicMetaObject.cs,BindSetIndex,The length of the statement  "                 ? CallMethodReturnLast("TrySetIndex"' binder' GetArgArray(indexes' value)' e => binder.FallbackSetIndex(this' indexes' value' e))  " is 129.
Long Statement,Jayrock.Json,JsonObject,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonObject.cs,OnValidate,The length of the statement  "                throw new ArgumentException(string.Format("The key cannot be of the supplied type {0}. It must be typed System.String."' key.GetType().FullName)' "key"); " is 153.
Long Statement,Jayrock.Json,JsonTokenClass,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonTokenClass.cs,GetRealObject,The length of the statement  "            throw new SerializationException(string.Format("{0} is not a valid {1} instance."' Name' typeof(JsonTokenClass).FullName)); " is 123.
Long Statement,Jayrock.Json.Conversion,TypeMemberDescriptor,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\CustomTypeDescriptor.cs,ApplyCustomizations,The length of the statement  "                IPropertyDescriptorCustomization[] customizations = (IPropertyDescriptorCustomization[]) Member.GetCustomAttributes(typeof(IPropertyDescriptorCustomization)' true); " is 164.
Long Statement,Jayrock.Json.Conversion,ImportContext,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\ImportContext.cs,FindCompatibleImporter,The length of the statement  "            bool isGenericCollection = !isGenericList && Reflector.IsConstructionOfGenericTypeDefinition(type' typeof(ICollection<>)); " is 122.
Long Statement,Jayrock.Json.Conversion,ImportContext,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\ImportContext.cs,FindCompatibleImporter,The length of the statement  "            bool isSequence = !isGenericCollection && (type == typeof(IEnumerable) || Reflector.IsConstructionOfGenericTypeDefinition(type' typeof(IEnumerable<>))); " is 152.
Long Statement,Jayrock.Json.Conversion,ImportContext,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\ImportContext.cs,FindCompatibleImporter,The length of the statement  "                return (IImporter)Activator.CreateInstance(typeof(CollectionImporter<''>).MakeGenericType(new Type[] { hashSetType' type' typeArguments[0] })); " is 143.
Long Statement,Jayrock.Json.Conversion.Converters,ArrayImporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\ArrayImporter.cs,AssertArrayType,The length of the statement  "                throw new ArgumentException(string.Format("{0} is not one-dimension array. Multi-dimensional arrays are not supported."' type.FullName)' "arrayType"); " is 150.
Long Statement,Jayrock.Json.Conversion.Converters,BooleanImporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\BooleanImporter.cs,ImportFromNumber,The length of the statement  "                throw new JsonException(string.Format("The JSON Number {0} must be an integer to be convertible to System.Boolean."' reader.Text)' e); " is 134.
Long Statement,Jayrock.Json.Conversion.Converters,ByteArrayImporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\ByteArrayImporter.cs,ImportFromString,The length of the statement  "                throw new JsonException("Error converting JSON String containing base64-encode data to " + OutputType.FullName + "."' e); " is 121.
Long Statement,Jayrock.Json.Conversion.Converters,ObjectReferenceTracker,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\ComponentExporter.cs,PushNew,The length of the statement  "                        throw new JsonException(string.Format("{0} does not support export of an object graph containing circular references. A value of type {1} has already been exported."' typeof(ComponentExporter).FullName' value.GetType().FullName)); " is 230.
Long Statement,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,FormatDateTime,The length of the statement  "            // http://stackoverflow.com/questions/1176276/how-do-i-improve-the-performance-of-code-using-datetime-tostring/1176350#1176350 " is 126.
Long Statement,Jayrock.Json.Conversion.Converters,DateTimeImporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeImporter.cs,GetImportException,The length of the statement  "            return new JsonException(string.Format("Found {0} where expecting a JSON String in ISO 8601 time format or a JSON Number expressed in Unix time."' jsonValueType)); " is 163.
Long Statement,Jayrock.Json.Conversion.Converters,EnumImporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\EnumImporter.cs,Error,The length of the statement  "            return new JsonException(string.Format("The value '{0}' cannot be imported as {1}."' DebugString.Format(s)' OutputType.FullName)' e); " is 133.
Long Statement,Jayrock.Json.Conversion.Converters,NameValueCollectionImporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\NameValueCollectionImporter.cs,GetValueAsString,The length of the statement  "                throw new JsonException(string.Format("Cannot put a JSON {0} value in a NameValueCollection instance."' reader.TokenClass)); " is 124.
Long Statement,Jayrock.Reflection,Reflector,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Reflection\Reflector.cs,IsConstructionOfGenericTypeDefinition,The length of the statement  "                throw new ArgumentException(string.Format("{0} is not a generic type definition."' genericTypeDefinition)' "genericTypeDefinition"); " is 132.
Long Statement,Jayrock.JsonRpc,JsonRpcDispatcher,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\JsonRpcDispatcher.cs,Invoke,The length of the statement  "                    throw new JsonRpcException(string.Format("Method {1} on service {0} is not allowed for idempotent type of requests."' ServiceName' methodName)); " is 144.
Long Statement,Jayrock.JsonRpc,JsonRpcMethodAttribute,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\JsonRpcMethodAttribute.cs,Build,The length of the statement  "                        "Methods using warped parameters must accept a single argument of the warped type whereas method {1} on {0} accepts {2}."' " is 122.
Long Statement,Jayrock.JsonRpc,JsonRpcService,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\JsonRpcService.cs,SystemAbout,The length of the statement  "            AssemblyConfigurationAttribute configuration = (AssemblyConfigurationAttribute) Attribute.GetCustomAttribute(assembly' typeof(AssemblyConfigurationAttribute)); " is 159.
Long Statement,Jayrock.JsonRpc,JsonRpcService,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\JsonRpcService.cs,SystemAbout,The length of the statement  "            AssemblyFileVersionAttribute version = (AssemblyFileVersionAttribute) Attribute.GetCustomAttribute(assembly' typeof(AssemblyFileVersionAttribute)); " is 147.
Long Statement,Jayrock.JsonRpc,JsonRpcService,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\JsonRpcService.cs,SystemAbout,The length of the statement  "            AssemblyCopyrightAttribute copyright = (AssemblyCopyrightAttribute) Attribute.GetCustomAttribute(assembly' typeof(AssemblyCopyrightAttribute)); " is 143.
Long Statement,Jayrock.JsonRpc,JsonRpcServiceReflector,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\JsonRpcServiceReflector.cs,BuildClass,The length of the statement  "            IServiceClassReflector reflector = (IServiceClassReflector) FindCustomAttribute(type' typeof(IServiceClassReflector)' true); " is 124.
Long Statement,Jayrock.JsonRpc,JsonRpcServices,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\JsonRpcServices.cs,GetResult,The length of the statement  "                throw new ArgumentException("Response object is not valid because it does not contain the expected 'result' member."' "response"); " is 130.
Long Statement,Jayrock.JsonRpc.Web,JsonRpcExecutive,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\Web\JsonRpcExecutive.cs,ProcessRequest,The length of the statement  "                throw new JsonRpcException(string.Format("HTTP {0} is not supported for RPC execution. Use HTTP POST only."' Request.RequestType)); " is 131.
Long Statement,Jayrock.JsonRpc.Web,JsonRpcGetProtocol,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\Web\JsonRpcGetProtocol.cs,ProcessRequest,The length of the statement  "                throw new JsonRpcException(string.Format("HTTP {0} is not supported for RPC execution. Use HTTP GET or HEAD only."' httpMethod)); " is 129.
Long Statement,Jayrock.JsonRpc.Web,JsonRpcHelp,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\Web\JsonRpcHelp.cs,AddContent,The length of the statement  "                AddPara(content' null' "The following method(s) of this service are marked as idempotent and therefore safe for use with HTTP GET:"); " is 133.
Long Statement,Jayrock.JsonRpc.Web,JsonRpcPage,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\Web\JsonRpcPage.cs,OnInit,The length of the statement  "            LiteralControl docType = new LiteralControl("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">"); " is 154.
Long Statement,Jayrock.JsonRpc.Web,JsonRpcPythonProxyGenerator,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\Web\JsonRpcPythonProxyGenerator.cs,WriteClassTail,The length of the statement  "        response = simplejson.loads(urllib.urlopen(self.url' urllib.urlencode([('JSON-RPC'' simplejson.dumps({ 'id' : self.__id' 'method' : method' 'params' : params }))])).read()) " is 172.
Long Statement,Jayrock.JsonRpc.Web,JsonRpcTester,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\Web\JsonRpcTester.cs,AddContent,The length of the statement  "                        setText(stats' 'Time taken = ' + (response.timeTaken / 1000).toFixed(4) + ' milliseconds; Response size = ' + response.http.text.length.formatWhole() + ' char(s)'); " is 164.
Long Statement,Jayrock.JsonRpc.Web,JsonRpcTester,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\Web\JsonRpcTester.cs,AddContent,The length of the statement  "                    http.send('{\""id\"":' + request.id + ''\""method\"":\""' + request.method + '\""'\""params\"":' + request.params + '}'); " is 121.
Long Statement,Jayrock.Services,SynchronousAsyncResult,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\Services\SynchronousAsyncResult.cs,End,The length of the statement  "                throw new InvalidOperationException(string.Format("End {0} can only be called once for each asynchronous operation."' methodName)); " is 131.
Long Statement,Jayrock.Services,TypeMethodImpl,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\Services\TypeMethodImpl.cs,EndInvoke,The length of the statement  "                throw new ArgumentException("IAsyncResult object did not come from the corresponding async method on this type."' "asyncResult"); " is 129.
Long Statement,Amib.Threading.Internal,CallerThreadContext,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\CallerThreadContext.cs,Capture,The length of the statement  "				callerThreadContext._callContext = (LogicalCallContext)getLogicalCallContextMethodInfo.Invoke(Thread.CurrentThread' null); " is 122.
Long Statement,Amib.Threading.Internal,WorkItemsGroupBase,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItemsGroupBase.cs,QueueWorkItem,The length of the statement  "            WorkItem workItem = WorkItemFactory.CreateWorkItem(this' WIGStartInfo' callback' state' postExecuteWorkItemCallback' workItemPriority); " is 135.
Long Statement,Amib.Threading.Internal,WorkItemsGroupBase,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItemsGroupBase.cs,QueueWorkItem,The length of the statement  "            WorkItem workItem = WorkItemFactory.CreateWorkItem(this' WIGStartInfo' callback' state' postExecuteWorkItemCallback' callToPostExecute); " is 136.
Long Statement,Amib.Threading.Internal,WorkItemsGroupBase,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItemsGroupBase.cs,QueueWorkItem,The length of the statement  "            WorkItem workItem = WorkItemFactory.CreateWorkItem(this' WIGStartInfo' callback' state' postExecuteWorkItemCallback' callToPostExecute' workItemPriority); " is 154.
Long Statement,Amib.Threading,SmartThreadPool,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\SmartThreadPool.cs,Initialize,The length of the statement  "                throw new NotSupportedException("Performance counters are not implemented for Compact Framework/Silverlight/Mono' instead use StpStartInfo.EnableLocalPerformanceCounters"); " is 172.
Long Statement,Amib.Threading,SmartThreadPool,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\SmartThreadPool.cs,ValidateWorkItemsGroupWaitForIdle,The length of the statement  "				throw new NotSupportedException("WaitForIdle cannot be called from a thread on its SmartThreadPool' it causes a deadlock"); " is 123.
Long Statement,Amib.Threading,SmartThreadPool,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\SmartThreadPool.cs,ValidateWorkItemsGroupWaitForIdleImpl,The length of the statement  "				throw new NotSupportedException("WaitForIdle cannot be called from a thread on its SmartThreadPool' it causes a deadlock"); " is 123.
Long Statement,Amib.Threading,SmartThreadPool,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\SmartThreadPool.cs,Choice,The length of the statement  "                workItemsGroup.QueueWorkItem(() => { act(); Interlocked.CompareExchange(ref choiceIndex._index' value' -1); anActionCompleted.Set(); }); " is 136.
Long Statement,ChanArchiver.Thread_Storage,FolderStorageEngine,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Thread Storage\FolderStorageEngine.cs,GetThread,The length of the statement  "                    Directory.EnumerateFiles(thread_dir_path' "*.json"' SearchOption.TopDirectoryOnly).OrderBy(x => Path.GetFileNameWithoutExtension(x))) " is 133.
Complex Conditional,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,GetXmlName,The conditional expression  "((name[i] >= 'a') && (name[i] <= 'z')) ||                      ((name[i] >= '0') && (name[i] <= '9')) ||                      //					(name[i]==':') || (name[i]=='_') || (name[i]=='-') || (name[i]=='.')) // these are bads in fact                      (name[i] == '_') || (name[i] == '-') || (name[i] == '.')"  is complex.
Complex Conditional,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,IsWhiteSpace,The conditional expression  "(c == 10) || (c == 13) || (c == 32) || (c == 9)"  is complex.
Complex Conditional,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,Entitize,The conditional expression  "(code > 127) ||                      (entitizeQuotAmpAndLtGt && ((code == 34) || (code == 38) || (code == 60) || (code == 62)))"  is complex.
Complex Conditional,HtmlAgilityPack,HtmlNode,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteAttribute,The conditional expression  "(att.Name[0] == '<') && (att.Name[1] == '%') &&                          (att.Name[att.Name.Length - 1] == '>') && (att.Name[att.Name.Length - 2] == '%')"  is complex.
Complex Conditional,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,Main,The conditional expression  "arg == "-help" || arg == "--help" || arg == "/help" || arg == "-h""  is complex.
Complex Conditional,ChanArchiver.HttpServerHandlers.PageHandlers,WatchJobsPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\WatchJobsPageHandler.cs,GetWatchedThreadsTableHtml,The conditional expression  "tw.AddedAutomatically && (!tw.IsActive) &&                                  (bw.Mode == BoardWatcher.BoardMode.Whitelist || bw.Mode == BoardWatcher.BoardMode.Blacklist)"  is complex.
Complex Conditional,ChanArchiver.HttpServerHandlers,FileHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\FileHandler.cs,Process,The conditional expression  "Settings.Convert_Webmgif_To_Target /*the general switch to gif to x*/ &&                          (!Settings.Convert_Webmgif_only_devices || (Settings.Convert_Webmgif_only_devices && no_webm))"  is complex.
Complex Conditional,Jayrock.Json,JsonReader,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonReader.cs,ReadToken,The conditional expression  "depth == 0 && TokenClass == JsonTokenClass.Array &&                  (token.IsScalar || token == JsonTokenClass.Null)"  is complex.
Complex Conditional,Jayrock.Json,JsonTextReader,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonTextReader.cs,Parse,The conditional expression  "(b >= '0' && b <= '9') || b == '.' || b == '-' || b == '+'"  is complex.
Complex Conditional,Jayrock.Json.Conversion,CustomTypeDescriptor,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\CustomTypeDescriptor.cs,CustomTypeDescriptor,The conditional expression  "(property.CanRead) &&                          (isAnonymousClass || property.CanWrite || property.IsDefined(typeof(JsonExportAttribute)' true)) &&                          property.GetIndexParameters().Length == 0"  is complex.
Complex Conditional,Jayrock.Json.Conversion,ExportContext,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\ExportContext.cs,FindCompatibleExporter,The conditional expression  "(type.IsPublic || type.IsNestedPublic) &&                  !type.IsPrimitive && !type.IsEnum &&                  (type.IsValueType || type.GetConstructor(Type.EmptyTypes) != null)"  is complex.
Complex Conditional,Jayrock.Json.Conversion,ImportContext,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\ImportContext.cs,FindCompatibleImporter,The conditional expression  "(type.IsPublic || type.IsNestedPublic) &&                   !type.IsPrimitive &&                   (type.IsValueType || type.GetConstructor(Type.EmptyTypes) != null)"  is complex.
Complex Conditional,Jayrock.Services,Method,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\Services\Method.cs,MapArguments,The conditional expression  "ch1 >= '0' && ch1 <= '9' &&                          ch2 >= '0' && ch2 <= '9'"  is complex.
Virtual Method Call from Constructor,Jayrock.Json,JsonObject,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonObject.cs,JsonObject,The constructor "JsonObject" calls a virtual method "Accumulate".
Empty Catch Block,HtmlAgilityPack,HtmlCmdLine,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlCmdLine.cs,GetIntArg,The method has an empty catch block.
Empty Catch Block,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Load,The method has an empty catch block.
Empty Catch Block,ChanArchiver,ArchivesProvider,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\ArchivesProvider.cs,update,The method has an empty catch block.
Empty Catch Block,ChanArchiver,ArchivesProvider,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\ArchivesProvider.cs,update,The method has an empty catch block.
Empty Catch Block,ChanArchiver,BoardWatcher,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\BoardWatcher.cs,LoadManuallyAddedThreads,The method has an empty catch block.
Empty Catch Block,ChanArchiver,BoardWatcher,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\BoardWatcher.cs,StopMonitoring,The method has an empty catch block.
Empty Catch Block,ChanArchiver,BoardWatcher,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\BoardWatcher.cs,MatchFilters,The method has an empty catch block.
Empty Catch Block,ChanArchiver,FileIndex,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\FileIndex.cs,load_index_from_save_file,The method has an empty catch block.
Empty Catch Block,ChanArchiver,FileSystemStats,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\FileSystemStats.cs,Init,The method has an empty catch block.
Empty Catch Block,ChanArchiver,DirectoryStatsEntry,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\FileSystemStats.cs,my_watcher_Changed,The method has an empty catch block.
Empty Catch Block,ChanArchiver,DirectoryStatsEntry,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\FileSystemStats.cs,my_watcher_Deleted,The method has an empty catch block.
Empty Catch Block,ChanArchiver,DirectoryStatsEntry,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\FileSystemStats.cs,my_watcher_Created,The method has an empty catch block.
Empty Catch Block,ChanArchiver,JobQueue,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\JobQueue.cs,work,The method has an empty catch block.
Empty Catch Block,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,convert_all_gifs,The method has an empty catch block.
Empty Catch Block,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,make_swf_thumb,The method has an empty catch block.
Empty Catch Block,ChanArchiver.HttpServerHandlers.ThreadsAction,StopAllManuallyAddedThreadsHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ThreadsAction\StopAllManuallyAddedThreadsHandler.cs,Process,The method has an empty catch block.
Empty Catch Block,Jayrock.JsonRpc,JsonRpcService,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\JsonRpcService.cs,SystemAbout,The method has an empty catch block.
Empty Catch Block,Jayrock.JsonRpc,JsonRpcService,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\JsonRpcService.cs,SystemAbout,The method has an empty catch block.
Empty Catch Block,Jayrock.JsonRpc,JsonRpcService,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\JsonRpcService.cs,SystemAbout,The method has an empty catch block.
Empty Catch Block,Amib.Threading.Internal,WorkItem,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItem.cs,FireWorkItemCompleted,The method has an empty catch block.
Empty Catch Block,Amib.Threading.Internal,WorkItem,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItem.cs,FireWorkItemStarted,The method has an empty catch block.
Empty Catch Block,Amib.Threading.Internal,WorkItemsGroup,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItemsGroup.cs,FireOnIdleImpl,The method has an empty catch block.
Empty Catch Block,ChanArchiver.Thread_Storage,FolderStorageEngine,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Thread Storage\FolderStorageEngine.cs,GetThread,The method has an empty catch block.
Empty Catch Block,ChanArchiver.Thread_Storage,FolderStorageEngine,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Thread Storage\FolderStorageEngine.cs,load_post_data_str,The method has an empty catch block.
Magic Number,AniWrap,AniWrap,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\AniWrap.cs,GetAvailableBoards,The following statement contains a magic number: cached_catalog_data == null || cached_catalog_data != null && (DateTime.Now - cached_catalog_data.LastModified).Days > 6
Magic Number,AniWrap,AniWrap,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\AniWrap.cs,GetAvailableBoards,The following statement contains a magic number: bl = 300;
Magic Number,AniWrap,AniWrap,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\AniWrap.cs,GetAvailableBoards,The following statement contains a magic number: iml = 150;
Magic Number,AniWrap,AniWrap,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\AniWrap.cs,LoadAPI,The following statement contains a magic number: byte[] byteBuffer = new byte[2048];
Magic Number,AniWrap,AniWrap,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\AniWrap.cs,LoadAPI,The following statement contains a magic number: (iByteSize = s.Read(byteBuffer' 0' 2048)) > 0
Magic Number,HtmlAgilityPack,Crc32,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\crc32.cs,CRC32String,The following statement contains a magic number: hiByte = (byte) (uCharVal >> 8);
Magic Number,HtmlAgilityPack,Crc32,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\crc32.cs,AddToCRC32,The following statement contains a magic number: hiByte = (byte) (c >> 8);
Magic Number,HtmlAgilityPack,Crc32,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\crc32.cs,UPDC32,The following statement contains a magic number: return (crc_32_tab[((crc) ^ (octet)) & 0xff] ^ ((crc) >> 8));
Magic Number,HtmlAgilityPack,HtmlCmdLine,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlCmdLine.cs,GetIntArg,The following statement contains a magic number: Arg.Length < (Name.Length + 3)
Magic Number,HtmlAgilityPack,HtmlCmdLine,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlCmdLine.cs,GetIntArg,The following statement contains a magic number: ArgValue = Convert.ToInt32(Arg.Substring(Name.Length + 2' Arg.Length - Name.Length - 2));
Magic Number,HtmlAgilityPack,HtmlCmdLine,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlCmdLine.cs,GetIntArg,The following statement contains a magic number: ArgValue = Convert.ToInt32(Arg.Substring(Name.Length + 2' Arg.Length - Name.Length - 2));
Magic Number,HtmlAgilityPack,HtmlCmdLine,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlCmdLine.cs,GetStringArg,The following statement contains a magic number: Arg.Length < (Name.Length + 3)
Magic Number,HtmlAgilityPack,HtmlCmdLine,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlCmdLine.cs,GetStringArg,The following statement contains a magic number: ArgValue = Arg.Substring(Name.Length + 2' Arg.Length - Name.Length - 2);
Magic Number,HtmlAgilityPack,HtmlCmdLine,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlCmdLine.cs,GetStringArg,The following statement contains a magic number: ArgValue = Arg.Substring(Name.Length + 2' Arg.Length - Name.Length - 2);
Magic Number,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,IsWhiteSpace,The following statement contains a magic number: (c == 10) || (c == 13) || (c == 32) || (c == 9)
Magic Number,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,IsWhiteSpace,The following statement contains a magic number: (c == 10) || (c == 13) || (c == 32) || (c == 9)
Magic Number,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,IsWhiteSpace,The following statement contains a magic number: (c == 10) || (c == 13) || (c == 32) || (c == 9)
Magic Number,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,IsWhiteSpace,The following statement contains a magic number: (c == 10) || (c == 13) || (c == 32) || (c == 9)
Magic Number,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,IncrementPosition,The following statement contains a magic number: _c == 10
Magic Number,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,NewCheck,The following statement contains a magic number: (_text[_index + 1] == '-') &&                              (_text[_index + 2] == '-')
Magic Number,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,NewCheck,The following statement contains a magic number: _index < (_text.Length - 2)
Magic Number,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,NewCheck,The following statement contains a magic number: (_index - 1) <= (_text.Length - 2)
Magic Number,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: switch (_state)                  {                      case ParseState.Text:                          if (NewCheck())                              continue;                          break;                        case ParseState.WhichTag:                          if (NewCheck())                              continue;                          if (_c == '/')                          {                              PushNodeNameStart(false' _index);                          }                          else                          {                              PushNodeNameStart(true' _index - 1);                              DecrementPosition();                          }                          _state = ParseState.Tag;                          break;                        case ParseState.Tag:                          if (NewCheck())                              continue;                          if (IsWhiteSpace(_c))                          {                              PushNodeNameEnd(_index - 1);                              if (_state != ParseState.Tag)                                  continue;                              _state = ParseState.BetweenAttributes;                              continue;                          }                          if (_c == '/')                          {                              PushNodeNameEnd(_index - 1);                              if (_state != ParseState.Tag)                                  continue;                              _state = ParseState.EmptyTag;                              continue;                          }                          if (_c == '>')                          {                              PushNodeNameEnd(_index - 1);                              if (_state != ParseState.Tag)                                  continue;                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.Tag)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                          }                          break;                        case ParseState.BetweenAttributes:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                              continue;                            if ((_c == '/') || (_c == '?'))                          {                              _state = ParseState.EmptyTag;                              continue;                          }                            if (_c == '>')                          {                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                                if (_state != ParseState.BetweenAttributes)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                            PushAttributeNameStart(_index - 1);                          _state = ParseState.AttributeName;                          break;                        case ParseState.EmptyTag:                          if (NewCheck())                              continue;                            if (_c == '>')                          {                              if (!PushNodeEnd(_index' true))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                                if (_state != ParseState.EmptyTag)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          _state = ParseState.BetweenAttributes;                          break;                        case ParseState.AttributeName:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                          {                              PushAttributeNameEnd(_index - 1);                              _state = ParseState.AttributeBeforeEquals;                              continue;                          }                          if (_c == '=')                          {                              PushAttributeNameEnd(_index - 1);                              _state = ParseState.AttributeAfterEquals;                              continue;                          }                          if (_c == '>')                          {                              PushAttributeNameEnd(_index - 1);                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeName)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          break;                        case ParseState.AttributeBeforeEquals:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                              continue;                          if (_c == '>')                          {                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeBeforeEquals)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          if (_c == '=')                          {                              _state = ParseState.AttributeAfterEquals;                              continue;                          }                          // no equals' no whitespace' it's a new attrribute starting                          _state = ParseState.BetweenAttributes;                          DecrementPosition();                          break;                        case ParseState.AttributeAfterEquals:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                              continue;                            if ((_c == '\'') || (_c == '"'))                          {                              _state = ParseState.QuotedAttributeValue;                              PushAttributeValueStart(_index' _c);                              lastquote = _c;                              continue;                          }                          if (_c == '>')                          {                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeAfterEquals)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          PushAttributeValueStart(_index - 1);                          _state = ParseState.AttributeValue;                          break;                        case ParseState.AttributeValue:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                          {                              PushAttributeValueEnd(_index - 1);                              _state = ParseState.BetweenAttributes;                              continue;                          }                            if (_c == '>')                          {                              PushAttributeValueEnd(_index - 1);                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeValue)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          break;                        case ParseState.QuotedAttributeValue:                          if (_c == lastquote)                          {                              PushAttributeValueEnd(_index - 1);                              _state = ParseState.BetweenAttributes;                              continue;                          }                          if (_c == '<')                          {                              if (_index < _text.Length)                              {                                  if (_text[_index] == '%')                                  {                                      _oldstate = _state;                                      _state = ParseState.ServerSideCode;                                      continue;                                  }                              }                          }                          break;                        case ParseState.Comment:                          if (_c == '>')                          {                              if (_fullcomment)                              {                                  if ((_text[_index - 2] != '-') ||                                      (_text[_index - 3] != '-'))                                  {                                      continue;                                  }                              }                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          break;                        case ParseState.ServerSideCode:                          if (_c == '%')                          {                              if (_index < _text.Length)                              {                                  if (_text[_index] == '>')                                  {                                      switch (_oldstate)                                      {                                          case ParseState.AttributeAfterEquals:                                              _state = ParseState.AttributeValue;                                              break;                                            case ParseState.BetweenAttributes:                                              PushAttributeNameEnd(_index + 1);                                              _state = ParseState.BetweenAttributes;                                              break;                                            default:                                              _state = _oldstate;                                              break;                                      }                                      IncrementPosition();                                  }                              }                          }                          break;                        case ParseState.PcData:                          // look for </tag + 1 char                            // check buffer end                          if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1)))                          {                              if (string.Compare(_text.Substring(_index - 1' _currentnode._namelength + 2)'                                                 "</" + _currentnode.Name' true) == 0)                              {                                  int c = _text[_index - 1 + 2 + _currentnode.Name.Length];                                  if ((c == '>') || (IsWhiteSpace(c)))                                  {                                      // add the script as a text node                                      HtmlNode script = CreateNode(HtmlNodeType.Text'                                                                   _currentnode._outerstartindex +                                                                   _currentnode._outerlength);                                      script._outerlength = _index - 1 - script._outerstartindex;                                      _currentnode.AppendChild(script);                                          PushNodeStart(HtmlNodeType.Element' _index - 1);                                      PushNodeNameStart(false' _index - 1 + 2);                                      _state = ParseState.Tag;                                      IncrementPosition();                                  }                              }                          }                          break;                  }
Magic Number,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: switch (_state)                  {                      case ParseState.Text:                          if (NewCheck())                              continue;                          break;                        case ParseState.WhichTag:                          if (NewCheck())                              continue;                          if (_c == '/')                          {                              PushNodeNameStart(false' _index);                          }                          else                          {                              PushNodeNameStart(true' _index - 1);                              DecrementPosition();                          }                          _state = ParseState.Tag;                          break;                        case ParseState.Tag:                          if (NewCheck())                              continue;                          if (IsWhiteSpace(_c))                          {                              PushNodeNameEnd(_index - 1);                              if (_state != ParseState.Tag)                                  continue;                              _state = ParseState.BetweenAttributes;                              continue;                          }                          if (_c == '/')                          {                              PushNodeNameEnd(_index - 1);                              if (_state != ParseState.Tag)                                  continue;                              _state = ParseState.EmptyTag;                              continue;                          }                          if (_c == '>')                          {                              PushNodeNameEnd(_index - 1);                              if (_state != ParseState.Tag)                                  continue;                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.Tag)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                          }                          break;                        case ParseState.BetweenAttributes:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                              continue;                            if ((_c == '/') || (_c == '?'))                          {                              _state = ParseState.EmptyTag;                              continue;                          }                            if (_c == '>')                          {                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                                if (_state != ParseState.BetweenAttributes)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                            PushAttributeNameStart(_index - 1);                          _state = ParseState.AttributeName;                          break;                        case ParseState.EmptyTag:                          if (NewCheck())                              continue;                            if (_c == '>')                          {                              if (!PushNodeEnd(_index' true))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                                if (_state != ParseState.EmptyTag)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          _state = ParseState.BetweenAttributes;                          break;                        case ParseState.AttributeName:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                          {                              PushAttributeNameEnd(_index - 1);                              _state = ParseState.AttributeBeforeEquals;                              continue;                          }                          if (_c == '=')                          {                              PushAttributeNameEnd(_index - 1);                              _state = ParseState.AttributeAfterEquals;                              continue;                          }                          if (_c == '>')                          {                              PushAttributeNameEnd(_index - 1);                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeName)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          break;                        case ParseState.AttributeBeforeEquals:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                              continue;                          if (_c == '>')                          {                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeBeforeEquals)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          if (_c == '=')                          {                              _state = ParseState.AttributeAfterEquals;                              continue;                          }                          // no equals' no whitespace' it's a new attrribute starting                          _state = ParseState.BetweenAttributes;                          DecrementPosition();                          break;                        case ParseState.AttributeAfterEquals:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                              continue;                            if ((_c == '\'') || (_c == '"'))                          {                              _state = ParseState.QuotedAttributeValue;                              PushAttributeValueStart(_index' _c);                              lastquote = _c;                              continue;                          }                          if (_c == '>')                          {                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeAfterEquals)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          PushAttributeValueStart(_index - 1);                          _state = ParseState.AttributeValue;                          break;                        case ParseState.AttributeValue:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                          {                              PushAttributeValueEnd(_index - 1);                              _state = ParseState.BetweenAttributes;                              continue;                          }                            if (_c == '>')                          {                              PushAttributeValueEnd(_index - 1);                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeValue)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          break;                        case ParseState.QuotedAttributeValue:                          if (_c == lastquote)                          {                              PushAttributeValueEnd(_index - 1);                              _state = ParseState.BetweenAttributes;                              continue;                          }                          if (_c == '<')                          {                              if (_index < _text.Length)                              {                                  if (_text[_index] == '%')                                  {                                      _oldstate = _state;                                      _state = ParseState.ServerSideCode;                                      continue;                                  }                              }                          }                          break;                        case ParseState.Comment:                          if (_c == '>')                          {                              if (_fullcomment)                              {                                  if ((_text[_index - 2] != '-') ||                                      (_text[_index - 3] != '-'))                                  {                                      continue;                                  }                              }                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          break;                        case ParseState.ServerSideCode:                          if (_c == '%')                          {                              if (_index < _text.Length)                              {                                  if (_text[_index] == '>')                                  {                                      switch (_oldstate)                                      {                                          case ParseState.AttributeAfterEquals:                                              _state = ParseState.AttributeValue;                                              break;                                            case ParseState.BetweenAttributes:                                              PushAttributeNameEnd(_index + 1);                                              _state = ParseState.BetweenAttributes;                                              break;                                            default:                                              _state = _oldstate;                                              break;                                      }                                      IncrementPosition();                                  }                              }                          }                          break;                        case ParseState.PcData:                          // look for </tag + 1 char                            // check buffer end                          if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1)))                          {                              if (string.Compare(_text.Substring(_index - 1' _currentnode._namelength + 2)'                                                 "</" + _currentnode.Name' true) == 0)                              {                                  int c = _text[_index - 1 + 2 + _currentnode.Name.Length];                                  if ((c == '>') || (IsWhiteSpace(c)))                                  {                                      // add the script as a text node                                      HtmlNode script = CreateNode(HtmlNodeType.Text'                                                                   _currentnode._outerstartindex +                                                                   _currentnode._outerlength);                                      script._outerlength = _index - 1 - script._outerstartindex;                                      _currentnode.AppendChild(script);                                          PushNodeStart(HtmlNodeType.Element' _index - 1);                                      PushNodeNameStart(false' _index - 1 + 2);                                      _state = ParseState.Tag;                                      IncrementPosition();                                  }                              }                          }                          break;                  }
Magic Number,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: switch (_state)                  {                      case ParseState.Text:                          if (NewCheck())                              continue;                          break;                        case ParseState.WhichTag:                          if (NewCheck())                              continue;                          if (_c == '/')                          {                              PushNodeNameStart(false' _index);                          }                          else                          {                              PushNodeNameStart(true' _index - 1);                              DecrementPosition();                          }                          _state = ParseState.Tag;                          break;                        case ParseState.Tag:                          if (NewCheck())                              continue;                          if (IsWhiteSpace(_c))                          {                              PushNodeNameEnd(_index - 1);                              if (_state != ParseState.Tag)                                  continue;                              _state = ParseState.BetweenAttributes;                              continue;                          }                          if (_c == '/')                          {                              PushNodeNameEnd(_index - 1);                              if (_state != ParseState.Tag)                                  continue;                              _state = ParseState.EmptyTag;                              continue;                          }                          if (_c == '>')                          {                              PushNodeNameEnd(_index - 1);                              if (_state != ParseState.Tag)                                  continue;                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.Tag)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                          }                          break;                        case ParseState.BetweenAttributes:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                              continue;                            if ((_c == '/') || (_c == '?'))                          {                              _state = ParseState.EmptyTag;                              continue;                          }                            if (_c == '>')                          {                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                                if (_state != ParseState.BetweenAttributes)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                            PushAttributeNameStart(_index - 1);                          _state = ParseState.AttributeName;                          break;                        case ParseState.EmptyTag:                          if (NewCheck())                              continue;                            if (_c == '>')                          {                              if (!PushNodeEnd(_index' true))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                                if (_state != ParseState.EmptyTag)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          _state = ParseState.BetweenAttributes;                          break;                        case ParseState.AttributeName:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                          {                              PushAttributeNameEnd(_index - 1);                              _state = ParseState.AttributeBeforeEquals;                              continue;                          }                          if (_c == '=')                          {                              PushAttributeNameEnd(_index - 1);                              _state = ParseState.AttributeAfterEquals;                              continue;                          }                          if (_c == '>')                          {                              PushAttributeNameEnd(_index - 1);                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeName)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          break;                        case ParseState.AttributeBeforeEquals:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                              continue;                          if (_c == '>')                          {                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeBeforeEquals)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          if (_c == '=')                          {                              _state = ParseState.AttributeAfterEquals;                              continue;                          }                          // no equals' no whitespace' it's a new attrribute starting                          _state = ParseState.BetweenAttributes;                          DecrementPosition();                          break;                        case ParseState.AttributeAfterEquals:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                              continue;                            if ((_c == '\'') || (_c == '"'))                          {                              _state = ParseState.QuotedAttributeValue;                              PushAttributeValueStart(_index' _c);                              lastquote = _c;                              continue;                          }                          if (_c == '>')                          {                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeAfterEquals)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          PushAttributeValueStart(_index - 1);                          _state = ParseState.AttributeValue;                          break;                        case ParseState.AttributeValue:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                          {                              PushAttributeValueEnd(_index - 1);                              _state = ParseState.BetweenAttributes;                              continue;                          }                            if (_c == '>')                          {                              PushAttributeValueEnd(_index - 1);                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeValue)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          break;                        case ParseState.QuotedAttributeValue:                          if (_c == lastquote)                          {                              PushAttributeValueEnd(_index - 1);                              _state = ParseState.BetweenAttributes;                              continue;                          }                          if (_c == '<')                          {                              if (_index < _text.Length)                              {                                  if (_text[_index] == '%')                                  {                                      _oldstate = _state;                                      _state = ParseState.ServerSideCode;                                      continue;                                  }                              }                          }                          break;                        case ParseState.Comment:                          if (_c == '>')                          {                              if (_fullcomment)                              {                                  if ((_text[_index - 2] != '-') ||                                      (_text[_index - 3] != '-'))                                  {                                      continue;                                  }                              }                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          break;                        case ParseState.ServerSideCode:                          if (_c == '%')                          {                              if (_index < _text.Length)                              {                                  if (_text[_index] == '>')                                  {                                      switch (_oldstate)                                      {                                          case ParseState.AttributeAfterEquals:                                              _state = ParseState.AttributeValue;                                              break;                                            case ParseState.BetweenAttributes:                                              PushAttributeNameEnd(_index + 1);                                              _state = ParseState.BetweenAttributes;                                              break;                                            default:                                              _state = _oldstate;                                              break;                                      }                                      IncrementPosition();                                  }                              }                          }                          break;                        case ParseState.PcData:                          // look for </tag + 1 char                            // check buffer end                          if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1)))                          {                              if (string.Compare(_text.Substring(_index - 1' _currentnode._namelength + 2)'                                                 "</" + _currentnode.Name' true) == 0)                              {                                  int c = _text[_index - 1 + 2 + _currentnode.Name.Length];                                  if ((c == '>') || (IsWhiteSpace(c)))                                  {                                      // add the script as a text node                                      HtmlNode script = CreateNode(HtmlNodeType.Text'                                                                   _currentnode._outerstartindex +                                                                   _currentnode._outerlength);                                      script._outerlength = _index - 1 - script._outerstartindex;                                      _currentnode.AppendChild(script);                                          PushNodeStart(HtmlNodeType.Element' _index - 1);                                      PushNodeNameStart(false' _index - 1 + 2);                                      _state = ParseState.Tag;                                      IncrementPosition();                                  }                              }                          }                          break;                  }
Magic Number,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: switch (_state)                  {                      case ParseState.Text:                          if (NewCheck())                              continue;                          break;                        case ParseState.WhichTag:                          if (NewCheck())                              continue;                          if (_c == '/')                          {                              PushNodeNameStart(false' _index);                          }                          else                          {                              PushNodeNameStart(true' _index - 1);                              DecrementPosition();                          }                          _state = ParseState.Tag;                          break;                        case ParseState.Tag:                          if (NewCheck())                              continue;                          if (IsWhiteSpace(_c))                          {                              PushNodeNameEnd(_index - 1);                              if (_state != ParseState.Tag)                                  continue;                              _state = ParseState.BetweenAttributes;                              continue;                          }                          if (_c == '/')                          {                              PushNodeNameEnd(_index - 1);                              if (_state != ParseState.Tag)                                  continue;                              _state = ParseState.EmptyTag;                              continue;                          }                          if (_c == '>')                          {                              PushNodeNameEnd(_index - 1);                              if (_state != ParseState.Tag)                                  continue;                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.Tag)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                          }                          break;                        case ParseState.BetweenAttributes:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                              continue;                            if ((_c == '/') || (_c == '?'))                          {                              _state = ParseState.EmptyTag;                              continue;                          }                            if (_c == '>')                          {                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                                if (_state != ParseState.BetweenAttributes)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                            PushAttributeNameStart(_index - 1);                          _state = ParseState.AttributeName;                          break;                        case ParseState.EmptyTag:                          if (NewCheck())                              continue;                            if (_c == '>')                          {                              if (!PushNodeEnd(_index' true))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                                if (_state != ParseState.EmptyTag)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          _state = ParseState.BetweenAttributes;                          break;                        case ParseState.AttributeName:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                          {                              PushAttributeNameEnd(_index - 1);                              _state = ParseState.AttributeBeforeEquals;                              continue;                          }                          if (_c == '=')                          {                              PushAttributeNameEnd(_index - 1);                              _state = ParseState.AttributeAfterEquals;                              continue;                          }                          if (_c == '>')                          {                              PushAttributeNameEnd(_index - 1);                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeName)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          break;                        case ParseState.AttributeBeforeEquals:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                              continue;                          if (_c == '>')                          {                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeBeforeEquals)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          if (_c == '=')                          {                              _state = ParseState.AttributeAfterEquals;                              continue;                          }                          // no equals' no whitespace' it's a new attrribute starting                          _state = ParseState.BetweenAttributes;                          DecrementPosition();                          break;                        case ParseState.AttributeAfterEquals:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                              continue;                            if ((_c == '\'') || (_c == '"'))                          {                              _state = ParseState.QuotedAttributeValue;                              PushAttributeValueStart(_index' _c);                              lastquote = _c;                              continue;                          }                          if (_c == '>')                          {                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeAfterEquals)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          PushAttributeValueStart(_index - 1);                          _state = ParseState.AttributeValue;                          break;                        case ParseState.AttributeValue:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                          {                              PushAttributeValueEnd(_index - 1);                              _state = ParseState.BetweenAttributes;                              continue;                          }                            if (_c == '>')                          {                              PushAttributeValueEnd(_index - 1);                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeValue)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          break;                        case ParseState.QuotedAttributeValue:                          if (_c == lastquote)                          {                              PushAttributeValueEnd(_index - 1);                              _state = ParseState.BetweenAttributes;                              continue;                          }                          if (_c == '<')                          {                              if (_index < _text.Length)                              {                                  if (_text[_index] == '%')                                  {                                      _oldstate = _state;                                      _state = ParseState.ServerSideCode;                                      continue;                                  }                              }                          }                          break;                        case ParseState.Comment:                          if (_c == '>')                          {                              if (_fullcomment)                              {                                  if ((_text[_index - 2] != '-') ||                                      (_text[_index - 3] != '-'))                                  {                                      continue;                                  }                              }                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          break;                        case ParseState.ServerSideCode:                          if (_c == '%')                          {                              if (_index < _text.Length)                              {                                  if (_text[_index] == '>')                                  {                                      switch (_oldstate)                                      {                                          case ParseState.AttributeAfterEquals:                                              _state = ParseState.AttributeValue;                                              break;                                            case ParseState.BetweenAttributes:                                              PushAttributeNameEnd(_index + 1);                                              _state = ParseState.BetweenAttributes;                                              break;                                            default:                                              _state = _oldstate;                                              break;                                      }                                      IncrementPosition();                                  }                              }                          }                          break;                        case ParseState.PcData:                          // look for </tag + 1 char                            // check buffer end                          if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1)))                          {                              if (string.Compare(_text.Substring(_index - 1' _currentnode._namelength + 2)'                                                 "</" + _currentnode.Name' true) == 0)                              {                                  int c = _text[_index - 1 + 2 + _currentnode.Name.Length];                                  if ((c == '>') || (IsWhiteSpace(c)))                                  {                                      // add the script as a text node                                      HtmlNode script = CreateNode(HtmlNodeType.Text'                                                                   _currentnode._outerstartindex +                                                                   _currentnode._outerlength);                                      script._outerlength = _index - 1 - script._outerstartindex;                                      _currentnode.AppendChild(script);                                          PushNodeStart(HtmlNodeType.Element' _index - 1);                                      PushNodeNameStart(false' _index - 1 + 2);                                      _state = ParseState.Tag;                                      IncrementPosition();                                  }                              }                          }                          break;                  }
Magic Number,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: switch (_state)                  {                      case ParseState.Text:                          if (NewCheck())                              continue;                          break;                        case ParseState.WhichTag:                          if (NewCheck())                              continue;                          if (_c == '/')                          {                              PushNodeNameStart(false' _index);                          }                          else                          {                              PushNodeNameStart(true' _index - 1);                              DecrementPosition();                          }                          _state = ParseState.Tag;                          break;                        case ParseState.Tag:                          if (NewCheck())                              continue;                          if (IsWhiteSpace(_c))                          {                              PushNodeNameEnd(_index - 1);                              if (_state != ParseState.Tag)                                  continue;                              _state = ParseState.BetweenAttributes;                              continue;                          }                          if (_c == '/')                          {                              PushNodeNameEnd(_index - 1);                              if (_state != ParseState.Tag)                                  continue;                              _state = ParseState.EmptyTag;                              continue;                          }                          if (_c == '>')                          {                              PushNodeNameEnd(_index - 1);                              if (_state != ParseState.Tag)                                  continue;                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.Tag)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                          }                          break;                        case ParseState.BetweenAttributes:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                              continue;                            if ((_c == '/') || (_c == '?'))                          {                              _state = ParseState.EmptyTag;                              continue;                          }                            if (_c == '>')                          {                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                                if (_state != ParseState.BetweenAttributes)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                            PushAttributeNameStart(_index - 1);                          _state = ParseState.AttributeName;                          break;                        case ParseState.EmptyTag:                          if (NewCheck())                              continue;                            if (_c == '>')                          {                              if (!PushNodeEnd(_index' true))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                                if (_state != ParseState.EmptyTag)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          _state = ParseState.BetweenAttributes;                          break;                        case ParseState.AttributeName:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                          {                              PushAttributeNameEnd(_index - 1);                              _state = ParseState.AttributeBeforeEquals;                              continue;                          }                          if (_c == '=')                          {                              PushAttributeNameEnd(_index - 1);                              _state = ParseState.AttributeAfterEquals;                              continue;                          }                          if (_c == '>')                          {                              PushAttributeNameEnd(_index - 1);                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeName)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          break;                        case ParseState.AttributeBeforeEquals:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                              continue;                          if (_c == '>')                          {                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeBeforeEquals)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          if (_c == '=')                          {                              _state = ParseState.AttributeAfterEquals;                              continue;                          }                          // no equals' no whitespace' it's a new attrribute starting                          _state = ParseState.BetweenAttributes;                          DecrementPosition();                          break;                        case ParseState.AttributeAfterEquals:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                              continue;                            if ((_c == '\'') || (_c == '"'))                          {                              _state = ParseState.QuotedAttributeValue;                              PushAttributeValueStart(_index' _c);                              lastquote = _c;                              continue;                          }                          if (_c == '>')                          {                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeAfterEquals)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          PushAttributeValueStart(_index - 1);                          _state = ParseState.AttributeValue;                          break;                        case ParseState.AttributeValue:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                          {                              PushAttributeValueEnd(_index - 1);                              _state = ParseState.BetweenAttributes;                              continue;                          }                            if (_c == '>')                          {                              PushAttributeValueEnd(_index - 1);                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeValue)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          break;                        case ParseState.QuotedAttributeValue:                          if (_c == lastquote)                          {                              PushAttributeValueEnd(_index - 1);                              _state = ParseState.BetweenAttributes;                              continue;                          }                          if (_c == '<')                          {                              if (_index < _text.Length)                              {                                  if (_text[_index] == '%')                                  {                                      _oldstate = _state;                                      _state = ParseState.ServerSideCode;                                      continue;                                  }                              }                          }                          break;                        case ParseState.Comment:                          if (_c == '>')                          {                              if (_fullcomment)                              {                                  if ((_text[_index - 2] != '-') ||                                      (_text[_index - 3] != '-'))                                  {                                      continue;                                  }                              }                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          break;                        case ParseState.ServerSideCode:                          if (_c == '%')                          {                              if (_index < _text.Length)                              {                                  if (_text[_index] == '>')                                  {                                      switch (_oldstate)                                      {                                          case ParseState.AttributeAfterEquals:                                              _state = ParseState.AttributeValue;                                              break;                                            case ParseState.BetweenAttributes:                                              PushAttributeNameEnd(_index + 1);                                              _state = ParseState.BetweenAttributes;                                              break;                                            default:                                              _state = _oldstate;                                              break;                                      }                                      IncrementPosition();                                  }                              }                          }                          break;                        case ParseState.PcData:                          // look for </tag + 1 char                            // check buffer end                          if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1)))                          {                              if (string.Compare(_text.Substring(_index - 1' _currentnode._namelength + 2)'                                                 "</" + _currentnode.Name' true) == 0)                              {                                  int c = _text[_index - 1 + 2 + _currentnode.Name.Length];                                  if ((c == '>') || (IsWhiteSpace(c)))                                  {                                      // add the script as a text node                                      HtmlNode script = CreateNode(HtmlNodeType.Text'                                                                   _currentnode._outerstartindex +                                                                   _currentnode._outerlength);                                      script._outerlength = _index - 1 - script._outerstartindex;                                      _currentnode.AppendChild(script);                                          PushNodeStart(HtmlNodeType.Element' _index - 1);                                      PushNodeNameStart(false' _index - 1 + 2);                                      _state = ParseState.Tag;                                      IncrementPosition();                                  }                              }                          }                          break;                  }
Magic Number,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: switch (_state)                  {                      case ParseState.Text:                          if (NewCheck())                              continue;                          break;                        case ParseState.WhichTag:                          if (NewCheck())                              continue;                          if (_c == '/')                          {                              PushNodeNameStart(false' _index);                          }                          else                          {                              PushNodeNameStart(true' _index - 1);                              DecrementPosition();                          }                          _state = ParseState.Tag;                          break;                        case ParseState.Tag:                          if (NewCheck())                              continue;                          if (IsWhiteSpace(_c))                          {                              PushNodeNameEnd(_index - 1);                              if (_state != ParseState.Tag)                                  continue;                              _state = ParseState.BetweenAttributes;                              continue;                          }                          if (_c == '/')                          {                              PushNodeNameEnd(_index - 1);                              if (_state != ParseState.Tag)                                  continue;                              _state = ParseState.EmptyTag;                              continue;                          }                          if (_c == '>')                          {                              PushNodeNameEnd(_index - 1);                              if (_state != ParseState.Tag)                                  continue;                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.Tag)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                          }                          break;                        case ParseState.BetweenAttributes:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                              continue;                            if ((_c == '/') || (_c == '?'))                          {                              _state = ParseState.EmptyTag;                              continue;                          }                            if (_c == '>')                          {                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                                if (_state != ParseState.BetweenAttributes)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                            PushAttributeNameStart(_index - 1);                          _state = ParseState.AttributeName;                          break;                        case ParseState.EmptyTag:                          if (NewCheck())                              continue;                            if (_c == '>')                          {                              if (!PushNodeEnd(_index' true))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                                if (_state != ParseState.EmptyTag)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          _state = ParseState.BetweenAttributes;                          break;                        case ParseState.AttributeName:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                          {                              PushAttributeNameEnd(_index - 1);                              _state = ParseState.AttributeBeforeEquals;                              continue;                          }                          if (_c == '=')                          {                              PushAttributeNameEnd(_index - 1);                              _state = ParseState.AttributeAfterEquals;                              continue;                          }                          if (_c == '>')                          {                              PushAttributeNameEnd(_index - 1);                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeName)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          break;                        case ParseState.AttributeBeforeEquals:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                              continue;                          if (_c == '>')                          {                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeBeforeEquals)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          if (_c == '=')                          {                              _state = ParseState.AttributeAfterEquals;                              continue;                          }                          // no equals' no whitespace' it's a new attrribute starting                          _state = ParseState.BetweenAttributes;                          DecrementPosition();                          break;                        case ParseState.AttributeAfterEquals:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                              continue;                            if ((_c == '\'') || (_c == '"'))                          {                              _state = ParseState.QuotedAttributeValue;                              PushAttributeValueStart(_index' _c);                              lastquote = _c;                              continue;                          }                          if (_c == '>')                          {                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeAfterEquals)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          PushAttributeValueStart(_index - 1);                          _state = ParseState.AttributeValue;                          break;                        case ParseState.AttributeValue:                          if (NewCheck())                              continue;                            if (IsWhiteSpace(_c))                          {                              PushAttributeValueEnd(_index - 1);                              _state = ParseState.BetweenAttributes;                              continue;                          }                            if (_c == '>')                          {                              PushAttributeValueEnd(_index - 1);                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              if (_state != ParseState.AttributeValue)                                  continue;                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          break;                        case ParseState.QuotedAttributeValue:                          if (_c == lastquote)                          {                              PushAttributeValueEnd(_index - 1);                              _state = ParseState.BetweenAttributes;                              continue;                          }                          if (_c == '<')                          {                              if (_index < _text.Length)                              {                                  if (_text[_index] == '%')                                  {                                      _oldstate = _state;                                      _state = ParseState.ServerSideCode;                                      continue;                                  }                              }                          }                          break;                        case ParseState.Comment:                          if (_c == '>')                          {                              if (_fullcomment)                              {                                  if ((_text[_index - 2] != '-') ||                                      (_text[_index - 3] != '-'))                                  {                                      continue;                                  }                              }                              if (!PushNodeEnd(_index' false))                              {                                  // stop parsing                                  _index = _text.Length;                                  break;                              }                              _state = ParseState.Text;                              PushNodeStart(HtmlNodeType.Text' _index);                              continue;                          }                          break;                        case ParseState.ServerSideCode:                          if (_c == '%')                          {                              if (_index < _text.Length)                              {                                  if (_text[_index] == '>')                                  {                                      switch (_oldstate)                                      {                                          case ParseState.AttributeAfterEquals:                                              _state = ParseState.AttributeValue;                                              break;                                            case ParseState.BetweenAttributes:                                              PushAttributeNameEnd(_index + 1);                                              _state = ParseState.BetweenAttributes;                                              break;                                            default:                                              _state = _oldstate;                                              break;                                      }                                      IncrementPosition();                                  }                              }                          }                          break;                        case ParseState.PcData:                          // look for </tag + 1 char                            // check buffer end                          if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1)))                          {                              if (string.Compare(_text.Substring(_index - 1' _currentnode._namelength + 2)'                                                 "</" + _currentnode.Name' true) == 0)                              {                                  int c = _text[_index - 1 + 2 + _currentnode.Name.Length];                                  if ((c == '>') || (IsWhiteSpace(c)))                                  {                                      // add the script as a text node                                      HtmlNode script = CreateNode(HtmlNodeType.Text'                                                                   _currentnode._outerstartindex +                                                                   _currentnode._outerlength);                                      script._outerlength = _index - 1 - script._outerstartindex;                                      _currentnode.AppendChild(script);                                          PushNodeStart(HtmlNodeType.Element' _index - 1);                                      PushNodeNameStart(false' _index - 1 + 2);                                      _state = ParseState.Tag;                                      IncrementPosition();                                  }                              }                          }                          break;                  }
Magic Number,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,ReadDocumentEncoding,The following statement contains a magic number: node._namelength != 4
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("nbsp"' 160);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(160' "nbsp");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("iexcl"' 161);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(161' "iexcl");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("cent"' 162);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(162' "cent");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("pound"' 163);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(163' "pound");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("curren"' 164);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(164' "curren");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("yen"' 165);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(165' "yen");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("brvbar"' 166);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(166' "brvbar");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("sect"' 167);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(167' "sect");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("uml"' 168);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(168' "uml");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("copy"' 169);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(169' "copy");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("ordf"' 170);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(170' "ordf");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("laquo"' 171);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(171' "laquo");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("not"' 172);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(172' "not");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("shy"' 173);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(173' "shy");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("reg"' 174);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(174' "reg");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("macr"' 175);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(175' "macr");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("deg"' 176);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(176' "deg");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("plusmn"' 177);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(177' "plusmn");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("sup2"' 178);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(178' "sup2");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("sup3"' 179);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(179' "sup3");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("acute"' 180);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(180' "acute");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("micro"' 181);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(181' "micro");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("para"' 182);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(182' "para");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("middot"' 183);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(183' "middot");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("cedil"' 184);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(184' "cedil");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("sup1"' 185);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(185' "sup1");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("ordm"' 186);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(186' "ordm");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("raquo"' 187);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(187' "raquo");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("frac14"' 188);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(188' "frac14");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("frac12"' 189);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(189' "frac12");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("frac34"' 190);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(190' "frac34");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("iquest"' 191);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(191' "iquest");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Agrave"' 192);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(192' "Agrave");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Aacute"' 193);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(193' "Aacute");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Acirc"' 194);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(194' "Acirc");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Atilde"' 195);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(195' "Atilde");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Auml"' 196);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(196' "Auml");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Aring"' 197);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(197' "Aring");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("AElig"' 198);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(198' "AElig");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Ccedil"' 199);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(199' "Ccedil");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Egrave"' 200);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(200' "Egrave");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Eacute"' 201);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(201' "Eacute");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Ecirc"' 202);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(202' "Ecirc");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Euml"' 203);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(203' "Euml");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Igrave"' 204);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(204' "Igrave");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Iacute"' 205);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(205' "Iacute");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Icirc"' 206);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(206' "Icirc");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Iuml"' 207);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(207' "Iuml");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("ETH"' 208);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(208' "ETH");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Ntilde"' 209);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(209' "Ntilde");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Ograve"' 210);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(210' "Ograve");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Oacute"' 211);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(211' "Oacute");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Ocirc"' 212);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(212' "Ocirc");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Otilde"' 213);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(213' "Otilde");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Ouml"' 214);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(214' "Ouml");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("times"' 215);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(215' "times");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Oslash"' 216);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(216' "Oslash");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Ugrave"' 217);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(217' "Ugrave");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Uacute"' 218);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(218' "Uacute");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Ucirc"' 219);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(219' "Ucirc");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Uuml"' 220);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(220' "Uuml");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Yacute"' 221);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(221' "Yacute");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("THORN"' 222);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(222' "THORN");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("szlig"' 223);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(223' "szlig");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("agrave"' 224);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(224' "agrave");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("aacute"' 225);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(225' "aacute");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("acirc"' 226);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(226' "acirc");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("atilde"' 227);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(227' "atilde");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("auml"' 228);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(228' "auml");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("aring"' 229);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(229' "aring");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("aelig"' 230);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(230' "aelig");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("ccedil"' 231);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(231' "ccedil");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("egrave"' 232);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(232' "egrave");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("eacute"' 233);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(233' "eacute");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("ecirc"' 234);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(234' "ecirc");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("euml"' 235);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(235' "euml");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("igrave"' 236);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(236' "igrave");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("iacute"' 237);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(237' "iacute");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("icirc"' 238);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(238' "icirc");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("iuml"' 239);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(239' "iuml");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("eth"' 240);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(240' "eth");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("ntilde"' 241);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(241' "ntilde");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("ograve"' 242);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(242' "ograve");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("oacute"' 243);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(243' "oacute");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("ocirc"' 244);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(244' "ocirc");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("otilde"' 245);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(245' "otilde");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("ouml"' 246);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(246' "ouml");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("divide"' 247);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(247' "divide");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("oslash"' 248);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(248' "oslash");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("ugrave"' 249);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(249' "ugrave");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("uacute"' 250);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(250' "uacute");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("ucirc"' 251);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(251' "ucirc");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("uuml"' 252);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(252' "uuml");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("yacute"' 253);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(253' "yacute");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("thorn"' 254);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(254' "thorn");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("yuml"' 255);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(255' "yuml");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("fnof"' 402);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(402' "fnof");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Alpha"' 913);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(913' "Alpha");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Beta"' 914);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(914' "Beta");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Gamma"' 915);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(915' "Gamma");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Delta"' 916);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(916' "Delta");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Epsilon"' 917);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(917' "Epsilon");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Zeta"' 918);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(918' "Zeta");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Eta"' 919);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(919' "Eta");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Theta"' 920);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(920' "Theta");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Iota"' 921);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(921' "Iota");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Kappa"' 922);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(922' "Kappa");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Lambda"' 923);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(923' "Lambda");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Mu"' 924);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(924' "Mu");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Nu"' 925);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(925' "Nu");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Xi"' 926);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(926' "Xi");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Omicron"' 927);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(927' "Omicron");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Pi"' 928);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(928' "Pi");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Rho"' 929);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(929' "Rho");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Sigma"' 931);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(931' "Sigma");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Tau"' 932);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(932' "Tau");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Upsilon"' 933);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(933' "Upsilon");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Phi"' 934);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(934' "Phi");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Chi"' 935);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(935' "Chi");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Psi"' 936);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(936' "Psi");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Omega"' 937);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(937' "Omega");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("alpha"' 945);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(945' "alpha");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("beta"' 946);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(946' "beta");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("gamma"' 947);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(947' "gamma");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("delta"' 948);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(948' "delta");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("epsilon"' 949);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(949' "epsilon");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("zeta"' 950);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(950' "zeta");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("eta"' 951);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(951' "eta");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("theta"' 952);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(952' "theta");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("iota"' 953);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(953' "iota");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("kappa"' 954);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(954' "kappa");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("lambda"' 955);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(955' "lambda");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("mu"' 956);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(956' "mu");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("nu"' 957);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(957' "nu");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("xi"' 958);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(958' "xi");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("omicron"' 959);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(959' "omicron");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("pi"' 960);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(960' "pi");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("rho"' 961);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(961' "rho");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("sigmaf"' 962);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(962' "sigmaf");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("sigma"' 963);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(963' "sigma");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("tau"' 964);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(964' "tau");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("upsilon"' 965);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(965' "upsilon");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("phi"' 966);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(966' "phi");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("chi"' 967);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(967' "chi");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("psi"' 968);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(968' "psi");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("omega"' 969);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(969' "omega");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("thetasym"' 977);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(977' "thetasym");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("upsih"' 978);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(978' "upsih");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("piv"' 982);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(982' "piv");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("bull"' 8226);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8226' "bull");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("hellip"' 8230);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8230' "hellip");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("prime"' 8242);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8242' "prime");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Prime"' 8243);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8243' "Prime");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("oline"' 8254);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8254' "oline");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("frasl"' 8260);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8260' "frasl");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("weierp"' 8472);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8472' "weierp");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("image"' 8465);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8465' "image");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("real"' 8476);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8476' "real");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("trade"' 8482);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8482' "trade");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("alefsym"' 8501);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8501' "alefsym");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("larr"' 8592);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8592' "larr");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("uarr"' 8593);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8593' "uarr");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("rarr"' 8594);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8594' "rarr");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("darr"' 8595);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8595' "darr");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("harr"' 8596);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8596' "harr");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("crarr"' 8629);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8629' "crarr");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("lArr"' 8656);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8656' "lArr");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("uArr"' 8657);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8657' "uArr");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("rArr"' 8658);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8658' "rArr");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("dArr"' 8659);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8659' "dArr");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("hArr"' 8660);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8660' "hArr");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("forall"' 8704);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8704' "forall");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("part"' 8706);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8706' "part");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("exist"' 8707);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8707' "exist");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("empty"' 8709);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8709' "empty");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("nabla"' 8711);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8711' "nabla");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("isin"' 8712);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8712' "isin");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("notin"' 8713);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8713' "notin");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("ni"' 8715);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8715' "ni");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("prod"' 8719);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8719' "prod");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("sum"' 8721);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8721' "sum");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("minus"' 8722);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8722' "minus");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("lowast"' 8727);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8727' "lowast");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("radic"' 8730);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8730' "radic");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("prop"' 8733);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8733' "prop");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("infin"' 8734);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8734' "infin");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("ang"' 8736);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8736' "ang");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("and"' 8743);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8743' "and");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("or"' 8744);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8744' "or");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("cap"' 8745);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8745' "cap");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("cup"' 8746);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8746' "cup");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("int"' 8747);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8747' "int");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("there4"' 8756);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8756' "there4");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("sim"' 8764);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8764' "sim");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("cong"' 8773);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8773' "cong");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("asymp"' 8776);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8776' "asymp");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("ne"' 8800);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8800' "ne");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("equiv"' 8801);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8801' "equiv");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("le"' 8804);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8804' "le");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("ge"' 8805);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8805' "ge");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("sub"' 8834);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8834' "sub");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("sup"' 8835);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8835' "sup");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("nsub"' 8836);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8836' "nsub");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("sube"' 8838);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8838' "sube");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("supe"' 8839);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8839' "supe");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("oplus"' 8853);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8853' "oplus");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("otimes"' 8855);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8855' "otimes");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("perp"' 8869);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8869' "perp");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("sdot"' 8901);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8901' "sdot");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("lceil"' 8968);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8968' "lceil");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("rceil"' 8969);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8969' "rceil");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("lfloor"' 8970);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8970' "lfloor");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("rfloor"' 8971);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8971' "rfloor");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("lang"' 9001);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(9001' "lang");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("rang"' 9002);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(9002' "rang");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("loz"' 9674);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(9674' "loz");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("spades"' 9824);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(9824' "spades");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("clubs"' 9827);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(9827' "clubs");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("hearts"' 9829);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(9829' "hearts");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("diams"' 9830);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(9830' "diams");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("quot"' 34);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(34' "quot");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("amp"' 38);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(38' "amp");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("lt"' 60);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(60' "lt");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("gt"' 62);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(62' "gt");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("OElig"' 338);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(338' "OElig");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("oelig"' 339);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(339' "oelig");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Scaron"' 352);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(352' "Scaron");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("scaron"' 353);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(353' "scaron");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Yuml"' 376);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(376' "Yuml");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("circ"' 710);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(710' "circ");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("tilde"' 732);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(732' "tilde");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("ensp"' 8194);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8194' "ensp");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("emsp"' 8195);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8195' "emsp");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("thinsp"' 8201);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8201' "thinsp");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("zwnj"' 8204);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8204' "zwnj");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("zwj"' 8205);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8205' "zwj");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("lrm"' 8206);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8206' "lrm");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("rlm"' 8207);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8207' "rlm");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("ndash"' 8211);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8211' "ndash");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("mdash"' 8212);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8212' "mdash");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("lsquo"' 8216);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8216' "lsquo");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("rsquo"' 8217);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8217' "rsquo");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("sbquo"' 8218);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8218' "sbquo");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("ldquo"' 8220);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8220' "ldquo");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("rdquo"' 8221);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8221' "rdquo");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("bdquo"' 8222);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8222' "bdquo");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("dagger"' 8224);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8224' "dagger");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("Dagger"' 8225);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8225' "Dagger");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("permil"' 8240);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8240' "permil");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("lsaquo"' 8249);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8249' "lsaquo");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("rsaquo"' 8250);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8250' "rsaquo");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add("euro"' 8364);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add(8364' "euro");
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _maxEntitySize = 8 + 1;
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,The following statement contains a magic number: StringBuilder entity = new StringBuilder(10);
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,The following statement contains a magic number: switch (state)                  {                      case ParseState.Text:                          switch (text[i])                          {                              case '&':                                  state = ParseState.EntityStart;                                  break;                                default:                                  sb.Append(text[i]);                                  break;                          }                          break;                        case ParseState.EntityStart:                          switch (text[i])                          {                              case ';':                                  if (entity.Length == 0)                                  {                                      sb.Append("&;");                                  }                                  else                                  {                                      if (entity[0] == '#')                                      {                                          string e = entity.ToString();                                          try   										{  											string codeStr = e.Substring(1).Trim().ToLower();  											int fromBase;  											if (codeStr.StartsWith("x"))  											{  												fromBase = 16;  												codeStr = codeStr.Substring(1);  											}  											else  											{  												fromBase = 10;  											}  											int code = Convert.ToInt32(codeStr' fromBase);   											sb.Append(Convert.ToChar(code));   										}                                          catch                                          {                                              sb.Append("&#" + e + ";");                                          }                                      }                                      else                                      {                                          // named entity?                                          int code;                                          object o = _entityValue[entity.ToString()];                                          if (o == null)                                          {                                              // nope                                              sb.Append("&" + entity + ";");                                          }                                          else                                          {                                              // we found one                                              code = (int) o;                                              sb.Append(Convert.ToChar(code));                                          }                                      }                                      entity.Remove(0' entity.Length);                                  }                                  state = ParseState.Text;                                  break;                                case '&':                                  // new entity start without end' it was not an entity...                                  sb.Append("&" + entity);                                  entity.Remove(0' entity.Length);                                  break;                                default:                                  entity.Append(text[i]);                                  if (entity.Length > _maxEntitySize)                                  {                                      // unknown stuff' just don't touch it                                      state = ParseState.Text;                                      sb.Append("&" + entity);                                      entity.Remove(0' entity.Length);                                  }                                  break;                          }                          break;                  }
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,The following statement contains a magic number: switch (state)                  {                      case ParseState.Text:                          switch (text[i])                          {                              case '&':                                  state = ParseState.EntityStart;                                  break;                                default:                                  sb.Append(text[i]);                                  break;                          }                          break;                        case ParseState.EntityStart:                          switch (text[i])                          {                              case ';':                                  if (entity.Length == 0)                                  {                                      sb.Append("&;");                                  }                                  else                                  {                                      if (entity[0] == '#')                                      {                                          string e = entity.ToString();                                          try   										{  											string codeStr = e.Substring(1).Trim().ToLower();  											int fromBase;  											if (codeStr.StartsWith("x"))  											{  												fromBase = 16;  												codeStr = codeStr.Substring(1);  											}  											else  											{  												fromBase = 10;  											}  											int code = Convert.ToInt32(codeStr' fromBase);   											sb.Append(Convert.ToChar(code));   										}                                          catch                                          {                                              sb.Append("&#" + e + ";");                                          }                                      }                                      else                                      {                                          // named entity?                                          int code;                                          object o = _entityValue[entity.ToString()];                                          if (o == null)                                          {                                              // nope                                              sb.Append("&" + entity + ";");                                          }                                          else                                          {                                              // we found one                                              code = (int) o;                                              sb.Append(Convert.ToChar(code));                                          }                                      }                                      entity.Remove(0' entity.Length);                                  }                                  state = ParseState.Text;                                  break;                                case '&':                                  // new entity start without end' it was not an entity...                                  sb.Append("&" + entity);                                  entity.Remove(0' entity.Length);                                  break;                                default:                                  entity.Append(text[i]);                                  if (entity.Length > _maxEntitySize)                                  {                                      // unknown stuff' just don't touch it                                      state = ParseState.Text;                                      sb.Append("&" + entity);                                      entity.Remove(0' entity.Length);                                  }                                  break;                          }                          break;                  }
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,Entitize,The following statement contains a magic number: (code > 127) ||                      (entitizeQuotAmpAndLtGt && ((code == 34) || (code == 38) || (code == 60) || (code == 62)))
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,Entitize,The following statement contains a magic number: (code > 127) ||                      (entitizeQuotAmpAndLtGt && ((code == 34) || (code == 38) || (code == 60) || (code == 62)))
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,Entitize,The following statement contains a magic number: (code > 127) ||                      (entitizeQuotAmpAndLtGt && ((code == 34) || (code == 38) || (code == 60) || (code == 62)))
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,Entitize,The following statement contains a magic number: (code > 127) ||                      (entitizeQuotAmpAndLtGt && ((code == 34) || (code == 38) || (code == 60) || (code == 62)))
Magic Number,HtmlAgilityPack,HtmlEntity,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,Entitize,The following statement contains a magic number: (code > 127) ||                      (entitizeQuotAmpAndLtGt && ((code == 34) || (code == 38) || (code == 60) || (code == 62)))
Magic Number,HtmlAgilityPack,HtmlNode,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,IsOverlappedClosingElement,The following statement contains a magic number: text.Length <= 4
Magic Number,HtmlAgilityPack,HtmlNode,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,IsOverlappedClosingElement,The following statement contains a magic number: string name = text.Substring(2' text.Length - 3);
Magic Number,HtmlAgilityPack,HtmlNode,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,IsOverlappedClosingElement,The following statement contains a magic number: string name = text.Substring(2' text.Length - 3);
Magic Number,HtmlAgilityPack,HtmlNode,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,GetXmlComment,The following statement contains a magic number: return s.Substring(4' s.Length - 7).Replace("--"' " - -");
Magic Number,HtmlAgilityPack,HtmlNode,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,GetXmlComment,The following statement contains a magic number: return s.Substring(4' s.Length - 7).Replace("--"' " - -");
Magic Number,HtmlAgilityPack,MixedCodeDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\MixedCodeDocument.cs,IncrementPosition,The following statement contains a magic number: _c == 10
Magic Number,HtmlAgilityPack,NameValuePairList,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\NameValuePairList.cs,Parse,The following statement contains a magic number: string[] onep = pv.Split(new[] {'='}' 2);
Magic Number,HtmlAgilityPack,NameValuePairList,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\NameValuePairList.cs,Parse,The following statement contains a magic number: KeyValuePair<string' string> nvp = new KeyValuePair<string' string>(onep[0].Trim().ToLower()'                                                                                      onep.Length < 2 ? "" : onep[1]);
Magic Number,ChanArchiver,ArchivesProvider,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\ArchivesProvider.cs,update,The following statement contains a magic number: (DateTime.Now - last_update).Days <= 3
Magic Number,ChanArchiver,ArchiveInfo,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\ArchivesProvider.cs,ArchiveInfo,The following statement contains a magic number: this.supported_board_posts = new List<string>(5);
Magic Number,ChanArchiver,ArchiveInfo,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\ArchivesProvider.cs,ArchiveInfo,The following statement contains a magic number: this.supported_full_files = new List<string>(5);
Magic Number,ChanArchiver,BoardWatcher,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\BoardWatcher.cs,load_board_sleep_times,The following statement contains a magic number: mode < 60
Magic Number,ChanArchiver,BoardWatcher,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\BoardWatcher.cs,LoadFilters,The following statement contains a magic number: fil.Notes = Convert.ToString(FilterData[2]);
Magic Number,ChanArchiver,BoardWatcher,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\BoardWatcher.cs,LoadFilters,The following statement contains a magic number: FilterData.Count > 2
Magic Number,ChanArchiver,FileIndex,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\FileIndex.cs,load_index_from_bin,The following statement contains a magic number: byte[] b = new byte[4];
Magic Number,ChanArchiver,FileIndex,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\FileIndex.cs,load_index_from_bin,The following statement contains a magic number: fs.Read(b' 0' 4);
Magic Number,ChanArchiver,FileQueueStateInfo,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\FileQueueStateInfo.cs,Percent,The following statement contains a magic number: return progress * 100;
Magic Number,ChanArchiver,FoolFuukaParser,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\FoolFuukaParser.cs,Decompress,The following statement contains a magic number: const int size = 4096;
Magic Number,ChanArchiver,HMSFormatter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HMSFormatter.cs,GetReadableTimespan,The following statement contains a magic number: var cutoff = new SortedList<long' string>               {                   {60' "{3:S}" }'                  {60*60' "{2:M}' {3:S}"}'                  {24*60*60' "{1:H}' {2:M}"}'                  {Int64.MaxValue ' "{0:D}' {1:H}"}              };
Magic Number,ChanArchiver,HMSFormatter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HMSFormatter.cs,GetReadableTimespan,The following statement contains a magic number: var cutoff = new SortedList<long' string>               {                   {60' "{3:S}" }'                  {60*60' "{2:M}' {3:S}"}'                  {24*60*60' "{1:H}' {2:M}"}'                  {Int64.MaxValue ' "{0:D}' {1:H}"}              };
Magic Number,ChanArchiver,HMSFormatter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HMSFormatter.cs,GetReadableTimespan,The following statement contains a magic number: var cutoff = new SortedList<long' string>               {                   {60' "{3:S}" }'                  {60*60' "{2:M}' {3:S}"}'                  {24*60*60' "{1:H}' {2:M}"}'                  {Int64.MaxValue ' "{0:D}' {1:H}"}              };
Magic Number,ChanArchiver,HMSFormatter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HMSFormatter.cs,GetReadableTimespan,The following statement contains a magic number: var cutoff = new SortedList<long' string>               {                   {60' "{3:S}" }'                  {60*60' "{2:M}' {3:S}"}'                  {24*60*60' "{1:H}' {2:M}"}'                  {Int64.MaxValue ' "{0:D}' {1:H}"}              };
Magic Number,ChanArchiver,HMSFormatter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HMSFormatter.cs,GetReadableTimespan,The following statement contains a magic number: var cutoff = new SortedList<long' string>               {                   {60' "{3:S}" }'                  {60*60' "{2:M}' {3:S}"}'                  {24*60*60' "{1:H}' {2:M}"}'                  {Int64.MaxValue ' "{0:D}' {1:H}"}              };
Magic Number,ChanArchiver,HMSFormatter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HMSFormatter.cs,GetReadableTimespan,The following statement contains a magic number: var cutoff = new SortedList<long' string>               {                   {60' "{3:S}" }'                  {60*60' "{2:M}' {3:S}"}'                  {24*60*60' "{1:H}' {2:M}"}'                  {Int64.MaxValue ' "{0:D}' {1:H}"}              };
Magic Number,ChanArchiver,JobQueue,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\JobQueue.cs,work,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,ChanArchiver,LightWatcher,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\LightWatcher.cs,Start,The following statement contains a magic number: System.Threading.Tasks.Task.Factory.StartNew((Action)delegate              {                  while (running)                  {                      try                      {                          int[] new_data = Program.aw.GetBoardThreadsID(this.Board).Keys.ToArray();                            if (DataRefreshed != null)                          {                              if (old_ids == null)                              {                                  old_ids = new_data;                                  DataRefreshed(new_data);                              }                              else                              {                                  List<int> new_ids = new List<int>();                                  foreach (int id in new_data)                                  {                                      if (Array.IndexOf(old_ids' id) != -1)                                      {                                          new_ids.Add(id);                                      }                                  }                                  old_ids = new_data;                                  DataRefreshed(new_ids.ToArray());                              }                          }                            System.Threading.Thread.Sleep(1000 * 2 * 60);                      }                      catch (Exception)                      {                          System.Threading.Thread.Sleep(1000 * 10); // HACK                            //throw;                      }                  }              });
Magic Number,ChanArchiver,LightWatcher,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\LightWatcher.cs,Start,The following statement contains a magic number: System.Threading.Tasks.Task.Factory.StartNew((Action)delegate              {                  while (running)                  {                      try                      {                          int[] new_data = Program.aw.GetBoardThreadsID(this.Board).Keys.ToArray();                            if (DataRefreshed != null)                          {                              if (old_ids == null)                              {                                  old_ids = new_data;                                  DataRefreshed(new_data);                              }                              else                              {                                  List<int> new_ids = new List<int>();                                  foreach (int id in new_data)                                  {                                      if (Array.IndexOf(old_ids' id) != -1)                                      {                                          new_ids.Add(id);                                      }                                  }                                  old_ids = new_data;                                  DataRefreshed(new_ids.ToArray());                              }                          }                            System.Threading.Thread.Sleep(1000 * 2 * 60);                      }                      catch (Exception)                      {                          System.Threading.Thread.Sleep(1000 * 10); // HACK                            //throw;                      }                  }              });
Magic Number,ChanArchiver,LightWatcher,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\LightWatcher.cs,Start,The following statement contains a magic number: System.Threading.Tasks.Task.Factory.StartNew((Action)delegate              {                  while (running)                  {                      try                      {                          int[] new_data = Program.aw.GetBoardThreadsID(this.Board).Keys.ToArray();                            if (DataRefreshed != null)                          {                              if (old_ids == null)                              {                                  old_ids = new_data;                                  DataRefreshed(new_data);                              }                              else                              {                                  List<int> new_ids = new List<int>();                                  foreach (int id in new_data)                                  {                                      if (Array.IndexOf(old_ids' id) != -1)                                      {                                          new_ids.Add(id);                                      }                                  }                                  old_ids = new_data;                                  DataRefreshed(new_ids.ToArray());                              }                          }                            System.Threading.Thread.Sleep(1000 * 2 * 60);                      }                      catch (Exception)                      {                          System.Threading.Thread.Sleep(1000 * 10); // HACK                            //throw;                      }                  }              });
Magic Number,ChanArchiver,LightWatcher,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\LightWatcher.cs,Start,The following statement contains a magic number: System.Threading.Tasks.Task.Factory.StartNew((Action)delegate              {                  while (running)                  {                      try                      {                          int[] new_data = Program.aw.GetBoardThreadsID(this.Board).Keys.ToArray();                            if (DataRefreshed != null)                          {                              if (old_ids == null)                              {                                  old_ids = new_data;                                  DataRefreshed(new_data);                              }                              else                              {                                  List<int> new_ids = new List<int>();                                  foreach (int id in new_data)                                  {                                      if (Array.IndexOf(old_ids' id) != -1)                                      {                                          new_ids.Add(id);                                      }                                  }                                  old_ids = new_data;                                  DataRefreshed(new_ids.ToArray());                              }                          }                            System.Threading.Thread.Sleep(1000 * 2 * 60);                      }                      catch (Exception)                      {                          System.Threading.Thread.Sleep(1000 * 10); // HACK                            //throw;                      }                  }              });
Magic Number,ChanArchiver,LightWatcher,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\LightWatcher.cs,Start,The following statement contains a magic number: System.Threading.Tasks.Task.Factory.StartNew((Action)delegate              {                  while (running)                  {                      try                      {                          int[] new_data = Program.aw.GetBoardThreadsID(this.Board).Keys.ToArray();                            if (DataRefreshed != null)                          {                              if (old_ids == null)                              {                                  old_ids = new_data;                                  DataRefreshed(new_data);                              }                              else                              {                                  List<int> new_ids = new List<int>();                                  foreach (int id in new_data)                                  {                                      if (Array.IndexOf(old_ids' id) != -1)                                      {                                          new_ids.Add(id);                                      }                                  }                                  old_ids = new_data;                                  DataRefreshed(new_ids.ToArray());                              }                          }                            System.Threading.Thread.Sleep(1000 * 2 * 60);                      }                      catch (Exception)                      {                          System.Threading.Thread.Sleep(1000 * 10); // HACK                            //throw;                      }                  }              });
Magic Number,ChanArchiver,NetworkUsageCounter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\NetworkUsageCounter.cs,Add_ThumbConsumed,The following statement contains a magic number: get_today_array()[2] += value;
Magic Number,ChanArchiver,NetworkUsageCounter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\NetworkUsageCounter.cs,GetDayStats,The following statement contains a magic number: double sum = ss[0] + ss[1] + ss[2];
Magic Number,ChanArchiver,NetworkUsageCounter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\NetworkUsageCounter.cs,GetDayStats,The following statement contains a magic number: i < 24
Magic Number,ChanArchiver,NetworkUsageCounter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\NetworkUsageCounter.cs,GetMonthStats,The following statement contains a magic number: day_sum += (ss[0] + ss[1] + ss[2]);
Magic Number,ChanArchiver,NetworkUsageCounter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\NetworkUsageCounter.cs,GetMonthStats,The following statement contains a magic number: hour_index < 24
Magic Number,ChanArchiver,NetworkUsageCounter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\NetworkUsageCounter.cs,LoadStats,The following statement contains a magic number: double[] li = new double[3];
Magic Number,ChanArchiver,NetworkUsageCounter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\NetworkUsageCounter.cs,LoadStats,The following statement contains a magic number: li[2] = (double)sdata[2];
Magic Number,ChanArchiver,NetworkUsageCounter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\NetworkUsageCounter.cs,LoadStats,The following statement contains a magic number: li[2] = (double)sdata[2];
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,Main,The following statement contains a magic number: ServicePointManager.DefaultConnectionLimit = 1000;
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,Main,The following statement contains a magic number: single_id = Convert.ToInt32(arg.Split(':')[2]);
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,Main,The following statement contains a magic number: thumb_stp = new Amib.Threading.SmartThreadPool() { MaxThreads = 10' MinThreads = 0 };
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,Main,The following statement contains a magic number: file_stp = new Amib.Threading.SmartThreadPool() { MaxThreads = 5' MinThreads = 0 };
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,interactive_console,The following statement contains a magic number: switch (command)                  {                      case "rhtml":                          try                          {                              HtmlTemplates.Reload();                          }                          catch (FileNotFoundException e)                          {                              Console.WriteLine("Some files are missing: "' e.ToString());                          }                          break;                      case "save":                          save_settings();                          break;                      case "optimize-all":                          optimize_all_threads();                          break;                      case "toggle-ff":                          Settings.ThumbnailOnly = !Settings.ThumbnailOnly;                          Console.WriteLine("Full files saving is {0}"' Settings.ThumbnailOnly ? "disabled" : "enabled");                          break;                      case "swf-gen":                          {                              foreach (string file in Directory.EnumerateFiles(file_save_dir' "*.swf"' SearchOption.AllDirectories))                              {                                  make_swf_thumb(file);                              }                          }                          break;                      case "reset-creds":                          {                              Settings.EnableAuthentication = true;                              Settings.AllowGuestAccess = false;                                byte[] data = new byte[6];                                for (int i = 0; i < 6; i++)                              {                                  Random r = new Random((new Random()).Next() + i);                                  byte t = (byte)r.Next(48' 91);                                  data[i] = t;                              }                                string cre = Encoding.ASCII.GetString(data);                                Settings.AuthPassword = cre; Settings.AuthUsername = cre;                                Settings.Save();                                Console.WriteLine("New credentials set:\nUsername: {0}\nPassword: {0}"' cre);                                break;                          }                      case "help":                          Console.WriteLine("- help: view this text");                          Console.WriteLine("- save: save settings");                          Console.WriteLine("- exit: save settings and exit the program"); Console.WriteLine();                            Console.WriteLine("- swf-gen: generate thumbnails for .swf files using ffmpeg"); Console.WriteLine();                            Console.WriteLine("- toggle-ff: Enable or disable full file saving.");                          Console.WriteLine("- reset-creds: Enable HTTP server authentication and set the credentials to random values"); Console.WriteLine();                            Console.WriteLine("- optimize-gif: Convert all gifs files to .webm to save disk space. This action is not reversible");                          Console.WriteLine("- optimize-all: optimize all non-active threads");                            Console.WriteLine();                            Console.WriteLine("- wordfilter-add [word1] [word2]...: Add words to the wordfilter. Please include the [brackets]");                          Console.WriteLine("- wordfilter-remove [word1] [word2]...: Add words from the wordfilter");                            Console.WriteLine();                            Console.WriteLine("- add-fuuka HOST BOARD ID. Add a dead thread from a FoolFuuka archive. Type add-fuuka for help");                          break;                      case "bench":                          Stopwatch sw = new Stopwatch();                          sw.Start();                          FileIndex.ReBuild();                          sw.Stop();                          Console.WriteLine("{0} unique files have been processed in {1} seconds"'                              FileIndex.EntriesCount' sw.Elapsed.TotalSeconds);                          sw.Reset();                          break;                      case "sanitize-files":                          {                              Console.WriteLine("Updating file index...");                                FileIndex.ReBuild();                                int i = 0;                              foreach (var file in Directory.EnumerateFiles(file_save_dir' "*"' SearchOption.AllDirectories))                              {                                  string hash = Path.GetFileNameWithoutExtension(file).Split('.').First();                                  if (!FileIndex.IsHashValid(hash))                                  {                                      i++;                                        string filename = Path.GetFileName(file);                                        File.Move(file' Path.Combine(invalid_files_dir' filename));                                      Console.WriteLine("Simulated delete of '{0}'"' filename);                                  }                              }                              Console.WriteLine("Removed {0} file"' i);                              break;                          }                      case "optimize-gif":                          convert_all_gifs();                          break;                      case "http-mode":                          Console.WriteLine(Settings.UseHttps ? "https" : "http");                          break;                      case "":                          break;                      default:                          if (command.StartsWith("wordfilter-"))                          {                              bool add = command.StartsWith("wordfilter-add");                              System.Text.RegularExpressions.Regex a = new System.Text.RegularExpressions.Regex(@"\[\S+\]");                              var words = a.Matches(command);                              if (words.Count > 0)                              {                                  foreach (System.Text.RegularExpressions.Match match in words)                                  {                                      string word = match.Value.Remove(0' 1);                                      word = word.Remove(word.Length - 1' 1);                                      if (add)                                      {                                          Wordfilter.Add(word);                                          Console.WriteLine("Added word '{0}'"' word);                                      }                                      else                                      {                                          Wordfilter.Remove(word);                                          Console.WriteLine("Removed word '{0}'"' word);                                      }                                  }                              }                          }                          else if (command.StartsWith("add-fuuka")) // add-fuuka HOST BOARD ID                          {                              Console.WriteLine("The command line version of this feature was deprecated in favor of the WebUI interface. Use that instead");                                /*try                              {                                  string[] data = command.Split(new char[] { ' ' }' StringSplitOptions.RemoveEmptyEntries);                                    if (data.Length == 3)                                  {                                        string board = data[1];                                      int tid = -1;                                        if (Int32.TryParse(data[2]' out tid))                                      {                                          ArchivedThreadAdder.AddThreadFromArchive(board' tid' true);                                      }                                      else                                      {                                          Console.WriteLine("Invalid thread id");                                      }                                  }                                  else                                  {                                      Console.WriteLine("Invalid syntax. Usage: add-fuuka BOARD ID");                                  }                              }                              catch (Exception ex)                              {                                  Console.WriteLine("Error occured: {0}"' ex.Message);                              }*/                            }                          else { Console.WriteLine("Unknown command '{0}'"' command); }                          break;                  }
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,interactive_console,The following statement contains a magic number: switch (command)                  {                      case "rhtml":                          try                          {                              HtmlTemplates.Reload();                          }                          catch (FileNotFoundException e)                          {                              Console.WriteLine("Some files are missing: "' e.ToString());                          }                          break;                      case "save":                          save_settings();                          break;                      case "optimize-all":                          optimize_all_threads();                          break;                      case "toggle-ff":                          Settings.ThumbnailOnly = !Settings.ThumbnailOnly;                          Console.WriteLine("Full files saving is {0}"' Settings.ThumbnailOnly ? "disabled" : "enabled");                          break;                      case "swf-gen":                          {                              foreach (string file in Directory.EnumerateFiles(file_save_dir' "*.swf"' SearchOption.AllDirectories))                              {                                  make_swf_thumb(file);                              }                          }                          break;                      case "reset-creds":                          {                              Settings.EnableAuthentication = true;                              Settings.AllowGuestAccess = false;                                byte[] data = new byte[6];                                for (int i = 0; i < 6; i++)                              {                                  Random r = new Random((new Random()).Next() + i);                                  byte t = (byte)r.Next(48' 91);                                  data[i] = t;                              }                                string cre = Encoding.ASCII.GetString(data);                                Settings.AuthPassword = cre; Settings.AuthUsername = cre;                                Settings.Save();                                Console.WriteLine("New credentials set:\nUsername: {0}\nPassword: {0}"' cre);                                break;                          }                      case "help":                          Console.WriteLine("- help: view this text");                          Console.WriteLine("- save: save settings");                          Console.WriteLine("- exit: save settings and exit the program"); Console.WriteLine();                            Console.WriteLine("- swf-gen: generate thumbnails for .swf files using ffmpeg"); Console.WriteLine();                            Console.WriteLine("- toggle-ff: Enable or disable full file saving.");                          Console.WriteLine("- reset-creds: Enable HTTP server authentication and set the credentials to random values"); Console.WriteLine();                            Console.WriteLine("- optimize-gif: Convert all gifs files to .webm to save disk space. This action is not reversible");                          Console.WriteLine("- optimize-all: optimize all non-active threads");                            Console.WriteLine();                            Console.WriteLine("- wordfilter-add [word1] [word2]...: Add words to the wordfilter. Please include the [brackets]");                          Console.WriteLine("- wordfilter-remove [word1] [word2]...: Add words from the wordfilter");                            Console.WriteLine();                            Console.WriteLine("- add-fuuka HOST BOARD ID. Add a dead thread from a FoolFuuka archive. Type add-fuuka for help");                          break;                      case "bench":                          Stopwatch sw = new Stopwatch();                          sw.Start();                          FileIndex.ReBuild();                          sw.Stop();                          Console.WriteLine("{0} unique files have been processed in {1} seconds"'                              FileIndex.EntriesCount' sw.Elapsed.TotalSeconds);                          sw.Reset();                          break;                      case "sanitize-files":                          {                              Console.WriteLine("Updating file index...");                                FileIndex.ReBuild();                                int i = 0;                              foreach (var file in Directory.EnumerateFiles(file_save_dir' "*"' SearchOption.AllDirectories))                              {                                  string hash = Path.GetFileNameWithoutExtension(file).Split('.').First();                                  if (!FileIndex.IsHashValid(hash))                                  {                                      i++;                                        string filename = Path.GetFileName(file);                                        File.Move(file' Path.Combine(invalid_files_dir' filename));                                      Console.WriteLine("Simulated delete of '{0}'"' filename);                                  }                              }                              Console.WriteLine("Removed {0} file"' i);                              break;                          }                      case "optimize-gif":                          convert_all_gifs();                          break;                      case "http-mode":                          Console.WriteLine(Settings.UseHttps ? "https" : "http");                          break;                      case "":                          break;                      default:                          if (command.StartsWith("wordfilter-"))                          {                              bool add = command.StartsWith("wordfilter-add");                              System.Text.RegularExpressions.Regex a = new System.Text.RegularExpressions.Regex(@"\[\S+\]");                              var words = a.Matches(command);                              if (words.Count > 0)                              {                                  foreach (System.Text.RegularExpressions.Match match in words)                                  {                                      string word = match.Value.Remove(0' 1);                                      word = word.Remove(word.Length - 1' 1);                                      if (add)                                      {                                          Wordfilter.Add(word);                                          Console.WriteLine("Added word '{0}'"' word);                                      }                                      else                                      {                                          Wordfilter.Remove(word);                                          Console.WriteLine("Removed word '{0}'"' word);                                      }                                  }                              }                          }                          else if (command.StartsWith("add-fuuka")) // add-fuuka HOST BOARD ID                          {                              Console.WriteLine("The command line version of this feature was deprecated in favor of the WebUI interface. Use that instead");                                /*try                              {                                  string[] data = command.Split(new char[] { ' ' }' StringSplitOptions.RemoveEmptyEntries);                                    if (data.Length == 3)                                  {                                        string board = data[1];                                      int tid = -1;                                        if (Int32.TryParse(data[2]' out tid))                                      {                                          ArchivedThreadAdder.AddThreadFromArchive(board' tid' true);                                      }                                      else                                      {                                          Console.WriteLine("Invalid thread id");                                      }                                  }                                  else                                  {                                      Console.WriteLine("Invalid syntax. Usage: add-fuuka BOARD ID");                                  }                              }                              catch (Exception ex)                              {                                  Console.WriteLine("Error occured: {0}"' ex.Message);                              }*/                            }                          else { Console.WriteLine("Unknown command '{0}'"' command); }                          break;                  }
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,interactive_console,The following statement contains a magic number: switch (command)                  {                      case "rhtml":                          try                          {                              HtmlTemplates.Reload();                          }                          catch (FileNotFoundException e)                          {                              Console.WriteLine("Some files are missing: "' e.ToString());                          }                          break;                      case "save":                          save_settings();                          break;                      case "optimize-all":                          optimize_all_threads();                          break;                      case "toggle-ff":                          Settings.ThumbnailOnly = !Settings.ThumbnailOnly;                          Console.WriteLine("Full files saving is {0}"' Settings.ThumbnailOnly ? "disabled" : "enabled");                          break;                      case "swf-gen":                          {                              foreach (string file in Directory.EnumerateFiles(file_save_dir' "*.swf"' SearchOption.AllDirectories))                              {                                  make_swf_thumb(file);                              }                          }                          break;                      case "reset-creds":                          {                              Settings.EnableAuthentication = true;                              Settings.AllowGuestAccess = false;                                byte[] data = new byte[6];                                for (int i = 0; i < 6; i++)                              {                                  Random r = new Random((new Random()).Next() + i);                                  byte t = (byte)r.Next(48' 91);                                  data[i] = t;                              }                                string cre = Encoding.ASCII.GetString(data);                                Settings.AuthPassword = cre; Settings.AuthUsername = cre;                                Settings.Save();                                Console.WriteLine("New credentials set:\nUsername: {0}\nPassword: {0}"' cre);                                break;                          }                      case "help":                          Console.WriteLine("- help: view this text");                          Console.WriteLine("- save: save settings");                          Console.WriteLine("- exit: save settings and exit the program"); Console.WriteLine();                            Console.WriteLine("- swf-gen: generate thumbnails for .swf files using ffmpeg"); Console.WriteLine();                            Console.WriteLine("- toggle-ff: Enable or disable full file saving.");                          Console.WriteLine("- reset-creds: Enable HTTP server authentication and set the credentials to random values"); Console.WriteLine();                            Console.WriteLine("- optimize-gif: Convert all gifs files to .webm to save disk space. This action is not reversible");                          Console.WriteLine("- optimize-all: optimize all non-active threads");                            Console.WriteLine();                            Console.WriteLine("- wordfilter-add [word1] [word2]...: Add words to the wordfilter. Please include the [brackets]");                          Console.WriteLine("- wordfilter-remove [word1] [word2]...: Add words from the wordfilter");                            Console.WriteLine();                            Console.WriteLine("- add-fuuka HOST BOARD ID. Add a dead thread from a FoolFuuka archive. Type add-fuuka for help");                          break;                      case "bench":                          Stopwatch sw = new Stopwatch();                          sw.Start();                          FileIndex.ReBuild();                          sw.Stop();                          Console.WriteLine("{0} unique files have been processed in {1} seconds"'                              FileIndex.EntriesCount' sw.Elapsed.TotalSeconds);                          sw.Reset();                          break;                      case "sanitize-files":                          {                              Console.WriteLine("Updating file index...");                                FileIndex.ReBuild();                                int i = 0;                              foreach (var file in Directory.EnumerateFiles(file_save_dir' "*"' SearchOption.AllDirectories))                              {                                  string hash = Path.GetFileNameWithoutExtension(file).Split('.').First();                                  if (!FileIndex.IsHashValid(hash))                                  {                                      i++;                                        string filename = Path.GetFileName(file);                                        File.Move(file' Path.Combine(invalid_files_dir' filename));                                      Console.WriteLine("Simulated delete of '{0}'"' filename);                                  }                              }                              Console.WriteLine("Removed {0} file"' i);                              break;                          }                      case "optimize-gif":                          convert_all_gifs();                          break;                      case "http-mode":                          Console.WriteLine(Settings.UseHttps ? "https" : "http");                          break;                      case "":                          break;                      default:                          if (command.StartsWith("wordfilter-"))                          {                              bool add = command.StartsWith("wordfilter-add");                              System.Text.RegularExpressions.Regex a = new System.Text.RegularExpressions.Regex(@"\[\S+\]");                              var words = a.Matches(command);                              if (words.Count > 0)                              {                                  foreach (System.Text.RegularExpressions.Match match in words)                                  {                                      string word = match.Value.Remove(0' 1);                                      word = word.Remove(word.Length - 1' 1);                                      if (add)                                      {                                          Wordfilter.Add(word);                                          Console.WriteLine("Added word '{0}'"' word);                                      }                                      else                                      {                                          Wordfilter.Remove(word);                                          Console.WriteLine("Removed word '{0}'"' word);                                      }                                  }                              }                          }                          else if (command.StartsWith("add-fuuka")) // add-fuuka HOST BOARD ID                          {                              Console.WriteLine("The command line version of this feature was deprecated in favor of the WebUI interface. Use that instead");                                /*try                              {                                  string[] data = command.Split(new char[] { ' ' }' StringSplitOptions.RemoveEmptyEntries);                                    if (data.Length == 3)                                  {                                        string board = data[1];                                      int tid = -1;                                        if (Int32.TryParse(data[2]' out tid))                                      {                                          ArchivedThreadAdder.AddThreadFromArchive(board' tid' true);                                      }                                      else                                      {                                          Console.WriteLine("Invalid thread id");                                      }                                  }                                  else                                  {                                      Console.WriteLine("Invalid syntax. Usage: add-fuuka BOARD ID");                                  }                              }                              catch (Exception ex)                              {                                  Console.WriteLine("Error occured: {0}"' ex.Message);                              }*/                            }                          else { Console.WriteLine("Unknown command '{0}'"' command); }                          break;                  }
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,interactive_console,The following statement contains a magic number: switch (command)                  {                      case "rhtml":                          try                          {                              HtmlTemplates.Reload();                          }                          catch (FileNotFoundException e)                          {                              Console.WriteLine("Some files are missing: "' e.ToString());                          }                          break;                      case "save":                          save_settings();                          break;                      case "optimize-all":                          optimize_all_threads();                          break;                      case "toggle-ff":                          Settings.ThumbnailOnly = !Settings.ThumbnailOnly;                          Console.WriteLine("Full files saving is {0}"' Settings.ThumbnailOnly ? "disabled" : "enabled");                          break;                      case "swf-gen":                          {                              foreach (string file in Directory.EnumerateFiles(file_save_dir' "*.swf"' SearchOption.AllDirectories))                              {                                  make_swf_thumb(file);                              }                          }                          break;                      case "reset-creds":                          {                              Settings.EnableAuthentication = true;                              Settings.AllowGuestAccess = false;                                byte[] data = new byte[6];                                for (int i = 0; i < 6; i++)                              {                                  Random r = new Random((new Random()).Next() + i);                                  byte t = (byte)r.Next(48' 91);                                  data[i] = t;                              }                                string cre = Encoding.ASCII.GetString(data);                                Settings.AuthPassword = cre; Settings.AuthUsername = cre;                                Settings.Save();                                Console.WriteLine("New credentials set:\nUsername: {0}\nPassword: {0}"' cre);                                break;                          }                      case "help":                          Console.WriteLine("- help: view this text");                          Console.WriteLine("- save: save settings");                          Console.WriteLine("- exit: save settings and exit the program"); Console.WriteLine();                            Console.WriteLine("- swf-gen: generate thumbnails for .swf files using ffmpeg"); Console.WriteLine();                            Console.WriteLine("- toggle-ff: Enable or disable full file saving.");                          Console.WriteLine("- reset-creds: Enable HTTP server authentication and set the credentials to random values"); Console.WriteLine();                            Console.WriteLine("- optimize-gif: Convert all gifs files to .webm to save disk space. This action is not reversible");                          Console.WriteLine("- optimize-all: optimize all non-active threads");                            Console.WriteLine();                            Console.WriteLine("- wordfilter-add [word1] [word2]...: Add words to the wordfilter. Please include the [brackets]");                          Console.WriteLine("- wordfilter-remove [word1] [word2]...: Add words from the wordfilter");                            Console.WriteLine();                            Console.WriteLine("- add-fuuka HOST BOARD ID. Add a dead thread from a FoolFuuka archive. Type add-fuuka for help");                          break;                      case "bench":                          Stopwatch sw = new Stopwatch();                          sw.Start();                          FileIndex.ReBuild();                          sw.Stop();                          Console.WriteLine("{0} unique files have been processed in {1} seconds"'                              FileIndex.EntriesCount' sw.Elapsed.TotalSeconds);                          sw.Reset();                          break;                      case "sanitize-files":                          {                              Console.WriteLine("Updating file index...");                                FileIndex.ReBuild();                                int i = 0;                              foreach (var file in Directory.EnumerateFiles(file_save_dir' "*"' SearchOption.AllDirectories))                              {                                  string hash = Path.GetFileNameWithoutExtension(file).Split('.').First();                                  if (!FileIndex.IsHashValid(hash))                                  {                                      i++;                                        string filename = Path.GetFileName(file);                                        File.Move(file' Path.Combine(invalid_files_dir' filename));                                      Console.WriteLine("Simulated delete of '{0}'"' filename);                                  }                              }                              Console.WriteLine("Removed {0} file"' i);                              break;                          }                      case "optimize-gif":                          convert_all_gifs();                          break;                      case "http-mode":                          Console.WriteLine(Settings.UseHttps ? "https" : "http");                          break;                      case "":                          break;                      default:                          if (command.StartsWith("wordfilter-"))                          {                              bool add = command.StartsWith("wordfilter-add");                              System.Text.RegularExpressions.Regex a = new System.Text.RegularExpressions.Regex(@"\[\S+\]");                              var words = a.Matches(command);                              if (words.Count > 0)                              {                                  foreach (System.Text.RegularExpressions.Match match in words)                                  {                                      string word = match.Value.Remove(0' 1);                                      word = word.Remove(word.Length - 1' 1);                                      if (add)                                      {                                          Wordfilter.Add(word);                                          Console.WriteLine("Added word '{0}'"' word);                                      }                                      else                                      {                                          Wordfilter.Remove(word);                                          Console.WriteLine("Removed word '{0}'"' word);                                      }                                  }                              }                          }                          else if (command.StartsWith("add-fuuka")) // add-fuuka HOST BOARD ID                          {                              Console.WriteLine("The command line version of this feature was deprecated in favor of the WebUI interface. Use that instead");                                /*try                              {                                  string[] data = command.Split(new char[] { ' ' }' StringSplitOptions.RemoveEmptyEntries);                                    if (data.Length == 3)                                  {                                        string board = data[1];                                      int tid = -1;                                        if (Int32.TryParse(data[2]' out tid))                                      {                                          ArchivedThreadAdder.AddThreadFromArchive(board' tid' true);                                      }                                      else                                      {                                          Console.WriteLine("Invalid thread id");                                      }                                  }                                  else                                  {                                      Console.WriteLine("Invalid syntax. Usage: add-fuuka BOARD ID");                                  }                              }                              catch (Exception ex)                              {                                  Console.WriteLine("Error occured: {0}"' ex.Message);                              }*/                            }                          else { Console.WriteLine("Unknown command '{0}'"' command); }                          break;                  }
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,convert_all_gifs,The following statement contains a magic number: int kb = 200 * 1024;
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,convert_all_gifs,The following statement contains a magic number: int kb = 200 * 1024;
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,convert_all_gifs,The following statement contains a magic number: Console.WriteLine("Disk space saved: {0} ( {1} % )"' format_size_string(gif_processed - webm_produced)' 100 - ((webm_produced / gif_processed) * 100));
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,convert_all_gifs,The following statement contains a magic number: Console.WriteLine("Disk space saved: {0} ( {1} % )"' format_size_string(gif_processed - webm_produced)' 100 - ((webm_produced / gif_processed) * 100));
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,load_boards,The following statement contains a magic number: data.Length == 2
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,get_file_priority,The following statement contains a magic number: const int kb = 1024;
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,get_file_priority,The following statement contains a magic number: const int mb = 1048576;
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,get_file_priority,The following statement contains a magic number: pf.size <= 50 * kb
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,download_file,The following statement contains a magic number: f.RetryCount > 35
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,download_file,The following statement contains a magic number: byte[] buffer = new byte[2048];
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,download_file,The following statement contains a magic number: (b_s = s.Read(buffer' 0' 2048)) > 0
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,format_size_string,The following statement contains a magic number: const double KB = 1024;
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,format_size_string,The following statement contains a magic number: const double MB = 1048576;
Magic Number,ChanArchiver,Program,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Program.cs,format_size_string,The following statement contains a magic number: const double GB = 1073741824;
Magic Number,ChanArchiver,Settings,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Settings.cs,Save,The following statement contains a magic number: Dictionary<string' object> data = new Dictionary<string' object>(20);
Magic Number,ChanArchiver,ThreadServerModule,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ThreadServerModule.cs,Process,The following statement contains a magic number: string board = parame[2];
Magic Number,ChanArchiver,ThreadServerModule,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ThreadServerModule.cs,Process,The following statement contains a magic number: parame.Length == 3
Magic Number,ChanArchiver,ThreadServerModule,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ThreadServerModule.cs,Process,The following statement contains a magic number: string mode = rdata[2].ToLower();
Magic Number,ChanArchiver,ThreadServerModule,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ThreadServerModule.cs,Process,The following statement contains a magic number: string mode = data[2];
Magic Number,ChanArchiver,ThreadServerModule,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ThreadServerModule.cs,Process,The following statement contains a magic number: string board = data[3];
Magic Number,ChanArchiver,ThreadServerModule,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ThreadServerModule.cs,Process,The following statement contains a magic number: string board = data[3];
Magic Number,ChanArchiver,ThreadServerModule,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ThreadServerModule.cs,Process,The following statement contains a magic number: string board = data[3];
Magic Number,ChanArchiver,ThreadServerModule,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ThreadServerModule.cs,Process,The following statement contains a magic number: string tid = data[4];
Magic Number,ChanArchiver,ThreadServerModule,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ThreadServerModule.cs,Process,The following statement contains a magic number: string board = data[3];
Magic Number,ChanArchiver,ThreadServerModule,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ThreadServerModule.cs,Process,The following statement contains a magic number: string tid = data[4];
Magic Number,ChanArchiver,ThreadWorker,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\ThreadWorker.cs,ThreadWorker,The following statement contains a magic number: this.BumpLimit = 300;
Magic Number,ChanArchiver,ThreadWorker,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\ThreadWorker.cs,ThreadWorker,The following statement contains a magic number: this.ImageLimit = 151;
Magic Number,ChanArchiver,ThreadWorker,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\ThreadWorker.cs,worker_DoWork,The following statement contains a magic number: this.UpdateInterval = 0.16;
Magic Number,ChanArchiver,ThreadWorker,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\ThreadWorker.cs,worker_DoWork,The following statement contains a magic number: this.UpdateInterval = 5;
Magic Number,ChanArchiver,ThreadWorker,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\ThreadWorker.cs,worker_DoWork,The following statement contains a magic number: this.UpdateInterval = 2;
Magic Number,ChanArchiver,ThreadWorker,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\ThreadWorker.cs,worker_DoWork,The following statement contains a magic number: System.Threading.Thread.Sleep(Convert.ToInt32(this.UpdateInterval * 60 * 1000));
Magic Number,ChanArchiver,ThreadWorker,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\ThreadWorker.cs,worker_DoWork,The following statement contains a magic number: System.Threading.Thread.Sleep(Convert.ToInt32(this.UpdateInterval * 60 * 1000));
Magic Number,ChanArchiver.HttpServerHandlers.PageHandlers,FileQueuePageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\FileQueuePageHandler.cs,GetFileQueueTableHtml,The following statement contains a magic number: sb.AppendFormat("<td>{0} %</td>"' Math.Round(f.Percent()' 2));
Magic Number,ChanArchiver.HttpServerHandlers.PageHandlers,OverviewPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\OverviewPageHandler.cs,get_NetWorkStats,The following statement contains a magic number: double percent_api = NetworkUsageCounter.TotalThisHour == 0 ? 0 : (NetworkUsageCounter.ApiConsumedThisHour / NetworkUsageCounter.TotalThisHour) * 100;
Magic Number,ChanArchiver.HttpServerHandlers.PageHandlers,OverviewPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\OverviewPageHandler.cs,get_NetWorkStats,The following statement contains a magic number: double percent_thumb = NetworkUsageCounter.TotalThisHour == 0 ? 0 : (NetworkUsageCounter.ThumbConsumedThisHour / NetworkUsageCounter.TotalThisHour) * 100;
Magic Number,ChanArchiver.HttpServerHandlers.PageHandlers,OverviewPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\PageHandlers\OverviewPageHandler.cs,get_NetWorkStats,The following statement contains a magic number: double percent_file = NetworkUsageCounter.TotalThisHour == 0 ? 0 : (NetworkUsageCounter.FileConsumedThisHour / NetworkUsageCounter.TotalThisHour) * 100;
Magic Number,ChanArchiver.HttpServerHandlers,FileBrowserPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\FileBrowserPageHandler.cs,Process,The following statement contains a magic number: int limit = 250;
Magic Number,ChanArchiver.HttpServerHandlers,FileBrowserPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\FileBrowserPageHandler.cs,Process,The following statement contains a magic number: switch (selector_index)                      {                          case 0:                          case 1:                              filter = "*.webm"; break;                          case 2:                              filter = "*.jpg"; break;                          case 3:                              filter = "*.png"; break;                          case 4:                              filter = "*.gif"; break;                          default: break;                        }
Magic Number,ChanArchiver.HttpServerHandlers,FileBrowserPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\FileBrowserPageHandler.cs,Process,The following statement contains a magic number: switch (selector_index)                      {                          case 0:                          case 1:                              filter = "*.webm"; break;                          case 2:                              filter = "*.jpg"; break;                          case 3:                              filter = "*.png"; break;                          case 4:                              filter = "*.gif"; break;                          default: break;                        }
Magic Number,ChanArchiver.HttpServerHandlers,FileBrowserPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\FileBrowserPageHandler.cs,Process,The following statement contains a magic number: switch (selector_index)                      {                          case 0:                          case 1:                              filter = "*.webm"; break;                          case 2:                              filter = "*.jpg"; break;                          case 3:                              filter = "*.png"; break;                          case 4:                              filter = "*.gif"; break;                          default: break;                        }
Magic Number,ChanArchiver.HttpServerHandlers,FileBrowserPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\FileBrowserPageHandler.cs,Process,The following statement contains a magic number: !(selector_index < 0 || selector_index > 4)
Magic Number,ChanArchiver.HttpServerHandlers,FileBrowserPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\FileBrowserPageHandler.cs,Process,The following statement contains a magic number: i < 4
Magic Number,ChanArchiver.HttpServerHandlers,FileHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\FileHandler.cs,Process,The following statement contains a magic number: e.Length != 2
Magic Number,ChanArchiver.HttpServerHandlers,FileHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\FileHandler.cs,Process,The following statement contains a magic number: proc.WaitForExit(20000);
Magic Number,ChanArchiver.HttpServerHandlers,FileHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\FileHandler.cs,Process,The following statement contains a magic number: e.Length != 2
Magic Number,ChanArchiver.HttpServerHandlers,FileHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\FileHandler.cs,Process,The following statement contains a magic number: hash.Length == 36
Magic Number,ChanArchiver.HttpServerHandlers,LogPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\LogPageHandler.cs,Process,The following statement contains a magic number: string mode = a[2];
Magic Number,ChanArchiver.HttpServerHandlers,LogPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\LogPageHandler.cs,Process,The following statement contains a magic number: string id = a[3];
Magic Number,ChanArchiver.HttpServerHandlers,LogPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\LogPageHandler.cs,Process,The following statement contains a magic number: switch (mode)                      {                          case "file":                              FileQueueStateInfo st = Program.get_file_state(id);                              if (st != null)                              {                                  data = st.Logs;                              }                              break;                          case "threadworker": // /logs/threadworker/board/tid                              if (Program.active_dumpers.ContainsKey(id))                              {                                  BoardWatcher bw = Program.active_dumpers[id];                                  if (bw.watched_threads.ContainsKey(Convert.ToInt32(a[4])))                                  {                                      data = bw.watched_threads[Convert.ToInt32(a[4])].Logs;                                  }                              }                              break;                          case "boardwatcher":                              if (Program.active_dumpers.ContainsKey(id))                              {                                  BoardWatcher bw = Program.active_dumpers[id];                                  data = bw.Logs;                              }                              break;                          default:                              break;                      }
Magic Number,ChanArchiver.HttpServerHandlers,LogPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\LogPageHandler.cs,Process,The following statement contains a magic number: switch (mode)                      {                          case "file":                              FileQueueStateInfo st = Program.get_file_state(id);                              if (st != null)                              {                                  data = st.Logs;                              }                              break;                          case "threadworker": // /logs/threadworker/board/tid                              if (Program.active_dumpers.ContainsKey(id))                              {                                  BoardWatcher bw = Program.active_dumpers[id];                                  if (bw.watched_threads.ContainsKey(Convert.ToInt32(a[4])))                                  {                                      data = bw.watched_threads[Convert.ToInt32(a[4])].Logs;                                  }                              }                              break;                          case "boardwatcher":                              if (Program.active_dumpers.ContainsKey(id))                              {                                  BoardWatcher bw = Program.active_dumpers[id];                                  data = bw.Logs;                              }                              break;                          default:                              break;                      }
Magic Number,ChanArchiver.HttpServerHandlers,LogPageHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\LogPageHandler.cs,Process,The following statement contains a magic number: a.Length >= 3
Magic Number,ChanArchiver.HttpServerHandlers,ResourcesHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ResourcesHandler.cs,Process,The following statement contains a magic number: switch (command.Split('/')[2].ToLower())                  {                      case "bgwhite.png":                          data = Properties.Resources.bgwhite;                          response.ContentType = "image/png";                          break;                      case "hr.png":                          data = Properties.Resources.hr;                          response.ContentType = "image/png";                          break;                      case "locked.png":                          data = Properties.Resources.locked;                          response.ContentType = "image/png";                          break;                      case "sticky.png":                          data = Properties.Resources.sticky;                          response.ContentType = "image/png";                          break;                      case "bootstrap.css":                          //data = Encoding.UTF8.GetBytes(Properties.Resources.bootstrap_css);                          data = Properties.Resources.paper_theme_min;                          response.ContentType = "text/css";                          break;                      case "dashboard.css":                          data = Encoding.UTF8.GetBytes(Properties.Resources.dashboard_css);                          response.ContentType = "text/css";                          break;                      case "bootstrap.js":                          data = Encoding.UTF8.GetBytes(Properties.Resources.bootstrap_js);                          response.ContentType = "application/javascript";                          break;                      case "jquery.js":                          data = Encoding.UTF8.GetBytes(Properties.Resources.jquery_js);                          response.ContentType = "application/javascript";                          break;                      case "docs.js":                          data = Encoding.UTF8.GetBytes(Properties.Resources.docs_js);                          response.ContentType = "application/javascript";                          break;                      case "css.css":                          data = Encoding.UTF8.GetBytes(ChanArchiver.Properties.Resources.layout);                          response.ContentType = "text/css";                          break;                      case "blue.css":                          data = Encoding.UTF8.GetBytes(ChanArchiver.Properties.Resources.css_blue);                          response.ContentType = "text/css";                          break;                      case "favicon.ico":                          data = Properties.Resources.favicon_ico;                          response.ContentType = "image/x-icon";                          break;                      case "jquery.flot.min.js":                          data = Encoding.UTF8.GetBytes(Properties.Resources.jquery_flot_min);                          response.ContentType = "application/javascript";                          break;                      case "jquery.flot.categories.min.js":                          data = Encoding.UTF8.GetBytes(Properties.Resources.jquery_flot_categories_min);                          response.ContentType = "application/javascript";                          break;                      case "jquery.flot.pie.min.js":                          data = Properties.Resources.jquery_flot_pie_min;                          response.ContentType = "application/javascript";                          break;                      case "sorttable.js":                          data = Properties.Resources.sorttable_js;                          response.ContentType = "application/javascript";                          break;                          //webfonts                        case "font-awesome.min.css":                          data = Properties.Resources.font_awesome_min;                          response.ContentType = "text/css";                          break;                      case "fontawesome-webfont.eot":                          data = Properties.Resources.fontawesome_webfont_eot;                          response.ContentType = "application/vnd.ms-fontobject";                          break;                      case "fontawesome-webfont.svg":                          data = Properties.Resources.fontawesome_webfont_svg;                          response.ContentType = "image/svg+xml";                          break;                      case "fontawesome-webfont.ttf":                      case "fontawesome-webfont.ttf?v=4.1.0":                          data = Properties.Resources.fontawesome_webfont_ttf;                          response.ContentType = "application/font-sfnt";                          break;                      case "fontawesome-webfont.woff":                      case "fontawesome-webfont.woff?v=4.1.0":                          data = Properties.Resources.fontawesome_webfont_woff;                          response.ContentType = "application/font-woff";                          break;                      case "FontAwesome.otf":                          data = Properties.Resources.FontAwesome_otf;                          response.ContentType = "application/font-sfnt";                          break;                      case "verify.js":                          data = Encoding.UTF8.GetBytes(Properties.Resources.verify_notify_min);                          response.ContentType = "application/javascript";                          break;                      default:                          break;                  }
Magic Number,ChanArchiver.HttpServerHandlers.JsonApi,GetDailyNetworkStatisticsJsonApiHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\JsonApi\GetDailyNetworkStatisticsJsonApiHandler.cs,Process,The following statement contains a magic number: !DateTime.IsLeapYear(day.Year) && dayNumber == 365
Magic Number,ChanArchiver.HttpServerHandlers.JsonApi,GetDailyNetworkStatisticsJsonApiHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\JsonApi\GetDailyNetworkStatisticsJsonApiHandler.cs,Process,The following statement contains a magic number: double t = sdata[i].Value / 1024 / 1024;
Magic Number,ChanArchiver.HttpServerHandlers.JsonApi,GetDailyNetworkStatisticsJsonApiHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\JsonApi\GetDailyNetworkStatisticsJsonApiHandler.cs,Process,The following statement contains a magic number: double t = sdata[i].Value / 1024 / 1024;
Magic Number,ChanArchiver.HttpServerHandlers.JsonApi,GetDailyNetworkStatisticsJsonApiHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\JsonApi\GetDailyNetworkStatisticsJsonApiHandler.cs,Process,The following statement contains a magic number: inner.Add(Math.Round(t' 2' MidpointRounding.AwayFromZero));
Magic Number,ChanArchiver.HttpServerHandlers.JsonApi,GetMonthlyNetworkStatisticsJsonApiHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\JsonApi\GetMonthlyNetworkStatisticsJsonApiHandler.cs,Process,The following statement contains a magic number: double t = sdata[i].Value / 1024 / 1024;
Magic Number,ChanArchiver.HttpServerHandlers.JsonApi,GetMonthlyNetworkStatisticsJsonApiHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\JsonApi\GetMonthlyNetworkStatisticsJsonApiHandler.cs,Process,The following statement contains a magic number: double t = sdata[i].Value / 1024 / 1024;
Magic Number,ChanArchiver.HttpServerHandlers.JsonApi,GetMonthlyNetworkStatisticsJsonApiHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\JsonApi\GetMonthlyNetworkStatisticsJsonApiHandler.cs,Process,The following statement contains a magic number: inner.Add(Math.Round(t' 2' MidpointRounding.AwayFromZero));
Magic Number,Jayrock,InternetDate,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\InternetDate.cs,Parse,The following statement contains a magic number: zone.Length == 2                  && zfirst == 'U' && zlast == 'T'
Magic Number,Jayrock,InternetDate,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\InternetDate.cs,Parse,The following statement contains a magic number: zone.Length < 4
Magic Number,Jayrock,InternetDate,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\InternetDate.cs,Parse,The following statement contains a magic number: TimeSpan offset = new TimeSpan(zzz / 100' zzz % 100' 0);
Magic Number,Jayrock,InternetDate,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\InternetDate.cs,Parse,The following statement contains a magic number: TimeSpan offset = new TimeSpan(zzz / 100' zzz % 100' 0);
Magic Number,Jayrock,UnixTime,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\UnixTime.cs,ToDateTime,The following statement contains a magic number: return ToDateTime((long) time' (int) Math.Round(time % 1 * 1000));
Magic Number,Jayrock,UnixTime,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\UnixTime.cs,ToDateTime,The following statement contains a magic number: ms < 0 || ms > 999
Magic Number,Jayrock,UnixTime,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\UnixTime.cs,ToDouble,The following statement contains a magic number: return (time.ToUniversalTime() - new DateTime(1970' 1' 1)).TotalSeconds;
Magic Number,Jayrock.Configuration,ListSectionHandler,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Configuration\ListSectionHandler.cs,CreateList,The following statement contains a magic number: return parent != null ?                  new ArrayList((ICollection) parent) :                  new ArrayList(/* capacity */ 4);
Magic Number,Jayrock.Diagnostics,DebugString,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Diagnostics\DebugString.cs,Format,The following statement contains a magic number: return Format(s' 50);
Magic Number,Jayrock.Dynamic,Option,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Dynamic\DynamicMetaObject.cs,GetHashCode,The following statement contains a magic number: return HasValue.GetHashCode() ^ (_value.GetHashCode() * 397);
Magic Number,Jayrock.Dynamic,Option,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Dynamic\DynamicMetaObject.cs,GetHashCode,The following statement contains a magic number: return HasValue.GetHashCode() ^ (_value.GetHashCode() * 397);
Magic Number,Jayrock.JsonML,JsonMLCodec,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\JsonML\JsonMLCodec.cs,DecodeObjectForm,The following statement contains a magic number: switch (memberName)                  {                      case "tagName":                      {                          if (tagName != null && string.CompareOrdinal(reader.Text' tagName) != 0)                              throw new JsonMLException("Tag name already defined.");                          tagName = reader.Text;                          if (tagName.Length == 0)                              throw new JsonMLException("Tag name cannot be empty.");                          reader.Read();                          break;                      }                      case "childNodes":                      {                          if (reader.TokenClass == JsonTokenClass.Null)                          {                              reader.Read();                          }                          else                          {                              if (reader.TokenClass != JsonTokenClass.Array)                                  throw new JsonMLException("Child nodes must be a JSON array.");                                                            JsonRecorder aChildNodes = new JsonRecorder();                              aChildNodes.WriteFromReader(reader);                              if (childNodes == null)                              {                                  childNodes = aChildNodes;                              }                              else                              {                                  if (childNodesList == null)                                      childNodesList = new ArrayList(4);                                  childNodesList.Add(aChildNodes);                              }                          }                          break;                      }                      default:                      {                          if (attributes == null)                              attributes = new JsonObject();                          if (reader.TokenClass == JsonTokenClass.Array || reader.TokenClass == JsonTokenClass.Object)                              throw new JsonMLException("Non-scalar attribute value.");                          if (reader.TokenClass != JsonTokenClass.Null)                              attributes.Add(memberName' reader.Text);                          reader.Read();                          break;                      }                  }
Magic Number,Jayrock.Json,BufferedCharReader,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\BufferedCharReader.cs,BufferedCharReader,The following statement contains a magic number: _bufferSize = Math.Max(256' bufferSize);
Magic Number,Jayrock.Json,JsonBuffer,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonBuffer.cs,JsonBuffer,The following statement contains a magic number: JsonBuffer buffer = new JsonBufferStorage(5) // [null'true'false]                  .Write(JsonToken.Array())                      .Write(JsonToken.Null()' JsonToken.True()' JsonToken.False())                  .Write(JsonToken.EndArray())                  .ToBuffer();
Magic Number,Jayrock.Json,JsonBuffer,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonBuffer.cs,JsonBuffer,The following statement contains a magic number: _null = buffer.Slice(1' 2);
Magic Number,Jayrock.Json,JsonBuffer,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonBuffer.cs,JsonBuffer,The following statement contains a magic number: _true = buffer.Slice(2' 3);
Magic Number,Jayrock.Json,JsonBuffer,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonBuffer.cs,JsonBuffer,The following statement contains a magic number: _true = buffer.Slice(2' 3);
Magic Number,Jayrock.Json,JsonBuffer,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonBuffer.cs,JsonBuffer,The following statement contains a magic number: _false = buffer.Slice(3' 4);
Magic Number,Jayrock.Json,JsonBuffer,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonBuffer.cs,JsonBuffer,The following statement contains a magic number: _false = buffer.Slice(3' 4);
Magic Number,Jayrock.Json,JsonBufferStorage,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonBufferStorage.cs,Write,The following statement contains a magic number: _tokens = new JsonToken[16];
Magic Number,Jayrock.Json,JsonRecorder,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonRecorder.cs,Write,The following statement contains a magic number: _tokens = new JsonToken[16];
Magic Number,Jayrock.Json,JsonRecorder,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonRecorder.cs,CreatePlayer,The following statement contains a magic number: JsonToken[] tokens = new JsonToken[_count + 2];
Magic Number,Jayrock.Json,JsonString,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonString.cs,EnquoteStringOrChars,The following statement contains a magic number: sb = new StringBuilder(length + 4);
Magic Number,Jayrock.Json,JsonString,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonString.cs,Dequote,The following statement contains a magic number: switch (ch)                      {                          case 'b': output.Append('\b'); break; // Backspace                          case 't': output.Append('\t'); break; // Horizontal tab                          case 'n': output.Append('\n'); break; // Newline                          case 'f': output.Append('\f'); break; // Form feed                          case 'r': output.Append('\r'); break; // Carriage return                                                         case 'u':                          {                              if (hexDigits == null)                                  hexDigits = new char[4];                                                            output.Append(ParseHex(input' hexDigits));                               break;                          }                                                        default:                              output.Append(ch);                              break;                      }
Magic Number,Jayrock.Json,JsonString,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonString.cs,ParseHex,The following statement contains a magic number: Debug.Assert(hexDigits.Length == 4);
Magic Number,Jayrock.Json,JsonString,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonString.cs,ParseHex,The following statement contains a magic number: hexDigits[2] = input.Next();
Magic Number,Jayrock.Json,JsonString,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonString.cs,ParseHex,The following statement contains a magic number: hexDigits[3] = input.Next();
Magic Number,Jayrock.Json,JsonTextReader,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonTextReader.cs,Parse,The following statement contains a magic number: s.Length > 2 && (s[1] == 'x' || s[1] == 'X')
Magic Number,Jayrock.Json,JsonTextReader,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonTextReader.cs,Push,The following statement contains a magic number: _stack = new Stack(6);
Magic Number,Jayrock.Json,JsonTextReader,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonTextReader.cs,TryParseOctal,The following statement contains a magic number: num = checked(num * 8) | ((uint) ch - 0x30);
Magic Number,Jayrock.Json,JsonTextReader,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonTextReader.cs,TryParseHex,The following statement contains a magic number: long num = long.Parse(s.Substring(2)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);
Magic Number,Jayrock.Json,JsonTextWriter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonTextWriter.cs,PrettyIndent,The following statement contains a magic number: int spaces = _indent * 4;
Magic Number,Jayrock.Json,JsonTextWriter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonTextWriter.cs,PrettyIndent,The following statement contains a magic number: _indentBuffer = new string(' '' spaces * 4).ToCharArray();
Magic Number,Jayrock.Json,WriterStateStack,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonWriterBase.cs,Push,The following statement contains a magic number: _states = new WriterState[6];
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,FormatDateTime,The following statement contains a magic number: chars[4]  = chars[7]  = '-';
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,FormatDateTime,The following statement contains a magic number: chars[4]  = chars[7]  = '-';
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,FormatDateTime,The following statement contains a magic number: chars[10] = 'T';
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,FormatDateTime,The following statement contains a magic number: chars[13] = chars[16] = chars[30] = ':';
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,FormatDateTime,The following statement contains a magic number: chars[13] = chars[16] = chars[30] = ':';
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,FormatDateTime,The following statement contains a magic number: chars[13] = chars[16] = chars[30] = ':';
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,FormatDateTime,The following statement contains a magic number: chars[19] = '.';
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,FormatDateTime,The following statement contains a magic number: Digits2(chars' when.Month' 5);
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,FormatDateTime,The following statement contains a magic number: Digits2(chars' when.Day'   8);
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,FormatDateTime,The following statement contains a magic number: Digits2(chars' when.Hour'   11);
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,FormatDateTime,The following statement contains a magic number: Digits2(chars' when.Minute' 14);
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,FormatDateTime,The following statement contains a magic number: Digits2(chars' when.Second' 17);
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,FormatDateTime,The following statement contains a magic number: Digits7(chars' (int) (when.Ticks % 10000000L)' 20);
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,FormatDateTime,The following statement contains a magic number: Digits7(chars' (int) (when.Ticks % 10000000L)' 20);
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,FormatDateTime,The following statement contains a magic number: chars[27] = offset.Ticks >= 0 ? '+' : '-';
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,FormatDateTime,The following statement contains a magic number: Digits2(chars' offset.Hours'   28);
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,FormatDateTime,The following statement contains a magic number: Digits2(chars' offset.Minutes' 31);
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,Digits2,The following statement contains a magic number: buffer[offset++] = (char) ('0' + (value / 10));
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,Digits2,The following statement contains a magic number: buffer[offset]   = (char) ('0' + (value % 10));
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,Digits3,The following statement contains a magic number: buffer[offset++] = (char) ('0' + (value / 100));
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,Digits3,The following statement contains a magic number: Digits2(buffer' value % 100' offset);
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,Digits4,The following statement contains a magic number: buffer[offset++] = (char) ('0' + (value / 1000));
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,Digits4,The following statement contains a magic number: Digits3(buffer' value % 1000' offset);
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,Digits7,The following statement contains a magic number: Digits4(buffer' value / 1000' offset);
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,Digits7,The following statement contains a magic number: Digits3(buffer' value % 1000' offset + 4);
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeExporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeExporter.cs,Digits7,The following statement contains a magic number: Digits3(buffer' value % 1000' offset + 4);
Magic Number,Jayrock.Json.Conversion.Converters,DateTimeImporter,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\Converters\DateTimeImporter.cs,ImportFromString,The following statement contains a magic number: time = UnixTime.ToDateTime(ms / 1000.0);
Magic Number,Jayrock.JsonRpc.Web,AppVars,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\Web\AppVars.cs,Get,The following statement contains a magic number: vars = new Hashtable(4);
Magic Number,Jayrock.JsonRpc.Web,JsonRpcProxyGenerator,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\Web\JsonRpcProxyGenerator.cs,Version2,The following statement contains a magic number: writer.Indent += 3;
Magic Number,Jayrock.JsonRpc.Web,JsonRpcProxyGeneratorBase,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\Web\JsonRpcProxyGeneratorBase.cs,ProcessRequest,The following statement contains a magic number: Response.StatusCode = 304;
Magic Number,Jayrock.JsonRpc.Web,JsonRpcTester,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\Web\JsonRpcTester.cs,AddContent,The following statement contains a magic number: requestArea.Rows = 10;
Magic Number,Jayrock.JsonRpc.Web,JsonRpcTester,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\JsonRpc\Web\JsonRpcTester.cs,AddContent,The following statement contains a magic number: responseArea.Rows = 10;
Magic Number,Jayrock.Services,Method,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\Services\Method.cs,MapArguments,The following statement contains a magic number: name.Length == 2
Magic Number,Jayrock.Services,Method,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock\Services\Method.cs,MapArguments,The following statement contains a magic number: name.Length <= 2
Magic Number,Amib.Threading.Internal,WorkItem,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItem.cs,ExecuteWorkItem,The following statement contains a magic number: Thread.Sleep(60 * 1000);
Magic Number,Amib.Threading.Internal,WorkItem,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItem.cs,ExecuteWorkItem,The following statement contains a magic number: Thread.Sleep(60 * 1000);
Magic Number,Amib.Threading.Internal,WorkItem,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItem.cs,WaitAll,The following statement contains a magic number: (null == cancelWaitHandle) && (waitHandles.Length <= 64)
Duplicate Code,ChanArchiver,ThreadServerModule,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\HttpServerHandlers\ThreadServerModule.cs,Process,The method contains a code clone-set at the following line numbers (starting from the method definition): ((305' 324)' (334' 353))
Missing Default,HtmlAgilityPack,HtmlDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,NewCheck,The following switch statement is missing a default case: switch (_state)                      {                          case ParseState.AttributeAfterEquals:                              PushAttributeValueStart(_index - 1);                              break;                            case ParseState.BetweenAttributes:                              PushAttributeNameStart(_index - 1);                              break;                            case ParseState.WhichTag:                              PushNodeNameStart(true' _index - 1);                              _state = ParseState.Tag;                              break;                      }
Missing Default,HtmlAgilityPack,HtmlNode,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,HtmlNode,The following switch statement is missing a default case: switch (type)              {                  case HtmlNodeType.Comment:                      Name = HtmlNodeTypeNameComment;                      _endnode = this;                      break;                    case HtmlNodeType.Document:                      Name = HtmlNodeTypeNameDocument;                      _endnode = this;                      break;                    case HtmlNodeType.Text:                      Name = HtmlNodeTypeNameText;                      _endnode = this;                      break;              }
Missing Default,HtmlAgilityPack,HtmlNode,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,CloneNode,The following switch statement is missing a default case: switch (_nodetype)              {                  case HtmlNodeType.Comment:                      ((HtmlCommentNode) node).Comment = ((HtmlCommentNode) this).Comment;                      return node;                    case HtmlNodeType.Text:                      ((HtmlTextNode) node).Text = ((HtmlTextNode) this).Text;                      return node;              }
Missing Default,HtmlAgilityPack,HtmlNode,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteTo,The following switch statement is missing a default case: switch (_nodetype)              {                  case HtmlNodeType.Comment:                      html = ((HtmlCommentNode) this).Comment;                      if (_ownerdocument.OptionOutputAsXml)                      {                          outText.Write("<!--" + GetXmlComment((HtmlCommentNode) this) + " -->");                      }                      else                      {                          outText.Write(html);                      }                      break;                    case HtmlNodeType.Document:                      if (_ownerdocument.OptionOutputAsXml)                      {                          outText.Write("<?xml version=\"1.0\" encoding=\"" + _ownerdocument.GetOutEncoding().BodyName +                                        "\"?>");                            // check there is a root element                          if (_ownerdocument.DocumentNode.HasChildNodes)                          {                              int rootnodes = _ownerdocument.DocumentNode._childnodes.Count;                              if (rootnodes > 0)                              {                                  HtmlNode xml = _ownerdocument.GetXmlDeclaration();                                  if (xml != null)                                  {                                      rootnodes --;                                  }                                    if (rootnodes > 1)                                  {                                      if (_ownerdocument.OptionOutputUpperCase)                                      {                                          outText.Write("<SPAN>");                                          WriteContentTo(outText);                                          outText.Write("</SPAN>");                                      }                                      else                                      {                                          outText.Write("<span>");                                          WriteContentTo(outText);                                          outText.Write("</span>");                                      }                                      break;                                  }                              }                          }                      }                      WriteContentTo(outText);                      break;                    case HtmlNodeType.Text:                      html = ((HtmlTextNode) this).Text;                      if (_ownerdocument.OptionOutputAsXml)                      {                          outText.Write(HtmlDocument.HtmlEncode(html));                      }                      else                      {                          outText.Write(html);                      }                      break;                    case HtmlNodeType.Element:                      string name;                      if (_ownerdocument.OptionOutputUpperCase)                      {                          name = Name.ToUpper();                      }                      else                      {                          name = Name;                      }                        if (_ownerdocument.OptionOutputOriginalCase)                          name = OriginalName;                        if (_ownerdocument.OptionOutputAsXml)                      {                          if (name.Length > 0)                          {                              if (name[0] == '?')                              {                                  // forget this one' it's been done at the document level                                  break;                              }                                if (name.Trim().Length == 0)                              {                                  break;                              }                              name = HtmlDocument.GetXmlName(name);                          }                          else                          {                              break;                          }                      }                        outText.Write("<" + name);                      WriteAttributes(outText' false);                        if (!HasChildNodes)                      {                          if (IsEmptyElement(Name))                          {                              if ((_ownerdocument.OptionWriteEmptyNodes) || (_ownerdocument.OptionOutputAsXml))                              {                                  outText.Write(" />");                              }                              else                              {                                  if (Name.Length > 0)                                  {                                      if (Name[0] == '?')                                      {                                          outText.Write("?");                                      }                                  }                                    outText.Write(">");                              }                          }                          else                          {                              outText.Write("></" + name + ">");                          }                      }                      else                      {                          outText.Write(">");                          bool cdata = false;                          if (_ownerdocument.OptionOutputAsXml)                          {                              if (IsCDataElement(Name))                              {                                  // this code and the following tries to output things as nicely as possible for old browsers.                                  cdata = true;                                  outText.Write("\r\n//<![CDATA[\r\n");                              }                          }                            if (cdata)                          {                              if (HasChildNodes)                              {                                  // child must be a text                                  ChildNodes[0].WriteTo(outText);                              }                              outText.Write("\r\n//]]>//\r\n");                          }                          else                          {                              WriteContentTo(outText);                          }                            outText.Write("</" + name);                          if (!_ownerdocument.OptionOutputAsXml)                          {                              WriteAttributes(outText' true);                          }                          outText.Write(">");                      }                      break;              }
Missing Default,HtmlAgilityPack,HtmlNode,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteTo,The following switch statement is missing a default case: switch (_nodetype)              {                  case HtmlNodeType.Comment:                      writer.WriteComment(GetXmlComment((HtmlCommentNode) this));                      break;                    case HtmlNodeType.Document:                      writer.WriteProcessingInstruction("xml"'                                                        "version=\"1.0\" encoding=\"" +                                                        _ownerdocument.GetOutEncoding().BodyName + "\"");                      if (HasChildNodes)                      {                          foreach (HtmlNode subnode in ChildNodes)                          {                              subnode.WriteTo(writer);                          }                      }                      break;                    case HtmlNodeType.Text:                      string html = ((HtmlTextNode) this).Text;                      writer.WriteString(html);                      break;                    case HtmlNodeType.Element:                      string name = _ownerdocument.OptionOutputUpperCase ? Name.ToUpper() : Name;                        if (_ownerdocument.OptionOutputOriginalCase)                          name = OriginalName;                        writer.WriteStartElement(name);                      WriteAttributes(writer' this);                        if (HasChildNodes)                      {                          foreach (HtmlNode subnode in ChildNodes)                          {                              subnode.WriteTo(writer);                          }                      }                      writer.WriteEndElement();                      break;              }
Missing Default,HtmlAgilityPack,MixedCodeDocument,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\MixedCodeDocument.cs,Parse,The following switch statement is missing a default case: switch (_state)                  {                      case ParseState.Text:                          if (_index + TokenCodeStart.Length < _text.Length)                          {                              if (_text.Substring(_index - 1' TokenCodeStart.Length) == TokenCodeStart)                              {                                  _state = ParseState.Code;                                  _currentfragment.Length = _index - 1 - _currentfragment.Index;                                  _currentfragment = CreateFragment(MixedCodeDocumentFragmentType.Code);                                  SetPosition();                                  continue;                              }                          }                          break;                        case ParseState.Code:                          if (_index + TokenCodeEnd.Length < _text.Length)                          {                              if (_text.Substring(_index - 1' TokenCodeEnd.Length) == TokenCodeEnd)                              {                                  _state = ParseState.Text;                                  _currentfragment.Length = _index + TokenCodeEnd.Length - _currentfragment.Index;                                  _index += TokenCodeEnd.Length;                                  _lineposition += TokenCodeEnd.Length;                                  _currentfragment = CreateFragment(MixedCodeDocumentFragmentType.Text);                                  SetPosition();                                  continue;                              }                          }                          break;                  }
Missing Default,HtmlAgilityPack,MixedCodeDocumentFragment,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\aniwrap\libs\hap\1_4_0\HtmlAgilityPack\MixedCodeDocumentFragment.cs,MixedCodeDocumentFragment,The following switch statement is missing a default case: switch (type)              {                  case MixedCodeDocumentFragmentType.Text:                      Doc._textfragments.Append(this);                      break;                    case MixedCodeDocumentFragmentType.Code:                      Doc._codefragments.Append(this);                      break;              }
Missing Default,ChanArchiver,Settings,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Settings.cs,Load,The following switch statement is missing a default case: switch (member.Name)                      {                          case "AutoStartManuallyAddedThreads":                              AutoStartManuallyAddedThreads = Convert.ToBoolean(member.Value); continue;                            case "ThumbnailOnly":                              ThumbnailOnly = Convert.ToBoolean(member.Value); continue;                            case "EnableFileStats":                              EnableFileStats = Convert.ToBoolean(member.Value); continue;                            case "ConvertGifsToWebm":                              ConvertGifsToWebm = Convert.ToBoolean(member.Value); continue;                            case "ConvertWebmToMp4":                              ConvertWebmToMp4 = Convert.ToBoolean(member.Value); continue;                            case "Convert_Webmgif_To_Target":                              Convert_Webmgif_To_Target = Convert.ToBoolean(member.Value); continue;                            case "Convert_Webmgif_only_devices":                              Convert_Webmgif_only_devices = Convert.ToBoolean(member.Value); continue;                            case "ListThumbsInQueue":                              ListThumbsInQueue = Convert.ToBoolean(member.Value); continue;                            case "Convert_Webmgif_Target":                              Convert_Webmgif_Target = (X_Target)Convert.ToInt32(member.Value); continue;                            case "FilePrioritizeMode":                              FilePrioritizeMode = (FilePrioritizeModeEnum)Convert.ToInt32(member.Value); continue;                            case "PrioritizeBumpLimit":                              PrioritizeBumpLimit = Convert.ToBoolean(member.Value); continue;                            case "AutoRemoveCompleteFiles":                              AutoRemoveCompleteFiles = Convert.ToBoolean(member.Value); continue;                            case "UseHttps":                              UseHttps = Convert.ToBoolean(member.Value); continue;                            case "RemoveThreadsWhenTheyEnterArchivedState":                              RemoveThreadsWhenTheyEnterArchivedState = Convert.ToBoolean(member.Value); continue;                            case "EnableAuthentication":                              EnableAuthentication = Convert.ToBoolean(member.Value); continue;                            case "SaveBannedFileThumbnail":                              SaveBannedFileThumbnail = Convert.ToBoolean(member.Value); continue;                            case "AllowGuestAccess":                              AllowGuestAccess = Convert.ToBoolean(member.Value); continue;                            case "AuthUsername":                              AuthUsername = Convert.ToString(member.Value); continue;                            case "AuthPassword":                              AuthPassword = Convert.ToString(member.Value); continue;                            case "CacheAPIFilesInMemory":                              CacheAPIFilesInMemory = Convert.ToBoolean(member.Value); continue;                      }
Missing Default,Jayrock.Json,JsonBufferReader,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\JsonBufferReader.cs,ReadTokenImpl,The following switch statement is missing a default case: switch (++_index)                  {                      case 0: return JsonToken.Array();                      case 1: return _buffer[0];                      case 2: return JsonToken.EndArray();                                      }
Missing Default,Jayrock.Json.Conversion,JsonMemberNamingConventionAttribute,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\JayrockJSON\Jayrock.Json\Json\Conversion\JsonMemberNamingConventionAttribute.cs,Apply,The following switch statement is missing a default case: switch (Convention)              {                  case NamingConvention.Pascal:                      SetName(property' char.ToUpper(name[0]' CultureInfo.InvariantCulture) + name.Substring(1)); break;                  case NamingConvention.Camel:                      SetName(property' char.ToLower(name[0]' CultureInfo.InvariantCulture) + name.Substring(1)); break;                  case NamingConvention.Upper:                      SetName(property' name.ToUpper(CultureInfo.InvariantCulture)); break;                  case NamingConvention.Lower:                      SetName(property' name.ToLower(CultureInfo.InvariantCulture)); break;              }
Missing Default,Amib.Threading.Internal,WorkItem,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Libs\SmartThreadPool\WorkItem.cs,Cancel,The following switch statement is missing a default case: switch (GetWorkItemState())                  {                      case WorkItemState.Canceled:                          //Debug.WriteLine("Work item already canceled");                          if (abortExecution)                          {                              Thread executionThread = Interlocked.CompareExchange(ref _executingThread' null' _executingThread);                              if (null != executionThread)                              {                                  executionThread.Abort(); // "Cancel"                                  // No need to signalComplete' because we already cancelled this work item                                  // so it already signaled its completion.                                  //signalComplete = true;                              }                          }                           success = true;                          break;                      case WorkItemState.Completed:                          //Debug.WriteLine("Work item cannot be canceled");                          break;                      case WorkItemState.InProgress:                          if (abortExecution)                          {                              Thread executionThread = Interlocked.CompareExchange(ref _executingThread' null' _executingThread);                              if (null != executionThread)                              {                                  executionThread.Abort(); // "Cancel"                                  success = true;                                  signalComplete = true;                              }                          }                          else                          {                              success = true;                              signalComplete = true;                          }                          break;                      case WorkItemState.InQueue:                          // Signal to the wait for completion that the work                          // item has been completed (canceled). There is no                          // reason to wait for it to get out of the queue                          signalComplete = true;                          //Debug.WriteLine("Work item canceled");                          success = true;                          break;                  }
Missing Default,ChanArchiver.Thread_Storage,FolderStorageEngine,D:\research\architectureSmells\repos\diantahoc_chan-archiver\ChanArchiver\Thread Storage\FolderStorageEngine.cs,load_post_data_str,The following switch statement is missing a default case: switch (member.Name)                  {                      case "RawComment":                          pf.Comment = Convert.ToString(member.Value);                          continue;                      case "Email":                          pf.Email = Convert.ToString(member.Value);                          continue;                      case "Name":                          pf.Name = Convert.ToString(member.Value);                          continue;                      case "PosterID":                          pf.PosterID = Convert.ToString(member.Value);                          continue;                      case "Subject":                          pf.Subject = Convert.ToString(member.Value);                          continue;                      case "Trip":                          pf.Trip = Convert.ToString(member.Value);                          continue;                      case "ID":                          pf.PostID = Convert.ToInt32(member.Value);                          continue;                      case "Time":                          try                          {                              pf.Time = DateTime.Parse(member.Value.ToString());                          }                          catch                          {                            }                          continue;                      case "FileHash":                          {                              FileFormatter f = new FileFormatter();                              f.PostID = pf.PostID;                              f.FileName = Convert.ToString(post_data["FileName"]);                              f.Hash = Convert.ToString(post_data["FileHash"]);                              f.ThumbName = Convert.ToString(post_data["ThumbTime"]);                              f.Height = Convert.ToInt32(post_data["FileHeight"]);                              f.Width = Convert.ToInt32(post_data["FileWidth"]);                              f.Size = Convert.ToInt32(post_data["FileSize"]);                              pf.MyFile = f;                              continue;                          }                      case "Sticky":                          pf.IsSticky = Convert.ToBoolean(member.Value);                          continue;                      case "Closed":                          pf.IsLocked = Convert.ToBoolean(member.Value);                          continue;                  }
