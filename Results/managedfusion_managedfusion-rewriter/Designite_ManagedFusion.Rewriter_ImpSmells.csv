Implementation smell,Namespace,Class,File,Method,Description
Long Method,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,RefreshRules,The method has 424 lines of code.
Long Method,ManagedFusion.Rewriter,ProxyHandler,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ProxyHandler.cs,SendRequestToTarget,The method has 146 lines of code.
Long Method,ManagedFusion.Rewriter,ProxyHandler,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ProxyHandler.cs,SendResponseToClient,The method has 125 lines of code.
Complex Method,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,AddRuleFlag,Cyclomatic complexity of the method is 18
Complex Method,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,GetCondition,Cyclomatic complexity of the method is 11
Complex Method,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,RefreshRules,Cyclomatic complexity of the method is 58
Complex Method,ManagedFusion.Rewriter.Engines,MicrosoftRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\MicrosoftRuleSet.cs,GetRule,Cyclomatic complexity of the method is 9
Complex Method,ManagedFusion.Rewriter.Engines,MicrosoftRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\MicrosoftRuleSet.cs,GetAction,Cyclomatic complexity of the method is 15
Complex Method,ManagedFusion.Rewriter.Engines,MicrosoftRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\MicrosoftRuleSet.cs,GetCondition,Cyclomatic complexity of the method is 10
Complex Method,ManagedFusion.Rewriter,ProxyHandler,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ProxyHandler.cs,SendRequestToTarget,Cyclomatic complexity of the method is 27
Complex Method,ManagedFusion.Rewriter,ProxyHandler,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ProxyHandler.cs,SendResponseToClient,Cyclomatic complexity of the method is 16
Complex Method,ManagedFusion.Rewriter,RuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\RuleSet.cs,RunRules,Cyclomatic complexity of the method is 17
Complex Method,ManagedFusion.Rewriter,RuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\RuleSet.cs,RunOutputRules,Cyclomatic complexity of the method is 11
Complex Method,ManagedFusion.Rewriter,ServerVariable,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ServerVariable.cs,GetValue,Cyclomatic complexity of the method is 21
Long Parameter List,ManagedFusion.Rewriter,KnownHttpVerb,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\KnownHttpVerb.cs,KnownHttpVerb,The method has 5 parameters. Parameters: name' requireContentBody' contentBodyNotAllowed' connectRequest' expectNoContentResponse
Long Parameter List,ManagedFusion.Rewriter.Rules,DefaultRule,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\DefaultRule.cs,DefaultRule,The method has 5 parameters. Parameters: conditions' pattern' substitution' options' flags
Long Parameter List,ManagedFusion.Rewriter.Rules.Flags,ResponseCookieFlag,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\Flags\ResponseCookieFlag.cs,ResponseCookieFlag,The method has 5 parameters. Parameters: name' value' domain' expires' path
Long Identifier,ManagedFusion.Rewriter.Configuration,ManagedFusionRewriterSectionGroup,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter ManagedFusionRewriterSectionGroupSectionName is 44.
Long Identifier,ManagedFusion.Rewriter.Configuration,ManagedFusionRewriterSectionGroup,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter ManagedFusionRewriterSectionGroupSectionName is 44.
Long Identifier,ManagedFusion.Rewriter.Configuration,ManagedFusionRewriterSectionGroup,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter ManagedFusionRewriterSectionGroupSectionName is 44.
Long Identifier,ManagedFusion.Rewriter.Configuration,ManagedFusionRewriterSectionGroup,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter ManagedFusionRewriterSectionGroupSectionName is 44.
Long Identifier,ManagedFusion.Rewriter.Configuration,ManagedFusionRewriterSectionGroup,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter ManagedFusionRewriterSectionGroupSectionName is 44.
Long Identifier,ManagedFusion.Rewriter.Configuration,ManagedFusionRewriterSectionGroup,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter ManagedFusionRewriterSectionGroupSectionName is 44.
Long Identifier,ManagedFusion.Rewriter.Configuration,ManagedFusionRewriterSectionGroup,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter ManagedFusionRewriterSectionGroupSectionName is 44.
Long Identifier,ManagedFusion.Rewriter.Configuration,ManagedFusionRewriterSectionGroup,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter ManagedFusionRewriterSectionGroupSectionName is 44.
Long Identifier,ManagedFusion.Rewriter.Configuration,ManagedFusionRewriterSectionGroup,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter ManagedFusionRewriterSectionGroupSectionName is 44.
Long Identifier,ManagedFusion.Rewriter.Configuration,RulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowOutputProcessingPropertyName is 33.
Long Identifier,ManagedFusion.Rewriter.Configuration,RulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowOutputProcessingPropertyName is 33.
Long Identifier,ManagedFusion.Rewriter.Configuration,RulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowOutputProcessingPropertyName is 33.
Long Identifier,ManagedFusion.Rewriter.Configuration,RulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowOutputProcessingPropertyName is 33.
Long Identifier,ManagedFusion.Rewriter.Configuration,RulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowOutputProcessingPropertyName is 33.
Long Identifier,ManagedFusion.Rewriter.Configuration,RulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowOutputProcessingPropertyName is 33.
Long Identifier,ManagedFusion.Rewriter.Configuration,RulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowOutputProcessingPropertyName is 33.
Long Identifier,ManagedFusion.Rewriter.Configuration,RulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowOutputProcessingPropertyName is 33.
Long Identifier,ManagedFusion.Rewriter.Configuration,RulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowOutputProcessingPropertyName is 33.
Long Identifier,ManagedFusion.Rewriter.Configuration,ApacheSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter DefaultPhysicalApplicationPathPropertyName is 42.
Long Identifier,ManagedFusion.Rewriter.Configuration,ApacheSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter DefaultPhysicalApplicationPathPropertyName is 42.
Long Identifier,ManagedFusion.Rewriter.Configuration,ApacheSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter DefaultPhysicalApplicationPathPropertyName is 42.
Long Identifier,ManagedFusion.Rewriter.Configuration,ApacheSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter DefaultPhysicalApplicationPathPropertyName is 42.
Long Identifier,ManagedFusion.Rewriter.Configuration,ApacheSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter DefaultPhysicalApplicationPathPropertyName is 42.
Long Identifier,ManagedFusion.Rewriter.Configuration,ApacheSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter DefaultPhysicalApplicationPathPropertyName is 42.
Long Identifier,ManagedFusion.Rewriter.Configuration,ApacheSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter DefaultPhysicalApplicationPathPropertyName is 42.
Long Identifier,ManagedFusion.Rewriter.Configuration,ApacheSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter DefaultPhysicalApplicationPathPropertyName is 42.
Long Identifier,ManagedFusion.Rewriter.Configuration,ApacheSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter DefaultPhysicalApplicationPathPropertyName is 42.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowIis7TransferRequestPropertyName is 36.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowXRewriteUrlHeaderPropertyName is 34.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowRequestHeaderAddingPropertyName is 36.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowServerVariableSettingPropertyName is 38.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter ModifyIIS7WorkerRequestPropertyName is 35.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowIis7TransferRequestPropertyName is 36.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowXRewriteUrlHeaderPropertyName is 34.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowRequestHeaderAddingPropertyName is 36.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowServerVariableSettingPropertyName is 38.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter ModifyIIS7WorkerRequestPropertyName is 35.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowIis7TransferRequestPropertyName is 36.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowXRewriteUrlHeaderPropertyName is 34.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowRequestHeaderAddingPropertyName is 36.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowServerVariableSettingPropertyName is 38.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter ModifyIIS7WorkerRequestPropertyName is 35.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowIis7TransferRequestPropertyName is 36.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowXRewriteUrlHeaderPropertyName is 34.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowRequestHeaderAddingPropertyName is 36.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowServerVariableSettingPropertyName is 38.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter ModifyIIS7WorkerRequestPropertyName is 35.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowIis7TransferRequestPropertyName is 36.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowXRewriteUrlHeaderPropertyName is 34.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowRequestHeaderAddingPropertyName is 36.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowServerVariableSettingPropertyName is 38.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter ModifyIIS7WorkerRequestPropertyName is 35.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowIis7TransferRequestPropertyName is 36.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowXRewriteUrlHeaderPropertyName is 34.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowRequestHeaderAddingPropertyName is 36.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowServerVariableSettingPropertyName is 38.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter ModifyIIS7WorkerRequestPropertyName is 35.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowIis7TransferRequestPropertyName is 36.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowXRewriteUrlHeaderPropertyName is 34.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowRequestHeaderAddingPropertyName is 36.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowServerVariableSettingPropertyName is 38.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter ModifyIIS7WorkerRequestPropertyName is 35.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowIis7TransferRequestPropertyName is 36.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowXRewriteUrlHeaderPropertyName is 34.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowRequestHeaderAddingPropertyName is 36.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowServerVariableSettingPropertyName is 38.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter ModifyIIS7WorkerRequestPropertyName is 35.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowIis7TransferRequestPropertyName is 36.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowXRewriteUrlHeaderPropertyName is 34.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowRequestHeaderAddingPropertyName is 36.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter AllowServerVariableSettingPropertyName is 38.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter ModifyIIS7WorkerRequestPropertyName is 35.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterModulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter RewriterModuleItemPropertyName is 30.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterModulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter RewriterModuleItemPropertyName is 30.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterModulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter RewriterModuleItemPropertyName is 30.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterModulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter RewriterModuleItemPropertyName is 30.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterModulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter RewriterModuleItemPropertyName is 30.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterModulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter RewriterModuleItemPropertyName is 30.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterModulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter RewriterModuleItemPropertyName is 30.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterModulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter RewriterModuleItemPropertyName is 30.
Long Identifier,ManagedFusion.Rewriter.Configuration,RewriterModulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,,The length of the parameter RewriterModuleItemPropertyName is 30.
Long Identifier,ManagedFusion.Rewriter,Manager,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Manager.cs,,The length of the parameter ISAPIWorkerRequestInProcForIIS7Type is 35.
Long Statement,ManagedFusion.Rewriter.Configuration,RewriterModulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,IsElementName,The length of the statement  "            return (elementName == global::ManagedFusion.Rewriter.Configuration.RewriterModulesSection.RewriterModuleItemPropertyName); " is 123.
Long Statement,ManagedFusion.Rewriter.Configuration,RewriterModulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,IsElementName,The length of the statement  "            return (elementName == global::ManagedFusion.Rewriter.Configuration.RewriterModulesSection.RewriterModuleItemPropertyName); " is 123.
Long Statement,ManagedFusion.Rewriter.Configuration,RewriterModulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,IsElementName,The length of the statement  "            return (elementName == global::ManagedFusion.Rewriter.Configuration.RewriterModulesSection.RewriterModuleItemPropertyName); " is 123.
Long Statement,ManagedFusion.Rewriter.Configuration,RewriterModulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,IsElementName,The length of the statement  "            return (elementName == global::ManagedFusion.Rewriter.Configuration.RewriterModulesSection.RewriterModuleItemPropertyName); " is 123.
Long Statement,ManagedFusion.Rewriter.Configuration,RewriterModulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,IsElementName,The length of the statement  "            return (elementName == global::ManagedFusion.Rewriter.Configuration.RewriterModulesSection.RewriterModuleItemPropertyName); " is 123.
Long Statement,ManagedFusion.Rewriter.Configuration,RewriterModulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,IsElementName,The length of the statement  "            return (elementName == global::ManagedFusion.Rewriter.Configuration.RewriterModulesSection.RewriterModuleItemPropertyName); " is 123.
Long Statement,ManagedFusion.Rewriter.Configuration,RewriterModulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,IsElementName,The length of the statement  "            return (elementName == global::ManagedFusion.Rewriter.Configuration.RewriterModulesSection.RewriterModuleItemPropertyName); " is 123.
Long Statement,ManagedFusion.Rewriter.Configuration,RewriterModulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,IsElementName,The length of the statement  "            return (elementName == global::ManagedFusion.Rewriter.Configuration.RewriterModulesSection.RewriterModuleItemPropertyName); " is 123.
Long Statement,ManagedFusion.Rewriter.Configuration,RewriterModulesSection,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Configuration\ManagedFusionRewriterConfiguration.csd.cs,IsElementName,The length of the statement  "            return (elementName == global::ManagedFusion.Rewriter.Configuration.RewriterModulesSection.RewriterModuleItemPropertyName); " is 123.
Long Statement,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,RefreshRules,The length of the statement  "							Manager.LogIf(tempLogLevel >= 3' "RewriteLogLevel: " + match.Groups["level"].Value + " not understood."' "Rule Processing"); " is 124.
Long Statement,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,RefreshRules,The length of the statement  "							Manager.LogIf(tempLogLevel >= 3' "RewriteCond: " + match.Groups["test"].Value + " " + match.Groups["pattern"].Value + " [" + match.Groups["flags"].Value + "]"' "Rule Processing"); " is 179.
Long Statement,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,RefreshRules,The length of the statement  "							Manager.LogIf(tempLogLevel >= 3' "RewriteRule: " + match.Groups["pattern"].Value + " " + match.Groups["substitution"].Value + " [" + match.Groups["flags"].Value + "]"' "Rule Processing"); " is 187.
Long Statement,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,RefreshRules,The length of the statement  "							Manager.LogIf(tempLogLevel >= 3' "OutRewriteCond: " + match.Groups["test"].Value + " " + match.Groups["pattern"].Value + " [" + match.Groups["flags"].Value + "]"' "Rule Processing"); " is 182.
Long Statement,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,RefreshRules,The length of the statement  "							Manager.LogIf(tempLogLevel >= 3' "OutRewriteRule: " + match.Groups["pattern"].Value + " " + match.Groups["substitution"].Value + " [" + match.Groups["flags"].Value + "]"' "Rule Processing"); " is 190.
Long Statement,ManagedFusion.Rewriter.Engines,MicrosoftRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\MicrosoftRuleSet.cs,GetAction,The length of the statement  "				try { redirectType = (RedirectType)Enum.Parse(typeof(RedirectType)' actionElement.Attributes["redirectType"].Value' true); } " is 124.
Long Statement,ManagedFusion.Rewriter.Engines,MicrosoftRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\MicrosoftRuleSet.cs,GetAction,The length of the statement  "					throw new RuleSetException("Action Status Code should not be an int between 300 - 307' use the redirectType for this range."); " is 126.
Long Statement,ManagedFusion.Rewriter.Engines,MicrosoftRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\MicrosoftRuleSet.cs,GetConditions,The length of the statement  "				try { logicalGrouping = (LogicalGrouping)Enum.Parse(typeof(LogicalGrouping)' conditionsElement.Attributes["logicalGrouping"].Value' true); } " is 140.
Long Statement,ManagedFusion.Rewriter.Engines,ApacheEngine,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheEngine.cs,UseDefinedRules,The length of the statement  "					throw new RewriterEngineException("Your ApplicationPath' " + item.ApplicationPath + "' in the config file must start with \"/\"."); " is 131.
Long Statement,ManagedFusion.Rewriter,ProxyHandler,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ProxyHandler.cs,SendRequestToTarget,The length of the statement  "				throw new HttpException((int)HttpStatusCode.BadRequest' String.Format("The requested url' <{0}>' could not be found."' RequestUrl)); " is 132.
Long Statement,ManagedFusion.Rewriter,ProxyHandler,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ProxyHandler.cs,SendRequestToTarget,The length of the statement  "								if (!c.Equals("Keep-Alive"' StringComparison.OrdinalIgnoreCase) && !c.Equals("Close"' StringComparison.OrdinalIgnoreCase)) " is 122.
Long Statement,ManagedFusion.Rewriter,ProxyHandler,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ProxyHandler.cs,SendRequestToTarget,The length of the statement  "			string currentVia = String.Format("{0} {1}:{2} ({3})"' currentServerProtocol' currentServerName' currentServerPort' Manager.RewriterNameAndVersion); " is 148.
Long Statement,ManagedFusion.Rewriter,ProxyHandler,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ProxyHandler.cs,SendRequestToTarget,The length of the statement  "				using (Stream requestStream = request.GetRequestStream()' bufferStream = new BufferedStream(context.Request.InputStream' Manager.Configuration.Rewriter.Proxy.BufferSize)) " is 170.
Long Statement,ManagedFusion.Rewriter,ProxyHandler,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ProxyHandler.cs,SendRequestToTarget,The length of the statement  "				throw new HttpException((int)HttpStatusCode.BadRequest' String.Format("The requested url' <{0}>' could not be found."' RequestUrl)); " is 132.
Long Statement,ManagedFusion.Rewriter,ProxyHandler,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ProxyHandler.cs,SendRequestToTarget,The length of the statement  "				Manager.Log(String.Format("Received '{0} {1}'"' ((int)httpResponse.StatusCode)' httpResponse.StatusDescription)' "Proxy"); " is 122.
Long Statement,ManagedFusion.Rewriter,ProxyHandler,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ProxyHandler.cs,SendResponseToClient,The length of the statement  "							// if the requested location for the host and port is the same as the requested URL we need to update them to the response " is 122.
Long Statement,ManagedFusion.Rewriter,ProxyHandler,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ProxyHandler.cs,SendResponseToClient,The length of the statement  "							if (Uri.Compare(requestLocationUrl' RequestUrl' UriComponents.SchemeAndServer' UriFormat.SafeUnescaped' StringComparison.OrdinalIgnoreCase) == 0) " is 145.
Long Statement,ManagedFusion.Rewriter,ProxyHandler,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ProxyHandler.cs,SendResponseToClient,The length of the statement  "				Manager.Log(String.Format("Responding '{0} {1}'"' ((int)httpResponse.StatusCode)' httpResponse.StatusDescription)' "Proxy"); " is 124.
Long Statement,ManagedFusion.Rewriter,RuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\RuleSet.cs,RunRules,The length of the statement  "				// if the scheme' host' and ports do not match on the request vs the rewrite a redirect needs to be performed instead of a rewrite " is 130.
Long Statement,ManagedFusion.Rewriter,RuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\RuleSet.cs,RunRules,The length of the statement  "				if (Uri.Compare(currentUrl' context.RequestedUrl' UriComponents.SchemeAndServer' UriFormat.SafeUnescaped' StringComparison.OrdinalIgnoreCase) != 0) " is 147.
Long Statement,ManagedFusion.Rewriter,RuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\RuleSet.cs,RunRules,The length of the statement  "			if (Uri.Compare(currentUrl' url' UriComponents.HttpRequestUrl' UriFormat.SafeUnescaped' StringComparison.OrdinalIgnoreCase) == 0) " is 129.
Long Statement,ManagedFusion.Rewriter,Manager,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Manager.cs,AddRequestHeader,The length of the statement  "						MethodInfo fillInHeadersCollectionMethod = targetType.GetMethod("BaseSet"' BindingFlags.Instance | BindingFlags.NonPublic' null' new Type[] { typeof(string)' typeof(object) }' null); " is 182.
Long Statement,ManagedFusion.Rewriter,Manager,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Manager.cs,SetServerVariable,The length of the statement  "						MethodInfo fillInHeadersCollectionMethod = targetType.GetMethod("BaseSet"' BindingFlags.Instance | BindingFlags.NonPublic' null' new Type[] { typeof(string)' typeof(object) }' null); " is 182.
Long Statement,ManagedFusion.Rewriter,Manager,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Manager.cs,ModifyIIS7WorkerRequest,The length of the statement  "						FieldInfo isRewriteModuleEnabledField = wrType.GetField("_isRewriteModuleEnabled"' BindingFlags.Instance | BindingFlags.NonPublic); " is 131.
Long Statement,ManagedFusion.Rewriter,ServerVariable,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ServerVariable.cs,GetValue,The length of the statement  "							value = context.HttpContext.Request.ServerVariables["REQUEST_METHOD"] + " " + context.HttpContext.Request.ServerVariables["PATH_INFO"] + " " + context.HttpContext.Request.ServerVariables["SERVER_PROTOCOL"]; " is 206.
Long Statement,ManagedFusion.Rewriter,ServerVariable,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ServerVariable.cs,GetValue,The length of the statement  "							value = String.IsNullOrEmpty(context.HttpContext.Request.Headers["X-Rewriter-Transfer"]) ? Boolean.FalseString : Boolean.TrueString; " is 132.
Long Statement,ManagedFusion.Rewriter.Rules.Flags,ResponseStatusFlag,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\Flags\ResponseStatusFlag.cs,Apply,The length of the statement  "				Manager.LogIf(context.LogLevel >= 2' String.Format("HTTP Status: {0}.{1} {2}"' response.StatusCode' response.SubStatusCode' response.StatusDescription)' "Rewrite"); " is 164.
Complex Conditional,ManagedFusion.Rewriter,ProxyHandler,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ProxyHandler.cs,SendResponseToClient,The conditional expression  "name == "Server" ||  					name == "X-Powered-By" ||  					name == "Date" ||  					name == "Host""  is complex.
Complex Conditional,ManagedFusion.Rewriter.Rules.Flags,ResponseStatusFlag,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\Flags\ResponseStatusFlag.cs,FromCamelCase,The conditional expression  "!first && (Char.IsUpper(ch) || Char.IsDigit(ch) && !Char.IsDigit(lastChar))"  is complex.
Empty Catch Block,ManagedFusion.Rewriter.Engines,ApacheEngine,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheEngine.cs,ScanDirectoriesForRules,The method has an empty catch block.
Empty Catch Block,ManagedFusion.Rewriter,ProxyHandler,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ProxyHandler.cs,SendResponseToClient,The method has an empty catch block.
Empty Catch Block,ManagedFusion.Rewriter,Manager,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Manager.cs,AddRequestHeader,The method has an empty catch block.
Empty Catch Block,ManagedFusion.Rewriter,Manager,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Manager.cs,AddRequestHeader,The method has an empty catch block.
Empty Catch Block,ManagedFusion.Rewriter,Manager,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Manager.cs,AddRequestHeader,The method has an empty catch block.
Empty Catch Block,ManagedFusion.Rewriter,Manager,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Manager.cs,SetServerVariable,The method has an empty catch block.
Empty Catch Block,ManagedFusion.Rewriter,Manager,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Manager.cs,SetServerVariable,The method has an empty catch block.
Empty Catch Block,ManagedFusion.Rewriter,Manager,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Manager.cs,SetServerVariable,The method has an empty catch block.
Empty Catch Block,ManagedFusion.Rewriter,Manager,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Manager.cs,ModifyIIS7WorkerRequest,The method has an empty catch block.
Empty Catch Block,ManagedFusion.Rewriter,Manager,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Manager.cs,ModifyIIS7WorkerRequest,The method has an empty catch block.
Empty Catch Block,ManagedFusion.Rewriter,Manager,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Manager.cs,ModifyIIS7WorkerRequest,The method has an empty catch block.
Magic Number,ManagedFusion.Rewriter.Conditions,DefaultCondition,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Conditions\DefaultCondition.cs,Evaluate,The following statement contains a magic number: Manager.LogIf(context.LogLevel >= 2' isMatch ? " Matched" : " Not Matched"' context.LogCategory);
Magic Number,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,SplitFlag,The following statement contains a magic number: string[] temporarySplit = flag.Split(new[] { '=' }' 2' StringSplitOptions.None);
Magic Number,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,AddConditionFlag,The following statement contains a magic number: Manager.LogIf(LogLevel >= 5' "Error: No flag match was found for " + key' "Rule Processing");
Magic Number,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,AddRuleFlag,The following statement contains a magic number: switch (key)  			{  				case "chain":  				case "C":  					return new RF.ChainFlag();  				case "cookie":  				case "CO":  					{  						if (value == null)  							return null;    						string[] info = value.Split(new[] { ':' }' 5' StringSplitOptions.None);  						string name = info[0]'  							   val = info[1]'  							   domain = info.Length > 2 ? info[2].Trim() : String.Empty'  							   path = info.Length > 4 ? info[4].Trim() : String.Empty;  						TimeSpan? expires = null;  						int expiresMinutes;    						if (info.Length > 3 && Int32.TryParse(info[3]' out expiresMinutes))  							expires = new TimeSpan(0' expiresMinutes' 0);    						return new RF.ResponseCookieFlag(name' val' domain' expires' path);  					}  				//case "env":  				//case "E": key = "env"; break;  				case "forbidden":  				case "F":  					return new RF.ResponseStatusFlag("forbidden");  				case "notfound":  				case "NF":  					return new RF.ResponseStatusFlag("notfound");  				case "gone":  				case "G":  					return new RF.ResponseStatusFlag("gone");  				case "last":  				case "L":  					return new RF.LastFlag();  				case "next":  				case "N":  					return new RF.NextRuleFlag();  				case "nocase":  				case "NC":  					return new RF.NoCaseFlag();  				case "noescape":  				case "NE":  					return new RF.NoEscapeFlag();  				case "nosubreq":  				case "NS":  					return new RF.NotForInternalSubRequestsFlag();	  				case "proxy":  				case "P":  					return new RF.ProxyFlag();  				//case "passthrough":  				//case "PT": key = "passthrough"; break;  				case "qsappend":  				case "QSA":  					return new RF.QueryStringAppendFlag();  				case "redirect":  				case "R":  					return new RF.RedirectFlag(value);  				case "skip":  				case "S":  					{  						int skipIndex;  						if (Int32.TryParse(value' out skipIndex))  							return new RF.SkipRuleFlag(skipIndex);    						Manager.LogIf(LogLevel >= 5' "Error: " + value + " is not a valid skip index."' "Rule Processing");  						return null;  					}  				case "type":  				case "T":  					return new RF.ResponseMimeTypeFlag(value);  			}
Magic Number,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,AddRuleFlag,The following statement contains a magic number: switch (key)  			{  				case "chain":  				case "C":  					return new RF.ChainFlag();  				case "cookie":  				case "CO":  					{  						if (value == null)  							return null;    						string[] info = value.Split(new[] { ':' }' 5' StringSplitOptions.None);  						string name = info[0]'  							   val = info[1]'  							   domain = info.Length > 2 ? info[2].Trim() : String.Empty'  							   path = info.Length > 4 ? info[4].Trim() : String.Empty;  						TimeSpan? expires = null;  						int expiresMinutes;    						if (info.Length > 3 && Int32.TryParse(info[3]' out expiresMinutes))  							expires = new TimeSpan(0' expiresMinutes' 0);    						return new RF.ResponseCookieFlag(name' val' domain' expires' path);  					}  				//case "env":  				//case "E": key = "env"; break;  				case "forbidden":  				case "F":  					return new RF.ResponseStatusFlag("forbidden");  				case "notfound":  				case "NF":  					return new RF.ResponseStatusFlag("notfound");  				case "gone":  				case "G":  					return new RF.ResponseStatusFlag("gone");  				case "last":  				case "L":  					return new RF.LastFlag();  				case "next":  				case "N":  					return new RF.NextRuleFlag();  				case "nocase":  				case "NC":  					return new RF.NoCaseFlag();  				case "noescape":  				case "NE":  					return new RF.NoEscapeFlag();  				case "nosubreq":  				case "NS":  					return new RF.NotForInternalSubRequestsFlag();	  				case "proxy":  				case "P":  					return new RF.ProxyFlag();  				//case "passthrough":  				//case "PT": key = "passthrough"; break;  				case "qsappend":  				case "QSA":  					return new RF.QueryStringAppendFlag();  				case "redirect":  				case "R":  					return new RF.RedirectFlag(value);  				case "skip":  				case "S":  					{  						int skipIndex;  						if (Int32.TryParse(value' out skipIndex))  							return new RF.SkipRuleFlag(skipIndex);    						Manager.LogIf(LogLevel >= 5' "Error: " + value + " is not a valid skip index."' "Rule Processing");  						return null;  					}  				case "type":  				case "T":  					return new RF.ResponseMimeTypeFlag(value);  			}
Magic Number,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,AddRuleFlag,The following statement contains a magic number: switch (key)  			{  				case "chain":  				case "C":  					return new RF.ChainFlag();  				case "cookie":  				case "CO":  					{  						if (value == null)  							return null;    						string[] info = value.Split(new[] { ':' }' 5' StringSplitOptions.None);  						string name = info[0]'  							   val = info[1]'  							   domain = info.Length > 2 ? info[2].Trim() : String.Empty'  							   path = info.Length > 4 ? info[4].Trim() : String.Empty;  						TimeSpan? expires = null;  						int expiresMinutes;    						if (info.Length > 3 && Int32.TryParse(info[3]' out expiresMinutes))  							expires = new TimeSpan(0' expiresMinutes' 0);    						return new RF.ResponseCookieFlag(name' val' domain' expires' path);  					}  				//case "env":  				//case "E": key = "env"; break;  				case "forbidden":  				case "F":  					return new RF.ResponseStatusFlag("forbidden");  				case "notfound":  				case "NF":  					return new RF.ResponseStatusFlag("notfound");  				case "gone":  				case "G":  					return new RF.ResponseStatusFlag("gone");  				case "last":  				case "L":  					return new RF.LastFlag();  				case "next":  				case "N":  					return new RF.NextRuleFlag();  				case "nocase":  				case "NC":  					return new RF.NoCaseFlag();  				case "noescape":  				case "NE":  					return new RF.NoEscapeFlag();  				case "nosubreq":  				case "NS":  					return new RF.NotForInternalSubRequestsFlag();	  				case "proxy":  				case "P":  					return new RF.ProxyFlag();  				//case "passthrough":  				//case "PT": key = "passthrough"; break;  				case "qsappend":  				case "QSA":  					return new RF.QueryStringAppendFlag();  				case "redirect":  				case "R":  					return new RF.RedirectFlag(value);  				case "skip":  				case "S":  					{  						int skipIndex;  						if (Int32.TryParse(value' out skipIndex))  							return new RF.SkipRuleFlag(skipIndex);    						Manager.LogIf(LogLevel >= 5' "Error: " + value + " is not a valid skip index."' "Rule Processing");  						return null;  					}  				case "type":  				case "T":  					return new RF.ResponseMimeTypeFlag(value);  			}
Magic Number,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,AddRuleFlag,The following statement contains a magic number: switch (key)  			{  				case "chain":  				case "C":  					return new RF.ChainFlag();  				case "cookie":  				case "CO":  					{  						if (value == null)  							return null;    						string[] info = value.Split(new[] { ':' }' 5' StringSplitOptions.None);  						string name = info[0]'  							   val = info[1]'  							   domain = info.Length > 2 ? info[2].Trim() : String.Empty'  							   path = info.Length > 4 ? info[4].Trim() : String.Empty;  						TimeSpan? expires = null;  						int expiresMinutes;    						if (info.Length > 3 && Int32.TryParse(info[3]' out expiresMinutes))  							expires = new TimeSpan(0' expiresMinutes' 0);    						return new RF.ResponseCookieFlag(name' val' domain' expires' path);  					}  				//case "env":  				//case "E": key = "env"; break;  				case "forbidden":  				case "F":  					return new RF.ResponseStatusFlag("forbidden");  				case "notfound":  				case "NF":  					return new RF.ResponseStatusFlag("notfound");  				case "gone":  				case "G":  					return new RF.ResponseStatusFlag("gone");  				case "last":  				case "L":  					return new RF.LastFlag();  				case "next":  				case "N":  					return new RF.NextRuleFlag();  				case "nocase":  				case "NC":  					return new RF.NoCaseFlag();  				case "noescape":  				case "NE":  					return new RF.NoEscapeFlag();  				case "nosubreq":  				case "NS":  					return new RF.NotForInternalSubRequestsFlag();	  				case "proxy":  				case "P":  					return new RF.ProxyFlag();  				//case "passthrough":  				//case "PT": key = "passthrough"; break;  				case "qsappend":  				case "QSA":  					return new RF.QueryStringAppendFlag();  				case "redirect":  				case "R":  					return new RF.RedirectFlag(value);  				case "skip":  				case "S":  					{  						int skipIndex;  						if (Int32.TryParse(value' out skipIndex))  							return new RF.SkipRuleFlag(skipIndex);    						Manager.LogIf(LogLevel >= 5' "Error: " + value + " is not a valid skip index."' "Rule Processing");  						return null;  					}  				case "type":  				case "T":  					return new RF.ResponseMimeTypeFlag(value);  			}
Magic Number,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,AddRuleFlag,The following statement contains a magic number: switch (key)  			{  				case "chain":  				case "C":  					return new RF.ChainFlag();  				case "cookie":  				case "CO":  					{  						if (value == null)  							return null;    						string[] info = value.Split(new[] { ':' }' 5' StringSplitOptions.None);  						string name = info[0]'  							   val = info[1]'  							   domain = info.Length > 2 ? info[2].Trim() : String.Empty'  							   path = info.Length > 4 ? info[4].Trim() : String.Empty;  						TimeSpan? expires = null;  						int expiresMinutes;    						if (info.Length > 3 && Int32.TryParse(info[3]' out expiresMinutes))  							expires = new TimeSpan(0' expiresMinutes' 0);    						return new RF.ResponseCookieFlag(name' val' domain' expires' path);  					}  				//case "env":  				//case "E": key = "env"; break;  				case "forbidden":  				case "F":  					return new RF.ResponseStatusFlag("forbidden");  				case "notfound":  				case "NF":  					return new RF.ResponseStatusFlag("notfound");  				case "gone":  				case "G":  					return new RF.ResponseStatusFlag("gone");  				case "last":  				case "L":  					return new RF.LastFlag();  				case "next":  				case "N":  					return new RF.NextRuleFlag();  				case "nocase":  				case "NC":  					return new RF.NoCaseFlag();  				case "noescape":  				case "NE":  					return new RF.NoEscapeFlag();  				case "nosubreq":  				case "NS":  					return new RF.NotForInternalSubRequestsFlag();	  				case "proxy":  				case "P":  					return new RF.ProxyFlag();  				//case "passthrough":  				//case "PT": key = "passthrough"; break;  				case "qsappend":  				case "QSA":  					return new RF.QueryStringAppendFlag();  				case "redirect":  				case "R":  					return new RF.RedirectFlag(value);  				case "skip":  				case "S":  					{  						int skipIndex;  						if (Int32.TryParse(value' out skipIndex))  							return new RF.SkipRuleFlag(skipIndex);    						Manager.LogIf(LogLevel >= 5' "Error: " + value + " is not a valid skip index."' "Rule Processing");  						return null;  					}  				case "type":  				case "T":  					return new RF.ResponseMimeTypeFlag(value);  			}
Magic Number,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,AddRuleFlag,The following statement contains a magic number: switch (key)  			{  				case "chain":  				case "C":  					return new RF.ChainFlag();  				case "cookie":  				case "CO":  					{  						if (value == null)  							return null;    						string[] info = value.Split(new[] { ':' }' 5' StringSplitOptions.None);  						string name = info[0]'  							   val = info[1]'  							   domain = info.Length > 2 ? info[2].Trim() : String.Empty'  							   path = info.Length > 4 ? info[4].Trim() : String.Empty;  						TimeSpan? expires = null;  						int expiresMinutes;    						if (info.Length > 3 && Int32.TryParse(info[3]' out expiresMinutes))  							expires = new TimeSpan(0' expiresMinutes' 0);    						return new RF.ResponseCookieFlag(name' val' domain' expires' path);  					}  				//case "env":  				//case "E": key = "env"; break;  				case "forbidden":  				case "F":  					return new RF.ResponseStatusFlag("forbidden");  				case "notfound":  				case "NF":  					return new RF.ResponseStatusFlag("notfound");  				case "gone":  				case "G":  					return new RF.ResponseStatusFlag("gone");  				case "last":  				case "L":  					return new RF.LastFlag();  				case "next":  				case "N":  					return new RF.NextRuleFlag();  				case "nocase":  				case "NC":  					return new RF.NoCaseFlag();  				case "noescape":  				case "NE":  					return new RF.NoEscapeFlag();  				case "nosubreq":  				case "NS":  					return new RF.NotForInternalSubRequestsFlag();	  				case "proxy":  				case "P":  					return new RF.ProxyFlag();  				//case "passthrough":  				//case "PT": key = "passthrough"; break;  				case "qsappend":  				case "QSA":  					return new RF.QueryStringAppendFlag();  				case "redirect":  				case "R":  					return new RF.RedirectFlag(value);  				case "skip":  				case "S":  					{  						int skipIndex;  						if (Int32.TryParse(value' out skipIndex))  							return new RF.SkipRuleFlag(skipIndex);    						Manager.LogIf(LogLevel >= 5' "Error: " + value + " is not a valid skip index."' "Rule Processing");  						return null;  					}  				case "type":  				case "T":  					return new RF.ResponseMimeTypeFlag(value);  			}
Magic Number,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,AddRuleFlag,The following statement contains a magic number: switch (key)  			{  				case "chain":  				case "C":  					return new RF.ChainFlag();  				case "cookie":  				case "CO":  					{  						if (value == null)  							return null;    						string[] info = value.Split(new[] { ':' }' 5' StringSplitOptions.None);  						string name = info[0]'  							   val = info[1]'  							   domain = info.Length > 2 ? info[2].Trim() : String.Empty'  							   path = info.Length > 4 ? info[4].Trim() : String.Empty;  						TimeSpan? expires = null;  						int expiresMinutes;    						if (info.Length > 3 && Int32.TryParse(info[3]' out expiresMinutes))  							expires = new TimeSpan(0' expiresMinutes' 0);    						return new RF.ResponseCookieFlag(name' val' domain' expires' path);  					}  				//case "env":  				//case "E": key = "env"; break;  				case "forbidden":  				case "F":  					return new RF.ResponseStatusFlag("forbidden");  				case "notfound":  				case "NF":  					return new RF.ResponseStatusFlag("notfound");  				case "gone":  				case "G":  					return new RF.ResponseStatusFlag("gone");  				case "last":  				case "L":  					return new RF.LastFlag();  				case "next":  				case "N":  					return new RF.NextRuleFlag();  				case "nocase":  				case "NC":  					return new RF.NoCaseFlag();  				case "noescape":  				case "NE":  					return new RF.NoEscapeFlag();  				case "nosubreq":  				case "NS":  					return new RF.NotForInternalSubRequestsFlag();	  				case "proxy":  				case "P":  					return new RF.ProxyFlag();  				//case "passthrough":  				//case "PT": key = "passthrough"; break;  				case "qsappend":  				case "QSA":  					return new RF.QueryStringAppendFlag();  				case "redirect":  				case "R":  					return new RF.RedirectFlag(value);  				case "skip":  				case "S":  					{  						int skipIndex;  						if (Int32.TryParse(value' out skipIndex))  							return new RF.SkipRuleFlag(skipIndex);    						Manager.LogIf(LogLevel >= 5' "Error: " + value + " is not a valid skip index."' "Rule Processing");  						return null;  					}  				case "type":  				case "T":  					return new RF.ResponseMimeTypeFlag(value);  			}
Magic Number,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,AddRuleFlag,The following statement contains a magic number: switch (key)  			{  				case "chain":  				case "C":  					return new RF.ChainFlag();  				case "cookie":  				case "CO":  					{  						if (value == null)  							return null;    						string[] info = value.Split(new[] { ':' }' 5' StringSplitOptions.None);  						string name = info[0]'  							   val = info[1]'  							   domain = info.Length > 2 ? info[2].Trim() : String.Empty'  							   path = info.Length > 4 ? info[4].Trim() : String.Empty;  						TimeSpan? expires = null;  						int expiresMinutes;    						if (info.Length > 3 && Int32.TryParse(info[3]' out expiresMinutes))  							expires = new TimeSpan(0' expiresMinutes' 0);    						return new RF.ResponseCookieFlag(name' val' domain' expires' path);  					}  				//case "env":  				//case "E": key = "env"; break;  				case "forbidden":  				case "F":  					return new RF.ResponseStatusFlag("forbidden");  				case "notfound":  				case "NF":  					return new RF.ResponseStatusFlag("notfound");  				case "gone":  				case "G":  					return new RF.ResponseStatusFlag("gone");  				case "last":  				case "L":  					return new RF.LastFlag();  				case "next":  				case "N":  					return new RF.NextRuleFlag();  				case "nocase":  				case "NC":  					return new RF.NoCaseFlag();  				case "noescape":  				case "NE":  					return new RF.NoEscapeFlag();  				case "nosubreq":  				case "NS":  					return new RF.NotForInternalSubRequestsFlag();	  				case "proxy":  				case "P":  					return new RF.ProxyFlag();  				//case "passthrough":  				//case "PT": key = "passthrough"; break;  				case "qsappend":  				case "QSA":  					return new RF.QueryStringAppendFlag();  				case "redirect":  				case "R":  					return new RF.RedirectFlag(value);  				case "skip":  				case "S":  					{  						int skipIndex;  						if (Int32.TryParse(value' out skipIndex))  							return new RF.SkipRuleFlag(skipIndex);    						Manager.LogIf(LogLevel >= 5' "Error: " + value + " is not a valid skip index."' "Rule Processing");  						return null;  					}  				case "type":  				case "T":  					return new RF.ResponseMimeTypeFlag(value);  			}
Magic Number,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,AddRuleFlag,The following statement contains a magic number: Manager.LogIf(LogLevel >= 5' "Error: No flag match was found for " + key' "Rule Processing");
Magic Number,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,RefreshRules,The following statement contains a magic number: int tempMaxInternalTransfers = 10;
Magic Number,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,RefreshRules,The following statement contains a magic number: Manager.LogIf(tempLogLevel >= 4' "Not Understood: " + unknownLine' "Unknown");
Magic Number,ManagedFusion.Rewriter,ProxyHandler,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ProxyHandler.cs,SendRequestToTarget,The following statement contains a magic number: request.Headers.Add("X-ManagedFusion-Rewriter-Version"' Manager.RewriterVersion.ToString(2));
Magic Number,ManagedFusion.Rewriter,RuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\RuleSet.cs,RuleSet,The following statement contains a magic number: MaxInternalTransfers = 10;
Magic Number,ManagedFusion.Rewriter,RuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\RuleSet.cs,RunRules,The following statement contains a magic number: Manager.LogIf(!EngineEnabled && LogLevel >= 9' "Rewrite Engine Is DISABLED"' "Rewrite");
Magic Number,ManagedFusion.Rewriter,RuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\RuleSet.cs,RunRules,The following statement contains a magic number: throw new HttpException(500' message);
Magic Number,ManagedFusion.Rewriter,RuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\RuleSet.cs,RunOutputRules,The following statement contains a magic number: Manager.LogIf(!EngineEnabled && LogLevel >= 9' "Rewrite Engine Is DISABLED"' "OutRewrite");
Magic Number,ManagedFusion.Rewriter,Manager,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Manager.cs,TryToAddVanityHeader,The following statement contains a magic number: TryAddResponseHeader(context' "X-ManagedFusion-Rewriter-Version"' RewriterVersion.ToString(2));
Magic Number,ManagedFusion.Rewriter,ServerVariable,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ServerVariable.cs,GetValue,The following statement contains a magic number: Manager.LogIf(context.LogLevel >= 2' "Input: " + value' context.LogCategory);
Magic Number,ManagedFusion.Rewriter.Rules,RuleFlagProcessor,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\RuleFlagProcessor.cs,RuleFlagProcessor,The following statement contains a magic number: _flags = new OrderedList<IRuleFlag>(Comparison' 5);
Magic Number,ManagedFusion.Rewriter.Rules,DefaultRule,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\DefaultRule.cs,TryExecute,The following statement contains a magic number: Manager.LogIf(context.LogLevel >= 2' "Rule Pattern Matched"' context.LogCategory);
Magic Number,ManagedFusion.Rewriter.Rules,DefaultRuleAction,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\DefaultRuleAction.cs,IsMatch,The following statement contains a magic number: Manager.LogIf(context.LogLevel >= 2' "Input: " + testUrl' context.LogCategory);
Magic Number,ManagedFusion.Rewriter.Rules,DefaultRuleAction,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\DefaultRuleAction.cs,Execute,The following statement contains a magic number: Manager.LogIf(context.LogLevel >= 2' "Output: " + context.CurrentUrl' context.LogCategory);
Magic Number,ManagedFusion.Rewriter.Rules,DefaultRuleAction,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\DefaultRuleAction.cs,Execute,The following statement contains a magic number: Manager.LogIf(context.LogLevel >= 2' "Output: " + substituedUrl' context.LogCategory);
Magic Number,ManagedFusion.Rewriter.Rules.Flags,NextRuleFlag,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\Flags\NextRuleFlag.cs,Apply,The following statement contains a magic number: Manager.LogIf(context.LogLevel >= 2' "Restart Rule Processing"' "Rewrite");
Magic Number,ManagedFusion.Rewriter.Rules.Flags,RedirectFlag,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\Flags\RedirectFlag.cs,RedirectFlag,The following statement contains a magic number: statusCode < 300 || statusCode > 307
Magic Number,ManagedFusion.Rewriter.Rules.Flags,RedirectFlag,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\Flags\RedirectFlag.cs,RedirectFlag,The following statement contains a magic number: statusCode < 300 || statusCode > 307
Magic Number,ManagedFusion.Rewriter.Rules.Flags,RedirectFlag,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\Flags\RedirectFlag.cs,RedirectFlag,The following statement contains a magic number: statusCode < 300U || statusCode > 307U
Magic Number,ManagedFusion.Rewriter.Rules.Flags,RedirectFlag,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\Flags\RedirectFlag.cs,RedirectFlag,The following statement contains a magic number: statusCode < 300U || statusCode > 307U
Magic Number,ManagedFusion.Rewriter.Rules.Flags,ResponseCookieFlag,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\Flags\ResponseCookieFlag.cs,Apply,The following statement contains a magic number: Manager.LogIf(context.LogLevel >= 2' "Cookie: " + Name + ":" + Value' "Rewrite");
Magic Number,ManagedFusion.Rewriter.Rules.Flags,ResponseMimeTypeFlag,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\Flags\ResponseMimeTypeFlag.cs,Apply,The following statement contains a magic number: Manager.LogIf(context.LogLevel >= 2' "Content Type: " + Type' "Rewrite");
Magic Number,ManagedFusion.Rewriter.Rules.Flags,ResponseStatusFlag,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\Flags\ResponseStatusFlag.cs,FromCamelCase,The following statement contains a magic number: StringBuilder sb = new StringBuilder(camelCase.Length + 10);
Magic Number,ManagedFusion.Rewriter.Rules.Flags,ResponseStatusFlag,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\Flags\ResponseStatusFlag.cs,ResponseStatusFlag,The following statement contains a magic number: statusCode < 1U || statusCode > 999U
Magic Number,ManagedFusion.Rewriter.Rules.Flags,ResponseStatusFlag,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\Flags\ResponseStatusFlag.cs,ResponseStatusFlag,The following statement contains a magic number: statusCode < 1U || statusCode > 999U
Magic Number,ManagedFusion.Rewriter.Rules.Flags,ResponseStatusFlag,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\Flags\ResponseStatusFlag.cs,ResponseStatusFlag,The following statement contains a magic number: subStatusCode < 0U || subStatusCode > 999U
Magic Number,ManagedFusion.Rewriter.Rules.Flags,ResponseStatusFlag,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\Flags\ResponseStatusFlag.cs,Apply,The following statement contains a magic number: Manager.LogIf(context.LogLevel >= 2' String.Format("HTTP Status: {0}.{1} {2}"' response.StatusCode' response.SubStatusCode' response.StatusDescription)' "Rewrite");
Magic Number,ManagedFusion.Rewriter.Rules.Flags,ServerVariableFlag,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\Flags\ServerVariableFlag.cs,Apply,The following statement contains a magic number: Manager.LogIf(context.LogLevel >= 2' "Set Server Variable: " + Name' "Rewrite");
Magic Number,ManagedFusion.Rewriter.Rules.Flags,SkipRuleFlag,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Rules\Flags\SkipRuleFlag.cs,Apply,The following statement contains a magic number: Manager.LogIf(context.LogLevel >= 2' "Skip The Next + " + Count + " To Rule " + context.RuleIndex' "Rewrite");
Duplicate Code,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,RefreshRules,The method contains a code clone-set at the following line numbers (starting from the method definition): ((176' 239)' (338' 401))
Duplicate Code,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,RefreshRules,The method contains a code clone-set at the following line numbers (starting from the method definition): ((256' 304)' (418' 466))
Missing Default,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,AddConditionFlag,The following switch statement is missing a default case: switch (key)  			{  				case "nocase":  				case "NC":  					return new CF.NoCaseFlag();  				case "ornext":  				case "OR":  					return new CF.OrNextFlag();  			}
Missing Default,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,AddRuleFlag,The following switch statement is missing a default case: switch (key)  			{  				case "chain":  				case "C":  					return new RF.ChainFlag();  				case "cookie":  				case "CO":  					{  						if (value == null)  							return null;    						string[] info = value.Split(new[] { ':' }' 5' StringSplitOptions.None);  						string name = info[0]'  							   val = info[1]'  							   domain = info.Length > 2 ? info[2].Trim() : String.Empty'  							   path = info.Length > 4 ? info[4].Trim() : String.Empty;  						TimeSpan? expires = null;  						int expiresMinutes;    						if (info.Length > 3 && Int32.TryParse(info[3]' out expiresMinutes))  							expires = new TimeSpan(0' expiresMinutes' 0);    						return new RF.ResponseCookieFlag(name' val' domain' expires' path);  					}  				//case "env":  				//case "E": key = "env"; break;  				case "forbidden":  				case "F":  					return new RF.ResponseStatusFlag("forbidden");  				case "notfound":  				case "NF":  					return new RF.ResponseStatusFlag("notfound");  				case "gone":  				case "G":  					return new RF.ResponseStatusFlag("gone");  				case "last":  				case "L":  					return new RF.LastFlag();  				case "next":  				case "N":  					return new RF.NextRuleFlag();  				case "nocase":  				case "NC":  					return new RF.NoCaseFlag();  				case "noescape":  				case "NE":  					return new RF.NoEscapeFlag();  				case "nosubreq":  				case "NS":  					return new RF.NotForInternalSubRequestsFlag();	  				case "proxy":  				case "P":  					return new RF.ProxyFlag();  				//case "passthrough":  				//case "PT": key = "passthrough"; break;  				case "qsappend":  				case "QSA":  					return new RF.QueryStringAppendFlag();  				case "redirect":  				case "R":  					return new RF.RedirectFlag(value);  				case "skip":  				case "S":  					{  						int skipIndex;  						if (Int32.TryParse(value' out skipIndex))  							return new RF.SkipRuleFlag(skipIndex);    						Manager.LogIf(LogLevel >= 5' "Error: " + value + " is not a valid skip index."' "Rule Processing");  						return null;  					}  				case "type":  				case "T":  					return new RF.ResponseMimeTypeFlag(value);  			}
Missing Default,ManagedFusion.Rewriter.Engines,ApacheRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\ApacheRuleSet.cs,RefreshRules,The following switch statement is missing a default case: switch (parts[0])  									{  										case "inherit":  											break;    										// obsolete in 2.1 mod_rewrite  										case "MaxRedirects":  											Manager.LogIf(tempLogLevel >= 1' "MaxRedirects is obsolete"' "Obsolete");    											int maxInternalTransfers;  											if (Int32.TryParse(parts[1]' out maxInternalTransfers))  											{  												tempMaxInternalTransfers = maxInternalTransfers;  												variableUnderstood = true;  											}  											break;  									}
Missing Default,ManagedFusion.Rewriter.Engines,MicrosoftRuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Engines\MicrosoftRuleSet.cs,GetCondition,The following switch statement is missing a default case: switch (matchType)  			{  				case MatchType.IsFile: condition = new IsFileCondition(); break;  				case MatchType.IsDirectory: condition = new IsDirectoryCondition(); break;  				case MatchType.Pattern: condition = new DefaultCondition(); break;  			}
Missing Default,ManagedFusion.Rewriter,ProxyHandler,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ProxyHandler.cs,SendRequestToTarget,The following switch statement is missing a default case: switch (name)  					{  						case "User-Agent":  							httpRequest.UserAgent = context.Request.UserAgent;  							break;    						case "Connection":  							string connection = context.Request.Headers[name];  							if (connection.IndexOf("Keep-Alive"' StringComparison.OrdinalIgnoreCase) > 0)  								httpRequest.KeepAlive = true;    							var list = new List<string>();  							foreach (string conn in connection.Split('''))  							{  								string c = conn.Trim();  								if (!c.Equals("Keep-Alive"' StringComparison.OrdinalIgnoreCase) && !c.Equals("Close"' StringComparison.OrdinalIgnoreCase))  									list.Add(c);  							}    							if (list.Count > 0)  								httpRequest.Connection = String.Join("' "' list.ToArray());  							break;    						case "Transfer-Encoding":  							httpRequest.SendChunked = true;  							httpRequest.TransferEncoding = context.Request.Headers[name];  							break;    						case "Expect":  							httpRequest.ServicePoint.Expect100Continue = true;  							break;    						case "If-Modified-Since":  							DateTime ifModifiedSince;  							if (DateTime.TryParse(context.Request.Headers[name]' out ifModifiedSince))  								httpRequest.IfModifiedSince = ifModifiedSince;  							break;    						case "Content-Length":  							httpRequest.ContentLength = context.Request.ContentLength;  							break;    						case "Content-Type":  							httpRequest.ContentType = context.Request.ContentType;  							break;    						case "Accept":  							httpRequest.Accept = String.Join("' "' context.Request.AcceptTypes);  							break;    						case "Referer":  							httpRequest.Referer = context.Request.UrlReferrer.OriginalString;  							break;  					}
Missing Default,ManagedFusion.Rewriter,RuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\RuleSet.cs,RunRules,The following switch statement is missing a default case: switch (flagResponse)  						{  							case RuleFlagProcessorResponse.ExitRuleSet:  								return null;  							case RuleFlagProcessorResponse.LastRule:  								breakLoop = true;  								break;  						}
Missing Default,ManagedFusion.Rewriter,RuleSet,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\RuleSet.cs,RunOutputRules,The following switch statement is missing a default case: switch (flagResponse)  						{  							case RuleFlagProcessorResponse.ExitRuleSet:  								return null;  							case RuleFlagProcessorResponse.LastRule:  								breakLoop = true;  								break;  						}
Missing Default,ManagedFusion.Rewriter,Manager,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\Manager.cs,Manager,The following switch statement is missing a default case: switch (Configuration.Rules.Engine)  			{  				case RulesEngine.Apache:  					_rewriterEngine = new ApacheEngine();  					break;    				case RulesEngine.Microsoft:  					_rewriterEngine = new MicrosoftEngine();  					break;    				case RulesEngine.Other:  					{  						try  						{  							_rewriterEngine = (IRewriterEngine)Activator.CreateInstance(Type.GetType(Configuration.Rules.EngineType));  							break;  						}  						catch (Exception exc)  						{  							throw new RewriterEngineException("The engine specified in the web.config cannot be found' " + Configuration.Rules.EngineType' exc);  						}  					}  			}
Missing Default,ManagedFusion.Rewriter,ServerVariable,D:\research\architectureSmells\repos\managedfusion_managedfusion-rewriter\src\ServerVariable.cs,GetValue,The following switch statement is missing a default case: switch (_name)  					{  						case "TIME_YEAR":  							value = DateTime.Today.Year.ToString();  							break;  						case "TIME_MON":  							value = DateTime.Today.Month.ToString();  							break;  						case "TIME_DAY":  							value = DateTime.Today.Day.ToString();  							break;  						case "TIME_HOUR":  							value = DateTime.Now.Hour.ToString();  							break;  						case "TIME_MIN":  							value = DateTime.Now.Minute.ToString();  							break;  						case "TIME_SEC":  							value = DateTime.Now.Second.ToString();  							break;  						case "TIME_WDAY":  							value = DateTime.Today.DayOfWeek.ToString();  							break;  						case "TIME":  							value = DateTime.Now.ToString("f");  							break;  						case "API_VERSION":  							value = String.Empty;  							break;// TODO: figure out how to attack this  						case "THE_REQUEST":  							value = context.HttpContext.Request.ServerVariables["REQUEST_METHOD"] + " " + context.HttpContext.Request.ServerVariables["PATH_INFO"] + " " + context.HttpContext.Request.ServerVariables["SERVER_PROTOCOL"];  							break;  						case "REQUEST_URI":  							value = context.HttpContext.Request.ServerVariables["URL"];  							break;  						case "REQUEST_FILENAME":  							value = context.HttpContext.Request.ServerVariables["PATH_TRANSLATED"];  							break;  						case "IS_SUBREQ":  							value = String.IsNullOrEmpty(context.HttpContext.Request.Headers["X-Rewriter-Transfer"]) ? Boolean.FalseString : Boolean.TrueString;  							break;  					}
