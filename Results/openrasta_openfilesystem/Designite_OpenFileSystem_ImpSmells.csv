Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OpenFileSystem.IO.FileSystems,FileSystemNotifier,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\FileSystemNotifier.cs,RegisterNotification,Cyclomatic complexity of the method is 8
Long Parameter List,OpenFileSystem.IO,IDirectory,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\IDirectory.cs,FileChanges,The method has 6 parameters. Parameters: filter' includeSubdirectories' created' modified' deleted' renamed
Long Parameter List,OpenFileSystem.IO.FileSystems,FileSystemNotifier,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\FileSystemNotifier.cs,RegisterNotification,The method has 7 parameters. Parameters: path' filter' includeSubdirectories' created' modified' deleted' renamed
Long Parameter List,OpenFileSystem.IO.FileSystems,IFileSystemNotifier,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\IFileSystemNotifier.cs,RegisterNotification,The method has 7 parameters. Parameters: path' filter' includeSubdirectories' created' modified' deleted' renamed
Long Parameter List,OpenFileSystem.IO.FileSystems.InMemory,InMemoryDirectory,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\InMemory\InMemoryDirectory.cs,FileChanges,The method has 6 parameters. Parameters: filter' includeSubdirectories' created' modified' deleted' renamed
Long Parameter List,OpenFileSystem.IO.FileSystems.Local,LocalDirectory,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\Local\LocalDirectory.cs,FileChanges,The method has 6 parameters. Parameters: filter' includeSubdirectories' created' modified' deleted' renamed
Long Parameter List,OpenFileSystem.IO.FileSystems.Local,TemporaryDirectory,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\Local\TemporaryDirectory.cs,FileChanges,The method has 6 parameters. Parameters: filter' includeSubdirectories' created' modified' deleted' renamed
Long Parameter List,OpenFileSystem.IO.FileSystems.Local.Win32,JunctionPoint,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\Local\Win32\Interop\JunctionPoint.cs,DeviceIoControl,The method has 8 parameters. Parameters: hDevice' dwIoControlCode' InBuffer' nInBufferSize' OutBuffer' nOutBufferSize' pBytesReturned' lpOverlapped
Long Parameter List,OpenFileSystem.IO.FileSystems.Local.Win32,JunctionPoint,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\Local\Win32\Interop\JunctionPoint.cs,CreateFile,The method has 7 parameters. Parameters: lpFileName' dwDesiredAccess' dwShareMode' lpSecurityAttributes' dwCreationDisposition' dwFlagsAndAttributes' hTemplateFile
Long Identifier,OpenFileSystem.IO.FileSystems.Local.Win32,JunctionPoint,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\Local\Win32\Interop\JunctionPoint.cs,,The length of the parameter ERROR_REPARSE_ATTRIBUTE_CONFLICT is 32.
Long Statement,OpenFileSystem.IO,Path,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\Path.cs,GenerateSegments,The length of the statement  "            var separator = unc ? new[]{ path[0] } : new[] { System.IO.Path.DirectorySeparatorChar' System.IO.Path.AltDirectorySeparatorChar }; " is 131.
Long Statement,OpenFileSystem.IO.FileSystems,FileSystemNotificationIdentifier,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\FileSystemNotificationIdentifier.cs,Equals,The length of the statement  "            return other.IncludeSubDirectories.Equals(IncludeSubDirectories) && Equals(other.Path' Path) && Equals(other.Filter' Filter) && Equals(other.ChangeTypes' ChangeTypes); " is 167.
Long Statement,OpenFileSystem.IO.FileSystems,FileSystemNotifier,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\FileSystemNotifier.cs,RegisterNotification,The length of the statement  "            var id = new FileSystemNotificationIdentifier(path ?? new Path(Environment.CurrentDirectory)' watcher' filter ?? "*"' includeSubdirectories); " is 141.
Long Statement,OpenFileSystem.IO.FileSystems.InMemory,InMemoryDirectory,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\InMemory\InMemoryDirectory.cs,FileChanges,The length of the statement  "            return _fileSystem.Notifier.RegisterNotification(Path' filter' includeSubdirectories' created' modified' deleted' renamed); " is 123.
Long Statement,OpenFileSystem.IO.FileSystems.InMemory,InMemoryFile,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\InMemory\InMemoryFile.cs,ValidateFileAccess,The length of the statement  "                throw new ArgumentException(string.Format("Can only open files in {0} mode when requesting FileAccess.Write access."' fileMode)); " is 129.
Long Statement,OpenFileSystem.IO.FileSystems.InMemory,InMemoryFileSystem,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\InMemory\InMemoryFileSystem.cs,CreateTempDirectory,The length of the statement  "            var tempDirectory = new InMemoryTemporaryDirectory(this' sysTemp.Path.Combine(System.IO.Path.GetRandomFileName()).FullPath) " is 123.
Long Statement,OpenFileSystem.IO.FileSystems.Local,LocalDirectory,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\Local\LocalDirectory.cs,FileChanges,The length of the statement  "            return LocalFileSystemNotifier.Instance.RegisterNotification(Path' filter' includeSubdirectories' created' modified' deleted' renamed); " is 135.
Long Statement,OpenFileSystem.IO.FileSystems.Local,LocalDirectory,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\Local\LocalDirectory.cs,Directories,The length of the statement  "            if (filter.EndsWith(System.IO.Path.DirectorySeparatorChar + "") || filter.EndsWith(System.IO.Path.AltDirectorySeparatorChar + "")) " is 130.
Long Statement,OpenFileSystem.IO.FileSystems.Local,LocalDirectory,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\Local\LocalDirectory.cs,Directories,The length of the statement  "            return DirectoryInfo.GetDirectories(filter' scope == SearchScope.CurrentOnly ? SearchOption.TopDirectoryOnly : SearchOption.AllDirectories) " is 139.
Long Statement,OpenFileSystem.IO.FileSystems.Local,LocalDirectory,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\Local\LocalDirectory.cs,Files,The length of the statement  "            if (filter.EndsWith(System.IO.Path.DirectorySeparatorChar + "") || filter.EndsWith(System.IO.Path.AltDirectorySeparatorChar + "")) " is 130.
Long Statement,OpenFileSystem.IO.FileSystems.Local,LocalDirectory,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\Local\LocalDirectory.cs,Files,The length of the statement  "            return DirectoryInfo.GetFiles(filter' scope == SearchScope.CurrentOnly ? SearchOption.TopDirectoryOnly : SearchOption.AllDirectories) " is 133.
Long Statement,OpenFileSystem.IO.FileSystems.Local,LocalFileSystem,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\Local\LocalFileSystem.cs,CreateTempDirectory,The length of the statement  "            return new TemporaryDirectory(CreateDirectory(System.IO.Path.Combine(System.IO.Path.GetTempPath()' System.IO.Path.GetRandomFileName()))); " is 137.
Long Statement,OpenFileSystem.IO.FileSystems.Local,LocalFileSystem,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\Local\LocalFileSystem.cs,GetFile,The length of the statement  "            return new LocalFile(System.IO.Path.GetFullPath(System.IO.Path.Combine(Environment.CurrentDirectory' filePath))' di=>CreateDirectory(di.FullName)); " is 147.
Complex Conditional,OpenFileSystem.IO,Path,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\Path.cs,MakeRelative,The conditional expression  "thisHasValue && rootHasValue && thisEnum.Current != null && rootEnum.Current != null"  is complex.
Complex Conditional,OpenFileSystem.IO.FileSystems,FileSystemNotifier,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\FileSystemNotifier.cs,RegisterNotification,The conditional expression  "created == null && modified == null && renamed == null && deleted == null"  is complex.
Complex Conditional,OpenFileSystem.IO.FileSystems.InMemory,InMemoryFile,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\InMemory\InMemoryFile.cs,ValidateFileAccess,The conditional expression  "((fileMode == FileMode.Append)                      && fileAccess != FileAccess.Write) ||                  ((fileMode == FileMode.CreateNew || fileMode == FileMode.Create || fileMode == FileMode.Truncate)                       && (fileAccess != FileAccess.Write && fileAccess != FileAccess.ReadWrite)) ||                  false"  is complex.
Complex Conditional,OpenFileSystem.IO.FileSystems.InMemory,InMemoryFile,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\InMemory\InMemoryFile.cs,ValidateFileLock,The conditional expression  "(fileAccess == FileAccess.Read && !readAllowed) ||                  (fileAccess == FileAccess.ReadWrite && !(readAllowed && writeAllowed)) ||                  (fileAccess == FileAccess.Write && !writeAllowed)"  is complex.
Complex Conditional,OpenFileSystem.IO.FileSystems.InMemory,InMemoryFileSystem,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\InMemory\InMemoryFileSystem.cs,GetDirectory,The conditional expression  "!path.IsUnc &&                  rootPath.Length > 0 &&                   (rootPath[rootPath.Length-1] == System.IO.Path.DirectorySeparatorChar ||                   rootPath[rootPath.Length-1] == System.IO.Path.AltDirectorySeparatorChar)"  is complex.
Magic Number,OpenFileSystem.IO,DirectoryExtensions,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\IDirectory.cs,GetFileSpecCore,The following statement contains a magic number: return isNextToLastSegment                             ? directory.Files(segments[position + 1]' SearchScope.SubFolders)                             : directory.Directories(segments[position + 1]' SearchScope.SubFolders)                                   .SelectMany(x => GetFileSpecCore(x' segments' position + 2));
Magic Number,OpenFileSystem.IO,DirectoryExtensions,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\IDirectory.cs,GetDirectorySpecCore,The following statement contains a magic number: return isNextToLastSegment                             ? directory.Directories(segments[position + 1]' SearchScope.SubFolders)                             : directory.Directories(segments[position + 1]' SearchScope.SubFolders)                                   .SelectMany(x => GetDirectorySpecCore(x' segments' position + 2));
Magic Number,OpenFileSystem.IO,Path,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\Path.cs,IsUncPath,The following statement contains a magic number: fullPath.StartsWith("\\\\") && fullPath.Length > 2 && fullPath[2] != '?'
Magic Number,OpenFileSystem.IO,Path,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\Path.cs,IsUncPath,The following statement contains a magic number: fullPath.StartsWith("\\\\") && fullPath.Length > 2 && fullPath[2] != '?'
Magic Number,OpenFileSystem.IO,Path,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\Path.cs,IsUncPath,The following statement contains a magic number: var serverNameSeparator = fullPath.IndexOf(sep' 2);
Magic Number,OpenFileSystem.IO,Path,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\Path.cs,IsUncPath,The following statement contains a magic number: hostName = fullPath.Substring(2' serverNameSeparator-2);
Magic Number,OpenFileSystem.IO,Path,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\Path.cs,IsUncPath,The following statement contains a magic number: hostName = fullPath.Substring(2' serverNameSeparator-2);
Magic Number,OpenFileSystem.IO,StreamExtensions,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\StreamExtensions.cs,CopyTo,The following statement contains a magic number: var buffer = new byte[4096];
Magic Number,OpenFileSystem.IO.FileSystems,FileSystemNotificationIdentifier,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\FileSystemNotificationIdentifier.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ Path.GetHashCode();
Magic Number,OpenFileSystem.IO.FileSystems,FileSystemNotificationIdentifier,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\FileSystemNotificationIdentifier.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ Filter.GetHashCode();
Magic Number,OpenFileSystem.IO.FileSystems,FileSystemNotificationIdentifier,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\FileSystemNotificationIdentifier.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ ChangeTypes.GetHashCode();
Magic Number,OpenFileSystem.IO.FileSystems.InMemory,InMemoryFile,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\InMemory\InMemoryFile.cs,Resize,The following statement contains a magic number: var buffer = new byte[_contentLength * 2];
Magic Number,OpenFileSystem.IO.FileSystems.InMemory,InMemoryFileSystem,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\InMemory\InMemoryFileSystem.cs,GetFile,The following statement contains a magic number: var ownerFolder = pathSegments                  .Skip(1).Take(pathSegments.Count()-2)                  .Aggregate((IDirectory)GetRoot(pathSegments.First())'                      (current' segment) => current.GetDirectory(segment));
Magic Number,OpenFileSystem.IO.FileSystems.Local.Win32,JunctionPoint,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\Local\Win32\Interop\JunctionPoint.cs,Create,The following statement contains a magic number: reparseDataBuffer.ReparseDataLength = (ushort)(targetDirBytes.Length + 12);
Magic Number,OpenFileSystem.IO.FileSystems.Local.Win32,JunctionPoint,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\Local\Win32\Interop\JunctionPoint.cs,Create,The following statement contains a magic number: reparseDataBuffer.PrintNameOffset = (ushort)(targetDirBytes.Length + 2);
Magic Number,OpenFileSystem.IO.FileSystems.Local.Win32,JunctionPoint,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\Local\Win32\Interop\JunctionPoint.cs,Create,The following statement contains a magic number: bool result = DeviceIoControl(handle.DangerousGetHandle()' FSCTL_SET_REPARSE_POINT'                                                    inBuffer' targetDirBytes.Length + 20' IntPtr.Zero' 0' out bytesReturned' IntPtr.Zero);
Magic Number,OpenFileSystem.IO.FileSystems.Local.Win32,JunctionPoint,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\Local\Win32\Interop\JunctionPoint.cs,Delete,The following statement contains a magic number: bool result = DeviceIoControl(handle.DangerousGetHandle()' FSCTL_DELETE_REPARSE_POINT'                                                    inBuffer' 8' IntPtr.Zero' 0' out bytesReturned' IntPtr.Zero);
Missing Default,OpenFileSystem.IO.FileSystems.InMemory,InMemoryFile,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\InMemory\InMemoryFile.cs,ValidateFileMode,The following switch statement is missing a default case: switch (fileMode)                  {                      case FileMode.CreateNew:                          throw new IOException("File already exists.");                      case FileMode.Create:                      case FileMode.Truncate:                          _contentLength = 0;                          return 0;                      case FileMode.Open:                      case FileMode.OpenOrCreate:                          return 0;                      case FileMode.Append:                          return _contentLength;                  }
Missing Default,OpenFileSystem.IO.FileSystems.InMemory,InMemoryFile,C:\research\architectureSmells\repos\openrasta_openfilesystem\src\OpenFileSystem\FileSystems\InMemory\InMemoryFile.cs,ValidateFileMode,The following switch statement is missing a default case: switch (fileMode)                  {                      case FileMode.Create:                      case FileMode.Append:                      case FileMode.CreateNew:                      case FileMode.OpenOrCreate:                          EnsureExists();                          return _contentLength;                      case FileMode.Open:                      case FileMode.Truncate:                          throw new FileNotFoundException();                  }
