Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestCreateCoordinateTransformationForWktInCsv,Cyclomatic complexity of the method is 8
Long Parameter List,ProjNET.Tests,CoordinateTransformTestsBase,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTestsBase.cs,Test,The method has 7 parameters. Parameters: title' source' target' testPoint' expectedPoint' tolerance' reverseTolerance
Long Parameter List,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,CheckPrimem,The method has 5 parameters. Parameters: primeMeridian' name' longitude' authority' code
Long Parameter List,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,CheckUnit,The method has 5 parameters. Parameters: unit' name' value' authority' code
Long Parameter List,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,CheckEllipsoid,The method has 6 parameters. Parameters: ellipsoid' name' semiMajor' inverseFlattening' authority' code
Long Parameter List,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,CheckProjection,The method has 5 parameters. Parameters: projection' name' pp' authority' code
Long Identifier,ProjNET.Tests,CoordinateTransformTestsBase,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTestsBase.cs,,The length of the parameter CoordinateTransformationFactory is 31.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfCoordinates,The length of the statement  "                    "PROJCS[\"ETRS89 / ETRS-TM35\"'GEOGCS[\"ETRS89\"'DATUM[\"D_ETRS_1989\"'SPHEROID[\"GRS_1980\"'6378137'298.257222101]]'PRIMEM[\"Greenwich\"'0]'UNIT[\"Degree\"'0.017453292519943295]]'PROJECTION[\"Transverse_Mercator\"]'PARAMETER[\"latitude_of_origin\"'0]'PARAMETER[\"central_meridian\"'27]'PARAMETER[\"scale_factor\"'0.9996]'PARAMETER[\"false_easting\"'500000]'PARAMETER[\"false_northing\"'0]'UNIT[\"Meter\"'1]]");" is 411.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfDoubleArray,The length of the statement  "                    "PROJCS[\"ETRS89 / ETRS-TM35\"'GEOGCS[\"ETRS89\"'DATUM[\"D_ETRS_1989\"'SPHEROID[\"GRS_1980\"'6378137'298.257222101]]'PRIMEM[\"Greenwich\"'0]'UNIT[\"Degree\"'0.017453292519943295]]'PROJECTION[\"Transverse_Mercator\"]'PARAMETER[\"latitude_of_origin\"'0]'PARAMETER[\"central_meridian\"'27]'PARAMETER[\"scale_factor\"'0.9996]'PARAMETER[\"false_easting\"'500000]'PARAMETER[\"false_northing\"'0]'UNIT[\"Meter\"'1]]");" is 411.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestCentralMeridianParse,The length of the statement  "            const string strSouthPole = "PROJCS[\"South_Pole_Lambert_Azimuthal_Equal_Area\"'GEOGCS[\"GCS_WGS_1984\"'DATUM[\"D_WGS_1984\"'SPHEROID[\"WGS_1984\"'6378137'298.257223563]]'PRIMEM[\"Greenwich\"'0]'UNIT[\"Degree\"'0.017453292519943295]]'PROJECTION[\"Lambert_Azimuthal_Equal_Area\"]'PARAMETER[\"False_Easting\"'0]'PARAMETER[\"False_Northing\"'0]'PARAMETER[\"Central_Meridian\"'-127]'PARAMETER[\"Latitude_Of_Origin\"'-90]'UNIT[\"Meter\"'1]]";" is 437.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjection,The length of the statement  "			var ellipsoid = CoordinateSystemFactory.CreateFlattenedSphere("Clarke 1866"' 6378206.4' 294.9786982138982' LinearUnit.Metre);" is 125.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjection,The length of the statement  "			var coordsys = CoordinateSystemFactory.CreateProjectedCoordinateSystem("Albers Conical Equal Area"' gcs' projection' LinearUnit.Metre' new AxisInfo("East"' AxisOrientationEnum.East)' new AxisInfo("North"' AxisOrientationEnum.North));" is 233.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjectionFeet,The length of the statement  "			var ellipsoid = CoordinateSystemFactory.CreateFlattenedSphere("Clarke 1866"' 6378206.4' 294.9786982138982' LinearUnit.Metre);" is 125.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjectionFeet,The length of the statement  "			var coordsys = CoordinateSystemFactory.CreateProjectedCoordinateSystem("Albers Conical Equal Area"' gcs' projection' LinearUnit.Foot' new AxisInfo("East"' AxisOrientationEnum.East)' new AxisInfo("North"' AxisOrientationEnum.North));" is 232.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection,The length of the statement  "			var coordsys = CoordinateSystemFactory.CreateProjectedCoordinateSystem("Makassar / NEIEZ"' gcs' projection' LinearUnit.Metre' new AxisInfo("East"' AxisOrientationEnum.East)' new AxisInfo("North"' AxisOrientationEnum.North));" is 224.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection_Feet,The length of the statement  "			var coordsys = CoordinateSystemFactory.CreateProjectedCoordinateSystem("Makassar / NEIEZ"' gcs' projection' LinearUnit.Foot' new AxisInfo("East"' AxisOrientationEnum.East)' new AxisInfo("North"' AxisOrientationEnum.North));" is 223.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_2SP_Projection,The length of the statement  "			var coordsys = CoordinateSystemFactory.CreateProjectedCoordinateSystem("Pulkovo 1942 / Mercator Caspian Sea"' gcs' projection' LinearUnit.Metre' new AxisInfo("East"' AxisOrientationEnum.East)' new AxisInfo("North"' AxisOrientationEnum.North));" is 243.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransverseMercator_Projection,The length of the statement  "			var coordsys = CoordinateSystemFactory.CreateProjectedCoordinateSystem("OSGB 1936 / British National Grid"' gcs' projection' LinearUnit.Metre' new AxisInfo("East"' AxisOrientationEnum.East)' new AxisInfo("North"' AxisOrientationEnum.North));" is 241.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestLambertConicConformal2SP_Projection,The length of the statement  "		    var projection = CoordinateSystemFactory.CreateProjection("Lambert Conic Conformal (2SP)"' "lambert_conformal_conic_2sp"' parameters);" is 134.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestLambertConicConformal2SP_Projection,The length of the statement  "			var coordsys = CoordinateSystemFactory.CreateProjectedCoordinateSystem("NAD27 / Texas South Central"' gcs' projection' LinearUnit.USSurveyFoot' new AxisInfo("East"' AxisOrientationEnum.East)' new AxisInfo("North"' AxisOrientationEnum.North));" is 242.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestLambertConicConformal2SP_Projection,The length of the statement  "			double[] expected = new[] { 2963503.91 / LinearUnit.USSurveyFoot.MetersPerUnit' 254759.80 / LinearUnit.USSurveyFoot.MetersPerUnit };" is 132.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestLambertConicConformal2SP_Projection,The length of the statement  "			Assert.IsTrue(ToleranceLessThan(pUtm' expected' 0.05)' TransformationError("LambertConicConformal2SP"' expected' pUtm));" is 120.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestLambertConicConformal2SP_Projection,The length of the statement  "		    Assert.IsTrue(ToleranceLessThan(pGeo' pGeo2' 0.0000001)' TransformationError("LambertConicConformal2SP"' pGeo' pGeo2' true));" is 125.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestGeocentric,The length of the statement  "			var gcs = CoordinateSystemFactory.CreateGeographicCoordinateSystem("ETRF89 Geographic"' AngularUnit.Degrees' HorizontalDatum.ETRF89' PrimeMeridian.Greenwich'" is 157.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestGeocentric,The length of the statement  "			var gcenCs = CoordinateSystemFactory.CreateGeocentricCoordinateSystem("ETRF89 Geocentric"' HorizontalDatum.ETRF89' LinearUnit.Metre' PrimeMeridian.Greenwich);" is 158.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestGeocentric,The length of the statement  "			double[] pExpected = new[] { 2 + 7.0 / 60 + 46.38 / 3600' 53 + 48.0 / 60 + 33.82/3600 }; // Point.FromDMS(2' 7' 46.38' 53' 48' 33.82);" is 134.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The length of the statement  "			var gcsWGS72 = CoordinateSystemFactory.CreateGeographicCoordinateSystem("WGS72 Geographic"' AngularUnit.Degrees' wgs72' PrimeMeridian.Greenwich'" is 144.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The length of the statement  "			var gcsWGS84 = CoordinateSystemFactory.CreateGeographicCoordinateSystem("WGS84 Geographic"' AngularUnit.Degrees' HorizontalDatum.WGS84' PrimeMeridian.Greenwich'" is 160.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The length of the statement  "			var gcsED50 = CoordinateSystemFactory.CreateGeographicCoordinateSystem("ED50 Geographic"' AngularUnit.Degrees' ed50' PrimeMeridian.Greenwich'" is 141.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The length of the statement  "			var gcenCsWGS72 = CoordinateSystemFactory.CreateGeocentricCoordinateSystem("WGS72 Geocentric"' wgs72' LinearUnit.Metre' PrimeMeridian.Greenwich);" is 145.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The length of the statement  "			var gcenCsWGS84 = CoordinateSystemFactory.CreateGeocentricCoordinateSystem("WGS84 Geocentric"' HorizontalDatum.WGS84' LinearUnit.Metre' PrimeMeridian.Greenwich);" is 161.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The length of the statement  "			var gcenCsED50 = CoordinateSystemFactory.CreateGeocentricCoordinateSystem("ED50 Geocentric"' ed50' LinearUnit.Metre' PrimeMeridian.Greenwich);" is 142.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The length of the statement  "			var utmED50 = CoordinateSystemFactory.CreateProjectedCoordinateSystem("ED50 UTM Zone 32N"' gcsED50' projection' LinearUnit.Metre' new AxisInfo("East"' AxisOrientationEnum.East)' new AxisInfo("North"' AxisOrientationEnum.North));" is 228.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The length of the statement  "			var utmWGS84 = CoordinateSystemFactory.CreateProjectedCoordinateSystem("WGS84 UTM Zone 32N"' gcsWGS84' projection' LinearUnit.Metre' new AxisInfo("East"' AxisOrientationEnum.East)' new AxisInfo("North"' AxisOrientationEnum.North));" is 231.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The length of the statement  "            //var ctForw = _coordinateTransformationFactory.CreateFromCoordinateSystems(gcsWGS72' gcenCsWGS72); //Geographic->Geocentric (WGS72)" is 132.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The length of the statement  "            //var ctWGS84_Gcen2Geo = _coordinateTransformationFactory.CreateFromCoordinateSystems(gcenCsWGS84' gcsWGS84);  //Geocentric->Geographic (WGS84)" is 143.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The length of the statement  "            //var ctWGS84_Geo2UTM = _coordinateTransformationFactory.CreateFromCoordinateSystems(gcsWGS84' utmWGS84);  //UTM ->Geographic (WGS84)" is 133.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The length of the statement  "            //var ctED50_UTM2Geo = _coordinateTransformationFactory.CreateFromCoordinateSystems(utmED50' gcsED50);  //UTM ->Geographic (ED50)" is 129.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The length of the statement  "            //var ctED50_Geo2Gcen = _coordinateTransformationFactory.CreateFromCoordinateSystems(gcsED50' gcenCsED50); //Geographic->Geocentric (ED50)" is 138.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The length of the statement  "            Assert.IsTrue(ToleranceLessThan(pExpected' pGeoCenWGS84' 0.01)' TransformationError("Datum WGS72->WGS84"' pExpected' pGeoCenWGS84));" is 132.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The length of the statement  "            Assert.IsTrue(ToleranceLessThan(pGeoCenWGS72' pGeoCenWGS72calc' 0.001)' TransformationError("Datum WGS84->WGS72"' pGeoCenWGS72' pGeoCenWGS72calc));" is 147.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The length of the statement  "            Assert.IsTrue(ToleranceLessThan(pExpected' pUTMWGS84' 0.1)' TransformationError("Datum ED50->WGS84"' pExpected' pUTMWGS84));" is 124.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The length of the statement  "            Assert.IsTrue(ToleranceLessThan(pUTMED50' pUTMED50calc' 0.01)' TransformationError("Datum WGS84->ED50"' pUTMED50' pUTMED50calc));" is 129.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The length of the statement  "            Assert.IsTrue(ToleranceLessThan(pUTMWGS84' pUTMWGS84calc' 0.1)' TransformationError("Datum"' pUTMWGS84' pUTMWGS84calc));" is 120.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The length of the statement  "            var gcsWGS84 = CoordinateSystemFactory.CreateGeographicCoordinateSystem("WGS84 Geographic"' AngularUnit.Degrees' HorizontalDatum.WGS84' PrimeMeridian.Greenwich'" is 160.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The length of the statement  "			var coordsys = CoordinateSystemFactory.CreateProjectedCoordinateSystem("Krovak"' gcsKrovak' projection' LinearUnit.Metre' new AxisInfo("East"' AxisOrientationEnum.East)' new AxisInfo("North"' AxisOrientationEnum.North));" is 220.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The length of the statement  "            //can't inverse trans - Inverse() of ConcateratedTransform makes shallow copy and call Invert on each ICoordinateTransformation.MathTransform - this changes original transformation!" is 181.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The length of the statement  "            var gcsWGS84 = CoordinateSystemFactory.CreateGeographicCoordinateSystem("WGS84 Geographic"' AngularUnit.Degrees' HorizontalDatum.WGS84' PrimeMeridian.Greenwich'" is 160.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The length of the statement  "            var coordsys = CoordinateSystemFactory.CreateProjectedCoordinateSystem("Krovak"' gcsKrovak' projection' LinearUnit.Metre' new AxisInfo("East"' AxisOrientationEnum.East)' new AxisInfo("North"' AxisOrientationEnum.North));" is 220.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The length of the statement  "            //can't inverse trans - Inverse() of ConcateratedTransform makes shallow copy and call Invert on each ICoordinateTransformation.MathTransform - this changes original transformation!" is 181.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestObliqueStereographicProjection,The length of the statement  "            string wkt4326 = "GEOGCS[\"WGS 84\"'DATUM[\"WGS_1984\"'SPHEROID[\"WGS 84\"'6378137'298.257223563'AUTHORITY[\"EPSG\"'\"7030\"]]'AUTHORITY[\"EPSG\"'\"6326\"]]'PRIMEM[\"Greenwich\"'0'AUTHORITY[\"EPSG\"'\"8901\"]]'UNIT[\"degree\"'0.01745329251994328'AUTHORITY[\"EPSG\"'\"9122\"]]'AUTHORITY[\"EPSG\"'\"4326\"]]";" is 307.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestObliqueStereographicProjection,The length of the statement  "            string wkt2171 = "PROJCS[\"Pulkovo 1942(58) / Poland zone I\"'GEOGCS[\"Pulkovo 1942(58)\"'DATUM[\"Pulkovo_1942_58\"'SPHEROID[\"Krassowsky 1940\"'6378245'298.3'AUTHORITY[\"EPSG\"'\"7024\"]]'TOWGS84[33.4'-146.6'-76.3'-0.359'-0.053'0.844'-0.84]'AUTHORITY[\"EPSG\"'\"6179\"]]'PRIMEM[\"Greenwich\"'0'AUTHORITY[\"EPSG\"'\"8901\"]]'UNIT[\"degree\"'0.01745329251994328'AUTHORITY[\"EPSG\"'\"9122\"]]'AUTHORITY[\"EPSG\"'\"4179\"]]'PROJECTION[\"Oblique_Stereographic\"]'PARAMETER[\"latitude_of_origin\"'50.625]'PARAMETER[\"central_meridian\"'21.08333333333333]'PARAMETER[\"scale_factor\"'0.9998]'PARAMETER[\"false_easting\"'4637000]'PARAMETER[\"false_northing\"'5647000]'UNIT[\"metre\"'1'AUTHORITY[\"EPSG\"'\"9001\"]]'AUTHORITY[\"EPSG\"'\"2171\"]]";" is 738.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestPolyconicTransforms,The length of the statement  "                //"PROJCS[\"SAD69 / Brazil Polyconic (deprecated)\"'GEOGCS[\"SAD69\"'DATUM[\"South_American_Datum_1969\"'SPHEROID[\"GRS 1967\"'6378160'298.247167427'AUTHORITY[\"EPSG\"'\"7036\"]]'TOWGS84[-57'1'-41'0'0'0'0]'AUTHORITY[\"EPSG\"'\"6291\"]]'PRIMEM[\"Greenwich\"'0'AUTHORITY[\"EPSG\"'\"8901\"]]'UNIT[\"degree\"'0.0174532925199433'AUTHORITY[\"EPSG\"'\"9108\"]]'AUTHORITY[\"EPSG\"'\"4291\"]]'UNIT[\"metre\"'1'AUTHORITY[\"EPSG\"'\"9001\"]]'PROJECTION[\"Polyconic\"]'PARAMETER[\"latitude_of_origin\"'0]'PARAMETER[\"central_meridian\"'-54]'PARAMETER[\"false_easting\"'5000000]'PARAMETER[\"false_northing\"'10000000]'AUTHORITY[\"EPSG\"'\"29100\"]'AXIS[\"X\"'EAST]'AXIS[\"Y\"'NORTH]]";" is 672.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestPolyconicTransforms,The length of the statement  "                //"PROJCS[\"SAD69 / Brazil Polyconic\"'GEOGCS[\"SAD69\"'DATUM[\"South_American_Datum_1969\"'SPHEROID[\"GRS 1967 Modified\"'6378160'298.25'AUTHORITY[\"EPSG\"'\"7050\"]]'TOWGS84[-57'1'-41'0'0'0'0]'AUTHORITY[\"EPSG\"'\"6618\"]]'PRIMEM[\"Greenwich\"'0'AUTHORITY[\"EPSG\"'\"8901\"]]'UNIT[\"degree\"'0.0174532925199433'AUTHORITY[\"EPSG\"'\"9122\"]]'AUTHORITY[\"EPSG\"'\"4618\"]]'UNIT[\"metre\"'1'AUTHORITY[\"EPSG\"'\"9001\"]]'PROJECTION[\"Polyconic\"]'PARAMETER[\"latitude_of_origin\"'0]'PARAMETER[\"central_meridian\"'-54]'PARAMETER[\"false_easting\"'5000000]'PARAMETER[\"false_northing\"'10000000]'AUTHORITY[\"EPSG\"'\"29101\"]'AXIS[\"X\"'EAST]'AXIS[\"Y\"'NORTH]]";" is 661.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestPolyconicTransforms,The length of the statement  "                  "PROJCS[\"SAD69 / Brazil Polyconic\"'GEOGCS[\"SAD69\"'DATUM[\"South_American_Datum_1969\"'SPHEROID[\"GRS 1967 (SAD69)\"' 6378160' 298.25' AUTHORITY[\"EPSG\"' \"7050\"]]'AUTHORITY[\"EPSG\"' \"6618\"]]' PRIMEM[\"Greenwich\"' 0' AUTHORITY[\"EPSG\"' \"8901\"]]'UNIT[\"degree\"' 0.01745329251994328' AUTHORITY[\"EPSG\"' \"9122\"]]' AUTHORITY[\"EPSG\"' \"4618\"]]'UNIT[\"metre\"' 1' AUTHORITY[\"EPSG\"' \"9001\"]]' PROJECTION[\"Polyconic\"]'PARAMETER[\"latitude_of_origin\"' 0]' PARAMETER[\"central_meridian\"' -54]'PARAMETER[\"false_easting\"' 5000000]' PARAMETER[\"false_northing\"' 10000000]'AUTHORITY[\"EPSG\"' \"29101\"]' AXIS[\"X\"' EAST]' AXIS[\"Y\"' NORTH]]";" is 661.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestCassiniSoldner,The length of the statement  "                "PROJCS[\"DHDN / Soldner Berlin\"'GEOGCS[\"DHDN\"'DATUM[\"Deutsches_Hauptdreiecksnetz\"'SPHEROID[\"Bessel 1841\"'6377397.155'299.1528128'AUTHORITY[\"EPSG\"'\"7004\"]]'TOWGS84[598.1'73.7'418.2'0.202'0.045'-2.455'6.7]'AUTHORITY[\"EPSG\"'\"6314\"]]'PRIMEM[\"Greenwich\"'0'AUTHORITY[\"EPSG\"'\"8901\"]]'UNIT[\"degree\"'0.0174532925199433'AUTHORITY[\"EPSG\"'\"9122\"]]'AUTHORITY[\"EPSG\"'\"4314\"]]'UNIT[\"metre\"'1'AUTHORITY[\"EPSG\"'\"9001\"]]'PROJECTION[\"Cassini_Soldner\"]'PARAMETER[\"latitude_of_origin\"'52.41864827777778]'PARAMETER[\"central_meridian\"'13.62720366666667]'PARAMETER[\"false_easting\"'40000]'PARAMETER[\"false_northing\"'10000]'AUTHORITY[\"EPSG\"'\"3068\"]'AXIS[\"x\"'NORTH]'AXIS[\"y\"'EAST]]");" is 713.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestHotineObliqueMercator,The length of the statement  "               "PROJCS[\"NAD83(NSRS2007) / Alaska zone 1\"'GEOGCS[\"NAD83(NSRS2007)\"'DATUM[\"NAD83_National_Spatial_Reference_System_2007\"'SPHEROID[\"GRS 1980\"'6378137'298.257222101'AUTHORITY[\"EPSG\"'\"7019\"]]'TOWGS84[0'0'0'0'0'0'0]'AUTHORITY[\"EPSG\"'\"6759\"]]'PRIMEM[\"Greenwich\"'0'AUTHORITY[\"EPSG\"'\"8901\"]]'UNIT[\"degree\"'0.0174532925199433'AUTHORITY[\"EPSG\"'\"9122\"]]'AUTHORITY[\"EPSG\"'\"4759\"]]'UNIT[\"metre\"'1'AUTHORITY[\"EPSG\"'\"9001\"]]'PROJECTION[\"Hotine_Oblique_Mercator\"]'PARAMETER[\"latitude_of_center\"'57]'PARAMETER[\"longitude_of_center\"'-133.6666666666667]'PARAMETER[\"azimuth\"'323.1301023611111]'PARAMETER[\"rectified_grid_angle\"'323.1301023611111]'PARAMETER[\"scale_factor\"'0.9999]'PARAMETER[\"false_easting\"'5000000]'PARAMETER[\"false_northing\"'-5000000]'AUTHORITY[\"EPSG\"'\"3468\"]'AXIS[\"X\"'EAST]'AXIS[\"Y\"'NORTH]]");" is 852.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOnConcatenatedDoTransform,The length of the statement  "                    "PROJCS[\"ETRS89 / ETRS-TM35\"'GEOGCS[\"ETRS89\"'DATUM[\"D_ETRS_1989\"'SPHEROID[\"GRS_1980\"'6378137'298.257222101]]'PRIMEM[\"Greenwich\"'0]'UNIT[\"Degree\"'0.017453292519943295]]'PROJECTION[\"Transverse_Mercator\"]'PARAMETER[\"latitude_of_origin\"'0]'PARAMETER[\"central_meridian\"'27]'PARAMETER[\"scale_factor\"'0.9996]'PARAMETER[\"false_easting\"'500000]'PARAMETER[\"false_northing\"'0]'UNIT[\"Meter\"'1]]");" is 411.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOnConcatenatedDoTransformDoubleArr,The length of the statement  "                  "PROJCS[\"ETRS89 / ETRS-TM35\"'GEOGCS[\"ETRS89\"'DATUM[\"D_ETRS_1989\"'SPHEROID[\"GRS_1980\"'6378137'298.257222101]]'PRIMEM[\"Greenwich\"'0]'UNIT[\"Degree\"'0.017453292519943295]]'PROJECTION[\"Transverse_Mercator\"]'PARAMETER[\"latitude_of_origin\"'0]'PARAMETER[\"central_meridian\"'27]'PARAMETER[\"scale_factor\"'0.9996]'PARAMETER[\"false_easting\"'500000]'PARAMETER[\"false_northing\"'0]'UNIT[\"Meter\"'1]]");" is 411.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformOnFittedCoordinateSystem,The length of the statement  "                                   "PARAMETER[\"num_row\"'3]'PARAMETER[\"num_col\"'3]'PARAMETER[\"elt_0_0\"' 0.883485346527455]'PARAMETER[\"elt_0_1\"' -0.468458794848877]'PARAMETER[\"elt_0_2\"' 3455869.17937689]'PARAMETER[\"elt_1_0\"' 0.468458794848877]'PARAMETER[\"elt_1_1\"' 0.883485346527455]'PARAMETER[\"elt_1_2\"' 5478710.88035753]'PARAMETER[\"elt_2_2\"' 1]]'" +" is 332.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformOnFittedCoordinateSystem,The length of the statement  "            //string gk_wkt = "PROJCS[\"DHDN / Gauss-Kruger zone 3\"'GEOGCS[\"DHDN\"'DATUM[\"Deutsches_Hauptdreiecksnetz\"'SPHEROID[\"Bessel 1841\"'6377397.155'299.1528128'AUTHORITY[\"EPSG\"'\"7004\"]]'AUTHORITY[\"EPSG\"'\"6314\"]]'PRIMEM[\"Greenwich\"'0'AUTHORITY[\"EPSG\"'\"8901\"]]'UNIT[\"degree\"'0.01745329251994328'AUTHORITY[\"EPSG\"'\"9122\"]]'AUTHORITY[\"EPSG\"'\"4314\"]]'PROJECTION[\"Transverse_Mercator\"]'PARAMETER[\"latitude_of_origin\"'0]'PARAMETER[\"central_meridian\"'9]'PARAMETER[\"scale_factor\"'1]'PARAMETER[\"false_easting\"'3500000]'PARAMETER[\"false_northing\"'0]'UNIT[\"metre\"'1'AUTHORITY[\"EPSG\"'\"9001\"]]'AUTHORITY[\"EPSG\"'\"31467\"]]";" is 653.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,Test_EPSG_21780_PrimeMeredianTransformation,The length of the statement  "            string wkt4326 = "GEOGCS[\"WGS 84\"'DATUM[\"WGS_1984\"'SPHEROID[\"WGS 84\"'6378137'298.257223563'AUTHORITY[\"EPSG\"'\"7030\"]]'AUTHORITY[\"EPSG\"'\"6326\"]]'PRIMEM[\"Greenwich\"'0'AUTHORITY[\"EPSG\"'\"8901\"]]'UNIT[\"degree\"'0.01745329251994328'AUTHORITY[\"EPSG\"'\"9122\"]]'AUTHORITY[\"EPSG\"'\"4326\"]]";" is 307.
Long Statement,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,Test_EPSG_21780_PrimeMeredianTransformation,The length of the statement  "            string wkt21780 = "PROJCS[\"Bern 1898 (Bern) / LV03C\"'GEOGCS[\"Bern 1898 (Bern)\"'DATUM[\"CH1903_Bern\"'SPHEROID[\"Bessel 1841\"'6377397.155'299.1528128'AUTHORITY[\"EPSG\"'\"7004\"]]'AUTHORITY[\"EPSG\"'\"6801\"]]'PRIMEM[\"Bern\"'7.439583333333333'AUTHORITY[\"EPSG\"'\"8907\"]]'UNIT[\"degree\"'0.01745329251994328'AUTHORITY[\"EPSG\"'\"9122\"]]'AUTHORITY[\"EPSG\"'\"4801\"]]'PROJECTION[\"Hotine_Oblique_Mercator\"]'PARAMETER[\"latitude_of_center\"'46.95240555555556]'PARAMETER[\"longitude_of_center\"'0]'PARAMETER[\"azimuth\"'90]'PARAMETER[\"rectified_grid_angle\"'90]'PARAMETER[\"scale_factor\"'1]'PARAMETER[\"false_easting\"'0]'PARAMETER[\"false_northing\"'0]'UNIT[\"metre\"'1'AUTHORITY[\"EPSG\"'\"9001\"]]'AUTHORITY[\"EPSG\"'\"21780\"]]";" is 740.
Long Statement,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestIssue23773,The length of the statement  "                "PROJCS[\"WGS 84 / UTM zone 18N\"'GEOGCS[\"WGS 84\"'DATUM[\"WGS_1984\"'SPHEROID[\"WGS 84\"'6378137'298.257223563'AUTHORITY[\"EPSG\"'\"7030\"]]'AUTHORITY[\"EPSG\"'\"6326\"]]'PRIMEM[\"Greenwich\"'0'AUTHORITY[\"EPSG\"'\"8901\"]]'UNIT[\"degree\"'0.01745329251994328'AUTHORITY[\"EPSG\"'\"9122\"]]'AUTHORITY[\"EPSG\"'\"4326\"]]'UNIT[\"metre\"'1'AUTHORITY[\"EPSG\"'\"9001\"]]'PROJECTION[\"Transverse_Mercator\"]'PARAMETER[\"latitude_of_origin\"'0]'PARAMETER[\"central_meridian\"'-75]'PARAMETER[\"scale_factor\"'0.9996]'PARAMETER[\"false_easting\"'500000]'PARAMETER[\"false_northing\"'0]'AUTHORITY[\"EPSG\"'\"32618\"]'AXIS[\"Easting\"'EAST]'AXIS[\"Northing\"'NORTH]]");" is 661.
Long Statement,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion351733,The length of the statement  "                "PROJCS[\"Pulkovo 1942 / Gauss-Kruger zone 14\"'GEOGCS[\"Pulkovo 1942\"'DATUM[\"Pulkovo_1942\"'SPHEROID[\"Krassowsky 1940\"'6378245'298.3'AUTHORITY[\"EPSG\"'\"7024\"]]'TOWGS84[23.92'-141.27'-80.9'-0'0.35'0.82'-0.12]'AUTHORITY[\"EPSG\"'\"6284\"]]'PRIMEM[\"Greenwich\"'0'AUTHORITY[\"EPSG\"'\"8901\"]]'UNIT[\"degree\"'0.0174532925199433'AUTHORITY[\"EPSG\"'\"9122\"]]'AUTHORITY[\"EPSG\"'\"4284\"]]'UNIT[\"metre\"'1'AUTHORITY[\"EPSG\"'\"9001\"]]'PROJECTION[\"Transverse_Mercator\"]'PARAMETER[\"latitude_of_origin\"'0]'PARAMETER[\"central_meridian\"'81]'PARAMETER[\"scale_factor\"'1]'PARAMETER[\"false_easting\"'14500000]'PARAMETER[\"false_northing\"'0]'AUTHORITY[\"EPSG\"'\"28414\"]'AXIS[\"X\"'NORTH]'AXIS[\"Y\"'EAST]]\"");" is 718.
Long Statement,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion351733,The length of the statement  "                "GEOGCS[\"Pulkovo 1942\"'DATUM[\"Pulkovo_1942\"'SPHEROID[\"Krassowsky 1940\"'6378245'298.3'AUTHORITY[\"EPSG\"'\"7024\"]]'TOWGS84[23.92'-141.27'-80.9'-0'0.35'0.82'-0.12]'AUTHORITY[\"EPSG\"'\"6284\"]]'PRIMEM[\"Greenwich\"'0'AUTHORITY[\"EPSG\"'\"8901\"]]'UNIT[\"degree\"'0.0174532925199433'AUTHORITY[\"EPSG\"'\"9122\"]]'AUTHORITY[\"EPSG\"'\"4284\"]]\"");" is 351.
Long Statement,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion352813,The length of the statement  "            //"PROJCS["WGS 84 / Pseudo-Mercator"'GEOGCS["WGS 84"'DATUM["WGS_1984"'SPHEROID["WGS 84"'6378137'298.257223563'AUTHORITY["EPSG"'"7030"]]'AUTHORITY["EPSG"'"6326"]]'PRIMEM["Greenwich"'0'AUTHORITY["EPSG"'"8901"]]'UNIT["degree"'0.0174532925199433'AUTHORITY["EPSG"'"9122"]]'AUTHORITY["EPSG"'"4326"]]'UNIT["metre"'1'AUTHORITY["EPSG"'"9001"]]'PROJECTION["Mercator_1SP"]'PARAMETER["central_meridian"'0]'PARAMETER["scale_factor"'1]'PARAMETER["false_easting"'0]'PARAMETER["false_northing"'0]'EXTENSION["PROJ4"'"+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs"]'AUTHORITY["EPSG"'"3857"]'AXIS["X"'EAST]'AXIS["Y"'NORTH]]"" is 681.
Long Statement,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion361248_1,The length of the statement  "                "PROJCS[\"GDA94 / MGA zone 50\"'GEOGCS[\"GDA94\"'DATUM[\"Geocentric_Datum_of_Australia_1994\"'SPHEROID[\"GRS 1980\"'6378137'298.257222101'AUTHORITY[\"EPSG\"'\"7019\"]]'TOWGS84[0'0'0'0'0'0'0]'AUTHORITY[\"EPSG\"'\"6283\"]]'PRIMEM[\"Greenwich\"'0'AUTHORITY[\"EPSG\"'\"8901\"]]'UNIT[\"degree\"'0.01745329251994328'AUTHORITY[\"EPSG\"'\"9122\"]]'AUTHORITY[\"EPSG\"'\"4283\"]]'UNIT[\"metre\"'1'AUTHORITY[\"EPSG\"'\"9001\"]]'PROJECTION[\"Transverse_Mercator\"]'PARAMETER[\"latitude_of_origin\"'0]'PARAMETER[\"central_meridian\"'117]'PARAMETER[\"scale_factor\"'0.9996]'PARAMETER[\"false_easting\"'500000]'PARAMETER[\"false_northing\"'10000000]'AUTHORITY[\"EPSG\"'\"28350\"]'AXIS[\"Easting\"'EAST]'AXIS[\"Northing\"'NORTH]]");" is 716.
Long Statement,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion361248_1,The length of the statement  "            Test("WGS 84 -> GDA94 / MGA zone 50"' csSource' csTarget' new[] { 136d' -30d }' new[] { 2349315.05731837' 6524249.91789138}' 0.05' 1.0e-4);" is 139.
Long Statement,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion361248_2,The length of the statement  "            Test("WGS84_UTM(18'N) -> WGS84"' csSource' csTarget' new[] { 307821.867' 4219306.387 }' new[] { -77.191769' 38.101147 }' 1e-6);" is 127.
Long Statement,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestAngularUnitsEqualParamsIssue,The length of the statement  "            string wkt = "PROJCS[\"DHDN / Gauss-Kruger zone 3\"'GEOGCS[\"DHDN\"'DATUM[\"Deutsches_Hauptdreiecksnetz\"'SPHEROID[\"Bessel 1841\"'6377397.155'299.1528128'AUTHORITY[\"EPSG\"'\"7004\"]]'AUTHORITY[\"EPSG\"'\"6314\"]]'PRIMEM[\"Greenwich\"'0'AUTHORITY[\"EPSG\"'\"8901\"]]'UNIT[\"degree\"'0.01745329251994328'AUTHORITY[\"EPSG\"'\"9122\"]]'AUTHORITY[\"EPSG\"'\"4314\"]]'PROJECTION[\"Transverse_Mercator\"]'PARAMETER[\"latitude_of_origin\"'0]'PARAMETER[\"central_meridian\"'9]'PARAMETER[\"scale_factor\"'1]'PARAMETER[\"false_easting\"'3500000]'PARAMETER[\"false_northing\"'0]'UNIT[\"metre\"'1'AUTHORITY[\"EPSG\"'\"9001\"]]'AUTHORITY[\"EPSG\"'\"31467\"]]";" is 648.
Long Statement,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestAngularUnitsEqualParamsIssue,The length of the statement  "            Assert.AreEqual (pcs1.GeographicCoordinateSystem.AngularUnit.RadiansPerUnit' pcs2.GeographicCoordinateSystem.AngularUnit.RadiansPerUnit' 0.0000000000001);" is 154.
Long Statement,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestAngularUnitsEqualParamsIssue,The length of the statement  "            Assert.AreEqual (true' pcs1.GeographicCoordinateSystem.AngularUnit.EqualParams (pcs2.GeographicCoordinateSystem.AngularUnit));" is 126.
Long Statement,ProjNET.Tests,SharpMapIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\SharpMapIssues.cs,TestNad83ToWGS84,The length of the statement  "            ProjNet.CoordinateSystems.Projections.ProjectionsRegistry.Register("SPCS83 Florida East zone (US Survey feet) (EPSG OP 15318)"' " is 127.
Long Statement,ProjNET.Tests,SharpMapIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\SharpMapIssues.cs,TestAuthorityCodeParsing,The length of the statement  "            const string wkt1 = "PROJCS[\"NAD_1983_BC_Environment_Albers\"'GEOGCS[\"GCS_North_American_1983\"'DATUM[\"D_North_American_1983\"'SPHEROID[\"GRS_1980\"'6378137.0'298.257222101]]'PRIMEM[\"Greenwich\"'0.0]'UNIT[\"Degree\"'0.0174532925199433]]'PROJECTION[\"Albers\"]'PARAMETER[\"False_Easting\"'1000000.0]'PARAMETER[\"False_Northing\"'0.0]'PARAMETER[\"Central_Meridian\"'-126.0]'PARAMETER[\"Standard_Parallel_1\"'50.0]'PARAMETER[\"Standard_Parallel_2\"'58.5]'PARAMETER[\"Latitude_Of_Origin\"'45.0]'UNIT[\"Meter\"'1.0]'AUTHORITY[\"EPSG\"'\"3005\"]]";" is 546.
Long Statement,ProjNET.Tests,SharpMapIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\SharpMapIssues.cs,TestAuthorityCodeParsing,The length of the statement  "            const string wkt2 = "PROJCS[\"NAD_1983_BC_Environment_Albers\"'GEOGCS[\"GCS_North_American_1983\"'DATUM[\"D_North_American_1983\"'SPHEROID[\"GRS_1980\"'6378137.0'298.257222101]]'PRIMEM[\"Greenwich\"'0.0]'UNIT[\"Degree\"'0.0174532925199433]]'PROJECTION[\"Albers\"]'PARAMETER[\"False_Easting\"'1000000.0]'PARAMETER[\"False_Northing\"'0.0]'PARAMETER[\"Central_Meridian\"'-126.0]'PARAMETER[\"Standard_Parallel_1\"'50.0]'PARAMETER[\"Standard_Parallel_2\"'58.5]'PARAMETER[\"Latitude_Of_Origin\"'45.0]'UNIT[\"Meter\"'1.0]'AUTHORITY[\"EPSG\"'3005]]";" is 542.
Long Statement,ProjNET.Tests,SharpMapIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\SharpMapIssues.cs,Test25832To3857,The length of the statement  "            const string wkt1 = //"PROJCS[\"ETRS89 / UTM zone 32N\"'GEOGCS[\"ETRS89\"'DATUM[\"European_Terrestrial_Reference_System_1989\"'SPHEROID[\"GRS 1980\"'6378137'298.257222101'AUTHORITY[\"EPSG\"'\"7019\"]]'AUTHORITY[\"EPSG\"'\"6258\"]]'PRIMEM[\"Greenwich\"'0'AUTHORITY[\"EPSG\"'\"8901\"]]'UNIT[\"degree\"'0.01745329251994328'AUTHORITY[\"EPSG\"'\"9122\"]]'AUTHORITY[\"EPSG\"'\"4258\"]]'PROJECTION[\"Transverse_Mercator\"]'PARAMETER[\"latitude_of_origin\"'0]'PARAMETER[\"central_meridian\"'9]'PARAMETER[\"scale_factor\"'0.9996]'PARAMETER[\"false_easting\"'500000]'PARAMETER[\"false_northing\"'0]'UNIT[\"metre\"'1'AUTHORITY[\"EPSG\"'\"9001\"]]'AUTHORITY[\"EPSG\"'\"25832\"]]";" is 668.
Long Statement,ProjNET.Tests,SharpMapIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\SharpMapIssues.cs,Test25832To3857,The length of the statement  "                "PROJCS[\"ETRS89 / UTM zone 32N\"'GEOGCS[\"ETRS89\"'DATUM[\"European_Terrestrial_Reference_System_1989\"'SPHEROID[\"GRS 1980\"'6378137'298.257222101'AUTHORITY[\"EPSG\"'\"7019\"]]'TOWGS84[0'0'0'0'0'0'0]'AUTHORITY[\"EPSG\"'\"6258\"]]'PRIMEM[\"Greenwich\"'0'AUTHORITY[\"EPSG\"'\"8901\"]]'UNIT[\"degree\"'0.0174532925199433'AUTHORITY[\"EPSG\"'\"9122\"]]'AUTHORITY[\"EPSG\"'\"4258\"]]'UNIT[\"metre\"'1'AUTHORITY[\"EPSG\"'\"9001\"]]'PROJECTION[\"Transverse_Mercator\"]'PARAMETER[\"latitude_of_origin\"'0]'PARAMETER[\"central_meridian\"'9]'PARAMETER[\"scale_factor\"'0.9996]'PARAMETER[\"false_easting\"'500000]'PARAMETER[\"false_northing\"'0]'AUTHORITY[\"EPSG\"'\"25832\"]'AXIS[\"Easting\"'EAST]'AXIS[\"Northing\"'NORTH]]";" is 716.
Long Statement,ProjNET.Tests,SharpMapIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\SharpMapIssues.cs,Test25832To3857,The length of the statement  "            const string wkt2 = "PROJCS[\"WGS 84 / Pseudo-Mercator\"'GEOGCS[\"WGS 84\"'DATUM[\"WGS_1984\"'                  SPHEROID[\"WGS 84\"'6378137'298.257223563'AUTHORITY[\"EPSG\"'\"7030\"]]'AUTHORITY[\"EPSG\"'\"6326\"]]'PRIMEM[\"Greenwich\"'0'AUTHORITY[\"EPSG\"'\"8901\"]]'UNIT[\"degree\"'0.0174532925199433'AUTHORITY[\"EPSG\"'\"9122\"]]'AUTHORITY[\"EPSG\"'\"4326\"]]'UNIT[\"metre\"'1'AUTHORITY[\"EPSG\"'\"9001\"]]'PROJECTION[\"Mercator_1SP\"]'PARAMETER[\"latitude_of_origin\"' 0]'PARAMETER[\"central_meridian\"'0]'PARAMETER[\"scale_factor\"'1]'PARAMETER[\"false_easting\"'0]'PARAMETER[\"false_northing\"'0]'EXTENSION[\"PROJ4\"'\"+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs\"]'AUTHORITY[\"EPSG\"'\"3857\"]'AXIS[\"X\"'EAST]'AXIS[\"Y\"'NORTH]]";" is 815.
Long Statement,ProjNET.Tests,SharpMapIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\SharpMapIssues.cs,Test25832To3857,The length of the statement  "            Assert.DoesNotThrow(() => ct = CoordinateTransformationFactory.CreateFromCoordinateSystems(cs1' ProjectedCoordinateSystem.WebMercator));" is 136.
Long Statement,ProjNET.Tests,SharpMapIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\SharpMapIssues.cs,Test25832To3857,The length of the statement  "            Assert.DoesNotThrow(() => ct = CoordinateTransformationFactory.CreateFromCoordinateSystems(ProjectedCoordinateSystem.WebMercator' cs1));" is 136.
Long Statement,ProjNET.Tests,SharpMapIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\SharpMapIssues.cs,TestLaea,The length of the statement  "                @"PROJCS[""ETRS89 / ETRS-LAEA""'GEOGCS[""ETRS89""'DATUM[""European_Terrestrial_Reference_System_1989""'SPHEROID[""GRS 1980""'6378137'298.257222101'AUTHORITY[""EPSG""'""7019""]]'AUTHORITY[""EPSG""'""6258""]]'PRIMEM[""Greenwich""'0'AUTHORITY[""EPSG""'""8901""]]'UNIT[""degree""'0.01745329251994328'AUTHORITY[""EPSG""'""9122""]]'AUTHORITY[""EPSG""'""4258""]]'UNIT[""metre""'1'AUTHORITY[""EPSG""'""9001""]]'PROJECTION[""Lambert_Azimuthal_Equal_Area""]'PARAMETER[""latitude_of_center""'52]'PARAMETER[""longitude_of_center""'10]'PARAMETER[""false_easting""'4321000]'PARAMETER[""false_northing""'3210000]'AUTHORITY[""EPSG""'""3035""]'AXIS[""X""'EAST]'AXIS[""Y""'NORTH]]";" is 664.
Long Statement,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestMathTransformBug,The length of the statement  "                PrimeMeridian.Greenwich' new AxisInfo("East"' AxisOrientationEnum.East)' new AxisInfo("North"' AxisOrientationEnum.North));" is 123.
Long Statement,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestMathTransformBug,The length of the statement  "            var itmProjection = coordinateSystemFactory.CreateProjection("Transverse_Mercator"' "Transverse_Mercator"' itmParameters);" is 122.
Long Statement,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG_2918,The length of the statement  "            Assert.AreEqual(new Wgs84ConversionInfo(725' 685' 536' 0' 0' 0' 0)' pcs.GeographicCoordinateSystem.HorizontalDatum.Wgs84Parameters);" is 132.
Long Statement,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjNetIssues,The length of the statement  "                "EXTENSION[\"PROJ4\"'\"+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs\"]'" +" is 151.
Long Statement,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestFittedCoordinateSystemWkt,The length of the statement  "                                   "PARAMETER[\"num_row\"'3]'PARAMETER[\"num_col\"'3]'PARAMETER[\"elt_0_0\"' 0.883485346527455]'PARAMETER[\"elt_0_1\"' -0.468458794848877]'PARAMETER[\"elt_0_2\"' 3455869.17937689]'PARAMETER[\"elt_1_0\"' 0.468458794848877]'PARAMETER[\"elt_1_1\"' 0.883485346527455]'PARAMETER[\"elt_1_2\"' 5478710.88035753]'PARAMETER[\"elt_2_2\"' 1]]'" + " is 332.
Long Statement,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,CheckProjection,The length of the statement  "                Assert.That(() => par = projection.GetParameter(pp[i].Item1)' Throws.Nothing' $"Getting projection parameter '{pp[i].Item1}' throws.");" is 135.
Long Statement,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,CheckProjection,The length of the statement  "                Assert.That(par.Value' Is.EqualTo(pp[i].Item2)' $"Projection parameter value for '{par.Name}' name ({par.Value:R}) is not '{pp[i].Item2:R}'.");" is 143.
Long Statement,ProjNET.Tests.WKT,WKTMathTransformParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTMathTransformParserTests.cs,TestMathTransformWktReaderExponencialNumberParsingIssue,The length of the statement  "            //string wkt = "PARAM_MT[\"Affine\"'PARAMETER[\"num_row\"' 3]'PARAMETER[\"num_col\"' 3]'PARAMETER[\"elt_0_0\"' 6.12303176911189E-17]]";" is 135.
Magic Number,ProjNET.Tests,CoordinateSystemServicesTest,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateSystemServicesTest.cs,TestConstructor,The following statement contains a magic number: Assert.IsNotNull(css.GetCoordinateSystem(4326));
Magic Number,ProjNET.Tests,CoordinateSystemServicesTest,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateSystemServicesTest.cs,TestConstructor,The following statement contains a magic number: Assert.IsNotNull(css.GetCoordinateSystem(3857));
Magic Number,ProjNET.Tests,CoordinateSystemServicesTest,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateSystemServicesTest.cs,TestConstructorLoadXml,The following statement contains a magic number: Assert.IsNotNull(css.GetCoordinateSystem(4326));
Magic Number,ProjNET.Tests,CoordinateSystemServicesTest,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateSystemServicesTest.cs,TestConstructorLoadXml,The following statement contains a magic number: Assert.IsNotNull(css.GetCoordinateSystem("EPSG"' 4326));
Magic Number,ProjNET.Tests,CoordinateSystemServicesTest,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateSystemServicesTest.cs,TestConstructorLoadXml,The following statement contains a magic number: Assert.IsTrue(ReferenceEquals(css.GetCoordinateSystem("EPSG"' 4326)' css.GetCoordinateSystem(4326)));
Magic Number,ProjNET.Tests,CoordinateSystemServicesTest,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateSystemServicesTest.cs,TestConstructorLoadXml,The following statement contains a magic number: Assert.IsTrue(ReferenceEquals(css.GetCoordinateSystem("EPSG"' 4326)' css.GetCoordinateSystem(4326)));
Magic Number,ProjNET.Tests,CoordinateSystemServicesTest,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateSystemServicesTest.cs,TestConstructorLoadCsv,The following statement contains a magic number: Assert.IsNotNull(css.GetCoordinateSystem(4326));
Magic Number,ProjNET.Tests,CoordinateSystemServicesTest,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateSystemServicesTest.cs,TestConstructorLoadCsv,The following statement contains a magic number: Assert.IsNotNull(css.GetCoordinateSystem("EPSG"' 4326));
Magic Number,ProjNET.Tests,CoordinateSystemServicesTest,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateSystemServicesTest.cs,TestConstructorLoadCsv,The following statement contains a magic number: Assert.IsTrue(ReferenceEquals(css.GetCoordinateSystem("EPSG"' 4326)' css.GetCoordinateSystem(4326)));
Magic Number,ProjNET.Tests,CoordinateSystemServicesTest,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateSystemServicesTest.cs,TestConstructorLoadCsv,The following statement contains a magic number: Assert.IsTrue(ReferenceEquals(css.GetCoordinateSystem("EPSG"' 4326)' css.GetCoordinateSystem(4326)));
Magic Number,ProjNET.Tests,CoordinateSystemServicesTest,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateSystemServicesTest.cs,TestConstructorLoadCsv,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfCoordinates,The following statement contains a magic number: var utm33 = ProjectedCoordinateSystem.WGS84_UTM(33' true);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfCoordinates,The following statement contains a magic number: XY[] points =             {                 new XY(290586.087' 6714000)' new XY(290586.392' 6713996.224)'                 new XY(290590.133' 6713973.772)' new XY(290594.111' 6713957.416)'                 new XY(290596.615' 6713943.567)' new XY(290596.701' 6713939.485)             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfCoordinates,The following statement contains a magic number: XY[] points =             {                 new XY(290586.087' 6714000)' new XY(290586.392' 6713996.224)'                 new XY(290590.133' 6713973.772)' new XY(290594.111' 6713957.416)'                 new XY(290596.615' 6713943.567)' new XY(290596.701' 6713939.485)             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfCoordinates,The following statement contains a magic number: XY[] points =             {                 new XY(290586.087' 6714000)' new XY(290586.392' 6713996.224)'                 new XY(290590.133' 6713973.772)' new XY(290594.111' 6713957.416)'                 new XY(290596.615' 6713943.567)' new XY(290596.701' 6713939.485)             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfCoordinates,The following statement contains a magic number: XY[] points =             {                 new XY(290586.087' 6714000)' new XY(290586.392' 6713996.224)'                 new XY(290590.133' 6713973.772)' new XY(290594.111' 6713957.416)'                 new XY(290596.615' 6713943.567)' new XY(290596.701' 6713939.485)             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfCoordinates,The following statement contains a magic number: XY[] points =             {                 new XY(290586.087' 6714000)' new XY(290586.392' 6713996.224)'                 new XY(290590.133' 6713973.772)' new XY(290594.111' 6713957.416)'                 new XY(290596.615' 6713943.567)' new XY(290596.701' 6713939.485)             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfCoordinates,The following statement contains a magic number: XY[] points =             {                 new XY(290586.087' 6714000)' new XY(290586.392' 6713996.224)'                 new XY(290590.133' 6713973.772)' new XY(290594.111' 6713957.416)'                 new XY(290596.615' 6713943.567)' new XY(290596.701' 6713939.485)             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfCoordinates,The following statement contains a magic number: XY[] points =             {                 new XY(290586.087' 6714000)' new XY(290586.392' 6713996.224)'                 new XY(290590.133' 6713973.772)' new XY(290594.111' 6713957.416)'                 new XY(290596.615' 6713943.567)' new XY(290596.701' 6713939.485)             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfCoordinates,The following statement contains a magic number: XY[] points =             {                 new XY(290586.087' 6714000)' new XY(290586.392' 6713996.224)'                 new XY(290590.133' 6713973.772)' new XY(290594.111' 6713957.416)'                 new XY(290596.615' 6713943.567)' new XY(290596.701' 6713939.485)             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfCoordinates,The following statement contains a magic number: XY[] points =             {                 new XY(290586.087' 6714000)' new XY(290586.392' 6713996.224)'                 new XY(290590.133' 6713973.772)' new XY(290594.111' 6713957.416)'                 new XY(290596.615' 6713943.567)' new XY(290596.701' 6713939.485)             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfCoordinates,The following statement contains a magic number: XY[] points =             {                 new XY(290586.087' 6714000)' new XY(290586.392' 6713996.224)'                 new XY(290590.133' 6713973.772)' new XY(290594.111' 6713957.416)'                 new XY(290596.615' 6713943.567)' new XY(290596.701' 6713939.485)             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfCoordinates,The following statement contains a magic number: XY[] points =             {                 new XY(290586.087' 6714000)' new XY(290586.392' 6713996.224)'                 new XY(290590.133' 6713973.772)' new XY(290594.111' 6713957.416)'                 new XY(290596.615' 6713943.567)' new XY(290596.701' 6713939.485)             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfCoordinates,The following statement contains a magic number: XY[] points =             {                 new XY(290586.087' 6714000)' new XY(290586.392' 6713996.224)'                 new XY(290590.133' 6713973.772)' new XY(290594.111' 6713957.416)'                 new XY(290596.615' 6713943.567)' new XY(290596.701' 6713939.485)             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfCoordinates,The following statement contains a magic number: Assert.That(actualX' Is.EqualTo(expectedX).Within(1E-8));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfCoordinates,The following statement contains a magic number: Assert.That(actualY' Is.EqualTo(expectedY).Within(1E-8));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfDoubleArray,The following statement contains a magic number: var utm33 = ProjectedCoordinateSystem.WGS84_UTM(33' true);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfDoubleArray,The following statement contains a magic number: double[][] points =             {                 new[] {290586.087' 6714000 }' new[] {90586.392' 6713996.224}'                 new[] {290590.133' 6713973.772}' new[] {290594.111' 6713957.416}'                 new[] {290596.615' 6713943.567}' new[] {290596.701' 6713939.485}             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfDoubleArray,The following statement contains a magic number: double[][] points =             {                 new[] {290586.087' 6714000 }' new[] {90586.392' 6713996.224}'                 new[] {290590.133' 6713973.772}' new[] {290594.111' 6713957.416}'                 new[] {290596.615' 6713943.567}' new[] {290596.701' 6713939.485}             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfDoubleArray,The following statement contains a magic number: double[][] points =             {                 new[] {290586.087' 6714000 }' new[] {90586.392' 6713996.224}'                 new[] {290590.133' 6713973.772}' new[] {290594.111' 6713957.416}'                 new[] {290596.615' 6713943.567}' new[] {290596.701' 6713939.485}             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfDoubleArray,The following statement contains a magic number: double[][] points =             {                 new[] {290586.087' 6714000 }' new[] {90586.392' 6713996.224}'                 new[] {290590.133' 6713973.772}' new[] {290594.111' 6713957.416}'                 new[] {290596.615' 6713943.567}' new[] {290596.701' 6713939.485}             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfDoubleArray,The following statement contains a magic number: double[][] points =             {                 new[] {290586.087' 6714000 }' new[] {90586.392' 6713996.224}'                 new[] {290590.133' 6713973.772}' new[] {290594.111' 6713957.416}'                 new[] {290596.615' 6713943.567}' new[] {290596.701' 6713939.485}             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfDoubleArray,The following statement contains a magic number: double[][] points =             {                 new[] {290586.087' 6714000 }' new[] {90586.392' 6713996.224}'                 new[] {290590.133' 6713973.772}' new[] {290594.111' 6713957.416}'                 new[] {290596.615' 6713943.567}' new[] {290596.701' 6713939.485}             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfDoubleArray,The following statement contains a magic number: double[][] points =             {                 new[] {290586.087' 6714000 }' new[] {90586.392' 6713996.224}'                 new[] {290590.133' 6713973.772}' new[] {290594.111' 6713957.416}'                 new[] {290596.615' 6713943.567}' new[] {290596.701' 6713939.485}             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfDoubleArray,The following statement contains a magic number: double[][] points =             {                 new[] {290586.087' 6714000 }' new[] {90586.392' 6713996.224}'                 new[] {290590.133' 6713973.772}' new[] {290594.111' 6713957.416}'                 new[] {290596.615' 6713943.567}' new[] {290596.701' 6713939.485}             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfDoubleArray,The following statement contains a magic number: double[][] points =             {                 new[] {290586.087' 6714000 }' new[] {90586.392' 6713996.224}'                 new[] {290590.133' 6713973.772}' new[] {290594.111' 6713957.416}'                 new[] {290596.615' 6713943.567}' new[] {290596.701' 6713939.485}             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfDoubleArray,The following statement contains a magic number: double[][] points =             {                 new[] {290586.087' 6714000 }' new[] {90586.392' 6713996.224}'                 new[] {290590.133' 6713973.772}' new[] {290594.111' 6713957.416}'                 new[] {290596.615' 6713943.567}' new[] {290596.701' 6713939.485}             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfDoubleArray,The following statement contains a magic number: double[][] points =             {                 new[] {290586.087' 6714000 }' new[] {90586.392' 6713996.224}'                 new[] {290590.133' 6713973.772}' new[] {290594.111' 6713957.416}'                 new[] {290596.615' 6713943.567}' new[] {290596.701' 6713939.485}             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfDoubleArray,The following statement contains a magic number: double[][] points =             {                 new[] {290586.087' 6714000 }' new[] {90586.392' 6713996.224}'                 new[] {290590.133' 6713973.772}' new[] {290594.111' 6713957.416}'                 new[] {290596.615' 6713943.567}' new[] {290596.701' 6713939.485}             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfDoubleArray,The following statement contains a magic number: Assert.That(actualX' Is.EqualTo(expectedX).Within(1E-8));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOfDoubleArray,The following statement contains a magic number: Assert.That(actualY' Is.EqualTo(expectedY).Within(1E-8));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjection,The following statement contains a magic number: var ellipsoid = CoordinateSystemFactory.CreateFlattenedSphere("Clarke 1866"' 6378206.4' 294.9786982138982' LinearUnit.Metre);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjection,The following statement contains a magic number: var ellipsoid = CoordinateSystemFactory.CreateFlattenedSphere("Clarke 1866"' 6378206.4' 294.9786982138982' LinearUnit.Metre);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("central_meridian"' -96)' 			                         new ProjectionParameter("latitude_of_center"' 23)' 			                         new ProjectionParameter("standard_parallel_1"' 29.5)' 			                         new ProjectionParameter("standard_parallel_2"' 45.5)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("central_meridian"' -96)' 			                         new ProjectionParameter("latitude_of_center"' 23)' 			                         new ProjectionParameter("standard_parallel_1"' 29.5)' 			                         new ProjectionParameter("standard_parallel_2"' 45.5)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("central_meridian"' -96)' 			                         new ProjectionParameter("latitude_of_center"' 23)' 			                         new ProjectionParameter("standard_parallel_1"' 29.5)' 			                         new ProjectionParameter("standard_parallel_2"' 45.5)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("central_meridian"' -96)' 			                         new ProjectionParameter("latitude_of_center"' 23)' 			                         new ProjectionParameter("standard_parallel_1"' 29.5)' 			                         new ProjectionParameter("standard_parallel_2"' 45.5)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("central_meridian"' -96)' 			                         new ProjectionParameter("latitude_of_center"' 23)' 			                         new ProjectionParameter("standard_parallel_1"' 29.5)' 			                         new ProjectionParameter("standard_parallel_2"' 45.5)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjection,The following statement contains a magic number: double[] pGeo = new double[] { -75' 35 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjection,The following statement contains a magic number: double[] pGeo = new double[] { -75' 35 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjection,The following statement contains a magic number: double[] expected = new[] { 1885472.7' 1535925 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjection,The following statement contains a magic number: double[] expected = new[] { 1885472.7' 1535925 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjection,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pUtm' expected' 0.05)' TransformationError("Albers"' expected' pUtm' false));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjection,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pGeo' pGeo2' 0.0000001)' TransformationError("Albers"' pGeo' pGeo2' true));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjectionFeet,The following statement contains a magic number: var ellipsoid = CoordinateSystemFactory.CreateFlattenedSphere("Clarke 1866"' 6378206.4' 294.9786982138982' LinearUnit.Metre);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjectionFeet,The following statement contains a magic number: var ellipsoid = CoordinateSystemFactory.CreateFlattenedSphere("Clarke 1866"' 6378206.4' 294.9786982138982' LinearUnit.Metre);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjectionFeet,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("central_meridian"' -96)' 			                         new ProjectionParameter("latitude_of_center"' 23)' 			                         new ProjectionParameter("standard_parallel_1"' 29.5)' 			                         new ProjectionParameter("standard_parallel_2"' 45.5)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjectionFeet,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("central_meridian"' -96)' 			                         new ProjectionParameter("latitude_of_center"' 23)' 			                         new ProjectionParameter("standard_parallel_1"' 29.5)' 			                         new ProjectionParameter("standard_parallel_2"' 45.5)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjectionFeet,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("central_meridian"' -96)' 			                         new ProjectionParameter("latitude_of_center"' 23)' 			                         new ProjectionParameter("standard_parallel_1"' 29.5)' 			                         new ProjectionParameter("standard_parallel_2"' 45.5)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjectionFeet,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("central_meridian"' -96)' 			                         new ProjectionParameter("latitude_of_center"' 23)' 			                         new ProjectionParameter("standard_parallel_1"' 29.5)' 			                         new ProjectionParameter("standard_parallel_2"' 45.5)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjectionFeet,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("central_meridian"' -96)' 			                         new ProjectionParameter("latitude_of_center"' 23)' 			                         new ProjectionParameter("standard_parallel_1"' 29.5)' 			                         new ProjectionParameter("standard_parallel_2"' 45.5)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjectionFeet,The following statement contains a magic number: double[] pGeo = new double[] { -75' 35 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjectionFeet,The following statement contains a magic number: double[] pGeo = new double[] { -75' 35 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjectionFeet,The following statement contains a magic number: double[] expected = new[] { 1885472.7 / LinearUnit.Foot.MetersPerUnit' 1535925 / LinearUnit.Foot.MetersPerUnit };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjectionFeet,The following statement contains a magic number: double[] expected = new[] { 1885472.7 / LinearUnit.Foot.MetersPerUnit' 1535925 / LinearUnit.Foot.MetersPerUnit };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjectionFeet,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pUtm' expected' 0.1)' TransformationError("Albers"' expected' pUtm' false));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestAlbersProjectionFeet,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pGeo' pGeo2' 0.0000001)' TransformationError("Albers"' pGeo' pGeo2' true));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection,The following statement contains a magic number: var ellipsoid = CoordinateSystemFactory.CreateFlattenedSphere("Bessel 1840"' 6377397.155' 299.15281' LinearUnit.Metre);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection,The following statement contains a magic number: var ellipsoid = CoordinateSystemFactory.CreateFlattenedSphere("Bessel 1840"' 6377397.155' 299.15281' LinearUnit.Metre);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 0)' 			                         new ProjectionParameter("central_meridian"' 110)' 			                         new ProjectionParameter("scale_factor"' 0.997)' 			                         new ProjectionParameter("false_easting"' 3900000)' 			                         new ProjectionParameter("false_northing"' 900000) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 0)' 			                         new ProjectionParameter("central_meridian"' 110)' 			                         new ProjectionParameter("scale_factor"' 0.997)' 			                         new ProjectionParameter("false_easting"' 3900000)' 			                         new ProjectionParameter("false_northing"' 900000) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 0)' 			                         new ProjectionParameter("central_meridian"' 110)' 			                         new ProjectionParameter("scale_factor"' 0.997)' 			                         new ProjectionParameter("false_easting"' 3900000)' 			                         new ProjectionParameter("false_northing"' 900000) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 0)' 			                         new ProjectionParameter("central_meridian"' 110)' 			                         new ProjectionParameter("scale_factor"' 0.997)' 			                         new ProjectionParameter("false_easting"' 3900000)' 			                         new ProjectionParameter("false_northing"' 900000) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 0)' 			                         new ProjectionParameter("central_meridian"' 110)' 			                         new ProjectionParameter("scale_factor"' 0.997)' 			                         new ProjectionParameter("false_easting"' 3900000)' 			                         new ProjectionParameter("false_northing"' 900000) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection,The following statement contains a magic number: double[] pGeo = new double[] { 120' -3 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection,The following statement contains a magic number: double[] pGeo = new double[] { 120' -3 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection,The following statement contains a magic number: double[] expected = new[] { 5009726.58' 569150.82 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection,The following statement contains a magic number: double[] expected = new[] { 5009726.58' 569150.82 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pUtm' expected' 0.02)' TransformationError("Mercator_1SP"' expected' pUtm' false));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pGeo' pGeo2' 0.0000001)' TransformationError("Mercator_1SP"' pGeo' pGeo2' true));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection_Feet,The following statement contains a magic number: var ellipsoid = CoordinateSystemFactory.CreateFlattenedSphere("Bessel 1840"' 6377397.155' 299.15281' LinearUnit.Metre);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection_Feet,The following statement contains a magic number: var ellipsoid = CoordinateSystemFactory.CreateFlattenedSphere("Bessel 1840"' 6377397.155' 299.15281' LinearUnit.Metre);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection_Feet,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 0)' 			                         new ProjectionParameter("central_meridian"' 110)' 			                         new ProjectionParameter("scale_factor"' 0.997)' 			                         new ProjectionParameter("false_easting"' 3900000/LinearUnit.Foot.MetersPerUnit)' 			                         new ProjectionParameter("false_northing"' 900000/LinearUnit.Foot.MetersPerUnit) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection_Feet,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 0)' 			                         new ProjectionParameter("central_meridian"' 110)' 			                         new ProjectionParameter("scale_factor"' 0.997)' 			                         new ProjectionParameter("false_easting"' 3900000/LinearUnit.Foot.MetersPerUnit)' 			                         new ProjectionParameter("false_northing"' 900000/LinearUnit.Foot.MetersPerUnit) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection_Feet,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 0)' 			                         new ProjectionParameter("central_meridian"' 110)' 			                         new ProjectionParameter("scale_factor"' 0.997)' 			                         new ProjectionParameter("false_easting"' 3900000/LinearUnit.Foot.MetersPerUnit)' 			                         new ProjectionParameter("false_northing"' 900000/LinearUnit.Foot.MetersPerUnit) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection_Feet,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 0)' 			                         new ProjectionParameter("central_meridian"' 110)' 			                         new ProjectionParameter("scale_factor"' 0.997)' 			                         new ProjectionParameter("false_easting"' 3900000/LinearUnit.Foot.MetersPerUnit)' 			                         new ProjectionParameter("false_northing"' 900000/LinearUnit.Foot.MetersPerUnit) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection_Feet,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 0)' 			                         new ProjectionParameter("central_meridian"' 110)' 			                         new ProjectionParameter("scale_factor"' 0.997)' 			                         new ProjectionParameter("false_easting"' 3900000/LinearUnit.Foot.MetersPerUnit)' 			                         new ProjectionParameter("false_northing"' 900000/LinearUnit.Foot.MetersPerUnit) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection_Feet,The following statement contains a magic number: double[] pGeo = new[] { 120d' -3d };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection_Feet,The following statement contains a magic number: double[] pGeo = new[] { 120d' -3d };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection_Feet,The following statement contains a magic number: double[] expected = new[] { 5009726.58 / LinearUnit.Foot.MetersPerUnit' 569150.82 / LinearUnit.Foot.MetersPerUnit };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection_Feet,The following statement contains a magic number: double[] expected = new[] { 5009726.58 / LinearUnit.Foot.MetersPerUnit' 569150.82 / LinearUnit.Foot.MetersPerUnit };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection_Feet,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pUtm' expected' 0.02)' TransformationError("Mercator_1SP"' expected' pUtm' false));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_1SP_Projection_Feet,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pGeo' pGeo2' 0.0000001)' TransformationError("Mercator_1SP"' pGeo' pGeo2' true));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_2SP_Projection,The following statement contains a magic number: var ellipsoid = CoordinateSystemFactory.CreateFlattenedSphere("Krassowski 1940"' 6378245.0' 298.3' LinearUnit.Metre);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_2SP_Projection,The following statement contains a magic number: var ellipsoid = CoordinateSystemFactory.CreateFlattenedSphere("Krassowski 1940"' 6378245.0' 298.3' LinearUnit.Metre);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_2SP_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 42)' 			                         new ProjectionParameter("central_meridian"' 51)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_2SP_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 42)' 			                         new ProjectionParameter("central_meridian"' 51)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_2SP_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 42)' 			                         new ProjectionParameter("central_meridian"' 51)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_2SP_Projection,The following statement contains a magic number: double[] pGeo = new[] { 53d' 53d };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_2SP_Projection,The following statement contains a magic number: double[] pGeo = new[] { 53d' 53d };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_2SP_Projection,The following statement contains a magic number: double[] expected = new[] { 165704.29' 5171848.07 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_2SP_Projection,The following statement contains a magic number: double[] expected = new[] { 165704.29' 5171848.07 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_2SP_Projection,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pUtm' expected' 0.02)' TransformationError("Mercator_2SP"' expected' pUtm' false));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestMercator_2SP_Projection,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pGeo' pGeo2' 0.0000001)' TransformationError("Mercator_2SP"' pGeo' pGeo2' true));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransverseMercator_Projection,The following statement contains a magic number: var ellipsoid = CoordinateSystemFactory.CreateFlattenedSphere("Airy 1830"' 6377563.396' 299.32496' LinearUnit.Metre);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransverseMercator_Projection,The following statement contains a magic number: var ellipsoid = CoordinateSystemFactory.CreateFlattenedSphere("Airy 1830"' 6377563.396' 299.32496' LinearUnit.Metre);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransverseMercator_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 49)' 			                         new ProjectionParameter("central_meridian"' -2)' 			                         new ProjectionParameter("scale_factor"' 0.9996012717 /* 0.9996*/)' 			                         new ProjectionParameter("false_easting"' 400000)' 			                         new ProjectionParameter("false_northing"' -100000) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransverseMercator_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 49)' 			                         new ProjectionParameter("central_meridian"' -2)' 			                         new ProjectionParameter("scale_factor"' 0.9996012717 /* 0.9996*/)' 			                         new ProjectionParameter("false_easting"' 400000)' 			                         new ProjectionParameter("false_northing"' -100000) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransverseMercator_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 49)' 			                         new ProjectionParameter("central_meridian"' -2)' 			                         new ProjectionParameter("scale_factor"' 0.9996012717 /* 0.9996*/)' 			                         new ProjectionParameter("false_easting"' 400000)' 			                         new ProjectionParameter("false_northing"' -100000) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransverseMercator_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 49)' 			                         new ProjectionParameter("central_meridian"' -2)' 			                         new ProjectionParameter("scale_factor"' 0.9996012717 /* 0.9996*/)' 			                         new ProjectionParameter("false_easting"' 400000)' 			                         new ProjectionParameter("false_northing"' -100000) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransverseMercator_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 49)' 			                         new ProjectionParameter("central_meridian"' -2)' 			                         new ProjectionParameter("scale_factor"' 0.9996012717 /* 0.9996*/)' 			                         new ProjectionParameter("false_easting"' 400000)' 			                         new ProjectionParameter("false_northing"' -100000) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransverseMercator_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 49)' 			                         new ProjectionParameter("central_meridian"' -2)' 			                         new ProjectionParameter("scale_factor"' 0.9996012717 /* 0.9996*/)' 			                         new ProjectionParameter("false_easting"' 400000)' 			                         new ProjectionParameter("false_northing"' -100000) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransverseMercator_Projection,The following statement contains a magic number: double[] pGeo = new[] { 0.5' 50.5 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransverseMercator_Projection,The following statement contains a magic number: double[] pGeo = new[] { 0.5' 50.5 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransverseMercator_Projection,The following statement contains a magic number: double[] expected = new[] { 577274.98' 69740.49 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransverseMercator_Projection,The following statement contains a magic number: double[] expected = new[] { 577274.98' 69740.49 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransverseMercator_Projection,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pUtm' expected' 0.01)' TransformationError("TransverseMercator"' expected' pUtm));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransverseMercator_Projection,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pGeo' pGeo2' 1E-6)' TransformationError("TransverseMercator"' pGeo' pGeo2' true));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestLambertConicConformal2SP_Projection,The following statement contains a magic number: var ellipsoid = /*Ellipsoid.Clarke1866;*/                 CoordinateSystemFactory.CreateFlattenedSphere("Clarke 1866"' 20925832.16' 294.97470' LinearUnit.USSurveyFoot);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestLambertConicConformal2SP_Projection,The following statement contains a magic number: var ellipsoid = /*Ellipsoid.Clarke1866;*/                 CoordinateSystemFactory.CreateFlattenedSphere("Clarke 1866"' 20925832.16' 294.97470' LinearUnit.USSurveyFoot);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestLambertConicConformal2SP_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 27.833333333)' 			                         new ProjectionParameter("central_meridian"' -99)' 			                         new ProjectionParameter("standard_parallel_1"' 28.3833333333)' 			                         new ProjectionParameter("standard_parallel_2"' 30.2833333333)' 			                         new ProjectionParameter("false_easting"' 2000000/LinearUnit.USSurveyFoot.MetersPerUnit)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestLambertConicConformal2SP_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 27.833333333)' 			                         new ProjectionParameter("central_meridian"' -99)' 			                         new ProjectionParameter("standard_parallel_1"' 28.3833333333)' 			                         new ProjectionParameter("standard_parallel_2"' 30.2833333333)' 			                         new ProjectionParameter("false_easting"' 2000000/LinearUnit.USSurveyFoot.MetersPerUnit)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestLambertConicConformal2SP_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 27.833333333)' 			                         new ProjectionParameter("central_meridian"' -99)' 			                         new ProjectionParameter("standard_parallel_1"' 28.3833333333)' 			                         new ProjectionParameter("standard_parallel_2"' 30.2833333333)' 			                         new ProjectionParameter("false_easting"' 2000000/LinearUnit.USSurveyFoot.MetersPerUnit)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestLambertConicConformal2SP_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 27.833333333)' 			                         new ProjectionParameter("central_meridian"' -99)' 			                         new ProjectionParameter("standard_parallel_1"' 28.3833333333)' 			                         new ProjectionParameter("standard_parallel_2"' 30.2833333333)' 			                         new ProjectionParameter("false_easting"' 2000000/LinearUnit.USSurveyFoot.MetersPerUnit)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestLambertConicConformal2SP_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 27.833333333)' 			                         new ProjectionParameter("central_meridian"' -99)' 			                         new ProjectionParameter("standard_parallel_1"' 28.3833333333)' 			                         new ProjectionParameter("standard_parallel_2"' 30.2833333333)' 			                         new ProjectionParameter("false_easting"' 2000000/LinearUnit.USSurveyFoot.MetersPerUnit)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestLambertConicConformal2SP_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 27.833333333)' 			                         new ProjectionParameter("central_meridian"' -99)' 			                         new ProjectionParameter("standard_parallel_1"' 28.3833333333)' 			                         new ProjectionParameter("standard_parallel_2"' 30.2833333333)' 			                         new ProjectionParameter("false_easting"' 2000000/LinearUnit.USSurveyFoot.MetersPerUnit)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestLambertConicConformal2SP_Projection,The following statement contains a magic number: double[] pGeo = new[] { -96' 28.5 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestLambertConicConformal2SP_Projection,The following statement contains a magic number: double[] pGeo = new[] { -96' 28.5 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestLambertConicConformal2SP_Projection,The following statement contains a magic number: double[] expected = new[] { 2963503.91 / LinearUnit.USSurveyFoot.MetersPerUnit' 254759.80 / LinearUnit.USSurveyFoot.MetersPerUnit };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestLambertConicConformal2SP_Projection,The following statement contains a magic number: double[] expected = new[] { 2963503.91 / LinearUnit.USSurveyFoot.MetersPerUnit' 254759.80 / LinearUnit.USSurveyFoot.MetersPerUnit };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestLambertConicConformal2SP_Projection,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pUtm' expected' 0.05)' TransformationError("LambertConicConformal2SP"' expected' pUtm));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestLambertConicConformal2SP_Projection,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pGeo' pGeo2' 0.0000001)' TransformationError("LambertConicConformal2SP"' pGeo' pGeo2' true));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestGeocentric,The following statement contains a magic number: double[] pExpected = new[] { 2 + 7.0 / 60 + 46.38 / 3600' 53 + 48.0 / 60 + 33.82/3600 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestGeocentric,The following statement contains a magic number: double[] pExpected = new[] { 2 + 7.0 / 60 + 46.38 / 3600' 53 + 48.0 / 60 + 33.82/3600 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestGeocentric,The following statement contains a magic number: double[] pExpected = new[] { 2 + 7.0 / 60 + 46.38 / 3600' 53 + 48.0 / 60 + 33.82/3600 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestGeocentric,The following statement contains a magic number: double[] pExpected = new[] { 2 + 7.0 / 60 + 46.38 / 3600' 53 + 48.0 / 60 + 33.82/3600 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestGeocentric,The following statement contains a magic number: double[] pExpected = new[] { 2 + 7.0 / 60 + 46.38 / 3600' 53 + 48.0 / 60 + 33.82/3600 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestGeocentric,The following statement contains a magic number: double[] pExpected = new[] { 2 + 7.0 / 60 + 46.38 / 3600' 53 + 48.0 / 60 + 33.82/3600 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestGeocentric,The following statement contains a magic number: double[] pExpected = new[] { 2 + 7.0 / 60 + 46.38 / 3600' 53 + 48.0 / 60 + 33.82/3600 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestGeocentric,The following statement contains a magic number: double[] pExpected = new[] { 2 + 7.0 / 60 + 46.38 / 3600' 53 + 48.0 / 60 + 33.82/3600 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestGeocentric,The following statement contains a magic number: double[] pExpected = new[] { 2 + 7.0 / 60 + 46.38 / 3600' 53 + 48.0 / 60 + 33.82/3600 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestGeocentric,The following statement contains a magic number: double[] pExpected = new[] { 2 + 7.0 / 60 + 46.38 / 3600' 53 + 48.0 / 60 + 33.82/3600 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestGeocentric,The following statement contains a magic number: double[] pExpected3D = new[] { pExpected[0]' pExpected[1]' 73.0 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestGeocentric,The following statement contains a magic number: double[] p0 = new[] { 3771793.97' 140253.34' 5124304.35 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestGeocentric,The following statement contains a magic number: double[] p0 = new[] { 3771793.97' 140253.34' 5124304.35 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestGeocentric,The following statement contains a magic number: double[] p0 = new[] { 3771793.97' 140253.34' 5124304.35 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestGeocentric,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(p1' p0' 0.01));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestGeocentric,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(p2' pExpected' 0.00001));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: wgs72.Wgs84Parameters = new Wgs84ConversionInfo(0' 0' 4.5' 0' 0' 0.554' 0.219);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: wgs72.Wgs84Parameters = new Wgs84ConversionInfo(0' 0' 4.5' 0' 0' 0.554' 0.219);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: wgs72.Wgs84Parameters = new Wgs84ConversionInfo(0' 0' 4.5' 0' 0' 0.554' 0.219);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: ed50.Wgs84Parameters = new Wgs84ConversionInfo(-81.0703' -89.3603' -115.7526'                                                            -0.48488' -0.02436' -0.41321'                                                            -0.540645);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: ed50.Wgs84Parameters = new Wgs84ConversionInfo(-81.0703' -89.3603' -115.7526'                                                            -0.48488' -0.02436' -0.41321'                                                            -0.540645);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: ed50.Wgs84Parameters = new Wgs84ConversionInfo(-81.0703' -89.3603' -115.7526'                                                            -0.48488' -0.02436' -0.41321'                                                            -0.540645);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: ed50.Wgs84Parameters = new Wgs84ConversionInfo(-81.0703' -89.3603' -115.7526'                                                            -0.48488' -0.02436' -0.41321'                                                            -0.540645);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: ed50.Wgs84Parameters = new Wgs84ConversionInfo(-81.0703' -89.3603' -115.7526'                                                            -0.48488' -0.02436' -0.41321'                                                            -0.540645);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: ed50.Wgs84Parameters = new Wgs84ConversionInfo(-81.0703' -89.3603' -115.7526'                                                            -0.48488' -0.02436' -0.41321'                                                            -0.540645);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: ed50.Wgs84Parameters = new Wgs84ConversionInfo(-81.0703' -89.3603' -115.7526'                                                            -0.48488' -0.02436' -0.41321'                                                            -0.540645);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 0)' 			                         new ProjectionParameter("central_meridian"' 9)' 			                         new ProjectionParameter("scale_factor"' 0.9996)' 			                         new ProjectionParameter("false_easting"' 500000)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 0)' 			                         new ProjectionParameter("central_meridian"' 9)' 			                         new ProjectionParameter("scale_factor"' 0.9996)' 			                         new ProjectionParameter("false_easting"' 500000)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 0)' 			                         new ProjectionParameter("central_meridian"' 9)' 			                         new ProjectionParameter("scale_factor"' 0.9996)' 			                         new ProjectionParameter("false_easting"' 500000)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_origin"' 0)' 			                         new ProjectionParameter("central_meridian"' 9)' 			                         new ProjectionParameter("scale_factor"' 0.9996)' 			                         new ProjectionParameter("false_easting"' 500000)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: double[] pGeoCenWGS72 = new[] {3657660.66' 255768.55' 5201382.11};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: double[] pGeoCenWGS72 = new[] {3657660.66' 255768.55' 5201382.11};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: double[] pGeoCenWGS72 = new[] {3657660.66' 255768.55' 5201382.11};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: double[] pExpected = new[] {3657660.78' 255778.43' 5201387.75};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: double[] pExpected = new[] {3657660.78' 255778.43' 5201387.75};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: double[] pExpected = new[] {3657660.78' 255778.43' 5201387.75};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pExpected' pGeoCenWGS84' 0.01)' TransformationError("Datum WGS72->WGS84"' pExpected' pGeoCenWGS84));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pGeoCenWGS72' pGeoCenWGS72calc' 0.001)' TransformationError("Datum WGS84->WGS72"' pGeoCenWGS72' pGeoCenWGS72calc));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: double[] pUTMED50 = new double[] {600000' 6100000};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: double[] pUTMED50 = new double[] {600000' 6100000};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: pExpected = new[] { 599928.6' 6099790.2};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: pExpected = new[] { 599928.6' 6099790.2};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pExpected' pUTMWGS84' 0.1)' TransformationError("Datum ED50->WGS84"' pExpected' pUTMWGS84));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pUTMED50' pUTMED50calc' 0.01)' TransformationError("Datum WGS84->ED50"' pUTMED50' pUTMED50calc));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: pExpected = new double[] {600000' 6100000};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: pExpected = new double[] {600000' 6100000};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pExpected' pUTMED50' 0.1)' TransformationError("Datum"' pExpected' pUTMED50));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestDatumTransform,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pUTMWGS84' pUTMWGS84calc' 0.1)' TransformationError("Datum"' pUTMWGS84' pUTMWGS84calc));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: var ellipsoid = CoordinateSystemFactory.CreateFlattenedSphere("Bessel 1840"' 6377397.155' 299.15281' LinearUnit.Metre);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: var ellipsoid = CoordinateSystemFactory.CreateFlattenedSphere("Bessel 1840"' 6377397.155' 299.15281' LinearUnit.Metre);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: datum.Wgs84Parameters = new Wgs84ConversionInfo(570.8' 85.7' 462.8' 4.998' 1.587' 5.261' 3.56);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: datum.Wgs84Parameters = new Wgs84ConversionInfo(570.8' 85.7' 462.8' 4.998' 1.587' 5.261' 3.56);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: datum.Wgs84Parameters = new Wgs84ConversionInfo(570.8' 85.7' 462.8' 4.998' 1.587' 5.261' 3.56);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: datum.Wgs84Parameters = new Wgs84ConversionInfo(570.8' 85.7' 462.8' 4.998' 1.587' 5.261' 3.56);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: datum.Wgs84Parameters = new Wgs84ConversionInfo(570.8' 85.7' 462.8' 4.998' 1.587' 5.261' 3.56);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: datum.Wgs84Parameters = new Wgs84ConversionInfo(570.8' 85.7' 462.8' 4.998' 1.587' 5.261' 3.56);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: datum.Wgs84Parameters = new Wgs84ConversionInfo(570.8' 85.7' 462.8' 4.998' 1.587' 5.261' 3.56);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_center"' 49.5)' 			                         new ProjectionParameter("longitude_of_center"' 24.83333333333333)' 			                         new ProjectionParameter("azimuth"' 30.28813972222222)' 			                         new ProjectionParameter("pseudo_standard_parallel_1"' 78.5)' 			                         new ProjectionParameter("scale_factor"' 0.9999)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_center"' 49.5)' 			                         new ProjectionParameter("longitude_of_center"' 24.83333333333333)' 			                         new ProjectionParameter("azimuth"' 30.28813972222222)' 			                         new ProjectionParameter("pseudo_standard_parallel_1"' 78.5)' 			                         new ProjectionParameter("scale_factor"' 0.9999)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_center"' 49.5)' 			                         new ProjectionParameter("longitude_of_center"' 24.83333333333333)' 			                         new ProjectionParameter("azimuth"' 30.28813972222222)' 			                         new ProjectionParameter("pseudo_standard_parallel_1"' 78.5)' 			                         new ProjectionParameter("scale_factor"' 0.9999)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_center"' 49.5)' 			                         new ProjectionParameter("longitude_of_center"' 24.83333333333333)' 			                         new ProjectionParameter("azimuth"' 30.28813972222222)' 			                         new ProjectionParameter("pseudo_standard_parallel_1"' 78.5)' 			                         new ProjectionParameter("scale_factor"' 0.9999)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_center"' 49.5)' 			                         new ProjectionParameter("longitude_of_center"' 24.83333333333333)' 			                         new ProjectionParameter("azimuth"' 30.28813972222222)' 			                         new ProjectionParameter("pseudo_standard_parallel_1"' 78.5)' 			                         new ProjectionParameter("scale_factor"' 0.9999)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_center"' 49.5)' 			                         new ProjectionParameter("longitude_of_center"' 24.83333333333333)' 			                         new ProjectionParameter("azimuth"' 30.28813972222222)' 			                         new ProjectionParameter("pseudo_standard_parallel_1"' 78.5)' 			                         new ProjectionParameter("scale_factor"' 0.9999)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: double[] pGeo = new[] { 12d' 48d };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: double[] pGeo = new[] { 12d' 48d };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: double[] expected = new[] { -953116.2548718402' -1245513.5788112187 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: double[] expected = new[] { -953116.2548718402' -1245513.5788112187 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pUtm' expected' 0.2)' TransformationError("Krovak"' expected' pUtm));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pGeo' pGeo2' 0.001)' TransformationError("Krovak"' pGeo' pGeo2' true));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: pGeo = new double[] { 18' 49 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: pGeo = new double[] { 18' 49 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: expected = new double[] { -499143.4909304862' -1192340.009253714 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: expected = new double[] { -499143.4909304862' -1192340.009253714 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pUtm' expected' 0.2)' TransformationError("Krovak"' expected' pUtm));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Greenwich_Projection,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pGeo' pGeo2' 0.001)' TransformationError("Krovak"' pGeo' pGeo2));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: var ellipsoid = CoordinateSystemFactory.CreateFlattenedSphere("Bessel 1840"' 6377397.155' 299.15281' LinearUnit.Metre);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: var ellipsoid = CoordinateSystemFactory.CreateFlattenedSphere("Bessel 1840"' 6377397.155' 299.15281' LinearUnit.Metre);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: datum.Wgs84Parameters = new Wgs84ConversionInfo(570.8' 85.7' 462.8' 4.998' 1.587' 5.261' 3.56);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: datum.Wgs84Parameters = new Wgs84ConversionInfo(570.8' 85.7' 462.8' 4.998' 1.587' 5.261' 3.56);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: datum.Wgs84Parameters = new Wgs84ConversionInfo(570.8' 85.7' 462.8' 4.998' 1.587' 5.261' 3.56);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: datum.Wgs84Parameters = new Wgs84ConversionInfo(570.8' 85.7' 462.8' 4.998' 1.587' 5.261' 3.56);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: datum.Wgs84Parameters = new Wgs84ConversionInfo(570.8' 85.7' 462.8' 4.998' 1.587' 5.261' 3.56);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: datum.Wgs84Parameters = new Wgs84ConversionInfo(570.8' 85.7' 462.8' 4.998' 1.587' 5.261' 3.56);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: datum.Wgs84Parameters = new Wgs84ConversionInfo(570.8' 85.7' 462.8' 4.998' 1.587' 5.261' 3.56);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_center"' 49.5)' 			                         new ProjectionParameter("longitude_of_center"' 42.5)' 			                         new ProjectionParameter("azimuth"' 30.28813972222222)' 			                         new ProjectionParameter("pseudo_standard_parallel_1"' 78.5)' 			                         new ProjectionParameter("scale_factor"' 0.9999)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_center"' 49.5)' 			                         new ProjectionParameter("longitude_of_center"' 42.5)' 			                         new ProjectionParameter("azimuth"' 30.28813972222222)' 			                         new ProjectionParameter("pseudo_standard_parallel_1"' 78.5)' 			                         new ProjectionParameter("scale_factor"' 0.9999)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_center"' 49.5)' 			                         new ProjectionParameter("longitude_of_center"' 42.5)' 			                         new ProjectionParameter("azimuth"' 30.28813972222222)' 			                         new ProjectionParameter("pseudo_standard_parallel_1"' 78.5)' 			                         new ProjectionParameter("scale_factor"' 0.9999)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_center"' 49.5)' 			                         new ProjectionParameter("longitude_of_center"' 42.5)' 			                         new ProjectionParameter("azimuth"' 30.28813972222222)' 			                         new ProjectionParameter("pseudo_standard_parallel_1"' 78.5)' 			                         new ProjectionParameter("scale_factor"' 0.9999)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_center"' 49.5)' 			                         new ProjectionParameter("longitude_of_center"' 42.5)' 			                         new ProjectionParameter("azimuth"' 30.28813972222222)' 			                         new ProjectionParameter("pseudo_standard_parallel_1"' 78.5)' 			                         new ProjectionParameter("scale_factor"' 0.9999)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: var parameters = new List<ProjectionParameter>(5) 			                     { 			                         new ProjectionParameter("latitude_of_center"' 49.5)' 			                         new ProjectionParameter("longitude_of_center"' 42.5)' 			                         new ProjectionParameter("azimuth"' 30.28813972222222)' 			                         new ProjectionParameter("pseudo_standard_parallel_1"' 78.5)' 			                         new ProjectionParameter("scale_factor"' 0.9999)' 			                         new ProjectionParameter("false_easting"' 0)' 			                         new ProjectionParameter("false_northing"' 0) 			                     };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: double[] pGeo = new[] { 12d' 48d };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: double[] pGeo = new[] { 12d' 48d };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: double[] expected = new[] { -953116.2548718402' -1245513.5788112187 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: double[] expected = new[] { -953116.2548718402' -1245513.5788112187 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pUtm' expected' 0.2)' TransformationError("Krovak"' expected' pUtm));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pGeo' pGeo2' 0.001)' TransformationError("Krovak"' pGeo' pGeo2' true));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: pGeo = new double[] { 18' 49 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: pGeo = new double[] { 18' 49 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: expected = new double[] { -499143.4909304862' -1192340.009253714 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: expected = new double[] { -499143.4909304862' -1192340.009253714 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pUtm' expected' 0.2)' TransformationError("Krovak"' expected' pUtm));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestKrovak_Ferro_Projection,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pGeo' pGeo2' 0.001)' TransformationError("Krovak"' pGeo' pGeo2));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestObliqueStereographicProjection,The following statement contains a magic number: double[] Coord2171 = new double[] { 4615496.325851' 5605702.221723 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestObliqueStereographicProjection,The following statement contains a magic number: double[] Coord2171 = new double[] { 4615496.325851' 5605702.221723 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestObliqueStereographicProjection,The following statement contains a magic number: double[] Coord4326 = new double[] { 20.78002815042' 50.25299100927 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestObliqueStereographicProjection,The following statement contains a magic number: double[] Coord4326 = new double[] { 20.78002815042' 50.25299100927 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestObliqueStereographicProjection,The following statement contains a magic number: Assert.AreEqual(Coord4326[0]' transformedCoord4326[0]' 0.01);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestObliqueStereographicProjection,The following statement contains a magic number: Assert.AreEqual(Coord4326[1]' transformedCoord4326[1]' 0.01);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestUnitTransforms,The following statement contains a magic number: var nadUTM = SRIDReader.GetCSbyID(2868);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestUnitTransforms,The following statement contains a magic number: var wgs84GCS = SRIDReader.GetCSbyID(4326);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestUnitTransforms,The following statement contains a magic number: double[] p0 = new[] { -111.89' 34.165 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestUnitTransforms,The following statement contains a magic number: double[] p0 = new[] { -111.89' 34.165 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestUnitTransforms,The following statement contains a magic number: double[] expected = new[] { 708066.19057935325' 1151426.4460563776 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestUnitTransforms,The following statement contains a magic number: double[] expected = new[] { 708066.19057935325' 1151426.4460563776 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestUnitTransforms,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(p1' expected' 0.013)' TransformationError("Unit"' expected' p1));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestUnitTransforms,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(p0' p2' 0.0001)' TransformationError("Unit"' expected' p1' true));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestPolyconicTransforms,The following statement contains a magic number: var wgs84GCS = SRIDReader.GetCSbyID(4326);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestPolyconicTransforms,The following statement contains a magic number: double[] p0 = new[] { -50.085' -14.32 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestPolyconicTransforms,The following statement contains a magic number: double[] p0 = new[] { -50.085' -14.32 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestPolyconicTransforms,The following statement contains a magic number: double[] expected = new[] { 5422386.5795'    8412674.8723 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestPolyconicTransforms,The following statement contains a magic number: double[] expected = new[] { 5422386.5795'    8412674.8723 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestPolyconicTransforms,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(p1' expected' 50)' TransformationError("Polyconic"' expected' p1));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestPolyconicTransforms,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(p0' p2' 0.0001)' TransformationError("Polyconic"' expected' p1' true));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestCassiniSoldner,The following statement contains a magic number: Test("CassiniSoldner"' csSource' csTarget'                   new[] { 13.408055555556' 52.518611111111 }'                   new[] { 25244.540' 21300.969 }' 0.3' 1.0E-5);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestCassiniSoldner,The following statement contains a magic number: Test("CassiniSoldner"' csSource' csTarget'                   new[] { 13.408055555556' 52.518611111111 }'                   new[] { 25244.540' 21300.969 }' 0.3' 1.0E-5);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestCassiniSoldner,The following statement contains a magic number: Test("CassiniSoldner"' csSource' csTarget'                   new[] { 13.408055555556' 52.518611111111 }'                   new[] { 25244.540' 21300.969 }' 0.3' 1.0E-5);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestCassiniSoldner,The following statement contains a magic number: Test("CassiniSoldner"' csSource' csTarget'                   new[] { 13.408055555556' 52.518611111111 }'                   new[] { 25244.540' 21300.969 }' 0.3' 1.0E-5);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestCassiniSoldner,The following statement contains a magic number: Test("CassiniSoldner"' csSource' csTarget'                   new[] { 13.408055555556' 52.518611111111 }'                   new[] { 25244.540' 21300.969 }' 0.3' 1.0E-5);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestCassiniSoldner,The following statement contains a magic number: Test("CassiniSoldner"' csSource' csTarget'                   new[] { 13.408055555556' 52.518611111111 }'                   new[] { 25244.540' 21300.969 }' 0.3' 1.0E-5);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestHotineObliqueMercator,The following statement contains a magic number: Test("HotineObliqueMercator"' csSource' csTarget'                  new[] { -149.883333' 61.216667 }'                  new[] { 4136805.826' -4424019.786 }' 0.01' 1.0E-5);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestHotineObliqueMercator,The following statement contains a magic number: Test("HotineObliqueMercator"' csSource' csTarget'                  new[] { -149.883333' 61.216667 }'                  new[] { 4136805.826' -4424019.786 }' 0.01' 1.0E-5);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestHotineObliqueMercator,The following statement contains a magic number: Test("HotineObliqueMercator"' csSource' csTarget'                  new[] { -149.883333' 61.216667 }'                  new[] { 4136805.826' -4424019.786 }' 0.01' 1.0E-5);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestHotineObliqueMercator,The following statement contains a magic number: Test("HotineObliqueMercator"' csSource' csTarget'                  new[] { -149.883333' 61.216667 }'                  new[] { 4136805.826' -4424019.786 }' 0.01' 1.0E-5);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestHotineObliqueMercator,The following statement contains a magic number: Test("HotineObliqueMercator"' csSource' csTarget'                  new[] { -149.883333' 61.216667 }'                  new[] { 4136805.826' -4424019.786 }' 0.01' 1.0E-5);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestHotineObliqueMercator,The following statement contains a magic number: Test("HotineObliqueMercator"' csSource' csTarget'                  new[] { -149.883333' 61.216667 }'                  new[] { 4136805.826' -4424019.786 }' 0.01' 1.0E-5);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOnConcatenatedDoTransform,The following statement contains a magic number: var utm33 = ProjectedCoordinateSystem.WGS84_UTM(33' true);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOnConcatenatedDoTransform,The following statement contains a magic number: var coords = new XY[] {                 new XY(290586.087' 6714000)'                 new XY(290586.392' 6713996.224)'                 new XY(290590.133' 6713973.772)             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOnConcatenatedDoTransform,The following statement contains a magic number: var coords = new XY[] {                 new XY(290586.087' 6714000)'                 new XY(290586.392' 6713996.224)'                 new XY(290590.133' 6713973.772)             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOnConcatenatedDoTransform,The following statement contains a magic number: var coords = new XY[] {                 new XY(290586.087' 6714000)'                 new XY(290586.392' 6713996.224)'                 new XY(290590.133' 6713973.772)             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOnConcatenatedDoTransform,The following statement contains a magic number: var coords = new XY[] {                 new XY(290586.087' 6714000)'                 new XY(290586.392' 6713996.224)'                 new XY(290590.133' 6713973.772)             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOnConcatenatedDoTransform,The following statement contains a magic number: var coords = new XY[] {                 new XY(290586.087' 6714000)'                 new XY(290586.392' 6713996.224)'                 new XY(290590.133' 6713973.772)             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOnConcatenatedDoTransform,The following statement contains a magic number: var coords = new XY[] {                 new XY(290586.087' 6714000)'                 new XY(290586.392' 6713996.224)'                 new XY(290590.133' 6713973.772)             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOnConcatenatedDoTransform,The following statement contains a magic number: Assert.AreNotEqual(290586.087' coords[0].X);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOnConcatenatedDoTransform,The following statement contains a magic number: Assert.AreNotEqual(6714000' coords[0].Y);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOnConcatenatedDoTransformDoubleArr,The following statement contains a magic number: var utm33 = ProjectedCoordinateSystem.WGS84_UTM(33' true);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOnConcatenatedDoTransformDoubleArr,The following statement contains a magic number: var coords = new List<double[]>{                 new double[]{290586.087' 6714000}'                 new double[]{290586.392' 6713996.224}'                 new double[]{290590.133' 6713973.772}             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOnConcatenatedDoTransformDoubleArr,The following statement contains a magic number: var coords = new List<double[]>{                 new double[]{290586.087' 6714000}'                 new double[]{290586.392' 6713996.224}'                 new double[]{290590.133' 6713973.772}             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOnConcatenatedDoTransformDoubleArr,The following statement contains a magic number: var coords = new List<double[]>{                 new double[]{290586.087' 6714000}'                 new double[]{290586.392' 6713996.224}'                 new double[]{290590.133' 6713973.772}             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOnConcatenatedDoTransformDoubleArr,The following statement contains a magic number: var coords = new List<double[]>{                 new double[]{290586.087' 6714000}'                 new double[]{290586.392' 6713996.224}'                 new double[]{290590.133' 6713973.772}             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOnConcatenatedDoTransformDoubleArr,The following statement contains a magic number: var coords = new List<double[]>{                 new double[]{290586.087' 6714000}'                 new double[]{290586.392' 6713996.224}'                 new double[]{290590.133' 6713973.772}             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOnConcatenatedDoTransformDoubleArr,The following statement contains a magic number: var coords = new List<double[]>{                 new double[]{290586.087' 6714000}'                 new double[]{290586.392' 6713996.224}'                 new double[]{290590.133' 6713973.772}             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOnConcatenatedDoTransformDoubleArr,The following statement contains a magic number: Assert.AreNotEqual(290586.087' transformedCoords[0][0]);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformListOnConcatenatedDoTransformDoubleArr,The following statement contains a magic number: Assert.AreNotEqual(6714000' transformedCoords[0][1]);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,AffineTransformationTest,The following statement contains a magic number: double['] matrix = new double['] {{0.883485346527455' -0.468458794848877' 3455869.17937689}'                                                {0.468458794848877' 0.883485346527455' 5478710.88035753}'                                               {0.0 ' 0.0' 1}'};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,AffineTransformationTest,The following statement contains a magic number: double['] matrix = new double['] {{0.883485346527455' -0.468458794848877' 3455869.17937689}'                                                {0.468458794848877' 0.883485346527455' 5478710.88035753}'                                               {0.0 ' 0.0' 1}'};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,AffineTransformationTest,The following statement contains a magic number: double['] matrix = new double['] {{0.883485346527455' -0.468458794848877' 3455869.17937689}'                                                {0.468458794848877' 0.883485346527455' 5478710.88035753}'                                               {0.0 ' 0.0' 1}'};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,AffineTransformationTest,The following statement contains a magic number: double['] matrix = new double['] {{0.883485346527455' -0.468458794848877' 3455869.17937689}'                                                {0.468458794848877' 0.883485346527455' 5478710.88035753}'                                               {0.0 ' 0.0' 1}'};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,AffineTransformationTest,The following statement contains a magic number: double['] matrix = new double['] {{0.883485346527455' -0.468458794848877' 3455869.17937689}'                                                {0.468458794848877' 0.883485346527455' 5478710.88035753}'                                               {0.0 ' 0.0' 1}'};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,AffineTransformationTest,The following statement contains a magic number: double['] matrix = new double['] {{0.883485346527455' -0.468458794848877' 3455869.17937689}'                                                {0.468458794848877' 0.883485346527455' 5478710.88035753}'                                               {0.0 ' 0.0' 1}'};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,AffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (2' mt.DimSource);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,AffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (2' mt.DimTarget);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,AffineTransformationTest,The following statement contains a magic number: double[] outPt = mt.Transform (new double[] { 2040.0' 1590.0 });
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,AffineTransformationTest,The following statement contains a magic number: double[] outPt = mt.Transform (new double[] { 2040.0' 1590.0 });
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,AffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (2' outPt.Length);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,AffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (3456926.640' outPt[0]' 0.00000001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,AffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (3456926.640' outPt[0]' 0.00000001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,AffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (5481071.278' outPt[1]' 0.00000001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,AffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (5481071.278' outPt[1]' 0.00000001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: double['] matrix = new double['] {{0.883485346527455' -0.468458794848877' 3455869.17937689}'                                                {0.468458794848877' 0.883485346527455' 5478710.88035753}'                                               {0.0 ' 0.0' 1}'};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: double['] matrix = new double['] {{0.883485346527455' -0.468458794848877' 3455869.17937689}'                                                {0.468458794848877' 0.883485346527455' 5478710.88035753}'                                               {0.0 ' 0.0' 1}'};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: double['] matrix = new double['] {{0.883485346527455' -0.468458794848877' 3455869.17937689}'                                                {0.468458794848877' 0.883485346527455' 5478710.88035753}'                                               {0.0 ' 0.0' 1}'};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: double['] matrix = new double['] {{0.883485346527455' -0.468458794848877' 3455869.17937689}'                                                {0.468458794848877' 0.883485346527455' 5478710.88035753}'                                               {0.0 ' 0.0' 1}'};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: double['] matrix = new double['] {{0.883485346527455' -0.468458794848877' 3455869.17937689}'                                                {0.468458794848877' 0.883485346527455' 5478710.88035753}'                                               {0.0 ' 0.0' 1}'};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: double['] matrix = new double['] {{0.883485346527455' -0.468458794848877' 3455869.17937689}'                                                {0.468458794848877' 0.883485346527455' 5478710.88035753}'                                               {0.0 ' 0.0' 1}'};
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (2' mt.DimSource);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (2' mt.DimTarget);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: double[] outPt = mt.Transform (new double[] { 2040.0' 1590.0 });
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: double[] outPt = mt.Transform (new double[] { 2040.0' 1590.0 });
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (2' outPt.Length);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (3456926.640' outPt[0]' 0.00000001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (3456926.640' outPt[0]' 0.00000001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (5481071.278' outPt[1]' 0.00000001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (5481071.278' outPt[1]' 0.00000001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: double[] inPt = invMt.Transform (new double[] { 3456926.640' 5481071.278 });
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: double[] inPt = invMt.Transform (new double[] { 3456926.640' 5481071.278 });
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (2' inPt.Length);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (2040.0' inPt[0]' 0.00000001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (2040.0' inPt[0]' 0.00000001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (1590.0' inPt[1]' 0.00000001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (1590.0' inPt[1]' 0.00000001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: double[] outPt2 = mt.Transform (new double[] { 2040.0' 1590.0 });
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: double[] outPt2 = mt.Transform (new double[] { 2040.0' 1590.0 });
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (2' outPt2.Length);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (3456926.640' outPt2[0]' 0.00000001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (3456926.640' outPt2[0]' 0.00000001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (5481071.278' outPt2[1]' 0.00000001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,InverseAffineTransformationTest,The following statement contains a magic number: Assert.AreEqual (5481071.278' outPt2[1]' 0.00000001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformOnFittedCoordinateSystem,The following statement contains a magic number: var coords = new List<double[]>{                 new double[]{2040.0' 1590.0}'             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformOnFittedCoordinateSystem,The following statement contains a magic number: var coords = new List<double[]>{                 new double[]{2040.0' 1590.0}'             };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformOnFittedCoordinateSystem,The following statement contains a magic number: Assert.AreEqual (3456926.640' transformedCoords[0][0]' 0.00000001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformOnFittedCoordinateSystem,The following statement contains a magic number: Assert.AreEqual (3456926.640' transformedCoords[0][0]' 0.00000001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformOnFittedCoordinateSystem,The following statement contains a magic number: Assert.AreEqual (5481071.278' transformedCoords[0][1]' 0.00000001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,TestTransformOnFittedCoordinateSystem,The following statement contains a magic number: Assert.AreEqual (5481071.278' transformedCoords[0][1]' 0.00000001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,Test_EPSG_21780_PrimeMeredianTransformation,The following statement contains a magic number: double[] sourceCoord = new double[] { 160443.329034' 23582.55586 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,Test_EPSG_21780_PrimeMeredianTransformation,The following statement contains a magic number: double[] sourceCoord = new double[] { 160443.329034' 23582.55586 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,Test_EPSG_21780_PrimeMeredianTransformation,The following statement contains a magic number: double[] expectedTargetCoord = new double[] { 9.5553588867188' 47.145080566406 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,Test_EPSG_21780_PrimeMeredianTransformation,The following statement contains a magic number: double[] expectedTargetCoord = new double[] { 9.5553588867188' 47.145080566406 };
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,Test_EPSG_21780_PrimeMeredianTransformation,The following statement contains a magic number: Assert.IsTrue(transformedCoord.Length >= 2);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,Test_EPSG_21780_PrimeMeredianTransformation,The following statement contains a magic number: Assert.AreEqual(expectedTargetCoord[0]' transformedCoord[0]' 0.001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,Test_EPSG_21780_PrimeMeredianTransformation,The following statement contains a magic number: Assert.AreEqual(expectedTargetCoord[1]' transformedCoord[1]' 0.001);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,Test_EPSG_21780_PrimeMeredianTransformation,The following statement contains a magic number: Assert.IsTrue(transformedCoord.Length >= 2);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,Test_EPSG_21780_PrimeMeredianTransformation,The following statement contains a magic number: Assert.AreEqual(sourceCoord[0]' transformedCoord[0]' 0.1);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,Test_EPSG_21780_PrimeMeredianTransformation,The following statement contains a magic number: Assert.AreEqual(sourceCoord[1]' transformedCoord[1]' 0.1);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,Test_EPSG_2056_HotineObliqueMercatorAzimuthCenter_Switzerland,The following statement contains a magic number: var csTgt = SRIDReader.GetCSbyID(2056);
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,Test_EPSG_2056_HotineObliqueMercatorAzimuthCenter_Switzerland,The following statement contains a magic number: double x = 9.619803;
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,Test_EPSG_2056_HotineObliqueMercatorAzimuthCenter_Switzerland,The following statement contains a magic number: double y = 47.408735;
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,Test_EPSG_2056_HotineObliqueMercatorAzimuthCenter_Switzerland,The following statement contains a magic number: Assert.That(x' Is.EqualTo(2764607.79).Within(0.1));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,Test_EPSG_2056_HotineObliqueMercatorAzimuthCenter_Switzerland,The following statement contains a magic number: Assert.That(x' Is.EqualTo(2764607.79).Within(0.1));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,Test_EPSG_2056_HotineObliqueMercatorAzimuthCenter_Switzerland,The following statement contains a magic number: Assert.That(y' Is.EqualTo(1253167.89).Within(0.1));
Magic Number,ProjNET.Tests,CoordinateTransformTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTests.cs,Test_EPSG_2056_HotineObliqueMercatorAzimuthCenter_Switzerland,The following statement contains a magic number: Assert.That(y' Is.EqualTo(1253167.89).Within(0.1));
Magic Number,ProjNET.Tests,CoordinateTransformTestsBase,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTestsBase.cs,ToleranceLessThan,The following statement contains a magic number: double d2 = Math.Abs(p1[2] - p2[2]);
Magic Number,ProjNET.Tests,CoordinateTransformTestsBase,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTestsBase.cs,ToleranceLessThan,The following statement contains a magic number: double d2 = Math.Abs(p1[2] - p2[2]);
Magic Number,ProjNET.Tests,CoordinateTransformTestsBase,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTestsBase.cs,ToleranceLessThan,The following statement contains a magic number: p1.Length > 2 && p2.Length > 2
Magic Number,ProjNET.Tests,CoordinateTransformTestsBase,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\CoordinateTransformTestsBase.cs,ToleranceLessThan,The following statement contains a magic number: p1.Length > 2 && p2.Length > 2
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestIssue23773,The following statement contains a magic number: var csUtm18N = ProjectedCoordinateSystem.WGS84_UTM(18' true);
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestIssue23773,The following statement contains a magic number: double[] putm = new[] {307821.867d' 4219306.387d};
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestIssue23773,The following statement contains a magic number: double[] putm = new[] {307821.867d' 4219306.387d};
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestIssue23773,The following statement contains a magic number: double[] pExpected = new[] {-77.191769' 38.101147d};
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestIssue23773,The following statement contains a magic number: double[] pExpected = new[] {-77.191769' 38.101147d};
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestIssue23773,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pgeoWkt' pExpected' 0.00001d)'                 TransformationError("UTM18N -> WGS84"' pExpected' pgeo));
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestIssue23773,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pgeo' pExpected' 0.00001d)'                 TransformationError("UTM18N -> WGS84"' pExpected' pgeo));
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion351733,The following statement contains a magic number: double[] pp = new[] {14181052.913' 6435927.692};
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion351733,The following statement contains a magic number: double[] pp = new[] {14181052.913' 6435927.692};
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion351733,The following statement contains a magic number: double[] pExpected = new[] { 75.613911283608331' 57.926509119323505 };
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion351733,The following statement contains a magic number: double[] pExpected = new[] { 75.613911283608331' 57.926509119323505 };
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion351733,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pg' pExpected' 1e-6)'                 TransformationError("EPSG 28414 -> EPSG 4284"' pExpected' pg));
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion351733,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pp' pp2' 1e-3)'                 TransformationError("EPSG 28414 -> Pulkovo 1942"' pp' pp2' true));
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion352813,The following statement contains a magic number: double[] pg1 = new[] { 23.57892d' 37.94712d };
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion352813,The following statement contains a magic number: double[] pg1 = new[] { 23.57892d' 37.94712d };
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion352813,The following statement contains a magic number: double[] pExpected = new[] { 2624793.3678553337' 4571958.333297424 };
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion352813,The following statement contains a magic number: double[] pExpected = new[] { 2624793.3678553337' 4571958.333297424 };
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion352813,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pp' pExpected' 1e-9)'                 TransformationError("EPSG 4326 -> EPSG 3857"' pExpected' pp));
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion352813,The following statement contains a magic number: Assert.IsTrue(ToleranceLessThan(pg1' pg2' 1e-13)'                 TransformationError("EPSG 4326 -> EPSG 3857"' pg1' pg2' true));
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion361248_1,The following statement contains a magic number: Test("WGS 84 -> GDA94 / MGA zone 50"' csSource' csTarget' new[] { 136d' -30d }' new[] { 2349315.05731837' 6524249.91789138}' 0.05' 1.0e-4);
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion361248_1,The following statement contains a magic number: Test("WGS 84 -> GDA94 / MGA zone 50"' csSource' csTarget' new[] { 136d' -30d }' new[] { 2349315.05731837' 6524249.91789138}' 0.05' 1.0e-4);
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion361248_1,The following statement contains a magic number: Test("WGS 84 -> GDA94 / MGA zone 50"' csSource' csTarget' new[] { 136d' -30d }' new[] { 2349315.05731837' 6524249.91789138}' 0.05' 1.0e-4);
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion361248_1,The following statement contains a magic number: Test("WGS 84 -> GDA94 / MGA zone 50"' csSource' csTarget' new[] { 136d' -30d }' new[] { 2349315.05731837' 6524249.91789138}' 0.05' 1.0e-4);
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion361248_1,The following statement contains a magic number: Test("WGS 84 -> GDA94 / MGA zone 50"' csSource' csTarget' new[] { 136d' -30d }' new[] { 2349315.05731837' 6524249.91789138}' 0.05' 1.0e-4);
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion361248_1,The following statement contains a magic number: Test("WGS 84 -> GDA94 / MGA zone 50"' csSource' csTarget' new[] { 136d' -30d }' new[] { 2349315.05731837' 6524249.91789138}' 0.05' 1.0e-4);
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion361248_2,The following statement contains a magic number: var csSource = ProjectedCoordinateSystem.WGS84_UTM(18' true);
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion361248_2,The following statement contains a magic number: Test("WGS84_UTM(18'N) -> WGS84"' csSource' csTarget' new[] { 307821.867' 4219306.387 }' new[] { -77.191769' 38.101147 }' 1e-6);
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion361248_2,The following statement contains a magic number: Test("WGS84_UTM(18'N) -> WGS84"' csSource' csTarget' new[] { 307821.867' 4219306.387 }' new[] { -77.191769' 38.101147 }' 1e-6);
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion361248_2,The following statement contains a magic number: Test("WGS84_UTM(18'N) -> WGS84"' csSource' csTarget' new[] { 307821.867' 4219306.387 }' new[] { -77.191769' 38.101147 }' 1e-6);
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion361248_2,The following statement contains a magic number: Test("WGS84_UTM(18'N) -> WGS84"' csSource' csTarget' new[] { 307821.867' 4219306.387 }' new[] { -77.191769' 38.101147 }' 1e-6);
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestDiscussion361248_2,The following statement contains a magic number: Test("WGS84_UTM(18'N) -> WGS84"' csSource' csTarget' new[] { 307821.867' 4219306.387 }' new[] { -77.191769' 38.101147 }' 1e-6);
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestNtsIssue191,The following statement contains a magic number: parameters.Add(new ProjectionParameter("latitude_of_center"' 45.30916666666666));
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestNtsIssue191,The following statement contains a magic number: parameters.Add(new ProjectionParameter("longitude_of_center"' -86));
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestNtsIssue191,The following statement contains a magic number: parameters.Add(new ProjectionParameter("azimuth"' 337.25556));
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestNtsIssue191,The following statement contains a magic number: parameters.Add(new ProjectionParameter("rectified_grid_angle"' 337.25556));
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestNtsIssue191,The following statement contains a magic number: parameters.Add(new ProjectionParameter("scale_factor"' 0.9996));
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestNtsIssue191,The following statement contains a magic number: parameters.Add(new ProjectionParameter("false_easting"' 2546731.496));
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestNtsIssue191,The following statement contains a magic number: parameters.Add(new ProjectionParameter("false_northing"' -4354009.816));
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestAngularUnitsEqualParamsIssue,The following statement contains a magic number: Assert.AreEqual (pcs1.GeographicCoordinateSystem.AngularUnit.RadiansPerUnit' pcs2.GeographicCoordinateSystem.AngularUnit.RadiansPerUnit' 0.0000000000001);
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestGitHubIssue53,The following statement contains a magic number: var csUtm35N = ProjectedCoordinateSystem.WGS84_UTM(35' true);
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestGitHubIssue53,The following statement contains a magic number: double[] point = { 42.5' 24.5 };
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestGitHubIssue53,The following statement contains a magic number: double[] point = { 42.5' 24.5 };
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestGitHubIssue53,The following statement contains a magic number: Assert.AreEqual(point[0]' rBack[0]' 1e-5);
Magic Number,ProjNET.Tests,ProjNetIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\ProjNetIssues.cs,TestGitHubIssue53,The following statement contains a magic number: Assert.AreEqual(point[1]' rBack[1]' 1e-5);
Magic Number,ProjNET.Tests,SharpMapIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\SharpMapIssues.cs,TestMichiganGeoRefToWebMercator,The following statement contains a magic number: double[] ptSrc = new[] {535247.9375' 324548.09375};
Magic Number,ProjNET.Tests,SharpMapIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\SharpMapIssues.cs,TestMichiganGeoRefToWebMercator,The following statement contains a magic number: double[] ptSrc = new[] {535247.9375' 324548.09375};
Magic Number,ProjNET.Tests,SharpMapIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\SharpMapIssues.cs,TestLaea,The following statement contains a magic number: (double resX' double resY) = ((MathTransform) ct.MathTransform).Transform(16.4' 48.2);
Magic Number,ProjNET.Tests,SharpMapIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\SharpMapIssues.cs,TestLaea,The following statement contains a magic number: (double resX' double resY) = ((MathTransform) ct.MathTransform).Transform(16.4' 48.2);
Magic Number,ProjNET.Tests,SharpMapIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\SharpMapIssues.cs,TestLaea,The following statement contains a magic number: Assert.That(resX' Is.EqualTo(4796297.431434812).Within(1e-2));
Magic Number,ProjNET.Tests,SharpMapIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\SharpMapIssues.cs,TestLaea,The following statement contains a magic number: Assert.That(resX' Is.EqualTo(4796297.431434812).Within(1e-2));
Magic Number,ProjNET.Tests,SharpMapIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\SharpMapIssues.cs,TestLaea,The following statement contains a magic number: Assert.That(resY' Is.EqualTo(2807999.1539475969).Within(1e-2));
Magic Number,ProjNET.Tests,SharpMapIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\SharpMapIssues.cs,TestLaea,The following statement contains a magic number: Assert.That(resY' Is.EqualTo(2807999.1539475969).Within(1e-2));
Magic Number,ProjNET.Tests,SharpMapIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\SharpMapIssues.cs,TestLaea,The following statement contains a magic number: Assert.That(origX' Is.EqualTo(16.4).Within(1e-2));
Magic Number,ProjNET.Tests,SharpMapIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\SharpMapIssues.cs,TestLaea,The following statement contains a magic number: Assert.That(origX' Is.EqualTo(16.4).Within(1e-2));
Magic Number,ProjNET.Tests,SharpMapIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\SharpMapIssues.cs,TestLaea,The following statement contains a magic number: Assert.That(origY' Is.EqualTo(48.2).Within(1e-2));
Magic Number,ProjNET.Tests,SharpMapIssues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\SharpMapIssues.cs,TestLaea,The following statement contains a magic number: Assert.That(origY' Is.EqualTo(48.2).Within(1e-2));
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestConcatenatedTransformInvert,The following statement contains a magic number: var epsg31466 = _css.GetCoordinateSystem(31466);
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestConcatenatedTransformInvert,The following statement contains a magic number: var epsg25832 = _css.GetCoordinateSystem(25832);
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestMathTransformBug,The following statement contains a magic number: var itmParameters = new List<ProjectionParameter>             {                 new ProjectionParameter("latitude_of_origin"' 31.734393611111109123611111111111)'                 new ProjectionParameter("central_meridian"' 35.204516944444442572222222222222)'                 new ProjectionParameter("false_northing"' 626907.390)'                 new ProjectionParameter("false_easting"' 219529.584)'                 new ProjectionParameter("scale_factor"' 1.0000067)             };
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestMathTransformBug,The following statement contains a magic number: var itmParameters = new List<ProjectionParameter>             {                 new ProjectionParameter("latitude_of_origin"' 31.734393611111109123611111111111)'                 new ProjectionParameter("central_meridian"' 35.204516944444442572222222222222)'                 new ProjectionParameter("false_northing"' 626907.390)'                 new ProjectionParameter("false_easting"' 219529.584)'                 new ProjectionParameter("scale_factor"' 1.0000067)             };
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestMathTransformBug,The following statement contains a magic number: var itmParameters = new List<ProjectionParameter>             {                 new ProjectionParameter("latitude_of_origin"' 31.734393611111109123611111111111)'                 new ProjectionParameter("central_meridian"' 35.204516944444442572222222222222)'                 new ProjectionParameter("false_northing"' 626907.390)'                 new ProjectionParameter("false_easting"' 219529.584)'                 new ProjectionParameter("scale_factor"' 1.0000067)             };
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestMathTransformBug,The following statement contains a magic number: var itmParameters = new List<ProjectionParameter>             {                 new ProjectionParameter("latitude_of_origin"' 31.734393611111109123611111111111)'                 new ProjectionParameter("central_meridian"' 35.204516944444442572222222222222)'                 new ProjectionParameter("false_northing"' 626907.390)'                 new ProjectionParameter("false_easting"' 219529.584)'                 new ProjectionParameter("scale_factor"' 1.0000067)             };
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestMathTransformBug,The following statement contains a magic number: var itmParameters = new List<ProjectionParameter>             {                 new ProjectionParameter("latitude_of_origin"' 31.734393611111109123611111111111)'                 new ProjectionParameter("central_meridian"' 35.204516944444442572222222222222)'                 new ProjectionParameter("false_northing"' 626907.390)'                 new ProjectionParameter("false_easting"' 219529.584)'                 new ProjectionParameter("scale_factor"' 1.0000067)             };
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestMathTransformBug,The following statement contains a magic number: var itmDatum = coordinateSystemFactory.CreateHorizontalDatum("Isreal 1993"' DatumType.HD_Geocentric'                 Ellipsoid.GRS80' new Wgs84ConversionInfo(-24.0024' -17.1032' -17.8444' -0.33077' -1.85269' 1.66969' 5.4248));
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestMathTransformBug,The following statement contains a magic number: var itmDatum = coordinateSystemFactory.CreateHorizontalDatum("Isreal 1993"' DatumType.HD_Geocentric'                 Ellipsoid.GRS80' new Wgs84ConversionInfo(-24.0024' -17.1032' -17.8444' -0.33077' -1.85269' 1.66969' 5.4248));
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestMathTransformBug,The following statement contains a magic number: var itmDatum = coordinateSystemFactory.CreateHorizontalDatum("Isreal 1993"' DatumType.HD_Geocentric'                 Ellipsoid.GRS80' new Wgs84ConversionInfo(-24.0024' -17.1032' -17.8444' -0.33077' -1.85269' 1.66969' 5.4248));
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestMathTransformBug,The following statement contains a magic number: var itmDatum = coordinateSystemFactory.CreateHorizontalDatum("Isreal 1993"' DatumType.HD_Geocentric'                 Ellipsoid.GRS80' new Wgs84ConversionInfo(-24.0024' -17.1032' -17.8444' -0.33077' -1.85269' 1.66969' 5.4248));
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestMathTransformBug,The following statement contains a magic number: var itmDatum = coordinateSystemFactory.CreateHorizontalDatum("Isreal 1993"' DatumType.HD_Geocentric'                 Ellipsoid.GRS80' new Wgs84ConversionInfo(-24.0024' -17.1032' -17.8444' -0.33077' -1.85269' 1.66969' 5.4248));
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestMathTransformBug,The following statement contains a magic number: var itmDatum = coordinateSystemFactory.CreateHorizontalDatum("Isreal 1993"' DatumType.HD_Geocentric'                 Ellipsoid.GRS80' new Wgs84ConversionInfo(-24.0024' -17.1032' -17.8444' -0.33077' -1.85269' 1.66969' 5.4248));
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestMathTransformBug,The following statement contains a magic number: var itmDatum = coordinateSystemFactory.CreateHorizontalDatum("Isreal 1993"' DatumType.HD_Geocentric'                 Ellipsoid.GRS80' new Wgs84ConversionInfo(-24.0024' -17.1032' -17.8444' -0.33077' -1.85269' 1.66969' 5.4248));
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestMathTransformBug,The following statement contains a magic number: var wgs84 = ProjectedCoordinateSystem.WGS84_UTM(36' true).GeographicCoordinateSystem;
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestMathTransformBug,The following statement contains a magic number: var pt1a = (x: 200000.0' y: 600000.0);
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestMathTransformBug,The following statement contains a magic number: var pt1a = (x: 200000.0' y: 600000.0);
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestMathTransformBug,The following statement contains a magic number: Assert.That(pt1a.x' Is.EqualTo(pt1b.x).Within(0.01));
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestMathTransformBug,The following statement contains a magic number: Assert.That(pt1a.y' Is.EqualTo(pt1b.y).Within(0.01));
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestIssuesWith3857To25832,The following statement contains a magic number: var epsg25832 = _css.GetCoordinateSystem(25832);
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestIssuesWith3857To25832,The following statement contains a magic number: var pt25832 = (x: 702575' y: 6153153);
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestIssuesWith3857To25832,The following statement contains a magic number: var pt25832 = (x: 702575' y: 6153153);
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestIssuesWith3857To25832,The following statement contains a magic number: var pt_3857ex = (x: 1358761.89' y: 7456070.47);
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestIssuesWith3857To25832,The following statement contains a magic number: var pt_3857ex = (x: 1358761.89' y: 7456070.47);
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestIssuesWith3857To25832,The following statement contains a magic number: Assert.That(pt_3857.x' Is.EqualTo(pt_3857ex.x).Within(0.015));
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestIssuesWith3857To25832,The following statement contains a magic number: Assert.That(pt_3857.y' Is.EqualTo(pt_3857ex.y).Within(0.015));
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestIssuesWith3857To25832,The following statement contains a magic number: epsg_3857 = (ProjectedCoordinateSystem)_css.GetCoordinateSystem(3857);
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestIssuesWith3857To25832,The following statement contains a magic number: Assert.That(pt_3857.x' Is.EqualTo(pt_3857ex.x).Within(0.015));
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestIssuesWith3857To25832,The following statement contains a magic number: Assert.That(pt_3857.y' Is.EqualTo(pt_3857ex.y).Within(0.015));
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestConvertWgs84ToEPSG26910,The following statement contains a magic number: var epsg26910 = _css.GetCoordinateSystem("EPSG"' 26910);
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestConvertWgs84ToEPSG26910,The following statement contains a magic number: var epsg_4326 = _css.GetCoordinateSystem("EPSG"' 4326);
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestConvertWgs84ToEPSG26910,The following statement contains a magic number: double[] ptI = { 3523562.711189' 6246615.391161 };
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestConvertWgs84ToEPSG26910,The following statement contains a magic number: double[] ptI = { 3523562.711189' 6246615.391161 };
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestConvertWgs84ToEPSG26910,The following statement contains a magic number: Assert.That(pt1a.x' Is.EqualTo(-82.0479097).Within(0.01)' "Longitude");
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestConvertWgs84ToEPSG26910,The following statement contains a magic number: Assert.That(pt1a.x' Is.EqualTo(-82.0479097).Within(0.01)' "Longitude");
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestConvertWgs84ToEPSG26910,The following statement contains a magic number: Assert.That(pt1a.y' Is.EqualTo(48.4185597).Within(0.01)' "Latitude");
Magic Number,ProjNET.Tests.GitHub,Issues,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\GitHub\Issues.cs,TestConvertWgs84ToEPSG26910,The following statement contains a magic number: Assert.That(pt1a.y' Is.EqualTo(48.4185597).Within(0.01)' "Latitude");
Magic Number,ProjNET.Tests.Serialization,CoordinateSystemsProjectionsTest,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\Serialization\CoordinateSystemsProjectionsTest.cs,TestProjectionParameterSet,The following statement contains a magic number: var ps = new ProjNet.CoordinateSystems.Projections.ProjectionParameterSet(                 new[]                     {                         new ProjectionParameter("latitude_of_origin"' 0)'                         new ProjectionParameter("false_easting"' 500)                     }                 );
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG_2918,The following statement contains a magic number: CheckInfo(pcs' "NAD83(HARN) / Texas Central (ftUS)"' "EPSG"' 2918);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG_2918,The following statement contains a magic number: CheckInfo(gcs' "NAD83(HARN)"' "EPSG"' 4152);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG_2918,The following statement contains a magic number: CheckDatum(gcs.HorizontalDatum' "NAD83_High_Accuracy_Regional_Network"' "EPSG"' 6152);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG_2918,The following statement contains a magic number: CheckEllipsoid(gcs.HorizontalDatum.Ellipsoid' "GRS 1980"' 6378137' 298.257222101' "EPSG"' 7019);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG_2918,The following statement contains a magic number: CheckEllipsoid(gcs.HorizontalDatum.Ellipsoid' "GRS 1980"' 6378137' 298.257222101' "EPSG"' 7019);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG_2918,The following statement contains a magic number: CheckEllipsoid(gcs.HorizontalDatum.Ellipsoid' "GRS 1980"' 6378137' 298.257222101' "EPSG"' 7019);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG_2918,The following statement contains a magic number: Assert.AreEqual(new Wgs84ConversionInfo(725' 685' 536' 0' 0' 0' 0)' pcs.GeographicCoordinateSystem.HorizontalDatum.Wgs84Parameters);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG_2918,The following statement contains a magic number: Assert.AreEqual(new Wgs84ConversionInfo(725' 685' 536' 0' 0' 0' 0)' pcs.GeographicCoordinateSystem.HorizontalDatum.Wgs84Parameters);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG_2918,The following statement contains a magic number: Assert.AreEqual(new Wgs84ConversionInfo(725' 685' 536' 0' 0' 0' 0)' pcs.GeographicCoordinateSystem.HorizontalDatum.Wgs84Parameters);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG_2918,The following statement contains a magic number: CheckPrimem(gcs.PrimeMeridian' "Greenwich"' 0' "EPSG"' 8901);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG_2918,The following statement contains a magic number: CheckUnit(gcs.AngularUnit' "degree"' 0.0174532925199433' "EPSG"' 9122);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG_2918,The following statement contains a magic number: CheckUnit(gcs.AngularUnit' "degree"' 0.0174532925199433' "EPSG"' 9122);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG_2918,The following statement contains a magic number: CheckProjection(pcs.Projection' "Lambert_Conformal_Conic_2SP"' new[]             {                 Tuple.Create("standard_parallel_1"' 31.883333333333)'                 Tuple.Create("standard_parallel_2"' 30.1166666667)'                 Tuple.Create("latitude_of_origin"' 29.6666666667)'                  Tuple.Create("central_meridian"' -100.333333333333)'                 Tuple.Create("false_easting"' 2296583.333)'                 Tuple.Create("false_northing"' 9842500d)             });
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG_2918,The following statement contains a magic number: CheckProjection(pcs.Projection' "Lambert_Conformal_Conic_2SP"' new[]             {                 Tuple.Create("standard_parallel_1"' 31.883333333333)'                 Tuple.Create("standard_parallel_2"' 30.1166666667)'                 Tuple.Create("latitude_of_origin"' 29.6666666667)'                  Tuple.Create("central_meridian"' -100.333333333333)'                 Tuple.Create("false_easting"' 2296583.333)'                 Tuple.Create("false_northing"' 9842500d)             });
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG_2918,The following statement contains a magic number: CheckProjection(pcs.Projection' "Lambert_Conformal_Conic_2SP"' new[]             {                 Tuple.Create("standard_parallel_1"' 31.883333333333)'                 Tuple.Create("standard_parallel_2"' 30.1166666667)'                 Tuple.Create("latitude_of_origin"' 29.6666666667)'                  Tuple.Create("central_meridian"' -100.333333333333)'                 Tuple.Create("false_easting"' 2296583.333)'                 Tuple.Create("false_northing"' 9842500d)             });
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG_2918,The following statement contains a magic number: CheckProjection(pcs.Projection' "Lambert_Conformal_Conic_2SP"' new[]             {                 Tuple.Create("standard_parallel_1"' 31.883333333333)'                 Tuple.Create("standard_parallel_2"' 30.1166666667)'                 Tuple.Create("latitude_of_origin"' 29.6666666667)'                  Tuple.Create("central_meridian"' -100.333333333333)'                 Tuple.Create("false_easting"' 2296583.333)'                 Tuple.Create("false_northing"' 9842500d)             });
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG_2918,The following statement contains a magic number: CheckProjection(pcs.Projection' "Lambert_Conformal_Conic_2SP"' new[]             {                 Tuple.Create("standard_parallel_1"' 31.883333333333)'                 Tuple.Create("standard_parallel_2"' 30.1166666667)'                 Tuple.Create("latitude_of_origin"' 29.6666666667)'                  Tuple.Create("central_meridian"' -100.333333333333)'                 Tuple.Create("false_easting"' 2296583.333)'                 Tuple.Create("false_northing"' 9842500d)             });
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG_2918,The following statement contains a magic number: CheckProjection(pcs.Projection' "Lambert_Conformal_Conic_2SP"' new[]             {                 Tuple.Create("standard_parallel_1"' 31.883333333333)'                 Tuple.Create("standard_parallel_2"' 30.1166666667)'                 Tuple.Create("latitude_of_origin"' 29.6666666667)'                  Tuple.Create("central_meridian"' -100.333333333333)'                 Tuple.Create("false_easting"' 2296583.333)'                 Tuple.Create("false_northing"' 9842500d)             });
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG_2918,The following statement contains a magic number: CheckUnit(pcs.LinearUnit' "US survey foot"' 0.304800609601219' "EPSG"' 9003);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG_2918,The following statement contains a magic number: CheckUnit(pcs.LinearUnit' "US survey foot"' 0.304800609601219' "EPSG"' 9003);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,ParseAllWKTs,The following statement contains a magic number: Assert.That(parseCount' Is.GreaterThan(2671)' "Not all WKT was parsed");
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestCreateCoordinateTransformationForWktInCsv,The following statement contains a magic number: Assert.GreaterOrEqual(parseCount' 2556' "Not all WKT was processed");
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG27700_UnitBeforeProjection,The following statement contains a magic number: CheckInfo(pcs' "OSGB 1936 / British National Grid"' "EPSG"' 27700);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG27700_UnitBeforeProjection,The following statement contains a magic number: CheckInfo(gcs' "OSGB 1936"' "EPSG"' 4277);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG27700_UnitBeforeProjection,The following statement contains a magic number: CheckDatum(gcs.HorizontalDatum' "OSGB_1936"' "EPSG"' 6277);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG27700_UnitBeforeProjection,The following statement contains a magic number: CheckEllipsoid(gcs.HorizontalDatum.Ellipsoid' "Airy 1830"' 6377563.396' 299.3249646' "EPSG"' 7001);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG27700_UnitBeforeProjection,The following statement contains a magic number: CheckEllipsoid(gcs.HorizontalDatum.Ellipsoid' "Airy 1830"' 6377563.396' 299.3249646' "EPSG"' 7001);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG27700_UnitBeforeProjection,The following statement contains a magic number: CheckEllipsoid(gcs.HorizontalDatum.Ellipsoid' "Airy 1830"' 6377563.396' 299.3249646' "EPSG"' 7001);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG27700_UnitBeforeProjection,The following statement contains a magic number: CheckPrimem(gcs.PrimeMeridian' "Greenwich"' 0' "EPSG"' 8901);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG27700_UnitBeforeProjection,The following statement contains a magic number: CheckUnit(gcs.AngularUnit' "degree"' 0.0174532925199433' "EPSG"' 9122);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG27700_UnitBeforeProjection,The following statement contains a magic number: CheckUnit(gcs.AngularUnit' "degree"' 0.0174532925199433' "EPSG"' 9122);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG27700_UnitBeforeProjection,The following statement contains a magic number: CheckProjection(pcs.Projection' "Transverse_Mercator"' new []             {                 Tuple.Create("latitude_of_origin"' 49d)'                 Tuple.Create("central_meridian"'-2d)'                 Tuple.Create("scale_factor"'0.9996012717)'                 Tuple.Create("false_easting"'400000d)'                 Tuple.Create("false_northing"'-100000d)             });
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG27700_UnitBeforeProjection,The following statement contains a magic number: CheckProjection(pcs.Projection' "Transverse_Mercator"' new []             {                 Tuple.Create("latitude_of_origin"' 49d)'                 Tuple.Create("central_meridian"'-2d)'                 Tuple.Create("scale_factor"'0.9996012717)'                 Tuple.Create("false_easting"'400000d)'                 Tuple.Create("false_northing"'-100000d)             });
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG27700_UnitBeforeProjection,The following statement contains a magic number: CheckProjection(pcs.Projection' "Transverse_Mercator"' new []             {                 Tuple.Create("latitude_of_origin"' 49d)'                 Tuple.Create("central_meridian"'-2d)'                 Tuple.Create("scale_factor"'0.9996012717)'                 Tuple.Create("false_easting"'400000d)'                 Tuple.Create("false_northing"'-100000d)             });
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG27700_UnitBeforeProjection,The following statement contains a magic number: CheckProjection(pcs.Projection' "Transverse_Mercator"' new []             {                 Tuple.Create("latitude_of_origin"' 49d)'                 Tuple.Create("central_meridian"'-2d)'                 Tuple.Create("scale_factor"'0.9996012717)'                 Tuple.Create("false_easting"'400000d)'                 Tuple.Create("false_northing"'-100000d)             });
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG27700_UnitBeforeProjection,The following statement contains a magic number: CheckProjection(pcs.Projection' "Transverse_Mercator"' new []             {                 Tuple.Create("latitude_of_origin"' 49d)'                 Tuple.Create("central_meridian"'-2d)'                 Tuple.Create("scale_factor"'0.9996012717)'                 Tuple.Create("false_easting"'400000d)'                 Tuple.Create("false_northing"'-100000d)             });
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestProjectedCoordinateSystem_EPSG27700_UnitBeforeProjection,The following statement contains a magic number: CheckUnit(pcs.LinearUnit' "metre"' 1d' "EPSG"' 9001);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestFittedCoordinateSystemWkt,The following statement contains a magic number: Assert.AreEqual (31467' fcs.BaseCoordinateSystem.AuthorityCode);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestGeocentricCoordinateSystem,The following statement contains a magic number: Assert.That(CheckInfo(fcs' "TUREF"' "EPSG"' 5250L));
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestGeocentricCoordinateSystem,The following statement contains a magic number: Assert.That(CheckDatum(fcs.HorizontalDatum' "Turkish_National_Reference_Frame"' "EPSG"' 1057L)' Is.True);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestGeocentricCoordinateSystem,The following statement contains a magic number: Assert.That(CheckEllipsoid(fcs.HorizontalDatum.Ellipsoid' "GRS 1980"' 6378137' 298.257222101' "EPSG"' 7019)' Is.True);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestGeocentricCoordinateSystem,The following statement contains a magic number: Assert.That(CheckEllipsoid(fcs.HorizontalDatum.Ellipsoid' "GRS 1980"' 6378137' 298.257222101' "EPSG"' 7019)' Is.True);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestGeocentricCoordinateSystem,The following statement contains a magic number: Assert.That(CheckEllipsoid(fcs.HorizontalDatum.Ellipsoid' "GRS 1980"' 6378137' 298.257222101' "EPSG"' 7019)' Is.True);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestGeocentricCoordinateSystem,The following statement contains a magic number: Assert.That(CheckPrimem(fcs.PrimeMeridian' "Greenwich"' 0' "EPSG"' 8901L)' Is.True);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestGeocentricCoordinateSystem,The following statement contains a magic number: Assert.That(CheckUnit(fcs.LinearUnit' "metre"' 1' "EPSG"' 9001L)' Is.True);
Magic Number,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestGeocentricCoordinateSystem,The following statement contains a magic number: Assert.That(fcs.AuthorityCode' Is.EqualTo(5250L));
Magic Number,ProjNET.Tests.WKT,WKTMathTransformParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTMathTransformParserTests.cs,ParseAffineTransformWkt,The following statement contains a magic number: Assert.AreEqual (2' mt.DimSource);
Magic Number,ProjNET.Tests.WKT,WKTMathTransformParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTMathTransformParserTests.cs,ParseAffineTransformWkt,The following statement contains a magic number: Assert.AreEqual (2' mt.DimTarget);
Magic Number,ProjNET.Tests.WKT,WKTMathTransformParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTMathTransformParserTests.cs,ParseAffineTransformWkt,The following statement contains a magic number: Assert.AreEqual (2' outPt.Length);
Magic Number,ProjNET.Tests.WKT,WKTMathTransformParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTMathTransformParserTests.cs,ParseAffineTransformWkt,The following statement contains a magic number: Assert.AreEqual (3455869.17937689' outPt[0]' 0.00000001);
Magic Number,ProjNET.Tests.WKT,WKTMathTransformParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTMathTransformParserTests.cs,ParseAffineTransformWkt,The following statement contains a magic number: Assert.AreEqual (3455869.17937689' outPt[0]' 0.00000001);
Magic Number,ProjNET.Tests.WKT,WKTMathTransformParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTMathTransformParserTests.cs,ParseAffineTransformWkt,The following statement contains a magic number: Assert.AreEqual (5478710.88035753' outPt[1]' 0.00000001);
Magic Number,ProjNET.Tests.WKT,WKTMathTransformParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTMathTransformParserTests.cs,ParseAffineTransformWkt,The following statement contains a magic number: Assert.AreEqual (5478710.88035753' outPt[1]' 0.00000001);
Missing Default,ProjNET.Tests.WKT,SpatialRefSysTableParser,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\PostGisSpatialRefSysTableParserTest.cs,TestCreateSridCsv,The following switch statement is missing a default case: switch (srtext.Substring(0' srtext.IndexOf("[")))                         {                             case "PROJCS":                             case "GEOGCS":                             case "GEOCCS":                                 sw.WriteLine($"{srid};{srtext}");                                 break;                         }
Missing Default,ProjNET.Tests.WKT,WKTCoordSysParserTests,C:\research\architectureSmells\repos\NetTopologySuite_ProjNet4GeoAPI\test\ProjNet.Tests\WKT\WKTCoordSysParserTests.cs,TestCreateCoordinateTransformationForWktInCsv,The following switch statement is missing a default case: switch (pcs.Projection.ClassName)                                 {                                     //Skip not supported projections                                     case "Oblique_Stereographic":                                     case "Transverse_Mercator_South_Orientated":                                     case "Lambert_Conformal_Conic_1SP":                                     case "Lambert_Azimuthal_Equal_Area":                                     case "Tunisia_Mining_Grid":                                     case "New_Zealand_Map_Grid":                                     case "Polyconic":                                     case "Lambert_Conformal_Conic_2SP_Belgium":                                     case "Polar_Stereographic":                                     case "Hotine_Oblique_Mercator_Azimuth_Center":                                     case "Mercator_1SP":                                     case "Mercator_2SP":                                     case "Cylindrical_Equal_Area":                                     case "Equirectangular":                                     case "Laborde_Oblique_Mercator":                                         continue;                                 }
