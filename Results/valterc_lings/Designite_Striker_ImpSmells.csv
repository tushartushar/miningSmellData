Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Striker.Characters,NPC,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\NPC.cs,Update,Cyclomatic complexity of the method is 13
Complex Method,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,DoesClientNeedToKnowAboutObject,Cyclomatic complexity of the method is 15
Complex Method,Striker.Levels,LevelLoader,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Levels\LevelLoader.cs,LoadLevel,Cyclomatic complexity of the method is 9
Complex Method,Striker.States.Play,PlayGameState,C:\repos\valterc_lings\Striker\StrikerServer\Striker\States\Play\PlayGameState.cs,Update,Cyclomatic complexity of the method is 14
Long Parameter List,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,AcceptClient,The method has 5 parameters.
Long Parameter List,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,DoesClientNeedToKnowAboutObject,The method has 5 parameters.
Long Parameter List,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,CreateClientObject,The method has 5 parameters.
Long Statement,Striker.Characters,NPC,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\NPC.cs,MoveToRandomPosition,The length of the statement  "	if (focusedPosition == Vector2.zero || (Math.Abs (positionX - focusedPosition.x) < 2f && Math.Abs (positionY - focusedPosition.y) < 2f)) { " is 138.
Long Statement,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,CreateClientObject,The length of the statement  "	PlayerController c = new PlayerController (client' clientPlayers.FirstOrDefault (cp => cp.networkGameClient == client)); " is 120.
Long Statement,Striker.IA,StrikerHeuristic,C:\repos\valterc_lings\Striker\StrikerServer\Striker\IA\StrikerHeuristic.cs,EstimateCostToGoal,The length of the statement  "	return (int)(Math.Abs (strikerState.position.x - strikerState.goalPosition.x) + Math.Abs (strikerState.position.y - strikerState.goalPosition.y)); " is 146.
Long Statement,Striker.States.Play,PlayGameState,C:\repos\valterc_lings\Striker\StrikerServer\Striker\States\Play\PlayGameState.cs,SetSpawns,The length of the statement  "			CPlayer cplayer = gameController.clientPlayers.FirstOrDefault (cp => cp.networkGameClient == (c as Player).networkGameClient); " is 126.
Complex Conditional,Striker.States.Play,PlayGameState,C:\repos\valterc_lings\Striker\StrikerServer\Striker\States\Play\PlayGameState.cs,Update,The conditional expression  "character != bullet.character && !character.disconnected && !character.dead && bullet.CheckCollision (character)"  is complex.
Magic Number,Striker.Characters,Character,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\Character.cs,Character,The following statement contains a magic number: health = 10;  
Magic Number,Striker.Characters,Character,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\Character.cs,Character,The following statement contains a magic number: health = 10;  
Magic Number,Striker.Characters,Character,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\Character.cs,Update,The following statement contains a magic number: if (this.dead && DateTime.Now - deathTime > TimeSpan.FromSeconds (3)) {  	Respawn ();  }  
Magic Number,Striker.Characters,Character,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\Character.cs,DistanceFromOther,The following statement contains a magic number: return Math.Sqrt (Math.Pow ((this.positionX - c.positionX)' 2) + Math.Pow ((this.positionY - c.positionY)' 2));  
Magic Number,Striker.Characters,Character,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\Character.cs,DistanceFromOther,The following statement contains a magic number: return Math.Sqrt (Math.Pow ((this.positionX - c.positionX)' 2) + Math.Pow ((this.positionY - c.positionY)' 2));  
Magic Number,Striker.Characters,Character,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\Character.cs,DistanceFrom,The following statement contains a magic number: return Math.Sqrt (Math.Pow ((this.positionX - sX)' 2) + Math.Pow ((this.positionY - sY)' 2));  
Magic Number,Striker.Characters,Character,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\Character.cs,DistanceFrom,The following statement contains a magic number: return Math.Sqrt (Math.Pow ((this.positionX - sX)' 2) + Math.Pow ((this.positionY - sY)' 2));  
Magic Number,Striker.Characters,Character,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\Character.cs,Respawn,The following statement contains a magic number: this.health = 10;  
Magic Number,Striker.Characters,CPlayer,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\CPlayer.cs,Respawn,The following statement contains a magic number: player.health = 10;  
Magic Number,Striker.Characters,NPC,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\NPC.cs,Update,The following statement contains a magic number: if (enemy != null) {  	if (enemy.dead || enemy.disconnected || this.DistanceFromOther (enemy) > 15) {  		enemy = null;  	}  	else {  		if (targetPosition == Vector2.zero) {  			MoveTowardsEnemy ();  		}  		if (this.DistanceFromOther (enemy) < 5) {  			if (DateTime.Now - lastFireTime > TimeSpan.FromMilliseconds (400)) {  				lastFireTime = DateTime.Now;  				Bullet b = new Bullet (GameController.instance.level' this);  				GameController.instance.bullets.Add (b);  				GameController.instance.server.LogicProcessor.RegisterNetworkedObject (b);  			}  		}  	}  }  else {  	foreach (var item in GameController.instance.characters) {  		if (item != this) {  			if (!item.dead && !item.disconnected && this.DistanceFromOther (item) < 15) {  				enemy = item;  				focusedPosition = Vector2.zero;  			}  		}  	}  	if (enemy == null) {  		if (targetPosition == Vector2.zero) {  			MoveToRandomPosition ();  		}  	}  }  
Magic Number,Striker.Characters,NPC,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\NPC.cs,Update,The following statement contains a magic number: if (enemy != null) {  	if (enemy.dead || enemy.disconnected || this.DistanceFromOther (enemy) > 15) {  		enemy = null;  	}  	else {  		if (targetPosition == Vector2.zero) {  			MoveTowardsEnemy ();  		}  		if (this.DistanceFromOther (enemy) < 5) {  			if (DateTime.Now - lastFireTime > TimeSpan.FromMilliseconds (400)) {  				lastFireTime = DateTime.Now;  				Bullet b = new Bullet (GameController.instance.level' this);  				GameController.instance.bullets.Add (b);  				GameController.instance.server.LogicProcessor.RegisterNetworkedObject (b);  			}  		}  	}  }  else {  	foreach (var item in GameController.instance.characters) {  		if (item != this) {  			if (!item.dead && !item.disconnected && this.DistanceFromOther (item) < 15) {  				enemy = item;  				focusedPosition = Vector2.zero;  			}  		}  	}  	if (enemy == null) {  		if (targetPosition == Vector2.zero) {  			MoveToRandomPosition ();  		}  	}  }  
Magic Number,Striker.Characters,NPC,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\NPC.cs,Update,The following statement contains a magic number: if (enemy != null) {  	if (enemy.dead || enemy.disconnected || this.DistanceFromOther (enemy) > 15) {  		enemy = null;  	}  	else {  		if (targetPosition == Vector2.zero) {  			MoveTowardsEnemy ();  		}  		if (this.DistanceFromOther (enemy) < 5) {  			if (DateTime.Now - lastFireTime > TimeSpan.FromMilliseconds (400)) {  				lastFireTime = DateTime.Now;  				Bullet b = new Bullet (GameController.instance.level' this);  				GameController.instance.bullets.Add (b);  				GameController.instance.server.LogicProcessor.RegisterNetworkedObject (b);  			}  		}  	}  }  else {  	foreach (var item in GameController.instance.characters) {  		if (item != this) {  			if (!item.dead && !item.disconnected && this.DistanceFromOther (item) < 15) {  				enemy = item;  				focusedPosition = Vector2.zero;  			}  		}  	}  	if (enemy == null) {  		if (targetPosition == Vector2.zero) {  			MoveToRandomPosition ();  		}  	}  }  
Magic Number,Striker.Characters,NPC,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\NPC.cs,Update,The following statement contains a magic number: if (enemy != null) {  	if (enemy.dead || enemy.disconnected || this.DistanceFromOther (enemy) > 15) {  		enemy = null;  	}  	else {  		if (targetPosition == Vector2.zero) {  			MoveTowardsEnemy ();  		}  		if (this.DistanceFromOther (enemy) < 5) {  			if (DateTime.Now - lastFireTime > TimeSpan.FromMilliseconds (400)) {  				lastFireTime = DateTime.Now;  				Bullet b = new Bullet (GameController.instance.level' this);  				GameController.instance.bullets.Add (b);  				GameController.instance.server.LogicProcessor.RegisterNetworkedObject (b);  			}  		}  	}  }  else {  	foreach (var item in GameController.instance.characters) {  		if (item != this) {  			if (!item.dead && !item.disconnected && this.DistanceFromOther (item) < 15) {  				enemy = item;  				focusedPosition = Vector2.zero;  			}  		}  	}  	if (enemy == null) {  		if (targetPosition == Vector2.zero) {  			MoveToRandomPosition ();  		}  	}  }  
Magic Number,Striker.Characters,NPC,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\NPC.cs,Update,The following statement contains a magic number: if (enemy.dead || enemy.disconnected || this.DistanceFromOther (enemy) > 15) {  	enemy = null;  }  else {  	if (targetPosition == Vector2.zero) {  		MoveTowardsEnemy ();  	}  	if (this.DistanceFromOther (enemy) < 5) {  		if (DateTime.Now - lastFireTime > TimeSpan.FromMilliseconds (400)) {  			lastFireTime = DateTime.Now;  			Bullet b = new Bullet (GameController.instance.level' this);  			GameController.instance.bullets.Add (b);  			GameController.instance.server.LogicProcessor.RegisterNetworkedObject (b);  		}  	}  }  
Magic Number,Striker.Characters,NPC,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\NPC.cs,Update,The following statement contains a magic number: if (enemy.dead || enemy.disconnected || this.DistanceFromOther (enemy) > 15) {  	enemy = null;  }  else {  	if (targetPosition == Vector2.zero) {  		MoveTowardsEnemy ();  	}  	if (this.DistanceFromOther (enemy) < 5) {  		if (DateTime.Now - lastFireTime > TimeSpan.FromMilliseconds (400)) {  			lastFireTime = DateTime.Now;  			Bullet b = new Bullet (GameController.instance.level' this);  			GameController.instance.bullets.Add (b);  			GameController.instance.server.LogicProcessor.RegisterNetworkedObject (b);  		}  	}  }  
Magic Number,Striker.Characters,NPC,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\NPC.cs,Update,The following statement contains a magic number: if (enemy.dead || enemy.disconnected || this.DistanceFromOther (enemy) > 15) {  	enemy = null;  }  else {  	if (targetPosition == Vector2.zero) {  		MoveTowardsEnemy ();  	}  	if (this.DistanceFromOther (enemy) < 5) {  		if (DateTime.Now - lastFireTime > TimeSpan.FromMilliseconds (400)) {  			lastFireTime = DateTime.Now;  			Bullet b = new Bullet (GameController.instance.level' this);  			GameController.instance.bullets.Add (b);  			GameController.instance.server.LogicProcessor.RegisterNetworkedObject (b);  		}  	}  }  
Magic Number,Striker.Characters,NPC,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\NPC.cs,Update,The following statement contains a magic number: if (this.DistanceFromOther (enemy) < 5) {  	if (DateTime.Now - lastFireTime > TimeSpan.FromMilliseconds (400)) {  		lastFireTime = DateTime.Now;  		Bullet b = new Bullet (GameController.instance.level' this);  		GameController.instance.bullets.Add (b);  		GameController.instance.server.LogicProcessor.RegisterNetworkedObject (b);  	}  }  
Magic Number,Striker.Characters,NPC,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\NPC.cs,Update,The following statement contains a magic number: if (this.DistanceFromOther (enemy) < 5) {  	if (DateTime.Now - lastFireTime > TimeSpan.FromMilliseconds (400)) {  		lastFireTime = DateTime.Now;  		Bullet b = new Bullet (GameController.instance.level' this);  		GameController.instance.bullets.Add (b);  		GameController.instance.server.LogicProcessor.RegisterNetworkedObject (b);  	}  }  
Magic Number,Striker.Characters,NPC,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\NPC.cs,Update,The following statement contains a magic number: if (DateTime.Now - lastFireTime > TimeSpan.FromMilliseconds (400)) {  	lastFireTime = DateTime.Now;  	Bullet b = new Bullet (GameController.instance.level' this);  	GameController.instance.bullets.Add (b);  	GameController.instance.server.LogicProcessor.RegisterNetworkedObject (b);  }  
Magic Number,Striker.Characters,NPC,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\NPC.cs,Update,The following statement contains a magic number: foreach (var item in GameController.instance.characters) {  	if (item != this) {  		if (!item.dead && !item.disconnected && this.DistanceFromOther (item) < 15) {  			enemy = item;  			focusedPosition = Vector2.zero;  		}  	}  }  
Magic Number,Striker.Characters,NPC,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\NPC.cs,Update,The following statement contains a magic number: if (item != this) {  	if (!item.dead && !item.disconnected && this.DistanceFromOther (item) < 15) {  		enemy = item;  		focusedPosition = Vector2.zero;  	}  }  
Magic Number,Striker.Characters,NPC,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\NPC.cs,Update,The following statement contains a magic number: if (!item.dead && !item.disconnected && this.DistanceFromOther (item) < 15) {  	enemy = item;  	focusedPosition = Vector2.zero;  }  
Magic Number,Striker.Characters,NPC,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\NPC.cs,FacePosition,The following statement contains a magic number: rotation = (float)(Math.Atan2 (yDiff' xDiff) * (180 / Math.PI) - 90);  
Magic Number,Striker.Characters,NPC,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\NPC.cs,FacePosition,The following statement contains a magic number: rotation = (float)(Math.Atan2 (yDiff' xDiff) * (180 / Math.PI) - 90);  
Magic Number,Striker.Characters,NPC,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\NPC.cs,MoveToTargetPosition,The following statement contains a magic number: if (timeElapsed > TimeSpan.FromMilliseconds (5)) {  	moveTicker = Math.Min (moveTicker + 0.02f' 1f);  	lastMoveTick = DateTime.Now;  }  
Magic Number,Striker.Characters,NPC,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\NPC.cs,MoveToTargetPosition,The following statement contains a magic number: if (Math.Abs (positionX - targetPosition.x) < 0.01 && Math.Abs (positionY - targetPosition.y) < 0.01) {  	positionY = targetPosition.y;  	positionX = targetPosition.x;  	targetPosition = Vector2.zero;  	startPosition = Vector2.zero;  }  
Magic Number,Striker.Characters,NPC,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Characters\NPC.cs,MoveToTargetPosition,The following statement contains a magic number: if (Math.Abs (positionX - targetPosition.x) < 0.01 && Math.Abs (positionY - targetPosition.y) < 0.01) {  	positionY = targetPosition.y;  	positionX = targetPosition.x;  	targetPosition = Vector2.zero;  	startPosition = Vector2.zero;  }  
Magic Number,Striker.Elements,Bullet,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Elements\Bullet.cs,Update,The following statement contains a magic number: positionX = (float)(startPositionX + directionX * aliveTime.TotalSeconds * 8);  
Magic Number,Striker.Elements,Bullet,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Elements\Bullet.cs,Update,The following statement contains a magic number: positionY = (float)(startPositionY + directionY * aliveTime.TotalSeconds * 8);  
Magic Number,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,GetSpawnLocation,The following statement contains a magic number: foreach (var spawn in level.availableSpawns) {  	spawnFound = true;  	float sX = spawn.x * mapElementSize;  	float sY = ((level.Height - 1) - spawn.y) * mapElementSize;  	foreach (var character in characters) {  		if (character.DistanceFrom (sX' sY) < 10) {  			spawnFound = false;  			break;  		}  	}  	if (spawnFound) {  		return new SpawnPoint () {  			x = sX'  			y = sY  		};  	}  }  
Magic Number,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,GetSpawnLocation,The following statement contains a magic number: foreach (var character in characters) {  	if (character.DistanceFrom (sX' sY) < 10) {  		spawnFound = false;  		break;  	}  }  
Magic Number,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,GetSpawnLocation,The following statement contains a magic number: if (character.DistanceFrom (sX' sY) < 10) {  	spawnFound = false;  	break;  }  
Magic Number,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,DoesClientNeedToKnowAboutObject,The following statement contains a magic number: if (networkedObject is Character && characters.Contains ((Character)networkedObject)) {  	if (networkedObject is Player) {  		if ((networkedObject as Player).networkGameClient != client) {  			Character c = clientPlayers.FirstOrDefault (cp => cp.networkGameClient == client);  			if (c != null) {  				if (c.DistanceFromOther (networkedObject as Player) < 15) {  					return true;  				}  			}  		}  		return false;  	}  	else {  		Character c = clientPlayers.FirstOrDefault (cp => cp.networkGameClient == client);  		if (c != null) {  			if (c.DistanceFromOther (networkedObject as Character) < 15) {  				return true;  			}  		}  		return false;  	}  }  else {  	if (networkedObject is CPlayer) {  		return (networkedObject as CPlayer).networkGameClient == client;  	}  	else if (networkedObject is Character) {  		Character c = clientPlayers.FirstOrDefault (cp => cp.networkGameClient == client);  		if (c != null) {  			if (c.DistanceFromOther (networkedObject as Character) < 15) {  				return true;  			}  		}  		return false;  	}  }  
Magic Number,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,DoesClientNeedToKnowAboutObject,The following statement contains a magic number: if (networkedObject is Character && characters.Contains ((Character)networkedObject)) {  	if (networkedObject is Player) {  		if ((networkedObject as Player).networkGameClient != client) {  			Character c = clientPlayers.FirstOrDefault (cp => cp.networkGameClient == client);  			if (c != null) {  				if (c.DistanceFromOther (networkedObject as Player) < 15) {  					return true;  				}  			}  		}  		return false;  	}  	else {  		Character c = clientPlayers.FirstOrDefault (cp => cp.networkGameClient == client);  		if (c != null) {  			if (c.DistanceFromOther (networkedObject as Character) < 15) {  				return true;  			}  		}  		return false;  	}  }  else {  	if (networkedObject is CPlayer) {  		return (networkedObject as CPlayer).networkGameClient == client;  	}  	else if (networkedObject is Character) {  		Character c = clientPlayers.FirstOrDefault (cp => cp.networkGameClient == client);  		if (c != null) {  			if (c.DistanceFromOther (networkedObject as Character) < 15) {  				return true;  			}  		}  		return false;  	}  }  
Magic Number,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,DoesClientNeedToKnowAboutObject,The following statement contains a magic number: if (networkedObject is Character && characters.Contains ((Character)networkedObject)) {  	if (networkedObject is Player) {  		if ((networkedObject as Player).networkGameClient != client) {  			Character c = clientPlayers.FirstOrDefault (cp => cp.networkGameClient == client);  			if (c != null) {  				if (c.DistanceFromOther (networkedObject as Player) < 15) {  					return true;  				}  			}  		}  		return false;  	}  	else {  		Character c = clientPlayers.FirstOrDefault (cp => cp.networkGameClient == client);  		if (c != null) {  			if (c.DistanceFromOther (networkedObject as Character) < 15) {  				return true;  			}  		}  		return false;  	}  }  else {  	if (networkedObject is CPlayer) {  		return (networkedObject as CPlayer).networkGameClient == client;  	}  	else if (networkedObject is Character) {  		Character c = clientPlayers.FirstOrDefault (cp => cp.networkGameClient == client);  		if (c != null) {  			if (c.DistanceFromOther (networkedObject as Character) < 15) {  				return true;  			}  		}  		return false;  	}  }  
Magic Number,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,DoesClientNeedToKnowAboutObject,The following statement contains a magic number: if (networkedObject is Player) {  	if ((networkedObject as Player).networkGameClient != client) {  		Character c = clientPlayers.FirstOrDefault (cp => cp.networkGameClient == client);  		if (c != null) {  			if (c.DistanceFromOther (networkedObject as Player) < 15) {  				return true;  			}  		}  	}  	return false;  }  else {  	Character c = clientPlayers.FirstOrDefault (cp => cp.networkGameClient == client);  	if (c != null) {  		if (c.DistanceFromOther (networkedObject as Character) < 15) {  			return true;  		}  	}  	return false;  }  
Magic Number,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,DoesClientNeedToKnowAboutObject,The following statement contains a magic number: if (networkedObject is Player) {  	if ((networkedObject as Player).networkGameClient != client) {  		Character c = clientPlayers.FirstOrDefault (cp => cp.networkGameClient == client);  		if (c != null) {  			if (c.DistanceFromOther (networkedObject as Player) < 15) {  				return true;  			}  		}  	}  	return false;  }  else {  	Character c = clientPlayers.FirstOrDefault (cp => cp.networkGameClient == client);  	if (c != null) {  		if (c.DistanceFromOther (networkedObject as Character) < 15) {  			return true;  		}  	}  	return false;  }  
Magic Number,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,DoesClientNeedToKnowAboutObject,The following statement contains a magic number: if ((networkedObject as Player).networkGameClient != client) {  	Character c = clientPlayers.FirstOrDefault (cp => cp.networkGameClient == client);  	if (c != null) {  		if (c.DistanceFromOther (networkedObject as Player) < 15) {  			return true;  		}  	}  }  
Magic Number,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,DoesClientNeedToKnowAboutObject,The following statement contains a magic number: if (c != null) {  	if (c.DistanceFromOther (networkedObject as Player) < 15) {  		return true;  	}  }  
Magic Number,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,DoesClientNeedToKnowAboutObject,The following statement contains a magic number: if (c.DistanceFromOther (networkedObject as Player) < 15) {  	return true;  }  
Magic Number,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,DoesClientNeedToKnowAboutObject,The following statement contains a magic number: if (c != null) {  	if (c.DistanceFromOther (networkedObject as Character) < 15) {  		return true;  	}  }  
Magic Number,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,DoesClientNeedToKnowAboutObject,The following statement contains a magic number: if (c.DistanceFromOther (networkedObject as Character) < 15) {  	return true;  }  
Magic Number,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,DoesClientNeedToKnowAboutObject,The following statement contains a magic number: if (networkedObject is CPlayer) {  	return (networkedObject as CPlayer).networkGameClient == client;  }  else if (networkedObject is Character) {  	Character c = clientPlayers.FirstOrDefault (cp => cp.networkGameClient == client);  	if (c != null) {  		if (c.DistanceFromOther (networkedObject as Character) < 15) {  			return true;  		}  	}  	return false;  }  
Magic Number,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,DoesClientNeedToKnowAboutObject,The following statement contains a magic number: if (networkedObject is Character) {  	Character c = clientPlayers.FirstOrDefault (cp => cp.networkGameClient == client);  	if (c != null) {  		if (c.DistanceFromOther (networkedObject as Character) < 15) {  			return true;  		}  	}  	return false;  }  
Magic Number,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,DoesClientNeedToKnowAboutObject,The following statement contains a magic number: if (c != null) {  	if (c.DistanceFromOther (networkedObject as Character) < 15) {  		return true;  	}  }  
Magic Number,Striker,GameController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\GameController.cs,DoesClientNeedToKnowAboutObject,The following statement contains a magic number: if (c.DistanceFromOther (networkedObject as Character) < 15) {  	return true;  }  
Magic Number,Striker,StrikerServer,C:\repos\valterc_lings\Striker\StrikerServer\Striker\StrikerServer.cs,StrikerServer,The following statement contains a magic number: sp.MaxClients = 2;  
Magic Number,Striker,StrikerServer,C:\repos\valterc_lings\Striker\StrikerServer\Striker\StrikerServer.cs,StrikerServer,The following statement contains a magic number: sp.ListenPort = 6666;  
Magic Number,Striker.States.End,GameEndState,C:\repos\valterc_lings\Striker\StrikerServer\Striker\States\End\GameEndState.cs,OnEnter,The following statement contains a magic number: for (int i = 0; i < gameController.characters.Count; i++) {  	Character c = gameController.characters [i];  	if (c.kills >= 15) {  		foreach (var client in gameController.server.LogicProcessor.GetConnectedClients ()) {  			gameController.server.LogicProcessor.SendMessageTo (client' new MessageData () {  				Object = "GameEnd"'  				Value = c.charName + ":" + c.kills  			});  		}  		break;  	}  }  
Magic Number,Striker.States.End,GameEndState,C:\repos\valterc_lings\Striker\StrikerServer\Striker\States\End\GameEndState.cs,OnEnter,The following statement contains a magic number: if (c.kills >= 15) {  	foreach (var client in gameController.server.LogicProcessor.GetConnectedClients ()) {  		gameController.server.LogicProcessor.SendMessageTo (client' new MessageData () {  			Object = "GameEnd"'  			Value = c.charName + ":" + c.kills  		});  	}  	break;  }  
Magic Number,Striker.States.Play,PlayerController,C:\repos\valterc_lings\Striker\StrikerServer\Striker\States\Play\PlayerController.cs,Update,The following statement contains a magic number: if (spawned && DateTime.Now - SpawnTime > TimeSpan.FromMilliseconds (500)) {  	player.positionX = positionX;  	player.positionY = positionY;  	player.rotation = rotation;  }  
Magic Number,Striker.States.Play,PlayGameState,C:\repos\valterc_lings\Striker\StrikerServer\Striker\States\Play\PlayGameState.cs,Update,The following statement contains a magic number: if (!gameStarted) {  	if (DateTime.Now - gameStart > TimeSpan.FromSeconds (3)) {  		gameStarted = true;  		InitServerStuff ();  	}  	return;  }  
Magic Number,Striker.States.Play,PlayGameState,C:\repos\valterc_lings\Striker\StrikerServer\Striker\States\Play\PlayGameState.cs,Update,The following statement contains a magic number: if (DateTime.Now - gameStart > TimeSpan.FromSeconds (3)) {  	gameStarted = true;  	InitServerStuff ();  }  
Magic Number,Striker.States.Play,PlayGameState,C:\repos\valterc_lings\Striker\StrikerServer\Striker\States\Play\PlayGameState.cs,Update,The following statement contains a magic number: for (int i = 0; i < gameController.characters.Count; i++) {  	Character c = gameController.characters [i];  	c.Update ();  	if (c.kills >= 15) {  		gameController.SwitchState (new GameEndState (gameController));  		return;  	}  }  
Magic Number,Striker.States.Play,PlayGameState,C:\repos\valterc_lings\Striker\StrikerServer\Striker\States\Play\PlayGameState.cs,Update,The following statement contains a magic number: if (c.kills >= 15) {  	gameController.SwitchState (new GameEndState (gameController));  	return;  }  
Magic Number,Striker.States.Play,PlayGameState,C:\repos\valterc_lings\Striker\StrikerServer\Striker\States\Play\PlayGameState.cs,Update,The following statement contains a magic number: for (int i = 0; i < gameController.controllers.Count; i++) {  	PlayerController pc = gameController.controllers [i];  	if (pc.shooting && !pc.player.dead && !pc.player.disconnected) {  		if (DateTime.Now - pc.lastFireTime > TimeSpan.FromMilliseconds (400)) {  			pc.lastFireTime = System.DateTime.Now;  			Bullet b = new Bullet (gameController.level' pc.player.player);  			gameController.bullets.Add (b);  			gameController.server.LogicProcessor.RegisterNetworkedObject (b);  		}  	}  	pc.Update ();  }  
Magic Number,Striker.States.Play,PlayGameState,C:\repos\valterc_lings\Striker\StrikerServer\Striker\States\Play\PlayGameState.cs,Update,The following statement contains a magic number: if (pc.shooting && !pc.player.dead && !pc.player.disconnected) {  	if (DateTime.Now - pc.lastFireTime > TimeSpan.FromMilliseconds (400)) {  		pc.lastFireTime = System.DateTime.Now;  		Bullet b = new Bullet (gameController.level' pc.player.player);  		gameController.bullets.Add (b);  		gameController.server.LogicProcessor.RegisterNetworkedObject (b);  	}  }  
Magic Number,Striker.States.Play,PlayGameState,C:\repos\valterc_lings\Striker\StrikerServer\Striker\States\Play\PlayGameState.cs,Update,The following statement contains a magic number: if (DateTime.Now - pc.lastFireTime > TimeSpan.FromMilliseconds (400)) {  	pc.lastFireTime = System.DateTime.Now;  	Bullet b = new Bullet (gameController.level' pc.player.player);  	gameController.bullets.Add (b);  	gameController.server.LogicProcessor.RegisterNetworkedObject (b);  }  
Magic Number,Striker.States.Play,PlayGameState,C:\repos\valterc_lings\Striker\StrikerServer\Striker\States\Play\PlayGameState.cs,Update,The following statement contains a magic number: for (int i = 0; i < gameController.bullets.Count; i++) {  	Bullet bullet = gameController.bullets [i];  	foreach (var character in gameController.characters) {  		if (character != bullet.character && !character.disconnected && !character.dead && bullet.CheckCollision (character)) {  			character.health -= 2;  			if (character.health <= 0) {  				bullet.character.kills++;  			}  			break;  		}  	}  	if (bullet.Update ()) {  		gameController.bullets.RemoveAt (i--);  		gameController.server.LogicProcessor.UnregisterNetworkedObject (bullet);  	}  }  
Magic Number,Striker.States.Play,PlayGameState,C:\repos\valterc_lings\Striker\StrikerServer\Striker\States\Play\PlayGameState.cs,Update,The following statement contains a magic number: foreach (var character in gameController.characters) {  	if (character != bullet.character && !character.disconnected && !character.dead && bullet.CheckCollision (character)) {  		character.health -= 2;  		if (character.health <= 0) {  			bullet.character.kills++;  		}  		break;  	}  }  
Magic Number,Striker.States.Play,PlayGameState,C:\repos\valterc_lings\Striker\StrikerServer\Striker\States\Play\PlayGameState.cs,Update,The following statement contains a magic number: if (character != bullet.character && !character.disconnected && !character.dead && bullet.CheckCollision (character)) {  	character.health -= 2;  	if (character.health <= 0) {  		bullet.character.kills++;  	}  	break;  }  
Magic Number,Striker.States.Play,PlayGameState,C:\repos\valterc_lings\Striker\StrikerServer\Striker\States\Play\PlayGameState.cs,Update,The following statement contains a magic number: character.health -= 2;  
Magic Number,Striker.States.Play,PlayGameState,C:\repos\valterc_lings\Striker\StrikerServer\Striker\States\Play\PlayGameState.cs,CreateNPCs,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	gameController.characters.Add (new NPC (random.Next ()));  }  
Missing Default,Striker.Levels,LevelLoader,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Levels\LevelLoader.cs,LoadLevel,The following switch statement is missing a default case: switch (tile [i]) {  case 'I':  	e.isItemSpawner = true;  	break;  case 'S':  	e.isSpawnLocation = true;  	break;  }  
Missing Default,Striker.Levels,LevelLoader,C:\repos\valterc_lings\Striker\StrikerServer\Striker\Levels\LevelLoader.cs,CreateGameObject,The following switch statement is missing a default case: switch (p) {  case 'F':  	return CreateFloorObject (level);  case 'W':  	return CreateWallObject (level);  case 'P':  	return CreateLavaObject (level);  }  
