Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,GetTranslationBack,Cyclomatic complexity of the method is 13
Complex Method,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,Cyclomatic complexity of the method is 10
Complex Method,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,Cyclomatic complexity of the method is 10
Long Parameter List,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,AddTranslation,The method has 11 parameters.
Long Parameter List,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,AddTranslationAsync,The method has 11 parameters.
Long Parameter List,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,AddTranslationAsync,The method has 12 parameters.
Long Parameter List,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,GetAppIdToken,The method has 7 parameters.
Long Parameter List,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,GetAppIdTokenAsync,The method has 7 parameters.
Long Parameter List,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,GetAppIdTokenAsync,The method has 8 parameters.
Long Parameter List,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,GetTranslations,The method has 7 parameters.
Long Parameter List,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,GetTranslationsAsync,The method has 7 parameters.
Long Parameter List,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,GetTranslationsAsync,The method has 8 parameters.
Long Parameter List,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,TranslateAsync,The method has 5 parameters.
Long Parameter List,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,AddTranslationArray,The method has 5 parameters.
Long Parameter List,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,AddTranslationArrayAsync,The method has 5 parameters.
Long Parameter List,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,AddTranslationArrayAsync,The method has 6 parameters.
Long Parameter List,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,GetTranslationsArray,The method has 7 parameters.
Long Parameter List,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,GetTranslationsArrayAsync,The method has 7 parameters.
Long Parameter List,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,GetTranslationsArrayAsync,The method has 8 parameters.
Long Parameter List,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,SpeakAsync,The method has 5 parameters.
Long Parameter List,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,TranslateArray,The method has 5 parameters.
Long Parameter List,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,TranslateArrayAsync,The method has 5 parameters.
Long Parameter List,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,TranslateArrayAsync,The method has 6 parameters.
Long Statement,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,Translater_Load,The length of the statement  "		MessageBox.Show (@" [languages.csv] file is missing or has incorrect format' please enusre that it exists in the same folder as Translater.exe. It should have atleast 1 line similar to " is 184.
Long Statement,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,GetTranslationBack,The length of the statement  "				string result = Debugger.IsAttached ? GetResultFromGoogle (@from' to' sendList' i) : "<cool! this is translation from service>"; " is 128.
Long Statement,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,GetTranslationBack,The length of the statement  "				translated = clientMicrosoft.Translate ("6CA9AD9D9A700D2FD286468D8706AD8886C04A9C"' sendList [i]' txtLangFrom.Text' txtLangTo.Text); " is 132.
Long Statement,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,GetResultFromGoogle,The length of the statement  "	string GOOGLE_TRANSALTE_URL = "http://translate.google.com/translate_a/t?client=p&ie=UTF-8&oe=UTF-8&pc=1&oc=1&otf=1&ssel=0&tsel=0&"; " is 132.
Long Statement,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The length of the statement  "			NewOutputDir = txtTranslationOutFolder.Text + "\\" + LangTo + "\\" + Root.FullName.Substring (Root.FullName.IndexOf (LangFrom + "\\") + LangFrom.Length + 1); " is 157.
Long Statement,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The length of the statement  "						bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........"); " is 134.
Long Statement,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The length of the statement  "							bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again..."); " is 122.
Long Statement,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,cmdTranslateAll_Click,The length of the statement  "		MessageBox.Show ("Please provide a From translation language.\nFiles will transalted from this lanauage to Other 65 Lanaguages. Thank you!"); " is 141.
Long Statement,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,bgWorkerTranslateAll_DoWork,The length of the statement  "					txtLog.Text = "***Translation To: " + GlobalLangToHolder + " Completed Successfully***" + Environment.NewLine + txtLog.Text; " is 124.
Long Statement,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The length of the statement  "			NewOutputDir = txtTranslationOutFolder.Text + "\\" + LongLngTo + "\\" + Root.FullName.Substring (Root.FullName.IndexOf (LongLngFrom + "\\") + LongLngFrom.Length + 1); " is 166.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,AddTranslationAsync,The length of the statement  "	this.AddTranslationAsync (appId' originalText' translatedText' from' to' rating' ratingSpecified' contentType' category' user' uri' null); " is 138.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,AddTranslationAsync,The length of the statement  "		this.AddTranslationOperationCompleted = new System.Threading.SendOrPostCallback (this.OnAddTranslationOperationCompleted); " is 122.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnAddTranslationOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnAddTranslationOperationCompleted,The length of the statement  "		this.AddTranslationCompleted (this' new System.ComponentModel.AsyncCompletedEventArgs (invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 150.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,BreakSentencesAsync,The length of the statement  "		this.BreakSentencesOperationCompleted = new System.Threading.SendOrPostCallback (this.OnBreakSentencesOperationCompleted); " is 122.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnBreakSentencesOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnBreakSentencesOperationCompleted,The length of the statement  "		this.BreakSentencesCompleted (this' new BreakSentencesCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 157.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnDetectOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnDetectOperationCompleted,The length of the statement  "		this.DetectCompleted (this' new DetectCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 141.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnDetectArrayOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnDetectArrayOperationCompleted,The length of the statement  "		this.DetectArrayCompleted (this' new DetectArrayCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 151.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,GetAppIdTokenAsync,The length of the statement  "	this.GetAppIdTokenAsync (appId' minRatingRead' minRatingReadSpecified' maxRatingWrite' maxRatingWriteSpecified' expireSeconds' expireSecondsSpecified' null); " is 157.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,GetAppIdTokenAsync,The length of the statement  "		this.GetAppIdTokenOperationCompleted = new System.Threading.SendOrPostCallback (this.OnGetAppIdTokenOperationCompleted); " is 120.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnGetAppIdTokenOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnGetAppIdTokenOperationCompleted,The length of the statement  "		this.GetAppIdTokenCompleted (this' new GetAppIdTokenCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 155.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,GetLanguageNamesAsync,The length of the statement  "		this.GetLanguageNamesOperationCompleted = new System.Threading.SendOrPostCallback (this.OnGetLanguageNamesOperationCompleted); " is 126.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnGetLanguageNamesOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnGetLanguageNamesOperationCompleted,The length of the statement  "		this.GetLanguageNamesCompleted (this' new GetLanguageNamesCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 161.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,GetLanguagesForSpeakAsync,The length of the statement  "		this.GetLanguagesForSpeakOperationCompleted = new System.Threading.SendOrPostCallback (this.OnGetLanguagesForSpeakOperationCompleted); " is 134.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnGetLanguagesForSpeakOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnGetLanguagesForSpeakOperationCompleted,The length of the statement  "		this.GetLanguagesForSpeakCompleted (this' new GetLanguagesForSpeakCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 169.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,GetLanguagesForTranslateAsync,The length of the statement  "		this.GetLanguagesForTranslateOperationCompleted = new System.Threading.SendOrPostCallback (this.OnGetLanguagesForTranslateOperationCompleted); " is 142.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnGetLanguagesForTranslateOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnGetLanguagesForTranslateOperationCompleted,The length of the statement  "		this.GetLanguagesForTranslateCompleted (this' new GetLanguagesForTranslateCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 177.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,GetTranslationsAsync,The length of the statement  "		this.GetTranslationsOperationCompleted = new System.Threading.SendOrPostCallback (this.OnGetTranslationsOperationCompleted); " is 124.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnGetTranslationsOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnGetTranslationsOperationCompleted,The length of the statement  "		this.GetTranslationsCompleted (this' new GetTranslationsCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 159.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnTranslateOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnTranslateOperationCompleted,The length of the statement  "		this.TranslateCompleted (this' new TranslateCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 147.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,AddTranslationArrayAsync,The length of the statement  "		this.AddTranslationArrayOperationCompleted = new System.Threading.SendOrPostCallback (this.OnAddTranslationArrayOperationCompleted); " is 132.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnAddTranslationArrayOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnAddTranslationArrayOperationCompleted,The length of the statement  "		this.AddTranslationArrayCompleted (this' new System.ComponentModel.AsyncCompletedEventArgs (invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 155.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,GetTranslationsArrayAsync,The length of the statement  "		this.GetTranslationsArrayOperationCompleted = new System.Threading.SendOrPostCallback (this.OnGetTranslationsArrayOperationCompleted); " is 134.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnGetTranslationsArrayOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnGetTranslationsArrayOperationCompleted,The length of the statement  "		this.GetTranslationsArrayCompleted (this' new GetTranslationsArrayCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 169.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnSpeakOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnSpeakOperationCompleted,The length of the statement  "		this.SpeakCompleted (this' new SpeakCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 139.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,TranslateArrayAsync,The length of the statement  "		this.TranslateArrayOperationCompleted = new System.Threading.SendOrPostCallback (this.OnTranslateArrayOperationCompleted); " is 122.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnTranslateArrayOperationCompleted,The length of the statement  "		System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,OnTranslateArrayOperationCompleted,The length of the statement  "		this.TranslateArrayCompleted (this' new TranslateArrayCompletedEventArgs (invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 157.
Long Statement,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,IsLocalFileSystemWebService,The length of the statement  "	if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) { " is 123.
Empty Catch Block,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,SaveConfigSettings,The method has an empty catch block.
Empty Catch Block,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,SaveConfigSettings,The method has an empty catch block.
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,GetTranslationBack,The following statement contains a magic number: try {  	string[] words = line.Split (new char[] {    	});  	var sendList = new List<string> ();  	string send = "";  	bool isGoogle = false;  	bool isMircosoft = false;  	if (all) {  		isGoogle = radGoogleAll.Checked;  		isMircosoft = radMSAll.Checked;  	}  	else {  		isGoogle = radGoogle.Checked;  		isMircosoft = radMS.Checked;  	}  	MAX_LENGTH = isGoogle ? 300 : 500;  	// 1000 for microsoft  	for (int i = 0; i < words.Length; i++) {  		send = send + " " + words [i];  		if (send.Length >= MAX_LENGTH) {  			sendList.Add (send);  			send = "";  		}  	}  	if (send != "")  		sendList.Add (send);  	//insert the last portion  	//translate here  	string translated = "";  	if (isGoogle) {  		for (int i = 0; i < sendList.Count; i++) {  			if (sendList [i].Trim ().Length == 0) {  				continue;  			}  			if (!all) {  				from = txtLangFrom.Text;  				to = txtLangTo.Text;  			}  			string result = Debugger.IsAttached ? GetResultFromGoogle (@from' to' sendList' i) : "<cool! this is translation from service>";  			translated += result;  		}  	}  	//Microsoft translator  	else if (isMircosoft) {  		for (int i = 0; i < sendList.Count; i++) {  			while (clientMicrosoft == null) {  				Thread.Sleep (2000);  			}  			translated = clientMicrosoft.Translate ("6CA9AD9D9A700D2FD286468D8706AD8886C04A9C"' sendList [i]' txtLangFrom.Text' txtLangTo.Text);  		}  	}  	return translated;  }  catch (Exception ex) {  	bgWorker.ReportProgress (0' "GetTranslationBack:" + ex.ToString ());  	return "-1";  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,GetTranslationBack,The following statement contains a magic number: try {  	string[] words = line.Split (new char[] {    	});  	var sendList = new List<string> ();  	string send = "";  	bool isGoogle = false;  	bool isMircosoft = false;  	if (all) {  		isGoogle = radGoogleAll.Checked;  		isMircosoft = radMSAll.Checked;  	}  	else {  		isGoogle = radGoogle.Checked;  		isMircosoft = radMS.Checked;  	}  	MAX_LENGTH = isGoogle ? 300 : 500;  	// 1000 for microsoft  	for (int i = 0; i < words.Length; i++) {  		send = send + " " + words [i];  		if (send.Length >= MAX_LENGTH) {  			sendList.Add (send);  			send = "";  		}  	}  	if (send != "")  		sendList.Add (send);  	//insert the last portion  	//translate here  	string translated = "";  	if (isGoogle) {  		for (int i = 0; i < sendList.Count; i++) {  			if (sendList [i].Trim ().Length == 0) {  				continue;  			}  			if (!all) {  				from = txtLangFrom.Text;  				to = txtLangTo.Text;  			}  			string result = Debugger.IsAttached ? GetResultFromGoogle (@from' to' sendList' i) : "<cool! this is translation from service>";  			translated += result;  		}  	}  	//Microsoft translator  	else if (isMircosoft) {  		for (int i = 0; i < sendList.Count; i++) {  			while (clientMicrosoft == null) {  				Thread.Sleep (2000);  			}  			translated = clientMicrosoft.Translate ("6CA9AD9D9A700D2FD286468D8706AD8886C04A9C"' sendList [i]' txtLangFrom.Text' txtLangTo.Text);  		}  	}  	return translated;  }  catch (Exception ex) {  	bgWorker.ReportProgress (0' "GetTranslationBack:" + ex.ToString ());  	return "-1";  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,GetTranslationBack,The following statement contains a magic number: try {  	string[] words = line.Split (new char[] {    	});  	var sendList = new List<string> ();  	string send = "";  	bool isGoogle = false;  	bool isMircosoft = false;  	if (all) {  		isGoogle = radGoogleAll.Checked;  		isMircosoft = radMSAll.Checked;  	}  	else {  		isGoogle = radGoogle.Checked;  		isMircosoft = radMS.Checked;  	}  	MAX_LENGTH = isGoogle ? 300 : 500;  	// 1000 for microsoft  	for (int i = 0; i < words.Length; i++) {  		send = send + " " + words [i];  		if (send.Length >= MAX_LENGTH) {  			sendList.Add (send);  			send = "";  		}  	}  	if (send != "")  		sendList.Add (send);  	//insert the last portion  	//translate here  	string translated = "";  	if (isGoogle) {  		for (int i = 0; i < sendList.Count; i++) {  			if (sendList [i].Trim ().Length == 0) {  				continue;  			}  			if (!all) {  				from = txtLangFrom.Text;  				to = txtLangTo.Text;  			}  			string result = Debugger.IsAttached ? GetResultFromGoogle (@from' to' sendList' i) : "<cool! this is translation from service>";  			translated += result;  		}  	}  	//Microsoft translator  	else if (isMircosoft) {  		for (int i = 0; i < sendList.Count; i++) {  			while (clientMicrosoft == null) {  				Thread.Sleep (2000);  			}  			translated = clientMicrosoft.Translate ("6CA9AD9D9A700D2FD286468D8706AD8886C04A9C"' sendList [i]' txtLangFrom.Text' txtLangTo.Text);  		}  	}  	return translated;  }  catch (Exception ex) {  	bgWorker.ReportProgress (0' "GetTranslationBack:" + ex.ToString ());  	return "-1";  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,GetTranslationBack,The following statement contains a magic number: MAX_LENGTH = isGoogle ? 300 : 500;  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,GetTranslationBack,The following statement contains a magic number: MAX_LENGTH = isGoogle ? 300 : 500;  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,GetTranslationBack,The following statement contains a magic number: if (isGoogle) {  	for (int i = 0; i < sendList.Count; i++) {  		if (sendList [i].Trim ().Length == 0) {  			continue;  		}  		if (!all) {  			from = txtLangFrom.Text;  			to = txtLangTo.Text;  		}  		string result = Debugger.IsAttached ? GetResultFromGoogle (@from' to' sendList' i) : "<cool! this is translation from service>";  		translated += result;  	}  }  //Microsoft translator  else if (isMircosoft) {  	for (int i = 0; i < sendList.Count; i++) {  		while (clientMicrosoft == null) {  			Thread.Sleep (2000);  		}  		translated = clientMicrosoft.Translate ("6CA9AD9D9A700D2FD286468D8706AD8886C04A9C"' sendList [i]' txtLangFrom.Text' txtLangTo.Text);  	}  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,GetTranslationBack,The following statement contains a magic number: if (isMircosoft) {  	for (int i = 0; i < sendList.Count; i++) {  		while (clientMicrosoft == null) {  			Thread.Sleep (2000);  		}  		translated = clientMicrosoft.Translate ("6CA9AD9D9A700D2FD286468D8706AD8886C04A9C"' sendList [i]' txtLangFrom.Text' txtLangTo.Text);  	}  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,GetTranslationBack,The following statement contains a magic number: for (int i = 0; i < sendList.Count; i++) {  	while (clientMicrosoft == null) {  		Thread.Sleep (2000);  	}  	translated = clientMicrosoft.Translate ("6CA9AD9D9A700D2FD286468D8706AD8886C04A9C"' sendList [i]' txtLangFrom.Text' txtLangTo.Text);  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,GetTranslationBack,The following statement contains a magic number: while (clientMicrosoft == null) {  	Thread.Sleep (2000);  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,GetTranslationBack,The following statement contains a magic number: Thread.Sleep (2000);  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,GetResultFromGoogle,The following statement contains a magic number: request.Timeout = 600000;  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,cmdTranslate_Click,The following statement contains a magic number: try {  	lblStartTime.Text += DateTime.Now.ToShortTimeString ();  	Console.WriteLine ("lblStartTime.Text: " + lblStartTime.Text);  	SaveConfigSettings ();  	timerPause.Interval = Convert.ToInt32 (txtMins.Text) * 60 * 1000;  	timerPause.Enabled = true;  	cmdPause.Enabled = true;  	cmdTranslate.Enabled = false;  	if (txtTranslationInFolder.Text == "") {  		MessageBox.Show ("Please select Translate Input folder. Files will be read from this folder. Thank you!");  		return;  	}  	if (txtTranslationOutFolder.Text == "") {  		MessageBox.Show ("Please select Translate destination folder. Translated Files will be stored there. shukran!");  		return;  	}  	WriteTranslatedFile ();  }  catch (Exception ex) {  	timerPause.Enabled = false;  	MessageBox.Show ("cmdTranslate_Click:" + ex.ToString ());  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,cmdTranslate_Click,The following statement contains a magic number: try {  	lblStartTime.Text += DateTime.Now.ToShortTimeString ();  	Console.WriteLine ("lblStartTime.Text: " + lblStartTime.Text);  	SaveConfigSettings ();  	timerPause.Interval = Convert.ToInt32 (txtMins.Text) * 60 * 1000;  	timerPause.Enabled = true;  	cmdPause.Enabled = true;  	cmdTranslate.Enabled = false;  	if (txtTranslationInFolder.Text == "") {  		MessageBox.Show ("Please select Translate Input folder. Files will be read from this folder. Thank you!");  		return;  	}  	if (txtTranslationOutFolder.Text == "") {  		MessageBox.Show ("Please select Translate destination folder. Translated Files will be stored there. shukran!");  		return;  	}  	WriteTranslatedFile ();  }  catch (Exception ex) {  	timerPause.Enabled = false;  	MessageBox.Show ("cmdTranslate_Click:" + ex.ToString ());  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,cmdTranslate_Click,The following statement contains a magic number: timerPause.Interval = Convert.ToInt32 (txtMins.Text) * 60 * 1000;  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,cmdTranslate_Click,The following statement contains a magic number: timerPause.Interval = Convert.ToInt32 (txtMins.Text) * 60 * 1000;  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: try {  	GlobalLangToHolder = txtLangTo.Text;  	String NewOutputDir;  	//Holds The Next Output Path (Coded By Rayyan)  	DirectoryInfo OutputRoot;  	//Holds The Next Output Path (Coded By Rayyan)  	String LangFrom = GetLongLanguageValueInTranslateAllArray (txtLangFrom.Text);  	String LangTo = GetLongLanguageValueInTranslateAllArray (txtLangTo.Text);  	if (Root == StartingRoot) {  		NewOutputDir = txtTranslationOutFolder.Text + "\\" + LangTo;  	}  	else {  		NewOutputDir = txtTranslationOutFolder.Text + "\\" + LangTo + "\\" + Root.FullName.Substring (Root.FullName.IndexOf (LangFrom + "\\") + LangFrom.Length + 1);  	}  	OutputRoot = new DirectoryInfo (NewOutputDir);  	Directory.CreateDirectory (OutputRoot.FullName);  	FileInfo[] Files = Root.GetFiles ();  	int ProgressCount = 0;  	//Traverse Through All Files In Current Directory (Coded By Rayyan)  	foreach (FileInfo File in Files) {  		if (File.Extension == ".txt") {  			sr = new StreamReader (File.FullName' Encoding.Default);  			CreateOutputFileWithNewName (OutputRoot' File.Name' ref sw);  			//Takes Current Output Directory & File Name (Coded By Rayyan)  			bgWorker.ReportProgress (ProgressCount' File.Name);  			string line = "";  			string result = "";  			while ((line = sr.ReadLine ()) != null) {  				if (line != "") {  					//show first 10 characters from line in windows title  					bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  					result = GetTranslationBack (line);  					int G = 1;  					while (result == "-1") {  						bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  						clientMicrosoft = null;  						timerPause.Enabled = false;  						Thread.Sleep (5000 * G);  						// we need to reduce the sleep tiime to 5 seconds  						if (radGoogle.Checked) {  							//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  						}  						else {  							clientMicrosoft = new SoapService ();  						}  						timerPause.Enabled = true;  						result = GetTranslationBack (line);  					}  					sw.Write (" " + result + Environment.NewLine);  					sw.Flush ();  					Thread.Sleep (50);  				}  			}  			ProgressCount++;  			sr.Close ();  			sw.Close ();  			Cursor.Current = Cursors.Arrow;  		}  	}  	//After All Files Are Converted & Placed In Respective Output Directories (Coded By Rayyan)  	//Get All Sub-Directories From Current Directory (Coded By Rayyan)  	DirectoryInfo[] SubDirectories = Root.GetDirectories ();  	//Traverse All Sub-Directories & Repeat Translation Process For All Their Respective Files (Coded By Rayyan)  	foreach (DirectoryInfo SubDir in SubDirectories) {  		BgWTranslationWork (SubDir);  	}  }  catch (Exception ex) {  	MessageBox.Show (ex.ToString ());  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: try {  	GlobalLangToHolder = txtLangTo.Text;  	String NewOutputDir;  	//Holds The Next Output Path (Coded By Rayyan)  	DirectoryInfo OutputRoot;  	//Holds The Next Output Path (Coded By Rayyan)  	String LangFrom = GetLongLanguageValueInTranslateAllArray (txtLangFrom.Text);  	String LangTo = GetLongLanguageValueInTranslateAllArray (txtLangTo.Text);  	if (Root == StartingRoot) {  		NewOutputDir = txtTranslationOutFolder.Text + "\\" + LangTo;  	}  	else {  		NewOutputDir = txtTranslationOutFolder.Text + "\\" + LangTo + "\\" + Root.FullName.Substring (Root.FullName.IndexOf (LangFrom + "\\") + LangFrom.Length + 1);  	}  	OutputRoot = new DirectoryInfo (NewOutputDir);  	Directory.CreateDirectory (OutputRoot.FullName);  	FileInfo[] Files = Root.GetFiles ();  	int ProgressCount = 0;  	//Traverse Through All Files In Current Directory (Coded By Rayyan)  	foreach (FileInfo File in Files) {  		if (File.Extension == ".txt") {  			sr = new StreamReader (File.FullName' Encoding.Default);  			CreateOutputFileWithNewName (OutputRoot' File.Name' ref sw);  			//Takes Current Output Directory & File Name (Coded By Rayyan)  			bgWorker.ReportProgress (ProgressCount' File.Name);  			string line = "";  			string result = "";  			while ((line = sr.ReadLine ()) != null) {  				if (line != "") {  					//show first 10 characters from line in windows title  					bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  					result = GetTranslationBack (line);  					int G = 1;  					while (result == "-1") {  						bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  						clientMicrosoft = null;  						timerPause.Enabled = false;  						Thread.Sleep (5000 * G);  						// we need to reduce the sleep tiime to 5 seconds  						if (radGoogle.Checked) {  							//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  						}  						else {  							clientMicrosoft = new SoapService ();  						}  						timerPause.Enabled = true;  						result = GetTranslationBack (line);  					}  					sw.Write (" " + result + Environment.NewLine);  					sw.Flush ();  					Thread.Sleep (50);  				}  			}  			ProgressCount++;  			sr.Close ();  			sw.Close ();  			Cursor.Current = Cursors.Arrow;  		}  	}  	//After All Files Are Converted & Placed In Respective Output Directories (Coded By Rayyan)  	//Get All Sub-Directories From Current Directory (Coded By Rayyan)  	DirectoryInfo[] SubDirectories = Root.GetDirectories ();  	//Traverse All Sub-Directories & Repeat Translation Process For All Their Respective Files (Coded By Rayyan)  	foreach (DirectoryInfo SubDir in SubDirectories) {  		BgWTranslationWork (SubDir);  	}  }  catch (Exception ex) {  	MessageBox.Show (ex.ToString ());  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: try {  	GlobalLangToHolder = txtLangTo.Text;  	String NewOutputDir;  	//Holds The Next Output Path (Coded By Rayyan)  	DirectoryInfo OutputRoot;  	//Holds The Next Output Path (Coded By Rayyan)  	String LangFrom = GetLongLanguageValueInTranslateAllArray (txtLangFrom.Text);  	String LangTo = GetLongLanguageValueInTranslateAllArray (txtLangTo.Text);  	if (Root == StartingRoot) {  		NewOutputDir = txtTranslationOutFolder.Text + "\\" + LangTo;  	}  	else {  		NewOutputDir = txtTranslationOutFolder.Text + "\\" + LangTo + "\\" + Root.FullName.Substring (Root.FullName.IndexOf (LangFrom + "\\") + LangFrom.Length + 1);  	}  	OutputRoot = new DirectoryInfo (NewOutputDir);  	Directory.CreateDirectory (OutputRoot.FullName);  	FileInfo[] Files = Root.GetFiles ();  	int ProgressCount = 0;  	//Traverse Through All Files In Current Directory (Coded By Rayyan)  	foreach (FileInfo File in Files) {  		if (File.Extension == ".txt") {  			sr = new StreamReader (File.FullName' Encoding.Default);  			CreateOutputFileWithNewName (OutputRoot' File.Name' ref sw);  			//Takes Current Output Directory & File Name (Coded By Rayyan)  			bgWorker.ReportProgress (ProgressCount' File.Name);  			string line = "";  			string result = "";  			while ((line = sr.ReadLine ()) != null) {  				if (line != "") {  					//show first 10 characters from line in windows title  					bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  					result = GetTranslationBack (line);  					int G = 1;  					while (result == "-1") {  						bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  						clientMicrosoft = null;  						timerPause.Enabled = false;  						Thread.Sleep (5000 * G);  						// we need to reduce the sleep tiime to 5 seconds  						if (radGoogle.Checked) {  							//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  						}  						else {  							clientMicrosoft = new SoapService ();  						}  						timerPause.Enabled = true;  						result = GetTranslationBack (line);  					}  					sw.Write (" " + result + Environment.NewLine);  					sw.Flush ();  					Thread.Sleep (50);  				}  			}  			ProgressCount++;  			sr.Close ();  			sw.Close ();  			Cursor.Current = Cursors.Arrow;  		}  	}  	//After All Files Are Converted & Placed In Respective Output Directories (Coded By Rayyan)  	//Get All Sub-Directories From Current Directory (Coded By Rayyan)  	DirectoryInfo[] SubDirectories = Root.GetDirectories ();  	//Traverse All Sub-Directories & Repeat Translation Process For All Their Respective Files (Coded By Rayyan)  	foreach (DirectoryInfo SubDir in SubDirectories) {  		BgWTranslationWork (SubDir);  	}  }  catch (Exception ex) {  	MessageBox.Show (ex.ToString ());  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: try {  	GlobalLangToHolder = txtLangTo.Text;  	String NewOutputDir;  	//Holds The Next Output Path (Coded By Rayyan)  	DirectoryInfo OutputRoot;  	//Holds The Next Output Path (Coded By Rayyan)  	String LangFrom = GetLongLanguageValueInTranslateAllArray (txtLangFrom.Text);  	String LangTo = GetLongLanguageValueInTranslateAllArray (txtLangTo.Text);  	if (Root == StartingRoot) {  		NewOutputDir = txtTranslationOutFolder.Text + "\\" + LangTo;  	}  	else {  		NewOutputDir = txtTranslationOutFolder.Text + "\\" + LangTo + "\\" + Root.FullName.Substring (Root.FullName.IndexOf (LangFrom + "\\") + LangFrom.Length + 1);  	}  	OutputRoot = new DirectoryInfo (NewOutputDir);  	Directory.CreateDirectory (OutputRoot.FullName);  	FileInfo[] Files = Root.GetFiles ();  	int ProgressCount = 0;  	//Traverse Through All Files In Current Directory (Coded By Rayyan)  	foreach (FileInfo File in Files) {  		if (File.Extension == ".txt") {  			sr = new StreamReader (File.FullName' Encoding.Default);  			CreateOutputFileWithNewName (OutputRoot' File.Name' ref sw);  			//Takes Current Output Directory & File Name (Coded By Rayyan)  			bgWorker.ReportProgress (ProgressCount' File.Name);  			string line = "";  			string result = "";  			while ((line = sr.ReadLine ()) != null) {  				if (line != "") {  					//show first 10 characters from line in windows title  					bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  					result = GetTranslationBack (line);  					int G = 1;  					while (result == "-1") {  						bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  						clientMicrosoft = null;  						timerPause.Enabled = false;  						Thread.Sleep (5000 * G);  						// we need to reduce the sleep tiime to 5 seconds  						if (radGoogle.Checked) {  							//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  						}  						else {  							clientMicrosoft = new SoapService ();  						}  						timerPause.Enabled = true;  						result = GetTranslationBack (line);  					}  					sw.Write (" " + result + Environment.NewLine);  					sw.Flush ();  					Thread.Sleep (50);  				}  			}  			ProgressCount++;  			sr.Close ();  			sw.Close ();  			Cursor.Current = Cursors.Arrow;  		}  	}  	//After All Files Are Converted & Placed In Respective Output Directories (Coded By Rayyan)  	//Get All Sub-Directories From Current Directory (Coded By Rayyan)  	DirectoryInfo[] SubDirectories = Root.GetDirectories ();  	//Traverse All Sub-Directories & Repeat Translation Process For All Their Respective Files (Coded By Rayyan)  	foreach (DirectoryInfo SubDir in SubDirectories) {  		BgWTranslationWork (SubDir);  	}  }  catch (Exception ex) {  	MessageBox.Show (ex.ToString ());  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: try {  	GlobalLangToHolder = txtLangTo.Text;  	String NewOutputDir;  	//Holds The Next Output Path (Coded By Rayyan)  	DirectoryInfo OutputRoot;  	//Holds The Next Output Path (Coded By Rayyan)  	String LangFrom = GetLongLanguageValueInTranslateAllArray (txtLangFrom.Text);  	String LangTo = GetLongLanguageValueInTranslateAllArray (txtLangTo.Text);  	if (Root == StartingRoot) {  		NewOutputDir = txtTranslationOutFolder.Text + "\\" + LangTo;  	}  	else {  		NewOutputDir = txtTranslationOutFolder.Text + "\\" + LangTo + "\\" + Root.FullName.Substring (Root.FullName.IndexOf (LangFrom + "\\") + LangFrom.Length + 1);  	}  	OutputRoot = new DirectoryInfo (NewOutputDir);  	Directory.CreateDirectory (OutputRoot.FullName);  	FileInfo[] Files = Root.GetFiles ();  	int ProgressCount = 0;  	//Traverse Through All Files In Current Directory (Coded By Rayyan)  	foreach (FileInfo File in Files) {  		if (File.Extension == ".txt") {  			sr = new StreamReader (File.FullName' Encoding.Default);  			CreateOutputFileWithNewName (OutputRoot' File.Name' ref sw);  			//Takes Current Output Directory & File Name (Coded By Rayyan)  			bgWorker.ReportProgress (ProgressCount' File.Name);  			string line = "";  			string result = "";  			while ((line = sr.ReadLine ()) != null) {  				if (line != "") {  					//show first 10 characters from line in windows title  					bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  					result = GetTranslationBack (line);  					int G = 1;  					while (result == "-1") {  						bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  						clientMicrosoft = null;  						timerPause.Enabled = false;  						Thread.Sleep (5000 * G);  						// we need to reduce the sleep tiime to 5 seconds  						if (radGoogle.Checked) {  							//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  						}  						else {  							clientMicrosoft = new SoapService ();  						}  						timerPause.Enabled = true;  						result = GetTranslationBack (line);  					}  					sw.Write (" " + result + Environment.NewLine);  					sw.Flush ();  					Thread.Sleep (50);  				}  			}  			ProgressCount++;  			sr.Close ();  			sw.Close ();  			Cursor.Current = Cursors.Arrow;  		}  	}  	//After All Files Are Converted & Placed In Respective Output Directories (Coded By Rayyan)  	//Get All Sub-Directories From Current Directory (Coded By Rayyan)  	DirectoryInfo[] SubDirectories = Root.GetDirectories ();  	//Traverse All Sub-Directories & Repeat Translation Process For All Their Respective Files (Coded By Rayyan)  	foreach (DirectoryInfo SubDir in SubDirectories) {  		BgWTranslationWork (SubDir);  	}  }  catch (Exception ex) {  	MessageBox.Show (ex.ToString ());  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: foreach (FileInfo File in Files) {  	if (File.Extension == ".txt") {  		sr = new StreamReader (File.FullName' Encoding.Default);  		CreateOutputFileWithNewName (OutputRoot' File.Name' ref sw);  		//Takes Current Output Directory & File Name (Coded By Rayyan)  		bgWorker.ReportProgress (ProgressCount' File.Name);  		string line = "";  		string result = "";  		while ((line = sr.ReadLine ()) != null) {  			if (line != "") {  				//show first 10 characters from line in windows title  				bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  				result = GetTranslationBack (line);  				int G = 1;  				while (result == "-1") {  					bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  					clientMicrosoft = null;  					timerPause.Enabled = false;  					Thread.Sleep (5000 * G);  					// we need to reduce the sleep tiime to 5 seconds  					if (radGoogle.Checked) {  						//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  					}  					else {  						clientMicrosoft = new SoapService ();  					}  					timerPause.Enabled = true;  					result = GetTranslationBack (line);  				}  				sw.Write (" " + result + Environment.NewLine);  				sw.Flush ();  				Thread.Sleep (50);  			}  		}  		ProgressCount++;  		sr.Close ();  		sw.Close ();  		Cursor.Current = Cursors.Arrow;  	}  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: foreach (FileInfo File in Files) {  	if (File.Extension == ".txt") {  		sr = new StreamReader (File.FullName' Encoding.Default);  		CreateOutputFileWithNewName (OutputRoot' File.Name' ref sw);  		//Takes Current Output Directory & File Name (Coded By Rayyan)  		bgWorker.ReportProgress (ProgressCount' File.Name);  		string line = "";  		string result = "";  		while ((line = sr.ReadLine ()) != null) {  			if (line != "") {  				//show first 10 characters from line in windows title  				bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  				result = GetTranslationBack (line);  				int G = 1;  				while (result == "-1") {  					bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  					clientMicrosoft = null;  					timerPause.Enabled = false;  					Thread.Sleep (5000 * G);  					// we need to reduce the sleep tiime to 5 seconds  					if (radGoogle.Checked) {  						//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  					}  					else {  						clientMicrosoft = new SoapService ();  					}  					timerPause.Enabled = true;  					result = GetTranslationBack (line);  				}  				sw.Write (" " + result + Environment.NewLine);  				sw.Flush ();  				Thread.Sleep (50);  			}  		}  		ProgressCount++;  		sr.Close ();  		sw.Close ();  		Cursor.Current = Cursors.Arrow;  	}  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: foreach (FileInfo File in Files) {  	if (File.Extension == ".txt") {  		sr = new StreamReader (File.FullName' Encoding.Default);  		CreateOutputFileWithNewName (OutputRoot' File.Name' ref sw);  		//Takes Current Output Directory & File Name (Coded By Rayyan)  		bgWorker.ReportProgress (ProgressCount' File.Name);  		string line = "";  		string result = "";  		while ((line = sr.ReadLine ()) != null) {  			if (line != "") {  				//show first 10 characters from line in windows title  				bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  				result = GetTranslationBack (line);  				int G = 1;  				while (result == "-1") {  					bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  					clientMicrosoft = null;  					timerPause.Enabled = false;  					Thread.Sleep (5000 * G);  					// we need to reduce the sleep tiime to 5 seconds  					if (radGoogle.Checked) {  						//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  					}  					else {  						clientMicrosoft = new SoapService ();  					}  					timerPause.Enabled = true;  					result = GetTranslationBack (line);  				}  				sw.Write (" " + result + Environment.NewLine);  				sw.Flush ();  				Thread.Sleep (50);  			}  		}  		ProgressCount++;  		sr.Close ();  		sw.Close ();  		Cursor.Current = Cursors.Arrow;  	}  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: foreach (FileInfo File in Files) {  	if (File.Extension == ".txt") {  		sr = new StreamReader (File.FullName' Encoding.Default);  		CreateOutputFileWithNewName (OutputRoot' File.Name' ref sw);  		//Takes Current Output Directory & File Name (Coded By Rayyan)  		bgWorker.ReportProgress (ProgressCount' File.Name);  		string line = "";  		string result = "";  		while ((line = sr.ReadLine ()) != null) {  			if (line != "") {  				//show first 10 characters from line in windows title  				bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  				result = GetTranslationBack (line);  				int G = 1;  				while (result == "-1") {  					bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  					clientMicrosoft = null;  					timerPause.Enabled = false;  					Thread.Sleep (5000 * G);  					// we need to reduce the sleep tiime to 5 seconds  					if (radGoogle.Checked) {  						//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  					}  					else {  						clientMicrosoft = new SoapService ();  					}  					timerPause.Enabled = true;  					result = GetTranslationBack (line);  				}  				sw.Write (" " + result + Environment.NewLine);  				sw.Flush ();  				Thread.Sleep (50);  			}  		}  		ProgressCount++;  		sr.Close ();  		sw.Close ();  		Cursor.Current = Cursors.Arrow;  	}  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: foreach (FileInfo File in Files) {  	if (File.Extension == ".txt") {  		sr = new StreamReader (File.FullName' Encoding.Default);  		CreateOutputFileWithNewName (OutputRoot' File.Name' ref sw);  		//Takes Current Output Directory & File Name (Coded By Rayyan)  		bgWorker.ReportProgress (ProgressCount' File.Name);  		string line = "";  		string result = "";  		while ((line = sr.ReadLine ()) != null) {  			if (line != "") {  				//show first 10 characters from line in windows title  				bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  				result = GetTranslationBack (line);  				int G = 1;  				while (result == "-1") {  					bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  					clientMicrosoft = null;  					timerPause.Enabled = false;  					Thread.Sleep (5000 * G);  					// we need to reduce the sleep tiime to 5 seconds  					if (radGoogle.Checked) {  						//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  					}  					else {  						clientMicrosoft = new SoapService ();  					}  					timerPause.Enabled = true;  					result = GetTranslationBack (line);  				}  				sw.Write (" " + result + Environment.NewLine);  				sw.Flush ();  				Thread.Sleep (50);  			}  		}  		ProgressCount++;  		sr.Close ();  		sw.Close ();  		Cursor.Current = Cursors.Arrow;  	}  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: if (File.Extension == ".txt") {  	sr = new StreamReader (File.FullName' Encoding.Default);  	CreateOutputFileWithNewName (OutputRoot' File.Name' ref sw);  	//Takes Current Output Directory & File Name (Coded By Rayyan)  	bgWorker.ReportProgress (ProgressCount' File.Name);  	string line = "";  	string result = "";  	while ((line = sr.ReadLine ()) != null) {  		if (line != "") {  			//show first 10 characters from line in windows title  			bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  			result = GetTranslationBack (line);  			int G = 1;  			while (result == "-1") {  				bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  				clientMicrosoft = null;  				timerPause.Enabled = false;  				Thread.Sleep (5000 * G);  				// we need to reduce the sleep tiime to 5 seconds  				if (radGoogle.Checked) {  					//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  				}  				else {  					clientMicrosoft = new SoapService ();  				}  				timerPause.Enabled = true;  				result = GetTranslationBack (line);  			}  			sw.Write (" " + result + Environment.NewLine);  			sw.Flush ();  			Thread.Sleep (50);  		}  	}  	ProgressCount++;  	sr.Close ();  	sw.Close ();  	Cursor.Current = Cursors.Arrow;  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: if (File.Extension == ".txt") {  	sr = new StreamReader (File.FullName' Encoding.Default);  	CreateOutputFileWithNewName (OutputRoot' File.Name' ref sw);  	//Takes Current Output Directory & File Name (Coded By Rayyan)  	bgWorker.ReportProgress (ProgressCount' File.Name);  	string line = "";  	string result = "";  	while ((line = sr.ReadLine ()) != null) {  		if (line != "") {  			//show first 10 characters from line in windows title  			bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  			result = GetTranslationBack (line);  			int G = 1;  			while (result == "-1") {  				bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  				clientMicrosoft = null;  				timerPause.Enabled = false;  				Thread.Sleep (5000 * G);  				// we need to reduce the sleep tiime to 5 seconds  				if (radGoogle.Checked) {  					//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  				}  				else {  					clientMicrosoft = new SoapService ();  				}  				timerPause.Enabled = true;  				result = GetTranslationBack (line);  			}  			sw.Write (" " + result + Environment.NewLine);  			sw.Flush ();  			Thread.Sleep (50);  		}  	}  	ProgressCount++;  	sr.Close ();  	sw.Close ();  	Cursor.Current = Cursors.Arrow;  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: if (File.Extension == ".txt") {  	sr = new StreamReader (File.FullName' Encoding.Default);  	CreateOutputFileWithNewName (OutputRoot' File.Name' ref sw);  	//Takes Current Output Directory & File Name (Coded By Rayyan)  	bgWorker.ReportProgress (ProgressCount' File.Name);  	string line = "";  	string result = "";  	while ((line = sr.ReadLine ()) != null) {  		if (line != "") {  			//show first 10 characters from line in windows title  			bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  			result = GetTranslationBack (line);  			int G = 1;  			while (result == "-1") {  				bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  				clientMicrosoft = null;  				timerPause.Enabled = false;  				Thread.Sleep (5000 * G);  				// we need to reduce the sleep tiime to 5 seconds  				if (radGoogle.Checked) {  					//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  				}  				else {  					clientMicrosoft = new SoapService ();  				}  				timerPause.Enabled = true;  				result = GetTranslationBack (line);  			}  			sw.Write (" " + result + Environment.NewLine);  			sw.Flush ();  			Thread.Sleep (50);  		}  	}  	ProgressCount++;  	sr.Close ();  	sw.Close ();  	Cursor.Current = Cursors.Arrow;  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: if (File.Extension == ".txt") {  	sr = new StreamReader (File.FullName' Encoding.Default);  	CreateOutputFileWithNewName (OutputRoot' File.Name' ref sw);  	//Takes Current Output Directory & File Name (Coded By Rayyan)  	bgWorker.ReportProgress (ProgressCount' File.Name);  	string line = "";  	string result = "";  	while ((line = sr.ReadLine ()) != null) {  		if (line != "") {  			//show first 10 characters from line in windows title  			bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  			result = GetTranslationBack (line);  			int G = 1;  			while (result == "-1") {  				bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  				clientMicrosoft = null;  				timerPause.Enabled = false;  				Thread.Sleep (5000 * G);  				// we need to reduce the sleep tiime to 5 seconds  				if (radGoogle.Checked) {  					//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  				}  				else {  					clientMicrosoft = new SoapService ();  				}  				timerPause.Enabled = true;  				result = GetTranslationBack (line);  			}  			sw.Write (" " + result + Environment.NewLine);  			sw.Flush ();  			Thread.Sleep (50);  		}  	}  	ProgressCount++;  	sr.Close ();  	sw.Close ();  	Cursor.Current = Cursors.Arrow;  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: if (File.Extension == ".txt") {  	sr = new StreamReader (File.FullName' Encoding.Default);  	CreateOutputFileWithNewName (OutputRoot' File.Name' ref sw);  	//Takes Current Output Directory & File Name (Coded By Rayyan)  	bgWorker.ReportProgress (ProgressCount' File.Name);  	string line = "";  	string result = "";  	while ((line = sr.ReadLine ()) != null) {  		if (line != "") {  			//show first 10 characters from line in windows title  			bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  			result = GetTranslationBack (line);  			int G = 1;  			while (result == "-1") {  				bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  				clientMicrosoft = null;  				timerPause.Enabled = false;  				Thread.Sleep (5000 * G);  				// we need to reduce the sleep tiime to 5 seconds  				if (radGoogle.Checked) {  					//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  				}  				else {  					clientMicrosoft = new SoapService ();  				}  				timerPause.Enabled = true;  				result = GetTranslationBack (line);  			}  			sw.Write (" " + result + Environment.NewLine);  			sw.Flush ();  			Thread.Sleep (50);  		}  	}  	ProgressCount++;  	sr.Close ();  	sw.Close ();  	Cursor.Current = Cursors.Arrow;  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: while ((line = sr.ReadLine ()) != null) {  	if (line != "") {  		//show first 10 characters from line in windows title  		bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  		result = GetTranslationBack (line);  		int G = 1;  		while (result == "-1") {  			bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  			clientMicrosoft = null;  			timerPause.Enabled = false;  			Thread.Sleep (5000 * G);  			// we need to reduce the sleep tiime to 5 seconds  			if (radGoogle.Checked) {  				//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  			}  			else {  				clientMicrosoft = new SoapService ();  			}  			timerPause.Enabled = true;  			result = GetTranslationBack (line);  		}  		sw.Write (" " + result + Environment.NewLine);  		sw.Flush ();  		Thread.Sleep (50);  	}  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: while ((line = sr.ReadLine ()) != null) {  	if (line != "") {  		//show first 10 characters from line in windows title  		bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  		result = GetTranslationBack (line);  		int G = 1;  		while (result == "-1") {  			bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  			clientMicrosoft = null;  			timerPause.Enabled = false;  			Thread.Sleep (5000 * G);  			// we need to reduce the sleep tiime to 5 seconds  			if (radGoogle.Checked) {  				//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  			}  			else {  				clientMicrosoft = new SoapService ();  			}  			timerPause.Enabled = true;  			result = GetTranslationBack (line);  		}  		sw.Write (" " + result + Environment.NewLine);  		sw.Flush ();  		Thread.Sleep (50);  	}  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: while ((line = sr.ReadLine ()) != null) {  	if (line != "") {  		//show first 10 characters from line in windows title  		bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  		result = GetTranslationBack (line);  		int G = 1;  		while (result == "-1") {  			bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  			clientMicrosoft = null;  			timerPause.Enabled = false;  			Thread.Sleep (5000 * G);  			// we need to reduce the sleep tiime to 5 seconds  			if (radGoogle.Checked) {  				//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  			}  			else {  				clientMicrosoft = new SoapService ();  			}  			timerPause.Enabled = true;  			result = GetTranslationBack (line);  		}  		sw.Write (" " + result + Environment.NewLine);  		sw.Flush ();  		Thread.Sleep (50);  	}  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: while ((line = sr.ReadLine ()) != null) {  	if (line != "") {  		//show first 10 characters from line in windows title  		bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  		result = GetTranslationBack (line);  		int G = 1;  		while (result == "-1") {  			bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  			clientMicrosoft = null;  			timerPause.Enabled = false;  			Thread.Sleep (5000 * G);  			// we need to reduce the sleep tiime to 5 seconds  			if (radGoogle.Checked) {  				//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  			}  			else {  				clientMicrosoft = new SoapService ();  			}  			timerPause.Enabled = true;  			result = GetTranslationBack (line);  		}  		sw.Write (" " + result + Environment.NewLine);  		sw.Flush ();  		Thread.Sleep (50);  	}  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: while ((line = sr.ReadLine ()) != null) {  	if (line != "") {  		//show first 10 characters from line in windows title  		bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  		result = GetTranslationBack (line);  		int G = 1;  		while (result == "-1") {  			bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  			clientMicrosoft = null;  			timerPause.Enabled = false;  			Thread.Sleep (5000 * G);  			// we need to reduce the sleep tiime to 5 seconds  			if (radGoogle.Checked) {  				//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  			}  			else {  				clientMicrosoft = new SoapService ();  			}  			timerPause.Enabled = true;  			result = GetTranslationBack (line);  		}  		sw.Write (" " + result + Environment.NewLine);  		sw.Flush ();  		Thread.Sleep (50);  	}  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: if (line != "") {  	//show first 10 characters from line in windows title  	bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  	result = GetTranslationBack (line);  	int G = 1;  	while (result == "-1") {  		bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  		clientMicrosoft = null;  		timerPause.Enabled = false;  		Thread.Sleep (5000 * G);  		// we need to reduce the sleep tiime to 5 seconds  		if (radGoogle.Checked) {  			//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  		}  		else {  			clientMicrosoft = new SoapService ();  		}  		timerPause.Enabled = true;  		result = GetTranslationBack (line);  	}  	sw.Write (" " + result + Environment.NewLine);  	sw.Flush ();  	Thread.Sleep (50);  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: if (line != "") {  	//show first 10 characters from line in windows title  	bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  	result = GetTranslationBack (line);  	int G = 1;  	while (result == "-1") {  		bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  		clientMicrosoft = null;  		timerPause.Enabled = false;  		Thread.Sleep (5000 * G);  		// we need to reduce the sleep tiime to 5 seconds  		if (radGoogle.Checked) {  			//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  		}  		else {  			clientMicrosoft = new SoapService ();  		}  		timerPause.Enabled = true;  		result = GetTranslationBack (line);  	}  	sw.Write (" " + result + Environment.NewLine);  	sw.Flush ();  	Thread.Sleep (50);  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: if (line != "") {  	//show first 10 characters from line in windows title  	bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  	result = GetTranslationBack (line);  	int G = 1;  	while (result == "-1") {  		bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  		clientMicrosoft = null;  		timerPause.Enabled = false;  		Thread.Sleep (5000 * G);  		// we need to reduce the sleep tiime to 5 seconds  		if (radGoogle.Checked) {  			//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  		}  		else {  			clientMicrosoft = new SoapService ();  		}  		timerPause.Enabled = true;  		result = GetTranslationBack (line);  	}  	sw.Write (" " + result + Environment.NewLine);  	sw.Flush ();  	Thread.Sleep (50);  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: if (line != "") {  	//show first 10 characters from line in windows title  	bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  	result = GetTranslationBack (line);  	int G = 1;  	while (result == "-1") {  		bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  		clientMicrosoft = null;  		timerPause.Enabled = false;  		Thread.Sleep (5000 * G);  		// we need to reduce the sleep tiime to 5 seconds  		if (radGoogle.Checked) {  			//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  		}  		else {  			clientMicrosoft = new SoapService ();  		}  		timerPause.Enabled = true;  		result = GetTranslationBack (line);  	}  	sw.Write (" " + result + Environment.NewLine);  	sw.Flush ();  	Thread.Sleep (50);  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: if (line != "") {  	//show first 10 characters from line in windows title  	bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  	result = GetTranslationBack (line);  	int G = 1;  	while (result == "-1") {  		bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  		clientMicrosoft = null;  		timerPause.Enabled = false;  		Thread.Sleep (5000 * G);  		// we need to reduce the sleep tiime to 5 seconds  		if (radGoogle.Checked) {  			//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  		}  		else {  			clientMicrosoft = new SoapService ();  		}  		timerPause.Enabled = true;  		result = GetTranslationBack (line);  	}  	sw.Write (" " + result + Environment.NewLine);  	sw.Flush ();  	Thread.Sleep (50);  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: bgWorker.ReportProgress (ProgressCount' File.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........");  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: while (result == "-1") {  	bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  	clientMicrosoft = null;  	timerPause.Enabled = false;  	Thread.Sleep (5000 * G);  	// we need to reduce the sleep tiime to 5 seconds  	if (radGoogle.Checked) {  		//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  	}  	else {  		clientMicrosoft = new SoapService ();  	}  	timerPause.Enabled = true;  	result = GetTranslationBack (line);  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: while (result == "-1") {  	bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  	clientMicrosoft = null;  	timerPause.Enabled = false;  	Thread.Sleep (5000 * G);  	// we need to reduce the sleep tiime to 5 seconds  	if (radGoogle.Checked) {  		//client = new TranslateClient("www.allah.com/" + DateTime.Now.Ticks);  	}  	else {  		clientMicrosoft = new SoapService ();  	}  	timerPause.Enabled = true;  	result = GetTranslationBack (line);  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: bgWorker.ReportProgress (ProgressCount' "***Service complaining!..pausing for " + G * 5 + " seconds and trying again...");  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: Thread.Sleep (5000 * G);  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationWork,The following statement contains a magic number: Thread.Sleep (50);  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,PauseWork,The following statement contains a magic number: if (radGoogle.Checked) {  	bgWorker2.ReportProgress (0' "Google Taking breath - Pausing for " + txtSeconds.Text + " seconds...");  	Thread.Sleep (Convert.ToInt32 (txtSeconds.Text) * 1000);  }  else {  	clientMicrosoft = null;  	bgWorker2.ReportProgress (0' "Microsoft Taking breath - Pausing for " + txtSeconds.Text + " seconds...");  	Thread.Sleep (Convert.ToInt32 (txtSeconds.Text) * 1000);  	clientMicrosoft = new SoapService ();  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,PauseWork,The following statement contains a magic number: if (radGoogle.Checked) {  	bgWorker2.ReportProgress (0' "Google Taking breath - Pausing for " + txtSeconds.Text + " seconds...");  	Thread.Sleep (Convert.ToInt32 (txtSeconds.Text) * 1000);  }  else {  	clientMicrosoft = null;  	bgWorker2.ReportProgress (0' "Microsoft Taking breath - Pausing for " + txtSeconds.Text + " seconds...");  	Thread.Sleep (Convert.ToInt32 (txtSeconds.Text) * 1000);  	clientMicrosoft = new SoapService ();  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,PauseWork,The following statement contains a magic number: Thread.Sleep (Convert.ToInt32 (txtSeconds.Text) * 1000);  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,PauseWork,The following statement contains a magic number: Thread.Sleep (Convert.ToInt32 (txtSeconds.Text) * 1000);  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,txtMins_TextChanged,The following statement contains a magic number: timerPause.Interval = Convert.ToInt32 (txtMins.Text) * 60 * 1000;  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,txtMins_TextChanged,The following statement contains a magic number: timerPause.Interval = Convert.ToInt32 (txtMins.Text) * 60 * 1000;  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,cmdTranslateAll_Click,The following statement contains a magic number: timerPause.Interval = Convert.ToInt32 (txtMins.Text) * 60 * 1000;  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,cmdTranslateAll_Click,The following statement contains a magic number: timerPause.Interval = Convert.ToInt32 (txtMins.Text) * 60 * 1000;  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,bgWorkerTranslateAll_RunWorkerCompleted,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: try {  	String NewOutputDir;  	DirectoryInfo OutputRoot;  	String LongLngTo = GetLongLanguageValueInTranslateAllArray (LangTo);  	String LongLngFrom = GetLongLanguageValueInTranslateAllArray ("en");  	//txtLangFrom.Text  	if (Root == StartingRoot) {  		NewOutputDir = txtTranslationOutFolder.Text + "\\" + LongLngTo;  	}  	else {  		NewOutputDir = txtTranslationOutFolder.Text + "\\" + LongLngTo + "\\" + Root.FullName.Substring (Root.FullName.IndexOf (LongLngFrom + "\\") + LongLngFrom.Length + 1);  	}  	SaveConfigSettings ("CurrentTargetLanguage"' LangTo);  	OutputRoot = new DirectoryInfo (NewOutputDir);  	Directory.CreateDirectory (OutputRoot.FullName);  	var Files = Root.GetFiles ().ToList ();  	//Traverse Through All Files In Current Directory (Coded By Rayyan)  	foreach (FileInfo file in Files) {  		if (file.Extension == ".txt") {  			SaveConfigSettings ("CurrentSourceFileName"' file.Name);  			sr = new StreamReader (file.FullName' Encoding.Default);  			CreateOutputFileWithNewName (OutputRoot' file.Name' ref sw);  			string s = file.Name;  			UpdateUIParts3 (s);  			string line = "";  			while ((line = sr.ReadLine ()) != null) {  				if (line != "") {  					//show first 10 characters from line in windows title  					s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  					UpdateUILabelAndLog (s);  					string result = line.Trim ().StartsWith ("#") ? line : GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  					while (result == "-1") {  						s = "***Service complaining!..pausing for 5 seconds and trying again...";  						UpdateUIParts2 (s);  						clientMicrosoft = null;  						timerPause.Enabled = false;  						Thread.Sleep (5000 * 1);  						// we need to reduce the sleep time to 5 seconds  						if (!radGoogle.Checked) {  							clientMicrosoft = new SoapService ();  						}  						timerPause.Enabled = true;  						result = GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  					}  					sw.Write (" " + result + Environment.NewLine);  					sw.Flush ();  					Thread.Sleep (50);  				}  			}  			sr.Close ();  			sw.Close ();  			Cursor.Current = Cursors.Arrow;  		}  	}  	//After All Files Are Converted & Placed In Respective Output Directories (Coded By Rayyan)  	//Get All Sub-Directories From Current Directory (Coded By Rayyan)  	var subDirectories = Root.GetDirectories ();  	foreach (var subDir in subDirectories) {  		BgWTranslationAllWork (subDir' LangTo);  	}  }  catch (Exception ex) {  	MessageBox.Show (ex.ToString ());  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: try {  	String NewOutputDir;  	DirectoryInfo OutputRoot;  	String LongLngTo = GetLongLanguageValueInTranslateAllArray (LangTo);  	String LongLngFrom = GetLongLanguageValueInTranslateAllArray ("en");  	//txtLangFrom.Text  	if (Root == StartingRoot) {  		NewOutputDir = txtTranslationOutFolder.Text + "\\" + LongLngTo;  	}  	else {  		NewOutputDir = txtTranslationOutFolder.Text + "\\" + LongLngTo + "\\" + Root.FullName.Substring (Root.FullName.IndexOf (LongLngFrom + "\\") + LongLngFrom.Length + 1);  	}  	SaveConfigSettings ("CurrentTargetLanguage"' LangTo);  	OutputRoot = new DirectoryInfo (NewOutputDir);  	Directory.CreateDirectory (OutputRoot.FullName);  	var Files = Root.GetFiles ().ToList ();  	//Traverse Through All Files In Current Directory (Coded By Rayyan)  	foreach (FileInfo file in Files) {  		if (file.Extension == ".txt") {  			SaveConfigSettings ("CurrentSourceFileName"' file.Name);  			sr = new StreamReader (file.FullName' Encoding.Default);  			CreateOutputFileWithNewName (OutputRoot' file.Name' ref sw);  			string s = file.Name;  			UpdateUIParts3 (s);  			string line = "";  			while ((line = sr.ReadLine ()) != null) {  				if (line != "") {  					//show first 10 characters from line in windows title  					s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  					UpdateUILabelAndLog (s);  					string result = line.Trim ().StartsWith ("#") ? line : GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  					while (result == "-1") {  						s = "***Service complaining!..pausing for 5 seconds and trying again...";  						UpdateUIParts2 (s);  						clientMicrosoft = null;  						timerPause.Enabled = false;  						Thread.Sleep (5000 * 1);  						// we need to reduce the sleep time to 5 seconds  						if (!radGoogle.Checked) {  							clientMicrosoft = new SoapService ();  						}  						timerPause.Enabled = true;  						result = GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  					}  					sw.Write (" " + result + Environment.NewLine);  					sw.Flush ();  					Thread.Sleep (50);  				}  			}  			sr.Close ();  			sw.Close ();  			Cursor.Current = Cursors.Arrow;  		}  	}  	//After All Files Are Converted & Placed In Respective Output Directories (Coded By Rayyan)  	//Get All Sub-Directories From Current Directory (Coded By Rayyan)  	var subDirectories = Root.GetDirectories ();  	foreach (var subDir in subDirectories) {  		BgWTranslationAllWork (subDir' LangTo);  	}  }  catch (Exception ex) {  	MessageBox.Show (ex.ToString ());  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: try {  	String NewOutputDir;  	DirectoryInfo OutputRoot;  	String LongLngTo = GetLongLanguageValueInTranslateAllArray (LangTo);  	String LongLngFrom = GetLongLanguageValueInTranslateAllArray ("en");  	//txtLangFrom.Text  	if (Root == StartingRoot) {  		NewOutputDir = txtTranslationOutFolder.Text + "\\" + LongLngTo;  	}  	else {  		NewOutputDir = txtTranslationOutFolder.Text + "\\" + LongLngTo + "\\" + Root.FullName.Substring (Root.FullName.IndexOf (LongLngFrom + "\\") + LongLngFrom.Length + 1);  	}  	SaveConfigSettings ("CurrentTargetLanguage"' LangTo);  	OutputRoot = new DirectoryInfo (NewOutputDir);  	Directory.CreateDirectory (OutputRoot.FullName);  	var Files = Root.GetFiles ().ToList ();  	//Traverse Through All Files In Current Directory (Coded By Rayyan)  	foreach (FileInfo file in Files) {  		if (file.Extension == ".txt") {  			SaveConfigSettings ("CurrentSourceFileName"' file.Name);  			sr = new StreamReader (file.FullName' Encoding.Default);  			CreateOutputFileWithNewName (OutputRoot' file.Name' ref sw);  			string s = file.Name;  			UpdateUIParts3 (s);  			string line = "";  			while ((line = sr.ReadLine ()) != null) {  				if (line != "") {  					//show first 10 characters from line in windows title  					s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  					UpdateUILabelAndLog (s);  					string result = line.Trim ().StartsWith ("#") ? line : GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  					while (result == "-1") {  						s = "***Service complaining!..pausing for 5 seconds and trying again...";  						UpdateUIParts2 (s);  						clientMicrosoft = null;  						timerPause.Enabled = false;  						Thread.Sleep (5000 * 1);  						// we need to reduce the sleep time to 5 seconds  						if (!radGoogle.Checked) {  							clientMicrosoft = new SoapService ();  						}  						timerPause.Enabled = true;  						result = GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  					}  					sw.Write (" " + result + Environment.NewLine);  					sw.Flush ();  					Thread.Sleep (50);  				}  			}  			sr.Close ();  			sw.Close ();  			Cursor.Current = Cursors.Arrow;  		}  	}  	//After All Files Are Converted & Placed In Respective Output Directories (Coded By Rayyan)  	//Get All Sub-Directories From Current Directory (Coded By Rayyan)  	var subDirectories = Root.GetDirectories ();  	foreach (var subDir in subDirectories) {  		BgWTranslationAllWork (subDir' LangTo);  	}  }  catch (Exception ex) {  	MessageBox.Show (ex.ToString ());  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: try {  	String NewOutputDir;  	DirectoryInfo OutputRoot;  	String LongLngTo = GetLongLanguageValueInTranslateAllArray (LangTo);  	String LongLngFrom = GetLongLanguageValueInTranslateAllArray ("en");  	//txtLangFrom.Text  	if (Root == StartingRoot) {  		NewOutputDir = txtTranslationOutFolder.Text + "\\" + LongLngTo;  	}  	else {  		NewOutputDir = txtTranslationOutFolder.Text + "\\" + LongLngTo + "\\" + Root.FullName.Substring (Root.FullName.IndexOf (LongLngFrom + "\\") + LongLngFrom.Length + 1);  	}  	SaveConfigSettings ("CurrentTargetLanguage"' LangTo);  	OutputRoot = new DirectoryInfo (NewOutputDir);  	Directory.CreateDirectory (OutputRoot.FullName);  	var Files = Root.GetFiles ().ToList ();  	//Traverse Through All Files In Current Directory (Coded By Rayyan)  	foreach (FileInfo file in Files) {  		if (file.Extension == ".txt") {  			SaveConfigSettings ("CurrentSourceFileName"' file.Name);  			sr = new StreamReader (file.FullName' Encoding.Default);  			CreateOutputFileWithNewName (OutputRoot' file.Name' ref sw);  			string s = file.Name;  			UpdateUIParts3 (s);  			string line = "";  			while ((line = sr.ReadLine ()) != null) {  				if (line != "") {  					//show first 10 characters from line in windows title  					s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  					UpdateUILabelAndLog (s);  					string result = line.Trim ().StartsWith ("#") ? line : GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  					while (result == "-1") {  						s = "***Service complaining!..pausing for 5 seconds and trying again...";  						UpdateUIParts2 (s);  						clientMicrosoft = null;  						timerPause.Enabled = false;  						Thread.Sleep (5000 * 1);  						// we need to reduce the sleep time to 5 seconds  						if (!radGoogle.Checked) {  							clientMicrosoft = new SoapService ();  						}  						timerPause.Enabled = true;  						result = GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  					}  					sw.Write (" " + result + Environment.NewLine);  					sw.Flush ();  					Thread.Sleep (50);  				}  			}  			sr.Close ();  			sw.Close ();  			Cursor.Current = Cursors.Arrow;  		}  	}  	//After All Files Are Converted & Placed In Respective Output Directories (Coded By Rayyan)  	//Get All Sub-Directories From Current Directory (Coded By Rayyan)  	var subDirectories = Root.GetDirectories ();  	foreach (var subDir in subDirectories) {  		BgWTranslationAllWork (subDir' LangTo);  	}  }  catch (Exception ex) {  	MessageBox.Show (ex.ToString ());  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: foreach (FileInfo file in Files) {  	if (file.Extension == ".txt") {  		SaveConfigSettings ("CurrentSourceFileName"' file.Name);  		sr = new StreamReader (file.FullName' Encoding.Default);  		CreateOutputFileWithNewName (OutputRoot' file.Name' ref sw);  		string s = file.Name;  		UpdateUIParts3 (s);  		string line = "";  		while ((line = sr.ReadLine ()) != null) {  			if (line != "") {  				//show first 10 characters from line in windows title  				s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  				UpdateUILabelAndLog (s);  				string result = line.Trim ().StartsWith ("#") ? line : GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  				while (result == "-1") {  					s = "***Service complaining!..pausing for 5 seconds and trying again...";  					UpdateUIParts2 (s);  					clientMicrosoft = null;  					timerPause.Enabled = false;  					Thread.Sleep (5000 * 1);  					// we need to reduce the sleep time to 5 seconds  					if (!radGoogle.Checked) {  						clientMicrosoft = new SoapService ();  					}  					timerPause.Enabled = true;  					result = GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  				}  				sw.Write (" " + result + Environment.NewLine);  				sw.Flush ();  				Thread.Sleep (50);  			}  		}  		sr.Close ();  		sw.Close ();  		Cursor.Current = Cursors.Arrow;  	}  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: foreach (FileInfo file in Files) {  	if (file.Extension == ".txt") {  		SaveConfigSettings ("CurrentSourceFileName"' file.Name);  		sr = new StreamReader (file.FullName' Encoding.Default);  		CreateOutputFileWithNewName (OutputRoot' file.Name' ref sw);  		string s = file.Name;  		UpdateUIParts3 (s);  		string line = "";  		while ((line = sr.ReadLine ()) != null) {  			if (line != "") {  				//show first 10 characters from line in windows title  				s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  				UpdateUILabelAndLog (s);  				string result = line.Trim ().StartsWith ("#") ? line : GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  				while (result == "-1") {  					s = "***Service complaining!..pausing for 5 seconds and trying again...";  					UpdateUIParts2 (s);  					clientMicrosoft = null;  					timerPause.Enabled = false;  					Thread.Sleep (5000 * 1);  					// we need to reduce the sleep time to 5 seconds  					if (!radGoogle.Checked) {  						clientMicrosoft = new SoapService ();  					}  					timerPause.Enabled = true;  					result = GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  				}  				sw.Write (" " + result + Environment.NewLine);  				sw.Flush ();  				Thread.Sleep (50);  			}  		}  		sr.Close ();  		sw.Close ();  		Cursor.Current = Cursors.Arrow;  	}  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: foreach (FileInfo file in Files) {  	if (file.Extension == ".txt") {  		SaveConfigSettings ("CurrentSourceFileName"' file.Name);  		sr = new StreamReader (file.FullName' Encoding.Default);  		CreateOutputFileWithNewName (OutputRoot' file.Name' ref sw);  		string s = file.Name;  		UpdateUIParts3 (s);  		string line = "";  		while ((line = sr.ReadLine ()) != null) {  			if (line != "") {  				//show first 10 characters from line in windows title  				s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  				UpdateUILabelAndLog (s);  				string result = line.Trim ().StartsWith ("#") ? line : GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  				while (result == "-1") {  					s = "***Service complaining!..pausing for 5 seconds and trying again...";  					UpdateUIParts2 (s);  					clientMicrosoft = null;  					timerPause.Enabled = false;  					Thread.Sleep (5000 * 1);  					// we need to reduce the sleep time to 5 seconds  					if (!radGoogle.Checked) {  						clientMicrosoft = new SoapService ();  					}  					timerPause.Enabled = true;  					result = GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  				}  				sw.Write (" " + result + Environment.NewLine);  				sw.Flush ();  				Thread.Sleep (50);  			}  		}  		sr.Close ();  		sw.Close ();  		Cursor.Current = Cursors.Arrow;  	}  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: foreach (FileInfo file in Files) {  	if (file.Extension == ".txt") {  		SaveConfigSettings ("CurrentSourceFileName"' file.Name);  		sr = new StreamReader (file.FullName' Encoding.Default);  		CreateOutputFileWithNewName (OutputRoot' file.Name' ref sw);  		string s = file.Name;  		UpdateUIParts3 (s);  		string line = "";  		while ((line = sr.ReadLine ()) != null) {  			if (line != "") {  				//show first 10 characters from line in windows title  				s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  				UpdateUILabelAndLog (s);  				string result = line.Trim ().StartsWith ("#") ? line : GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  				while (result == "-1") {  					s = "***Service complaining!..pausing for 5 seconds and trying again...";  					UpdateUIParts2 (s);  					clientMicrosoft = null;  					timerPause.Enabled = false;  					Thread.Sleep (5000 * 1);  					// we need to reduce the sleep time to 5 seconds  					if (!radGoogle.Checked) {  						clientMicrosoft = new SoapService ();  					}  					timerPause.Enabled = true;  					result = GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  				}  				sw.Write (" " + result + Environment.NewLine);  				sw.Flush ();  				Thread.Sleep (50);  			}  		}  		sr.Close ();  		sw.Close ();  		Cursor.Current = Cursors.Arrow;  	}  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: if (file.Extension == ".txt") {  	SaveConfigSettings ("CurrentSourceFileName"' file.Name);  	sr = new StreamReader (file.FullName' Encoding.Default);  	CreateOutputFileWithNewName (OutputRoot' file.Name' ref sw);  	string s = file.Name;  	UpdateUIParts3 (s);  	string line = "";  	while ((line = sr.ReadLine ()) != null) {  		if (line != "") {  			//show first 10 characters from line in windows title  			s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  			UpdateUILabelAndLog (s);  			string result = line.Trim ().StartsWith ("#") ? line : GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  			while (result == "-1") {  				s = "***Service complaining!..pausing for 5 seconds and trying again...";  				UpdateUIParts2 (s);  				clientMicrosoft = null;  				timerPause.Enabled = false;  				Thread.Sleep (5000 * 1);  				// we need to reduce the sleep time to 5 seconds  				if (!radGoogle.Checked) {  					clientMicrosoft = new SoapService ();  				}  				timerPause.Enabled = true;  				result = GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  			}  			sw.Write (" " + result + Environment.NewLine);  			sw.Flush ();  			Thread.Sleep (50);  		}  	}  	sr.Close ();  	sw.Close ();  	Cursor.Current = Cursors.Arrow;  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: if (file.Extension == ".txt") {  	SaveConfigSettings ("CurrentSourceFileName"' file.Name);  	sr = new StreamReader (file.FullName' Encoding.Default);  	CreateOutputFileWithNewName (OutputRoot' file.Name' ref sw);  	string s = file.Name;  	UpdateUIParts3 (s);  	string line = "";  	while ((line = sr.ReadLine ()) != null) {  		if (line != "") {  			//show first 10 characters from line in windows title  			s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  			UpdateUILabelAndLog (s);  			string result = line.Trim ().StartsWith ("#") ? line : GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  			while (result == "-1") {  				s = "***Service complaining!..pausing for 5 seconds and trying again...";  				UpdateUIParts2 (s);  				clientMicrosoft = null;  				timerPause.Enabled = false;  				Thread.Sleep (5000 * 1);  				// we need to reduce the sleep time to 5 seconds  				if (!radGoogle.Checked) {  					clientMicrosoft = new SoapService ();  				}  				timerPause.Enabled = true;  				result = GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  			}  			sw.Write (" " + result + Environment.NewLine);  			sw.Flush ();  			Thread.Sleep (50);  		}  	}  	sr.Close ();  	sw.Close ();  	Cursor.Current = Cursors.Arrow;  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: if (file.Extension == ".txt") {  	SaveConfigSettings ("CurrentSourceFileName"' file.Name);  	sr = new StreamReader (file.FullName' Encoding.Default);  	CreateOutputFileWithNewName (OutputRoot' file.Name' ref sw);  	string s = file.Name;  	UpdateUIParts3 (s);  	string line = "";  	while ((line = sr.ReadLine ()) != null) {  		if (line != "") {  			//show first 10 characters from line in windows title  			s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  			UpdateUILabelAndLog (s);  			string result = line.Trim ().StartsWith ("#") ? line : GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  			while (result == "-1") {  				s = "***Service complaining!..pausing for 5 seconds and trying again...";  				UpdateUIParts2 (s);  				clientMicrosoft = null;  				timerPause.Enabled = false;  				Thread.Sleep (5000 * 1);  				// we need to reduce the sleep time to 5 seconds  				if (!radGoogle.Checked) {  					clientMicrosoft = new SoapService ();  				}  				timerPause.Enabled = true;  				result = GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  			}  			sw.Write (" " + result + Environment.NewLine);  			sw.Flush ();  			Thread.Sleep (50);  		}  	}  	sr.Close ();  	sw.Close ();  	Cursor.Current = Cursors.Arrow;  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: if (file.Extension == ".txt") {  	SaveConfigSettings ("CurrentSourceFileName"' file.Name);  	sr = new StreamReader (file.FullName' Encoding.Default);  	CreateOutputFileWithNewName (OutputRoot' file.Name' ref sw);  	string s = file.Name;  	UpdateUIParts3 (s);  	string line = "";  	while ((line = sr.ReadLine ()) != null) {  		if (line != "") {  			//show first 10 characters from line in windows title  			s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  			UpdateUILabelAndLog (s);  			string result = line.Trim ().StartsWith ("#") ? line : GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  			while (result == "-1") {  				s = "***Service complaining!..pausing for 5 seconds and trying again...";  				UpdateUIParts2 (s);  				clientMicrosoft = null;  				timerPause.Enabled = false;  				Thread.Sleep (5000 * 1);  				// we need to reduce the sleep time to 5 seconds  				if (!radGoogle.Checked) {  					clientMicrosoft = new SoapService ();  				}  				timerPause.Enabled = true;  				result = GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  			}  			sw.Write (" " + result + Environment.NewLine);  			sw.Flush ();  			Thread.Sleep (50);  		}  	}  	sr.Close ();  	sw.Close ();  	Cursor.Current = Cursors.Arrow;  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: while ((line = sr.ReadLine ()) != null) {  	if (line != "") {  		//show first 10 characters from line in windows title  		s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  		UpdateUILabelAndLog (s);  		string result = line.Trim ().StartsWith ("#") ? line : GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  		while (result == "-1") {  			s = "***Service complaining!..pausing for 5 seconds and trying again...";  			UpdateUIParts2 (s);  			clientMicrosoft = null;  			timerPause.Enabled = false;  			Thread.Sleep (5000 * 1);  			// we need to reduce the sleep time to 5 seconds  			if (!radGoogle.Checked) {  				clientMicrosoft = new SoapService ();  			}  			timerPause.Enabled = true;  			result = GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  		}  		sw.Write (" " + result + Environment.NewLine);  		sw.Flush ();  		Thread.Sleep (50);  	}  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: while ((line = sr.ReadLine ()) != null) {  	if (line != "") {  		//show first 10 characters from line in windows title  		s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  		UpdateUILabelAndLog (s);  		string result = line.Trim ().StartsWith ("#") ? line : GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  		while (result == "-1") {  			s = "***Service complaining!..pausing for 5 seconds and trying again...";  			UpdateUIParts2 (s);  			clientMicrosoft = null;  			timerPause.Enabled = false;  			Thread.Sleep (5000 * 1);  			// we need to reduce the sleep time to 5 seconds  			if (!radGoogle.Checked) {  				clientMicrosoft = new SoapService ();  			}  			timerPause.Enabled = true;  			result = GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  		}  		sw.Write (" " + result + Environment.NewLine);  		sw.Flush ();  		Thread.Sleep (50);  	}  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: while ((line = sr.ReadLine ()) != null) {  	if (line != "") {  		//show first 10 characters from line in windows title  		s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  		UpdateUILabelAndLog (s);  		string result = line.Trim ().StartsWith ("#") ? line : GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  		while (result == "-1") {  			s = "***Service complaining!..pausing for 5 seconds and trying again...";  			UpdateUIParts2 (s);  			clientMicrosoft = null;  			timerPause.Enabled = false;  			Thread.Sleep (5000 * 1);  			// we need to reduce the sleep time to 5 seconds  			if (!radGoogle.Checked) {  				clientMicrosoft = new SoapService ();  			}  			timerPause.Enabled = true;  			result = GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  		}  		sw.Write (" " + result + Environment.NewLine);  		sw.Flush ();  		Thread.Sleep (50);  	}  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: while ((line = sr.ReadLine ()) != null) {  	if (line != "") {  		//show first 10 characters from line in windows title  		s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  		UpdateUILabelAndLog (s);  		string result = line.Trim ().StartsWith ("#") ? line : GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  		while (result == "-1") {  			s = "***Service complaining!..pausing for 5 seconds and trying again...";  			UpdateUIParts2 (s);  			clientMicrosoft = null;  			timerPause.Enabled = false;  			Thread.Sleep (5000 * 1);  			// we need to reduce the sleep time to 5 seconds  			if (!radGoogle.Checked) {  				clientMicrosoft = new SoapService ();  			}  			timerPause.Enabled = true;  			result = GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  		}  		sw.Write (" " + result + Environment.NewLine);  		sw.Flush ();  		Thread.Sleep (50);  	}  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: if (line != "") {  	//show first 10 characters from line in windows title  	s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  	UpdateUILabelAndLog (s);  	string result = line.Trim ().StartsWith ("#") ? line : GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  	while (result == "-1") {  		s = "***Service complaining!..pausing for 5 seconds and trying again...";  		UpdateUIParts2 (s);  		clientMicrosoft = null;  		timerPause.Enabled = false;  		Thread.Sleep (5000 * 1);  		// we need to reduce the sleep time to 5 seconds  		if (!radGoogle.Checked) {  			clientMicrosoft = new SoapService ();  		}  		timerPause.Enabled = true;  		result = GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  	}  	sw.Write (" " + result + Environment.NewLine);  	sw.Flush ();  	Thread.Sleep (50);  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: if (line != "") {  	//show first 10 characters from line in windows title  	s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  	UpdateUILabelAndLog (s);  	string result = line.Trim ().StartsWith ("#") ? line : GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  	while (result == "-1") {  		s = "***Service complaining!..pausing for 5 seconds and trying again...";  		UpdateUIParts2 (s);  		clientMicrosoft = null;  		timerPause.Enabled = false;  		Thread.Sleep (5000 * 1);  		// we need to reduce the sleep time to 5 seconds  		if (!radGoogle.Checked) {  			clientMicrosoft = new SoapService ();  		}  		timerPause.Enabled = true;  		result = GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  	}  	sw.Write (" " + result + Environment.NewLine);  	sw.Flush ();  	Thread.Sleep (50);  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: if (line != "") {  	//show first 10 characters from line in windows title  	s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  	UpdateUILabelAndLog (s);  	string result = line.Trim ().StartsWith ("#") ? line : GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  	while (result == "-1") {  		s = "***Service complaining!..pausing for 5 seconds and trying again...";  		UpdateUIParts2 (s);  		clientMicrosoft = null;  		timerPause.Enabled = false;  		Thread.Sleep (5000 * 1);  		// we need to reduce the sleep time to 5 seconds  		if (!radGoogle.Checked) {  			clientMicrosoft = new SoapService ();  		}  		timerPause.Enabled = true;  		result = GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  	}  	sw.Write (" " + result + Environment.NewLine);  	sw.Flush ();  	Thread.Sleep (50);  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: if (line != "") {  	//show first 10 characters from line in windows title  	s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  	UpdateUILabelAndLog (s);  	string result = line.Trim ().StartsWith ("#") ? line : GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  	while (result == "-1") {  		s = "***Service complaining!..pausing for 5 seconds and trying again...";  		UpdateUIParts2 (s);  		clientMicrosoft = null;  		timerPause.Enabled = false;  		Thread.Sleep (5000 * 1);  		// we need to reduce the sleep time to 5 seconds  		if (!radGoogle.Checked) {  			clientMicrosoft = new SoapService ();  		}  		timerPause.Enabled = true;  		result = GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  	}  	sw.Write (" " + result + Environment.NewLine);  	sw.Flush ();  	Thread.Sleep (50);  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: s = file.Name + " : " + line.Substring (0' (line.Length >= 20) ? 20 : line.Length) + " ........";  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: while (result == "-1") {  	s = "***Service complaining!..pausing for 5 seconds and trying again...";  	UpdateUIParts2 (s);  	clientMicrosoft = null;  	timerPause.Enabled = false;  	Thread.Sleep (5000 * 1);  	// we need to reduce the sleep time to 5 seconds  	if (!radGoogle.Checked) {  		clientMicrosoft = new SoapService ();  	}  	timerPause.Enabled = true;  	result = GetTranslationBack (line' true' txtLangFrom.Text' LangTo);  }  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: Thread.Sleep (5000 * 1);  
Magic Number,Translater,TranslaterForm,C:\repos\tahiri_Translater-Solution\TranslaterForm.cs,BgWTranslationAllWork,The following statement contains a magic number: Thread.Sleep (50);  
Magic Number,Translater.xMicrosoft,SoapService,C:\repos\tahiri_Translater-Solution\Web References\xMicrosoft\Reference.cs,IsLocalFileSystemWebService,The following statement contains a magic number: if (((wsUri.Port >= 1024) && (string.Compare (wsUri.Host' "localHost"' System.StringComparison.OrdinalIgnoreCase) == 0))) {  	return true;  }  
