Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ClassLibrary.Business,SingleItem,C:\repos\MarimerLLC_csla\Source\Csla.Silverlight.test\DataGridTest\ClassLibrary.Business\SingleItem.cs,AddBusinessRules,The length of the statement  "      ValidationRules.AddRule(Csla.Validation.CommonRules.IntegerMinValue' new Csla.Validation.CommonRules.IntegerMinValueRuleArgs(IdProperty'1)); " is 140.
Magic Number,ClassLibrary.Business,RootSingleItemsList,C:\repos\MarimerLLC_csla\Source\Csla.Silverlight.test\DataGridTest\ClassLibrary.Business\RootSingleItemsList.cs,DataPortal_Fetch,The following statement contains a magic number: for (int i = criteria.StartID; i <= criteria.EndID; i++)        {          DateTime aDate = new DateTime(2000'1' (i%30)+1);          this.Add(SingleItem.GetSingleItem(i' "Item # " + i.ToString()'aDate));        }
Magic Number,ClassLibrary.Business,RootSingleItemsList,C:\repos\MarimerLLC_csla\Source\Csla.Silverlight.test\DataGridTest\ClassLibrary.Business\RootSingleItemsList.cs,DataPortal_Fetch,The following statement contains a magic number: for (int i = criteria.StartID; i <= criteria.EndID; i++)        {          DateTime aDate = new DateTime(2000'1' (i%30)+1);          this.Add(SingleItem.GetSingleItem(i' "Item # " + i.ToString()'aDate));        }
Magic Number,ClassLibrary.Business,SingleItem,C:\repos\MarimerLLC_csla\Source\Csla.Silverlight.test\DataGridTest\ClassLibrary.Business\SingleItem.cs,IsDateValid,The following statement contains a magic number: if (sender.ReadProperty<SmartDate>(DateCreatedProperty) < new SmartDate(new DateTime(2000' 1' 1)))        {          e.Description = "Date cannot be in the last century!";          return false;        }
