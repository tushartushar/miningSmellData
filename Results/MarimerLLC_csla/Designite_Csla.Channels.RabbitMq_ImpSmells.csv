Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Csla.Channels.RabbitMq,RabbitMqPortal,D:\research\architectureSmells\repos\MarimerLLC_csla\Source\Csla.Channels.RabbitMq\RabbitMqPortal.cs,InitializeRabbitMQ,Cyclomatic complexity of the method is 8
Complex Method,Csla.Channels.RabbitMq,RabbitMqProxy,D:\research\architectureSmells\repos\MarimerLLC_csla\Source\Csla.Channels.RabbitMq\RabbitMqProxy.cs,InitializeRabbitMQ,Cyclomatic complexity of the method is 9
Long Statement,Csla.Channels.RabbitMq,ProxyListener,D:\research\architectureSmells\repos\MarimerLLC_csla\Source\Csla.Channels.RabbitMq\ProxyListener.cs,StartListening,The length of the statement  "            Console.WriteLine($"## WARN Undeliverable reply for {ea.BasicProperties.CorrelationId} (discarded by {Environment.MachineName})"); " is 130.
Long Statement,Csla.Channels.RabbitMq,RabbitMqPortal,D:\research\architectureSmells\repos\MarimerLLC_csla\Source\Csla.Channels.RabbitMq\RabbitMqPortal.cs,StartListening,The length of the statement  "        Console.WriteLine($"Received {ea.BasicProperties.Type} for {ea.BasicProperties.CorrelationId} from {ea.BasicProperties.ReplyTo}"); " is 130.
Long Statement,Csla.Channels.RabbitMq,RabbitMqPortal,D:\research\architectureSmells\repos\MarimerLLC_csla\Source\Csla.Channels.RabbitMq\RabbitMqPortal.cs,Create,The length of the statement  "        var objectType = Csla.Reflection.MethodCaller.GetType(AssemblyNameTranslator.GetAssemblyQualifiedName(request.TypeName)' true); " is 127.
Long Statement,Csla.Channels.RabbitMq,RabbitMqPortal,D:\research\architectureSmells\repos\MarimerLLC_csla\Source\Csla.Channels.RabbitMq\RabbitMqPortal.cs,Fetch,The length of the statement  "        var objectType = Csla.Reflection.MethodCaller.GetType(AssemblyNameTranslator.GetAssemblyQualifiedName(request.TypeName)' true); " is 127.
Long Statement,Csla.Channels.RabbitMq,RabbitMqPortal,D:\research\architectureSmells\repos\MarimerLLC_csla\Source\Csla.Channels.RabbitMq\RabbitMqPortal.cs,Delete,The length of the statement  "        var objectType = Csla.Reflection.MethodCaller.GetType(AssemblyNameTranslator.GetAssemblyQualifiedName(request.TypeName)' true); " is 127.
Magic Number,Csla.Channels.RabbitMq,ProxyListener,D:\research\architectureSmells\repos\MarimerLLC_csla\Source\Csla.Channels.RabbitMq\ProxyListener.cs,StartListening,The following statement contains a magic number: consumer.Received += (model' ea) =>        {          Console.WriteLine($"Received reply for {ea.BasicProperties.CorrelationId}");          if (Wip.WorkInProgress.TryRemove(ea.BasicProperties.CorrelationId' out WipItem item))          {            item.Response = ea.Body;            item.ResetEvent.Set();          }          else          {            // reply doesn't match any WIP item on this machine' but            // if we're using a named reply queue there could be other            // listeners; if so requeue the message up to 9 times            if (IsNamedReplyQueue && ea.BasicProperties.Priority < 9)            {              ea.BasicProperties.Priority++;              Channel.BasicPublish(                exchange: ""'                routingKey: ReplyQueue.QueueName'                basicProperties: ea.BasicProperties'                body: ea.Body);            }            else            {              Console.WriteLine($"## WARN Undeliverable reply for {ea.BasicProperties.CorrelationId} (discarded by {Environment.MachineName})");            }          }        };
Magic Number,Csla.Channels.RabbitMq,RabbitMqProxy,D:\research\architectureSmells\repos\MarimerLLC_csla\Source\Csla.Channels.RabbitMq\RabbitMqProxy.cs,CallDataPortalServer,The following statement contains a magic number: var timeout = Task.Delay(Timeout * 1000);
