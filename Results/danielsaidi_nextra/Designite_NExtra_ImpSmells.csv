Implementation smell,Namespace,Class,File,Method,Description
Long Method,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectUnicodeInByteSampleByHeuristics,The method has 106 lines of code.
Long Method,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectSuspiciousUtf8SequenceLength,The method has 108 lines of code.
Complex Method,NExtra.Extensions,Char_AsciiExtensions,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Extensions\Char_AsciiExtensions.cs,RemapInternationalCharToAscii,Cyclomatic complexity of the method is 19
Complex Method,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectBOMBytes,Cyclomatic complexity of the method is 11
Complex Method,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectUnicodeInByteSampleByHeuristics,Cyclomatic complexity of the method is 11
Complex Method,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectSuspiciousUtf8SequenceLength,Cyclomatic complexity of the method is 26
Complex Method,NExtra.Url,StringUrlifier,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Url\StringUrlifier.cs,Urlify,Cyclomatic complexity of the method is 9
Long Parameter List,NExtra.Diagnostics,IProcess,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Diagnostics\IProcess.cs,Start,The method has 5 parameters. Parameters: fileName' arguments' userName' password' domain
Long Parameter List,NExtra.Diagnostics,ProcessFacade,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Diagnostics\ProcessFacade.cs,Start,The method has 5 parameters. Parameters: fileName' arguments' userName' password' domain
Long Parameter List,NExtra.Documentation,XmlDocumentationHandler,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Documentation\XmlDocumentationHandler.cs,XmlDocumentationHandler,The method has 5 parameters. Parameters: assemblyExtractor' elementExtractor' memberExtractor' methodExtractor' typeExtractor
Long Parameter List,NExtra.Email,IEmailSender,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Email\IEmailSender.cs,SendEmail,The method has 5 parameters. Parameters: fromName' fromEmail' toEmail' subject' body
Long Parameter List,NExtra.Email,EmailNonSender,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Email\EmailNonSender.cs,SendEmail,The method has 5 parameters. Parameters: fromName' fromEmail' toEmail' subject' body
Long Parameter List,NExtra.Email,SmtpClientBasedEmailSender,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Email\SmtpClientBasedEmailSender.cs,SendEmail,The method has 5 parameters. Parameters: fromName' fromEmail' toEmail' subject' body
Long Identifier,NExtra.Documentation,MemberInfoXmlDocumentationExtractor,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Documentation\MemberInfoXmlDocumentationExtractor.cs,MemberInfoXmlDocumentationExtractor,The length of the parameter xmlDocumentationElementExtractor is 32.
Long Identifier,NExtra.Documentation,MemberInfoXmlDocumentationExtractor,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Documentation\MemberInfoXmlDocumentationExtractor.cs,,The length of the parameter _xmlDocumentationElementExtractor is 33.
Long Identifier,NExtra.Documentation,MethodInfoXmlDocumentationExtractor,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Documentation\MethodInfoXmlDocumentationExtractor.cs,MethodInfoXmlDocumentationExtractor,The length of the parameter xmlDocumentationElementExtractor is 32.
Long Identifier,NExtra.Documentation,MethodInfoXmlDocumentationExtractor,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Documentation\MethodInfoXmlDocumentationExtractor.cs,,The length of the parameter _xmlDocumentationElementExtractor is 33.
Long Identifier,NExtra.Documentation,TypeXmlDocumentationExtractor,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Documentation\TypeXmlDocumentationExtractor.cs,TypeXmlDocumentationExtractor,The length of the parameter xmlDocumentationElementExtractor is 32.
Long Identifier,NExtra.Documentation,TypeXmlDocumentationExtractor,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Documentation\TypeXmlDocumentationExtractor.cs,,The length of the parameter _xmlDocumentationElementExtractor is 33.
Long Identifier,NExtra.Documentation,XmlDocumentationElementExtractor,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Documentation\XmlDocumentationElementExtractor.cs,XmlDocumentationElementExtractor,The length of the parameter assemblyXmlDocumentationExtractor is 33.
Long Identifier,NExtra.Documentation,XmlDocumentationElementExtractor,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Documentation\XmlDocumentationElementExtractor.cs,,The length of the parameter _assemblyXmlDocumentationExtractor is 34.
Long Statement,NExtra.Extensions,Assembly_Extensions,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Extensions\Assembly_Extensions.cs,GetTitle,The length of the statement  "			return attributes.Length == 0 ? Path.GetFileNameWithoutExtension(assembly.CodeBase) : ((AssemblyTitleAttribute)attributes[0]).Title; " is 132.
Long Statement,NExtra.Geo,PositionBearingCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionBearingCalculator.cs,CalculateBearing,The length of the statement  "            var dLon = _angleConverter.ConvertDegreesToRadians(pos2.Longitude) - _angleConverter.ConvertDegreesToRadians(pos1.Longitude); " is 125.
Long Statement,NExtra.Geo,PositionDistanceCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionDistanceCalculator.cs,CalculateDistance,The length of the statement  "            var dLat = _angleConverter.ConvertDegreesToRadians(pos2.Latitude) - _angleConverter.ConvertDegreesToRadians(pos1.Latitude); " is 123.
Long Statement,NExtra.Geo,PositionDistanceCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionDistanceCalculator.cs,CalculateDistance,The length of the statement  "            var dLon = _angleConverter.ConvertDegreesToRadians(pos2.Longitude) - _angleConverter.ConvertDegreesToRadians(pos1.Longitude); " is 125.
Long Statement,NExtra.Geo,PositionDistanceCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionDistanceCalculator.cs,CalculateDistance,The length of the statement  "            var a = Math.Sin(dLat / 2) * Math.Sin(dLat / 2) + Math.Cos(_angleConverter.ConvertDegreesToRadians(pos1.Latitude)) * Math.Cos(_angleConverter.ConvertDegreesToRadians(pos2.Latitude)) * Math.Sin(dLon / 2) * Math.Sin(dLon / 2); " is 224.
Long Statement,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectTextFileEncoding,The length of the statement  "            var sampleBytes = new byte[heuristicSampleSize > inputFileStream.Length ? inputFileStream.Length : heuristicSampleSize]; " is 120.
Long Statement,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectUnicodeInByteSampleByHeuristics,The length of the statement  "                //If some of the characters were in the upper range (western accented characters)' however' they would likely be mangled to 2-byte by the UTF-8 encoding process. " is 161.
Long Statement,NExtra.Documentation,AssemblyXmlDocumentationExtractor,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Documentation\AssemblyXmlDocumentationExtractor.cs,ExtractDocumentation,The length of the statement  "                throw new FileNotFoundException(String.Format("The XML documentation file {0} does not exist. Make sure that the file is generated when building the assembly."' xmlFilePath)); " is 175.
Long Statement,NExtra.Documentation,MemberInfoXmlDocumentationExtractor,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Documentation\MemberInfoXmlDocumentationExtractor.cs,ExtractDocumentation,The length of the statement  "            return _xmlDocumentationElementExtractor.ExtractDocumentationElement(memberInfo.DeclaringType' memberInfo.MemberType.ToString()[0]' memberInfo.Name); " is 149.
Long Statement,NExtra.Documentation,MethodInfoXmlDocumentationExtractor,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Documentation\MethodInfoXmlDocumentationExtractor.cs,ExtractDocumentation,The length of the statement  "                _xmlDocumentationElementExtractor.ExtractDocumentationElement(methodInfo.DeclaringType' 'M'' methodInfo.Name + "(" + parametersString + ")") : " is 142.
Long Statement,NExtra.Documentation,XmlDocumentationElementExtractor,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Documentation\XmlDocumentationElementExtractor.cs,ExtractDocumentationElement,The length of the statement  "            foreach (var memberElement in membersElement.Cast<XmlElement>().Where(memberElement => memberElement.Attributes["name"].Value.Equals(fullName))) " is 144.
Long Statement,NExtra.Testing,CrossThreadTestRunner,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Testing\CrossThreadTestRunner.cs,ThrowExceptionPreservingStack,The length of the statement  "            var remoteStackTraceString = typeof(Exception).GetField("_remoteStackTraceString"' BindingFlags.Instance | BindingFlags.NonPublic); " is 131.
Long Statement,NExtra.Testing,MetadataRegistrator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Testing\MetadataRegistrator.cs,Register,The length of the statement  "                TypeDescriptor.AddProviderTransparent(new AssociatedMetadataTypeTypeDescriptionProvider(type' attrib.MetadataClassType)' type); " is 127.
Complex Conditional,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectBOMBytes,The conditional expression  "bomBytes[0] == 0xff                  && bomBytes[1] == 0xfe                  && (bomBytes.Length < 4                      || bomBytes[2] != 0                      || bomBytes[3] != 0                     )"  is complex.
Complex Conditional,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectBOMBytes,The conditional expression  "bomBytes[0] == 0xff && bomBytes[1] == 0xfe && bomBytes[2] == 0 && bomBytes[3] == 0"  is complex.
Complex Conditional,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectBOMBytes,The conditional expression  "bomBytes[0] == 0 && bomBytes[1] == 0 && bomBytes[2] == 0xfe && bomBytes[3] == 0xff"  is complex.
Complex Conditional,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,IsCommonUsAsciiByte,The conditional expression  "testByte == 0x0A //lf                  || testByte == 0x0D //cr                  || testByte == 0x09 //tab                  || (testByte >= 0x20 && testByte <= 0x2F) //common punctuation                  || (testByte >= 0x30 && testByte <= 0x39) //digits                  || (testByte >= 0x3A && testByte <= 0x40) //common punctuation                  || (testByte >= 0x41 && testByte <= 0x5A) //capital letters                  || (testByte >= 0x5B && testByte <= 0x60) //common punctuation                  || (testByte >= 0x61 && testByte <= 0x7A) //lowercase letters                  || (testByte >= 0x7B && testByte <= 0x7E)"  is complex.
Complex Conditional,NExtra.Url,StringUrlifier,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Url\StringUrlifier.cs,Urlify,The conditional expression  "(c >= 'a' && c <= 'z') || (c >= '0' && c <= '9')"  is complex.
Complex Conditional,NExtra.Url,StringUrlifier,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Url\StringUrlifier.cs,Urlify,The conditional expression  "c == ' ' || c == ''' || c == '.' || c == '/' ||                           c == '\\' || c == '-' || c == '_' || c == '='"  is complex.
Magic Number,NExtra.Console,CommandLineArgumentParser,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Console\CommandLineArgumentParser.cs,ParseCommandLineArguments,The following statement contains a magic number: switch (parts.Length)                  {                          // Found a value (for the last parameter found (space separator))                      case 1:                          parameter = ParseValue(parts' parameter' parameters);                          break;                            // Found just a parameter                      case 2:                          parameter = ParseParameter(parts' parameter' parameters);                          break;                            // Parameter with enclosed value                      case 3:                          parameter = ParseParameterWithEnclosedValue(parts' parameter' parameters);                          break;                  }
Magic Number,NExtra.Console,CommandLineArgumentParser,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Console\CommandLineArgumentParser.cs,ParseCommandLineArguments,The following statement contains a magic number: switch (parts.Length)                  {                          // Found a value (for the last parameter found (space separator))                      case 1:                          parameter = ParseValue(parts' parameter' parameters);                          break;                            // Found just a parameter                      case 2:                          parameter = ParseParameter(parts' parameter' parameters);                          break;                            // Parameter with enclosed value                      case 3:                          parameter = ParseParameterWithEnclosedValue(parts' parameter' parameters);                          break;                  }
Magic Number,NExtra.Console,CommandLineArgumentParser,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Console\CommandLineArgumentParser.cs,ParseCommandLineArguments,The following statement contains a magic number: args.Select(arg => _splitter.Split(arg' 3))
Magic Number,NExtra.Console,CommandLineArgumentParser,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Console\CommandLineArgumentParser.cs,ParseParameterWithEnclosedValue,The following statement contains a magic number: parts[2] = _remover.Replace(parts[2]' "$1");
Magic Number,NExtra.Console,CommandLineArgumentParser,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Console\CommandLineArgumentParser.cs,ParseParameterWithEnclosedValue,The following statement contains a magic number: parts[2] = _remover.Replace(parts[2]' "$1");
Magic Number,NExtra.Console,CommandLineArgumentParser,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Console\CommandLineArgumentParser.cs,ParseParameterWithEnclosedValue,The following statement contains a magic number: parameters.Add(parameter' parts[2]);
Magic Number,NExtra.Extensions,IQueryable_OrderByExtensions,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Extensions\IQueryable_OrderByExtensions.cs,ApplyOrder,The following statement contains a magic number: var result = typeof(Queryable).GetMethods().Single(  	            method => method.Name == methodName  	                      && method.IsGenericMethodDefinition  	                      && method.GetGenericArguments().Length == 2  	                      && method.GetParameters().Length == 2)  	            .MakeGenericMethod(typeof(T)' type)  	            .Invoke(null' new object[] { source' ApplyOrder_GetLambda<T>(type' arg' expr) });
Magic Number,NExtra.Extensions,IQueryable_OrderByExtensions,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Extensions\IQueryable_OrderByExtensions.cs,ApplyOrder,The following statement contains a magic number: var result = typeof(Queryable).GetMethods().Single(  	            method => method.Name == methodName  	                      && method.IsGenericMethodDefinition  	                      && method.GetGenericArguments().Length == 2  	                      && method.GetParameters().Length == 2)  	            .MakeGenericMethod(typeof(T)' type)  	            .Invoke(null' new object[] { source' ApplyOrder_GetLambda<T>(type' arg' expr) });
Magic Number,NExtra.Extensions,Int_Extensions,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Extensions\Int_Extensions.cs,IsEven,The following statement contains a magic number: return value % 2 == 0;
Magic Number,NExtra.Geo,PositionBearingCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionBearingCalculator.cs,CalculateBearing,The following statement contains a magic number: return (_angleConverter.ConvertRadiansToDegrees(brng) + 360) % 360;
Magic Number,NExtra.Geo,PositionBearingCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionBearingCalculator.cs,CalculateBearing,The following statement contains a magic number: return (_angleConverter.ConvertRadiansToDegrees(brng) + 360) % 360;
Magic Number,NExtra.Geo,PositionBearingCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionBearingCalculator.cs,CalculateRhumbBearing,The following statement contains a magic number: var dPhi = Math.Log(Math.Tan(lat2 / 2 + Math.PI / 4) / Math.Tan(lat1 / 2 + Math.PI / 4));
Magic Number,NExtra.Geo,PositionBearingCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionBearingCalculator.cs,CalculateRhumbBearing,The following statement contains a magic number: var dPhi = Math.Log(Math.Tan(lat2 / 2 + Math.PI / 4) / Math.Tan(lat1 / 2 + Math.PI / 4));
Magic Number,NExtra.Geo,PositionBearingCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionBearingCalculator.cs,CalculateRhumbBearing,The following statement contains a magic number: var dPhi = Math.Log(Math.Tan(lat2 / 2 + Math.PI / 4) / Math.Tan(lat1 / 2 + Math.PI / 4));
Magic Number,NExtra.Geo,PositionBearingCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionBearingCalculator.cs,CalculateRhumbBearing,The following statement contains a magic number: var dPhi = Math.Log(Math.Tan(lat2 / 2 + Math.PI / 4) / Math.Tan(lat1 / 2 + Math.PI / 4));
Magic Number,NExtra.Geo,PositionBearingCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionBearingCalculator.cs,CalculateRhumbBearing,The following statement contains a magic number: dLon = (dLon > 0) ? -(2 * Math.PI - dLon) : (2 * Math.PI + dLon);
Magic Number,NExtra.Geo,PositionBearingCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionBearingCalculator.cs,CalculateRhumbBearing,The following statement contains a magic number: dLon = (dLon > 0) ? -(2 * Math.PI - dLon) : (2 * Math.PI + dLon);
Magic Number,NExtra.Geo,PositionBearingCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionBearingCalculator.cs,CalculateRhumbBearing,The following statement contains a magic number: return (_angleConverter.ConvertRadiansToDegrees(brng) + 360) % 360;
Magic Number,NExtra.Geo,PositionBearingCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionBearingCalculator.cs,CalculateRhumbBearing,The following statement contains a magic number: return (_angleConverter.ConvertRadiansToDegrees(brng) + 360) % 360;
Magic Number,NExtra.Geo,PositionDistanceCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionDistanceCalculator.cs,CalculateDistance,The following statement contains a magic number: var a = Math.Sin(dLat / 2) * Math.Sin(dLat / 2) + Math.Cos(_angleConverter.ConvertDegreesToRadians(pos1.Latitude)) * Math.Cos(_angleConverter.ConvertDegreesToRadians(pos2.Latitude)) * Math.Sin(dLon / 2) * Math.Sin(dLon / 2);
Magic Number,NExtra.Geo,PositionDistanceCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionDistanceCalculator.cs,CalculateDistance,The following statement contains a magic number: var a = Math.Sin(dLat / 2) * Math.Sin(dLat / 2) + Math.Cos(_angleConverter.ConvertDegreesToRadians(pos1.Latitude)) * Math.Cos(_angleConverter.ConvertDegreesToRadians(pos2.Latitude)) * Math.Sin(dLon / 2) * Math.Sin(dLon / 2);
Magic Number,NExtra.Geo,PositionDistanceCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionDistanceCalculator.cs,CalculateDistance,The following statement contains a magic number: var a = Math.Sin(dLat / 2) * Math.Sin(dLat / 2) + Math.Cos(_angleConverter.ConvertDegreesToRadians(pos1.Latitude)) * Math.Cos(_angleConverter.ConvertDegreesToRadians(pos2.Latitude)) * Math.Sin(dLon / 2) * Math.Sin(dLon / 2);
Magic Number,NExtra.Geo,PositionDistanceCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionDistanceCalculator.cs,CalculateDistance,The following statement contains a magic number: var a = Math.Sin(dLat / 2) * Math.Sin(dLat / 2) + Math.Cos(_angleConverter.ConvertDegreesToRadians(pos1.Latitude)) * Math.Cos(_angleConverter.ConvertDegreesToRadians(pos2.Latitude)) * Math.Sin(dLon / 2) * Math.Sin(dLon / 2);
Magic Number,NExtra.Geo,PositionDistanceCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionDistanceCalculator.cs,CalculateDistance,The following statement contains a magic number: var c = 2 * Math.Atan2(Math.Sqrt(a)' Math.Sqrt(1 - a));
Magic Number,NExtra.Geo,PositionDistanceCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionDistanceCalculator.cs,CalculateDistance,The following statement contains a magic number: return Math.Round(distance' 2);
Magic Number,NExtra.Geo,PositionDistanceCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionDistanceCalculator.cs,CalculateRhumbDistance,The following statement contains a magic number: var dPhi = Math.Log(Math.Tan(lat2 / 2 + Math.PI / 4) / Math.Tan(lat1 / 2 + Math.PI / 4));
Magic Number,NExtra.Geo,PositionDistanceCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionDistanceCalculator.cs,CalculateRhumbDistance,The following statement contains a magic number: var dPhi = Math.Log(Math.Tan(lat2 / 2 + Math.PI / 4) / Math.Tan(lat1 / 2 + Math.PI / 4));
Magic Number,NExtra.Geo,PositionDistanceCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionDistanceCalculator.cs,CalculateRhumbDistance,The following statement contains a magic number: var dPhi = Math.Log(Math.Tan(lat2 / 2 + Math.PI / 4) / Math.Tan(lat1 / 2 + Math.PI / 4));
Magic Number,NExtra.Geo,PositionDistanceCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionDistanceCalculator.cs,CalculateRhumbDistance,The following statement contains a magic number: var dPhi = Math.Log(Math.Tan(lat2 / 2 + Math.PI / 4) / Math.Tan(lat1 / 2 + Math.PI / 4));
Magic Number,NExtra.Geo,PositionDistanceCalculator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\PositionDistanceCalculator.cs,CalculateRhumbDistance,The following statement contains a magic number: dLon = 2 * Math.PI - dLon;
Magic Number,NExtra.Geo,AngleConverter,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\AngleConverter.cs,ConvertDegreesToRadians,The following statement contains a magic number: return Math.PI * degrees / 180.0;
Magic Number,NExtra.Geo,AngleConverter,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\AngleConverter.cs,ConvertRadiansToDegrees,The following statement contains a magic number: return 180.0 * radians / Math.PI;
Magic Number,NExtra.Geo,DistanceConverter,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\DistanceConverter.cs,ConvertKilometersToMiles,The following statement contains a magic number: return kilometers * 0.621371192;
Magic Number,NExtra.Geo,DistanceConverter,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Geo\DistanceConverter.cs,ConvertMilesToKilometers,The following statement contains a magic number: return miles * 1.609344;
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectTextFileEncoding,The following statement contains a magic number: var bomBytes = new byte[inputFileStream.Length > 4 ? 4 : inputFileStream.Length];
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectTextFileEncoding,The following statement contains a magic number: var bomBytes = new byte[inputFileStream.Length > 4 ? 4 : inputFileStream.Length];
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectBOMBytes,The following statement contains a magic number: bomBytes.Length < 2
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectBOMBytes,The following statement contains a magic number: bomBytes[0] == 0xff                  && bomBytes[1] == 0xfe                  && (bomBytes.Length < 4                      || bomBytes[2] != 0                      || bomBytes[3] != 0                     )
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectBOMBytes,The following statement contains a magic number: bomBytes[0] == 0xff                  && bomBytes[1] == 0xfe                  && (bomBytes.Length < 4                      || bomBytes[2] != 0                      || bomBytes[3] != 0                     )
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectBOMBytes,The following statement contains a magic number: bomBytes[0] == 0xff                  && bomBytes[1] == 0xfe                  && (bomBytes.Length < 4                      || bomBytes[2] != 0                      || bomBytes[3] != 0                     )
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectBOMBytes,The following statement contains a magic number: bomBytes.Length < 3
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectBOMBytes,The following statement contains a magic number: bomBytes[0] == 0xef && bomBytes[1] == 0xbb && bomBytes[2] == 0xbf
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectBOMBytes,The following statement contains a magic number: bomBytes[0] == 0x2b && bomBytes[1] == 0x2f && bomBytes[2] == 0x76
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectBOMBytes,The following statement contains a magic number: bomBytes.Length < 4
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectBOMBytes,The following statement contains a magic number: bomBytes[0] == 0xff && bomBytes[1] == 0xfe && bomBytes[2] == 0 && bomBytes[3] == 0
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectBOMBytes,The following statement contains a magic number: bomBytes[0] == 0xff && bomBytes[1] == 0xfe && bomBytes[2] == 0 && bomBytes[3] == 0
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectBOMBytes,The following statement contains a magic number: return Encoding.GetEncoding(12001);
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectBOMBytes,The following statement contains a magic number: bomBytes[0] == 0 && bomBytes[1] == 0 && bomBytes[2] == 0xfe && bomBytes[3] == 0xff
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectBOMBytes,The following statement contains a magic number: bomBytes[0] == 0 && bomBytes[1] == 0 && bomBytes[2] == 0xfe && bomBytes[3] == 0xff
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectUnicodeInByteSampleByHeuristics,The following statement contains a magic number: currentPos % 2 == 0
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectUnicodeInByteSampleByHeuristics,The following statement contains a magic number: ((evenBinaryNullsInSample * 2.0) / sampleBytes.Length) < 0.2                  && ((oddBinaryNullsInSample * 2.0) / sampleBytes.Length) > 0.6
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectUnicodeInByteSampleByHeuristics,The following statement contains a magic number: ((evenBinaryNullsInSample * 2.0) / sampleBytes.Length) < 0.2                  && ((oddBinaryNullsInSample * 2.0) / sampleBytes.Length) > 0.6
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectUnicodeInByteSampleByHeuristics,The following statement contains a magic number: ((evenBinaryNullsInSample * 2.0) / sampleBytes.Length) < 0.2                  && ((oddBinaryNullsInSample * 2.0) / sampleBytes.Length) > 0.6
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectUnicodeInByteSampleByHeuristics,The following statement contains a magic number: ((evenBinaryNullsInSample * 2.0) / sampleBytes.Length) < 0.2                  && ((oddBinaryNullsInSample * 2.0) / sampleBytes.Length) > 0.6
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectUnicodeInByteSampleByHeuristics,The following statement contains a magic number: ((oddBinaryNullsInSample * 2.0) / sampleBytes.Length) < 0.2                  && ((evenBinaryNullsInSample * 2.0) / sampleBytes.Length) > 0.6
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectUnicodeInByteSampleByHeuristics,The following statement contains a magic number: ((oddBinaryNullsInSample * 2.0) / sampleBytes.Length) < 0.2                  && ((evenBinaryNullsInSample * 2.0) / sampleBytes.Length) > 0.6
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectUnicodeInByteSampleByHeuristics,The following statement contains a magic number: ((oddBinaryNullsInSample * 2.0) / sampleBytes.Length) < 0.2                  && ((evenBinaryNullsInSample * 2.0) / sampleBytes.Length) > 0.6
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectUnicodeInByteSampleByHeuristics,The following statement contains a magic number: ((oddBinaryNullsInSample * 2.0) / sampleBytes.Length) < 0.2                  && ((evenBinaryNullsInSample * 2.0) / sampleBytes.Length) > 0.6
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectUnicodeInByteSampleByHeuristics,The following statement contains a magic number: (suspiciousUtf8SequenceCount * 500000.0 / sampleBytes.Length >= 1) //suspicious sequences                      && (                             //all suspicious' so cannot evaluate proportion of US-Ascii                         sampleBytes.Length - suspiciousUtf8BytesTotal == 0                         ||                         likelyUsAsciiBytesInSample * 1.0 / (sampleBytes.Length - suspiciousUtf8BytesTotal) >= 0.8                         )
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectUnicodeInByteSampleByHeuristics,The following statement contains a magic number: (suspiciousUtf8SequenceCount * 500000.0 / sampleBytes.Length >= 1) //suspicious sequences                      && (                             //all suspicious' so cannot evaluate proportion of US-Ascii                         sampleBytes.Length - suspiciousUtf8BytesTotal == 0                         ||                         likelyUsAsciiBytesInSample * 1.0 / (sampleBytes.Length - suspiciousUtf8BytesTotal) >= 0.8                         )
Magic Number,NExtra.IO,KlerksSoftFileEncodingDetector,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\KlerksSoftFileEncodingDetector.cs,DetectSuspiciousUtf8SequenceLength,The following statement contains a magic number: lengthFound = 2;
Magic Number,NExtra.IO,PathPatternMatcher,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\PathPatternMatcher.cs,ShouldMatchExact,The following statement contains a magic number: return CatchExtentionRegex.Match(pattern).Groups[1].Length != 3;
Magic Number,NExtra.IO,FileSizePresenter,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\FileSizePresenter.cs,PresentFileSize,The following statement contains a magic number: fileSize < 1000
Magic Number,NExtra.IO,FileSizePresenter,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\FileSizePresenter.cs,PresentFileSize,The following statement contains a magic number: return String.Format(numberFormat + " kB"' fileSize / 1000);
Magic Number,NExtra.IO,FileSizePresenter,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\FileSizePresenter.cs,PresentFileSize,The following statement contains a magic number: fileSize >= 1000 && fileSize < 1000000
Magic Number,NExtra.IO,FileSizePresenter,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\FileSizePresenter.cs,PresentFileSize,The following statement contains a magic number: fileSize >= 1000 && fileSize < 1000000
Magic Number,NExtra.IO,FileSizePresenter,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\FileSizePresenter.cs,PresentFileSize,The following statement contains a magic number: return String.Format(numberFormat + " MB"' fileSize / 1000000);
Magic Number,NExtra.IO,FileSizePresenter,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\FileSizePresenter.cs,PresentFileSize,The following statement contains a magic number: fileSize >= 1000000 && fileSize < 1000000000
Magic Number,NExtra.IO,FileSizePresenter,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\FileSizePresenter.cs,PresentFileSize,The following statement contains a magic number: fileSize >= 1000000 && fileSize < 1000000000
Magic Number,NExtra.IO,FileSizePresenter,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\FileSizePresenter.cs,PresentFileSize,The following statement contains a magic number: return String.Format(numberFormat + " GB"' fileSize / 1000000000);
Magic Number,NExtra.IO,FileSizePresenter,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\FileSizePresenter.cs,PresentFileSize,The following statement contains a magic number: fileSize >= 1000000000 && fileSize < 1000000000000
Magic Number,NExtra.IO,FileSizePresenter,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\FileSizePresenter.cs,PresentFileSize,The following statement contains a magic number: fileSize >= 1000000000 && fileSize < 1000000000000
Magic Number,NExtra.IO,FileSizePresenter,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\IO\FileSizePresenter.cs,PresentFileSize,The following statement contains a magic number: return String.Format(numberFormat + " TB"' fileSize / 1000000000000);
Magic Number,NExtra.Date,Iso8601WeekResolver,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Date\Iso8601WeekResolver.cs,GetWeekNumber,The following statement contains a magic number: startWeekDayOfYear = 7;
Magic Number,NExtra.Date,Iso8601WeekResolver,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Date\Iso8601WeekResolver.cs,GetWeekNumber,The following statement contains a magic number: endWeekDayOfYear = 7;
Magic Number,NExtra.Date,Iso8601WeekResolver,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Date\Iso8601WeekResolver.cs,GetWeekNumber,The following statement contains a magic number: var daysInFirstWeek = 8 - (startWeekDayOfYear);
Magic Number,NExtra.Date,Iso8601WeekResolver,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Date\Iso8601WeekResolver.cs,GetWeekNumber,The following statement contains a magic number: var resultWeekNumber = (int)Math.Ceiling((dayOfYear - (daysInFirstWeek)) / 7.0);
Magic Number,NExtra.Date,Iso8601WeekResolver,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Date\Iso8601WeekResolver.cs,GetWeekNumber,The following statement contains a magic number: resultWeekNumber > 52 && !thursdayFlag
Magic Number,NExtra.Validation,LuhnAttribute,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Validation\LuhnAttribute.cs,IsValid,The following statement contains a magic number: temp -= 9;
Magic Number,NExtra.Validation,LuhnAttribute,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Validation\LuhnAttribute.cs,IsValid,The following statement contains a magic number: temp > 9
Magic Number,NExtra.Validation,LuhnAttribute,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Validation\LuhnAttribute.cs,IsValid,The following statement contains a magic number: return (sum % 10) == 0;
Magic Number,NExtra.Validation.Ssn,NorwegianSsnChecksumValidator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Validation\Ssn\NorwegianSsnChecksumValidator.cs,CalculateMod,The following statement contains a magic number: var result = 11 - sum%11;
Magic Number,NExtra.Validation.Ssn,NorwegianSsnChecksumValidator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Validation\Ssn\NorwegianSsnChecksumValidator.cs,CalculateMod,The following statement contains a magic number: var result = 11 - sum%11;
Magic Number,NExtra.Validation.Ssn,NorwegianSsnChecksumValidator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Validation\Ssn\NorwegianSsnChecksumValidator.cs,CalculateMod,The following statement contains a magic number: result == 11
Magic Number,NExtra.Validation.Ssn,NorwegianSsnChecksumValidator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Validation\Ssn\NorwegianSsnChecksumValidator.cs,ValidateFirstCheckDigit,The following statement contains a magic number: var expected = int.Parse(value[9].ToString(CultureInfo.InvariantCulture));
Magic Number,NExtra.Validation.Ssn,NorwegianSsnChecksumValidator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Validation\Ssn\NorwegianSsnChecksumValidator.cs,ValidateSecondCheckDigit,The following statement contains a magic number: var expected = int.Parse(value[10].ToString(CultureInfo.InvariantCulture));
Magic Number,NExtra.Validation.Ssn,FinnishSsnChecksumValidator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Validation\Ssn\FinnishSsnChecksumValidator.cs,IsValid,The following statement contains a magic number: var numbers = stringValue.Substring(0' 9);
Magic Number,NExtra.Validation.Ssn,FinnishSsnChecksumValidator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Validation\Ssn\FinnishSsnChecksumValidator.cs,IsValid,The following statement contains a magic number: var checksum = int.Parse(numbers) % 31;
Magic Number,NExtra.Validation.Ssn,FinnishSsnChecksumValidator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Validation\Ssn\FinnishSsnChecksumValidator.cs,IsValid,The following statement contains a magic number: var valueLast = stringValue.Substring(9);
Magic Number,NExtra.Validation.Ssn,FinnishSsnChecksumValidator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Validation\Ssn\FinnishSsnChecksumValidator.cs,RemoveSeparator,The following statement contains a magic number: var separator = stringValue[6];
Magic Number,NExtra.Validation.Ssn,FinnishSsnChecksumValidator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Validation\Ssn\FinnishSsnChecksumValidator.cs,RemoveSeparator,The following statement contains a magic number: stringValue = stringValue.Substring(0' 6) + stringValue.Substring(7' 4);
Magic Number,NExtra.Validation.Ssn,FinnishSsnChecksumValidator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Validation\Ssn\FinnishSsnChecksumValidator.cs,RemoveSeparator,The following statement contains a magic number: stringValue = stringValue.Substring(0' 6) + stringValue.Substring(7' 4);
Magic Number,NExtra.Validation.Ssn,FinnishSsnChecksumValidator,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Validation\Ssn\FinnishSsnChecksumValidator.cs,RemoveSeparator,The following statement contains a magic number: stringValue = stringValue.Substring(0' 6) + stringValue.Substring(7' 4);
Missing Default,NExtra.Console,CommandLineArgumentParser,D:\research\architectureSmells\repos\danielsaidi_nextra\NExtra\Console\CommandLineArgumentParser.cs,ParseCommandLineArguments,The following switch statement is missing a default case: switch (parts.Length)                  {                          // Found a value (for the last parameter found (space separator))                      case 1:                          parameter = ParseValue(parts' parameter' parameters);                          break;                            // Found just a parameter                      case 2:                          parameter = ParseParameter(parts' parameter' parameters);                          break;                            // Parameter with enclosed value                      case 3:                          parameter = ParseParameterWithEnclosedValue(parts' parameter' parameters);                          break;                  }
