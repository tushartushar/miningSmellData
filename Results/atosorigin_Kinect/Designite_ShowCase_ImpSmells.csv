Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,Connect,Cyclomatic complexity of the method is 8
Long Identifier,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,,The length of the parameter _animatingBallOriginalPosition is 30.
Long Statement,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,InitAnimations,The length of the statement  "                var animation = new DoubleAnimation(0' 360' new Duration(new TimeSpan(0' 0' 5))) { By = 0.5' RepeatBehavior = RepeatBehavior.Forever }; " is 135.
Long Statement,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,Connect,The length of the statement  "            ((Kinect.ShowCase.MainWindow)(target)).MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.WindowMouseDown); " is 123.
Complex Conditional,Kinect.ShowCase,Ball,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\Ball.cs,Tessellate,The conditional expression  "p.Z > 0 && p.X > -.5 && p.X < .5 && p.Y > -.5 && p.Y < .5"  is complex.
Empty Catch Block,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,Move,The method has an empty catch block.
Magic Number,Kinect.ShowCase,Ball,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\Ball.cs,DegToRad,The following statement contains a magic number: return (degrees/180.0)*Math.PI;
Magic Number,Kinect.ShowCase,Ball,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\Ball.cs,GetTextureCoordinate,The following statement contains a magic number: TYtoUV.Scale(1/(2*Math.PI)' -0.5);
Magic Number,Kinect.ShowCase,Ball,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\Ball.cs,GetTextureCoordinate,The following statement contains a magic number: TYtoUV.Scale(1/(2*Math.PI)' -0.5);
Magic Number,Kinect.ShowCase,Ball,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\Ball.cs,Tessellate,The following statement contains a magic number: int tDiv = 750;
Magic Number,Kinect.ShowCase,Ball,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\Ball.cs,Tessellate,The following statement contains a magic number: int yDiv = 750;
Magic Number,Kinect.ShowCase,Ball,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\Ball.cs,Tessellate,The following statement contains a magic number: double maxTheta = DegToRad(360);
Magic Number,Kinect.ShowCase,Ball,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\Ball.cs,Tessellate,The following statement contains a magic number: p.Z > 0 && p.X > -.5 && p.X < .5 && p.Y > -.5 && p.Y < .5
Magic Number,Kinect.ShowCase,Ball,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\Ball.cs,Tessellate,The following statement contains a magic number: p.Z > 0 && p.X > -.5 && p.X < .5 && p.Y > -.5 && p.Y < .5
Magic Number,Kinect.ShowCase,Ball,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\Ball.cs,Tessellate,The following statement contains a magic number: p.Z > 0 && p.X > -.5 && p.X < .5 && p.Y > -.5 && p.Y < .5
Magic Number,Kinect.ShowCase,Ball,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\Ball.cs,Tessellate,The following statement contains a magic number: p.Z > 0 && p.X > -.5 && p.X < .5 && p.Y > -.5 && p.Y < .5
Magic Number,Kinect.ShowCase,ChangeResolution,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\ChangeResolution.cs,EnumDevices,The following statement contains a magic number: (d.StateFlags & 4) != 0
Magic Number,Kinect.ShowCase,DisplayDevice,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\ChangeResolution.cs,DisplayDevice,The following statement contains a magic number: DeviceName = new string((char)32' 32);
Magic Number,Kinect.ShowCase,DisplayDevice,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\ChangeResolution.cs,DisplayDevice,The following statement contains a magic number: DeviceName = new string((char)32' 32);
Magic Number,Kinect.ShowCase,DisplayDevice,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\ChangeResolution.cs,DisplayDevice,The following statement contains a magic number: DeviceString = new string((char)32' 128);
Magic Number,Kinect.ShowCase,DisplayDevice,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\ChangeResolution.cs,DisplayDevice,The following statement contains a magic number: DeviceString = new string((char)32' 128);
Magic Number,Kinect.ShowCase,DisplayDevice,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\ChangeResolution.cs,DisplayDevice,The following statement contains a magic number: DeviceID = new string((char)32' 128);
Magic Number,Kinect.ShowCase,DisplayDevice,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\ChangeResolution.cs,DisplayDevice,The following statement contains a magic number: DeviceID = new string((char)32' 128);
Magic Number,Kinect.ShowCase,DisplayDevice,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\ChangeResolution.cs,DisplayDevice,The following statement contains a magic number: DeviceKey = new string((char)32' 128);
Magic Number,Kinect.ShowCase,DisplayDevice,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\ChangeResolution.cs,DisplayDevice,The following statement contains a magic number: DeviceKey = new string((char)32' 128);
Magic Number,Kinect.ShowCase,GradientBall,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\GradientBall.cs,GetTextureCoordinate,The following statement contains a magic number: TYtoUV.Scale(1/(2*Math.PI)' -0.5);
Magic Number,Kinect.ShowCase,GradientBall,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\GradientBall.cs,GetTextureCoordinate,The following statement contains a magic number: TYtoUV.Scale(1/(2*Math.PI)' -0.5);
Magic Number,Kinect.ShowCase,GradientBall,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\GradientBall.cs,Tessellate,The following statement contains a magic number: int tDiv = 64;
Magic Number,Kinect.ShowCase,GradientBall,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\GradientBall.cs,Tessellate,The following statement contains a magic number: int yDiv = 64;
Magic Number,Kinect.ShowCase,GradientBall,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\GradientBall.cs,Tessellate,The following statement contains a magic number: double maxTheta = MathHelper.ToRadians(360);
Magic Number,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: _changeResolution.ChangeScreenResolution(1024' 768);
Magic Number,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: _changeResolution.ChangeScreenResolution(1024' 768);
Magic Number,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,InitGradientBall,The following statement contains a magic number: var p3D = new Point3D(offsetx' offsety' -8);
Magic Number,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,InitAnimations,The following statement contains a magic number: var animation = new DoubleAnimation(0' 360' new Duration(new TimeSpan(0' 0' 5))) { By = 0.5' RepeatBehavior = RepeatBehavior.Forever };
Magic Number,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,InitAnimations,The following statement contains a magic number: var animation = new DoubleAnimation(0' 360' new Duration(new TimeSpan(0' 0' 5))) { By = 0.5' RepeatBehavior = RepeatBehavior.Forever };
Magic Number,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,InitAnimations,The following statement contains a magic number: var animation = new DoubleAnimation(0' 360' new Duration(new TimeSpan(0' 0' 5))) { By = 0.5' RepeatBehavior = RepeatBehavior.Forever };
Magic Number,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,InitKinect,The following statement contains a magic number: _kinect.ChangeMaxSkeletonPositions(.5f' .5f);
Magic Number,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,InitKinect,The following statement contains a magic number: _kinect.ChangeMaxSkeletonPositions(.5f' .5f);
Magic Number,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,Do3DAnimation,The following statement contains a magic number: Action animation = () =>              {                  var speed = new Duration(new TimeSpan(0' 0' 3));                  Point3D currentPosition = ball.Offset;                    var animationX = new DoubleAnimation(currentPosition.X' nextPosition.X' speed);                  var animationY = new DoubleAnimation(currentPosition.Y' nextPosition.Y' speed);                  var animationZ = new DoubleAnimation(currentPosition.Z' nextPosition.Z' speed);                    var tt3D = new TranslateTransform3D(currentPosition.X' currentPosition.Y' currentPosition.Z);                  ball.Transform = tt3D;                  tt3D.BeginAnimation(TranslateTransform3D.OffsetXProperty' animationX);                  tt3D.BeginAnimation(TranslateTransform3D.OffsetYProperty' animationY);                  tt3D.BeginAnimation(TranslateTransform3D.OffsetZProperty' animationZ);              };
Magic Number,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,Move,The following statement contains a magic number: _mouse3DPosition.X = ((_viewPortSize.X / (viewPort.ActualWidth / pos.X)) - (_viewPortSize.X / 2)) * -1;
Magic Number,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,Move,The following statement contains a magic number: _mouse3DPosition.Y = ((_viewPortSize.Y / (viewPort.ActualHeight / pos.Y)) - (_viewPortSize.Y / 2)) * -1;
Magic Number,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,KinectUserUpdated,The following statement contains a magic number: var screenpoint = e.Event.HandRight.ToScreenPosition(new Size(640' 480)' _screenResolution);
Magic Number,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,KinectUserUpdated,The following statement contains a magic number: var screenpoint = e.Event.HandRight.ToScreenPosition(new Size(640' 480)' _screenResolution);
Magic Number,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.WindowMouseDown);                            #line default              #line hidden                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.WindowClosing);                            #line default              #line hidden                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).KeyUp += new System.Windows.Input.KeyEventHandler(this.Window_KeyUp);                            #line default              #line hidden              return;              case 2:              this.lblNaam = ((System.Windows.Controls.Label)(target));              return;              case 3:              this.lblWorkshop = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.canvas = ((System.Windows.Controls.Canvas)(target));              return;              case 5:              this.HandImage = ((System.Windows.Controls.Image)(target));              return;              case 6:              this.viewPort = ((System.Windows.Controls.Viewport3D)(target));              return;              case 7:              this.camera = ((System.Windows.Media.Media3D.PerspectiveCamera)(target));              return;              case 8:              this.visualModel = ((System.Windows.Media.Media3D.ModelVisual3D)(target));              return;              }
Magic Number,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.WindowMouseDown);                            #line default              #line hidden                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.WindowClosing);                            #line default              #line hidden                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).KeyUp += new System.Windows.Input.KeyEventHandler(this.Window_KeyUp);                            #line default              #line hidden              return;              case 2:              this.lblNaam = ((System.Windows.Controls.Label)(target));              return;              case 3:              this.lblWorkshop = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.canvas = ((System.Windows.Controls.Canvas)(target));              return;              case 5:              this.HandImage = ((System.Windows.Controls.Image)(target));              return;              case 6:              this.viewPort = ((System.Windows.Controls.Viewport3D)(target));              return;              case 7:              this.camera = ((System.Windows.Media.Media3D.PerspectiveCamera)(target));              return;              case 8:              this.visualModel = ((System.Windows.Media.Media3D.ModelVisual3D)(target));              return;              }
Magic Number,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.WindowMouseDown);                            #line default              #line hidden                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.WindowClosing);                            #line default              #line hidden                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).KeyUp += new System.Windows.Input.KeyEventHandler(this.Window_KeyUp);                            #line default              #line hidden              return;              case 2:              this.lblNaam = ((System.Windows.Controls.Label)(target));              return;              case 3:              this.lblWorkshop = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.canvas = ((System.Windows.Controls.Canvas)(target));              return;              case 5:              this.HandImage = ((System.Windows.Controls.Image)(target));              return;              case 6:              this.viewPort = ((System.Windows.Controls.Viewport3D)(target));              return;              case 7:              this.camera = ((System.Windows.Media.Media3D.PerspectiveCamera)(target));              return;              case 8:              this.visualModel = ((System.Windows.Media.Media3D.ModelVisual3D)(target));              return;              }
Magic Number,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.WindowMouseDown);                            #line default              #line hidden                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.WindowClosing);                            #line default              #line hidden                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).KeyUp += new System.Windows.Input.KeyEventHandler(this.Window_KeyUp);                            #line default              #line hidden              return;              case 2:              this.lblNaam = ((System.Windows.Controls.Label)(target));              return;              case 3:              this.lblWorkshop = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.canvas = ((System.Windows.Controls.Canvas)(target));              return;              case 5:              this.HandImage = ((System.Windows.Controls.Image)(target));              return;              case 6:              this.viewPort = ((System.Windows.Controls.Viewport3D)(target));              return;              case 7:              this.camera = ((System.Windows.Media.Media3D.PerspectiveCamera)(target));              return;              case 8:              this.visualModel = ((System.Windows.Media.Media3D.ModelVisual3D)(target));              return;              }
Magic Number,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.WindowMouseDown);                            #line default              #line hidden                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.WindowClosing);                            #line default              #line hidden                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).KeyUp += new System.Windows.Input.KeyEventHandler(this.Window_KeyUp);                            #line default              #line hidden              return;              case 2:              this.lblNaam = ((System.Windows.Controls.Label)(target));              return;              case 3:              this.lblWorkshop = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.canvas = ((System.Windows.Controls.Canvas)(target));              return;              case 5:              this.HandImage = ((System.Windows.Controls.Image)(target));              return;              case 6:              this.viewPort = ((System.Windows.Controls.Viewport3D)(target));              return;              case 7:              this.camera = ((System.Windows.Media.Media3D.PerspectiveCamera)(target));              return;              case 8:              this.visualModel = ((System.Windows.Media.Media3D.ModelVisual3D)(target));              return;              }
Magic Number,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.WindowMouseDown);                            #line default              #line hidden                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.WindowClosing);                            #line default              #line hidden                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).KeyUp += new System.Windows.Input.KeyEventHandler(this.Window_KeyUp);                            #line default              #line hidden              return;              case 2:              this.lblNaam = ((System.Windows.Controls.Label)(target));              return;              case 3:              this.lblWorkshop = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.canvas = ((System.Windows.Controls.Canvas)(target));              return;              case 5:              this.HandImage = ((System.Windows.Controls.Image)(target));              return;              case 6:              this.viewPort = ((System.Windows.Controls.Viewport3D)(target));              return;              case 7:              this.camera = ((System.Windows.Media.Media3D.PerspectiveCamera)(target));              return;              case 8:              this.visualModel = ((System.Windows.Media.Media3D.ModelVisual3D)(target));              return;              }
Magic Number,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.WindowMouseDown);                            #line default              #line hidden                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.WindowClosing);                            #line default              #line hidden                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).KeyUp += new System.Windows.Input.KeyEventHandler(this.Window_KeyUp);                            #line default              #line hidden              return;              case 2:              this.lblNaam = ((System.Windows.Controls.Label)(target));              return;              case 3:              this.lblWorkshop = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.canvas = ((System.Windows.Controls.Canvas)(target));              return;              case 5:              this.HandImage = ((System.Windows.Controls.Image)(target));              return;              case 6:              this.viewPort = ((System.Windows.Controls.Viewport3D)(target));              return;              case 7:              this.camera = ((System.Windows.Media.Media3D.PerspectiveCamera)(target));              return;              case 8:              this.visualModel = ((System.Windows.Media.Media3D.ModelVisual3D)(target));              return;              }
Missing Default,Kinect.ShowCase,MainWindow,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\ShowCase\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.WindowMouseDown);                            #line default              #line hidden                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.WindowClosing);                            #line default              #line hidden                            #line 1 "..\..\..\MainWindow.xaml"              ((Kinect.ShowCase.MainWindow)(target)).KeyUp += new System.Windows.Input.KeyEventHandler(this.Window_KeyUp);                            #line default              #line hidden              return;              case 2:              this.lblNaam = ((System.Windows.Controls.Label)(target));              return;              case 3:              this.lblWorkshop = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.canvas = ((System.Windows.Controls.Canvas)(target));              return;              case 5:              this.HandImage = ((System.Windows.Controls.Image)(target));              return;              case 6:              this.viewPort = ((System.Windows.Controls.Viewport3D)(target));              return;              case 7:              this.camera = ((System.Windows.Media.Media3D.PerspectiveCamera)(target));              return;              case 8:              this.visualModel = ((System.Windows.Media.Media3D.ModelVisual3D)(target));              return;              }
