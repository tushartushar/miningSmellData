Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,Cyclomatic complexity of the method is 30
Long Identifier,Kinect.Semaphore.Utils,ListViewItemBehaviour,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\Utils\ListViewItemBehaviour.cs,,The length of the parameter IsBroughtIntoViewWhenSelectedProperty is 37.
Long Statement,Kinect.Semaphore.UserControls,MessageUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\MessageUserControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Kinect.Semaphore;component/usercontrols/messageusercontrol.xaml"' System.UriKind.Relative); " is 137.
Long Statement,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Kinect.Semaphore;component/usercontrols/userusercontrol.xaml"' System.UriKind.Relative); " is 134.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Magic Number,Kinect.Semaphore.UserControls,MessageUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\MessageUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.UserControl = ((Kinect.Semaphore.UserControls.MessageUserControl)(target));              return;              case 2:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,ResizeCameraImage,The following statement contains a magic number: CameraSize = 300;
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,SetCommands,The following statement contains a magic number: KeyPress = new RelayCommand<KeyEventArgs>(e =>                                                           {                                                               Log.DebugFormat("Key pressed: {0}"' e.Key);                                                               if (e.Key == Key.S)                                                               {                                                                   SetUpKinect();                                                               }                                                               else if (e.Key == Key.D)                                                               {                                                                   ToggleDebugInformation();                                                               }                                                               else if (e.Key == Key.Q)                                                               {                                                                   CloseKinect();                                                                   SemaphoreGames.Instance.ResetGameCounter();                                                               }                                                               else if (e.Key == Key.C)                                                               {                                                                   switch (_kinect.CameraViewType)                                                                   {                                                                       case Core.CameraView.Depth:                                                                           _kinect.CameraViewType =                                                                               Core.CameraView.ColoredDepth;                                                                           break;                                                                       case Core.CameraView.ColoredDepth:                                                                           _kinect.CameraViewType = Core.CameraView.Color;                                                                           break;                                                                       case Core.CameraView.Color:                                                                           _kinect.CameraViewType = Core.CameraView.None;                                                                           break;                                                                       case Core.CameraView.None:                                                                           _kinect.CameraViewType = Core.CameraView.Depth;                                                                           break;                                                                       default:                                                                           break;                                                                   }                                                                   SetCameraView();                                                               }                                                               else if (e.Key == Key.Z)                                                               {                                                                   ResizeCameraImage();                                                               }                                                               else if (e.Key == Key.Up)                                                               {                                                                   _kinect.MotorUp(2);                                                               }                                                               else if (e.Key == Key.Down)                                                               {                                                                   _kinect.MotorDown(2);                                                               }                                                           });
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,SetCommands,The following statement contains a magic number: KeyPress = new RelayCommand<KeyEventArgs>(e =>                                                           {                                                               Log.DebugFormat("Key pressed: {0}"' e.Key);                                                               if (e.Key == Key.S)                                                               {                                                                   SetUpKinect();                                                               }                                                               else if (e.Key == Key.D)                                                               {                                                                   ToggleDebugInformation();                                                               }                                                               else if (e.Key == Key.Q)                                                               {                                                                   CloseKinect();                                                                   SemaphoreGames.Instance.ResetGameCounter();                                                               }                                                               else if (e.Key == Key.C)                                                               {                                                                   switch (_kinect.CameraViewType)                                                                   {                                                                       case Core.CameraView.Depth:                                                                           _kinect.CameraViewType =                                                                               Core.CameraView.ColoredDepth;                                                                           break;                                                                       case Core.CameraView.ColoredDepth:                                                                           _kinect.CameraViewType = Core.CameraView.Color;                                                                           break;                                                                       case Core.CameraView.Color:                                                                           _kinect.CameraViewType = Core.CameraView.None;                                                                           break;                                                                       case Core.CameraView.None:                                                                           _kinect.CameraViewType = Core.CameraView.Depth;                                                                           break;                                                                       default:                                                                           break;                                                                   }                                                                   SetCameraView();                                                               }                                                               else if (e.Key == Key.Z)                                                               {                                                                   ResizeCameraImage();                                                               }                                                               else if (e.Key == Key.Up)                                                               {                                                                   _kinect.MotorUp(2);                                                               }                                                               else if (e.Key == Key.Down)                                                               {                                                                   _kinect.MotorDown(2);                                                               }                                                           });
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUsers,The following statement contains a magic number: i < 6
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: float r = 1f/255*user.Color.R;
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: float g = 1f/255*user.Color.G;
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: float b = 1f/255*user.Color.B;
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(user)                        {                            Color = Color.FromArgb((byte) 0.85f' (byte) r' (byte) g' (byte) b)'                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Spine = point                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(user)                        {                            Color = Color.FromArgb((byte) 0.85f' (byte) r' (byte) g' (byte) b)'                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Spine = point                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(user)                        {                            Color = Color.FromArgb((byte) 0.85f' (byte) r' (byte) g' (byte) b)'                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Spine = point                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(user)                        {                            Color = Color.FromArgb((byte) 0.85f' (byte) r' (byte) g' (byte) b)'                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Spine = point                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(user)                        {                            Color = Color.FromArgb((byte) 0.85f' (byte) r' (byte) g' (byte) b)'                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Spine = point                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(user)                        {                            Color = Color.FromArgb((byte) 0.85f' (byte) r' (byte) g' (byte) b)'                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Spine = point                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: float r = 1f/255*int.Parse(color.Substring(0' 2)' NumberStyles.HexNumber);
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: float r = 1f/255*int.Parse(color.Substring(0' 2)' NumberStyles.HexNumber);
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: float g = 1f/255*int.Parse(color.Substring(2' 2)' NumberStyles.HexNumber);
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: float g = 1f/255*int.Parse(color.Substring(2' 2)' NumberStyles.HexNumber);
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: float g = 1f/255*int.Parse(color.Substring(2' 2)' NumberStyles.HexNumber);
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: float b = 1f/255*int.Parse(color.Substring(4' 2)' NumberStyles.HexNumber);
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: float b = 1f/255*int.Parse(color.Substring(4' 2)' NumberStyles.HexNumber);
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: float b = 1f/255*int.Parse(color.Substring(4' 2)' NumberStyles.HexNumber);
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,CreateUser,The following statement contains a magic number: return new UserViewModel(i)                        {                            Brush =                                new RadialGradientBrush(Color.FromScRgb(0.85f' r' g' b)'                                                        Color.FromScRgb(0.85f' r/2' g/2' b/2))'                            Head = new Point3D(point.X' point.Y - 100' point.Z)'                             ShoulderCenter = new Point3D(point.X' point.Y - 60' point.Z)'                            ShoulderLeft = new Point3D(point.X - 35' point.Y - 60' point.Z)'                            ShoulderRight = new Point3D(point.X + 35' point.Y - 60' point.Z)'                            ElbowLeft = new Point3D(point.X - 55' point.Y' point.Z)'                            ElbowRight = new Point3D(point.X + 55' point.Y' point.Z)'                            HandLeft = new Point3D(point.X - 50' point.Y + 65' point.Z)'                            HandRight = new Point3D(point.X + 50' point.Y + 65' point.Z)'                            Spine = point'                            HipLeft = new Point3D(point.X - 30' point.Y + 50' point.Z)'                            HipRight = new Point3D(point.X + 30' point.Y + 50' point.Z)'                            KneeLeft = new Point3D(point.X - 35' point.Y + 130' point.Z)'                            KneeRight = new Point3D(point.X + 35' point.Y + 130' point.Z)'                            FootLeft = new Point3D(point.X - 40' point.Y + 210' point.Z)'                            FootRight = new Point3D(point.X + 40' point.Y + 210' point.Z)'                        };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,GetPoint3DCoordinates,The following statement contains a magic number: var point = new Point3D                             {                                 X = (i*(x + 25))/x'                                  Y = (i*(y + 25))/y'                                  Z = i*z                             };
Magic Number,Kinect.Semaphore.ViewModels,MainViewModel,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\ViewModels\MainViewModel.cs,GetPoint3DCoordinates,The following statement contains a magic number: var point = new Point3D                             {                                 X = (i*(x + 25))/x'                                  Y = (i*(y + 25))/y'                                  Z = i*z                             };
Missing Default,Kinect.Semaphore.UserControls,MessageUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\MessageUserControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.UserControl = ((Kinect.Semaphore.UserControls.MessageUserControl)(target));              return;              case 2:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              }
Missing Default,Kinect.Semaphore.UserControls,UserUserControl,D:\research\architectureSmells\repos\atosorigin_Kinect\src\Demos\Semaphore\UserControls\UserUserControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.Spine = ((System.Windows.Shapes.Ellipse)(target));              return;              case 2:              this.UserId = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.Head = ((System.Windows.Shapes.Ellipse)(target));              return;              case 4:              this.ShoulderCenter = ((System.Windows.Shapes.Rectangle)(target));              return;              case 5:              this.ShoulderRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 6:              this.ShoulderLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 7:              this.ElbowLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 8:              this.ElbowRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 9:              this.WristLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 10:              this.WristRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 11:              this.HandLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 12:              this.HandRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 13:              this.HipRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 14:              this.HipLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 15:              this.KneeLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 16:              this.KneeRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 17:              this.AnkleLeft = ((System.Windows.Shapes.Ellipse)(target));              return;              case 18:              this.AnkleRight = ((System.Windows.Shapes.Ellipse)(target));              return;              case 19:              this.FootLeft = ((System.Windows.Shapes.Rectangle)(target));              return;              case 20:              this.FootRight = ((System.Windows.Shapes.Rectangle)(target));              return;              case 21:              this.Winner = ((System.Windows.Controls.TextBlock)(target));              return;              case 22:              this.CalibrationCounter = ((System.Windows.Controls.TextBlock)(target));              return;              case 23:              this.LeftUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 24:              this.RightUpperArm = ((System.Windows.Shapes.Line)(target));              return;              case 25:              this.LeftLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 26:              this.RightLowerArm = ((System.Windows.Shapes.Line)(target));              return;              case 27:              this.LeftUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 28:              this.RightUpperLeg = ((System.Windows.Shapes.Line)(target));              return;              case 29:              this.LeftLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              case 30:              this.RightLowerLeg = ((System.Windows.Shapes.Line)(target));              return;              }
