Implementation smell,Namespace,Class,File,Method,Description
Long Method,CREF.Translation,AddressPartTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModelPath,The method has 115 lines of code.
Long Method,CREF.Translation,ClinicalRequestTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Translators.cs,GetStatusFilterValue,The method has 123 lines of code.
Complex Method,CREF.Translation,CREFTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\CREFTranslator.cs,TranslateClinicalAssertion,Cyclomatic complexity of the method is 21
Complex Method,CREF.Translation,CREFTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\CREFTranslator.cs,GetCompositionType,Cyclomatic complexity of the method is 8
Complex Method,CREF.Translation,AddressPartTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModelPath,Cyclomatic complexity of the method is 56
Complex Method,CREF.Translation,ResultTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModelPath,Cyclomatic complexity of the method is 8
Complex Method,CREF.Translation,ProblemTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModelPath,Cyclomatic complexity of the method is 8
Complex Method,CREF.Translation,MedicationTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModelPath,Cyclomatic complexity of the method is 11
Complex Method,CREF.Translation,PhysicalQuantityLiteralTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Translators.cs,Translate,Cyclomatic complexity of the method is 15
Complex Method,CREF.Translation,ClinicalRequestTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Translators.cs,GetStatusFilterValue,Cyclomatic complexity of the method is 102
Complex Method,CREF.Model,DataTypes,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Model\DataTypes.cs,ResolveType,Cyclomatic complexity of the method is 14
Long Parameter List,CREF.Translation,CREFTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\CREFTranslator.cs,TranslateBaseClinicalAssertion,The method has 5 parameters.
Long Parameter List,CREF.Translation,CREFTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\CREFTranslator.cs,TranslateCollectInformationAction,The method has 5 parameters.
Long Parameter List,CREF.Translation,CREFTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\CREFTranslator.cs,TranslateActionSentence,The method has 6 parameters.
Long Parameter List,CREF.Translation,AddressPartTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModelPath,The method has 10 parameters.
Long Parameter List,CREF.Translation,CaseTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Translators.cs,Translate,The method has 5 parameters.
Long Statement,CREF.Translation,CREFTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\CREFTranslator.cs,Translate,The length of the statement  "	var identifier = source.MetaData.Children.First (c => c.Name == "identifiers").Children.First (c => c.Name == "identifier"); " is 124.
Long Statement,CREF.Translation,CREFTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\CREFTranslator.cs,TranslateClinicalAssertion,The length of the statement  "					throw new NotSupportedException (String.Format ("Translation of {0} actions is not supported."' element.NodeType.GetLocalName ())); " is 131.
Long Statement,CREF.Translation,CREFTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\CREFTranslator.cs,TranslateActionSentence,The length of the statement  "	// If we assert that the source artifact can only use specific types of expressions' and that the expressions must be literal (evaluable at compile-time) " is 153.
Long Statement,CREF.Translation,CREFTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\CREFTranslator.cs,TranslateActionSentence,The length of the statement  "				var substanceCode = ((Node)proposalExpression).Children.FirstOrDefault (c => c.Name == "property" && c.Attributes.ContainsKey ("name") && c.GetAttribute<string> ("name") == "substance.substanceCode"); " is 200.
Long Statement,CREF.Translation,CREFTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\CREFTranslator.cs,TranslateActionSentence,The length of the statement  "					var codeValue = substanceCode.Children.FirstOrDefault (c => c.Name == "value" && c.NodeType.GetLocalName () == "CodeLiteral"); " is 126.
Long Statement,CREF.Translation,CREFTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\CREFTranslator.cs,GetGroupSelectionBehavior,The length of the statement  "		var behaviorNode = node.Children.FirstOrDefault (c => c.Name == "behavior" && c.NodeType.GetLocalName () == "GroupSelectionBehavior"); " is 134.
Long Statement,CREF.Translation,PatientTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModelPath,The length of the statement  "		throw new NotSupportedException (String.Format ("Referenced property ({0}.{1}) does not have an equivalent CREF representation."' sourceType.Name' path)); " is 154.
Long Statement,CREF.Translation,AddressPartTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModel,The length of the statement  "	// TODO: The result type is actually String' not an object type...' this should be okay because it's never going to be the result of a ClinicalRequest... " is 153.
Long Statement,CREF.Translation,AddressPartTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModelPath,The length of the statement  "	// This would translate to direct property access of the relevant value in the StructuredAddress type of the Allscripts Model " is 125.
Long Statement,CREF.Translation,AddressPartTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModelPath,The length of the statement  "			var propertyNode = filterNode.Children.FirstOrDefault (c => c.Name == "source" && c.NodeType.GetLocalName () == "Property" && c.GetAttribute<string> ("path") == "part"); " is 169.
Long Statement,CREF.Translation,AddressPartTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModelPath,The length of the statement  "				var equalNode = filterNode.Children.FirstOrDefault (c => c.Name == "condition" && c.NodeType.GetLocalName () == "Equal"); " is 121.
Long Statement,CREF.Translation,AddressPartTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModelPath,The length of the statement  "					var propertyTypeNode = equalNode.Children.FirstOrDefault (c => c.Name == "operand" && c.NodeType.GetLocalName () == "Property" && c.GetAttribute<string> ("path") == "type"); " is 173.
Long Statement,CREF.Translation,AddressPartTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModelPath,The length of the statement  "						var partTypeNode = equalNode.Children.FirstOrDefault (c => c.NodeType.GetLocalName () == "StringLiteral" || c.NodeType.GetLocalName () == "Literal"); " is 149.
Long Statement,CREF.Translation,RelatedClinicalStatementTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModel,The length of the statement  "	// There is no CREF equivalent for this class' should be okay though because it should never be the result type of a ClinicalRequest. " is 133.
Long Statement,CREF.Translation,AllergyTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModelPath,The length of the statement  "	//case "adverseEventCode" : return TranslateCodeReference(context' sourceType' node' path); // TODO: Map to AdverseEventType? " is 125.
Long Statement,CREF.Translation,AllergyTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModelPath,The length of the statement  "	// NOTE: AdverseEventAgent is being used because it seems to map more closely to the expected Code for an Allergy clinical item in Allscripts MOM. " is 146.
Long Statement,CREF.Translation,AllergyTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModelPath,The length of the statement  "		throw new NotSupportedException (String.Format ("Referenced property ({0}.{1}) does not have an equivalent CREF representation."' sourceType.Name' path)); " is 154.
Long Statement,CREF.Translation,EncounterTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModelPath,The length of the statement  "		throw new NotSupportedException (String.Format ("Referenced property ({0}.{1}) does not have an equivalent CREF representation."' sourceType.Name' path)); " is 154.
Long Statement,CREF.Translation,ResultTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModelPath,The length of the statement  "		throw new NotSupportedException (String.Format ("Referenced property ({0}.{1}) does not have an equivalent CREF representation."' sourceType.Name' path)); " is 154.
Long Statement,CREF.Translation,ProblemTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModelPath,The length of the statement  "		throw new NotSupportedException (String.Format ("Referenced property ({0}.{1}) does not have an equivalent CREF representation."' sourceType.Name' path)); " is 154.
Long Statement,CREF.Translation,ProcedureTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModelPath,The length of the statement  "		throw new NotSupportedException (String.Format ("Referenced property ({0}.{1}) does not have an equivalent CREF representation."' sourceType.Name' path)); " is 154.
Long Statement,CREF.Translation,MedicationTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModelPath,The length of the statement  "		throw new NotSupportedException (String.Format ("Referenced property ({0}.{1}) does not have an equivalent CREF representation."' sourceType.Name' path)); " is 154.
Long Statement,CREF.Translation,IntervalTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Translators.cs,Translate,The length of the statement  "			throw new NotSupportedException ("Translation for open intervals is not supported because CREF only supports closed interval values."); " is 135.
Long Statement,CREF.Translation,IntervalTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Translators.cs,Translate,The length of the statement  "		throw new NotSupportedException ("Translation for intervals with point types other than Timestamp is not supported because CREF does not support generic interval values."); " is 172.
Long Statement,CREF.Translation,DateAddTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Translators.cs,Translate,The length of the statement  "	if (granularity.NodeType == "urn:hl7-org:v3:knowledgeartifact:r1:Literal")// TODO: Better story for this type of thing.... " is 122.
Long Statement,CREF.Translation,DateAddTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Translators.cs,Translate,The length of the statement  "		result.Granularity = (CREFModel.DateGranularity)Enum.Parse (typeof(CREFModel.DateGranularity)' granularity.GetAttribute<string> ("value")); " is 139.
Long Statement,CREF.Translation,DateAddTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Translators.cs,Translate,The length of the statement  "		throw new NotSupportedException ("Date granularity argument to a DateAdd expression must be a literal because CREF does not support granularity as an argument' only as an attribute of the target DateAdd expression."); " is 217.
Long Statement,CREF.Translation,ContainsTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Translators.cs,Translate,The length of the statement  "	// As long as this is list containment' it can be translated using an Exists(Filter(Source' Condition(Current = Value))); " is 121.
Long Statement,CREF.Translation,FilterTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Translators.cs,Translate,The length of the statement  "		throw new NotSupportedException ("Translation of filter expression is not supported because it involves a named scope reference' which is not supported in CREF."); " is 163.
Long Statement,CREF.Translation,InTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Translators.cs,Translate,The length of the statement  "	// As long as this is list containment' it can be translated using an Exists(Filter(Collection' Condition(Current = Element))); " is 127.
Long Statement,CREF.Translation,InTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Translators.cs,Translate,The length of the statement  "		throw new NotSupportedException ("In translation with an element of type list is not supported because there is no equivalent CREF representation."); " is 149.
Long Statement,CREF.Translation,PropertyTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Translators.cs,Translate,The length of the statement  "		throw new NotSupportedException ("Property path cannot be translated because it references an explicit scope' which is not supported in CREF."); " is 144.
Long Statement,CREF.Translation,PhysicalQuantityLiteralTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Translators.cs,Translate,The length of the statement  "	// Physical quantity is not supported as a value type within CREF' so the literal will need to be transformed to a "unit normalized representation" " is 147.
Long Statement,CREF.Translation,PhysicalQuantityLiteralTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Translators.cs,Translate,The length of the statement  "		throw new NotSupportedException (String.Format ("Physical quantity unit translation for unit type of '{0}' is not supported."' unit)); " is 134.
Long Statement,CREF.Translation,ClinicalRequestTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Translators.cs,Translate,The length of the statement  "	var cardinality = (RequestCardinality)Enum.Parse (typeof(RequestCardinality)' node.Attributes ["cardinality"].ToString ()' true); " is 129.
Long Statement,CREF.Translation,ClinicalRequestTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Translators.cs,Translate,The length of the statement  "	result.Cardinality = cardinality == RequestCardinality.Single ? CREFModel.RequestCardinality.Single : CREFModel.RequestCardinality.Multiple; " is 140.
Long Statement,CREF.Translation,ClinicalRequestTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Translators.cs,Translate,The length of the statement  "		throw new InvalidOperationException (String.Format ("Unable to determine request type from source type: '{0}'."' node.ResultType.Name)); " is 136.
Long Statement,CREF.Translation,InValueSetTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Translators.cs,Translate,The length of the statement  "	// Ideally' this would be expressed as an InValueSet expression within CREF' but in the absence of such an operator' the translation " is 132.
Long Statement,CREF.Model,DataTypes,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Model\DataTypes.cs,ResolveProperties,The length of the statement  "		// For choice elements' the element names should appear traversible as properties' otherwise there would be no way to access the value " is 134.
Long Statement,CREF.Model,DataTypes,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Model\DataTypes.cs,ResolveProperties,The length of the statement  "		// (HeD does not have a Cast' and the xsd doesn't actually have a property named Item' which is how choices deserialize) " is 120.
Long Statement,CREF.Model,DataTypes,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\Model\DataTypes.cs,ResolveProperties,The length of the statement  "		foreach (var attribute in property.GetCustomAttributes (typeof(XmlElementAttribute)' false).OfType<XmlElementAttribute> ()) { " is 125.
Missing Default,CREF.Translation,CREFTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\CREFTranslator.cs,TranslateActionSentence,The following switch statement is missing a default case: switch (proposalExpression.ResultType.Name) {  case "SubstanceAdministrationProposal":  case "SubstanceAdministrationEvent":  	{  		var substanceCode = ((Node)proposalExpression).Children.FirstOrDefault (c => c.Name == "property" && c.Attributes.ContainsKey ("name") && c.GetAttribute<string> ("name") == "substance.substanceCode");  		if (substanceCode != null) {  			var codeValue = substanceCode.Children.FirstOrDefault (c => c.Name == "value" && c.NodeType.GetLocalName () == "CodeLiteral");  			if (codeValue != null) {  				result.Code = codeValue.GetAttribute<string> ("code");  				result.CodeSet = codeValue.GetAttribute<string> ("codeSystem");  			}  		}  	}  	break;  }  
Missing Default,CREF.Translation,AddressPartTranslator,C:\repos\cqframework_healthedecisions\tooling\framework\CREF.Translation\ModelTranslators.cs,TransformModelPath,The following switch statement is missing a default case: switch (partType) {  // AddressLine  case "AL":  	return GetPropertyExpression (context' propertyNode' "AddressLine1");  // Additional Locator  case "ADL":  	break;  // Unit Identifier  case "UNID":  	break;  // Unit Designator  case "UNIT":  	break;  // Delivery Address Line  case "DAL":  	return GetPropertyExpression (context' propertyNode' "AddressLine1");  // Delivery Installation Type  case "DINST":  	break;  // Delivery Installation Area  case "DINSTA":  	break;  // Delivery Installation Qualifier  case "DINSTQ":  	break;  // Delivery Mode  case "DMOD":  	break;  // Delivery Mode Identifier  case "DMODID":  	break;  // Street Address Line  case "SAL":  	return GetPropertyExpression (context' propertyNode' "AddressLine1");  // Building Number  case "BNR":  	break;  // Building Number Suffix  case "BNS":  	break;  // Street Name  case "STR":  	break;  // Street Name Base  case "STB":  	break;  // Street Type  case "STTYP":  	break;  // Direction  case "DIR":  	break;  // Intersection  case "INT":  	break;  // Care of  case "CAR":  	break;  // Census Tract  case "CEN":  	break;  // Country  case "CNT":  	return GetPropertyExpression (context' propertyNode' "Country");  // County or Parish  case "CPA":  	return GetPropertyExpression (context' propertyNode' "CountyCode");  // Municipality or City  case "CTY":  	return GetPropertyExpression (context' propertyNode' "City");  // Delimiter  case "DEL":  	break;  // Post Office Box  case "POB":  	break;  // Precinct  case "PRE":  	break;  // State  case "STA":  	return GetPropertyExpression (context' propertyNode' "StateOrProvince");  // Zip  case "ZIP":  	return GetPropertyExpression (context' propertyNode' "PostalCode");  // Delivery Point Identifier  case "DPID":  	break;  }  
