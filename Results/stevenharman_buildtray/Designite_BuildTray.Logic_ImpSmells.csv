Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BuildTray.Logic,TFSServerProxy,C:\repos\stevenharman_buildtray\BuildTray.Logic\TFSServerProxy.cs,GetBuildConfigurations,Cyclomatic complexity of the method is 11
Long Parameter List,BuildTray.Logic,BuildProcessTimer,C:\repos\stevenharman_buildtray\BuildTray.Logic\BuildProcessTimer.cs,TimerCallback,The method has 5 parameters.
Long Statement,BuildTray.Logic,BuildProcessTimer,C:\repos\stevenharman_buildtray\BuildTray.Logic\BuildProcessTimer.cs,TimerCallback,The length of the statement  "			IList<IBuildDetail> details = _proxy.GetBuildDetails (bc.ServerUrl' bc.ProjectName' bc.BuildName).Where (build => build.Status.CanConvert () && (build.GetBuildNumber () > _lastBuild)).ToList (); " is 194.
Long Statement,BuildTray.Logic,IntegrationService,C:\repos\stevenharman_buildtray\BuildTray.Logic\IntegrationService.cs,GetMaxStartDateForBuildDetailList,The length of the statement  "	return details.Where (build => build.IsIgnored () || build.Status == BuildStatus.PartiallySucceeded || build.Status == BuildStatus.Failed || build.Status == BuildStatus.Succeeded).Max<IBuildDetail' DateTime?> (build => build.StartTime) ?? DateTime.MinValue; " is 257.
Long Statement,BuildTray.Logic,TFSServerProxy,C:\repos\stevenharman_buildtray\BuildTray.Logic\TFSServerProxy.cs,GetBuildConfigurations,The length of the statement  "		ProjectInfo[] infoArray = ((ICommonStructureService)server.GetService (typeof(ICommonStructureService))).ListProjects (); " is 121.
Long Statement,BuildTray.Logic,UtilityExtension,C:\repos\stevenharman_buildtray\BuildTray.Logic\UtilityExtension.cs,Combine,The length of the statement  "	bool inProgress = status == TrayStatus.FailureInProgress || newStatus == TrayStatus.FailureInProgress || status == TrayStatus.SuccessInProgress || newStatus == TrayStatus.SuccessInProgress; " is 189.
Long Statement,BuildTray.Logic,UtilityExtension,C:\repos\stevenharman_buildtray\BuildTray.Logic\UtilityExtension.cs,Combine,The length of the statement  "	bool failure = status == TrayStatus.Failure || status == TrayStatus.FailureInProgress || newStatus == TrayStatus.Failure || newStatus == TrayStatus.FailureInProgress; " is 166.
Long Statement,BuildTray.Logic,UtilityExtension,C:\repos\stevenharman_buildtray\BuildTray.Logic\UtilityExtension.cs,Combine,The length of the statement  "	bool success = status == TrayStatus.Success || status == TrayStatus.SuccessInProgress || newStatus == TrayStatus.SuccessInProgress || newStatus == TrayStatus.Success; " is 166.
Magic Number,BuildTray.Logic,BuildProcessTimer,C:\repos\stevenharman_buildtray\BuildTray.Logic\BuildProcessTimer.cs,Stop,The following statement contains a magic number: while (_isRunning || DateTime.Now.Subtract (current).TotalSeconds > 30) {  }  
Missing Default,BuildTray.Logic,BuildProcessTimer,C:\repos\stevenharman_buildtray\BuildTray.Logic\BuildProcessTimer.cs,TimerCallback,The following switch statement is missing a default case: switch (build.Status) {  case BuildStatus.Failed:  case BuildStatus.PartiallySucceeded:  case BuildStatus.Succeeded:  	_lastBuild = buildNumber;  	BuildCompleted.Raise (this' new BuildDetailEventArgs {  		Build = build'  		BuildInfo = bc'  		MostRecentStartDate = maxStartDate  	});  	break;  case BuildStatus.InProgress:  	BuildStarted.Raise (this' new BuildDetailEventArgs {  		Build = build'  		BuildInfo = bc'  		MostRecentStartDate = maxStartDate  	});  	break;  }  
