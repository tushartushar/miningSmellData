Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Xamarin.Test.Performance.Utilities,BenchViewTools,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\BenchViewTools.cs,GatherBenchViewData,Cyclomatic complexity of the method is 8
Complex Method,compare,Utils,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\Utils.cs,CompleteCommit,Cyclomatic complexity of the method is 14
Complex Method,compare,UnixRunner,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\UnixRunner.cs,Run,Cyclomatic complexity of the method is 13
Complex Method,Benchmarker.Models,Config,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\Config.cs,LoadFromString,Cyclomatic complexity of the method is 13
Complex Method,Benchmarker.Models,RunSet,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\RunSet.cs,FromId,Cyclomatic complexity of the method is 11
Long Parameter List,compare,UnixRunner,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\UnixRunner.cs,UnixRunner,The method has 7 parameters. Parameters: testsDirectory' _config' _benchmark' _machine' _timeoutSeconds' _runTool' _runToolArguments
Long Parameter List,compare,UnixRunner,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\UnixRunner.cs,Run,The method has 5 parameters. Parameters: profilesDirectory' profileFilename' binaryProtocolFilename' timedOut' stdoutOutput
Long Parameter List,Benchmarker.Models,RunSet,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\RunSet.cs,FromId,The method has 7 parameters. Parameters: local_machine' local_runsetid' local_config' local_mainCommit' local_secondaryCommits' local_buildURL' local_logURL
Long Statement,Xamarin.Test.Performance.Utilities,BenchViewTools,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\BenchViewTools.cs,GatherBenchViewData,The length of the statement  "			string metaargs = $"\"{s_submissionMetadataPy}\" --name=\"{submissionName}\" --user-email={s_userEmail} -o=\"{s_submissionMetadataJson}\""; " is 139.
Long Statement,Xamarin.Test.Performance.Utilities,BenchViewTools,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\BenchViewTools.cs,GatherBenchViewData,The length of the statement  "			ShellOutVital(s_pythonProcessName' $"\"{s_buildPy}\" --type={submissionType} --repository=\"{giturl}\" --number=\"{commit.Hash}\" --branch=\"{branch}\" --source-timestamp=\"{DateTime.SpecifyKind (commit.CommitDate.Value' DateTimeKind.Utc).ToString (RunSet.DATETIME_FORMAT)}\" -o=\"{s_buildJson}\""); " is 299.
Long Statement,Xamarin.Test.Performance.Utilities,BenchViewTools,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\BenchViewTools.cs,ConvertToMeasurement,The length of the statement  "            ShellOutVital(s_pythonProcessName' $"\"{s_measurementPy}\" xamarin_benchmarker \"{runSetJsonFileName}\" -o=\"{s_measurementJson}\""); " is 133.
Long Statement,compare,Utils,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\Utils.cs,CompleteCommit,The length of the statement  "								Console.Error.WriteLine ("Error: Commit hash for mono specified on command line does not match the one reported with --version."); " is 130.
Long Statement,compare,Utils,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\Utils.cs,CompleteCommit,The length of the statement  "							Console.Error.WriteLine ("Error: Commit hash specified on command line does not match the one from the git repository."); " is 121.
Long Statement,compare,Utils,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\Utils.cs,ResolveFullHashViaGithub,The length of the statement  "				treeResponse = await GitHubInterface.RunWithRetry (() => gitHubClient.GitDatabase.Tree.Get (commit.Product.GitHubUser' commit.Product.GitHubRepo' commit.Hash)); " is 160.
Long Statement,compare,Utils,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\Utils.cs,ResolveFullHashViaGithub,The length of the statement  "				gitHubCommit = await GitHubInterface.RunWithRetry (() => gitHubClient.GitDatabase.Commit.Get (commit.Product.GitHubUser' commit.Product.GitHubRepo' treeResponse.Sha)); " is 167.
Long Statement,compare,UnixRunner,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\UnixRunner.cs,PrintCommandLine,The length of the statement  "			Console.WriteLine("$> {0}: \"{1} {2}\" in \"{3}\" with {4}"' prefix' info.FileName' info.Arguments' info.WorkingDirectory' compare.Utils.PrintableEnvironmentVariables(info)); " is 174.
Long Statement,compare,UnixRunner,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\UnixRunner.cs,RunAOT,The length of the statement  "				var stdout = Task.Factory.StartNew (() => new StreamReader (aotProcess.StandardOutput.BaseStream).ReadToEnd ()' TaskCreationOptions.LongRunning); " is 145.
Long Statement,compare,UnixRunner,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\UnixRunner.cs,RunAOT,The length of the statement  "				var stderr = Task.Factory.StartNew (() => new StreamReader (aotProcess.StandardError.BaseStream).ReadToEnd ()' TaskCreationOptions.LongRunning); " is 144.
Long Statement,compare,UnixRunner,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\UnixRunner.cs,Run,The length of the statement  "						var stdout = Task.Factory.StartNew (() => new StreamReader (mainProcess.StandardOutput.BaseStream).ReadToEnd ()' TaskCreationOptions.LongRunning); " is 146.
Long Statement,compare,UnixRunner,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\UnixRunner.cs,Run,The length of the statement  "						var stderr = Task.Factory.StartNew (() => new StreamReader (mainProcess.StandardError.BaseStream).ReadToEnd ()' TaskCreationOptions.LongRunning); " is 145.
Long Statement,Benchmarker,Accredit,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libaccredit\Accredit.cs,GetCredentials,The length of the statement  "			string oauthLink = GetResponse ("https://accredit.parseapp.com/requestCredentials"' string.Format("service={0}&key={1}&secret={2}"' serviceName' key' secret)); " is 159.
Long Statement,Benchmarker,Accredit,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libaccredit\Accredit.cs,GetCredentials,The length of the statement  "			var response = GetResponse ("https://accredit.parseapp.com/getCredentials"' string.Format ("key={0}&secret={1}"' key' secret)); " is 127.
Long Statement,Benchmarker,Helper,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\Helper.cs,RunWithRetry,The length of the statement  "					Logging.GetLogging ().ErrorFormat ("Exception when running task - sleeping {0} seconds and retrying: {1}"' seconds' exc); " is 121.
Long Statement,Benchmarker,Helper,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\Helper.cs,RunWithRetry,The length of the statement  "					Logging.GetLogging ().ErrorFormat ("Exception when running task - sleeping {0} seconds and retrying: {1}"' seconds' exc); " is 121.
Long Statement,Benchmarker,GitHubInterface,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libgithub\GitHubInterface.cs,RunWithRetry,The length of the statement  "					Logging.GetLogging ().ErrorFormat ("Exception when running task - sleeping {0} seconds and retrying: {1}"' seconds' exc); " is 121.
Long Statement,Benchmarker.Models,RunSet,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\RunSet.cs,FromId,The length of the statement  "				Console.Error.WriteLine ("trying to parse Start date: \"" + db_result ["StartedAt"].ToObject<DateTime> ().ToLocalTime ().ToString (DATETIME_PRETTY) + "\""); " is 156.
Long Statement,Benchmarker.Models,RunSet,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\RunSet.cs,FromId,The length of the statement  "					throw new Exception (String.Format ("Commit ({0}) does not match the one in the database ({1})."' local_mainCommit.Hash' db_mainProductCommit)); " is 144.
Long Statement,Benchmarker.Models,RunSet,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\RunSet.cs,FromId,The length of the statement  "					throw new Exception ("Machine does not match the one in the database. \"" + db_machineName + "\" vs. \"" + local_machine.Name + "\""); " is 134.
Long Statement,Benchmarker.Models,HttpApi,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\HttpApi.cs,ApiUrl,The length of the statement  "				queryString = "?" + String.Join ("&"' args.Select (kvp => String.Format ("{0}={1}"' kvp.Key' Uri.EscapeUriString (kvp.Value)))); " is 128.
Empty Catch Block,compare,Utils,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\Utils.cs,LocalHostnameAndArch,The method has an empty catch block.
Empty Catch Block,compare,UnixRunner,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\UnixRunner.cs,RunAOT,The method has an empty catch block.
Empty Catch Block,compare,UnixRunner,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\UnixRunner.cs,Run,The method has an empty catch block.
Magic Number,compare,Utils,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\Utils.cs,CompleteCommit,The following statement contains a magic number: var line = version.Split (new char[] { '\n' }' 2) [0];
Magic Number,compare,Utils,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\Utils.cs,CompleteCommit,The following statement contains a magic number: var hash = match.Groups [2].Value;
Magic Number,compare,Utils,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\Utils.cs,CompleteCommit,The following statement contains a magic number: var date = match.Groups [3].Value;
Magic Number,compare,UnixRunner,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\UnixRunner.cs,RunAOT,The following statement contains a magic number: var success = aotProcess.WaitForExit(timeout < 0 ? -1 : (Math.Min (Int32.MaxValue / 1000' timeout) * 1000));
Magic Number,compare,UnixRunner,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\UnixRunner.cs,RunAOT,The following statement contains a magic number: var success = aotProcess.WaitForExit(timeout < 0 ? -1 : (Math.Min (Int32.MaxValue / 1000' timeout) * 1000));
Magic Number,compare,UnixRunner,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\UnixRunner.cs,Run,The following statement contains a magic number: System.Threading.Thread.Sleep (5000);
Magic Number,compare,UnixRunner,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\UnixRunner.cs,Run,The following statement contains a magic number: var success = mainProcess.WaitForExit (timeout < 0 ? -1 : (Math.Min (Int32.MaxValue / 1000' timeout) * 1000));
Magic Number,compare,UnixRunner,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\compare\UnixRunner.cs,Run,The following statement contains a magic number: var success = mainProcess.WaitForExit (timeout < 0 ? -1 : (Math.Min (Int32.MaxValue / 1000' timeout) * 1000));
Magic Number,Benchmarker,Accredit,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libaccredit\Accredit.cs,WaitForConfirmation,The following statement contains a magic number: Thread.Sleep (1000);
Magic Number,Benchmarker.Models,Config,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\Config.cs,LoadFromString,The following statement contains a magic number: config.Count = 10;
Magic Number,Benchmarker.Models,HttpApi,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\HttpApi.cs,Send,The following statement contains a magic number: client.Timeout = TimeSpan.FromSeconds (350);
