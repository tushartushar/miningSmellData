Implementation smell,Namespace,Class,File,Method,Description
Long Method,Benchmarks.SciMark,Random,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\Random.cs,nextDoubles,The method has 112 lines of code.
Long Method,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The method has 108 lines of code.
Long Method,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The method has 164 lines of code.
Long Method,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDummyCells,The method has 206 lines of code.
Long Method,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,Intersect,The method has 131 lines of code.
Complex Method,Benchmarks.BH,BH,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BH.cs,parseCmdLine,Cyclomatic complexity of the method is 10
Complex Method,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,shade,Cyclomatic complexity of the method is 10
Complex Method,Benchmarks.Hash3,Hash3,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\hash3.cs,Main,Cyclomatic complexity of the method is 10
Complex Method,Benchmarks.Health,Health,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\health\Health.cs,parseCmdLine,Cyclomatic complexity of the method is 10
Complex Method,Benchmarks.Perimeter,BlackNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Perimeter\BlackNode.cs,perimeter,Cyclomatic complexity of the method is 9
Complex Method,Benchmarks.SciMark,LU,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\LU.cs,factor,Cyclomatic complexity of the method is 11
Complex Method,Benchmarks.SciMark,Random,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\Random.cs,nextDoubles,Cyclomatic complexity of the method is 23
Complex Method,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,Cyclomatic complexity of the method is 15
Complex Method,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,doIteration,Cyclomatic complexity of the method is 13
Complex Method,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,Cyclomatic complexity of the method is 13
Complex Method,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDeltaT,Cyclomatic complexity of the method is 9
Complex Method,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDummyCells,Cyclomatic complexity of the method is 9
Complex Method,Benchmarks.SpecRaytracer,IntersectPt,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\IntersectPt.cs,FindNearestIsect,Cyclomatic complexity of the method is 16
Complex Method,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,Cyclomatic complexity of the method is 11
Complex Method,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,Intersect,Cyclomatic complexity of the method is 31
Complex Method,Benchmarks.SpecRaytracer,PolygonObj,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\PolygonObj.cs,InsidePolygon,Cyclomatic complexity of the method is 9
Complex Method,Benchmarks.SpecRaytracer,PolyTypeObj,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\PolyTypeObj.cs,PolyTypeObj,Cyclomatic complexity of the method is 14
Complex Method,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadPoly,Cyclomatic complexity of the method is 9
Complex Method,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,FindLightBlock,Cyclomatic complexity of the method is 8
Long Parameter List,Benchmarks.GrandeTracer,Interval,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Interval.cs,Interval,The method has 6 parameters. Parameters: number' width' height' yfrom' yto' total
Long Parameter List,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,shade,The method has 6 parameters. Parameters: level' weight' P' N' I' hit
Long Parameter List,Benchmarks.GrandeTracer,View,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\View.cs,View,The method has 6 parameters. Parameters: from' at' up' dist' angle' aspect
Long Parameter List,Benchmarks.Graph8,Node,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\graph8.cs,connect,The method has 8 parameters. Parameters: _n1' _n2' _n3' _n4' _n5' _n6' _n7' _n8
Long Parameter List,Benchmarks.Perimeter,QuadTreeNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Perimeter\QuadTreeNode.cs,QuadTreeNode,The method has 6 parameters. Parameters: quad' nw' ne' sw' se' parent
Long Parameter List,Benchmarks.Perimeter,QuadTreeNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Perimeter\QuadTreeNode.cs,createTree,The method has 6 parameters. Parameters: size' center_x' center_y' parent' quadrant' level
Long Parameter List,Benchmarks.SciMark,SparseCompRow,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\SparseCompRow.cs,matmult,The method has 6 parameters. Parameters: y' val' row' col' x' NUM_ITERATIONS
Long Parameter List,Benchmarks.SpecRaytracer,Camera,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Camera.cs,Camera,The method has 5 parameters. Parameters: newpos' newview' newfdist' newortho' newFOV
Long Parameter List,Benchmarks.SpecRaytracer,Color,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Color.cs,Combine,The method has 6 parameters. Parameters: color1' color2' color2factor' color3' color4' color5
Long Parameter List,Benchmarks.SpecRaytracer,IntersectPt,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\IntersectPt.cs,FindNearestIsect,The method has 5 parameters. Parameters: octree' ray' originID' level' isectnode
Long Parameter List,Benchmarks.SpecRaytracer,Material,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Material.cs,Material,The method has 6 parameters. Parameters: diff' amb' spec' emiss' newshininess' newktran
Long Parameter List,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateFaces,The method has 6 parameters. Parameters: maxX' minX' maxY' minY' maxZ' minZ
Long Parameter List,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,FormAdjacent,The method has 6 parameters. Parameters: maxX' maxY' maxZ' minX' minY' minZ
Long Parameter List,Benchmarks.SpecRaytracer,PolygonObj,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\PolygonObj.cs,PolygonObj,The method has 6 parameters. Parameters: objmaterial' newobjID' numverts' vertices' max' min
Long Parameter List,Benchmarks.SpecRaytracer,PolyTypeObj,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\PolyTypeObj.cs,PolyTypeObj,The method has 6 parameters. Parameters: objmaterial' newobjID' numverts' vertices' max' min
Long Parameter List,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,Shade,The method has 6 parameters. Parameters: tree' eyeRay' color' factor' level' originID
Long Parameter List,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,GetLightColor,The method has 5 parameters. Parameters: tree' point' normal' currentObj' color
Long Parameter List,Benchmarks.SpecRaytracer,SphereObj,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\SphereObj.cs,SphereObj,The method has 6 parameters. Parameters: objmaterial' newobjID' neworigin' newradius' max' min
Long Parameter List,Benchmarks.SpecRaytracer,TriangleObj,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\TriangleObj.cs,TriangleObj,The method has 6 parameters. Parameters: objmaterial' newobjID' numverts' vertices' max' min
Long Statement,Benchmarks.SciMark,ScimarkEntrypoint,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\ScimarkEntrypoint.cs,Main,The length of the statement  "				logger.InfoFormat ("FFT            : {0} - ({1})"' res == 0.0 ? "ERROR' INVALID NUMERICAL RESULT!" : res.ToString ("F2")' FFT_size);             " is 132.
Long Statement,Benchmarks.SciMark,ScimarkEntrypoint,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\ScimarkEntrypoint.cs,Main,The length of the statement  "				logger.InfoFormat ("LU             : {1} - ({0}x{0})"' LU_size' res == 0.0 ? "ERROR' INVALID NUMERICAL RESULT!" : res.ToString ("F2")); " is 135.
Long Statement,Benchmarks.Euler,Euler,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,validate,The length of the statement  "				throw new Exception ("Validation failed\nComputed RMS pressure error = " + error + "\nReference value = " + refval [size]); " is 123.
Long Statement,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The length of the statement  "						newval [k' i' j] = (1.0 - xf) * (1.0 - yf) * oldval [k' iold' jold] + (1.0 - xf) * yf * oldval [k' iold' jold + 1] + xf * (1.0 - yf) * oldval [k' iold + 1' jold] + xf * yf * oldval [k' iold + 1' jold + 1]; " is 205.
Long Statement,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The length of the statement  "					a [i' j] = 0.5 * ((xnode [i' j] - xnode [i - 1' j - 1]) * (ynode [i - 1' j] - ynode [i' j - 1]) - (ynode [i' j] - ynode [i - 1' j - 1]) * (xnode [i - 1' j] - xnode [i' j - 1])); " is 177.
Long Statement,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateStateVar,The length of the statement  "					localtg [i' j] = localug [i' j].d / localug [i' j].a - 0.5 * (temp * temp + temp2 * temp2) / (localug [i' j].a * localug [i' j].a); " is 131.
Long Statement,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDeltaT,The length of the statement  "					deltat [i' j] = safety_factor * 2.8284 * a [i' j] / ((Math.Abs (q) + Math.Abs (r)) / ug [i' j].a + c * Math.Sqrt (xxi * xxi + yxi * yxi + xeta * xeta + yeta * yeta + 2.0 * Math.Abs (xeta * xxi + yeta * yxi))); " is 209.
Long Statement,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDummyCells,The length of the statement  "				Math.Sqrt ((xnode [0' j] - xnode [0' j - 1]) * (xnode [0' j] - xnode [0' j - 1]) + (ynode [0' j - 1] - ynode [0' j]) * (ynode [0' j - 1] - ynode [0' j]))); " is 155.
Long Statement,Benchmarks.SpecRaytracer,Color,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Color.cs,Combine,The length of the statement  "			green = color1.GetGreen () + color2.GetGreen () * color2factor + color3.GetGreen () + color4.GetGreen () + color5.GetGreen (); " is 126.
Long Statement,Benchmarks.SpecRaytracer,Color,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Color.cs,Combine,The length of the statement  "			blue = color1.GetBlue () + color2.GetBlue () * color2factor + color3.GetBlue () + color4.GetBlue () + color5.GetBlue (); " is 120.
Long Statement,Benchmarks.SpecRaytracer,IntersectPt,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\IntersectPt.cs,SetIsectPt,The length of the statement  "			Intersection.Set (isectpt.GetIntersection ().GetX ()' isectpt.GetIntersection ().GetY ()' isectpt.GetIntersection ().GetZ ()); " is 126.
Long Statement,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,Shade,The length of the statement  "					double check = factor * (1.0f - intersect.GetIntersectObj ().GetMaterial ().GetKTran ()) * intersect.GetIntersectObj ().GetMaterial ().GetShininess (); " is 151.
Long Statement,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,Shade,The length of the statement  "						reflectColor.Scale ((1.0f - intersect.GetIntersectObj ().GetMaterial ().GetKTran ()) * intersect.GetIntersectObj ().GetMaterial ().GetShininess ()' " is 147.
Long Statement,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,Shade,The length of the statement  "							refractColor.Scale (intersect.GetIntersectObj ().GetMaterial ().GetKTran ()' intersect.GetIntersectObj ().GetMaterial ().GetSpecColor ()); " is 138.
Long Statement,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,Shade,The length of the statement  "				color.Combine (intersect.GetIntersectObj ().GetMaterial ().GetEmissColor ()' intersect.GetIntersectObj ().GetMaterial ().GetAmbColor ()' " is 136.
Long Statement,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,RenderScene,The length of the statement  "			basepoint.Set (upleft.GetX () + 0.5f * (horIncr.GetX () + vertIncr.GetX ())' upleft.GetY () + 0.5f * (horIncr.GetY () + vertIncr.GetY ())' " is 138.
Long Statement,Benchmarks.SpecRaytracer,TriangleObj,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\TriangleObj.cs,Check,The length of the statement  "			Vector intersectVec = new Vector (pt.GetIntersection ().GetX ()' pt.GetIntersection ().GetY ()' pt.GetIntersection ().GetZ ()); " is 127.
Complex Conditional,Benchmarks.Perimeter,QuadTreeNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Perimeter\QuadTreeNode.cs,countTree,The conditional expression  "nw == null && ne == null && sw == null && se == null"  is complex.
Complex Conditional,Benchmarks.Perimeter,QuadTreeNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Perimeter\QuadTreeNode.cs,checkIntersect,The conditional expression  "checkOutside (center_x + size' center_y + size) == 0 &&  			  checkOutside (center_x + size' center_y - size) == 0 &&  			  checkOutside (center_x - size' center_y - size) == 0 &&  			  checkOutside (center_x - size' center_y + size) == 0"  is complex.
Complex Conditional,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,Intersect,The conditional expression  "(intersect.GetY () <= MAXYF.GetVert (0).GetY ()) && (intersect.GetY () >= MINYF.GetVert (0).GetY ()) &&  					  (intersect.GetZ () <= MAXZF.GetVert (0).GetZ ()) && (intersect.GetZ () >= MINZF.GetVert (0).GetZ ())"  is complex.
Complex Conditional,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,Intersect,The conditional expression  "(intersect.GetY () <= MAXYF.GetVert (0).GetY ()) && (intersect.GetY () >= MINYF.GetVert (0).GetY ()) &&  					  (intersect.GetZ () <= MAXZF.GetVert (0).GetZ ()) && (intersect.GetZ () >= MINZF.GetVert (0).GetZ ())"  is complex.
Complex Conditional,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,Intersect,The conditional expression  "(intersect.GetX () <= MAXXF.GetVert (0).GetX ()) && (intersect.GetX () >= MINXF.GetVert (0).GetX ()) &&  						  (intersect.GetZ () <= MAXZF.GetVert (0).GetZ ()) && (intersect.GetZ () >= MINZF.GetVert (0).GetZ ())"  is complex.
Complex Conditional,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,Intersect,The conditional expression  "(intersect.GetX () <= MAXXF.GetVert (0).GetX ()) && (intersect.GetX () >= MINXF.GetVert (0).GetX ()) &&  						  (intersect.GetZ () <= MAXZF.GetVert (0).GetZ ()) && (intersect.GetZ () >= MINZF.GetVert (0).GetZ ())"  is complex.
Complex Conditional,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,Intersect,The conditional expression  "(intersect.GetX () <= MAXXF.GetVert (0).GetX ()) && (intersect.GetX () >= MINXF.GetVert (0).GetX ()) &&  						  (intersect.GetY () <= MAXYF.GetVert (0).GetY ()) && (intersect.GetY () >= MINYF.GetVert (0).GetY ())"  is complex.
Complex Conditional,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,Intersect,The conditional expression  "(intersect.GetX () <= MAXXF.GetVert (0).GetX ()) && (intersect.GetX () >= MINXF.GetVert (0).GetX ()) &&  						  (intersect.GetY () <= MAXYF.GetVert (0).GetY ()) && (intersect.GetY () >= MINYF.GetVert (0).GetY ())"  is complex.
Virtual Method Call from Constructor,Benchmarks.SciMark,Stopwatch,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\Stopwatch.cs,Stopwatch,The constructor "Stopwatch" calls a virtual method "reset".
Magic Number,Benchmarks.Strcat,strcat,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\strcat.cs,Main,The following statement contains a magic number: System.Text.StringBuilder sb = new System.Text.StringBuilder (32);
Magic Number,Benchmarks.Nbody,NBody,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Main,The following statement contains a magic number: int n = 10000;
Magic Number,Benchmarks.Nbody,NBody,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Main,The following statement contains a magic number: bodies.Advance (0.01);
Magic Number,Benchmarks.Nbody,NBodySystem,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Energy,The following statement contains a magic number: e += 0.5 * bodies [i].mass *  				(bodies [i].vx * bodies [i].vx  				+ bodies [i].vy * bodies [i].vy  				+ bodies [i].vz * bodies [i].vz);
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Jupiter,The following statement contains a magic number: p.x = 4.84143144246472090e+00;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Jupiter,The following statement contains a magic number: p.y = -1.16032004402742839e+00;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Jupiter,The following statement contains a magic number: p.z = -1.03622044471123109e-01;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Jupiter,The following statement contains a magic number: p.vx = 1.66007664274403694e-03 * DAYS_PER_YEAR;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Jupiter,The following statement contains a magic number: p.vy = 7.69901118419740425e-03 * DAYS_PER_YEAR;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Jupiter,The following statement contains a magic number: p.vz = -6.90460016972063023e-05 * DAYS_PER_YEAR;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Jupiter,The following statement contains a magic number: p.mass = 9.54791938424326609e-04 * SOLAR_MASS;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Saturn,The following statement contains a magic number: p.x = 8.34336671824457987e+00;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Saturn,The following statement contains a magic number: p.y = 4.12479856412430479e+00;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Saturn,The following statement contains a magic number: p.z = -4.03523417114321381e-01;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Saturn,The following statement contains a magic number: p.vx = -2.76742510726862411e-03 * DAYS_PER_YEAR;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Saturn,The following statement contains a magic number: p.vy = 4.99852801234917238e-03 * DAYS_PER_YEAR;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Saturn,The following statement contains a magic number: p.vz = 2.30417297573763929e-05 * DAYS_PER_YEAR;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Saturn,The following statement contains a magic number: p.mass = 2.85885980666130812e-04 * SOLAR_MASS;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Uranus,The following statement contains a magic number: p.x = 1.28943695621391310e+01;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Uranus,The following statement contains a magic number: p.y = -1.51111514016986312e+01;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Uranus,The following statement contains a magic number: p.z = -2.23307578892655734e-01;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Uranus,The following statement contains a magic number: p.vx = 2.96460137564761618e-03 * DAYS_PER_YEAR;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Uranus,The following statement contains a magic number: p.vy = 2.37847173959480950e-03 * DAYS_PER_YEAR;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Uranus,The following statement contains a magic number: p.vz = -2.96589568540237556e-05 * DAYS_PER_YEAR;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Uranus,The following statement contains a magic number: p.mass = 4.36624404335156298e-05 * SOLAR_MASS;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Neptune,The following statement contains a magic number: p.x = 1.53796971148509165e+01;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Neptune,The following statement contains a magic number: p.y = -2.59193146099879641e+01;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Neptune,The following statement contains a magic number: p.z = 1.79258772950371181e-01;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Neptune,The following statement contains a magic number: p.vx = 2.68067772490389322e-03 * DAYS_PER_YEAR;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Neptune,The following statement contains a magic number: p.vy = 1.62824170038242295e-03 * DAYS_PER_YEAR;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Neptune,The following statement contains a magic number: p.vz = -9.51592254519715870e-05 * DAYS_PER_YEAR;
Magic Number,Benchmarks.Nbody,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\n-body.cs,Neptune,The following statement contains a magic number: p.mass = 5.15138902046611451e-05 * SOLAR_MASS;
Magic Number,Benchmarks.BH,BH,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BH.cs,Main,The following statement contains a magic number: nbody < 2
Magic Number,Benchmarks.BH,BH,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BH.cs,myRand,The following statement contains a magic number: double t = 16807.0 * seed + 1.0;
Magic Number,Benchmarks.BH,BH,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BH.cs,myRand,The following statement contains a magic number: seed = t - (2147483647.0 * Math.Floor (t / 2147483647.0));
Magic Number,Benchmarks.BH,BH,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BH.cs,myRand,The following statement contains a magic number: seed = t - (2147483647.0 * Math.Floor (t / 2147483647.0));
Magic Number,Benchmarks.BH,BH,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BH.cs,xRand,The following statement contains a magic number: double res = xl + (xh - xl) * r / 2147483647.0;
Magic Number,Benchmarks.BH,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\Body.cs,expandBox,The following statement contains a magic number: rmid.addScalar (tree.rmin' 0.5 * rsize);
Magic Number,Benchmarks.BH,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\Body.cs,expandBox,The following statement contains a magic number: tree.rsize = 2.0 * rsize;
Magic Number,Benchmarks.BH,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\Body.cs,icTest,The following statement contains a magic number: double pos2 = pos.value (2);
Magic Number,Benchmarks.BH,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\Body.cs,icTest,The following statement contains a magic number: xsc = (pos2 - tree.rmin.value (2)) / tree.rsize;
Magic Number,Benchmarks.BH,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\Body.cs,subindex,The following statement contains a magic number: xsc = (pos.value (2) - tree.rmin.value (2)) / tree.rsize;
Magic Number,Benchmarks.BH,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\Body.cs,subindex,The following statement contains a magic number: xsc = (pos.value (2) - tree.rmin.value (2)) / tree.rsize;
Magic Number,Benchmarks.BH,Body,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\Body.cs,subindex,The following statement contains a magic number: xp.setValue (2' Math.Floor (imxv * xsc));
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,makeTreeX,The following statement contains a magic number: t.rsize = -2.0 * -2.0;
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,makeTreeX,The following statement contains a magic number: t.rsize = -2.0 * -2.0;
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,makeTreeX,The following statement contains a magic number: t.rmin.setValue (0' -2.0);
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,makeTreeX,The following statement contains a magic number: t.rmin.setValue (1' -2.0);
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,makeTreeX,The following statement contains a magic number: t.rmin.setValue (2' -2.0);
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,makeTreeX,The following statement contains a magic number: t.rmin.setValue (2' -2.0);
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,createTestData,The following statement contains a magic number: double rsc = 3.0 * 3.1415 / 16.0;
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,createTestData,The following statement contains a magic number: double rsc = 3.0 * 3.1415 / 16.0;
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,createTestData,The following statement contains a magic number: double rsc = 3.0 * 3.1415 / 16.0;
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,createTestData,The following statement contains a magic number: double seed = 123.0;
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,createTestData,The following statement contains a magic number: double t1 = BH.xRand (0.0' 0.999' seed);
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,createTestData,The following statement contains a magic number: t1 = Math.Pow (t1' (-2.0 / 3.0)) - 1.0;
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,createTestData,The following statement contains a magic number: t1 = Math.Pow (t1' (-2.0 / 3.0)) - 1.0;
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,createTestData,The following statement contains a magic number: double coeff = 4.0;
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,createTestData,The following statement contains a magic number: r = BH.xRand (0.0' 0.999' seed);
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,createTestData,The following statement contains a magic number: y = BH.xRand (0.0' 0.1' seed);
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,createTestData,The following statement contains a magic number: double v = Math.Sqrt (2.0) * x / Math.Pow (1.0 + r * r' 0.25);
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,createTestData,The following statement contains a magic number: double v = Math.Sqrt (2.0) * x / Math.Pow (1.0 + r * r' 0.25);
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,intcoord,The following statement contains a magic number: xsc = (vp.value (2) - rmin.value (2)) / rsize;
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,intcoord,The following statement contains a magic number: xsc = (vp.value (2) - rmin.value (2)) / rsize;
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,intcoord,The following statement contains a magic number: xp.setValue (2' Math.Floor (imxv * xsc));
Magic Number,Benchmarks.BH,BTree,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\BTree.cs,vp,The following statement contains a magic number: double dthf = 0.5 * BH.DTIME;
Magic Number,Benchmarks.BH,Cell,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\Cell.cs,initCell,The following statement contains a magic number: Cell.NSUB = 8;
Magic Number,Benchmarks.BH,Cell,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\Cell.cs,walkSubTree,The following statement contains a magic number: hg = r.walkSubTree (dsq / 4.0' hg);
Magic Number,Benchmarks.BH,MathVector,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\MathVector.cs,crossProduct,The following statement contains a magic number: data [0] = u.data [1] * w.data [2] - u.data [2] * w.data [1];
Magic Number,Benchmarks.BH,MathVector,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\MathVector.cs,crossProduct,The following statement contains a magic number: data [0] = u.data [1] * w.data [2] - u.data [2] * w.data [1];
Magic Number,Benchmarks.BH,MathVector,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\MathVector.cs,crossProduct,The following statement contains a magic number: data [1] = u.data [2] * w.data [0] - u.data [0] * w.data [2];
Magic Number,Benchmarks.BH,MathVector,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\MathVector.cs,crossProduct,The following statement contains a magic number: data [1] = u.data [2] * w.data [0] - u.data [0] * w.data [2];
Magic Number,Benchmarks.BH,MathVector,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\MathVector.cs,crossProduct,The following statement contains a magic number: data [2] = u.data [0] * w.data [1] - u.data [1] * w.data [0];
Magic Number,Benchmarks.BH,Node,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\Node.cs,staticInitNode,The following statement contains a magic number: Node.IMAX = 1073741824;
Magic Number,Benchmarks.BH,Node,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BH\Node.cs,staticInitNode,The following statement contains a magic number: Node.EPS = 0.05;
Magic Number,Benchmarks.BinaryTrees,BinaryTrees,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\binarytree.cs,Main,The following statement contains a magic number: int maxDepth = Math.Max (minDepth + 2' n);
Magic Number,Benchmarks.BinaryTrees,BinaryTrees,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\binarytree.cs,Main,The following statement contains a magic number: logger.InfoFormat ("{0}\t trees of depth {1}\t check: {2}"'  					iterations * 2' depth' check);
Magic Number,Benchmarks.BinaryTrees,TreeNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\binarytree.cs,bottomUpTree,The following statement contains a magic number: return new TreeNode (bottomUpTree (2 * item - 1' depth - 1)' bottomUpTree (2 * item' depth - 1)' item);
Magic Number,Benchmarks.BinaryTrees,TreeNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\binarytree.cs,bottomUpTree,The following statement contains a magic number: return new TreeNode (bottomUpTree (2 * item - 1' depth - 1)' bottomUpTree (2 * item' depth - 1)' item);
Magic Number,Benchmarks.BiSort,BiSort,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BiSort\BiSort.cs,Main,The following statement contains a magic number: Value tree = Value.createTree (treesize' 12345768);
Magic Number,Benchmarks.BiSort,BiSort,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BiSort\BiSort.cs,Main,The following statement contains a magic number: int sval = Value.random (245867) % Value.RANGE;
Magic Number,Benchmarks.BiSort,Value,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BiSort\Value.cs,initValue,The following statement contains a magic number: Value.CONST_m1 = 10000;
Magic Number,Benchmarks.BiSort,Value,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BiSort\Value.cs,initValue,The following statement contains a magic number: Value.CONST_b = 31415821;
Magic Number,Benchmarks.BiSort,Value,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BiSort\Value.cs,initValue,The following statement contains a magic number: Value.RANGE = 100;
Magic Number,Benchmarks.BiSort,Value,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BiSort\Value.cs,createTree,The following statement contains a magic number: retval.left = createTree (size / 2' seed);
Magic Number,Benchmarks.BiSort,Value,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\BiSort\Value.cs,createTree,The following statement contains a magic number: retval.right = createTree (size / 2' skiprand (seed' size + 1));
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: int nx = 4;
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: int ny = 4;
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: int nz = 4;
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: double xx = 20.0 / (nx - 1) * i - 10.0;
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: double xx = 20.0 / (nx - 1) * i - 10.0;
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: double yy = 20.0 / (ny - 1) * j - 10.0;
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: double yy = 20.0 / (ny - 1) * j - 10.0;
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: double zz = 20.0 / (nz - 1) * k - 10.0;
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: double zz = 20.0 / (nz - 1) * k - 10.0;
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: p = new Sphere (new Vec (xx' yy' zz)' 3);
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: p.setColor (0' 0' (i + j) / (double)(nx + ny - 2));
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: p.surf.shine = 15.0;
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: p.surf.ks = 1.5 - 1.0;
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: p.surf.kt = 1.5 - 1.0;
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: scene.Lights.Add (new Light (100' 100' -50' 1.0));
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: scene.Lights.Add (new Light (100' 100' -50' 1.0));
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: scene.Lights.Add (new Light (100' 100' -50' 1.0));
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: scene.Lights.Add (new Light (-100' 100' -50' 1.0));
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: scene.Lights.Add (new Light (-100' 100' -50' 1.0));
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: scene.Lights.Add (new Light (-100' 100' -50' 1.0));
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: scene.Lights.Add (new Light (100' -100' -50' 1.0));
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: scene.Lights.Add (new Light (100' -100' -50' 1.0));
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: scene.Lights.Add (new Light (100' -100' -50' 1.0));
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: scene.Lights.Add (new Light (-100' -100' -50' 1.0));
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: scene.Lights.Add (new Light (-100' -100' -50' 1.0));
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: scene.Lights.Add (new Light (-100' -100' -50' 1.0));
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: scene.Lights.Add (new Light (200' 200' 0' 1.0));
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: scene.Lights.Add (new Light (200' 200' 0' 1.0));
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: View v = new View (new Vec (x' 20' -30)' new Vec (x' y' 0)' new Vec (0' 1' 0)' 1.0' 35.0 * 3.14159265 / 180.0' 1.0);
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: View v = new View (new Vec (x' 20' -30)' new Vec (x' y' 0)' new Vec (0' 1' 0)' 1.0' 35.0 * 3.14159265 / 180.0' 1.0);
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: View v = new View (new Vec (x' 20' -30)' new Vec (x' y' 0)' new Vec (0' 1' 0)' 1.0' 35.0 * 3.14159265 / 180.0' 1.0);
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: View v = new View (new Vec (x' 20' -30)' new Vec (x' y' 0)' new Vec (0' 1' 0)' 1.0' 35.0 * 3.14159265 / 180.0' 1.0);
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,createScene,The following statement contains a magic number: View v = new View (new Vec (x' 20' -30)' new Vec (x' y' 0)' new Vec (0' 1' 0)' 1.0' 35.0 * 3.14159265 / 180.0' 1.0);
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,render,The following statement contains a magic number: ylen = (double)(2.0 * y) / (double)interval.width - 1.0;
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,render,The following statement contains a magic number: xlen = (double)(2.0 * x) / (double)interval.width - 1.0;
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,render,The following statement contains a magic number: red = (int)(col.x * 255.0);
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,render,The following statement contains a magic number: red = 255;
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,render,The following statement contains a magic number: red > 255
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,render,The following statement contains a magic number: green = (int)(col.y * 255.0);
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,render,The following statement contains a magic number: green = 255;
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,render,The following statement contains a magic number: green > 255
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,render,The following statement contains a magic number: blue = (int)(col.z * 255.0);
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,render,The following statement contains a magic number: blue = 255;
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,render,The following statement contains a magic number: blue > 255
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,render,The following statement contains a magic number: row [pixCounter] = alpha | (red << 16) | (green << 8) | (blue);
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,render,The following statement contains a magic number: row [pixCounter] = alpha | (red << 16) | (green << 8) | (blue);
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,intersect,The following statement contains a magic number: inter.t = 1e9;
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,SpecularDirection,The following statement contains a magic number: r = Vec.comb (1.0 / Math.Abs (Vec.dot (I' N))' I' 2.0' N);
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,shade,The following statement contains a magic number: surf.shine > 1e-6
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,shade,The following statement contains a magic number: spec > 1e-6
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,shade,The following statement contains a magic number: surf.shine > 1e-6
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,shade,The following statement contains a magic number: surf.ks * weight > 1e-3
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,shade,The following statement contains a magic number: surf.kt * weight > 1e-3
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,trace,The following statement contains a magic number: level > 6
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,trace,The following statement contains a magic number: hit = intersect (r' 1e6);
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,validate,The following statement contains a magic number: long[] refval = new long[2];
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,validate,The following statement contains a magic number: refval [0] = 2676692;
Magic Number,Benchmarks.GrandeTracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Raytracer.cs,validate,The following statement contains a magic number: refval [1] = 29827635;
Magic Number,Benchmarks.GrandeTracer,Sphere,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Sphere.cs,intersect,The following statement contains a magic number: t = (b - disc < 1e-6) ? b + disc : b - disc;
Magic Number,Benchmarks.GrandeTracer,Sphere,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Sphere.cs,intersect,The following statement contains a magic number: t < 1e-6
Magic Number,Benchmarks.GrandeTracer,Sphere,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\GrandeTracer\Sphere.cs,intersect,The following statement contains a magic number: ip.enter = Vec.dot (v' v) > r2 + 1e-6 ? 1 : 0;
Magic Number,Benchmarks.Graph4,Node,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\graph4.cs,Main,The following statement contains a magic number: Random r = new Random (31415);
Magic Number,Benchmarks.Graph4,Node,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\graph4.cs,Main,The following statement contains a magic number: Node g = randomGraph (200000' r);
Magic Number,Benchmarks.Graph4,Node,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\graph4.cs,Main,The following statement contains a magic number: randomGraph (20000' r);
Magic Number,Benchmarks.Graph4,Node,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\graph4.cs,Main,The following statement contains a magic number: i < 30
Magic Number,Benchmarks.Graph8,Node,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\graph8.cs,Main,The following statement contains a magic number: Random r = new Random (31415);
Magic Number,Benchmarks.Graph8,Node,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\graph8.cs,Main,The following statement contains a magic number: Node g = randomGraph (200000' r);
Magic Number,Benchmarks.Graph8,Node,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\graph8.cs,Main,The following statement contains a magic number: randomGraph (20000' r);
Magic Number,Benchmarks.Graph8,Node,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\graph8.cs,Main,The following statement contains a magic number: i < 30
Magic Number,Benchmarks.Hash3,Hash3,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\hash3.cs,Main,The following statement contains a magic number: Random rnd = new Random (42);
Magic Number,Benchmarks.Hash3,Hash3,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\hash3.cs,Main,The following statement contains a magic number: j < 8
Magic Number,Benchmarks.Health,Hospital,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\health\Hospital.cs,putInHospital,The following statement contains a magic number: p.timeLeft = 3;
Magic Number,Benchmarks.Health,Hospital,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\health\Hospital.cs,putInHospital,The following statement contains a magic number: p.time += 3;
Magic Number,Benchmarks.Health,Hospital,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\health\Hospital.cs,checkPatientsAssess,The following statement contains a magic number: stayhere = (rand > 0.1 || v.rootVillage);
Magic Number,Benchmarks.Health,Hospital,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\health\Hospital.cs,checkPatientsAssess,The following statement contains a magic number: p.timeLeft = 10;
Magic Number,Benchmarks.Health,Hospital,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\health\Hospital.cs,checkPatientsAssess,The following statement contains a magic number: p.time = p.timeLeft + 10;
Magic Number,Benchmarks.Health,Hospital,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\health\Hospital.cs,checkPatientsWaiting,The following statement contains a magic number: p.time = p.time + (3 + this.zillesTime - p.timeLeft);
Magic Number,Benchmarks.Health,Hospital,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\health\Hospital.cs,checkPatientsWaiting,The following statement contains a magic number: p.timeLeft = 3;
Magic Number,Benchmarks.Health,Village,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\health\Village.cs,Village,The following statement contains a magic number: forward = new Village[4];
Magic Number,Benchmarks.Health,Village,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\health\Village.cs,initVillageStatic,The following statement contains a magic number: Village.IA = 16807;
Magic Number,Benchmarks.Health,Village,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\health\Village.cs,initVillageStatic,The following statement contains a magic number: Village.IM = 2147483647.0;
Magic Number,Benchmarks.Health,Village,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\health\Village.cs,initVillageStatic,The following statement contains a magic number: Village.IQ = 127773;
Magic Number,Benchmarks.Health,Village,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\health\Village.cs,initVillageStatic,The following statement contains a magic number: Village.IR = 2836;
Magic Number,Benchmarks.Health,Village,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\health\Village.cs,initVillageStatic,The following statement contains a magic number: Village.MASK = 123459876;
Magic Number,Benchmarks.Health,Village,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\health\Village.cs,staysHere,The following statement contains a magic number: return (rand > 0.1 || rootVillage);
Magic Number,Benchmarks.Health,Village,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\health\Village.cs,generatePatient,The following statement contains a magic number: rand > 0.666
Magic Number,Benchmarks.Lists,IntDeQueue,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\lists.cs,Reverse,The following statement contains a magic number: Count < 2
Magic Number,Benchmarks.Mandelbrot,Mandelbrot,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\mandelbrot.cs,Main,The following statement contains a magic number: int width = 100;
Magic Number,Benchmarks.Mandelbrot,Mandelbrot,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\mandelbrot.cs,Main,The following statement contains a magic number: int maxiter = 50;
Magic Number,Benchmarks.Mandelbrot,Mandelbrot,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\mandelbrot.cs,Main,The following statement contains a magic number: double limit = 4.0;
Magic Number,Benchmarks.Mandelbrot,Mandelbrot,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\mandelbrot.cs,Main,The following statement contains a magic number: double Ci = 2.0 * y / height - 1.0;
Magic Number,Benchmarks.Mandelbrot,Mandelbrot,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\mandelbrot.cs,Main,The following statement contains a magic number: double Cr = 2.0 * x / width - 1.5;
Magic Number,Benchmarks.Mandelbrot,Mandelbrot,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\mandelbrot.cs,Main,The following statement contains a magic number: double Cr = 2.0 * x / width - 1.5;
Magic Number,Benchmarks.Mandelbrot,Mandelbrot,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\mandelbrot.cs,Main,The following statement contains a magic number: Zi = 2.0 * Zr * Zi + Ci;
Magic Number,Benchmarks.Mandelbrot,Mandelbrot,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\mandelbrot.cs,Main,The following statement contains a magic number: ++xcounter == 8
Magic Number,Benchmarks.Mandelbrot,Mandelbrot,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\mandelbrot.cs,Main,The following statement contains a magic number: s.WriteByte ((byte)((bits << (8 - xcounter)) ^ 0xff));
Magic Number,Benchmarks.Objinst,Objinst,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\objinst.cs,Main,The following statement contains a magic number: i < 5
Magic Number,Benchmarks.Objinst,Objinst,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\objinst.cs,Main,The following statement contains a magic number: NthToggle ntoggle1 = new NthToggle (true' 3);
Magic Number,Benchmarks.Objinst,Objinst,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\objinst.cs,Main,The following statement contains a magic number: i < 8
Magic Number,Benchmarks.Objinst,Objinst,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\objinst.cs,Main,The following statement contains a magic number: NthToggle toggle = new NthToggle (true' 3);
Magic Number,Benchmarks.OneList,OneList,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\onelist.cs,Main,The following statement contains a magic number: MakeList (10000000);
Magic Number,Benchmarks.Perimeter,GreyNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Perimeter\GreyNode.cs,perimeter,The following statement contains a magic number: size = size / 2;
Magic Number,Benchmarks.Perimeter,GreyNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Perimeter\GreyNode.cs,sumAdjacent,The following statement contains a magic number: size = size / 2;
Magic Number,Benchmarks.Perimeter,Perimeter,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Perimeter\Perimeter.cs,Main,The following statement contains a magic number: QuadTreeNode.gcmp = size * 1024;
Magic Number,Benchmarks.Perimeter,Perimeter,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Perimeter\Perimeter.cs,Main,The following statement contains a magic number: QuadTreeNode.lcmp = msize * 1024;
Magic Number,Benchmarks.Perimeter,QuadTreeNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Perimeter\QuadTreeNode.cs,createTree,The following statement contains a magic number: size = size / 2;
Magic Number,Benchmarks.Perimeter,QuadTreeNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Perimeter\QuadTreeNode.cs,createTree,The following statement contains a magic number: intersect == 0 && size < 512
Magic Number,Benchmarks.Perimeter,QuadTreeNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Perimeter\QuadTreeNode.cs,checkIntersect,The following statement contains a magic number: return 2;
Magic Number,Benchmarks.Perimeter,QuadTreeNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Perimeter\QuadTreeNode.cs,checkIntersect,The following statement contains a magic number: (sum == 4) || (sum == -4)
Magic Number,Benchmarks.Perimeter,QuadTreeNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Perimeter\QuadTreeNode.cs,checkIntersect,The following statement contains a magic number: (sum == 4) || (sum == -4)
Magic Number,Benchmarks.Raytracer2,RayTracer2,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\raytracer2.cs,Main,The following statement contains a magic number: Vector v = new Vector (  								                      x + dx / (double)ss - n / 2.0                       ' y + dy / (double)ss - n / 2.0                       ' n);
Magic Number,Benchmarks.Raytracer2,RayTracer2,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\raytracer2.cs,Main,The following statement contains a magic number: Vector v = new Vector (  								                      x + dx / (double)ss - n / 2.0                       ' y + dy / (double)ss - n / 2.0                       ' n);
Magic Number,Benchmarks.Raytracer2,RayTracer2,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\raytracer2.cs,Main,The following statement contains a magic number: Ray ray = new Ray (new Vector (0.0' 0.0' -4.0)' v.Normalized ());
Magic Number,Benchmarks.Raytracer2,RayTracer2,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\raytracer2.cs,Main,The following statement contains a magic number: greyscale += scene.TraceRay (ray'   								new Vector (-1.0' -3.0' 2.0).Normalized ());
Magic Number,Benchmarks.Raytracer2,RayTracer2,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\raytracer2.cs,Main,The following statement contains a magic number: greyscale += scene.TraceRay (ray'   								new Vector (-1.0' -3.0' 2.0).Normalized ());
Magic Number,Benchmarks.Raytracer2,RayTracer2,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\raytracer2.cs,Main,The following statement contains a magic number: temp [0] = (byte)(0.5 + 255.0 * greyscale / (ss * ss));
Magic Number,Benchmarks.Raytracer2,RayTracer2,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\raytracer2.cs,Main,The following statement contains a magic number: temp [0] = (byte)(0.5 + 255.0 * greyscale / (ss * ss));
Magic Number,Benchmarks.Raytracer3,RayTracer3,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\raytracer3.cs,Main,The following statement contains a magic number: Vector v = new Vector (  								                      x + dx / (double)ss - n / 2.0                       ' y + dy / (double)ss - n / 2.0                       ' n);
Magic Number,Benchmarks.Raytracer3,RayTracer3,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\raytracer3.cs,Main,The following statement contains a magic number: Vector v = new Vector (  								                      x + dx / (double)ss - n / 2.0                       ' y + dy / (double)ss - n / 2.0                       ' n);
Magic Number,Benchmarks.Raytracer3,RayTracer3,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\raytracer3.cs,Main,The following statement contains a magic number: Ray ray = new Ray (new Vector (0.0' 0.0' -4.0)' v.Normalized ());
Magic Number,Benchmarks.Raytracer3,RayTracer3,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\raytracer3.cs,Main,The following statement contains a magic number: greyscale += scene.TraceRay (ray'   								new Vector (-1.0' -3.0' 2.0).Normalized ());
Magic Number,Benchmarks.Raytracer3,RayTracer3,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\raytracer3.cs,Main,The following statement contains a magic number: greyscale += scene.TraceRay (ray'   								new Vector (-1.0' -3.0' 2.0).Normalized ());
Magic Number,Benchmarks.Raytracer3,RayTracer3,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\raytracer3.cs,Main,The following statement contains a magic number: temp [0] = (byte)(0.5 + 255.0 * greyscale / (ss * ss));
Magic Number,Benchmarks.Raytracer3,RayTracer3,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\raytracer3.cs,Main,The following statement contains a magic number: temp [0] = (byte)(0.5 + 255.0 * greyscale / (ss * ss));
Magic Number,Benchmarks.SciMark,FFT,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\FFT.cs,num_flops,The following statement contains a magic number: return (5.0 * Nd - 2) * logN + 2 * (Nd + 1);
Magic Number,Benchmarks.SciMark,FFT,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\FFT.cs,num_flops,The following statement contains a magic number: return (5.0 * Nd - 2) * logN + 2 * (Nd + 1);
Magic Number,Benchmarks.SciMark,FFT,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\FFT.cs,num_flops,The following statement contains a magic number: return (5.0 * Nd - 2) * logN + 2 * (Nd + 1);
Magic Number,Benchmarks.SciMark,FFT,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\FFT.cs,inverse,The following statement contains a magic number: int n = nd / 2;
Magic Number,Benchmarks.SciMark,FFT,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\FFT.cs,makeRandom,The following statement contains a magic number: int nd = 2 * n;
Magic Number,Benchmarks.SciMark,FFT,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\FFT.cs,transform_internal,The following statement contains a magic number: int n = data.Length / 2;
Magic Number,Benchmarks.SciMark,FFT,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\FFT.cs,transform_internal,The following statement contains a magic number: double theta = 2.0 * direction * Math.PI / (2.0 * (double)dual);
Magic Number,Benchmarks.SciMark,FFT,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\FFT.cs,transform_internal,The following statement contains a magic number: double theta = 2.0 * direction * Math.PI / (2.0 * (double)dual);
Magic Number,Benchmarks.SciMark,FFT,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\FFT.cs,transform_internal,The following statement contains a magic number: double t = Math.Sin (theta / 2.0);
Magic Number,Benchmarks.SciMark,FFT,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\FFT.cs,transform_internal,The following statement contains a magic number: double s2 = 2.0 * t * t;
Magic Number,Benchmarks.SciMark,FFT,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\FFT.cs,transform_internal,The following statement contains a magic number: int i = 2 * b;
Magic Number,Benchmarks.SciMark,FFT,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\FFT.cs,transform_internal,The following statement contains a magic number: int j = 2 * (b + dual);
Magic Number,Benchmarks.SciMark,FFT,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\FFT.cs,transform_internal,The following statement contains a magic number: int i = 2 * (b + a);
Magic Number,Benchmarks.SciMark,FFT,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\FFT.cs,transform_internal,The following statement contains a magic number: int j = 2 * (b + a + dual);
Magic Number,Benchmarks.SciMark,FFT,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\FFT.cs,bitreverse,The following statement contains a magic number: int n = data.Length / 2;
Magic Number,Benchmarks.SciMark,LU,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\LU.cs,num_flops,The following statement contains a magic number: return (2.0 * Nd * Nd * Nd / 3.0);
Magic Number,Benchmarks.SciMark,LU,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\LU.cs,num_flops,The following statement contains a magic number: return (2.0 * Nd * Nd * Nd / 3.0);
Magic Number,Benchmarks.SciMark,MonteCarlo,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\MonteCarlo.cs,num_flops,The following statement contains a magic number: return ((double) Num_samples) * 4.0;
Magic Number,Benchmarks.SciMark,MonteCarlo,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\MonteCarlo.cs,integrate,The following statement contains a magic number: return ((double) under_curve / Num_samples) * 4.0;
Magic Number,Benchmarks.SciMark,Random,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\Random.cs,nextDouble,The following statement contains a magic number: i = 16;
Magic Number,Benchmarks.SciMark,Random,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\Random.cs,nextDouble,The following statement contains a magic number: j = 16;
Magic Number,Benchmarks.SciMark,Random,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\Random.cs,nextDoubles,The following statement contains a magic number: int remainder = N & 3;
Magic Number,Benchmarks.SciMark,Random,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\Random.cs,nextDoubles,The following statement contains a magic number: i = 16;
Magic Number,Benchmarks.SciMark,Random,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\Random.cs,nextDoubles,The following statement contains a magic number: j = 16;
Magic Number,Benchmarks.SciMark,Random,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\Random.cs,initialize,The following statement contains a magic number: m1 = (one << mdig - 2) + ((one << mdig - 2) - one);
Magic Number,Benchmarks.SciMark,Random,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\Random.cs,initialize,The following statement contains a magic number: m1 = (one << mdig - 2) + ((one << mdig - 2) - one);
Magic Number,Benchmarks.SciMark,Random,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\Random.cs,initialize,The following statement contains a magic number: m2 = one << mdig / 2;
Magic Number,Benchmarks.SciMark,Random,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\Random.cs,initialize,The following statement contains a magic number: m = new int[17];
Magic Number,Benchmarks.SciMark,Random,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\Random.cs,initialize,The following statement contains a magic number: jseed % 2 == 0
Magic Number,Benchmarks.SciMark,Random,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\Random.cs,initialize,The following statement contains a magic number: k0 = 9069 % m2;
Magic Number,Benchmarks.SciMark,Random,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\Random.cs,initialize,The following statement contains a magic number: k1 = 9069 / m2;
Magic Number,Benchmarks.SciMark,Random,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\Random.cs,initialize,The following statement contains a magic number: j1 = (jseed / m2 + j0 * k1 + j1 * k0) % (m2 / 2);
Magic Number,Benchmarks.SciMark,Random,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\Random.cs,initialize,The following statement contains a magic number: iloop < 17
Magic Number,Benchmarks.SciMark,Random,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\Random.cs,initialize,The following statement contains a magic number: i = 4;
Magic Number,Benchmarks.SciMark,Random,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\Random.cs,initialize,The following statement contains a magic number: j = 16;
Magic Number,Benchmarks.SciMark,SOR,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\SOR.cs,num_flops,The following statement contains a magic number: return (Md - 1) * (Nd - 1) * num_iterD * 6.0;
Magic Number,Benchmarks.SciMark,SOR,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\SOR.cs,execute,The following statement contains a magic number: double omega_over_four = omega * 0.25;
Magic Number,Benchmarks.SciMark,SparseCompRow,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\SparseCompRow.cs,num_flops,The following statement contains a magic number: return ((double) actual_nz) * 2.0 * ((double) num_iterations);
Magic Number,Benchmarks.SciMark,Stopwatch,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\Stopwatch.cs,seconds,The following statement contains a magic number: return (System.DateTime.Now.Ticks * 1.0E-7);
Magic Number,Benchmarks.SciMark,kernel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\kernel.cs,measureFFT,The following statement contains a magic number: double[] x = RandomVector (2 * N' R);
Magic Number,Benchmarks.SciMark,kernel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\kernel.cs,measureFFT,The following statement contains a magic number: long cycles = 20000;
Magic Number,Benchmarks.SciMark,kernel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\kernel.cs,measureFFT,The following statement contains a magic number: const double EPS = 1.0e-10;
Magic Number,Benchmarks.SciMark,kernel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\kernel.cs,measureFFT,The following statement contains a magic number: return FFT.num_flops (N) * (double) cycles / Q.read () * 1.0e-6;
Magic Number,Benchmarks.SciMark,kernel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\kernel.cs,measureSOR,The following statement contains a magic number: int num_iterations = 40000;
Magic Number,Benchmarks.SciMark,kernel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\kernel.cs,measureSOR,The following statement contains a magic number: SOR.execute (1.25' G' num_iterations);
Magic Number,Benchmarks.SciMark,kernel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\kernel.cs,measureSOR,The following statement contains a magic number: return SOR.num_flops (N' N' num_iterations) / Q.read () * 1.0e-6;
Magic Number,Benchmarks.SciMark,kernel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\kernel.cs,measureMonteCarlo,The following statement contains a magic number: int num_samples = 40000000;
Magic Number,Benchmarks.SciMark,kernel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\kernel.cs,measureMonteCarlo,The following statement contains a magic number: return MonteCarlo.num_flops (num_samples) / Q.read () * 1.0e-6;
Magic Number,Benchmarks.SciMark,kernel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\kernel.cs,measureSparseMatmult,The following statement contains a magic number: int cycles = 150000;
Magic Number,Benchmarks.SciMark,kernel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\kernel.cs,measureSparseMatmult,The following statement contains a magic number: return SparseCompRow.num_flops (N' nz' cycles) / Q.read () * 1.0e-6;
Magic Number,Benchmarks.SciMark,kernel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\kernel.cs,measureLU,The following statement contains a magic number: int cycles = 4095;
Magic Number,Benchmarks.SciMark,kernel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\kernel.cs,measureLU,The following statement contains a magic number: const double EPS = 1.0e-12;
Magic Number,Benchmarks.SciMark,kernel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\kernel.cs,measureLU,The following statement contains a magic number: return LU.num_flops (N) * cycles / Q.read () * 1.0e-6;
Magic Number,Benchmarks.SciMark,kernel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\kernel.cs,CopyMatrix,The following statement contains a magic number: int remainder = N & 3;
Magic Number,Benchmarks.SciMark,kernel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\kernel.cs,CopyMatrix,The following statement contains a magic number: Bi [j + 2] = Ai [j + 2];
Magic Number,Benchmarks.SciMark,kernel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\kernel.cs,CopyMatrix,The following statement contains a magic number: Bi [j + 2] = Ai [j + 2];
Magic Number,Benchmarks.SciMark,kernel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\kernel.cs,CopyMatrix,The following statement contains a magic number: Bi [j + 3] = Ai [j + 3];
Magic Number,Benchmarks.SciMark,kernel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SciMark\kernel.cs,CopyMatrix,The following statement contains a magic number: Bi [j + 3] = Ai [j + 3];
Magic Number,Benchmarks.Euler,Euler,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,validate,The following statement contains a magic number: double[] refval = { 0.0033831416599344965' 0.006812543658280322 };
Magic Number,Benchmarks.Euler,Euler,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,validate,The following statement contains a magic number: double[] refval = { 0.0033831416599344965' 0.006812543658280322 };
Magic Number,Benchmarks.Euler,Euler,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,validate,The following statement contains a magic number: dev > 1.0e-12
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: char[] spt = new char[4];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: spt [2] = '\t';
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: spt [3] = '\r';
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: int pfloc = 2;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: deltat = new double[imax + 1' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: opg = new double[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: opg = new double[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: pg = new double[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: pg = new double[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: pg1 = new double[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: pg1 = new double[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: sxi = new double[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: sxi = new double[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: seta = new double[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: seta = new double[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: tg = new double[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: tg = new double[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: tg1 = new double[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: tg1 = new double[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: ug = new Statevector[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: ug = new Statevector[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: d = new Statevector[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: d = new Statevector[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: f = new Statevector[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: f = new Statevector[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: g = new Statevector[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: g = new Statevector[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: r = new Statevector[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: r = new Statevector[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: ug1 = new Statevector[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: ug1 = new Statevector[imax + 2' jmax + 2];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: j < jmax + 2
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: i < imax + 2
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: ug [i + 1' j + 1].a = newval [2' i' j];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: ug [i + 1' j + 1].b = newval [3' i' j];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: ug [i + 1' j + 1].c = newval [4' i' j];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: ug [i + 1' j + 1].d = newval [5' i' j];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: tg [i + 1' j + 1] = ug [i + 1' j + 1].d / ug [i + 1' j + 1].a - (0.5 * (scrap * scrap + scrap2 * scrap2));
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,initialise,The following statement contains a magic number: a [i' j] = 0.5 * ((xnode [i' j] - xnode [i - 1' j - 1]) * (ynode [i - 1' j] - ynode [i' j - 1]) - (ynode [i' j] - ynode [i - 1' j - 1]) * (xnode [i - 1' j] - xnode [i' j - 1]));
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,doIteration,The following statement contains a magic number: ug1 [i' j].a = ug [i' j].a - 0.25 * deltat [i' j] / a [i' j] * (r [i' j].a - d [i' j].a);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,doIteration,The following statement contains a magic number: ug1 [i' j].b = ug [i' j].b - 0.25 * deltat [i' j] / a [i' j] * (r [i' j].b - d [i' j].b);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,doIteration,The following statement contains a magic number: ug1 [i' j].c = ug [i' j].c - 0.25 * deltat [i' j] / a [i' j] * (r [i' j].c - d [i' j].c);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,doIteration,The following statement contains a magic number: ug1 [i' j].d = ug [i' j].d - 0.25 * deltat [i' j] / a [i' j] * (r [i' j].d - d [i' j].d);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,doIteration,The following statement contains a magic number: ug1 [i' j].a = ug [i' j].a - 0.33333 * deltat [i' j] / a [i' j] * (r [i' j].a - d [i' j].a);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,doIteration,The following statement contains a magic number: ug1 [i' j].b = ug [i' j].b - 0.33333 * deltat [i' j] / a [i' j] * (r [i' j].b - d [i' j].b);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,doIteration,The following statement contains a magic number: ug1 [i' j].c = ug [i' j].c - 0.33333 * deltat [i' j] / a [i' j] * (r [i' j].c - d [i' j].c);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,doIteration,The following statement contains a magic number: ug1 [i' j].d = ug [i' j].d - 0.33333 * deltat [i' j] / a [i' j] * (r [i' j].d - d [i' j].d);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,doIteration,The following statement contains a magic number: ug1 [i' j].a = ug [i' j].a - 0.5 * deltat [i' j] / a [i' j] * (r [i' j].a - d [i' j].a);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,doIteration,The following statement contains a magic number: ug1 [i' j].b = ug [i' j].b - 0.5 * deltat [i' j] / a [i' j] * (r [i' j].b - d [i' j].b);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,doIteration,The following statement contains a magic number: ug1 [i' j].c = ug [i' j].c - 0.5 * deltat [i' j] / a [i' j] * (r [i' j].c - d [i' j].c);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,doIteration,The following statement contains a magic number: ug1 [i' j].d = ug [i' j].d - 0.5 * deltat [i' j] / a [i' j] * (r [i' j].d - d [i' j].d);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateStateVar,The following statement contains a magic number: localtg [i' j] = localug [i' j].d / localug [i' j].a - 0.5 * (temp * temp + temp2 * temp2) / (localug [i' j].a * localug [i' j].a);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateR,The following statement contains a magic number: temp = 0.5 * deltay;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateR,The following statement contains a magic number: temp = -0.5 * deltax;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateR,The following statement contains a magic number: temp = 0.5 * deltay;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateR,The following statement contains a magic number: temp = -0.5 * deltax;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateR,The following statement contains a magic number: temp = 0.5 * deltay;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateR,The following statement contains a magic number: temp = -0.5 * deltax;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateR,The following statement contains a magic number: temp = 0.5 * deltay;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateR,The following statement contains a magic number: temp = -0.5 * deltax;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateG,The following statement contains a magic number: g [i' j].d = localug [i' j].c * (Cp * localtg [i' j] + (0.5 * (temp + temp2) / (temp3)));
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateF,The following statement contains a magic number: f [i' j].d = localug [i' j].b * (Cp * localtg [i' j] + (0.5 * (temp1 + temp2) / (temp3)));
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: sxi [i' j] = Math.Abs (localpg [i + 1' j] - 2.0 * localpg [i' j] + localpg [i - 1' j]) / localpg [i' j];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: seta [i' j] = Math.Abs (localpg [i' j + 1] - 2.0 * localpg [i' j] + localpg [i' j - 1]) / localpg [i' j];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: sbar = (sxi [i + 1' j] + sxi [i' j]) * 0.5;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: temp = localug [i + 2' j].svect (localug [i - 1' j]);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: temp2.a = 3.0 * (localug [i' j].a - localug [i + 1' j].a);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: temp2.b = 3.0 * (localug [i' j].b - localug [i + 1' j].b);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: temp2.c = 3.0 * (localug [i' j].c - localug [i + 1' j].c);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: temp2.d = 3.0 * (localug [i' j].d - localug [i + 1' j].d);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: sbar = (sxi [i' j] + sxi [i - 1' j]) * 0.5;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: temp = localug [i + 1' j].svect (localug [i - 2' j]);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: temp2.a = 3.0 * (localug [i - 1' j].a - localug [i' j].a);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: temp2.b = 3.0 * (localug [i - 1' j].b - localug [i' j].b);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: temp2.c = 3.0 * (localug [i - 1' j].c - localug [i' j].c);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: temp2.d = 3.0 * (localug [i - 1' j].d - localug [i' j].d);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: sbar = (seta [i' j] + seta [i' j + 1]) * 0.5;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: temp = localug [i' j + 2].svect (localug [i' j - 1]);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: temp2.a = 3.0 * (localug [i' j].a - localug [i' j + 1].a);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: temp2.b = 3.0 * (localug [i' j].b - localug [i' j + 1].b);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: temp2.c = 3.0 * (localug [i' j].c - localug [i' j + 1].c);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: temp2.d = 3.0 * (localug [i' j].d - localug [i' j + 1].d);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: sbar = (seta [i' j] + seta [i' j - 1]) * 0.5;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: temp = localug [i' j + 1].svect (localug [i' j - 2]);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: temp2.a = 3.0 * (localug [i' j - 1].a - localug [i' j].a);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: temp2.b = 3.0 * (localug [i' j - 1].b - localug [i' j].b);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: temp2.c = 3.0 * (localug [i' j - 1].c - localug [i' j].c);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDamping,The following statement contains a magic number: temp2.d = 3.0 * (localug [i' j - 1].d - localug [i' j].d);
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDeltaT,The following statement contains a magic number: double safety_factor = 0.7;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDeltaT,The following statement contains a magic number: xxi = (xnode [i' j] - xnode [i - 1' j] + xnode [i' j - 1] - xnode [i - 1' j - 1]) * 0.5;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDeltaT,The following statement contains a magic number: yxi = (ynode [i' j] - ynode [i - 1' j] + ynode [i' j - 1] - ynode [i - 1' j - 1]) * 0.5;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDeltaT,The following statement contains a magic number: xeta = (xnode [i' j] - xnode [i' j - 1] + xnode [i - 1' j] - xnode [i - 1' j - 1]) * 0.5;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDeltaT,The following statement contains a magic number: yeta = (ynode [i' j] - ynode [i' j - 1] + ynode [i - 1' j] - ynode [i - 1' j - 1]) * 0.5;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDeltaT,The following statement contains a magic number: deltat [i' j] = safety_factor * 2.8284 * a [i' j] / ((Math.Abs (q) + Math.Abs (r)) / ug [i' j].a + c * Math.Sqrt (xxi * xxi + yxi * yxi + xeta * xeta + yeta * yeta + 2.0 * Math.Abs (xeta * xxi + yeta * yxi)));
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDeltaT,The following statement contains a magic number: deltat [i' j] = safety_factor * 2.8284 * a [i' j] / ((Math.Abs (q) + Math.Abs (r)) / ug [i' j].a + c * Math.Sqrt (xxi * xxi + yxi * yxi + xeta * xeta + yeta * yeta + 2.0 * Math.Abs (xeta * xxi + yeta * yxi)));
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDeltaT,The following statement contains a magic number: mint = 100000.0;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDummyCells,The following statement contains a magic number: jplusff = uff + 2.0 / (gamma - 1.0) * cff;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDummyCells,The following statement contains a magic number: jminusff = uff - 2.0 / (gamma - 1.0) * cff;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDummyCells,The following statement contains a magic number: localug [i' 0].d = rho * (Cv * localtg [i' 0] + 0.5 * (u * u + v * v));
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDummyCells,The following statement contains a magic number: localug [i' jmax].d = rho * (Cv * temp + 0.5 * (u * u + v * v));
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDummyCells,The following statement contains a magic number: localug [0' j].d = rhoff * (Cv * tff + 0.5 * (uff * uff + vff * vff));
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDummyCells,The following statement contains a magic number: localug [imax' j].a = 2.0 * localug [imax - 1' j].a - localug [imax - 2' j].a;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDummyCells,The following statement contains a magic number: localug [imax' j].a = 2.0 * localug [imax - 1' j].a - localug [imax - 2' j].a;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDummyCells,The following statement contains a magic number: localug [imax' j].b = 2.0 * localug [imax - 1' j].b - localug [imax - 2' j].b;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDummyCells,The following statement contains a magic number: localug [imax' j].b = 2.0 * localug [imax - 1' j].b - localug [imax - 2' j].b;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDummyCells,The following statement contains a magic number: localug [imax' j].c = 2.0 * localug [imax - 1' j].c - localug [imax - 2' j].c;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDummyCells,The following statement contains a magic number: localug [imax' j].c = 2.0 * localug [imax - 1' j].c - localug [imax - 2' j].c;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDummyCells,The following statement contains a magic number: localug [imax' j].d = 2.0 * localug [imax - 1' j].d - localug [imax - 2' j].d;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDummyCells,The following statement contains a magic number: localug [imax' j].d = 2.0 * localug [imax - 1' j].d - localug [imax - 2' j].d;
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDummyCells,The following statement contains a magic number: localpg [imax' j] = 2.0 * localpg [imax - 1' j] - localpg [imax - 2' j];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDummyCells,The following statement contains a magic number: localpg [imax' j] = 2.0 * localpg [imax - 1' j] - localpg [imax - 2' j];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDummyCells,The following statement contains a magic number: localtg [imax' j] = 2.0 * localtg [imax - 1' j] - localtg [imax - 2' j];
Magic Number,Benchmarks.Euler,Tunnel,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\Euler\Euler.cs,calculateDummyCells,The following statement contains a magic number: localtg [imax' j] = 2.0 * localtg [imax - 1' j] - localtg [imax - 2' j];
Magic Number,Benchmarks.SpecRaytracer,Canvas,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Canvas.cs,SetGreen,The following statement contains a magic number: Pixels [index] = Pixels [index] & 0x00FF00FF | (((int)component) << 8);
Magic Number,Benchmarks.SpecRaytracer,Canvas,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Canvas.cs,SetBlue,The following statement contains a magic number: Pixels [index] = Pixels [index] & 0x0000FFFF | (((int)component) << 16);
Magic Number,Benchmarks.SpecRaytracer,Canvas,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Canvas.cs,Write,The following statement contains a magic number: SetRed (x' y' color.GetRed () * 255);
Magic Number,Benchmarks.SpecRaytracer,Canvas,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Canvas.cs,Write,The following statement contains a magic number: SetGreen (x' y' color.GetGreen () * 255);
Magic Number,Benchmarks.SpecRaytracer,Canvas,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Canvas.cs,Write,The following statement contains a magic number: SetBlue (x' y' color.GetBlue () * 255);
Magic Number,Benchmarks.SpecRaytracer,Face,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Face.cs,Face,The following statement contains a magic number: Verts = new Point[4];
Magic Number,Benchmarks.SpecRaytracer,MainCL,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Main.cs,Main,The following statement contains a magic number: args = new String[3];
Magic Number,Benchmarks.SpecRaytracer,Material,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Material.cs,Material,The following statement contains a magic number: refractiveIndex = 1.5f;
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,Initialize,The following statement contains a magic number: Adjacent = new OctNode[6];
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,Initialize,The following statement contains a magic number: OctFaces = new Face[6];
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,Initialize,The following statement contains a magic number: Child = new OctNode[8];
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,Initialize,The following statement contains a magic number: i < 6
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,Initialize,The following statement contains a magic number: i < 8
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateFaces,The following statement contains a magic number: i < 6
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateFaces,The following statement contains a magic number: MAXXF.SetVert (temp' 2);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateFaces,The following statement contains a magic number: MAXXF.SetVert (temp' 3);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateFaces,The following statement contains a magic number: MAXYF.SetVert (temp' 2);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateFaces,The following statement contains a magic number: MAXYF.SetVert (temp' 3);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateFaces,The following statement contains a magic number: MAXZF.SetVert (temp' 2);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateFaces,The following statement contains a magic number: MAXZF.SetVert (temp' 3);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateFaces,The following statement contains a magic number: MINXF.SetVert (temp' 2);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateFaces,The following statement contains a magic number: MINXF.SetVert (temp' 3);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateFaces,The following statement contains a magic number: MINYF.SetVert (temp' 2);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateFaces,The following statement contains a magic number: MINYF.SetVert (temp' 3);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateFaces,The following statement contains a magic number: MINZF.SetVert (temp' 2);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateFaces,The following statement contains a magic number: MINZF.SetVert (temp' 3);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: Point midpt = new Point ((maxX + minX) / 2.0f' (maxY + minY) / 2.0f' (maxZ + minZ) / 2.0f);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: Point midpt = new Point ((maxX + minX) / 2.0f' (maxY + minY) / 2.0f' (maxZ + minZ) / 2.0f);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: Point midpt = new Point ((maxX + minX) / 2.0f' (maxY + minY) / 2.0f' (maxZ + minZ) / 2.0f);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: Child [2] = new OctNode (max' min);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: Child [3] = new OctNode (max' min);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: Child [4] = new OctNode (max' min);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: Child [5] = new OctNode (max' min);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: Child [6] = new OctNode (max' min);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: Child [7] = new OctNode (max' min);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: OctNode adj2 = adj [2];
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: OctNode adj3 = adj [3];
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: OctNode adj4 = adj [4];
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: OctNode adj5 = adj [5];
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: OctNode chld2 = chld [2];
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: OctNode chld3 = chld [3];
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: OctNode chld4 = chld [4];
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: OctNode chld5 = chld [5];
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: OctNode chld6 = chld [6];
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: OctNode chld7 = chld [7];
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: Child [2].FormAdjacent (adj0' chld3' chld1' chld6' adj4' adj5);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: Child [3].FormAdjacent (adj0' adj1' chld0' chld7' chld2' adj5);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: Child [4].FormAdjacent (chld0' adj1' adj2' adj3' chld5' chld7);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: Child [5].FormAdjacent (chld1' chld4' adj2' adj3' adj4' chld6);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: Child [6].FormAdjacent (chld2' chld7' chld5' adj3' adj4' adj5);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: Child [7].FormAdjacent (chld3' adj1' chld4' adj3' chld6' adj5);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: min = cc.GetFace (5).GetVert (3);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: min = cc.GetFace (5).GetVert (3);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: i < 8
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,CreateChildren,The following statement contains a magic number: i < 8
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,FormAdjacent,The following statement contains a magic number: Adjacent [2] = maxZ;
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,FormAdjacent,The following statement contains a magic number: Adjacent [3] = minX;
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,FormAdjacent,The following statement contains a magic number: Adjacent [4] = minY;
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,FormAdjacent,The following statement contains a magic number: Adjacent [5] = minZ;
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,Copy,The following statement contains a magic number: i < 6
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,Copy,The following statement contains a magic number: i < 8
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,FindTreeNode,The following statement contains a magic number: i < 8
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,Intersect,The following statement contains a magic number: int[] facehits = new int[3];
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,Intersect,The following statement contains a magic number: facehits [2] = -1;
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,Intersect,The following statement contains a magic number: adjacent = adjacent.GetAdjacent (facehits [2]);
Magic Number,Benchmarks.SpecRaytracer,OctNode,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\OctNode.cs,Intersect,The following statement contains a magic number: facehits [2] >= MAXX
Magic Number,Benchmarks.SpecRaytracer,PolygonObj,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\PolygonObj.cs,InsidePolygon,The following statement contains a magic number: yindex = 2;
Magic Number,Benchmarks.SpecRaytracer,PolyTypeObj,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\PolyTypeObj.cs,CalculateNormal,The following statement contains a magic number: bc.Sub (Vertices [2]' Vertices [1]);
Magic Number,Benchmarks.SpecRaytracer,RayTracer,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\RayTracer.cs,inst_main,The following statement contains a magic number: argv.Length >= 2
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadCamera,The following statement contains a magic number: double[] input = new double[3];
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadCamera,The following statement contains a magic number: temp = temp.Substring (11);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadCamera,The following statement contains a magic number: i < 2
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadCamera,The following statement contains a magic number: input [2] = (double)Double.Parse (temp);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadCamera,The following statement contains a magic number: Point position = new Point (input [0]' input [1]' input [2]);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadCamera,The following statement contains a magic number: MaxZ = MinZ = input [2];
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadCamera,The following statement contains a magic number: temp = temp.Substring (16);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadCamera,The following statement contains a magic number: i < 2
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadCamera,The following statement contains a magic number: input [2] = (double)Double.Parse (temp);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadCamera,The following statement contains a magic number: Vector viewDir = new Vector (input [0]' input [1]' input [2]);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadCamera,The following statement contains a magic number: temp = temp.Substring (16);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadCamera,The following statement contains a magic number: temp = temp.Substring (10);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadCamera,The following statement contains a magic number: i < 2
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadCamera,The following statement contains a magic number: input [2] = (double)Double.Parse (temp);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadCamera,The following statement contains a magic number: Vector orthoUp = new Vector (input [0]' input [1]' input [2]);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadCamera,The following statement contains a magic number: temp = temp.Substring (14);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadLight,The following statement contains a magic number: double[] input = new double[3];
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadLight,The following statement contains a magic number: temp = temp.Substring (11);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadLight,The following statement contains a magic number: i < 2
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadLight,The following statement contains a magic number: input [2] = (double)Double.Parse (temp);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadLight,The following statement contains a magic number: Point position = new Point (input [0]' input [1]' input [2]);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadLight,The following statement contains a magic number: temp = temp.Substring (8);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadLight,The following statement contains a magic number: i < 2
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadLight,The following statement contains a magic number: input [2] = (double)Double.Parse (temp);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadLight,The following statement contains a magic number: Color color = new Color (input [0]' input [1]' input [2]);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadSphere,The following statement contains a magic number: double[] input = new double[3];
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadSphere,The following statement contains a magic number: temp = temp.Substring (9);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadSphere,The following statement contains a magic number: i < 2
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadSphere,The following statement contains a magic number: input [2] = (double)Double.Parse (temp);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadSphere,The following statement contains a magic number: Point origin = new Point (input [0]' input [1]' input [2]);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadSphere,The following statement contains a magic number: temp = temp.Substring (9);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadSphere,The following statement contains a magic number: i < 7
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadPoly,The following statement contains a magic number: double[] input = new double[3];
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadPoly,The following statement contains a magic number: temp.Substring (7).Equals ("POLYSET_TRI_MESH")
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadPoly,The following statement contains a magic number: temp.Substring (11).Equals ("PER_VERTEX_NORMAL")
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadPoly,The following statement contains a magic number: i < 4
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadPoly,The following statement contains a magic number: temp = temp.Substring (11);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadPoly,The following statement contains a magic number: temp = temp.Substring (16);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadPoly,The following statement contains a magic number: temp = temp.Substring (8);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadPoly,The following statement contains a magic number: k < 2
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadPoly,The following statement contains a magic number: input [2] = (double)Double.Parse (temp);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadPoly,The following statement contains a magic number: vertices [j] = new Point (input [0]' input [1]' input [2]);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadMaterial,The following statement contains a magic number: double[] input = new double[3];
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadMaterial,The following statement contains a magic number: Color[] colors = new Color[4];
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadMaterial,The following statement contains a magic number: temp = temp.Substring (14);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadMaterial,The following statement contains a magic number: j < 2
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadMaterial,The following statement contains a magic number: input [2] = (double)Double.Parse (temp);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadMaterial,The following statement contains a magic number: colors [i] = new Color (input [0]' input [1]' input [2]);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadMaterial,The following statement contains a magic number: i < 4
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadMaterial,The following statement contains a magic number: shininess = (double)Double.Parse (temp.Substring (14));
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadMaterial,The following statement contains a magic number: ktran = (double)Double.Parse (temp.Substring (10));
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadMaterial,The following statement contains a magic number: Material newmaterial = new Material (colors [0]' colors [1]' colors [2]' colors [3]' shininess' ktran);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,ReadMaterial,The following statement contains a magic number: Material newmaterial = new Material (colors [0]' colors [1]' colors [2]' colors [3]' shininess' ktran);
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,Shade,The following statement contains a magic number: reflect.GetDirection ().Combine (eyeRay.GetDirection ()' normal' 1.0f' -2.0f * normal.Dot (eyeRay.GetDirection ()));
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,RenderScene,The following statement contains a magic number: double ylen = camera.GetFocalDist () * (double)Math.Tan (0.5f * camera.GetFOV ());
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,RenderScene,The following statement contains a magic number: basepoint.Set (upleft.GetX () + 0.5f * (horIncr.GetX () + vertIncr.GetX ())' upleft.GetY () + 0.5f * (horIncr.GetY () + vertIncr.GetY ())'  				upleft.GetZ () + 0.5f * (horIncr.GetZ () + vertIncr.GetZ ()));
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,RenderScene,The following statement contains a magic number: basepoint.Set (upleft.GetX () + 0.5f * (horIncr.GetX () + vertIncr.GetX ())' upleft.GetY () + 0.5f * (horIncr.GetY () + vertIncr.GetY ())'  				upleft.GetZ () + 0.5f * (horIncr.GetZ () + vertIncr.GetZ ()));
Magic Number,Benchmarks.SpecRaytracer,Scene,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\Scene.cs,RenderScene,The following statement contains a magic number: basepoint.Set (upleft.GetX () + 0.5f * (horIncr.GetX () + vertIncr.GetX ())' upleft.GetY () + 0.5f * (horIncr.GetY () + vertIncr.GetY ())'  				upleft.GetZ () + 0.5f * (horIncr.GetZ () + vertIncr.GetZ ()));
Magic Number,Benchmarks.SpecRaytracer,TriangleObj,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\TriangleObj.cs,TriangleObj,The following statement contains a magic number: Vector[] temp = new Vector[3];
Magic Number,Benchmarks.SpecRaytracer,TriangleObj,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\TriangleObj.cs,TriangleObj,The following statement contains a magic number: i < 3
Magic Number,Benchmarks.SpecRaytracer,TriangleObj,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\TriangleObj.cs,TriangleObj,The following statement contains a magic number: S1.Cross (temp [1]' temp [2]);
Magic Number,Benchmarks.SpecRaytracer,TriangleObj,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\Benchmarks\SpecRaytracer\TriangleObj.cs,TriangleObj,The following statement contains a magic number: S2.Cross (temp [2]' temp [0]);
