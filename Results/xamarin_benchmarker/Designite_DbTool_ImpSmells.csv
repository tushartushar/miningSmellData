Implementation smell,Namespace,Class,File,Method,Description
Long Method,DbTool,MainClass,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\dbtool\Program.cs,FindRegressions,The method has 159 lines of code.
Complex Method,DbTool,MainClass,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\dbtool\Program.cs,FindRegressions,Cyclomatic complexity of the method is 28
Complex Method,Benchmarker.Models,Config,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\Config.cs,LoadFromString,Cyclomatic complexity of the method is 13
Complex Method,Benchmarker.Models,RunSet,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\RunSet.cs,FromId,Cyclomatic complexity of the method is 11
Long Parameter List,DbTool,MainClass,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\dbtool\Program.cs,WarnIfNecessary,The method has 8 parameters. Parameters: testRun' benchmarksToWarn' warnedBenchmarks' faster' testRunSet' previousRunSet' machineName' configName
Long Parameter List,DbTool,MainClass,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\dbtool\Program.cs,FindRegressions,The method has 5 parameters. Parameters: conn' machineName' configName' testRun' onlyNecessary
Long Parameter List,Benchmarker,PostgresInterface,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libpostgres\PostgresInterface.cs,Select,The method has 5 parameters. Parameters: conn' tableNames' columnsEnumerable' whereClause' whereValues
Long Parameter List,Benchmarker,PostgresInterface,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libpostgres\PostgresInterface.cs,Select,The method has 5 parameters. Parameters: conn' table' columnsEnumerable' whereClause' whereValues
Long Parameter List,Benchmarker.Models,RunSet,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\RunSet.cs,FromId,The method has 7 parameters. Parameters: local_machine' local_runsetid' local_config' local_mainCommit' local_secondaryCommits' local_buildURL' local_logURL
Long Statement,DbTool,MainClass,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\dbtool\Program.cs,FindRegressions,The length of the statement  "					var newlyWarnedFaster = await WarnIfNecessary (testRun' fasterBenchmarks' warnedFasterBenchmarks' true' testRunSet' previousRunSet' machineName' configName); " is 157.
Long Statement,DbTool,MainClass,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\dbtool\Program.cs,FindRegressions,The length of the statement  "					var newlyWarnedSlower = await WarnIfNecessary (testRun' slowerBenchmarks' warnedSlowerBenchmarks' false' testRunSet' previousRunSet' machineName' configName); " is 158.
Long Statement,Benchmarker,Accredit,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libaccredit\Accredit.cs,GetCredentials,The length of the statement  "			string oauthLink = GetResponse ("https://accredit.parseapp.com/requestCredentials"' string.Format("service={0}&key={1}&secret={2}"' serviceName' key' secret)); " is 159.
Long Statement,Benchmarker,Accredit,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libaccredit\Accredit.cs,GetCredentials,The length of the statement  "			var response = GetResponse ("https://accredit.parseapp.com/getCredentials"' string.Format ("key={0}&secret={1}"' key' secret)); " is 127.
Long Statement,Benchmarker,Helper,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\Helper.cs,RunWithRetry,The length of the statement  "					Logging.GetLogging ().ErrorFormat ("Exception when running task - sleeping {0} seconds and retrying: {1}"' seconds' exc); " is 121.
Long Statement,Benchmarker,Helper,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\Helper.cs,RunWithRetry,The length of the statement  "					Logging.GetLogging ().ErrorFormat ("Exception when running task - sleeping {0} seconds and retrying: {1}"' seconds' exc); " is 121.
Long Statement,Benchmarker,PostgresInterface,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libpostgres\PostgresInterface.cs,Connect,The length of the statement  "			var connectionString = string.Format ("Host={0};Port={1};Username={2};Password={3};Database={4};SslMode=Require;TrustServerCertificate=true"' " is 141.
Long Statement,Benchmarker.Models,RunSet,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\RunSet.cs,FromId,The length of the statement  "				Console.Error.WriteLine ("trying to parse Start date: \"" + db_result ["StartedAt"].ToObject<DateTime> ().ToLocalTime ().ToString (DATETIME_PRETTY) + "\""); " is 156.
Long Statement,Benchmarker.Models,RunSet,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\RunSet.cs,FromId,The length of the statement  "					throw new Exception (String.Format ("Commit ({0}) does not match the one in the database ({1})."' local_mainCommit.Hash' db_mainProductCommit)); " is 144.
Long Statement,Benchmarker.Models,RunSet,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\RunSet.cs,FromId,The length of the statement  "					throw new Exception ("Machine does not match the one in the database. \"" + db_machineName + "\" vs. \"" + local_machine.Name + "\""); " is 134.
Long Statement,Benchmarker.Models,HttpApi,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\HttpApi.cs,ApiUrl,The length of the statement  "				queryString = "?" + String.Join ("&"' args.Select (kvp => String.Format ("{0}={1}"' kvp.Key' Uri.EscapeUriString (kvp.Value)))); " is 128.
Magic Number,DbTool,MainClass,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\dbtool\Program.cs,FindRegressions,The following statement contains a magic number: const int baselineWindowSize = 5;
Magic Number,DbTool,MainClass,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\dbtool\Program.cs,FindRegressions,The following statement contains a magic number: const int testWindowSize = 3;
Magic Number,DbTool,MainClass,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\dbtool\Program.cs,FindRegressions,The following statement contains a magic number: const double controlLimitSize = 6;
Magic Number,DbTool,MainClass,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\dbtool\Program.cs,FindRegressions,The following statement contains a magic number: results.Count < 5
Magic Number,DbTool,MainClass,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\dbtool\Program.cs,FindRegressions,The following statement contains a magic number: numOutliersFaster > results.Count * 3 / 4
Magic Number,DbTool,MainClass,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\dbtool\Program.cs,FindRegressions,The following statement contains a magic number: numOutliersFaster > results.Count * 3 / 4
Magic Number,DbTool,MainClass,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\dbtool\Program.cs,Main,The following statement contains a magic number: var configId = args [2];
Magic Number,DbTool,MainClass,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\dbtool\Program.cs,Main,The following statement contains a magic number: var testRun = args.Length > 3 && args [3] == "--test-run";
Magic Number,DbTool,MainClass,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\dbtool\Program.cs,Main,The following statement contains a magic number: var testRun = args.Length > 3 && args [3] == "--test-run";
Magic Number,DbTool,MainClass,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\dbtool\Program.cs,Main,The following statement contains a magic number: var onlyNecessary = !testRun || (args.Length > 4 && args [4] == "--only-necessary");
Magic Number,DbTool,MainClass,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\dbtool\Program.cs,Main,The following statement contains a magic number: var onlyNecessary = !testRun || (args.Length > 4 && args [4] == "--only-necessary");
Magic Number,Benchmarker,Accredit,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libaccredit\Accredit.cs,WaitForConfirmation,The following statement contains a magic number: Thread.Sleep (1000);
Magic Number,Benchmarker,PostgresInterface,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libpostgres\PostgresInterface.cs,CreateCommand,The following statement contains a magic number: cmd.CommandTimeout = 1800;
Magic Number,Benchmarker,PostgresInterface,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libpostgres\PostgresInterface.cs,RunInTransactionWithRetry,The following statement contains a magic number: var retryTime = 10;
Magic Number,Benchmarker.Models,Config,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\Config.cs,LoadFromString,The following statement contains a magic number: config.Count = 10;
Magic Number,Benchmarker.Models,HttpApi,D:\research\architectureSmells\repos\xamarin_benchmarker\tools\libdbmodel\HttpApi.cs,Send,The following statement contains a magic number: client.Timeout = TimeSpan.FromSeconds (350);
