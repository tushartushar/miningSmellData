Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,NHibernateWorkshop.Querying.Criteria,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\FetchingJoins.cs,fetch_join_on_a_many_to_one_with_implicit_outer_join,The length of the parameter employeesWithOrWithoutManagers is 30.
Long Identifier,NHibernateWorkshop.Querying.Criteria,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\FetchingJoins.cs,fetch_join_on_a_many_to_one_with_implicit_outer_join,The length of the parameter retrievedEmployeeWithoutManager is 31.
Long Identifier,NHibernateWorkshop.Querying.Criteria,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\FetchingJoins.cs,fetch_join_on_a_many_to_one_with_explicit_inner_join,The length of the parameter retrievedEmployeeWithoutManager is 31.
Long Identifier,NHibernateWorkshop.Querying.Criteria,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\FetchingJoins.cs,fetch_join_on_a_many_to_one_and_one_of_its_many_to_ones,The length of the parameter ordersWithEmployeesAndTheirManagers is 35.
Long Identifier,NHibernateWorkshop.Querying.Criteria,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\FetchingJoins.cs,fetch_join_on_two_many_to_ones_with_implicit_inner_joins,The length of the parameter ordersWithCustomersAndEmployees is 31.
Long Identifier,NHibernateWorkshop.Querying.HQL,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\FetchingJoins.cs,fetch_outer_join_on_an_optional_many_to_one,The length of the parameter employeesWithOrWithoutManagers is 30.
Long Identifier,NHibernateWorkshop.Querying.HQL,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\FetchingJoins.cs,fetch_outer_join_on_an_optional_many_to_one,The length of the parameter retrievedEmployeeWithoutManager is 31.
Long Identifier,NHibernateWorkshop.Querying.HQL,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\FetchingJoins.cs,fetch_inner_join_on_an_optional_many_to_one,The length of the parameter retrievedEmployeeWithoutManager is 31.
Long Identifier,NHibernateWorkshop.Querying.HQL,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\FetchingJoins.cs,fetch_join_on_a_many_to_one_and_one_of_its_many_to_ones,The length of the parameter ordersWithEmployeesAndTheirManagers is 35.
Long Identifier,NHibernateWorkshop.Querying.HQL,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\FetchingJoins.cs,fetch_join_on_two_many_to_ones,The length of the parameter ordersWithCustomersAndEmployees is 31.
Long Identifier,NHibernateWorkshop.Querying.LINQ,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\FetchingJoins.cs,fetch_join_on_an_optional_many_to_one,The length of the parameter employeesWithOrWithoutManagers is 30.
Long Identifier,NHibernateWorkshop.Querying.LINQ,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\FetchingJoins.cs,fetch_join_on_an_optional_many_to_one,The length of the parameter retrievedEmployeeWithoutManager is 31.
Long Identifier,NHibernateWorkshop.Querying.LINQ,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\FetchingJoins.cs,fetch_join_on_an_optional_many_to_one_and_emulate_inner_join,The length of the parameter retrievedEmployeeWithoutManager is 31.
Long Identifier,NHibernateWorkshop.Querying.LINQ,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\FetchingJoins.cs,fetch_join_on_a_many_to_one_and_one_of_its_many_to_ones,The length of the parameter ordersWithEmployeesAndTheirManagers is 35.
Long Identifier,NHibernateWorkshop.Querying.LINQ,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\FetchingJoins.cs,fetch_join_on_two_many_to_ones,The length of the parameter ordersWithCustomersAndEmployees is 31.
Long Identifier,NHibernateWorkshop.Querying.QueryOver,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\FetchingJoins.cs,fetch_join_on_optional_many_to_one_does_not_do_implicit_outer_join,The length of the parameter employeesWithOrWithoutManagers is 30.
Long Identifier,NHibernateWorkshop.Querying.QueryOver,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\FetchingJoins.cs,fetch_join_on_optional_many_to_one_does_not_do_implicit_outer_join,The length of the parameter retrievedEmployeeWithoutManager is 31.
Long Identifier,NHibernateWorkshop.Querying.QueryOver,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\FetchingJoins.cs,fetch_join_on_optional_many_to_one_with_explicit_outer_join,The length of the parameter employeesWithOrWithoutManagers is 30.
Long Identifier,NHibernateWorkshop.Querying.QueryOver,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\FetchingJoins.cs,fetch_join_on_optional_many_to_one_with_explicit_outer_join,The length of the parameter retrievedEmployeeWithoutManager is 31.
Long Identifier,NHibernateWorkshop.Querying.QueryOver,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\FetchingJoins.cs,fetch_join_on_a_many_to_one_and_one_of_its_many_to_ones,The length of the parameter ordersWithEmployeesAndTheirManagers is 35.
Long Identifier,NHibernateWorkshop.Querying.QueryOver,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\FetchingJoins.cs,fetch_join_on_two_many_to_ones_with_implicit_inner_joins,The length of the parameter ordersWithCustomersAndEmployees is 31.
Long Statement,NHibernateWorkshop.Crud,OrderCrud,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Crud\OrderCrud.cs,BuildEntity,The length of the statement  "            // there's no cascade set on Order's Employee association so we first have to make the transient order.Employee instance persistent " is 131.
Long Statement,NHibernateWorkshop.Performance,SecondLevelCache,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Performance\SecondLevelCache.cs,updating_user_after_it_has_been_put_in_cache_updates_both_database_and_cache,The length of the statement  "                Logger.Info("this won't cause a select statement since the instance is in the cache' and its values are the updated ones"); " is 123.
Long Statement,NHibernateWorkshop.Performance,SecondLevelCache,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Performance\SecondLevelCache.cs,accessing_cached_collection_does_not_issue_queries_if_collection_entities_are_cached,The length of the statement  "                Logger.Info("depending on the order in which the tests run' the next statement might issue a select if the collection hasn't been cached by a previous test yet"); " is 162.
Long Statement,NHibernateWorkshop.Performance,SecondLevelCache,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Performance\SecondLevelCache.cs,manipulating_cached_collection_updates_both_database_and_cache,The length of the statement  "                Logger.Info("this session should cause 2 delete statements' and one select statement for the usergroup's user collection' which isn't cached"); " is 143.
Long Statement,NHibernateWorkshop.Performance,SecondLevelCache,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Performance\SecondLevelCache.cs,cached_query_of_non_cached_entities_results_in_select_per_entity_in_result,The length of the statement  "                Logger.Info("the query is in the query cache' so there won't be one query to retrieve all employees. But employees aren't cached entities' so you get a select per employee!"); " is 175.
Long Statement,NHibernateWorkshop.Performance,SecondLevelCache,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Performance\SecondLevelCache.cs,cached_query_of_cached_entities_results_in_no_selects,The length of the statement  "                Logger.Info("the query is in the query cache' so there won't be one query to retrieve all users. And since all Users have been cached already' there are no extra statements"); " is 175.
Long Statement,NHibernateWorkshop.Performance,Proxies,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Performance\Proxies.cs,session_get_for_nonexisting_entity,The length of the statement  "            Logger.Info("Session.Get for a nonexisting row doesn't throw an exception either' but nonExistingCustomer will be null"); " is 121.
Long Statement,NHibernateWorkshop.Querying.Criteria,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\FetchingJoins.cs,fetch_join_on_a_many_to_one_with_implicit_outer_join,The length of the statement  "            var retrievedEmployeeWithoutManager = employeesWithOrWithoutManagers.FirstOrDefault(e => e.Id == employeeWithoutManager.Id); " is 124.
Long Statement,NHibernateWorkshop.Querying.Criteria,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\FetchingJoins.cs,fetch_join_on_one_to_many_with_distinct_result_transformer,The length of the statement  "            ordersWithItems.Each(o => Assert.IsTrue(NHibernateUtil.IsInitialized(ReflectionHelper.GetPrivateFieldValue(o' "_items")))); " is 123.
Long Statement,NHibernateWorkshop.Querying.Criteria,UniqueResult,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\UniqueResult.cs,unique_result_returns_one_value_instead_of_list_with_one_value,The length of the statement  "            Logger.Info("Calling UniqueResult instead of list returns just one value' even though the select statement will be the same"); " is 126.
Long Statement,NHibernateWorkshop.Querying.Criteria,UniqueResult,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\UniqueResult.cs,unique_result_fails_when_resultset_contains_more_than_one_row,The length of the statement  "            Assert.Throws<NHibernate.NonUniqueResultException>(() => _query.GetExecutableCriteria(Session).UniqueResult<Customer>()); " is 121.
Long Statement,NHibernateWorkshop.Querying.HQL,AggregateFunctions,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\AggregateFunctions.cs,average,The length of the statement  "            // SQL server rounds the avg value down if you don't cast the column to double precision... and HQL doesn't include the cast :s " is 127.
Long Statement,NHibernateWorkshop.Querying.HQL,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\FetchingJoins.cs,fetch_outer_join_on_an_optional_many_to_one,The length of the statement  "            var retrievedEmployeeWithoutManager = employeesWithOrWithoutManagers.FirstOrDefault(e => e.Id == employeeWithoutManager.Id); " is 124.
Long Statement,NHibernateWorkshop.Querying.HQL,Ordering,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Ordering.cs,order_by_joined_property,The length of the statement  "            var orders = Session.CreateQuery("from Order o inner join fetch o.Customer as customer order by customer.DiscountPercentage desc") " is 130.
Long Statement,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,two_restrictions_with_and,The length of the statement  "            var products = Session.CreateQuery("from Product p where size(p.Sources) > 0 and p.UnitsInStock is not null").List<Product>(); " is 126.
Long Statement,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,two_restrictions_with_or,The length of the statement  "            var products = Session.CreateQuery("from Product p where size(p.Sources) > 0 or p.UnitsInStock is null").List<Product>(); " is 121.
Long Statement,NHibernateWorkshop.Querying.HQL,UniqueResult,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\UniqueResult.cs,uniqueresult_returns_one_value_instead_of_list_with_one_value,The length of the statement  "            Logger.Info("Calling UniqueResult instead of list returns just one value' even though the select statement will be the same"); " is 126.
Long Statement,NHibernateWorkshop.Querying.LINQ,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\FetchingJoins.cs,fetch_join_on_an_optional_many_to_one,The length of the statement  "            var retrievedEmployeeWithoutManager = employeesWithOrWithoutManagers.FirstOrDefault(e => e.Id == employeeWithoutManager.Id); " is 124.
Long Statement,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The length of the statement  "                //.Where(p => p.UnitsInStock.IsBetween(5).And(10)) // this unfortunately throws an exception while generating the query :s " is 122.
Long Statement,NHibernateWorkshop.Querying.LINQ,UniqueResult,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\UniqueResult.cs,single_returns_one_value_instead_of_list_with_one_value,The length of the statement  "            Logger.Info("Calling SingleOrDefault instead of list returns just one value' even though the select statement will be the same"); " is 129.
Long Statement,NHibernateWorkshop.Querying.QueryOver,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\FetchingJoins.cs,fetch_join_on_optional_many_to_one_does_not_do_implicit_outer_join,The length of the statement  "            var retrievedEmployeeWithoutManager = employeesWithOrWithoutManagers.FirstOrDefault(e => e.Id == employeeWithoutManager.Id); " is 124.
Long Statement,NHibernateWorkshop.Querying.QueryOver,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\FetchingJoins.cs,fetch_join_on_optional_many_to_one_with_explicit_outer_join,The length of the statement  "            var retrievedEmployeeWithoutManager = employeesWithOrWithoutManagers.FirstOrDefault(e => e.Id == employeeWithoutManager.Id); " is 124.
Long Statement,NHibernateWorkshop.Querying.QueryOver,FetchingJoins,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\FetchingJoins.cs,fetch_join_on_one_to_many_with_distinct_result_transformer,The length of the statement  "            ordersWithItems.Each(o => Assert.IsTrue(NHibernateUtil.IsInitialized(ReflectionHelper.GetPrivateFieldValue(o' "_items")))); " is 123.
Long Statement,NHibernateWorkshop.Querying.QueryOver,UniqueResult,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\UniqueResult.cs,singleordefault_returns_one_value_instead_of_list_with_one_value,The length of the statement  "            Logger.Info("Calling SingleOrDefault instead of list returns just one value' even though the select statement will be the same"); " is 129.
Long Statement,NHibernateWorkshop.SessionFactoryBuilders,SqlServerFluentSessionFactoryBuilder,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\SessionFactoryBuilders\SqlServerFluentSessionFactoryBuilder.cs,BuildSessionFactory,The length of the statement  "                .Cache(cache => cache.UseQueryCache().UseSecondLevelCache().ProviderClass("NHibernate.Cache.HashtableCacheProvider' NHibernate")) " is 129.
Long Statement,NHibernateWorkshop.SessionFactoryBuilders,SQLiteFluentSessionFactoryBuilder,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\SessionFactoryBuilders\SQLiteFluentSessionFactoryBuilder.cs,BuildSessionFactory,The length of the statement  "                .Cache(cache => cache.UseQueryCache().UseSecondLevelCache().ProviderClass("NHibernate.Cache.HashtableCacheProvider' NHibernate")) " is 129.
Magic Number,NHibernateWorkshop.AssociationFixtures.OneToManyFixtures,EmployeeSubordinates,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Associations\OneToManyFixtures\EmployeeSubordinates.cs,save_cascades_to_subordinates,The following statement contains a magic number: Assert.AreEqual(2' retrievedManager.Subordinates.Count());
Magic Number,NHibernateWorkshop.AssociationFixtures.OneToManyFixtures,OrderOrderItems,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Associations\OneToManyFixtures\OrderOrderItems.cs,save_cascades_to_items,The following statement contains a magic number: Assert.AreEqual(2' retrievedOrder.Items.Count());
Magic Number,NHibernateWorkshop.AssociationFixtures.OneToManyFixtures,ProductProductSources,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Associations\OneToManyFixtures\ProductProductSources.cs,AfterSetUp,The following statement contains a magic number: _source1 = _product.AddSource(_supplier1' 10);
Magic Number,NHibernateWorkshop.AssociationFixtures.OneToManyFixtures,ProductProductSources,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Associations\OneToManyFixtures\ProductProductSources.cs,AfterSetUp,The following statement contains a magic number: _source2 = _product.AddSource(_supplier2' 12);
Magic Number,NHibernateWorkshop.AssociationFixtures.OneToManyFixtures,ProductProductSources,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Associations\OneToManyFixtures\ProductProductSources.cs,save_cascades_to_sources,The following statement contains a magic number: Assert.AreEqual(2' retrievedProduct.Sources.Count());
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,EmployeeGenerator,The following statement contains a magic number: return Using.TheseConventions()                  .With<Employee>(options => options.Ignore(employee => employee.Id))                  .With<Employee>(options => options.Length(employee => employee.FirstName' 1' 50))                  .With<Employee>(options => options.Length(employee => employee.LastName' 1' 75))                  .With<Employee>(options => options.Length(employee => employee.Title' 1' 50))                  .With<Employee>(options => options.Range(employee => employee.Salary' 1700' 3500))                  .With<Employee>(options => options.Length(employee => employee.Phone' 1' 15))                  .ForEach<Employee>(employee => session.Save(employee));
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,EmployeeGenerator,The following statement contains a magic number: return Using.TheseConventions()                  .With<Employee>(options => options.Ignore(employee => employee.Id))                  .With<Employee>(options => options.Length(employee => employee.FirstName' 1' 50))                  .With<Employee>(options => options.Length(employee => employee.LastName' 1' 75))                  .With<Employee>(options => options.Length(employee => employee.Title' 1' 50))                  .With<Employee>(options => options.Range(employee => employee.Salary' 1700' 3500))                  .With<Employee>(options => options.Length(employee => employee.Phone' 1' 15))                  .ForEach<Employee>(employee => session.Save(employee));
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,EmployeeGenerator,The following statement contains a magic number: return Using.TheseConventions()                  .With<Employee>(options => options.Ignore(employee => employee.Id))                  .With<Employee>(options => options.Length(employee => employee.FirstName' 1' 50))                  .With<Employee>(options => options.Length(employee => employee.LastName' 1' 75))                  .With<Employee>(options => options.Length(employee => employee.Title' 1' 50))                  .With<Employee>(options => options.Range(employee => employee.Salary' 1700' 3500))                  .With<Employee>(options => options.Length(employee => employee.Phone' 1' 15))                  .ForEach<Employee>(employee => session.Save(employee));
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,EmployeeGenerator,The following statement contains a magic number: return Using.TheseConventions()                  .With<Employee>(options => options.Ignore(employee => employee.Id))                  .With<Employee>(options => options.Length(employee => employee.FirstName' 1' 50))                  .With<Employee>(options => options.Length(employee => employee.LastName' 1' 75))                  .With<Employee>(options => options.Length(employee => employee.Title' 1' 50))                  .With<Employee>(options => options.Range(employee => employee.Salary' 1700' 3500))                  .With<Employee>(options => options.Length(employee => employee.Phone' 1' 15))                  .ForEach<Employee>(employee => session.Save(employee));
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,EmployeeGenerator,The following statement contains a magic number: return Using.TheseConventions()                  .With<Employee>(options => options.Ignore(employee => employee.Id))                  .With<Employee>(options => options.Length(employee => employee.FirstName' 1' 50))                  .With<Employee>(options => options.Length(employee => employee.LastName' 1' 75))                  .With<Employee>(options => options.Length(employee => employee.Title' 1' 50))                  .With<Employee>(options => options.Range(employee => employee.Salary' 1700' 3500))                  .With<Employee>(options => options.Length(employee => employee.Phone' 1' 15))                  .ForEach<Employee>(employee => session.Save(employee));
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,EmployeeGenerator,The following statement contains a magic number: return Using.TheseConventions()                  .With<Employee>(options => options.Ignore(employee => employee.Id))                  .With<Employee>(options => options.Length(employee => employee.FirstName' 1' 50))                  .With<Employee>(options => options.Length(employee => employee.LastName' 1' 75))                  .With<Employee>(options => options.Length(employee => employee.Title' 1' 50))                  .With<Employee>(options => options.Range(employee => employee.Salary' 1700' 3500))                  .With<Employee>(options => options.Length(employee => employee.Phone' 1' 15))                  .ForEach<Employee>(employee => session.Save(employee));
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,Create,The following statement contains a magic number: var customers = Using.TheseConventions()                  .With<Customer>(options => options.Length(customer => customer.Name' 5' 100))                  .With<Customer>(options => options.Range(customer => customer.DiscountPercentage' 0' 25))                  .ForEach<Customer>(customer => session.Save(customer))                  .Many<Customer>(20' 40)                  .ToArray();
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,Create,The following statement contains a magic number: var customers = Using.TheseConventions()                  .With<Customer>(options => options.Length(customer => customer.Name' 5' 100))                  .With<Customer>(options => options.Range(customer => customer.DiscountPercentage' 0' 25))                  .ForEach<Customer>(customer => session.Save(customer))                  .Many<Customer>(20' 40)                  .ToArray();
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,Create,The following statement contains a magic number: var customers = Using.TheseConventions()                  .With<Customer>(options => options.Length(customer => customer.Name' 5' 100))                  .With<Customer>(options => options.Range(customer => customer.DiscountPercentage' 0' 25))                  .ForEach<Customer>(customer => session.Save(customer))                  .Many<Customer>(20' 40)                  .ToArray();
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,Create,The following statement contains a magic number: var customers = Using.TheseConventions()                  .With<Customer>(options => options.Length(customer => customer.Name' 5' 100))                  .With<Customer>(options => options.Range(customer => customer.DiscountPercentage' 0' 25))                  .ForEach<Customer>(customer => session.Save(customer))                  .Many<Customer>(20' 40)                  .ToArray();
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,Create,The following statement contains a magic number: var customers = Using.TheseConventions()                  .With<Customer>(options => options.Length(customer => customer.Name' 5' 100))                  .With<Customer>(options => options.Range(customer => customer.DiscountPercentage' 0' 25))                  .ForEach<Customer>(customer => session.Save(customer))                  .Many<Customer>(20' 40)                  .ToArray();
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,Create,The following statement contains a magic number: var managers = EmployeeGenerator(session)                  .Many<Employee>(2);
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,Create,The following statement contains a magic number: var employees = EmployeeGenerator(session)                  .ForEach<Employee>(employee => Maybe.Do(() => managers.PickOne().AddSubordinate(employee)))                  .Many<Employee>(20)                  .ToArray();
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,Create,The following statement contains a magic number: var suppliers = Using.TheseConventions()                  .With<Supplier>(options => options.Length(supplier => supplier.Website' 1' 100))                  .With<Supplier>(options => options.Length(supplier => supplier.Name' 5' 25))                  .ForEach<Supplier>(supplier => session.Save(supplier))                  .Many<Supplier>(20)                  .ToArray();
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,Create,The following statement contains a magic number: var suppliers = Using.TheseConventions()                  .With<Supplier>(options => options.Length(supplier => supplier.Website' 1' 100))                  .With<Supplier>(options => options.Length(supplier => supplier.Name' 5' 25))                  .ForEach<Supplier>(supplier => session.Save(supplier))                  .Many<Supplier>(20)                  .ToArray();
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,Create,The following statement contains a magic number: var suppliers = Using.TheseConventions()                  .With<Supplier>(options => options.Length(supplier => supplier.Website' 1' 100))                  .With<Supplier>(options => options.Length(supplier => supplier.Name' 5' 25))                  .ForEach<Supplier>(supplier => session.Save(supplier))                  .Many<Supplier>(20)                  .ToArray();
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,Create,The following statement contains a magic number: var suppliers = Using.TheseConventions()                  .With<Supplier>(options => options.Length(supplier => supplier.Website' 1' 100))                  .With<Supplier>(options => options.Length(supplier => supplier.Name' 5' 25))                  .ForEach<Supplier>(supplier => session.Save(supplier))                  .Many<Supplier>(20)                  .ToArray();
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,Create,The following statement contains a magic number: var products = Using.TheseConventions()                  .ForEach<ProductSource>(productsource => session.Save(productsource))                  .With<Product>(options => options.Ignore(product => product.Version))                  .With<Product>(options => options.For(                      product => product.Category'                      ProductCategory.Beverages'                      ProductCategory.Condiments'                      ProductCategory.DairyProducts'                      ProductCategory.Produce))                  .With<Product>(g => g.Method<double>(0' 5' (product' d) => product.AddSource(suppliers.PickOne()' d)))                  .With<Product>(options => options.Length(product => product.Name' 1' 50))                  .ForEach<Product>(product => session.Save(product))                  .Many<Product>(50)                  .ToArray();
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,Create,The following statement contains a magic number: var products = Using.TheseConventions()                  .ForEach<ProductSource>(productsource => session.Save(productsource))                  .With<Product>(options => options.Ignore(product => product.Version))                  .With<Product>(options => options.For(                      product => product.Category'                      ProductCategory.Beverages'                      ProductCategory.Condiments'                      ProductCategory.DairyProducts'                      ProductCategory.Produce))                  .With<Product>(g => g.Method<double>(0' 5' (product' d) => product.AddSource(suppliers.PickOne()' d)))                  .With<Product>(options => options.Length(product => product.Name' 1' 50))                  .ForEach<Product>(product => session.Save(product))                  .Many<Product>(50)                  .ToArray();
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,Create,The following statement contains a magic number: var products = Using.TheseConventions()                  .ForEach<ProductSource>(productsource => session.Save(productsource))                  .With<Product>(options => options.Ignore(product => product.Version))                  .With<Product>(options => options.For(                      product => product.Category'                      ProductCategory.Beverages'                      ProductCategory.Condiments'                      ProductCategory.DairyProducts'                      ProductCategory.Produce))                  .With<Product>(g => g.Method<double>(0' 5' (product' d) => product.AddSource(suppliers.PickOne()' d)))                  .With<Product>(options => options.Length(product => product.Name' 1' 50))                  .ForEach<Product>(product => session.Save(product))                  .Many<Product>(50)                  .ToArray();
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,Create,The following statement contains a magic number: Using.TheseConventions()                  .With<OrderItem>(options => options.For(item => item.Product' products))                  .OneToMany<Order' OrderItem>(1' 5' (order' item) => order.AddItem(item))                  .With<Order>(options => options.For(order => order.Customer' customers))                  .With<Order>(options => options.For(order => order.Employee' employees))                  .OneToOne<Order' Address>((order' address) => order.DeliveryAddress = address)                  .ForEach<Order>(order => session.Save(order))                  .Many<Order>(50);
Magic Number,NHibernateWorkshop,TestData,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,Create,The following statement contains a magic number: Using.TheseConventions()                  .With<OrderItem>(options => options.For(item => item.Product' products))                  .OneToMany<Order' OrderItem>(1' 5' (order' item) => order.AddItem(item))                  .With<Order>(options => options.For(order => order.Customer' customers))                  .With<Order>(options => options.For(order => order.Employee' employees))                  .OneToOne<Order' Address>((order' address) => order.DeliveryAddress = address)                  .ForEach<Order>(order => session.Save(order))                  .Many<Order>(50);
Magic Number,NHibernateWorkshop,Using,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,TheseConventions,The following statement contains a magic number: return                      new DomainGenerator()                          .With<Entity<int>>(options => options.Ignore(entity => entity.Id))                          .With<Entity<Guid>>(options => options.Ignore(entity => entity.Id))                          .Component<Address>()                          .With<Address>(options => options.Length(address => address.Street' 1' 100))                          .With<Address>(options => options.Length(address => address.City' 1' 100))                          .With<Address>(options => options.Length(address => address.Country' 1' 100));
Magic Number,NHibernateWorkshop,Using,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,TheseConventions,The following statement contains a magic number: return                      new DomainGenerator()                          .With<Entity<int>>(options => options.Ignore(entity => entity.Id))                          .With<Entity<Guid>>(options => options.Ignore(entity => entity.Id))                          .Component<Address>()                          .With<Address>(options => options.Length(address => address.Street' 1' 100))                          .With<Address>(options => options.Length(address => address.City' 1' 100))                          .With<Address>(options => options.Length(address => address.Country' 1' 100));
Magic Number,NHibernateWorkshop,Using,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\TestData.cs,TheseConventions,The following statement contains a magic number: return                      new DomainGenerator()                          .With<Entity<int>>(options => options.Ignore(entity => entity.Id))                          .With<Entity<Guid>>(options => options.Ignore(entity => entity.Id))                          .Component<Address>()                          .With<Address>(options => options.Length(address => address.Street' 1' 100))                          .With<Address>(options => options.Length(address => address.City' 1' 100))                          .With<Address>(options => options.Length(address => address.Country' 1' 100));
Magic Number,NHibernateWorkshop.Crud,UserCrud,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Crud\UserCrud.cs,ModifyEntity,The following statement contains a magic number: entity.PasswordHash = new byte[] {3' 2' 1};
Magic Number,NHibernateWorkshop.Crud,UserCrud,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Crud\UserCrud.cs,ModifyEntity,The following statement contains a magic number: entity.PasswordHash = new byte[] {3' 2' 1};
Magic Number,NHibernateWorkshop.Crud,OrderItemCrud,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Crud\OrderItemCrud.cs,ModifyEntity,The following statement contains a magic number: entity.DiscountPercentage = 7.5d;
Magic Number,NHibernateWorkshop.Crud,OrderItemCrud,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Crud\OrderItemCrud.cs,ModifyEntity,The following statement contains a magic number: entity.Quantity = 50;
Magic Number,NHibernateWorkshop.Crud,OrderItemCrud,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Crud\OrderItemCrud.cs,ModifyEntity,The following statement contains a magic number: entity.UnitPrice = 0.60d;
Magic Number,NHibernateWorkshop.Crud,ProductSourceCrud,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Crud\ProductSourceCrud.cs,ModifyEntity,The following statement contains a magic number: entity.Cost = entity.Cost * 2;
Magic Number,NHibernateWorkshop.Crud,OrderCrud,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Crud\OrderCrud.cs,ModifyEntity,The following statement contains a magic number: entity.DeliveryAddress = new Address("some other street"' "some other city"' 1235' "some other country");
Magic Number,NHibernateWorkshop.Crud,OrderCrud,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Crud\OrderCrud.cs,ModifyEntity,The following statement contains a magic number: entity.OrderedOn = DateTime.Now.AddMinutes(30);
Magic Number,NHibernateWorkshop.Crud,OrderCrud,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Crud\OrderCrud.cs,ModifyEntity,The following statement contains a magic number: entity.ShippedOn = DateTime.Now.AddDays(2);
Magic Number,NHibernateWorkshop.Crud,SupplierCrud,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Crud\SupplierCrud.cs,ModifyEntity,The following statement contains a magic number: var newAddress = new Address("some other street"' "some other city"' 32598' "some other country");
Magic Number,NHibernateWorkshop.Crud,CustomerCrud,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Crud\CustomerCrud.cs,ModifyEntity,The following statement contains a magic number: var newAddress = new Address("some other street"' "some other city"' 32598' "some other country");
Magic Number,NHibernateWorkshop.Crud,CustomerCrud,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Crud\CustomerCrud.cs,ModifyEntity,The following statement contains a magic number: entity.DiscountPercentage = 4.5d;
Magic Number,NHibernateWorkshop.Crud,EmployeeCrud,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Crud\EmployeeCrud.cs,ModifyEntity,The following statement contains a magic number: var newAddress = new Address("some other street"' "some other city"' 32598' "some other country");
Magic Number,NHibernateWorkshop.Crud,EmployeeCrud,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Crud\EmployeeCrud.cs,ModifyEntity,The following statement contains a magic number: entity.HireDate = entity.HireDate.AddDays(2);
Magic Number,NHibernateWorkshop.Crud,EmployeeCrud,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Crud\EmployeeCrud.cs,ModifyEntity,The following statement contains a magic number: entity.Salary = 2500;
Magic Number,NHibernateWorkshop.Crud,ProductCrud,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Crud\ProductCrud.cs,ModifyEntity,The following statement contains a magic number: entity.ReorderLevel = 10;
Magic Number,NHibernateWorkshop.Crud,ProductCrud,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Crud\ProductCrud.cs,ModifyEntity,The following statement contains a magic number: entity.UnitPrice = 1.20d;
Magic Number,NHibernateWorkshop.Crud,ProductCrud,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Crud\ProductCrud.cs,ModifyEntity,The following statement contains a magic number: entity.UnitsInStock = 10;
Magic Number,NHibernateWorkshop.Crud,ProductCrud,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Crud\ProductCrud.cs,ModifyEntity,The following statement contains a magic number: entity.UnitsOnOrder = 7;
Magic Number,NHibernateWorkshop.OptimisticConcurrency,OptimisticLockDirty,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\OptimisticLockDirty.cs,simultaneous_changes_that_dont_conflict_are_possible,The following statement contains a magic number: theEmployee.HireDate = new DateTime(2007' 1' 1);
Magic Number,NHibernateWorkshop.OptimisticConcurrency,OptimisticLockDirty,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\OptimisticLockDirty.cs,simultaneous_changes_that_dont_conflict_are_possible,The following statement contains a magic number: _employee.BirthDate = new DateTime(1979' 3' 1);
Magic Number,NHibernateWorkshop.OptimisticConcurrency,OptimisticLockDirty,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\OptimisticLockDirty.cs,simultaneous_changes_that_dont_conflict_are_possible,The following statement contains a magic number: _employee.BirthDate = new DateTime(1979' 3' 1);
Magic Number,NHibernateWorkshop.OptimisticConcurrency,OptimisticLockDirty,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\OptimisticLockDirty.cs,simultaneous_conflicting_changes_will_fail,The following statement contains a magic number: theEmployee.HireDate = new DateTime(2007' 1' 1);
Magic Number,NHibernateWorkshop.OptimisticConcurrency,OptimisticLockDirty,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\OptimisticLockDirty.cs,simultaneous_conflicting_changes_will_fail,The following statement contains a magic number: _employee.HireDate = new DateTime(1979' 3' 1);
Magic Number,NHibernateWorkshop.OptimisticConcurrency,OptimisticLockDirty,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\OptimisticLockDirty.cs,simultaneous_conflicting_changes_will_fail,The following statement contains a magic number: _employee.HireDate = new DateTime(1979' 3' 1);
Magic Number,NHibernateWorkshop.OptimisticConcurrency,OptimisticLockDirty,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\OptimisticLockDirty.cs,persisting_detached_entities_can_overwrite_concurrent_updates,The following statement contains a magic number: theEmployee.BirthDate = new DateTime(1979' 3' 1);
Magic Number,NHibernateWorkshop.OptimisticConcurrency,OptimisticLockDirty,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\OptimisticLockDirty.cs,persisting_detached_entities_can_overwrite_concurrent_updates,The following statement contains a magic number: theEmployee.BirthDate = new DateTime(1979' 3' 1);
Magic Number,NHibernateWorkshop.OptimisticConcurrency,OptimisticLockDirty,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\OptimisticLockDirty.cs,persisting_detached_entities_can_overwrite_concurrent_updates,The following statement contains a magic number: _employee.HireDate = new DateTime(2007' 1' 1);
Magic Number,NHibernateWorkshop.OptimisticConcurrency,OptimisticLockDirty,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\OptimisticLockDirty.cs,persisting_merged_detached_entities_can_overwrite_concurrent_updates,The following statement contains a magic number: theEmployee.BirthDate = new DateTime(1979' 3' 1);
Magic Number,NHibernateWorkshop.OptimisticConcurrency,OptimisticLockDirty,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\OptimisticLockDirty.cs,persisting_merged_detached_entities_can_overwrite_concurrent_updates,The following statement contains a magic number: theEmployee.BirthDate = new DateTime(1979' 3' 1);
Magic Number,NHibernateWorkshop.OptimisticConcurrency,OptimisticLockDirty,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\OptimisticLockDirty.cs,persisting_merged_detached_entities_can_overwrite_concurrent_updates,The following statement contains a magic number: _employee.HireDate = new DateTime(2007' 1' 1);
Magic Number,NHibernateWorkshop.OptimisticConcurrency,Version,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\Version.cs,version_increments_with_each_persist,The following statement contains a magic number: _product.UnitPrice = 10;
Magic Number,NHibernateWorkshop.OptimisticConcurrency,Version,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\Version.cs,version_increments_with_each_persist,The following statement contains a magic number: Assert.AreEqual(2' _product.Version);
Magic Number,NHibernateWorkshop.OptimisticConcurrency,Version,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\Version.cs,update_of_instance_with_old_version_number_fails,The following statement contains a magic number: theProduct.UnitsInStock = 50;
Magic Number,NHibernateWorkshop.OptimisticConcurrency,Version,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\Version.cs,update_of_instance_with_old_version_number_fails,The following statement contains a magic number: _product.UnitsOnOrder = 20;
Magic Number,NHibernateWorkshop.OptimisticConcurrency,Version,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\Version.cs,refresh_of_instance_with_old_version_number_enables_new_updates,The following statement contains a magic number: theProduct.UnitsInStock = 50;
Magic Number,NHibernateWorkshop.OptimisticConcurrency,Version,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\Version.cs,refresh_of_instance_with_old_version_number_enables_new_updates,The following statement contains a magic number: Assert.AreEqual(2' theProduct.Version);
Magic Number,NHibernateWorkshop.OptimisticConcurrency,Version,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\Version.cs,refresh_of_instance_with_old_version_number_enables_new_updates,The following statement contains a magic number: _product.UnitsOnOrder = 20;
Magic Number,NHibernateWorkshop.OptimisticConcurrency,Version,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\Version.cs,refresh_of_instance_with_old_version_number_enables_new_updates,The following statement contains a magic number: Assert.AreEqual(2' _product.Version);
Magic Number,NHibernateWorkshop.OptimisticConcurrency,Version,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\Version.cs,refresh_of_instance_with_old_version_number_enables_new_updates,The following statement contains a magic number: Assert.AreEqual(50' _product.UnitsInStock);
Magic Number,NHibernateWorkshop.OptimisticConcurrency,Version,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\Version.cs,refresh_of_instance_with_old_version_number_enables_new_updates,The following statement contains a magic number: Assert.AreEqual(20' _product.UnitsOnOrder);
Magic Number,NHibernateWorkshop.OptimisticConcurrency,Version,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\Version.cs,version_check_works_with_detached_entities,The following statement contains a magic number: theProduct.UnitsOnOrder = 20;
Magic Number,NHibernateWorkshop.OptimisticConcurrency,Version,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\OptimisticConcurrency\Version.cs,version_check_works_with_detached_entities,The following statement contains a magic number: _product.UnitsInStock = 50;
Magic Number,NHibernateWorkshop.Performance,SecondLevelCache,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Performance\SecondLevelCache.cs,updating_user_after_it_has_been_put_in_cache_updates_both_database_and_cache,The following statement contains a magic number: user1.PasswordHash = new byte[] {87' 63};
Magic Number,NHibernateWorkshop.Performance,SecondLevelCache,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Performance\SecondLevelCache.cs,updating_user_after_it_has_been_put_in_cache_updates_both_database_and_cache,The following statement contains a magic number: user1.PasswordHash = new byte[] {87' 63};
Magic Number,NHibernateWorkshop.Performance,SecondLevelCache,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Performance\SecondLevelCache.cs,updating_user_after_it_has_been_put_in_cache_updates_both_database_and_cache,The following statement contains a magic number: Assert.AreEqual(new byte[] { 87' 63 }' user1.PasswordHash);
Magic Number,NHibernateWorkshop.Performance,SecondLevelCache,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Performance\SecondLevelCache.cs,updating_user_after_it_has_been_put_in_cache_updates_both_database_and_cache,The following statement contains a magic number: Assert.AreEqual(new byte[] { 87' 63 }' user1.PasswordHash);
Magic Number,NHibernateWorkshop.Performance,PagingThroughCollection,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Performance\PagingThroughCollection.cs,paging_through_collection,The following statement contains a magic number: var productWith20Sources = new DomainGenerator()                  .With<ProductSource>(options => options.Ignore(productsource => productsource.Id))                  .ForEach<ProductSource>(productsource => Session.Save(productsource))                  .With<Product>(options => options.Ignore(product => product.Id))                  .With<Product>(options => options.Ignore(product => product.Version))                  .With<Product>(options => options.For(product => product.Category' ProductCategory.Beverages))                  .With<Product>(g => g.Method<double>(20 ' 20' (product' d) => product.AddSource(suppliers.PickOne()' d)))                  .With<Product>(options => options.For(product => product.Name' new StringGenerator(1' 50)))                  .ForEach<Product>(product => Session.Save(product))                  .One<Product>();
Magic Number,NHibernateWorkshop.Performance,PagingThroughCollection,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Performance\PagingThroughCollection.cs,paging_through_collection,The following statement contains a magic number: var productWith20Sources = new DomainGenerator()                  .With<ProductSource>(options => options.Ignore(productsource => productsource.Id))                  .ForEach<ProductSource>(productsource => Session.Save(productsource))                  .With<Product>(options => options.Ignore(product => product.Id))                  .With<Product>(options => options.Ignore(product => product.Version))                  .With<Product>(options => options.For(product => product.Category' ProductCategory.Beverages))                  .With<Product>(g => g.Method<double>(20 ' 20' (product' d) => product.AddSource(suppliers.PickOne()' d)))                  .With<Product>(options => options.For(product => product.Name' new StringGenerator(1' 50)))                  .ForEach<Product>(product => Session.Save(product))                  .One<Product>();
Magic Number,NHibernateWorkshop.Performance,PagingThroughCollection,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Performance\PagingThroughCollection.cs,paging_through_collection,The following statement contains a magic number: var productWith20Sources = new DomainGenerator()                  .With<ProductSource>(options => options.Ignore(productsource => productsource.Id))                  .ForEach<ProductSource>(productsource => Session.Save(productsource))                  .With<Product>(options => options.Ignore(product => product.Id))                  .With<Product>(options => options.Ignore(product => product.Version))                  .With<Product>(options => options.For(product => product.Category' ProductCategory.Beverages))                  .With<Product>(g => g.Method<double>(20 ' 20' (product' d) => product.AddSource(suppliers.PickOne()' d)))                  .With<Product>(options => options.For(product => product.Name' new StringGenerator(1' 50)))                  .ForEach<Product>(product => Session.Save(product))                  .One<Product>();
Magic Number,NHibernateWorkshop.Performance,PagingThroughCollection,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Performance\PagingThroughCollection.cs,paging_through_collection,The following statement contains a magic number: const int pageSize = 5;
Magic Number,NHibernateWorkshop.Performance,Proxies,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Performance\Proxies.cs,session_load_for_nonexisting_entity,The following statement contains a magic number: var nonExistingCustomerProxy = Session.Load<Customer>(99999);
Magic Number,NHibernateWorkshop.Performance,Proxies,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Performance\Proxies.cs,session_get_for_nonexisting_entity,The following statement contains a magic number: var nonExistingCustomer = Session.Get<Customer>(99999);
Magic Number,NHibernateWorkshop.Querying.Criteria,AggregateFunctions,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\AggregateFunctions.cs,count,The following statement contains a magic number: var count = Session.CreateCriteria<Product>()                  .Add(Restrictions.Gt("UnitsInStock"' 10))                  .SetProjection(Projections.RowCount())                  .UniqueResult();
Magic Number,NHibernateWorkshop.Querying.Criteria,AggregateFunctions,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\AggregateFunctions.cs,count,The following statement contains a magic number: Assert.AreEqual(_products.Count(p => p.UnitsInStock > 10)' count);
Magic Number,NHibernateWorkshop.Querying.Criteria,DetachedCriteriaVsCriteria,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\DetachedCriteriaVsCriteria.cs,detached_criteria_can_be_created_outside_of_session_scope,The following statement contains a magic number: var query = DetachedCriteria.For<Customer>()                  .Add(Restrictions.Gt("DiscountPercentage"' 0.2d));
Magic Number,NHibernateWorkshop.Querying.Criteria,GroupBy,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\GroupBy.cs,retrieve_product_sales_summaries_of_products_that_sold_at_least_100_items,The following statement contains a magic number: var productSalesSummaries = Session.CreateCriteria<OrderItem>()                  .CreateAlias("Product"' "product")                  .SetProjection(Projections.ProjectionList()                      .Add(Projections.GroupProperty("product.Id")' "ProductId")                      .Add(Projections.GroupProperty("product.Name")' "ProductName")                      .Add(Projections.Sum("Quantity")' "ItemsSold"))                  .Add(Restrictions.Gt(Projections.Sum("Quantity")' 100))                  .SetResultTransformer(new AliasToBeanResultTransformer(typeof(ProductSalesSummary)))                  .List<ProductSalesSummary>();
Magic Number,NHibernateWorkshop.Querying.Criteria,GroupBy,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\GroupBy.cs,retrieve_product_sales_summaries_of_products_that_sold_at_least_100_items,The following statement contains a magic number: productSalesSummaries.Each(p =>              {                  Assert.AreEqual(GetSalesCountForProductWithId(p.ProductId)' p.ItemsSold);                  Assert.Greater(p.ItemsSold' 100);              });
Magic Number,NHibernateWorkshop.Querying.Criteria,Ordering,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Ordering.cs,order_by_own_property,The following statement contains a magic number: var customers = Session.CreateCriteria<Customer>()                  .AddOrder(new NHibernate.Criterion.Order("DiscountPercentage"' true))                  .SetMaxResults(10)                  .List<Customer>();
Magic Number,NHibernateWorkshop.Querying.Criteria,Ordering,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Ordering.cs,order_by_own_property,The following statement contains a magic number: i < 9
Magic Number,NHibernateWorkshop.Querying.Criteria,Ordering,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Ordering.cs,order_by_joined_property,The following statement contains a magic number: var orders = Session.CreateCriteria<Order>()                  .CreateCriteria("Customer"' "c")                  .AddOrder(new NHibernate.Criterion.Order("c.DiscountPercentage"' false))                  .SetMaxResults(50)                  .List<Order>();
Magic Number,NHibernateWorkshop.Querying.Criteria,Ordering,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Ordering.cs,order_by_joined_property,The following statement contains a magic number: i < 49
Magic Number,NHibernateWorkshop.Querying.Criteria,Ordering,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Ordering.cs,order_by_joined_property_fails_when_using_fetchmode,The following statement contains a magic number: var query = Session.CreateCriteria<Order>()                  .SetFetchMode("Customer"' FetchMode.Join)                  .AddOrder(new NHibernate.Criterion.Order("Customer.DiscountPercentage"' false))                  .SetMaxResults(10);
Magic Number,NHibernateWorkshop.Querying.Criteria,Paging,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Paging.cs,page_through_all_employees,The following statement contains a magic number: const int pageSize = 5;
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product1.UnitsInStock = 10;
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product1.UnitsOnOrder = 10;
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product2.UnitsInStock = 13;
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product2.UnitsOnOrder = 14;
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product3.UnitsInStock = 7;
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product3.UnitsOnOrder = 7;
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product1.UnitsInStock = 10;
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product1.UnitsOnOrder = 10;
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product2.UnitsInStock = 13;
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product2.UnitsOnOrder = 14;
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product3.UnitsInStock = 2;
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product3.UnitsOnOrder = 7;
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: _product1.UnitsInStock = 10;
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: _product2.UnitsInStock = 13;
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: _product3.UnitsInStock = 9;
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: var products = Session.CreateCriteria<Product>()                  .Add(Restrictions.Between("UnitsInStock"' 5' 10))                  .List<Product>();
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: var products = Session.CreateCriteria<Product>()                  .Add(Restrictions.Between("UnitsInStock"' 5' 10))                  .List<Product>();
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: products.Each(p => Assert.IsTrue(p.UnitsInStock >= 5 && p.UnitsInStock <= 10));
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: products.Each(p => Assert.IsTrue(p.UnitsInStock >= 5 && p.UnitsInStock <= 10));
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: _product1.UnitsInStock = 10;
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: _product2.UnitsInStock = 13;
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: _product3.UnitsInStock = 9;
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: var stockLevels = new[] {7' 9' 11' 13};
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: var stockLevels = new[] {7' 9' 11' 13};
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: var stockLevels = new[] {7' 9' 11' 13};
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: var stockLevels = new[] {7' 9' 11' 13};
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,two_restrictions_with_and,The following statement contains a magic number: _product1.AddSource(new SupplierBuilder().Build()' 10);
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,two_restrictions_with_and,The following statement contains a magic number: _product1.UnitsInStock = 5;
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,more_than_two_restrictions_with_and,The following statement contains a magic number: _product1.AddSource(new SupplierBuilder().Build()' 10);
Magic Number,NHibernateWorkshop.Querying.Criteria,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\Criteria\Restricting.cs,more_than_two_restrictions_with_and,The following statement contains a magic number: _product1.UnitsInStock = 5;
Magic Number,NHibernateWorkshop.Querying.HQL,AggregateFunctions,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\AggregateFunctions.cs,count,The following statement contains a magic number: var count = Session.CreateQuery("select count(p) from Product p where p.UnitsInStock > :minimum")                  .SetParameter("minimum"' 10)                  .UniqueResult();
Magic Number,NHibernateWorkshop.Querying.HQL,AggregateFunctions,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\AggregateFunctions.cs,count,The following statement contains a magic number: Assert.AreEqual(_products.Count(p => p.UnitsInStock > 10)' count);
Magic Number,NHibernateWorkshop.Querying.HQL,GroupBy,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\GroupBy.cs,retrieve_product_sales_summaries_of_products_that_sold_at_least_100_items,The following statement contains a magic number: productSalesSummaries.Each(p =>              {                  Assert.AreEqual(GetSalesCountForProductWithId(p.ProductId)' p.ItemsSold);                  Assert.Greater(p.ItemsSold' 100);              });
Magic Number,NHibernateWorkshop.Querying.HQL,Ordering,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Ordering.cs,order_by_own_property,The following statement contains a magic number: var customers = Session.CreateQuery("from Customer c order by c.DiscountPercentage asc")                  .SetMaxResults(10)                  .List<Customer>();
Magic Number,NHibernateWorkshop.Querying.HQL,Ordering,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Ordering.cs,order_by_own_property,The following statement contains a magic number: i < 9
Magic Number,NHibernateWorkshop.Querying.HQL,Ordering,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Ordering.cs,order_by_joined_property,The following statement contains a magic number: var orders = Session.CreateQuery("from Order o inner join fetch o.Customer as customer order by customer.DiscountPercentage desc")                      .SetMaxResults(50)                      .List<Order>();
Magic Number,NHibernateWorkshop.Querying.HQL,Ordering,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Ordering.cs,order_by_joined_property,The following statement contains a magic number: i < 49
Magic Number,NHibernateWorkshop.Querying.HQL,Paging,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Paging.cs,page_through_all_employees,The following statement contains a magic number: const int pageSize = 5;
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product1.UnitsInStock = 10;
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product1.UnitsOnOrder = 10;
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product2.UnitsInStock = 13;
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product2.UnitsOnOrder = 14;
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product3.UnitsInStock = 7;
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product3.UnitsOnOrder = 7;
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product1.UnitsInStock = 10;
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product1.UnitsOnOrder = 10;
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product2.UnitsInStock = 13;
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product2.UnitsOnOrder = 14;
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product3.UnitsInStock = 2;
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product3.UnitsOnOrder = 7;
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: _product1.UnitsInStock = 10;
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: _product2.UnitsInStock = 13;
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: _product3.UnitsInStock = 9;
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: var products = Session.CreateQuery("from Product p where p.UnitsInStock between :min and :max")                  .SetParameter("min"' 5)                  .SetParameter("max"' 10)                  .List<Product>();
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: var products = Session.CreateQuery("from Product p where p.UnitsInStock between :min and :max")                  .SetParameter("min"' 5)                  .SetParameter("max"' 10)                  .List<Product>();
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: products.Each(p => Assert.IsTrue(p.UnitsInStock >= 5 && p.UnitsInStock <= 10));
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: products.Each(p => Assert.IsTrue(p.UnitsInStock >= 5 && p.UnitsInStock <= 10));
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: _product1.UnitsInStock = 10;
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: _product2.UnitsInStock = 13;
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: _product3.UnitsInStock = 9;
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: var stockLevels = new[] {7' 9' 11' 13};
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: var stockLevels = new[] {7' 9' 11' 13};
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: var stockLevels = new[] {7' 9' 11' 13};
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: var stockLevels = new[] {7' 9' 11' 13};
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,two_restrictions_with_and,The following statement contains a magic number: _product1.AddSource(new SupplierBuilder().Build()' 10);
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,two_restrictions_with_and,The following statement contains a magic number: _product1.UnitsInStock = 5;
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,more_than_two_restrictions_with_and,The following statement contains a magic number: _product1.AddSource(new SupplierBuilder().Build()' 10);
Magic Number,NHibernateWorkshop.Querying.HQL,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\HQL\Restricting.cs,more_than_two_restrictions_with_and,The following statement contains a magic number: _product1.UnitsInStock = 5;
Magic Number,NHibernateWorkshop.Querying.LINQ,AggregateFunctions,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\AggregateFunctions.cs,count,The following statement contains a magic number: var count = Session.Query<Product>()                  .Count(p => p.UnitsInStock > 10);
Magic Number,NHibernateWorkshop.Querying.LINQ,AggregateFunctions,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\AggregateFunctions.cs,count,The following statement contains a magic number: Assert.AreEqual(_products.Count(p => p.UnitsInStock > 10)' count);
Magic Number,NHibernateWorkshop.Querying.LINQ,GroupBy,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\GroupBy.cs,retrieve_product_sales_summaries_of_products_that_sold_at_least_100_items,The following statement contains a magic number: var productSalesSummaries = from orderItem in Session.Query<OrderItem>()                                          group orderItem by new { orderItem.Product.Id' orderItem.Product.Name } into grouping                                          where grouping.Sum(o => o.Quantity) > 100                                          select new { ProductId = grouping.Key.Id' ProductName = grouping.Key.Name' ItemsSold = grouping.Sum(o => o.Quantity) };
Magic Number,NHibernateWorkshop.Querying.LINQ,GroupBy,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\GroupBy.cs,retrieve_product_sales_summaries_of_products_that_sold_at_least_100_items,The following statement contains a magic number: productSalesSummaries.Each(p =>              {                  Assert.AreEqual(GetSalesCountForProductWithId(p.ProductId)' p.ItemsSold);                  Assert.Greater(p.ItemsSold' 100);              });
Magic Number,NHibernateWorkshop.Querying.LINQ,Ordering,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Ordering.cs,order_by_own_property,The following statement contains a magic number: var customers = Session.Query<Customer>()                  .OrderBy(c => c.DiscountPercentage)                  .Take(10)                  .ToList();
Magic Number,NHibernateWorkshop.Querying.LINQ,Ordering,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Ordering.cs,order_by_own_property,The following statement contains a magic number: i < 9
Magic Number,NHibernateWorkshop.Querying.LINQ,Ordering,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Ordering.cs,order_by_joined_property,The following statement contains a magic number: var orders = Session.Query<Order>()                  .OrderByDescending(o => o.Customer.DiscountPercentage)                  .Take(50)                  .ToList();
Magic Number,NHibernateWorkshop.Querying.LINQ,Ordering,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Ordering.cs,order_by_joined_property,The following statement contains a magic number: i < 49
Magic Number,NHibernateWorkshop.Querying.LINQ,Paging,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Paging.cs,page_through_all_employees,The following statement contains a magic number: const int pageSize = 5;
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product1.UnitsInStock = 10;
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product1.UnitsOnOrder = 10;
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product2.UnitsInStock = 13;
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product2.UnitsOnOrder = 14;
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product3.UnitsInStock = 7;
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product3.UnitsOnOrder = 7;
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product1.UnitsInStock = 10;
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product1.UnitsOnOrder = 10;
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product2.UnitsInStock = 13;
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product2.UnitsOnOrder = 14;
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product3.UnitsInStock = 2;
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product3.UnitsOnOrder = 7;
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: _product1.UnitsInStock = 10;
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: _product2.UnitsInStock = 13;
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: _product3.UnitsInStock = 9;
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: var products = Session.Query<Product>()                  //.Where(p => p.UnitsInStock.IsBetween(5).And(10)) // this unfortunately throws an exception while generating the query :s                  .Where(p => p.UnitsInStock >= 5 && p.UnitsInStock <= 10) // no way to use between in generated sql as far as i know                  .ToList();
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: var products = Session.Query<Product>()                  //.Where(p => p.UnitsInStock.IsBetween(5).And(10)) // this unfortunately throws an exception while generating the query :s                  .Where(p => p.UnitsInStock >= 5 && p.UnitsInStock <= 10) // no way to use between in generated sql as far as i know                  .ToList();
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: products.Each(p => Assert.IsTrue(p.UnitsInStock >= 5 && p.UnitsInStock <= 10));
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: products.Each(p => Assert.IsTrue(p.UnitsInStock >= 5 && p.UnitsInStock <= 10));
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: _product1.UnitsInStock = 10;
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: _product2.UnitsInStock = 13;
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: _product3.UnitsInStock = 9;
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: var stockLevels = new[] {7' 9' 11' 13};
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: var stockLevels = new[] {7' 9' 11' 13};
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: var stockLevels = new[] {7' 9' 11' 13};
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: var stockLevels = new[] {7' 9' 11' 13};
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,two_restrictions_with_and,The following statement contains a magic number: _product1.AddSource(new SupplierBuilder().Build()' 10);
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,two_restrictions_with_and,The following statement contains a magic number: _product1.UnitsInStock = 5;
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,more_than_two_restrictions_with_and,The following statement contains a magic number: _product1.AddSource(new SupplierBuilder().Build()' 10);
Magic Number,NHibernateWorkshop.Querying.LINQ,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\LINQ\Restricting.cs,more_than_two_restrictions_with_and,The following statement contains a magic number: _product1.UnitsInStock = 5;
Magic Number,NHibernateWorkshop.Querying.QueryOver,AggregateFunctions,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\AggregateFunctions.cs,count,The following statement contains a magic number: var count = Session.QueryOver<Product>()                  .Where(p => p.UnitsInStock > 10)                  .RowCount();
Magic Number,NHibernateWorkshop.Querying.QueryOver,AggregateFunctions,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\AggregateFunctions.cs,count,The following statement contains a magic number: Assert.AreEqual(_products.Count(p => p.UnitsInStock > 10)' count);
Magic Number,NHibernateWorkshop.Querying.QueryOver,DetachedQueryOverVsQueryOver,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\DetachedQueryOverVsQueryOver.cs,detached_queryover_can_be_created_outside_of_session_scope,The following statement contains a magic number: var query = NHibernate.Criterion.QueryOver.Of<Customer>()                  .Where(c => c.DiscountPercentage == 0.2d);
Magic Number,NHibernateWorkshop.Querying.QueryOver,GroupBy,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\GroupBy.cs,retrieve_product_sales_summaries_of_products_that_sold_at_least_100_items,The following statement contains a magic number: var productSalesSummaries = Session.QueryOver<OrderItem>()                  .JoinAlias(o => o.Product' () => product)                  .Select(Projections.ProjectionList()                      .Add(Projections.Group(() => product.Id).As("ProductId"))                      .Add(Projections.Group(() => product.Name).As("ProductName"))                      .Add(Projections.Sum<OrderItem>(o => o.Quantity).As("ItemsSold")))                  .Where(Restrictions.Gt(Projections.Sum<OrderItem>(o => o.Quantity)' 100))                  .TransformUsing(new AliasToBeanResultTransformer(typeof(ProductSalesSummary)))                  .List<ProductSalesSummary>();
Magic Number,NHibernateWorkshop.Querying.QueryOver,GroupBy,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\GroupBy.cs,retrieve_product_sales_summaries_of_products_that_sold_at_least_100_items,The following statement contains a magic number: productSalesSummaries.Each(p =>              {                  Assert.AreEqual(GetSalesCountForProductWithId(p.ProductId)' p.ItemsSold);                  Assert.Greater(p.ItemsSold' 100);              });
Magic Number,NHibernateWorkshop.Querying.QueryOver,Ordering,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Ordering.cs,order_by_own_property,The following statement contains a magic number: var customers = Session.QueryOver<Customer>()                  .OrderBy(c => c.DiscountPercentage).Asc                  .Take(10)                  .List();
Magic Number,NHibernateWorkshop.Querying.QueryOver,Ordering,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Ordering.cs,order_by_own_property,The following statement contains a magic number: i < 9
Magic Number,NHibernateWorkshop.Querying.QueryOver,Ordering,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Ordering.cs,order_by_joined_property,The following statement contains a magic number: var orders = Session.QueryOver<Order>()                  .JoinQueryOver(o => o.Customer)                  .OrderBy(c => c.DiscountPercentage).Desc                  .Take(50)                  .List();
Magic Number,NHibernateWorkshop.Querying.QueryOver,Ordering,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Ordering.cs,order_by_joined_property,The following statement contains a magic number: i < 49
Magic Number,NHibernateWorkshop.Querying.QueryOver,Paging,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Paging.cs,page_through_all_employees,The following statement contains a magic number: const int pageSize = 5;
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product1.UnitsInStock = 10;
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product1.UnitsOnOrder = 10;
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product2.UnitsInStock = 13;
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product2.UnitsOnOrder = 14;
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product3.UnitsInStock = 7;
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_properties_are_equal,The following statement contains a magic number: _product3.UnitsOnOrder = 7;
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product1.UnitsInStock = 10;
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product1.UnitsOnOrder = 10;
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product2.UnitsInStock = 13;
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product2.UnitsOnOrder = 14;
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product3.UnitsInStock = 2;
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_one_property_is_greater_than_the_other,The following statement contains a magic number: _product3.UnitsOnOrder = 7;
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: _product1.UnitsInStock = 10;
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: _product2.UnitsInStock = 13;
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: _product3.UnitsInStock = 9;
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: var products = Session.QueryOver<Product>()                  .WhereRestrictionOn(p => p.UnitsInStock).IsBetween(5).And(10)                  .List();
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: var products = Session.QueryOver<Product>()                  .WhereRestrictionOn(p => p.UnitsInStock).IsBetween(5).And(10)                  .List();
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: products.Each(p => Assert.IsTrue(p.UnitsInStock >= 5 && p.UnitsInStock <= 10));
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_one_property_has_a_value_between_a_given_range,The following statement contains a magic number: products.Each(p => Assert.IsTrue(p.UnitsInStock >= 5 && p.UnitsInStock <= 10));
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: _product1.UnitsInStock = 10;
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: _product2.UnitsInStock = 13;
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: _product3.UnitsInStock = 9;
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: var stockLevels = new[] {7' 9' 11' 13};
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: var stockLevels = new[] {7' 9' 11' 13};
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: var stockLevels = new[] {7' 9' 11' 13};
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,where_one_property_has_a_value_in_a_given_set,The following statement contains a magic number: var stockLevels = new[] {7' 9' 11' 13};
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,two_restrictions_with_and,The following statement contains a magic number: _product1.AddSource(new SupplierBuilder().Build()' 10);
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,two_restrictions_with_and,The following statement contains a magic number: _product1.UnitsInStock = 5;
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,more_than_two_restrictions_with_and,The following statement contains a magic number: _product1.AddSource(new SupplierBuilder().Build()' 10);
Magic Number,NHibernateWorkshop.Querying.QueryOver,Restricting,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\Querying\QueryOver\Restricting.cs,more_than_two_restrictions_with_and,The following statement contains a magic number: _product1.UnitsInStock = 5;
Magic Number,NHibernateWorkshop.SessionFactoryBuilders,SqlServerFluentSessionFactoryBuilder,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\SessionFactoryBuilders\SqlServerFluentSessionFactoryBuilder.cs,BuildSessionFactory,The following statement contains a magic number: return Fluently.Configure()                  .Database(MsSqlConfiguration                      .MsSql2008                      .ConnectionString("Server=localhost;initial catalog=NHibernateWorkshop;Integrated Security=SSPI")                      .ShowSql()                      .FormatSql()                      .AdoNetBatchSize(100))                  .Cache(cache => cache.UseQueryCache().UseSecondLevelCache().ProviderClass("NHibernate.Cache.HashtableCacheProvider' NHibernate"))                  .Mappings(m => m.AutoMappings.Add(CreateAutomappings))                  .ExposeConfiguration(cfg => cfg.SetProperty("generate_statistics"' "true"))                  .ExposeConfiguration(cfg => new SchemaExport(cfg).Create(true' true))                  .BuildSessionFactory();
Magic Number,NHibernateWorkshop.SessionFactoryBuilders,SQLiteFluentSessionFactoryBuilder,D:\research\architectureSmells\repos\davybrion_NHibernateWorkshop\NHibernateWorkshop\SessionFactoryBuilders\SQLiteFluentSessionFactoryBuilder.cs,BuildSessionFactory,The following statement contains a magic number: return Fluently.Configure()                  .Database(SQLiteConfiguration                      .Standard.UsingFile(dbFile)                      .ShowSql()                      .FormatSql()                      .AdoNetBatchSize(100))                  .Cache(cache => cache.UseQueryCache().UseSecondLevelCache().ProviderClass("NHibernate.Cache.HashtableCacheProvider' NHibernate"))                  .Mappings(m => m.AutoMappings.Add(CreateAutomappings))                  .ExposeConfiguration(cfg => cfg.SetProperty("generate_statistics"' "true"))                  .ExposeConfiguration(cfg => new SchemaExport(cfg).Create(true' true))                  .BuildSessionFactory();
