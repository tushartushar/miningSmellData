Implementation smell,Namespace,Class,File,Method,Description
Long Statement,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_SumOfStepDistancesCorrect,The length of the statement  "            var request = new DirectionsRequest { Origin = "285 Bedford Ave' Brooklyn' NY' USA"' Destination = "185 Broadway Ave' Manhattan' NY' USA" }; " is 140.
Long Statement,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_WithWayPoints,The length of the statement  "            var request = new DirectionsRequest { Origin = "NYC' USA"' Destination = "Miami' USA"' Waypoints = new string[] { "Philadelphia' USA" }' OptimizeWaypoints = true }; " is 164.
Long Statement,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,DirectionsAsync_SumOfStepDistancesCorrect,The length of the statement  "            var request = new DirectionsRequest { Origin = "285 Bedford Ave' Brooklyn' NY' USA"' Destination = "185 Broadway Ave' Manhattan' NY' USA" }; " is 140.
Long Statement,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_CanGetDurationWithTraffic,The length of the statement  "            Assert.AreNotEqual(result.Routes.First().Legs.Sum(s => s.Duration.Value.TotalSeconds)' result.Routes.First().Legs.Sum(s => s.DurationInTraffic.Value.TotalSeconds)); " is 164.
Long Statement,GoogleMapsApi.Test.IntegrationTests,GeocodingTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\GeocodingTests.cs,Geocoding_InvalidClientCredentials_Throws,The length of the statement  "            var request = new GeocodingRequest { Address = "285 Bedford Ave' Brooklyn' NY 11211' USA"' ClientID = "gme-ThisIsAUnitTest"' SigningKey = "AAECAwQFBgcICQoLDA0ODxAREhM=" }; " is 171.
Long Statement,GoogleMapsApi.Test.IntegrationTests,GeocodingTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\GeocodingTests.cs,GeocodingAsync_InvalidClientCredentials_Throws,The length of the statement  "            var request = new GeocodingRequest { Address = "285 Bedford Ave' Brooklyn' NY 11211' USA"' ClientID = "gme-ThisIsAUnitTest"' SigningKey = "AAECAwQFBgcICQoLDA0ODxAREhM=" }; " is 171.
Long Statement,GoogleMapsApi.Test.IntegrationTests,PlacesNearByTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesNearByTests.cs,TestNearbySearchPagination,The length of the statement  "            //make sure the result from the first page isn't on the second page to confirm we actually got a second page with new results " is 125.
Long Statement,GoogleMapsApi.Test.IntegrationTests,PlacesSearchTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesSearchTests.cs,TestNearbySearchPagination,The length of the statement  "            //make sure the result from the first page isn't on the second page to confirm we actually got a second page with new results " is 125.
Long Statement,GoogleMapsApi.Test.IntegrationTests,PlacesDetailsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesDetailsTests.cs,ReturnsNotFoundForWrongReferenceString,The length of the statement  "                // Needs to be a correct looking reference. 1 character too short or long and google will return INVALID_REQUEST instead. " is 121.
Long Statement,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,BasicTest,The length of the statement  "									"&markers=color%3Ablue%7Clabel%3AS%7C40.702147%2C-74.015794&markers=color%3Agreen%7Clabel%3AG%7C40.711614%2C-74.012318" + " is 121.
Magic Number,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_SumOfStepDistancesCorrect,The following statement contains a magic number: Assert.Greater(result.Routes.First().Legs.First().Steps.Sum(s => s.Distance.Value)' 100);
Magic Number,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_WithWayPoints,The following statement contains a magic number: Assert.AreEqual(156097' result.Routes.First().Legs.First().Steps.Sum(s => s.Distance.Value)' 10 * 1000);
Magic Number,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_WithWayPoints,The following statement contains a magic number: Assert.AreEqual(156097' result.Routes.First().Legs.First().Steps.Sum(s => s.Distance.Value)' 10 * 1000);
Magic Number,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_WithWayPoints,The following statement contains a magic number: Assert.AreEqual(156097' result.Routes.First().Legs.First().Steps.Sum(s => s.Distance.Value)' 10 * 1000);
Magic Number,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_Correct_OverviewPath,The following statement contains a magic number: Assert.AreEqual(122' overviewPath.Points.Count()' 30);
Magic Number,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_Correct_OverviewPath,The following statement contains a magic number: Assert.AreEqual(122' overviewPath.Points.Count()' 30);
Magic Number,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,DirectionsAsync_SumOfStepDistancesCorrect,The following statement contains a magic number: Assert.Greater(result.Routes.First().Legs.First().Steps.Sum(s => s.Distance.Value)' 100);
Magic Number,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_VerifyBounds,The following statement contains a magic number: Assert.Greater(route.Bounds.NorthEast.Latitude' 50);
Magic Number,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_VerifyBounds,The following statement contains a magic number: Assert.Greater(route.Bounds.NorthEast.Longitude' 3);
Magic Number,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_VerifyBounds,The following statement contains a magic number: Assert.Greater(route.Bounds.SouthWest.Latitude' 50);
Magic Number,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_VerifyBounds,The following statement contains a magic number: Assert.Greater(route.Bounds.SouthWest.Longitude' 3);
Magic Number,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_VerifyBounds,The following statement contains a magic number: Assert.Greater(route.Bounds.Center.Latitude' 50);
Magic Number,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_VerifyBounds,The following statement contains a magic number: Assert.Greater(route.Bounds.Center.Longitude' 3);
Magic Number,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_WithIcons,The following statement contains a magic number: var dep_time = DateTime.Today                              .AddDays(1)                              .AddHours(13);
Magic Number,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_WithRegionSearch,The following statement contains a magic number: var dep_time = DateTime.Today                              .AddDays(1)                              .AddHours(13);
Magic Number,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_CanGetDurationWithTraffic,The following statement contains a magic number: var request = new DirectionsRequest              {                  Origin = "285 Bedford Ave' Brooklyn' NY' USA"'                  Destination = "185 Broadway Ave' Manhattan' NY' USA"'                  DepartureTime = DateTime.Now.Date.AddDays(1).AddHours(8)'                  ApiKey = ApiKey //Duration in traffic requires an API key              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_CanGetLongDistanceTrain,The following statement contains a magic number: var request = new DirectionsRequest              {                  Origin = "zurich airport"'                  Destination = "brig"'                  TravelMode = TravelMode.Transit'                  DepartureTime = new DateTime(2018' 08' 18' 15' 30' 00)              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_CanGetLongDistanceTrain,The following statement contains a magic number: var request = new DirectionsRequest              {                  Origin = "zurich airport"'                  Destination = "brig"'                  TravelMode = TravelMode.Transit'                  DepartureTime = new DateTime(2018' 08' 18' 15' 30' 00)              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_CanGetLongDistanceTrain,The following statement contains a magic number: var request = new DirectionsRequest              {                  Origin = "zurich airport"'                  Destination = "brig"'                  TravelMode = TravelMode.Transit'                  DepartureTime = new DateTime(2018' 08' 18' 15' 30' 00)              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_CanGetLongDistanceTrain,The following statement contains a magic number: var request = new DirectionsRequest              {                  Origin = "zurich airport"'                  Destination = "brig"'                  TravelMode = TravelMode.Transit'                  DepartureTime = new DateTime(2018' 08' 18' 15' 30' 00)              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,DirectionsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DirectionsTests.cs,Directions_CanGetLongDistanceTrain,The following statement contains a magic number: var request = new DirectionsRequest              {                  Origin = "zurich airport"'                  Destination = "brig"'                  TravelMode = TravelMode.Transit'                  DepartureTime = new DateTime(2018' 08' 18' 15' 30' 00)              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,DistanceMatrixTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\DistanceMatrixTests.cs,ShouldReturnValidValueWhenTwoOriginsSpecified,The following statement contains a magic number: Assert.AreEqual(2' result.Rows.Count());
Magic Number,GoogleMapsApi.Test.IntegrationTests,ElevationTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\ElevationTests.cs,Elevation_ReturnsCorrectElevation,The following statement contains a magic number: var request = new ElevationRequest              {                  ApiKey = ApiKey'                  Locations = new[] { new Location(40.7141289' -73.9614074) }              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,ElevationTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\ElevationTests.cs,Elevation_ReturnsCorrectElevation,The following statement contains a magic number: var request = new ElevationRequest              {                  ApiKey = ApiKey'                  Locations = new[] { new Location(40.7141289' -73.9614074) }              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,ElevationTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\ElevationTests.cs,Elevation_ReturnsCorrectElevation,The following statement contains a magic number: Assert.AreEqual(14.78' result.Results.First().Elevation' 1.0);
Magic Number,GoogleMapsApi.Test.IntegrationTests,ElevationTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\ElevationTests.cs,ElevationAsync_ReturnsCorrectElevation,The following statement contains a magic number: var request = new ElevationRequest              {                  ApiKey = ApiKey'                  Locations = new[] { new Location(40.7141289' -73.9614074) }              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,ElevationTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\ElevationTests.cs,ElevationAsync_ReturnsCorrectElevation,The following statement contains a magic number: var request = new ElevationRequest              {                  ApiKey = ApiKey'                  Locations = new[] { new Location(40.7141289' -73.9614074) }              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,ElevationTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\ElevationTests.cs,ElevationAsync_ReturnsCorrectElevation,The following statement contains a magic number: Assert.AreEqual(14.78' result.Results.First().Elevation' 1.0);
Magic Number,GoogleMapsApi.Test.IntegrationTests,GeocodingTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\GeocodingTests.cs,ReverseGeocoding_ReturnsCorrectAddress,The following statement contains a magic number: var request = new GeocodingRequest              {                  ApiKey = ApiKey'                  Location = new Location(40.7141289' -73.9614074)              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,GeocodingTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\GeocodingTests.cs,ReverseGeocoding_ReturnsCorrectAddress,The following statement contains a magic number: var request = new GeocodingRequest              {                  ApiKey = ApiKey'                  Location = new Location(40.7141289' -73.9614074)              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,GeocodingTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\GeocodingTests.cs,ReverseGeocodingAsync_ReturnsCorrectAddress,The following statement contains a magic number: var request = new GeocodingRequest              {                  ApiKey = ApiKey'                  Location = new Location(40.7141289' -73.9614074)              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,GeocodingTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\GeocodingTests.cs,ReverseGeocodingAsync_ReturnsCorrectAddress,The following statement contains a magic number: var request = new GeocodingRequest              {                  ApiKey = ApiKey'                  Location = new Location(40.7141289' -73.9614074)              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesNearByTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesNearByTests.cs,ReturnsNearbySearchRequest,The following statement contains a magic number: var request = new PlacesNearByRequest              {                  ApiKey = ApiKey'                  Keyword = "pizza"'                  Radius = 10000'                  Location = new Location(47.611162' -122.337644)' //Seattle' Washington' USA              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesNearByTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesNearByTests.cs,ReturnsNearbySearchRequest,The following statement contains a magic number: var request = new PlacesNearByRequest              {                  ApiKey = ApiKey'                  Keyword = "pizza"'                  Radius = 10000'                  Location = new Location(47.611162' -122.337644)' //Seattle' Washington' USA              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesNearByTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesNearByTests.cs,ReturnsNearbySearchRequest,The following statement contains a magic number: var request = new PlacesNearByRequest              {                  ApiKey = ApiKey'                  Keyword = "pizza"'                  Radius = 10000'                  Location = new Location(47.611162' -122.337644)' //Seattle' Washington' USA              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesNearByTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesNearByTests.cs,ReturnsNearbySearchRequest,The following statement contains a magic number: Assert.IsTrue(result.Results.Count() > 5);
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesNearByTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesNearByTests.cs,TestNearbySearchType,The following statement contains a magic number: var request = new PlacesNearByRequest              {                  ApiKey = ApiKey'                  Radius = 10000'                  Location = new Location(40.6782552' -73.8671761)' // New York                  Type = "airport"'              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesNearByTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesNearByTests.cs,TestNearbySearchType,The following statement contains a magic number: var request = new PlacesNearByRequest              {                  ApiKey = ApiKey'                  Radius = 10000'                  Location = new Location(40.6782552' -73.8671761)' // New York                  Type = "airport"'              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesNearByTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesNearByTests.cs,TestNearbySearchType,The following statement contains a magic number: var request = new PlacesNearByRequest              {                  ApiKey = ApiKey'                  Radius = 10000'                  Location = new Location(40.6782552' -73.8671761)' // New York                  Type = "airport"'              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesNearByTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesNearByTests.cs,TestNearbySearchPagination,The following statement contains a magic number: var request = new PlacesNearByRequest              {                  ApiKey = ApiKey'                  Keyword = "pizza"'                  Radius = 10000'                  Location = new Location(47.611162' -122.337644)' //Seattle' Washington' USA              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesNearByTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesNearByTests.cs,TestNearbySearchPagination,The following statement contains a magic number: var request = new PlacesNearByRequest              {                  ApiKey = ApiKey'                  Keyword = "pizza"'                  Radius = 10000'                  Location = new Location(47.611162' -122.337644)' //Seattle' Washington' USA              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesNearByTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesNearByTests.cs,TestNearbySearchPagination,The following statement contains a magic number: var request = new PlacesNearByRequest              {                  ApiKey = ApiKey'                  Keyword = "pizza"'                  Radius = 10000'                  Location = new Location(47.611162' -122.337644)' //Seattle' Washington' USA              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesNearByTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesNearByTests.cs,TestNearbySearchPagination,The following statement contains a magic number: Assert.IsTrue(result.Results.Count() == 20);
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesNearByTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesNearByTests.cs,TestNearbySearchPagination,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesNearByTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesNearByTests.cs,TestNearbySearchPagination,The following statement contains a magic number: request = new PlacesNearByRequest              {                  ApiKey = ApiKey'                  Keyword = "pizza"'                  Radius = 10000'                  Location = new Location(47.611162' -122.337644)' //Seattle' Washington' USA                  PageToken = result.NextPage              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesNearByTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesNearByTests.cs,TestNearbySearchPagination,The following statement contains a magic number: request = new PlacesNearByRequest              {                  ApiKey = ApiKey'                  Keyword = "pizza"'                  Radius = 10000'                  Location = new Location(47.611162' -122.337644)' //Seattle' Washington' USA                  PageToken = result.NextPage              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesNearByTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesNearByTests.cs,TestNearbySearchPagination,The following statement contains a magic number: request = new PlacesNearByRequest              {                  ApiKey = ApiKey'                  Keyword = "pizza"'                  Radius = 10000'                  Location = new Location(47.611162' -122.337644)' //Seattle' Washington' USA                  PageToken = result.NextPage              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesSearchTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesSearchTests.cs,ReturnsNearbySearchRequest,The following statement contains a magic number: var request = new PlacesRequest              {                  ApiKey = ApiKey'                  Keyword = "pizza"'                  Radius = 10000'                  Location = new Location(47.611162' -122.337644)' //Seattle' Washington' USA              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesSearchTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesSearchTests.cs,ReturnsNearbySearchRequest,The following statement contains a magic number: var request = new PlacesRequest              {                  ApiKey = ApiKey'                  Keyword = "pizza"'                  Radius = 10000'                  Location = new Location(47.611162' -122.337644)' //Seattle' Washington' USA              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesSearchTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesSearchTests.cs,ReturnsNearbySearchRequest,The following statement contains a magic number: var request = new PlacesRequest              {                  ApiKey = ApiKey'                  Keyword = "pizza"'                  Radius = 10000'                  Location = new Location(47.611162' -122.337644)' //Seattle' Washington' USA              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesSearchTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesSearchTests.cs,ReturnsNearbySearchRequest,The following statement contains a magic number: Assert.IsTrue(result.Results.Count() > 5);
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesSearchTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesSearchTests.cs,TestNearbySearchType,The following statement contains a magic number: var request = new PlacesRequest              {                  ApiKey = ApiKey'                  Radius = 10000'                  Location = new Location(40.6782552' -73.8671761)' // New York                  Type = "airport"              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesSearchTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesSearchTests.cs,TestNearbySearchType,The following statement contains a magic number: var request = new PlacesRequest              {                  ApiKey = ApiKey'                  Radius = 10000'                  Location = new Location(40.6782552' -73.8671761)' // New York                  Type = "airport"              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesSearchTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesSearchTests.cs,TestNearbySearchType,The following statement contains a magic number: var request = new PlacesRequest              {                  ApiKey = ApiKey'                  Radius = 10000'                  Location = new Location(40.6782552' -73.8671761)' // New York                  Type = "airport"              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesSearchTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesSearchTests.cs,TestNearbySearchPagination,The following statement contains a magic number: var request = new PlacesRequest              {                  ApiKey = ApiKey'                  Keyword = "pizza"'                  Radius = 10000'                  Location = new Location(47.611162' -122.337644)' //Seattle' Washington' USA              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesSearchTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesSearchTests.cs,TestNearbySearchPagination,The following statement contains a magic number: var request = new PlacesRequest              {                  ApiKey = ApiKey'                  Keyword = "pizza"'                  Radius = 10000'                  Location = new Location(47.611162' -122.337644)' //Seattle' Washington' USA              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesSearchTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesSearchTests.cs,TestNearbySearchPagination,The following statement contains a magic number: var request = new PlacesRequest              {                  ApiKey = ApiKey'                  Keyword = "pizza"'                  Radius = 10000'                  Location = new Location(47.611162' -122.337644)' //Seattle' Washington' USA              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesSearchTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesSearchTests.cs,TestNearbySearchPagination,The following statement contains a magic number: Assert.IsTrue(result.Results.Count() == 20);
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesSearchTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesSearchTests.cs,TestNearbySearchPagination,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesSearchTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesSearchTests.cs,TestNearbySearchPagination,The following statement contains a magic number: request = new PlacesRequest              {                  ApiKey = ApiKey'                  Keyword = "pizza"'                  Radius = 10000'                  Location = new Location(47.611162' -122.337644)' //Seattle' Washington' USA                  PageToken = result.NextPage              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesSearchTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesSearchTests.cs,TestNearbySearchPagination,The following statement contains a magic number: request = new PlacesRequest              {                  ApiKey = ApiKey'                  Keyword = "pizza"'                  Radius = 10000'                  Location = new Location(47.611162' -122.337644)' //Seattle' Washington' USA                  PageToken = result.NextPage              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesSearchTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesSearchTests.cs,TestNearbySearchPagination,The following statement contains a magic number: request = new PlacesRequest              {                  ApiKey = ApiKey'                  Keyword = "pizza"'                  Radius = 10000'                  Location = new Location(47.611162' -122.337644)' //Seattle' Washington' USA                  PageToken = result.NextPage              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesDetailsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesDetailsTests.cs,GetMyPlaceId,The following statement contains a magic number: var request = new Entities.Places.Request.PlacesRequest()                  {                      ApiKey = ApiKey'                      Name = "My Place Bar & Restaurant"'                      Location = new Location(-31.954453' 115.862717)'                      RankBy = Entities.Places.Request.RankBy.Distance'                  };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlacesDetailsTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlacesDetailsTests.cs,GetMyPlaceId,The following statement contains a magic number: var request = new Entities.Places.Request.PlacesRequest()                  {                      ApiKey = ApiKey'                      Name = "My Place Bar & Restaurant"'                      Location = new Location(-31.954453' 115.862717)'                      RankBy = Entities.Places.Request.RankBy.Distance'                  };
Magic Number,GoogleMapsApi.Test.IntegrationTests,TimeZoneTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\TimeZoneTests.cs,TimeZone_Correct_OverviewPath,The following statement contains a magic number: request.Location = new Location(55.866413' 12.501063);
Magic Number,GoogleMapsApi.Test.IntegrationTests,TimeZoneTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\TimeZoneTests.cs,TimeZone_Correct_OverviewPath,The following statement contains a magic number: request.Location = new Location(55.866413' 12.501063);
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlaceAutocompleteTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlaceAutocompleteTests.cs,ReturnsNoResults,The following statement contains a magic number: var request = new PlaceAutocompleteRequest              {                  ApiKey = base.ApiKey'                  Input = "zxqtrb"'                  Location = new Entities.Common.Location(53.4635332' -2.2419169)'                  Radius = 30000              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlaceAutocompleteTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlaceAutocompleteTests.cs,ReturnsNoResults,The following statement contains a magic number: var request = new PlaceAutocompleteRequest              {                  ApiKey = base.ApiKey'                  Input = "zxqtrb"'                  Location = new Entities.Common.Location(53.4635332' -2.2419169)'                  Radius = 30000              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlaceAutocompleteTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlaceAutocompleteTests.cs,ReturnsNoResults,The following statement contains a magic number: var request = new PlaceAutocompleteRequest              {                  ApiKey = base.ApiKey'                  Input = "zxqtrb"'                  Location = new Entities.Common.Location(53.4635332' -2.2419169)'                  Radius = 30000              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlaceAutocompleteTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlaceAutocompleteTests.cs,OffsetTest,The following statement contains a magic number: var request = new PlaceAutocompleteRequest              {                  ApiKey = base.ApiKey'                  Input = "abbeyjibberish"'                  Location = new Entities.Common.Location(53.4635332' -2.2419169)'                  Radius = 30000              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlaceAutocompleteTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlaceAutocompleteTests.cs,OffsetTest,The following statement contains a magic number: var request = new PlaceAutocompleteRequest              {                  ApiKey = base.ApiKey'                  Input = "abbeyjibberish"'                  Location = new Entities.Common.Location(53.4635332' -2.2419169)'                  Radius = 30000              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlaceAutocompleteTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlaceAutocompleteTests.cs,OffsetTest,The following statement contains a magic number: var request = new PlaceAutocompleteRequest              {                  ApiKey = base.ApiKey'                  Input = "abbeyjibberish"'                  Location = new Entities.Common.Location(53.4635332' -2.2419169)'                  Radius = 30000              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlaceAutocompleteTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlaceAutocompleteTests.cs,OffsetTest,The following statement contains a magic number: var offsetRequest = new PlaceAutocompleteRequest              {                  ApiKey = base.ApiKey'                  Input = "abbeyjibberish"'                  Offset = 5'                  Location = new Entities.Common.Location(53.4635332' -2.2419169)              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlaceAutocompleteTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlaceAutocompleteTests.cs,OffsetTest,The following statement contains a magic number: var offsetRequest = new PlaceAutocompleteRequest              {                  ApiKey = base.ApiKey'                  Input = "abbeyjibberish"'                  Offset = 5'                  Location = new Entities.Common.Location(53.4635332' -2.2419169)              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlaceAutocompleteTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlaceAutocompleteTests.cs,OffsetTest,The following statement contains a magic number: var offsetRequest = new PlaceAutocompleteRequest              {                  ApiKey = base.ApiKey'                  Input = "abbeyjibberish"'                  Offset = 5'                  Location = new Entities.Common.Location(53.4635332' -2.2419169)              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlaceAutocompleteTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlaceAutocompleteTests.cs,TypeTest,The following statement contains a magic number: var request = new PlaceAutocompleteRequest              {                  ApiKey = base.ApiKey'                  Input = "abb"'                  Type = "geocode"'                  Location = new Entities.Common.Location(53.4635332' -2.2419169)'                  Radius = 30000              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlaceAutocompleteTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlaceAutocompleteTests.cs,TypeTest,The following statement contains a magic number: var request = new PlaceAutocompleteRequest              {                  ApiKey = base.ApiKey'                  Input = "abb"'                  Type = "geocode"'                  Location = new Entities.Common.Location(53.4635332' -2.2419169)'                  Radius = 30000              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlaceAutocompleteTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlaceAutocompleteTests.cs,TypeTest,The following statement contains a magic number: var request = new PlaceAutocompleteRequest              {                  ApiKey = base.ApiKey'                  Input = "abb"'                  Type = "geocode"'                  Location = new Entities.Common.Location(53.4635332' -2.2419169)'                  Radius = 30000              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlaceAutocompleteTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlaceAutocompleteTests.cs,CheckForExpectedRoad,The following statement contains a magic number: var request = new PlaceAutocompleteRequest              {                  ApiKey = base.ApiKey'                  Input = aSearch'                  Location = new GoogleMapsApi.Entities.Common.Location(53.4635332' -2.2419169)'                  Radius = 30000              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlaceAutocompleteTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlaceAutocompleteTests.cs,CheckForExpectedRoad,The following statement contains a magic number: var request = new PlaceAutocompleteRequest              {                  ApiKey = base.ApiKey'                  Input = aSearch'                  Location = new GoogleMapsApi.Entities.Common.Location(53.4635332' -2.2419169)'                  Radius = 30000              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlaceAutocompleteTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlaceAutocompleteTests.cs,CheckForExpectedRoad,The following statement contains a magic number: var request = new PlaceAutocompleteRequest              {                  ApiKey = base.ApiKey'                  Input = aSearch'                  Location = new GoogleMapsApi.Entities.Common.Location(53.4635332' -2.2419169)'                  Radius = 30000              };
Magic Number,GoogleMapsApi.Test.IntegrationTests,PlaceAutocompleteTests,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\IntegrationTests\PlaceAutocompleteTests.cs,CheckLargerThenEarthRadius,The following statement contains a magic number: var request = CreatePlaceAutocompleteRequest("RIX"' 30000000);
Magic Number,GoogleMapsApi.Test,LocationToStringTest,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\LocationToStringTest.cs,WhenNearZeroLongitude_ExpectCorrectToString,The following statement contains a magic number: var location = new Location(57.231d' 0.000009d);
Magic Number,GoogleMapsApi.Test,LocationToStringTest,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\LocationToStringTest.cs,WhenNearZeroLongitude_ExpectCorrectToString,The following statement contains a magic number: var location = new Location(57.231d' 0.000009d);
Magic Number,GoogleMapsApi.Test,LocationToStringTest,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\LocationToStringTest.cs,WhenZeroLongitude_ExpectCorrectToString,The following statement contains a magic number: var location = new Location(52.123123d' 0.0d);
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,BasicTest,The following statement contains a magic number: StaticMapRequest request = new StaticMapRequest(  				new AddressLocation("Brooklyn Bridge'New York'NY")' 14' new ImageSize(512' 512))  				{  					MapType = MapType.Roadmap'  					Markers =  						new List<Marker>  							{  								new Marker  									{  										Style = new MarkerStyle { Color = "blue"' Label = "S" }'  										Locations = new List<ILocationString> { new Location(40.702147' -74.015794) }  									}'  								new Marker  									{  										Style = new MarkerStyle { Color = "green"' Label = "G" }'  										Locations = new List<ILocationString> { new Location(40.711614' -74.012318) }  									}'  								new Marker  									{  										Style = new MarkerStyle { Color = "red"' Label = "C" }'  										Locations = new List<ILocationString> { new Location(40.718217' -73.998284) }  									}  							}  				};
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,BasicTest,The following statement contains a magic number: StaticMapRequest request = new StaticMapRequest(  				new AddressLocation("Brooklyn Bridge'New York'NY")' 14' new ImageSize(512' 512))  				{  					MapType = MapType.Roadmap'  					Markers =  						new List<Marker>  							{  								new Marker  									{  										Style = new MarkerStyle { Color = "blue"' Label = "S" }'  										Locations = new List<ILocationString> { new Location(40.702147' -74.015794) }  									}'  								new Marker  									{  										Style = new MarkerStyle { Color = "green"' Label = "G" }'  										Locations = new List<ILocationString> { new Location(40.711614' -74.012318) }  									}'  								new Marker  									{  										Style = new MarkerStyle { Color = "red"' Label = "C" }'  										Locations = new List<ILocationString> { new Location(40.718217' -73.998284) }  									}  							}  				};
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,BasicTest,The following statement contains a magic number: StaticMapRequest request = new StaticMapRequest(  				new AddressLocation("Brooklyn Bridge'New York'NY")' 14' new ImageSize(512' 512))  				{  					MapType = MapType.Roadmap'  					Markers =  						new List<Marker>  							{  								new Marker  									{  										Style = new MarkerStyle { Color = "blue"' Label = "S" }'  										Locations = new List<ILocationString> { new Location(40.702147' -74.015794) }  									}'  								new Marker  									{  										Style = new MarkerStyle { Color = "green"' Label = "G" }'  										Locations = new List<ILocationString> { new Location(40.711614' -74.012318) }  									}'  								new Marker  									{  										Style = new MarkerStyle { Color = "red"' Label = "C" }'  										Locations = new List<ILocationString> { new Location(40.718217' -73.998284) }  									}  							}  				};
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,BasicTest,The following statement contains a magic number: StaticMapRequest request = new StaticMapRequest(  				new AddressLocation("Brooklyn Bridge'New York'NY")' 14' new ImageSize(512' 512))  				{  					MapType = MapType.Roadmap'  					Markers =  						new List<Marker>  							{  								new Marker  									{  										Style = new MarkerStyle { Color = "blue"' Label = "S" }'  										Locations = new List<ILocationString> { new Location(40.702147' -74.015794) }  									}'  								new Marker  									{  										Style = new MarkerStyle { Color = "green"' Label = "G" }'  										Locations = new List<ILocationString> { new Location(40.711614' -74.012318) }  									}'  								new Marker  									{  										Style = new MarkerStyle { Color = "red"' Label = "C" }'  										Locations = new List<ILocationString> { new Location(40.718217' -73.998284) }  									}  							}  				};
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,BasicTest,The following statement contains a magic number: StaticMapRequest request = new StaticMapRequest(  				new AddressLocation("Brooklyn Bridge'New York'NY")' 14' new ImageSize(512' 512))  				{  					MapType = MapType.Roadmap'  					Markers =  						new List<Marker>  							{  								new Marker  									{  										Style = new MarkerStyle { Color = "blue"' Label = "S" }'  										Locations = new List<ILocationString> { new Location(40.702147' -74.015794) }  									}'  								new Marker  									{  										Style = new MarkerStyle { Color = "green"' Label = "G" }'  										Locations = new List<ILocationString> { new Location(40.711614' -74.012318) }  									}'  								new Marker  									{  										Style = new MarkerStyle { Color = "red"' Label = "C" }'  										Locations = new List<ILocationString> { new Location(40.718217' -73.998284) }  									}  							}  				};
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,BasicTest,The following statement contains a magic number: StaticMapRequest request = new StaticMapRequest(  				new AddressLocation("Brooklyn Bridge'New York'NY")' 14' new ImageSize(512' 512))  				{  					MapType = MapType.Roadmap'  					Markers =  						new List<Marker>  							{  								new Marker  									{  										Style = new MarkerStyle { Color = "blue"' Label = "S" }'  										Locations = new List<ILocationString> { new Location(40.702147' -74.015794) }  									}'  								new Marker  									{  										Style = new MarkerStyle { Color = "green"' Label = "G" }'  										Locations = new List<ILocationString> { new Location(40.711614' -74.012318) }  									}'  								new Marker  									{  										Style = new MarkerStyle { Color = "red"' Label = "C" }'  										Locations = new List<ILocationString> { new Location(40.718217' -73.998284) }  									}  							}  				};
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,BasicTest,The following statement contains a magic number: StaticMapRequest request = new StaticMapRequest(  				new AddressLocation("Brooklyn Bridge'New York'NY")' 14' new ImageSize(512' 512))  				{  					MapType = MapType.Roadmap'  					Markers =  						new List<Marker>  							{  								new Marker  									{  										Style = new MarkerStyle { Color = "blue"' Label = "S" }'  										Locations = new List<ILocationString> { new Location(40.702147' -74.015794) }  									}'  								new Marker  									{  										Style = new MarkerStyle { Color = "green"' Label = "G" }'  										Locations = new List<ILocationString> { new Location(40.711614' -74.012318) }  									}'  								new Marker  									{  										Style = new MarkerStyle { Color = "red"' Label = "C" }'  										Locations = new List<ILocationString> { new Location(40.718217' -73.998284) }  									}  							}  				};
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,BasicTest,The following statement contains a magic number: StaticMapRequest request = new StaticMapRequest(  				new AddressLocation("Brooklyn Bridge'New York'NY")' 14' new ImageSize(512' 512))  				{  					MapType = MapType.Roadmap'  					Markers =  						new List<Marker>  							{  								new Marker  									{  										Style = new MarkerStyle { Color = "blue"' Label = "S" }'  										Locations = new List<ILocationString> { new Location(40.702147' -74.015794) }  									}'  								new Marker  									{  										Style = new MarkerStyle { Color = "green"' Label = "G" }'  										Locations = new List<ILocationString> { new Location(40.711614' -74.012318) }  									}'  								new Marker  									{  										Style = new MarkerStyle { Color = "red"' Label = "C" }'  										Locations = new List<ILocationString> { new Location(40.718217' -73.998284) }  									}  							}  				};
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,BasicTest,The following statement contains a magic number: StaticMapRequest request = new StaticMapRequest(  				new AddressLocation("Brooklyn Bridge'New York'NY")' 14' new ImageSize(512' 512))  				{  					MapType = MapType.Roadmap'  					Markers =  						new List<Marker>  							{  								new Marker  									{  										Style = new MarkerStyle { Color = "blue"' Label = "S" }'  										Locations = new List<ILocationString> { new Location(40.702147' -74.015794) }  									}'  								new Marker  									{  										Style = new MarkerStyle { Color = "green"' Label = "G" }'  										Locations = new List<ILocationString> { new Location(40.711614' -74.012318) }  									}'  								new Marker  									{  										Style = new MarkerStyle { Color = "red"' Label = "C" }'  										Locations = new List<ILocationString> { new Location(40.718217' -73.998284) }  									}  							}  				};
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,AddressTest,The following statement contains a magic number: var request = new StaticMapRequest(new AddressLocation("Berkeley'CA")' 14' new ImageSize(400' 400));
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,AddressTest,The following statement contains a magic number: var request = new StaticMapRequest(new AddressLocation("Berkeley'CA")' 14' new ImageSize(400' 400));
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,AddressTest,The following statement contains a magic number: var request = new StaticMapRequest(new AddressLocation("Berkeley'CA")' 14' new ImageSize(400' 400));
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,ZoomLevels,The following statement contains a magic number: var request = new StaticMapRequest(new Location(40.714728' -73.998672)' 12' new ImageSize(400' 400));
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,ZoomLevels,The following statement contains a magic number: var request = new StaticMapRequest(new Location(40.714728' -73.998672)' 12' new ImageSize(400' 400));
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,ZoomLevels,The following statement contains a magic number: var request = new StaticMapRequest(new Location(40.714728' -73.998672)' 12' new ImageSize(400' 400));
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,ZoomLevels,The following statement contains a magic number: var request = new StaticMapRequest(new Location(40.714728' -73.998672)' 12' new ImageSize(400' 400));
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,ZoomLevels,The following statement contains a magic number: var request = new StaticMapRequest(new Location(40.714728' -73.998672)' 12' new ImageSize(400' 400));
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,ImageSize,The following statement contains a magic number: var request = new StaticMapRequest(new Location(0' 0)' 1' new ImageSize(400' 50));
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,ImageSize,The following statement contains a magic number: var request = new StaticMapRequest(new Location(0' 0)' 1' new ImageSize(400' 50));
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,MapTypes,The following statement contains a magic number: var request = new StaticMapRequest(new Location(40.714728' -73.998672)' 12' new ImageSize(400' 400));
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,MapTypes,The following statement contains a magic number: var request = new StaticMapRequest(new Location(40.714728' -73.998672)' 12' new ImageSize(400' 400));
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,MapTypes,The following statement contains a magic number: var request = new StaticMapRequest(new Location(40.714728' -73.998672)' 12' new ImageSize(400' 400));
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,MapTypes,The following statement contains a magic number: var request = new StaticMapRequest(new Location(40.714728' -73.998672)' 12' new ImageSize(400' 400));
Magic Number,GoogleMapsApi.Test,StaticMaps,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\StaticMaps.cs,MapTypes,The following statement contains a magic number: var request = new StaticMapRequest(new Location(40.714728' -73.998672)' 12' new ImageSize(400' 400));
Magic Number,GoogleMapsApi.Test,UnixTimeConverterTest,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\UnixTimeConverterTest.cs,DateTimeToUnixTimestamp_Zero_ExpectedResult,The following statement contains a magic number: var epoch = new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc);
Magic Number,GoogleMapsApi.Test,UnixTimeConverterTest,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\UnixTimeConverterTest.cs,DateTimeToUnixTimestamp_DST_ExpectedResult,The following statement contains a magic number: var dst = new DateTime(2016' 4' 4' 10' 0' 0' DateTimeKind.Utc);
Magic Number,GoogleMapsApi.Test,UnixTimeConverterTest,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\UnixTimeConverterTest.cs,DateTimeToUnixTimestamp_DST_ExpectedResult,The following statement contains a magic number: var dst = new DateTime(2016' 4' 4' 10' 0' 0' DateTimeKind.Utc);
Magic Number,GoogleMapsApi.Test,UnixTimeConverterTest,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\UnixTimeConverterTest.cs,DateTimeToUnixTimestamp_DST_ExpectedResult,The following statement contains a magic number: var dst = new DateTime(2016' 4' 4' 10' 0' 0' DateTimeKind.Utc);
Magic Number,GoogleMapsApi.Test,UnixTimeConverterTest,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\UnixTimeConverterTest.cs,DateTimeToUnixTimestamp_DST_ExpectedResult,The following statement contains a magic number: var dst = new DateTime(2016' 4' 4' 10' 0' 0' DateTimeKind.Utc);
Magic Number,GoogleMapsApi.Test,UnixTimeConverterTest,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\UnixTimeConverterTest.cs,DateTimeToUnixTimestamp_DST_ExpectedResult,The following statement contains a magic number: const int expected = 1459764000;
Magic Number,GoogleMapsApi.Test,UnixTimeConverterTest,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\UnixTimeConverterTest.cs,DateTimeToUnixTimestamp_NonDST_ExpectedResult,The following statement contains a magic number: var nonDst = new DateTime(2016' 3' 1' 11' 0' 0' DateTimeKind.Utc);
Magic Number,GoogleMapsApi.Test,UnixTimeConverterTest,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\UnixTimeConverterTest.cs,DateTimeToUnixTimestamp_NonDST_ExpectedResult,The following statement contains a magic number: var nonDst = new DateTime(2016' 3' 1' 11' 0' 0' DateTimeKind.Utc);
Magic Number,GoogleMapsApi.Test,UnixTimeConverterTest,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\UnixTimeConverterTest.cs,DateTimeToUnixTimestamp_NonDST_ExpectedResult,The following statement contains a magic number: var nonDst = new DateTime(2016' 3' 1' 11' 0' 0' DateTimeKind.Utc);
Magic Number,GoogleMapsApi.Test,UnixTimeConverterTest,D:\research\architectureSmells\repos\maximn_google-maps\GoogleMapsApi.Test\UnixTimeConverterTest.cs,DateTimeToUnixTimestamp_NonDST_ExpectedResult,The following statement contains a magic number: const int expected = 1456830000;
