Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Bottles.Tests,when_loading_a_single_package,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\AssemblyLoaderTester.cs,load_unsuccessfully_from_file_for_a_new_assembly,The length of the parameter theExceptionFromAssemblyLoading is 31.
Long Statement,Bottles.Tests,when_loading_a_single_package,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\AssemblyLoaderTester.cs,log_successful_registration_of_an_assembly,The length of the statement  "            MockFor<IBottlingDiagnostics>().AssertWasCalled(x => x.LogAssembly(package' assembly' AssemblyLoader.DIRECTLY_REGISTERED_MESSAGE)); " is 131.
Long Statement,Bottles.Tests,when_loading_a_single_package,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\AssemblyLoaderTester.cs,load_unsuccessfully_from_file_for_a_new_assembly,The length of the statement  "            MockFor<IBottlingDiagnostics>().AssertWasCalled(x => x.LogAssemblyFailure(package' "filename.dll"' theExceptionFromAssemblyLoading)); " is 133.
Long Statement,Bottles.Tests,BottleInfoTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\BottleInfoTester.cs,readFiles,The length of the statement  "            ((IPackageInfo)thePackage).ForFiles(BottleFiles.DataFolder' searchString' (name' stream) => list.Add(stream.ReadAllText())); " is 124.
Long Statement,Bottles.Tests,BottleInfoTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\BottleInfoTester.cs,happily_do_nothing_if_caller_requests_a_folder_That_does_not_exist,The length of the statement  "            ((IPackageInfo)thePackage).ForFiles(BottleFiles.DataFolder' join("nonexistent"' "*.xml")' (x' y) => Assert.Fail("Not supposed to call this")); " is 142.
Long Statement,Bottles.Tests,when_reading_a_package_from_a_folder,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\BottleManifestReaderTester.cs,SetUp,The length of the statement  "            thePackage = new PackageManifestReader(new FileSystem()' directory => directory.AppendPath("WebContent")).LoadFromFolder("package1"); " is 133.
Long Statement,Bottles.Tests,when_reading_a_package_from_a_folder,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\BottleManifestReaderTester.cs,has_all_the_dependencies,The length of the statement  "                .ShouldHaveTheSameElementsAs(Dependency.Mandatory("bottle1")' Dependency.Mandatory("bottle2")' Dependency.Optional("bottle3")); " is 127.
Long Statement,Bottles.Tests,when_reading_a_package_from_a_folder_with_a_native_assembly,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\BottleManifestReaderTester.cs,SetUp,The length of the statement  "            thePackage = new PackageManifestReader(new FileSystem()' directory => directory.AppendPath("WebContent")).LoadFromFolder("package1"); " is 133.
Long Statement,Bottles.Tests,BottlingDiagnosticsTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\BottlingDiagnosticsTester.cs,log_a_duplicate_assembly,The length of the statement  "            diagnostics.LogFor(package).FullTraceText().ShouldContain("Assembly 'Duplicate.Assembly' was ignored because it is already loaded"); " is 132.
Long Statement,Bottles.Tests,when_logging_an_assembly,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\BottlingDiagnosticsTester.cs,trace_for_the_package_should_say_the_assembly,The length of the statement  "            diagnostics.LogFor(_bottle).FullTraceText().ShouldContain("Loaded assembly '" + assembly.GetName().FullName + "' v1.0.0.0"); " is 124.
Long Statement,Bottles.Tests.Commands,CreateBottleCommandTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Commands\CreateBottleCommandTester.cs,theManifestFileExists,The length of the statement  "            MockFor<IFileSystem>().Stub(x => x.LoadFromFile<PackageManifest>(theInput.PackageFolder' PackageManifest.FILE)).Return(theManifest); " is 132.
Long Statement,Bottles.Tests.Creation,when_creating_a_bottle_for_all_assemblies_found_and_including_pdbs,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Creation\BottleCreatorTester.cs,should_not_log_assemblies_missing,The length of the statement  "            MockFor<IBottleLogger>().AssertWasNotCalled(x => x.WriteAssembliesNotFound(theAssemblyFiles' theManifest' theInput' theBinFolder)); " is 131.
Long Statement,Bottles.Tests.Creation,when_trying_to_create_a_package_and_not_all_assemblies_are_found,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Creation\BottleCreatorTester.cs,log_the_missing_assemblies,The length of the statement  "            MockFor<IBottleLogger>().AssertWasCalled(x => x.WriteAssembliesNotFound(theAssemblyFiles' theManifest' theInput' theBinFolder)); " is 128.
Long Statement,Bottles.Tests.Creation,when_creating_a_package_for_assemblies_and_native_assemblies,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Creation\BottleCreatorTester.cs,should_not_log_assemblies_missing,The length of the statement  "            MockFor<IBottleLogger>().AssertWasNotCalled(x => x.WriteAssembliesNotFound(theAssemblyFiles' theManifest' theInput' theBinFolder)); " is 131.
Long Statement,Bottles.Tests.Exploding,BottleExploderContext,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Exploding\BottleExploderTester.cs,assertZipFileWasExploded,The length of the statement  "            MockFor<IZipFileService>().AssertWasCalled(x => x.ExtractTo(fileName' directoryName' ExplodeOptions.DeleteDestination)); " is 120.
Long Statement,Bottles.Tests.Exploding,BottleExploderContext,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Exploding\BottleExploderTester.cs,assertZipFileWasNotExploded,The length of the statement  "            MockFor<IZipFileService>().AssertWasNotCalled(x => x.ExtractTo(fileName' directoryName' ExplodeOptions.DeleteDestination)); " is 123.
Long Statement,Bottles.Tests.Exploding,BottleExploderContext,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Exploding\BottleExploderTester.cs,thePackagesAlreadyExplodedAre,The length of the statement  "            MockFor<IFileSystem>().Stub(x => x.ChildDirectoriesFor(BottleFiles.GetExplodedPackagesDirectory(theApplicationDirectory))) " is 122.
Long Statement,Bottles.Tests.Exploding,BottleExploderContext,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Exploding\BottleExploderTester.cs,thePackagesAlreadyExplodedAre,The length of the statement  "            MockFor<IFileSystem>().Stub(x => x.ChildDirectoriesFor(BottleFiles.GetApplicationPackagesDirectory(theApplicationDirectory))) " is 125.
Long Statement,Bottles.Tests.Services,BottleServiceApplicationTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\BottleServiceApplicationTester.cs,blows_up_if_more_than_one_application_source,The length of the statement  "            }).Message.ShouldContain("Found multiple candidates' you may need to specify an explicit selection in the bottle-service.config file."); " is 136.
Long Statement,Bottles.Services.Tests.Remote,BigRemoteServicesIntegrationTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Remote\BigRemoteServicesIntegrationTester.cs,start_with_only_the_folder_name_with_an_IApplicationLoader,The length of the statement  "            var servicePath = ".".ToFullPath().ParentDirectory().ParentDirectory().ParentDirectory().AppendPath("ApplicationLoaderService"); " is 128.
Long Statement,Bottles.Services.Tests.Remote,RemoteServicesProxyTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Remote\RemoteServicesProxyTester.cs,set_properties_on_PackageRegistry_before_loading_the_loader,The length of the statement  "            new RemoteServicesProxy().Start(typeof(SimpleLoader).AssemblyQualifiedName' new Dictionary<string' string>{{"Color"' "Fuschia"}}' null ); " is 137.
Magic Number,Bottles.Tests,BottlingDiagnosticsTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\BottlingDiagnosticsTester.cs,log_execution_that_throws_exception,The following statement contains a magic number: diagnostics.LogExecution(loader' () =>              {                  Thread.Sleep(5);                  throw new ApplicationException("not gonna happen");              });
Magic Number,Bottles.Tests,StubPackageLoader,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\StubPackageLoader.cs,Load,The following statement contains a magic number: Thread.Sleep(101);
Magic Number,Bottles.Tests.Commands,AliasLibraryTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Commands\AliasLibraryTester.cs,remove_an_alias,The following statement contains a magic number: theRegistry.Aliases.ShouldHaveCount(2);
Magic Number,Bottles.Tests.Harness,ServiceFileChecker,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Harness\ServiceFileChecker.cs,WaitForActivated,The following statement contains a magic number: Wait.Until(() => {                  return _directories.All(dir => exists(dir' "activate.txt"));              }' timeoutInMilliseconds:15000);
Magic Number,Bottles.Tests.Harness,ServiceFileChecker,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Harness\ServiceFileChecker.cs,WaitForDeactivated,The following statement contains a magic number: Wait.Until(() =>              {                  return _directories.All(dir => exists(dir' "deactivate.txt"));              }' timeoutInMilliseconds: 15000);
Magic Number,Bottles.Services.Tests.Messaging,MessageWaitConditionTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Messaging\MessageWaitConditionTester.cs,wait_lasts_until_we_get_it,The following statement contains a magic number: Task.Factory.StartNew(() => {                  Thread.Sleep(100);                  condition.Receive(m1);                  Thread.Sleep(100);                  condition.Receive(m2);                  Thread.Sleep(100);                  condition.Receive(m3);                  Thread.Sleep(100);                  condition.Receive(m4);                });
Magic Number,Bottles.Services.Tests.Messaging,MessageWaitConditionTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Messaging\MessageWaitConditionTester.cs,wait_lasts_until_we_get_it,The following statement contains a magic number: Task.Factory.StartNew(() => {                  Thread.Sleep(100);                  condition.Receive(m1);                  Thread.Sleep(100);                  condition.Receive(m2);                  Thread.Sleep(100);                  condition.Receive(m3);                  Thread.Sleep(100);                  condition.Receive(m4);                });
Magic Number,Bottles.Services.Tests.Messaging,MessageWaitConditionTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Messaging\MessageWaitConditionTester.cs,wait_lasts_until_we_get_it,The following statement contains a magic number: Task.Factory.StartNew(() => {                  Thread.Sleep(100);                  condition.Receive(m1);                  Thread.Sleep(100);                  condition.Receive(m2);                  Thread.Sleep(100);                  condition.Receive(m3);                  Thread.Sleep(100);                  condition.Receive(m4);                });
Magic Number,Bottles.Services.Tests.Messaging,MessageWaitConditionTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Messaging\MessageWaitConditionTester.cs,wait_lasts_until_we_get_it,The following statement contains a magic number: Task.Factory.StartNew(() => {                  Thread.Sleep(100);                  condition.Receive(m1);                  Thread.Sleep(100);                  condition.Receive(m2);                  Thread.Sleep(100);                  condition.Receive(m3);                  Thread.Sleep(100);                  condition.Receive(m4);                });
Magic Number,Bottles.Services.Tests.Messaging,RemoteListenerTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Messaging\RemoteListenerTester.cs,can_wait_for_a_condition,The following statement contains a magic number: var m2 = new Message() { Number = 2 };
Magic Number,Bottles.Services.Tests.Messaging,RemoteListenerTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Messaging\RemoteListenerTester.cs,can_wait_for_a_condition,The following statement contains a magic number: var m3 = new Message() { Number = 3 };
Magic Number,Bottles.Services.Tests.Messaging,RemoteListenerTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Messaging\RemoteListenerTester.cs,can_wait_for_a_condition,The following statement contains a magic number: var m4 = new Message() { Number = 4 };
Magic Number,Bottles.Services.Tests.Messaging,RemoteListenerTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Messaging\RemoteListenerTester.cs,can_wait_for_a_condition,The following statement contains a magic number: var result = listener.WaitForMessage<Message>(m => m.Number == 4' () => {                  Task.Factory.StartNew(() =>                  {                      Thread.Sleep(100);                      listener.SendObject(m1);                      Thread.Sleep(100);                      listener.SendObject(m2);                      Thread.Sleep(100);                      listener.SendObject(m3);                      Thread.Sleep(100);                      listener.SendObject(m4);                  });              });
Magic Number,Bottles.Services.Tests.Messaging,RemoteListenerTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Messaging\RemoteListenerTester.cs,can_wait_for_a_condition,The following statement contains a magic number: var result = listener.WaitForMessage<Message>(m => m.Number == 4' () => {                  Task.Factory.StartNew(() =>                  {                      Thread.Sleep(100);                      listener.SendObject(m1);                      Thread.Sleep(100);                      listener.SendObject(m2);                      Thread.Sleep(100);                      listener.SendObject(m3);                      Thread.Sleep(100);                      listener.SendObject(m4);                  });              });
Magic Number,Bottles.Services.Tests.Messaging,RemoteListenerTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Messaging\RemoteListenerTester.cs,can_wait_for_a_condition,The following statement contains a magic number: var result = listener.WaitForMessage<Message>(m => m.Number == 4' () => {                  Task.Factory.StartNew(() =>                  {                      Thread.Sleep(100);                      listener.SendObject(m1);                      Thread.Sleep(100);                      listener.SendObject(m2);                      Thread.Sleep(100);                      listener.SendObject(m3);                      Thread.Sleep(100);                      listener.SendObject(m4);                  });              });
Magic Number,Bottles.Services.Tests.Messaging,RemoteListenerTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Messaging\RemoteListenerTester.cs,can_wait_for_a_condition,The following statement contains a magic number: var result = listener.WaitForMessage<Message>(m => m.Number == 4' () => {                  Task.Factory.StartNew(() =>                  {                      Thread.Sleep(100);                      listener.SendObject(m1);                      Thread.Sleep(100);                      listener.SendObject(m2);                      Thread.Sleep(100);                      listener.SendObject(m3);                      Thread.Sleep(100);                      listener.SendObject(m4);                  });              });
Magic Number,Bottles.Services.Tests.Messaging,RemoteListenerTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Messaging\RemoteListenerTester.cs,can_wait_for_a_condition,The following statement contains a magic number: var result = listener.WaitForMessage<Message>(m => m.Number == 4' () => {                  Task.Factory.StartNew(() =>                  {                      Thread.Sleep(100);                      listener.SendObject(m1);                      Thread.Sleep(100);                      listener.SendObject(m2);                      Thread.Sleep(100);                      listener.SendObject(m3);                      Thread.Sleep(100);                      listener.SendObject(m4);                  });              });
Magic Number,Bottles.Services.Tests.Messaging,WaitTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Messaging\WaitTester.cs,can_really_wait_until_the_condition_passes_in_subsequent_calls,The following statement contains a magic number: Func<bool> condition = () => {                  i++;                  return i > 3;              };
Magic Number,Bottles.Services.Tests.Remote,BigRemoteServicesIntegrationTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Remote\BigRemoteServicesIntegrationTester.cs,coordinate_message_history_via_remote_service,The following statement contains a magic number: EventAggregator.Messaging.WaitForMessage<AllMessagesComplete>(() => runner.SendRemotely(foo)' 60000)                                     .ShouldNotBeNull();
Magic Number,Bottles.Services.Tests.Remote,BigRemoteServicesIntegrationTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Remote\BigRemoteServicesIntegrationTester.cs,spin_up_and_send_and_receive_messages,The following statement contains a magic number: runner.WaitForMessage<TestResponse>(() =>                  {                      runner.SendRemotely(new TestSignal { Number = 3 });                  }).Number.ShouldEqual(3);
Magic Number,Bottles.Services.Tests.Remote,BigRemoteServicesIntegrationTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Remote\BigRemoteServicesIntegrationTester.cs,spin_up_and_send_and_receive_messages,The following statement contains a magic number: runner.WaitForMessage<TestResponse>(() =>                  {                      runner.SendRemotely(new TestSignal { Number = 3 });                  }).Number.ShouldEqual(3);
Magic Number,Bottles.Services.Tests.Remote,BigRemoteServicesIntegrationTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Remote\BigRemoteServicesIntegrationTester.cs,spin_up_and_send_and_receive_messages,The following statement contains a magic number: runner.WaitForMessage<TestResponse>(() =>                  {                      runner.SendRemotely(new TestSignal { Number = 5 });                  }).Number.ShouldEqual(5);
Magic Number,Bottles.Services.Tests.Remote,BigRemoteServicesIntegrationTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Remote\BigRemoteServicesIntegrationTester.cs,spin_up_and_send_and_receive_messages,The following statement contains a magic number: runner.WaitForMessage<TestResponse>(() =>                  {                      runner.SendRemotely(new TestSignal { Number = 5 });                  }).Number.ShouldEqual(5);
Magic Number,Bottles.Services.Tests.Remote,BigRemoteServicesIntegrationTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Remote\BigRemoteServicesIntegrationTester.cs,copy_new_remote_assembly_over_old_assembly_when_copymode_always,The following statement contains a magic number: File.SetLastWriteTime(sampleServiceDll' new DateTime(2014' 01' 01));
Magic Number,Bottles.Services.Tests.Remote,BigRemoteServicesIntegrationTester,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Services\Remote\BigRemoteServicesIntegrationTester.cs,copy_assembly_once_by_default,The following statement contains a magic number: File.SetLastWriteTime(sampleServiceDll' new DateTime(2014' 01' 01));
Magic Number,Bottles.Tests.Zipping,StubZipEntry,D:\research\architectureSmells\repos\DarthFubuMVC_bottles\src\Bottles.Tests\Zipping\ZipFolderRequestTester.cs,GetHashCode,The following statement contains a magic number: return ((File != null ? File.GetHashCode() : 0)*397) ^ (ZipFolder != null ? ZipFolder.GetHashCode() : 0);
