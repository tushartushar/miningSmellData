Implementation smell,Namespace,Class,File,Method,Description
Magic Number,S22.Imap.Test,MessageBuilderTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\MessageBuilderTest.cs,MessageWithMultipleParts,The following statement contains a magic number: Assert.AreEqual<int>(2' m.Attachments.Count);
Magic Number,S22.Imap.Test,MessageBuilderTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\MessageBuilderTest.cs,MessageWithRfc2231Headers,The following statement contains a magic number: Assert.AreEqual<int>(4' m.Attachments.Count);
Magic Number,S22.Imap.Test,MessageBuilderTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\MessageBuilderTest.cs,MessageWithRfc2231Headers,The following statement contains a magic number: Assert.AreEqual<string>(m.Attachments[2].Name' "ほごほげ2.jpeg");
Magic Number,S22.Imap.Test,MessageBuilderTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\MessageBuilderTest.cs,MessageWithRfc2231Headers,The following statement contains a magic number: Assert.AreEqual<string>(m.Attachments[3].Name' "ほごほげ3.jpeg");
Magic Number,S22.Imap.Test,MessageBuilderTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\MessageBuilderTest.cs,ParseAddressListWithMultipleAddresses,The following statement contains a magic number: Assert.AreEqual<int>(3' addr.Length);
Magic Number,S22.Imap.Test,MessageBuilderTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\MessageBuilderTest.cs,ParseAddressListWithMultipleAddresses,The following statement contains a magic number: Assert.AreEqual<string>("mark"' addr[2].DisplayName);
Magic Number,S22.Imap.Test,NtmlTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\NtlmTest.cs,DeserializeType2Version3Message,The following statement contains a magic number: Assert.AreEqual<int>(42009093' (int)msg.Flags);
Magic Number,S22.Imap.Test,NtmlTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\NtlmTest.cs,DeserializeType2Version3Message,The following statement contains a magic number: Assert.AreEqual<short>(3790' msg.OSVersion.BuildNumber);
Magic Number,S22.Imap.Test,NtmlTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\NtlmTest.cs,DeserializeType2Version3Message,The following statement contains a magic number: Assert.AreEqual<short>(5' msg.OSVersion.MajorVersion);
Magic Number,S22.Imap.Test,NtmlTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\NtlmTest.cs,DeserializeType2Version3Message,The following statement contains a magic number: Assert.AreEqual<short>(2' msg.OSVersion.MinorVersion);
Magic Number,S22.Imap.Test,ScramSha1Test,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\ScramSha1Test.cs,VerifyAuthenticationExchange,The following statement contains a magic number: Assert.AreEqual<string>(username' m.Groups[3].ToString());
Magic Number,S22.Imap.Test,ScramSha1Test,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\ScramSha1Test.cs,VerifyAuthenticationExchange,The following statement contains a magic number: Assert.AreEqual<string>(cnonce' m.Groups[4].ToString());
Magic Number,S22.Imap.Test,SearchConditionTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SearchConditionTest.cs,SearchConditions,The following statement contains a magic number: var dict = new Dictionary<string' SearchCondition>() {  				{ "(From \"foo@bar.com\") (Larger 1024)"'  					SearchCondition.From("foo@bar.com").And(SearchCondition.Larger(1024))  				}'  				{ "Or (Unanswered) (Flagged)"'  					SearchCondition.Unanswered().Or(SearchCondition.Flagged())  				}'  				{ "Or ((Subject {12}\r\n重要郵件) (SentBefore \"20-Dec-2012\")) (Unseen)"'  					SearchCondition.Subject("重要郵件").And(SearchCondition  					.SentBefore(new DateTime(2012' 12' 20))).Or(SearchCondition.Unseen())  				}  			};
Magic Number,S22.Imap.Test,SearchConditionTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SearchConditionTest.cs,SearchConditions,The following statement contains a magic number: var dict = new Dictionary<string' SearchCondition>() {  				{ "(From \"foo@bar.com\") (Larger 1024)"'  					SearchCondition.From("foo@bar.com").And(SearchCondition.Larger(1024))  				}'  				{ "Or (Unanswered) (Flagged)"'  					SearchCondition.Unanswered().Or(SearchCondition.Flagged())  				}'  				{ "Or ((Subject {12}\r\n重要郵件) (SentBefore \"20-Dec-2012\")) (Unseen)"'  					SearchCondition.Subject("重要郵件").And(SearchCondition  					.SentBefore(new DateTime(2012' 12' 20))).Or(SearchCondition.Unseen())  				}  			};
Magic Number,S22.Imap.Test,SearchConditionTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SearchConditionTest.cs,SearchConditions,The following statement contains a magic number: var dict = new Dictionary<string' SearchCondition>() {  				{ "(From \"foo@bar.com\") (Larger 1024)"'  					SearchCondition.From("foo@bar.com").And(SearchCondition.Larger(1024))  				}'  				{ "Or (Unanswered) (Flagged)"'  					SearchCondition.Unanswered().Or(SearchCondition.Flagged())  				}'  				{ "Or ((Subject {12}\r\n重要郵件) (SentBefore \"20-Dec-2012\")) (Unseen)"'  					SearchCondition.Subject("重要郵件").And(SearchCondition  					.SentBefore(new DateTime(2012' 12' 20))).Or(SearchCondition.Unseen())  				}  			};
Magic Number,S22.Imap.Test,SearchConditionTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SearchConditionTest.cs,SearchConditions,The following statement contains a magic number: var dict = new Dictionary<string' SearchCondition>() {  				{ "(From \"foo@bar.com\") (Larger 1024)"'  					SearchCondition.From("foo@bar.com").And(SearchCondition.Larger(1024))  				}'  				{ "Or (Unanswered) (Flagged)"'  					SearchCondition.Unanswered().Or(SearchCondition.Flagged())  				}'  				{ "Or ((Subject {12}\r\n重要郵件) (SentBefore \"20-Dec-2012\")) (Unseen)"'  					SearchCondition.Subject("重要郵件").And(SearchCondition  					.SentBefore(new DateTime(2012' 12' 20))).Or(SearchCondition.Unseen())  				}  			};
Magic Number,S22.Imap.Test,SequenceSetTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SequenceSetTest.cs,CollapseOverlappingRanges,The following statement contains a magic number: var list = new List<uint>() { 1' 2' 3' 2' 3' 4 };
Magic Number,S22.Imap.Test,SequenceSetTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SequenceSetTest.cs,CollapseOverlappingRanges,The following statement contains a magic number: var list = new List<uint>() { 1' 2' 3' 2' 3' 4 };
Magic Number,S22.Imap.Test,SequenceSetTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SequenceSetTest.cs,CollapseOverlappingRanges,The following statement contains a magic number: var list = new List<uint>() { 1' 2' 3' 2' 3' 4 };
Magic Number,S22.Imap.Test,SequenceSetTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SequenceSetTest.cs,CollapseOverlappingRanges,The following statement contains a magic number: var list = new List<uint>() { 1' 2' 3' 2' 3' 4 };
Magic Number,S22.Imap.Test,SequenceSetTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SequenceSetTest.cs,CollapseOverlappingRanges,The following statement contains a magic number: var list = new List<uint>() { 1' 2' 3' 2' 3' 4 };
Magic Number,S22.Imap.Test,SequenceSetTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SequenceSetTest.cs,CollapseContiguousRanges,The following statement contains a magic number: var list = new List<uint>() { 1' 2' 3' 4' 5' 6 };
Magic Number,S22.Imap.Test,SequenceSetTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SequenceSetTest.cs,CollapseContiguousRanges,The following statement contains a magic number: var list = new List<uint>() { 1' 2' 3' 4' 5' 6 };
Magic Number,S22.Imap.Test,SequenceSetTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SequenceSetTest.cs,CollapseContiguousRanges,The following statement contains a magic number: var list = new List<uint>() { 1' 2' 3' 4' 5' 6 };
Magic Number,S22.Imap.Test,SequenceSetTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SequenceSetTest.cs,CollapseContiguousRanges,The following statement contains a magic number: var list = new List<uint>() { 1' 2' 3' 4' 5' 6 };
Magic Number,S22.Imap.Test,SequenceSetTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SequenceSetTest.cs,CollapseContiguousRanges,The following statement contains a magic number: var list = new List<uint>() { 1' 2' 3' 4' 5' 6 };
Magic Number,S22.Imap.Test,SequenceSetTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SequenceSetTest.cs,UIDsDoNotOverlapRanges,The following statement contains a magic number: var list = new List<uint>() { 1' 2' 3' 2 };
Magic Number,S22.Imap.Test,SequenceSetTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SequenceSetTest.cs,UIDsDoNotOverlapRanges,The following statement contains a magic number: var list = new List<uint>() { 1' 2' 3' 2 };
Magic Number,S22.Imap.Test,SequenceSetTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SequenceSetTest.cs,UIDsDoNotOverlapRanges,The following statement contains a magic number: var list = new List<uint>() { 1' 2' 3' 2 };
Magic Number,S22.Imap.Test,SequenceSetTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SequenceSetTest.cs,RangesDoNotOverlapUIDs,The following statement contains a magic number: var list = new List<uint>() { 2' 1' 2' 3 };
Magic Number,S22.Imap.Test,SequenceSetTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SequenceSetTest.cs,RangesDoNotOverlapUIDs,The following statement contains a magic number: var list = new List<uint>() { 2' 1' 2' 3 };
Magic Number,S22.Imap.Test,SequenceSetTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SequenceSetTest.cs,RangesDoNotOverlapUIDs,The following statement contains a magic number: var list = new List<uint>() { 2' 1' 2' 3 };
Magic Number,S22.Imap.Test,SequenceSetTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SequenceSetTest.cs,RangesAndUIDs,The following statement contains a magic number: var list = new List<uint>() { 1' 3' 4' 5' 7 };
Magic Number,S22.Imap.Test,SequenceSetTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SequenceSetTest.cs,RangesAndUIDs,The following statement contains a magic number: var list = new List<uint>() { 1' 3' 4' 5' 7 };
Magic Number,S22.Imap.Test,SequenceSetTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SequenceSetTest.cs,RangesAndUIDs,The following statement contains a magic number: var list = new List<uint>() { 1' 3' 4' 5' 7 };
Magic Number,S22.Imap.Test,SequenceSetTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SequenceSetTest.cs,RangesAndUIDs,The following statement contains a magic number: var list = new List<uint>() { 1' 3' 4' 5' 7 };
Magic Number,S22.Imap.Test,SequenceSetTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SequenceSetTest.cs,SingleUID,The following statement contains a magic number: var list = new List<uint>() { 4 };
Magic Number,S22.Imap.Test,SrpTest,D:\research\architectureSmells\repos1\smiley22_S22.Imap\Tests\SrpTest.cs,DeserializeServerFirstMessage,The following statement contains a magic number: BigInteger expectedGenerator = new BigInteger(2)'  				expectedModulus = BigInteger.Parse(expectedSafePrimeModulus'  				NumberStyles.HexNumber)'  				_expectedPublicKey = BigInteger.Parse(expectedPublicKey'  				NumberStyles.HexNumber);
