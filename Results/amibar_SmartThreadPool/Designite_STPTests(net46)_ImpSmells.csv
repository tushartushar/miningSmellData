Implementation smell,Namespace,Class,File,Method,Description
Long Method,SmartThreadPoolTests,QueueWorkItemHelper,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\QueueWorkItemHelper.cs,TestQueueWorkItemCallStatPostPflg,The method has 160 lines of code.
Long Method,SmartThreadPoolTests,QueueWorkItemHelper,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\QueueWorkItemHelper.cs,TestQueueWorkItemCallStatPostPflgPrio,The method has 178 lines of code.
Long Statement,SmartThreadPoolTests,QueueWorkItemHelper,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\QueueWorkItemHelper.cs,TestQueueWorkItemCallStatPrio,The length of the statement  "            IWorkItemResult wir = wig.QueueWorkItem((WorkItemCallback) wiic.CompareWorkItemInfo' state' WorkItemPriority.AboveNormal); " is 122.
Long Statement,STPTests,TestFalseFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFalseFillStateWithParams.cs,STPFuncT4,The length of the statement  "            IWorkItemResult<IPAddress> wir = _stp.QueueWorkItem(new Func<long' IntPtr' IPAddress' Guid' IPAddress>(Func4)' long.MinValue' p' ip' guid); " is 139.
Long Statement,STPTests,TestFalseFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFalseFillStateWithParams.cs,WIGFuncT4,The length of the statement  "            IWorkItemResult<IPAddress> wir = _wig.QueueWorkItem(new Func<long' IntPtr' IPAddress' Guid' IPAddress>(Func4)' long.MinValue' p' ip' guid); " is 139.
Long Statement,STPTests,TestFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFillStateWithParams.cs,FuncT4,The length of the statement  "            IWorkItemResult<IPAddress> wir = _stp.QueueWorkItem(new Func<long' IntPtr' IPAddress' Guid' IPAddress>(Func4)' long.MinValue' p' ip' guid); " is 139.
Long Statement,STPTests,TestWIGFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFillStateWithParams.cs,FuncT4,The length of the statement  "            IWorkItemResult<IPAddress> wir = _wig.QueueWorkItem(new Func<long' IntPtr' IPAddress' Guid' IPAddress>(Func4)' long.MinValue' p' ip' guid); " is 139.
Magic Number,SmartThreadPoolTests,PermutationGeneratorHelper,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\PermutationGenerator.cs,getNext,The following statement contains a magic number: int j = a.Length - 2;
Magic Number,SmartThreadPoolTests,QueueWorkItemHelper,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\QueueWorkItemHelper.cs,TestQueueWorkItemCallStatPostPflg,The following statement contains a magic number: wiic.SleepTime = 100;
Magic Number,SmartThreadPoolTests,QueueWorkItemHelper,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\QueueWorkItemHelper.cs,TestQueueWorkItemCallStatPostPflg,The following statement contains a magic number: wiic.SleepTime = 100;
Magic Number,SmartThreadPoolTests,QueueWorkItemHelper,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\QueueWorkItemHelper.cs,TestQueueWorkItemCallStatPostPflg,The following statement contains a magic number: wiic.SleepTime = 100;
Magic Number,SmartThreadPoolTests,QueueWorkItemHelper,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\QueueWorkItemHelper.cs,TestQueueWorkItemCallStatPostPflg,The following statement contains a magic number: wiic.SleepTime = 100;
Magic Number,SmartThreadPoolTests,QueueWorkItemHelper,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\QueueWorkItemHelper.cs,TestQueueWorkItemCallStatPostPflgPrio,The following statement contains a magic number: wiic.SleepTime = 100;
Magic Number,SmartThreadPoolTests,QueueWorkItemHelper,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\QueueWorkItemHelper.cs,TestQueueWorkItemCallStatPostPflgPrio,The following statement contains a magic number: wiic.SleepTime = 100;
Magic Number,SmartThreadPoolTests,QueueWorkItemHelper,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\QueueWorkItemHelper.cs,TestQueueWorkItemCallStatPostPflgPrio,The following statement contains a magic number: wiic.SleepTime = 100;
Magic Number,SmartThreadPoolTests,QueueWorkItemHelper,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\QueueWorkItemHelper.cs,TestQueueWorkItemCallStatPostPflgPrio,The following statement contains a magic number: wiic.SleepTime = 100;
Magic Number,SmartThreadPoolTests,TestActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestActionT.cs,ActionT3,The following statement contains a magic number: IWorkItemResult wir = _stp.QueueWorkItem(Substring' "ABCDEF"' 1' 2);
Magic Number,SmartThreadPoolTests,TestActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestActionT.cs,ActionT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SmartThreadPoolTests,TestActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestActionT.cs,ActionT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SmartThreadPoolTests,TestActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestActionT.cs,ActionT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SmartThreadPoolTests,TestActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestActionT.cs,ActionT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SmartThreadPoolTests,TestActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestActionT.cs,ActionT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SmartThreadPoolTests,TestActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestActionT.cs,ActionT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SmartThreadPoolTests,TestActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestActionT.cs,ActionT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SmartThreadPoolTests,TestActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestActionT.cs,ActionT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SmartThreadPoolTests,TestActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestActionT.cs,ActionT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SmartThreadPoolTests,TestActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestActionT.cs,ActionT4,The following statement contains a magic number: IWorkItemResult wir = _stp.QueueWorkItem(Subarray' numbers' 1' 2' 3);
Magic Number,SmartThreadPoolTests,TestActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestActionT.cs,ActionT4,The following statement contains a magic number: IWorkItemResult wir = _stp.QueueWorkItem(Subarray' numbers' 1' 2' 3);
Magic Number,SmartThreadPoolTests,TestActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestActionT.cs,ActionT4,The following statement contains a magic number: Assert.AreEqual(_result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,SmartThreadPoolTests,TestActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestActionT.cs,ActionT4,The following statement contains a magic number: Assert.AreEqual(_result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,SmartThreadPoolTests,TestActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestActionT.cs,ActionT4,The following statement contains a magic number: Assert.AreEqual(_result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,SmartThreadPoolTests,TestActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestActionT.cs,ActionT4,The following statement contains a magic number: Assert.AreEqual(_result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,SmartThreadPoolTests,TestActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestActionT.cs,ActionT4,The following statement contains a magic number: Assert.AreEqual(_result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,SmartThreadPoolTests,TestActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestActionT.cs,ActionT4,The following statement contains a magic number: Assert.AreEqual(_result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,SmartThreadPoolTests,TestCancel,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestCancel.cs,CancelInProgressWorkItemSoft,The following statement contains a magic number: Assert.Throws<WorkItemCancelException>(() =>              {                    ManualResetEvent waitToStart = new ManualResetEvent(false);                    SmartThreadPool stp = new SmartThreadPool();                  IWorkItemResult wir = stp.QueueWorkItem(                      state =>                      {                          waitToStart.Set();                          Thread.Sleep(100);                          return null;                      }                      );                    waitToStart.WaitOne();                    wir.Cancel(false);                    Assert.IsTrue(wir.IsCanceled);                    try                  {                      wir.GetResult();                  }                  finally                  {                      stp.Shutdown();                  }              });
Magic Number,SmartThreadPoolTests,TestCancel,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestCancel.cs,CancelCancelledWorkItemAbort,The following statement contains a magic number: Assert.Throws<WorkItemCancelException>(() =>              {                    ManualResetEvent waitToStart = new ManualResetEvent(false);                    SmartThreadPool stp = new SmartThreadPool();                  IWorkItemResult wir = stp.QueueWorkItem(                      state =>                      {                          waitToStart.Set();                          while (true)                          {                              Thread.Sleep(1000);                          }                          //return null;                      }                      );                    waitToStart.WaitOne();                    wir.Cancel(false);                    Assert.IsTrue(wir.IsCanceled);                    bool completed = stp.WaitForIdle(1000);                    Assert.IsFalse(completed);                    wir.Cancel(true);                    try                  {                      wir.GetResult();                  }                  finally                  {                      stp.Shutdown();                  }              });
Magic Number,SmartThreadPoolTests,TestCancel,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestCancel.cs,CancelCancelledWorkItemAbort,The following statement contains a magic number: Assert.Throws<WorkItemCancelException>(() =>              {                    ManualResetEvent waitToStart = new ManualResetEvent(false);                    SmartThreadPool stp = new SmartThreadPool();                  IWorkItemResult wir = stp.QueueWorkItem(                      state =>                      {                          waitToStart.Set();                          while (true)                          {                              Thread.Sleep(1000);                          }                          //return null;                      }                      );                    waitToStart.WaitOne();                    wir.Cancel(false);                    Assert.IsTrue(wir.IsCanceled);                    bool completed = stp.WaitForIdle(1000);                    Assert.IsFalse(completed);                    wir.Cancel(true);                    try                  {                      wir.GetResult();                  }                  finally                  {                      stp.Shutdown();                  }              });
Magic Number,SmartThreadPoolTests,TestCancel,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestCancel.cs,CancelInProgressWorkItemAbort,The following statement contains a magic number: Assert.Throws<WorkItemCancelException>(() =>              {                    ManualResetEvent waitToStart = new ManualResetEvent(false);                  int counter = 0;                    SmartThreadPool stp = new SmartThreadPool();                  IWorkItemResult wir = stp.QueueWorkItem(                      state =>                      {                          waitToStart.Set();                          Thread.Sleep(100);                          ++counter;                          return null;                      }                      );                    waitToStart.WaitOne();                    wir.Cancel(true);                    Assert.IsTrue(wir.IsCanceled);                    Assert.AreEqual(counter' 0);                    try                  {                      wir.GetResult();                  }                  finally                  {                      stp.Shutdown();                  }              });
Magic Number,SmartThreadPoolTests,TestCancel,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestCancel.cs,CancelInProgressWorkItemSoftWithIgnoreSample,The following statement contains a magic number: Assert.Throws<WorkItemCancelException>(() =>              {                  ManualResetEvent waitToStart = new ManualResetEvent(false);                  ManualResetEvent waitToComplete = new ManualResetEvent(false);                    SmartThreadPool stp = new SmartThreadPool();                  IWorkItemResult wir = stp.QueueWorkItem(                      state =>                      {                          waitToStart.Set();                          Thread.Sleep(100);                          waitToComplete.WaitOne();                          return null;                      }                      );                    waitToStart.WaitOne();                    wir.Cancel(false);                    waitToComplete.Set();                    stp.WaitForIdle();                    // Throws WorkItemCancelException                  wir.GetResult();                    stp.Shutdown();              });
Magic Number,SmartThreadPoolTests,TestCancel,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestCancel.cs,CancelSTPWorkItems,The following statement contains a magic number: stp.QueueWorkItem(                      state =>  { Thread.Sleep(500); ++counter; return null; }                      );
Magic Number,SmartThreadPoolTests,TestCancel,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestCancel.cs,CancelSTPWorkItems,The following statement contains a magic number: i < 10
Magic Number,SmartThreadPoolTests,TestCancel,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestCancel.cs,CancelSTPWorkItems,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,SmartThreadPoolTests,TestCancel,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestCancel.cs,CancelWIGWorkItems,The following statement contains a magic number: IWorkItemsGroup wig = stp.CreateWorkItemsGroup(10);
Magic Number,SmartThreadPoolTests,TestCancel,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestCancel.cs,CancelWIGWorkItems,The following statement contains a magic number: wig.QueueWorkItem(                      state => { Thread.Sleep(500); ++counter; return null; }                      );
Magic Number,SmartThreadPoolTests,TestCancel,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestCancel.cs,CancelWIGWorkItems,The following statement contains a magic number: i < 10
Magic Number,SmartThreadPoolTests,TestCancel,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestCancel.cs,CancelWIGWorkItems,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,SmartThreadPoolTests,TestCancel,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestCancel.cs,Cancel1WIGof2WorkItems,The following statement contains a magic number: IWorkItemsGroup wig1 = stp.CreateWorkItemsGroup(3);
Magic Number,SmartThreadPoolTests,TestCancel,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestCancel.cs,Cancel1WIGof2WorkItems,The following statement contains a magic number: IWorkItemsGroup wig2 = stp.CreateWorkItemsGroup(3);
Magic Number,SmartThreadPoolTests,TestCancel,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestCancel.cs,Cancel1WIGof2WorkItems,The following statement contains a magic number: wig1.QueueWorkItem(                      state => { Interlocked.Increment(ref counter1); Thread.Sleep(500); Interlocked.Increment(ref counter1); return null; }                      );
Magic Number,SmartThreadPoolTests,TestCancel,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestCancel.cs,Cancel1WIGof2WorkItems,The following statement contains a magic number: i < 3
Magic Number,SmartThreadPoolTests,TestCancel,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestCancel.cs,Cancel1WIGof2WorkItems,The following statement contains a magic number: wig2.QueueWorkItem(                      state => { Thread.Sleep(500); Interlocked.Increment(ref counter2); return null; }                      );
Magic Number,SmartThreadPoolTests,TestCancel,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestCancel.cs,Cancel1WIGof2WorkItems,The following statement contains a magic number: i < 3
Magic Number,SmartThreadPoolTests,TestCancel,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestCancel.cs,Cancel1WIGof2WorkItems,The following statement contains a magic number: counter1 < 3
Magic Number,SmartThreadPoolTests,TestCancel,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestCancel.cs,Cancel1WIGof2WorkItems,The following statement contains a magic number: Assert.AreEqual(3' counter1' "Cancelled WIG1");
Magic Number,SmartThreadPoolTests,TestCancel,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestCancel.cs,Cancel1WIGof2WorkItems,The following statement contains a magic number: Assert.AreEqual(3' counter2' "Normal WIG2");
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMaxThreadsChange,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(1 * 1000' 1' 0);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMaxThreadsChange,The following statement contains a magic number: i < 100
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMaxThreadsChange,The following statement contains a magic number: bool success = WaitForMaxThreadsValue(smartThreadPool' 1' 1 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMaxThreadsChange,The following statement contains a magic number: smartThreadPool.MaxThreads = 5;
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMaxThreadsChange,The following statement contains a magic number: success = WaitForMaxThreadsValue(smartThreadPool' 5' 2 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMaxThreadsChange,The following statement contains a magic number: success = WaitForMaxThreadsValue(smartThreadPool' 5' 2 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMaxThreadsChange,The following statement contains a magic number: success = WaitForMaxThreadsValue(smartThreadPool' 5' 2 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMaxThreadsChange,The following statement contains a magic number: smartThreadPool.MaxThreads = 25;
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMaxThreadsChange,The following statement contains a magic number: success = WaitForMaxThreadsValue(smartThreadPool' 25' 4 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMaxThreadsChange,The following statement contains a magic number: success = WaitForMaxThreadsValue(smartThreadPool' 25' 4 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMaxThreadsChange,The following statement contains a magic number: success = WaitForMaxThreadsValue(smartThreadPool' 25' 4 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMaxThreadsChange,The following statement contains a magic number: smartThreadPool.MaxThreads = 10;
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMaxThreadsChange,The following statement contains a magic number: success = WaitForMaxThreadsValue(smartThreadPool' 10' 10 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMaxThreadsChange,The following statement contains a magic number: success = WaitForMaxThreadsValue(smartThreadPool' 10' 10 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMaxThreadsChange,The following statement contains a magic number: success = WaitForMaxThreadsValue(smartThreadPool' 10' 10 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMinThreadsChange,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(1 * 1000' 25' 0);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMinThreadsChange,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(1 * 1000' 25' 0);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMinThreadsChange,The following statement contains a magic number: bool success = WaitForMinThreadsValue(smartThreadPool' 0' 1 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMinThreadsChange,The following statement contains a magic number: smartThreadPool.MinThreads = 5;
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMinThreadsChange,The following statement contains a magic number: success = WaitForMinThreadsValue(smartThreadPool' 5' 2 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMinThreadsChange,The following statement contains a magic number: success = WaitForMinThreadsValue(smartThreadPool' 5' 2 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMinThreadsChange,The following statement contains a magic number: success = WaitForMinThreadsValue(smartThreadPool' 5' 2 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMinThreadsChange,The following statement contains a magic number: smartThreadPool.MinThreads = 25;
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMinThreadsChange,The following statement contains a magic number: success = WaitForMinThreadsValue(smartThreadPool' 25' 4 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMinThreadsChange,The following statement contains a magic number: success = WaitForMinThreadsValue(smartThreadPool' 25' 4 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMinThreadsChange,The following statement contains a magic number: success = WaitForMinThreadsValue(smartThreadPool' 25' 4 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMinThreadsChange,The following statement contains a magic number: smartThreadPool.MinThreads = 10;
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMinThreadsChange,The following statement contains a magic number: success = WaitForMinThreadsValue(smartThreadPool' 10' 10 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMinThreadsChange,The following statement contains a magic number: success = WaitForMinThreadsValue(smartThreadPool' 10' 10 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestMinThreadsChange,The following statement contains a magic number: success = WaitForMinThreadsValue(smartThreadPool' 10' 10 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestConcurrencyChange,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10 * 1000' 1' 0);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestConcurrencyChange,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10 * 1000' 1' 0);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestConcurrencyChange,The following statement contains a magic number: i < 100
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestConcurrencyChange,The following statement contains a magic number: success = WaitForMaxThreadsValue(smartThreadPool' 1' 1 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestConcurrencyChange,The following statement contains a magic number: smartThreadPool.Concurrency = 5;
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestConcurrencyChange,The following statement contains a magic number: success = WaitForMaxThreadsValue(smartThreadPool' 5' 2 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestConcurrencyChange,The following statement contains a magic number: success = WaitForMaxThreadsValue(smartThreadPool' 5' 2 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestConcurrencyChange,The following statement contains a magic number: success = WaitForMaxThreadsValue(smartThreadPool' 5' 2 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestConcurrencyChange,The following statement contains a magic number: smartThreadPool.Concurrency = 25;
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestConcurrencyChange,The following statement contains a magic number: success = WaitForMaxThreadsValue(smartThreadPool' 25' 4 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestConcurrencyChange,The following statement contains a magic number: success = WaitForMaxThreadsValue(smartThreadPool' 25' 4 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestConcurrencyChange,The following statement contains a magic number: success = WaitForMaxThreadsValue(smartThreadPool' 25' 4 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestConcurrencyChange,The following statement contains a magic number: smartThreadPool.Concurrency = 10;
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestConcurrencyChange,The following statement contains a magic number: success = WaitForMaxThreadsValue(smartThreadPool' 10' 10 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestConcurrencyChange,The following statement contains a magic number: success = WaitForMaxThreadsValue(smartThreadPool' 10' 10 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,TestConcurrencyChange,The following statement contains a magic number: success = WaitForMaxThreadsValue(smartThreadPool' 10' 10 * 1000);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,WaitForMaxThreadsValue,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,WaitForMinThreadsValue,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,SmartThreadPoolTests,TestConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestConcurrencyChanges.cs,DoSomeWork,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,SmartThreadPoolTests,TestExceptions,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestExceptions.cs,ExceptionThrowing,The following statement contains a magic number: divArgs.x = 10;
Magic Number,SmartThreadPoolTests,TestExceptions,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestExceptions.cs,ExceptionReturning,The following statement contains a magic number: divArgs.x = 10;
Magic Number,SmartThreadPoolTests,TestFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFuncT.cs,FuncT3,The following statement contains a magic number: IWorkItemResult<string> wir = _stp.QueueWorkItem(new Func<string' int' int' string>(Substring)' "ABCDEF"' 1' 2);
Magic Number,SmartThreadPoolTests,TestFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFuncT.cs,FuncT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SmartThreadPoolTests,TestFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFuncT.cs,FuncT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SmartThreadPoolTests,TestFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFuncT.cs,FuncT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SmartThreadPoolTests,TestFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFuncT.cs,FuncT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SmartThreadPoolTests,TestFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFuncT.cs,FuncT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SmartThreadPoolTests,TestFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFuncT.cs,FuncT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SmartThreadPoolTests,TestFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFuncT.cs,FuncT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SmartThreadPoolTests,TestFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFuncT.cs,FuncT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SmartThreadPoolTests,TestFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFuncT.cs,FuncT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,SmartThreadPoolTests,TestFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFuncT.cs,FuncT4,The following statement contains a magic number: IWorkItemResult<int[]> wir = _stp.QueueWorkItem(new Func<int[]' int' int' int' int[]>(Subarray)' numbers' 1' 2' 3);
Magic Number,SmartThreadPoolTests,TestFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFuncT.cs,FuncT4,The following statement contains a magic number: IWorkItemResult<int[]> wir = _stp.QueueWorkItem(new Func<int[]' int' int' int' int[]>(Subarray)' numbers' 1' 2' 3);
Magic Number,SmartThreadPoolTests,TestFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFuncT.cs,FuncT4,The following statement contains a magic number: Assert.AreEqual(result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,SmartThreadPoolTests,TestFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFuncT.cs,FuncT4,The following statement contains a magic number: Assert.AreEqual(result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,SmartThreadPoolTests,TestFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFuncT.cs,FuncT4,The following statement contains a magic number: Assert.AreEqual(result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,SmartThreadPoolTests,TestFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFuncT.cs,FuncT4,The following statement contains a magic number: Assert.AreEqual(result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,SmartThreadPoolTests,TestFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFuncT.cs,FuncT4,The following statement contains a magic number: Assert.AreEqual(result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,SmartThreadPoolTests,TestFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFuncT.cs,FuncT4,The following statement contains a magic number: Assert.AreEqual(result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,SmartThreadPoolTests,TestGetResult,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestGetResult.cs,Timeout,The following statement contains a magic number: Assert.Throws<WorkItemTimeoutException>(() =>  		    {    		        SmartThreadPool smartThreadPool = new SmartThreadPool();    		        IWorkItemResult wir =  		            smartThreadPool.QueueWorkItem(new WorkItemCallback(this.DoSomeWork)' null);    		        try  		        {  		            wir.GetResult(500' true);  		        }  		        finally  		        {  		            smartThreadPool.Shutdown();  		        }  		    });
Magic Number,SmartThreadPoolTests,TestGetResult,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestGetResult.cs,DoSomeWork,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,SmartThreadPoolTests,TestGetResult,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestGetResult.cs,SignalCancel,The following statement contains a magic number: Thread.Sleep(250);
Magic Number,SmartThreadPoolTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestMultipleWorkItems.cs,WaitAll,The following statement contains a magic number: IWorkItemResult [] wirs = new IWorkItemResult[5];
Magic Number,SmartThreadPoolTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestMultipleWorkItems.cs,WaitAny,The following statement contains a magic number: IWorkItemResult [] wirs = new IWorkItemResult[5];
Magic Number,SmartThreadPoolTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestMultipleWorkItems.cs,WaitAllWithTimeoutSuccess,The following statement contains a magic number: IWorkItemResult [] wirs = new IWorkItemResult[5];
Magic Number,SmartThreadPoolTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestMultipleWorkItems.cs,WaitAllWithTimeoutSuccess,The following statement contains a magic number: bool timeout = !SmartThreadPool.WaitAll(wirs' 1500' true);
Magic Number,SmartThreadPoolTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestMultipleWorkItems.cs,WaitAllWithTimeoutFailure,The following statement contains a magic number: IWorkItemResult [] wirs = new IWorkItemResult[5];
Magic Number,SmartThreadPoolTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestMultipleWorkItems.cs,WaitAllWithTimeoutFailure,The following statement contains a magic number: bool timeout = !SmartThreadPool.WaitAll(wirs' 10' true);
Magic Number,SmartThreadPoolTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestMultipleWorkItems.cs,WaitAnyWithTimeoutSuccess,The following statement contains a magic number: IWorkItemResult [] wirs = new IWorkItemResult[5];
Magic Number,SmartThreadPoolTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestMultipleWorkItems.cs,WaitAnyWithTimeoutSuccess,The following statement contains a magic number: int index = SmartThreadPool.WaitAny(wirs' 1500' true);
Magic Number,SmartThreadPoolTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestMultipleWorkItems.cs,WaitAnyWithTimeoutFailure,The following statement contains a magic number: IWorkItemResult [] wirs = new IWorkItemResult[5];
Magic Number,SmartThreadPoolTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestMultipleWorkItems.cs,WaitAnyWithTimeoutFailure,The following statement contains a magic number: int index = SmartThreadPool.WaitAny(wirs' 10' true);
Magic Number,SmartThreadPoolTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestMultipleWorkItems.cs,DoSomeWork,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,SmartThreadPoolTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestMultipleWorkItems.cs,WaitAllT,The following statement contains a magic number: IWorkItemResult<int>[] wirs = new IWorkItemResult<int>[5];
Magic Number,SmartThreadPoolTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestMultipleWorkItems.cs,WaitAnyT,The following statement contains a magic number: IWorkItemResult<int>[] wirs = new IWorkItemResult<int>[5];
Magic Number,SmartThreadPoolTests,TestParallelMethods,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestParallelMethods.cs,TestJoin,The following statement contains a magic number: Assert.AreEqual(3' sc.Counter);
Magic Number,SmartThreadPoolTests,TestParallelMethods,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestParallelMethods.cs,TestJoin,The following statement contains a magic number: Action[] actions = new Action[1000];
Magic Number,SmartThreadPoolTests,TestParallelMethods,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestParallelMethods.cs,TestJoin,The following statement contains a magic number: j < 10
Magic Number,SmartThreadPoolTests,TestParallelMethods,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestParallelMethods.cs,TestChoice,The following statement contains a magic number: int index = stp.Choice(  	            () => Thread.Sleep(1000)'  	            () => Thread.Sleep(1500)'  	            () => Thread.Sleep(500));
Magic Number,SmartThreadPoolTests,TestParallelMethods,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestParallelMethods.cs,TestChoice,The following statement contains a magic number: int index = stp.Choice(  	            () => Thread.Sleep(1000)'  	            () => Thread.Sleep(1500)'  	            () => Thread.Sleep(500));
Magic Number,SmartThreadPoolTests,TestParallelMethods,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestParallelMethods.cs,TestChoice,The following statement contains a magic number: int index = stp.Choice(  	            () => Thread.Sleep(1000)'  	            () => Thread.Sleep(1500)'  	            () => Thread.Sleep(500));
Magic Number,SmartThreadPoolTests,TestParallelMethods,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestParallelMethods.cs,TestChoice,The following statement contains a magic number: Assert.AreEqual(2' index);
Magic Number,SmartThreadPoolTests,TestParallelMethods,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestParallelMethods.cs,TestChoice,The following statement contains a magic number: index = stp.Choice(  	            () => Thread.Sleep(300)'  	            () => Thread.Sleep(100)'  	            () => Thread.Sleep(200));
Magic Number,SmartThreadPoolTests,TestParallelMethods,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestParallelMethods.cs,TestChoice,The following statement contains a magic number: index = stp.Choice(  	            () => Thread.Sleep(300)'  	            () => Thread.Sleep(100)'  	            () => Thread.Sleep(200));
Magic Number,SmartThreadPoolTests,TestParallelMethods,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestParallelMethods.cs,TestChoice,The following statement contains a magic number: index = stp.Choice(  	            () => Thread.Sleep(300)'  	            () => Thread.Sleep(100)'  	            () => Thread.Sleep(200));
Magic Number,SmartThreadPoolTests,TestParallelMethods,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestParallelMethods.cs,TestPipe,The following statement contains a magic number: stp.Pipe(                  sc'                  sc1 => { if (sc.Counter == 0) { sc1.Increment(); }}'                   sc1 => { if (sc.Counter == 1) { sc1.Increment(); }}'                   sc1 => { if (sc.Counter == 2) { sc1.Increment(); }}                   );
Magic Number,SmartThreadPoolTests,TestParallelMethods,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestParallelMethods.cs,TestPipe,The following statement contains a magic number: Assert.AreEqual(3' sc.Counter);
Magic Number,SmartThreadPoolTests,TestPostExecution,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestPostExecute.cs,DoTestDefaultPostExecute,The following statement contains a magic number: success = success && (postExecuteResult.wh.WaitOne(1000' true) == answer);
Magic Number,SmartThreadPoolTests,TestPostExecution,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestPostExecute.cs,DoTestPostExecute,The following statement contains a magic number: success = success && (postExecuteResult.wh.WaitOne(1000' true) == answer);
Magic Number,SmartThreadPoolTests,TestPostExecution,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestPostExecute.cs,DoTestPostExecuteWithCancel,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10*1000' 1);
Magic Number,SmartThreadPoolTests,TestPostExecution,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestPostExecute.cs,DoTestPostExecuteWithCancel,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10*1000' 1);
Magic Number,SmartThreadPoolTests,TestPostExecution,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestPostExecute.cs,DoTestPostExecuteWithCancel,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,SmartThreadPoolTests,TestPostExecution,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestPostExecute.cs,DoTestPostExecuteWithCancel,The following statement contains a magic number: success = (postExecuteResult.wh.WaitOne(1000' true) == answer);
Magic Number,SmartThreadPoolTests,TestPostExecution,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestPostExecute.cs,DoSomeWork,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,SmartThreadPoolTests,TestPostExecution,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestPostExecute.cs,SignalCancel,The following statement contains a magic number: Thread.Sleep(250);
Magic Number,SmartThreadPoolTests,TestStartSuspended,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestStartSuspended.cs,StartSuspended,The following statement contains a magic number: Assert.IsFalse(stp.WaitForIdle(200));
Magic Number,SmartThreadPoolTests,TestStartSuspended,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestStartSuspended.cs,StartSuspended,The following statement contains a magic number: Assert.IsTrue(stp.WaitForIdle(200));
Magic Number,SmartThreadPoolTests,TestStartSuspended,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestStartSuspended.cs,WIGStartSuspended,The following statement contains a magic number: IWorkItemsGroup wig = stp.CreateWorkItemsGroup(10' wigStartInfo);
Magic Number,SmartThreadPoolTests,TestStartSuspended,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestStartSuspended.cs,WIGStartSuspended,The following statement contains a magic number: Assert.IsFalse(wig.WaitForIdle(200));
Magic Number,SmartThreadPoolTests,TestStartSuspended,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestStartSuspended.cs,WIGStartSuspended,The following statement contains a magic number: Assert.IsTrue(wig.WaitForIdle(200));
Magic Number,SmartThreadPoolTests,TestStartSuspended,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestStartSuspended.cs,STPAndWIGStartSuspended,The following statement contains a magic number: IWorkItemsGroup wig = stp.CreateWorkItemsGroup(10' wigStartInfo);
Magic Number,SmartThreadPoolTests,TestStartSuspended,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestStartSuspended.cs,STPAndWIGStartSuspended,The following statement contains a magic number: Assert.IsFalse(wig.WaitForIdle(200));
Magic Number,SmartThreadPoolTests,TestStartSuspended,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestStartSuspended.cs,STPAndWIGStartSuspended,The following statement contains a magic number: Assert.IsFalse(wig.WaitForIdle(200));
Magic Number,SmartThreadPoolTests,TestStartSuspended,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestStartSuspended.cs,STPAndWIGStartSuspended,The following statement contains a magic number: Assert.IsTrue(wig.WaitForIdle(5000)' "WIG is not idle");
Magic Number,SmartThreadPoolTests,TestStartSuspended,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestStartSuspended.cs,STPAndWIGStartSuspended,The following statement contains a magic number: Assert.IsTrue(stp.WaitForIdle(5000)' "STP is not idle");
Magic Number,SmartThreadPoolTests,TestStartSuspended,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestStartSuspended.cs,TwoWIGsStartSuspended,The following statement contains a magic number: IWorkItemsGroup wig1 = stp.CreateWorkItemsGroup(10' wigStartInfo);
Magic Number,SmartThreadPoolTests,TestStartSuspended,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestStartSuspended.cs,TwoWIGsStartSuspended,The following statement contains a magic number: IWorkItemsGroup wig2 = stp.CreateWorkItemsGroup(10' wigStartInfo);
Magic Number,SmartThreadPoolTests,TestStartSuspended,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestStartSuspended.cs,TwoWIGsStartSuspended,The following statement contains a magic number: Assert.IsFalse(wig1.WaitForIdle(200));
Magic Number,SmartThreadPoolTests,TestStartSuspended,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestStartSuspended.cs,TwoWIGsStartSuspended,The following statement contains a magic number: Assert.IsFalse(wig2.WaitForIdle(200));
Magic Number,SmartThreadPoolTests,TestStartSuspended,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestStartSuspended.cs,TwoWIGsStartSuspended,The following statement contains a magic number: Assert.IsTrue(wig1.WaitForIdle(200));
Magic Number,SmartThreadPoolTests,TestStartSuspended,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestStartSuspended.cs,TwoWIGsStartSuspended,The following statement contains a magic number: Assert.IsFalse(wig2.WaitForIdle(200));
Magic Number,SmartThreadPoolTests,TestStartSuspended,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestStartSuspended.cs,TwoWIGsStartSuspended,The following statement contains a magic number: Assert.IsTrue(wig2.WaitForIdle(200));
Magic Number,SmartThreadPoolTests,TestStartSuspended,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestStartSuspended.cs,DoWork,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,SmartThreadPoolTests,TestStateDispose,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestStateDispose.cs,DisposeCallerState,The following statement contains a magic number: Assert.AreEqual(2' disposableCallerState.Value);
Magic Number,SmartThreadPoolTests,TestStateDispose,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestStateDispose.cs,DoSomeWork,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,SmartThreadPoolTests,TestThreadsCreate,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestThreadsCreate.cs,OnInitialization,The following statement contains a magic number: ThreadContextState.Current.Counter = 1234;
Magic Number,SmartThreadPoolTests,TestThreadsCreate,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestThreadsCreate.cs,DoSomeWork,The following statement contains a magic number: _workItemSuccess = (1234 == counter);
Magic Number,SmartThreadPoolTests,TestThreadsCreate,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestThreadsCreate.cs,DoSomeWork,The following statement contains a magic number: ThreadContextState.Current.Counter = 1111;
Magic Number,SmartThreadPoolTests,TestThreadsCreate,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestThreadsCreate.cs,OnTermination,The following statement contains a magic number: _termSuccess = (1111 == counter);
Magic Number,SmartThreadPoolTests,TestThreadsCreate,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestThreadsCreate.cs,NotTestThreadsMaxStackSize,The following statement contains a magic number: STPStartInfo stpStartInfo = new STPStartInfo()              {                  MaxStackSize = 64 * 1024'              };
Magic Number,SmartThreadPoolTests,TestThreadsCreate,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestThreadsCreate.cs,NotTestThreadsMaxStackSize,The following statement contains a magic number: STPStartInfo stpStartInfo = new STPStartInfo()              {                  MaxStackSize = 64 * 1024'              };
Magic Number,SmartThreadPoolTests,TestThreadsCreate,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestThreadsCreate.cs,NotTestThreadsMaxStackSize,The following statement contains a magic number: IWorkItemResult<bool> wir = stp.QueueWorkItem(() => AllocateBufferOnStack(10 * 1024));
Magic Number,SmartThreadPoolTests,TestThreadsCreate,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestThreadsCreate.cs,NotTestThreadsMaxStackSize,The following statement contains a magic number: IWorkItemResult<bool> wir = stp.QueueWorkItem(() => AllocateBufferOnStack(10 * 1024));
Magic Number,SmartThreadPoolTests,TestThreadsCreate,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestThreadsCreate.cs,NotTestThreadsMaxStackSize,The following statement contains a magic number: wir = stp.QueueWorkItem(() => AllocateBufferOnStack(1000 * 1024));
Magic Number,SmartThreadPoolTests,TestThreadsCreate,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestThreadsCreate.cs,NotTestThreadsMaxStackSize,The following statement contains a magic number: wir = stp.QueueWorkItem(() => AllocateBufferOnStack(1000 * 1024));
Magic Number,SmartThreadPoolTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWaitForIdle.cs,WaitForIdle,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10*1000' 25' 0);
Magic Number,SmartThreadPoolTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWaitForIdle.cs,WaitForIdle,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10*1000' 25' 0);
Magic Number,SmartThreadPoolTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWaitForIdle.cs,WaitForIdle,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10*1000' 25' 0);
Magic Number,SmartThreadPoolTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWaitForIdle.cs,WaitForIdle,The following statement contains a magic number: i < 4
Magic Number,SmartThreadPoolTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWaitForIdle.cs,WaitForIdle,The following statement contains a magic number: bool success = !smartThreadPool.WaitForIdle(1000);
Magic Number,SmartThreadPoolTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWaitForIdle.cs,WaitForIdle,The following statement contains a magic number: success = success && smartThreadPool.WaitForIdle(1000);
Magic Number,SmartThreadPoolTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWaitForIdle.cs,WaitForIdleOnWrongThread,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10*1000' 25' 0);
Magic Number,SmartThreadPoolTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWaitForIdle.cs,WaitForIdleOnWrongThread,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10*1000' 25' 0);
Magic Number,SmartThreadPoolTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWaitForIdle.cs,WaitForIdleOnWrongThread,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10*1000' 25' 0);
Magic Number,SmartThreadPoolTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWaitForIdle.cs,DoSomeWork,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,SmartThreadPoolTests,TestWorkItemTimeout,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWorkItemTimeout.cs,CancelInQueueWorkItem,The following statement contains a magic number: Assert.Throws<WorkItemCancelException>(() =>              {                  STPStartInfo stpStartInfo = new STPStartInfo();                  stpStartInfo.StartSuspended = true;                    bool hasRun = false;                    SmartThreadPool stp = new SmartThreadPool(stpStartInfo);                  IWorkItemResult wir = stp.QueueWorkItem(                      new WorkItemInfo() {Timeout = 500}'                      state =>                      {                          hasRun = true;                          return null;                      });                    Assert.IsFalse(wir.IsCanceled);                    Thread.Sleep(2000);                    Assert.IsTrue(wir.IsCanceled);                    stp.Start();                  stp.WaitForIdle();                    Assert.IsFalse(hasRun);                    try                  {                      wir.GetResult();                  }                  finally                  {                      stp.Shutdown();                  }              });
Magic Number,SmartThreadPoolTests,TestWorkItemTimeout,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWorkItemTimeout.cs,CancelInQueueWorkItem,The following statement contains a magic number: Assert.Throws<WorkItemCancelException>(() =>              {                  STPStartInfo stpStartInfo = new STPStartInfo();                  stpStartInfo.StartSuspended = true;                    bool hasRun = false;                    SmartThreadPool stp = new SmartThreadPool(stpStartInfo);                  IWorkItemResult wir = stp.QueueWorkItem(                      new WorkItemInfo() {Timeout = 500}'                      state =>                      {                          hasRun = true;                          return null;                      });                    Assert.IsFalse(wir.IsCanceled);                    Thread.Sleep(2000);                    Assert.IsTrue(wir.IsCanceled);                    stp.Start();                  stp.WaitForIdle();                    Assert.IsFalse(hasRun);                    try                  {                      wir.GetResult();                  }                  finally                  {                      stp.Shutdown();                  }              });
Magic Number,SmartThreadPoolTests,TestWorkItemTimeout,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWorkItemTimeout.cs,TimeoutInProgressWorkItemWithSample,The following statement contains a magic number: IWorkItemResult wir = stp.QueueWorkItem(                  new WorkItemInfo() { Timeout = 500 }'                  state =>                  {                      waitToStart.Set();                      Thread.Sleep(1000);                      timedout = SmartThreadPool.IsWorkItemCanceled;                      waitToComplete.Set();                      return null;                  });
Magic Number,SmartThreadPoolTests,TestWorkItemTimeout,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWorkItemTimeout.cs,TimeoutInProgressWorkItemWithSample,The following statement contains a magic number: IWorkItemResult wir = stp.QueueWorkItem(                  new WorkItemInfo() { Timeout = 500 }'                  state =>                  {                      waitToStart.Set();                      Thread.Sleep(1000);                      timedout = SmartThreadPool.IsWorkItemCanceled;                      waitToComplete.Set();                      return null;                  });
Magic Number,SmartThreadPoolTests,TestWorkItemTimeout,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWorkItemTimeout.cs,TimeoutCompletedWorkItem,The following statement contains a magic number: IWorkItemResult wir =                   stp.QueueWorkItem(                  new WorkItemInfo() { Timeout = 500 }'                  state => 1);
Magic Number,SmartThreadPoolTests,TestWorkItemTimeout,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWorkItemTimeout.cs,TimeoutCompletedWorkItem,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,SmartThreadPoolTests,TestWorkItemTimeout,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWorkItemTimeout.cs,TimeoutInProgressWorkItemSoftWithAbortOnWorkItemCancel,The following statement contains a magic number: IWorkItemResult wir = stp.QueueWorkItem(                  new WorkItemInfo() { Timeout = 500 }'                  state =>                  {                      waitToStart.Set();                      Thread.Sleep(1000);                      SmartThreadPool.AbortOnWorkItemCancel();                      abortFailed = true;                      return null;                  });
Magic Number,SmartThreadPoolTests,TestWorkItemTimeout,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWorkItemTimeout.cs,TimeoutInProgressWorkItemSoftWithAbortOnWorkItemCancel,The following statement contains a magic number: IWorkItemResult wir = stp.QueueWorkItem(                  new WorkItemInfo() { Timeout = 500 }'                  state =>                  {                      waitToStart.Set();                      Thread.Sleep(1000);                      SmartThreadPool.AbortOnWorkItemCancel();                      abortFailed = true;                      return null;                  });
Magic Number,STPTests,TestFalseFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFalseFillStateWithParams.cs,Init,The following statement contains a magic number: _wig = _stp.CreateWorkItemsGroup(10);
Magic Number,STPTests,TestFalseFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFalseFillStateWithParams.cs,STPActionT1,The following statement contains a magic number: IWorkItemResult wir = _stp.QueueWorkItem(Action1' 17);
Magic Number,STPTests,TestFalseFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFalseFillStateWithParams.cs,STPFuncT1,The following statement contains a magic number: IWorkItemResult<bool> wir = _stp.QueueWorkItem(new Func<int' bool>(Func1)' 17);
Magic Number,STPTests,TestFalseFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFalseFillStateWithParams.cs,WIGActionT1,The following statement contains a magic number: IWorkItemResult wir = _wig.QueueWorkItem(Action1' 17);
Magic Number,STPTests,TestFalseFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFalseFillStateWithParams.cs,WIGFuncT1,The following statement contains a magic number: IWorkItemResult<bool> wir = _wig.QueueWorkItem(new Func<int' bool>(Func1)' 17);
Magic Number,STPTests,TestFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFillStateWithParams.cs,ActionT1,The following statement contains a magic number: IWorkItemResult wir = _stp.QueueWorkItem(Action1' 17);
Magic Number,STPTests,TestFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFillStateWithParams.cs,ActionT1,The following statement contains a magic number: Assert.AreEqual(args[0]' 17);
Magic Number,STPTests,TestFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFillStateWithParams.cs,ActionT2,The following statement contains a magic number: Assert.AreEqual(args.Length' 2);
Magic Number,STPTests,TestFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFillStateWithParams.cs,ActionT3,The following statement contains a magic number: Assert.AreEqual(args.Length' 3);
Magic Number,STPTests,TestFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFillStateWithParams.cs,ActionT3,The following statement contains a magic number: Assert.AreEqual(args[2]' obj);
Magic Number,STPTests,TestFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFillStateWithParams.cs,ActionT4,The following statement contains a magic number: Assert.AreEqual(args.Length' 4);
Magic Number,STPTests,TestFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFillStateWithParams.cs,ActionT4,The following statement contains a magic number: Assert.AreEqual(args[2]' ip);
Magic Number,STPTests,TestFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFillStateWithParams.cs,ActionT4,The following statement contains a magic number: Assert.AreEqual(args[3]' guid);
Magic Number,STPTests,TestFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFillStateWithParams.cs,FuncT1,The following statement contains a magic number: IWorkItemResult<bool> wir = _stp.QueueWorkItem(new Func<int' bool>(Func1)' 17);
Magic Number,STPTests,TestFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFillStateWithParams.cs,FuncT1,The following statement contains a magic number: Assert.AreEqual(args[0]' 17);
Magic Number,STPTests,TestFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFillStateWithParams.cs,FuncT2,The following statement contains a magic number: Assert.AreEqual(args.Length' 2);
Magic Number,STPTests,TestFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFillStateWithParams.cs,FuncT3,The following statement contains a magic number: Assert.AreEqual(args.Length' 3);
Magic Number,STPTests,TestFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFillStateWithParams.cs,FuncT3,The following statement contains a magic number: Assert.AreEqual(args[2]' obj);
Magic Number,STPTests,TestFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFillStateWithParams.cs,FuncT4,The following statement contains a magic number: Assert.AreEqual(args.Length' 4);
Magic Number,STPTests,TestFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFillStateWithParams.cs,FuncT4,The following statement contains a magic number: Assert.AreEqual(args[2]' ip);
Magic Number,STPTests,TestFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFillStateWithParams.cs,FuncT4,The following statement contains a magic number: Assert.AreEqual(args[3]' guid);
Magic Number,STPTests,TestFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestFunc.cs,FuncT,The following statement contains a magic number: Assert.AreEqual(y' 2);
Magic Number,STPTests,TestMaxQueueLength,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestMaxQueueLength.cs,QueueWorkItem_WhenBiggerMaxIsSet_ThrowsExceptionWhenHit,The following statement contains a magic number: Assert.Throws<QueueRejectedException>(() =>              {                  var info = new STPStartInfo                  {                      MaxQueueLength = 5'                      MinWorkerThreads = 5'                      MaxWorkerThreads = 10'                  };                  var pool = new SmartThreadPool(info);                  pool.Start();                    try                  {                      // Pool starts with 5 available waiters.                        pool.QueueWorkItem(SleepForOneSecond); // Taken by waiter immediately. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // Taken by waiter immediately. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // Taken by waiter immediately. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // Taken by waiter immediately. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // Taken by waiter immediately. Not queued.                        pool.QueueWorkItem(SleepForOneSecond); // New thread created' takes work item. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // New thread created' takes work item. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // New thread created' takes work item. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // New thread created' takes work item. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // New thread created' takes work item. Not queued.                        pool.QueueWorkItem(SleepForOneSecond); // No waiters available. Queued.                      pool.QueueWorkItem(SleepForOneSecond); // No waiters available. Queued.                      pool.QueueWorkItem(SleepForOneSecond); // No waiters available. Queued.                      pool.QueueWorkItem(SleepForOneSecond); // No waiters available. Queued.                      pool.QueueWorkItem(SleepForOneSecond); // No waiters available. Queued.                  }                  catch (QueueRejectedException e)                  {                      throw new Exception("Caught QueueRejectedException too early: "' e);                  }                    // All threads are busy' and queue is at its max. Throws.                  pool.QueueWorkItem(SleepForOneSecond);              });
Magic Number,STPTests,TestMaxQueueLength,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestMaxQueueLength.cs,QueueWorkItem_WhenBiggerMaxIsSet_ThrowsExceptionWhenHit,The following statement contains a magic number: Assert.Throws<QueueRejectedException>(() =>              {                  var info = new STPStartInfo                  {                      MaxQueueLength = 5'                      MinWorkerThreads = 5'                      MaxWorkerThreads = 10'                  };                  var pool = new SmartThreadPool(info);                  pool.Start();                    try                  {                      // Pool starts with 5 available waiters.                        pool.QueueWorkItem(SleepForOneSecond); // Taken by waiter immediately. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // Taken by waiter immediately. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // Taken by waiter immediately. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // Taken by waiter immediately. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // Taken by waiter immediately. Not queued.                        pool.QueueWorkItem(SleepForOneSecond); // New thread created' takes work item. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // New thread created' takes work item. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // New thread created' takes work item. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // New thread created' takes work item. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // New thread created' takes work item. Not queued.                        pool.QueueWorkItem(SleepForOneSecond); // No waiters available. Queued.                      pool.QueueWorkItem(SleepForOneSecond); // No waiters available. Queued.                      pool.QueueWorkItem(SleepForOneSecond); // No waiters available. Queued.                      pool.QueueWorkItem(SleepForOneSecond); // No waiters available. Queued.                      pool.QueueWorkItem(SleepForOneSecond); // No waiters available. Queued.                  }                  catch (QueueRejectedException e)                  {                      throw new Exception("Caught QueueRejectedException too early: "' e);                  }                    // All threads are busy' and queue is at its max. Throws.                  pool.QueueWorkItem(SleepForOneSecond);              });
Magic Number,STPTests,TestMaxQueueLength,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestMaxQueueLength.cs,QueueWorkItem_WhenBiggerMaxIsSet_ThrowsExceptionWhenHit,The following statement contains a magic number: Assert.Throws<QueueRejectedException>(() =>              {                  var info = new STPStartInfo                  {                      MaxQueueLength = 5'                      MinWorkerThreads = 5'                      MaxWorkerThreads = 10'                  };                  var pool = new SmartThreadPool(info);                  pool.Start();                    try                  {                      // Pool starts with 5 available waiters.                        pool.QueueWorkItem(SleepForOneSecond); // Taken by waiter immediately. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // Taken by waiter immediately. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // Taken by waiter immediately. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // Taken by waiter immediately. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // Taken by waiter immediately. Not queued.                        pool.QueueWorkItem(SleepForOneSecond); // New thread created' takes work item. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // New thread created' takes work item. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // New thread created' takes work item. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // New thread created' takes work item. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // New thread created' takes work item. Not queued.                        pool.QueueWorkItem(SleepForOneSecond); // No waiters available. Queued.                      pool.QueueWorkItem(SleepForOneSecond); // No waiters available. Queued.                      pool.QueueWorkItem(SleepForOneSecond); // No waiters available. Queued.                      pool.QueueWorkItem(SleepForOneSecond); // No waiters available. Queued.                      pool.QueueWorkItem(SleepForOneSecond); // No waiters available. Queued.                  }                  catch (QueueRejectedException e)                  {                      throw new Exception("Caught QueueRejectedException too early: "' e);                  }                    // All threads are busy' and queue is at its max. Throws.                  pool.QueueWorkItem(SleepForOneSecond);              });
Magic Number,STPTests,TestMaxQueueLength,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestMaxQueueLength.cs,QueueWorkItem_WhenQueueMaxLengthZero_RejectsInsteadOfQueueing,The following statement contains a magic number: Assert.Throws<QueueRejectedException>(() =>              {                  var info = new STPStartInfo                  {                      MaxQueueLength = 0'                      MinWorkerThreads = 2'                      MaxWorkerThreads = 2'                  };                  var pool = new SmartThreadPool(info);                  pool.Start();                    try                  {                      pool.QueueWorkItem(SleepForOneSecond); // Taken by waiter immediately. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // Taken by waiter immediately. Not queued.                  }                  catch (QueueRejectedException e)                  {                      throw new Exception("Caught QueueRejectedException too early: "' e);                  }                    pool.QueueWorkItem(SleepForOneSecond);              });
Magic Number,STPTests,TestMaxQueueLength,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestMaxQueueLength.cs,QueueWorkItem_WhenQueueMaxLengthZero_RejectsInsteadOfQueueing,The following statement contains a magic number: Assert.Throws<QueueRejectedException>(() =>              {                  var info = new STPStartInfo                  {                      MaxQueueLength = 0'                      MinWorkerThreads = 2'                      MaxWorkerThreads = 2'                  };                  var pool = new SmartThreadPool(info);                  pool.Start();                    try                  {                      pool.QueueWorkItem(SleepForOneSecond); // Taken by waiter immediately. Not queued.                      pool.QueueWorkItem(SleepForOneSecond); // Taken by waiter immediately. Not queued.                  }                  catch (QueueRejectedException e)                  {                      throw new Exception("Caught QueueRejectedException too early: "' e);                  }                    pool.QueueWorkItem(SleepForOneSecond);              });
Magic Number,STPTests,TestMaxQueueLength,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestMaxQueueLength.cs,SleepForOneSecond,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,STPTests,TestMaxQueueLength,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestMaxQueueLength.cs,SetMaxQueueLength_FromNonZeroValueToZero_DisablesQueueing,The following statement contains a magic number: Assert.Throws<QueueRejectedException>(() =>              {                    var info = new STPStartInfo                  {                      MinWorkerThreads = 1'                      MaxWorkerThreads = 1'                      MaxQueueLength = 1'                  };                    var pool = new SmartThreadPool(info);                  pool.Start();                    try                  {                      pool.QueueWorkItem(SleepForOneSecond); // Picked up by waiter.                      pool.QueueWorkItem(SleepForOneSecond); // Queued.                  }                  catch (QueueRejectedException e)                  {                      throw new Exception("Caught QueueRejectedException too early: "' e);                  }                    try                  {                      pool.QueueWorkItem(SleepForOneSecond);                  }                  catch (QueueRejectedException)                  {                      // Expected                      Assert.True(true);                  }                    pool.MaxQueueLength = 0;                  Thread.Sleep(2100); // Let the work items complete.                    try                  {                      pool.QueueWorkItem(SleepForOneSecond); // Picked up by waiter.                  }                  catch (QueueRejectedException e)                  {                      throw new Exception("Caught QueueRejectedException too early: "' e);                  }                    pool.QueueWorkItem(SleepForOneSecond); // Rejected (max queue length is zero).              });
Magic Number,STPTests,TestMaxQueueLength,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestMaxQueueLength.cs,SetMaxQueueLength_FromNullToZero_DisablesQueueing,The following statement contains a magic number: Assert.Throws<QueueRejectedException>(() =>              {                    var info = new STPStartInfo                  {                      MinWorkerThreads = 1'                      MaxWorkerThreads = 1'                  };                    var pool = new SmartThreadPool(info);                  pool.Start();                    try                  {                      pool.QueueWorkItem(SleepForOneSecond); // Picked up by waiter.                      pool.QueueWorkItem(SleepForOneSecond); // Queued.                  }                  catch (QueueRejectedException e)                  {                      throw new Exception("Caught QueueRejectedException too early: "' e);                  }                    pool.MaxQueueLength = 0;                  Thread.Sleep(2100); // Let the work items complete.                    try                  {                      pool.QueueWorkItem(SleepForOneSecond); // Picked up by waiter.                  }                  catch (QueueRejectedException e)                  {                      throw new Exception("Caught QueueRejectedException too early: "' e);                  }                    pool.QueueWorkItem(SleepForOneSecond); // Rejected (max queue length is zero).              });
Magic Number,STPTests,TestWIGFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFillStateWithParams.cs,Init,The following statement contains a magic number: _wig = _stp.CreateWorkItemsGroup(10' wigStartInfo);
Magic Number,STPTests,TestWIGFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFillStateWithParams.cs,ActionT1,The following statement contains a magic number: IWorkItemResult wir = _wig.QueueWorkItem(Action1' 17);
Magic Number,STPTests,TestWIGFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFillStateWithParams.cs,ActionT1,The following statement contains a magic number: Assert.AreEqual(args[0]' 17);
Magic Number,STPTests,TestWIGFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFillStateWithParams.cs,ActionT2,The following statement contains a magic number: Assert.AreEqual(args.Length' 2);
Magic Number,STPTests,TestWIGFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFillStateWithParams.cs,ActionT3,The following statement contains a magic number: Assert.AreEqual(args.Length' 3);
Magic Number,STPTests,TestWIGFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFillStateWithParams.cs,ActionT3,The following statement contains a magic number: Assert.AreEqual(args[2]' obj);
Magic Number,STPTests,TestWIGFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFillStateWithParams.cs,ActionT4,The following statement contains a magic number: Assert.AreEqual(args.Length' 4);
Magic Number,STPTests,TestWIGFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFillStateWithParams.cs,ActionT4,The following statement contains a magic number: Assert.AreEqual(args[2]' ip);
Magic Number,STPTests,TestWIGFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFillStateWithParams.cs,ActionT4,The following statement contains a magic number: Assert.AreEqual(args[3]' guid);
Magic Number,STPTests,TestWIGFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFillStateWithParams.cs,FuncT1,The following statement contains a magic number: IWorkItemResult<bool> wir = _wig.QueueWorkItem(new Func<int' bool>(Func1)' 17);
Magic Number,STPTests,TestWIGFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFillStateWithParams.cs,FuncT1,The following statement contains a magic number: Assert.AreEqual(args[0]' 17);
Magic Number,STPTests,TestWIGFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFillStateWithParams.cs,FuncT2,The following statement contains a magic number: Assert.AreEqual(args.Length' 2);
Magic Number,STPTests,TestWIGFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFillStateWithParams.cs,FuncT3,The following statement contains a magic number: Assert.AreEqual(args.Length' 3);
Magic Number,STPTests,TestWIGFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFillStateWithParams.cs,FuncT3,The following statement contains a magic number: Assert.AreEqual(args[2]' obj);
Magic Number,STPTests,TestWIGFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFillStateWithParams.cs,FuncT4,The following statement contains a magic number: Assert.AreEqual(args.Length' 4);
Magic Number,STPTests,TestWIGFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFillStateWithParams.cs,FuncT4,The following statement contains a magic number: Assert.AreEqual(args[2]' ip);
Magic Number,STPTests,TestWIGFillStateWithArgs,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFillStateWithParams.cs,FuncT4,The following statement contains a magic number: Assert.AreEqual(args[3]' guid);
Magic Number,PriorityQueueTests,TestPriorityQueue,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestPriorityQueue.cs,MultipleWorkItemsOnePriority,The following statement contains a magic number: PriorityItem [] priorityItems = new PriorityItem[10];
Magic Number,PriorityQueueTests,TestWorkItemsQueue,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWorkItemsQueue.cs,IdempotenceWaiterEntry,The following statement contains a magic number: Assert.AreEqual(2' q.WaitersCount);
Magic Number,PriorityQueueTests,TestWorkItemsQueue,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWorkItemsQueue.cs,IdempotenceWaiterEntry,The following statement contains a magic number: Assert.AreEqual(2' q.WaitersCount);
Magic Number,WorkItemsGroupTests,TestWIGActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGActionT.cs,Init,The following statement contains a magic number: _wig = _stp.CreateWorkItemsGroup(10);
Magic Number,WorkItemsGroupTests,TestWIGActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGActionT.cs,ActionT3,The following statement contains a magic number: IWorkItemResult wir = _wig.QueueWorkItem(Substring' "ABCDEF"' 1' 2);
Magic Number,WorkItemsGroupTests,TestWIGActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGActionT.cs,ActionT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,WorkItemsGroupTests,TestWIGActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGActionT.cs,ActionT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,WorkItemsGroupTests,TestWIGActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGActionT.cs,ActionT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,WorkItemsGroupTests,TestWIGActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGActionT.cs,ActionT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,WorkItemsGroupTests,TestWIGActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGActionT.cs,ActionT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,WorkItemsGroupTests,TestWIGActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGActionT.cs,ActionT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,WorkItemsGroupTests,TestWIGActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGActionT.cs,ActionT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,WorkItemsGroupTests,TestWIGActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGActionT.cs,ActionT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,WorkItemsGroupTests,TestWIGActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGActionT.cs,ActionT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,WorkItemsGroupTests,TestWIGActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGActionT.cs,ActionT4,The following statement contains a magic number: IWorkItemResult wir = _wig.QueueWorkItem(Subarray' numbers' 1' 2' 3);
Magic Number,WorkItemsGroupTests,TestWIGActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGActionT.cs,ActionT4,The following statement contains a magic number: IWorkItemResult wir = _wig.QueueWorkItem(Subarray' numbers' 1' 2' 3);
Magic Number,WorkItemsGroupTests,TestWIGActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGActionT.cs,ActionT4,The following statement contains a magic number: Assert.AreEqual(_result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,WorkItemsGroupTests,TestWIGActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGActionT.cs,ActionT4,The following statement contains a magic number: Assert.AreEqual(_result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,WorkItemsGroupTests,TestWIGActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGActionT.cs,ActionT4,The following statement contains a magic number: Assert.AreEqual(_result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,WorkItemsGroupTests,TestWIGActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGActionT.cs,ActionT4,The following statement contains a magic number: Assert.AreEqual(_result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,WorkItemsGroupTests,TestWIGActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGActionT.cs,ActionT4,The following statement contains a magic number: Assert.AreEqual(_result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,WorkItemsGroupTests,TestWIGActionT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGActionT.cs,ActionT4,The following statement contains a magic number: Assert.AreEqual(_result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,WorkItemsGroupTests,TestWIGConcurrency,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrency.cs,TestConcurrencies,The following statement contains a magic number: Concurrency(1' 1' 10);
Magic Number,WorkItemsGroupTests,TestWIGConcurrency,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrency.cs,TestConcurrencies,The following statement contains a magic number: Concurrency(1' 1' 100);
Magic Number,WorkItemsGroupTests,TestWIGConcurrency,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrency.cs,TestConcurrencies,The following statement contains a magic number: Concurrency(1' 5' 10);
Magic Number,WorkItemsGroupTests,TestWIGConcurrency,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrency.cs,TestConcurrencies,The following statement contains a magic number: Concurrency(1' 5' 10);
Magic Number,WorkItemsGroupTests,TestWIGConcurrency,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrency.cs,TestConcurrencies,The following statement contains a magic number: Concurrency(1' 5' 100);
Magic Number,WorkItemsGroupTests,TestWIGConcurrency,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrency.cs,TestConcurrencies,The following statement contains a magic number: Concurrency(1' 5' 100);
Magic Number,WorkItemsGroupTests,TestWIGConcurrency,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrency.cs,TestConcurrencies,The following statement contains a magic number: Concurrency(5' 5' 10);
Magic Number,WorkItemsGroupTests,TestWIGConcurrency,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrency.cs,TestConcurrencies,The following statement contains a magic number: Concurrency(5' 5' 10);
Magic Number,WorkItemsGroupTests,TestWIGConcurrency,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrency.cs,TestConcurrencies,The following statement contains a magic number: Concurrency(5' 5' 10);
Magic Number,WorkItemsGroupTests,TestWIGConcurrency,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrency.cs,TestConcurrencies,The following statement contains a magic number: Concurrency(5' 5' 100);
Magic Number,WorkItemsGroupTests,TestWIGConcurrency,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrency.cs,TestConcurrencies,The following statement contains a magic number: Concurrency(5' 5' 100);
Magic Number,WorkItemsGroupTests,TestWIGConcurrency,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrency.cs,TestConcurrencies,The following statement contains a magic number: Concurrency(5' 5' 100);
Magic Number,WorkItemsGroupTests,TestWIGConcurrency,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrency.cs,DoWork,The following statement contains a magic number: int waitTime = _randGen.Next(50);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange1WIG,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10*1000' 1' 0);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange1WIG,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10*1000' 1' 0);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange1WIG,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange1WIG,The following statement contains a magic number: wig.Concurrency = 2;
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange1WIG,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange1WIG,The following statement contains a magic number: Assert.IsTrue(2 == smartThreadPool.WaitingCallbacks);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange1WIG,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange1WIG,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange2WIGs,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10 * 1000' 2' 0);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange2WIGs,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10 * 1000' 2' 0);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange2WIGs,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10 * 1000' 2' 0);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange2WIGs,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange2WIGs,The following statement contains a magic number: Assert.IsTrue(2 == smartThreadPool.WaitingCallbacks);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange2WIGs,The following statement contains a magic number: Assert.IsTrue(2 == smartThreadPool.WaitingCallbacks);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange2WIGs,The following statement contains a magic number: Assert.IsTrue(2 == smartThreadPool.WaitingCallbacks);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange2WIGs,The following statement contains a magic number: wig1.Concurrency = 2;
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange2WIGs,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange2WIGs,The following statement contains a magic number: Assert.IsTrue(3 == smartThreadPool.WaitingCallbacks);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange2WIGs,The following statement contains a magic number: wig2.Concurrency = 2;
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange2WIGs,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange2WIGs,The following statement contains a magic number: Assert.IsTrue(4 == smartThreadPool.WaitingCallbacks);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange2WIGs,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange2WIGs,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange2WIGs,The following statement contains a magic number: Assert.IsTrue(2 == smartThreadPool.WaitingCallbacks);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange2WIGs,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10 * 1000' 25' 0);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10 * 1000' 25' 0);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10 * 1000' 25' 0);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange,The following statement contains a magic number: i < 100
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange,The following statement contains a magic number: success = WaitForWIGThreadsInUse(wig' 1' 1 * 1000);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange,The following statement contains a magic number: wig.Concurrency = 5;
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange,The following statement contains a magic number: success = WaitForWIGThreadsInUse(wig' 5' 2 * 1000);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange,The following statement contains a magic number: success = WaitForWIGThreadsInUse(wig' 5' 2 * 1000);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange,The following statement contains a magic number: success = WaitForWIGThreadsInUse(wig' 5' 2 * 1000);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange,The following statement contains a magic number: wig.Concurrency = 25;
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange,The following statement contains a magic number: success = WaitForWIGThreadsInUse(wig' 25' 4 * 1000);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange,The following statement contains a magic number: success = WaitForWIGThreadsInUse(wig' 25' 4 * 1000);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange,The following statement contains a magic number: success = WaitForWIGThreadsInUse(wig' 25' 4 * 1000);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange,The following statement contains a magic number: wig.Concurrency = 10;
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange,The following statement contains a magic number: success = WaitForWIGThreadsInUse(wig' 10' 10 * 1000);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange,The following statement contains a magic number: success = WaitForWIGThreadsInUse(wig' 10' 10 * 1000);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,TestWIGConcurrencyChange,The following statement contains a magic number: success = WaitForWIGThreadsInUse(wig' 10' 10 * 1000);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,WaitForWIGThreadsInUse,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,WorkItemsGroupTests,TestWIGConcurrencyChanges,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGConcurrencyChanges.cs,DoSomeLongWork,The following statement contains a magic number: Thread.Sleep(250);
Magic Number,WorkItemsGroupTests,TestExceptions,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGExceptions.cs,ExceptionThrowing,The following statement contains a magic number: divArgs.x = 10;
Magic Number,WorkItemsGroupTests,TestExceptions,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGExceptions.cs,ExceptionReturning,The following statement contains a magic number: divArgs.x = 10;
Magic Number,WorkItemsGroupTests,TestWIGFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFuncT.cs,Init,The following statement contains a magic number: _wig = _stp.CreateWorkItemsGroup(10);
Magic Number,WorkItemsGroupTests,TestWIGFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFuncT.cs,FuncT3,The following statement contains a magic number: IWorkItemResult<string> wir = _wig.QueueWorkItem(new Func<string' int' int' string>(Substring)' "ABCDEF"' 1' 2);
Magic Number,WorkItemsGroupTests,TestWIGFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFuncT.cs,FuncT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,WorkItemsGroupTests,TestWIGFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFuncT.cs,FuncT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,WorkItemsGroupTests,TestWIGFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFuncT.cs,FuncT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,WorkItemsGroupTests,TestWIGFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFuncT.cs,FuncT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,WorkItemsGroupTests,TestWIGFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFuncT.cs,FuncT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,WorkItemsGroupTests,TestWIGFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFuncT.cs,FuncT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,WorkItemsGroupTests,TestWIGFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFuncT.cs,FuncT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,WorkItemsGroupTests,TestWIGFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFuncT.cs,FuncT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,WorkItemsGroupTests,TestWIGFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFuncT.cs,FuncT4,The following statement contains a magic number: int[] numbers = new int[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,WorkItemsGroupTests,TestWIGFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFuncT.cs,FuncT4,The following statement contains a magic number: IWorkItemResult<int[]> wir = _wig.QueueWorkItem(new Func<int[]' int' int' int' int[]>(Subarray)' numbers' 1' 2' 3);
Magic Number,WorkItemsGroupTests,TestWIGFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFuncT.cs,FuncT4,The following statement contains a magic number: IWorkItemResult<int[]> wir = _wig.QueueWorkItem(new Func<int[]' int' int' int' int[]>(Subarray)' numbers' 1' 2' 3);
Magic Number,WorkItemsGroupTests,TestWIGFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFuncT.cs,FuncT4,The following statement contains a magic number: Assert.AreEqual(result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,WorkItemsGroupTests,TestWIGFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFuncT.cs,FuncT4,The following statement contains a magic number: Assert.AreEqual(result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,WorkItemsGroupTests,TestWIGFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFuncT.cs,FuncT4,The following statement contains a magic number: Assert.AreEqual(result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,WorkItemsGroupTests,TestWIGFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFuncT.cs,FuncT4,The following statement contains a magic number: Assert.AreEqual(result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,WorkItemsGroupTests,TestWIGFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFuncT.cs,FuncT4,The following statement contains a magic number: Assert.AreEqual(result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,WorkItemsGroupTests,TestWIGFuncT,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGFuncT.cs,FuncT4,The following statement contains a magic number: Assert.AreEqual(result' new int[] { 2' 3' 2' 3' 2' 3' });
Magic Number,WorkItemsGroupTests,TestGetResult,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGGetResult.cs,Timeout,The following statement contains a magic number: wir.GetResult(500' true);
Magic Number,WorkItemsGroupTests,TestGetResult,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGGetResult.cs,DoSomeWork,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,WorkItemsGroupTests,TestGetResult,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGGetResult.cs,SignalCancel,The following statement contains a magic number: Thread.Sleep(250);
Magic Number,WorkItemsGroupTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGMultipleWorkItems.cs,WaitAll,The following statement contains a magic number: IWorkItemResult [] wirs = new IWorkItemResult[5];
Magic Number,WorkItemsGroupTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGMultipleWorkItems.cs,WaitAny,The following statement contains a magic number: IWorkItemResult [] wirs = new IWorkItemResult[5];
Magic Number,WorkItemsGroupTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGMultipleWorkItems.cs,WaitAllWithTimeoutSuccess,The following statement contains a magic number: IWorkItemResult [] wirs = new IWorkItemResult[5];
Magic Number,WorkItemsGroupTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGMultipleWorkItems.cs,WaitAllWithTimeoutSuccess,The following statement contains a magic number: bool timeout = !SmartThreadPool.WaitAll(wirs' 1500' true);
Magic Number,WorkItemsGroupTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGMultipleWorkItems.cs,WaitAllWithTimeoutFailure,The following statement contains a magic number: IWorkItemResult [] wirs = new IWorkItemResult[5];
Magic Number,WorkItemsGroupTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGMultipleWorkItems.cs,WaitAllWithTimeoutFailure,The following statement contains a magic number: bool timeout = !SmartThreadPool.WaitAll(wirs' 10' true);
Magic Number,WorkItemsGroupTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGMultipleWorkItems.cs,WaitAnyWithTimeoutSuccess,The following statement contains a magic number: IWorkItemResult [] wirs = new IWorkItemResult[5];
Magic Number,WorkItemsGroupTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGMultipleWorkItems.cs,WaitAnyWithTimeoutSuccess,The following statement contains a magic number: int index = SmartThreadPool.WaitAny(wirs' 1500' true);
Magic Number,WorkItemsGroupTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGMultipleWorkItems.cs,WaitAnyWithTimeoutFailure,The following statement contains a magic number: IWorkItemResult [] wirs = new IWorkItemResult[5];
Magic Number,WorkItemsGroupTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGMultipleWorkItems.cs,WaitAnyWithTimeoutFailure,The following statement contains a magic number: int index = SmartThreadPool.WaitAny(wirs' 10' true);
Magic Number,WorkItemsGroupTests,TestMultipleWorkItems,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGMultipleWorkItems.cs,DoSomeWork,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,WorkItemsGroupTests,TestPostExecution,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGPostExecute.cs,DoTestDefaultPostExecute,The following statement contains a magic number: success = success && (postExecuteResult.wh.WaitOne(1000' true) == answer);
Magic Number,WorkItemsGroupTests,TestPostExecution,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGPostExecute.cs,DoTestPostExecute,The following statement contains a magic number: success = success && (postExecuteResult.wh.WaitOne(1000' true) == answer);
Magic Number,WorkItemsGroupTests,TestPostExecution,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGPostExecute.cs,DoTestPostExecuteWithCancel,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,WorkItemsGroupTests,TestPostExecution,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGPostExecute.cs,DoTestPostExecuteWithCancel,The following statement contains a magic number: success = (postExecuteResult.wh.WaitOne(1000' true) == answer);
Magic Number,WorkItemsGroupTests,TestPostExecution,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGPostExecute.cs,DoSomeWork,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,WorkItemsGroupTests,TestPostExecution,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGPostExecute.cs,SignalCancel,The following statement contains a magic number: Thread.Sleep(250);
Magic Number,WorkItemsGroupTests,TestStateDispose,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGStateDispose.cs,DisposeCallerState,The following statement contains a magic number: Assert.AreEqual(2' disposableCallerState.Value);
Magic Number,WorkItemsGroupTests,TestStateDispose,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGStateDispose.cs,DoSomeWork,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdle,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10*1000' 25' 0);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdle,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10*1000' 25' 0);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdle,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10*1000' 25' 0);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdle,The following statement contains a magic number: i < 4
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdle,The following statement contains a magic number: bool success = !workItemsGroup.WaitForIdle(1000);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdle,The following statement contains a magic number: success = success && workItemsGroup.WaitForIdle(1000);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdleOnSTPThread,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10*1000' 25' 0);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdleOnSTPThread,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10*1000' 25' 0);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdleOnSTPThread,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10*1000' 25' 0);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdleOnSTPThreadForAnotherWorkItemsGroup,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10*1000' 25' 0);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdleOnSTPThreadForAnotherWorkItemsGroup,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10*1000' 25' 0);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdleOnSTPThreadForAnotherWorkItemsGroup,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10*1000' 25' 0);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdleOnSTPThreadForAnotherWorkItemsGroup,The following statement contains a magic number: workItemsGroup1.QueueWorkItem(  				new WorkItemCallback(this.DoSomeWork)'   				1000);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdleOnSTPThreadForAnotherWorkItemsGroup,The following statement contains a magic number: workItemsGroup1.QueueWorkItem(  				new WorkItemCallback(this.DoSomeWork)'   				1000);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdleWithCancel,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10 * 1000' 1' 1);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdleWithCancel,The following statement contains a magic number: SmartThreadPool smartThreadPool = new SmartThreadPool(10 * 1000' 1' 1);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdleWithCancel,The following statement contains a magic number: IWorkItemsGroup workItemsGroup = smartThreadPool.CreateWorkItemsGroup(2);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdleWithCancel,The following statement contains a magic number: IWorkItemResult wir1 = workItemsGroup.QueueWorkItem(new WorkItemCallback(this.DoSomeWork)' 1000);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdleWithCancel,The following statement contains a magic number: IWorkItemResult wir2 = workItemsGroup.QueueWorkItem(new WorkItemCallback(this.DoSomeWork)' 1000);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdleWithCancel,The following statement contains a magic number: IWorkItemResult wir3 = workItemsGroup.QueueWorkItem(new WorkItemCallback(this.DoSomeWork)' 1000);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdleWithCancel,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdleWithCancel,The following statement contains a magic number: Assert.AreEqual(2' _x);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdleWithCancel,The following statement contains a magic number: bool isIdle = workItemsGroup.WaitForIdle(100);
Magic Number,WorkItemsGroupTests,TestWaitForIdle,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWIGWaitForIdle.cs,WaitForIdleEvent,The following statement contains a magic number: bool eventFired = wigIsIdle.WaitOne(100' true);
Magic Number,WorkItemsGroupTests,TestWorkItemsGroups,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWorkItemsGroups.cs,Timeout,The following statement contains a magic number: wir.GetResult(500' true);
Magic Number,WorkItemsGroupTests,TestWorkItemsGroups,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWorkItemsGroups.cs,DoSomeWork,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,WorkItemsGroupTests,TestWorkItemsGroups,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\TestWorkItemsGroups.cs,SignalCancel,The following statement contains a magic number: Thread.Sleep(250);
Duplicate Code,SmartThreadPoolTests,QueueWorkItemHelper,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\QueueWorkItemHelper.cs,TestQueueWorkItemCallStatPostPflg,The method contains a code clone-set at the following line numbers (starting from the method definition): ((17' 51)' (121' 155))
Duplicate Code,SmartThreadPoolTests,QueueWorkItemHelper,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\QueueWorkItemHelper.cs,TestQueueWorkItemCallStatPostPflg,The method contains a code clone-set at the following line numbers (starting from the method definition): ((35' 63)' (191' 219))
Duplicate Code,SmartThreadPoolTests,QueueWorkItemHelper,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\QueueWorkItemHelper.cs,TestQueueWorkItemCallStatPostPflg,The method contains a code clone-set at the following line numbers (starting from the method definition): ((68' 103)' (172' 207))
Duplicate Code,SmartThreadPoolTests,QueueWorkItemHelper,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\QueueWorkItemHelper.cs,TestQueueWorkItemCallStatPostPflg,The method contains a code clone-set at the following line numbers (starting from the method definition): ((87' 118)' (139' 170))
Duplicate Code,SmartThreadPoolTests,QueueWorkItemHelper,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\QueueWorkItemHelper.cs,TestQueueWorkItemCallStatPostPflgPrio,The method contains a code clone-set at the following line numbers (starting from the method definition): ((19' 56)' (131' 168))
Duplicate Code,SmartThreadPoolTests,QueueWorkItemHelper,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\QueueWorkItemHelper.cs,TestQueueWorkItemCallStatPostPflgPrio,The method contains a code clone-set at the following line numbers (starting from the method definition): ((39' 68)' (208' 237))
Duplicate Code,SmartThreadPoolTests,QueueWorkItemHelper,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\QueueWorkItemHelper.cs,TestQueueWorkItemCallStatPostPflgPrio,The method contains a code clone-set at the following line numbers (starting from the method definition): ((74' 93)' (130' 149)' (187' 206))
Duplicate Code,SmartThreadPoolTests,QueueWorkItemHelper,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\QueueWorkItemHelper.cs,TestQueueWorkItemCallStatPostPflgPrio,The method contains a code clone-set at the following line numbers (starting from the method definition): ((74' 112)' (187' 225))
Duplicate Code,SmartThreadPoolTests,QueueWorkItemHelper,D:\research\architectureSmells\repos\amibar_SmartThreadPool\STPTests\QueueWorkItemHelper.cs,TestQueueWorkItemCallStatPostPflgPrio,The method contains a code clone-set at the following line numbers (starting from the method definition): ((95' 125)' (151' 181))
