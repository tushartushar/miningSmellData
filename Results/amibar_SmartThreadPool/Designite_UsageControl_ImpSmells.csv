Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GenerateItemImage,The method has 5 parameters.
Long Statement,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GenerateItemImage,The length of the statement  "	LinearGradientBrush br3 = new LinearGradientBrush (rc3' Color.FromArgb (255' Color.White)' Color.FromArgb (0' Color.White)' LinearGradientMode.Vertical); " is 153.
Long Statement,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The length of the statement  "		LinearGradientBrush br3 = new LinearGradientBrush (rc3' Color.FromArgb (255' Color.White)' Color.FromArgb (0' Color.White)' LinearGradientMode.Vertical); " is 153.
Long Statement,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,EnableDoubleBuffering,The length of the statement  "	SetStyle (ControlStyles.DoubleBuffer | ControlStyles.UserPaint | ControlStyles.AllPaintingInWmPaint | ControlStyles.SupportsTransparentBackColor' true); " is 152.
Long Statement,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,OnPaint,The length of the statement  "		//g.DrawString(text' this.Font' Brushes.Black' new RectangleF((this.Width - size.Width) / 2' top + 2' this.Width' bottom)); " is 123.
Long Statement,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,Draw3DBorder,The length of the statement  "	g.DrawLine (Pens.DarkGray' new Point (this.ClientRectangle.Left' this.ClientRectangle.Top)' new Point (this.ClientRectangle.Width - PenWidth' this.ClientRectangle.Top)); " is 169.
Long Statement,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,Draw3DBorder,The length of the statement  "	g.DrawLine (Pens.DarkGray' new Point (this.ClientRectangle.Left' this.ClientRectangle.Top)' new Point (this.ClientRectangle.Left' this.ClientRectangle.Height - PenWidth)); " is 171.
Long Statement,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,Draw3DBorder,The length of the statement  "	g.DrawLine (Pens.White' new Point (this.ClientRectangle.Left' this.ClientRectangle.Height - PenWidth)' new Point (this.ClientRectangle.Width - PenWidth' this.ClientRectangle.Height - PenWidth)); " is 194.
Long Statement,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,Draw3DBorder,The length of the statement  "	g.DrawLine (Pens.White' new Point (this.ClientRectangle.Width - PenWidth' this.ClientRectangle.Top)' new Point (this.ClientRectangle.Width - PenWidth' this.ClientRectangle.Height - PenWidth)); " is 192.
Long Statement,UsageControl,UsageHistoryControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageHistoryControl.cs,OnPaint,The length of the statement  "		g.DrawLine (Pens.Red' ClientRectangle.Width - (i - 1) * shiftStep' ClientRectangle.Height - prevVal2' ClientRectangle.Width - i * shiftStep' ClientRectangle.Height - val2); " is 172.
Long Statement,UsageControl,UsageHistoryControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageHistoryControl.cs,OnPaint,The length of the statement  "		g.DrawLine (Pens.LawnGreen' ClientRectangle.Width - (i - 1) * shiftStep' ClientRectangle.Height - prevVal1' ClientRectangle.Width - i * shiftStep' ClientRectangle.Height - val1); " is 178.
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GenerateItemImage,The following statement contains a magic number: rc.Inflate (-3' -3);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GenerateItemImage,The following statement contains a magic number: rc.Inflate (-3' -3);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GenerateItemImage,The following statement contains a magic number: rc.Inflate (0' 6);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GenerateItemImage,The following statement contains a magic number: rc.Inflate (0' -6);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GenerateItemImage,The following statement contains a magic number: rc2.Offset (8' 8);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GenerateItemImage,The following statement contains a magic number: rc2.Offset (8' 8);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GenerateItemImage,The following statement contains a magic number: rc3.Inflate (-15' -rc.Height / 3);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GenerateItemImage,The following statement contains a magic number: rc3.Inflate (-15' -rc.Height / 3);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GenerateItemImage,The following statement contains a magic number: rc3.Y = rc3.Y - 2;  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GenerateItemImage,The following statement contains a magic number: itemImage = new Bitmap (width - 2' height);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: if (!_imagesCache.ContainsKey (color)) {  	Rectangle rc = new Rectangle (0' 0' Width' _itemHeight);  	itemImage = new Bitmap (rc.Width' rc.Height);  	/// Create button  	rc.Inflate (-3' -3);  	GraphicsPath path1 = GetPath (rc' 10);  	rc.Inflate (0' 6);  	LinearGradientBrush br1 = new LinearGradientBrush (rc' color' Color.White' LinearGradientMode.Vertical);  	rc.Inflate (0' -6);  	/// Create shadow  	Rectangle rc2 = rc;  	rc2.Offset (8' 8);  	GraphicsPath path2 = GetPath (rc2' 20);  	PathGradientBrush br2 = new PathGradientBrush (path2);  	br2.CenterColor = ControlPaint.DarkDark (Color.Silver);  	br2.SurroundColors = new Color[] {  		Color.White  	};  	/// Create bubble  	Rectangle rc3 = rc;  	rc3.Inflate (-15' -rc.Height / 3);  	rc3.Y = rc3.Y - 2;  	//rc3.Height = rc3.Height;  	GraphicsPath path3 = GetPath (rc3' rc3.Height);  	LinearGradientBrush br3 = new LinearGradientBrush (rc3' Color.FromArgb (255' Color.White)' Color.FromArgb (0' Color.White)' LinearGradientMode.Vertical);  	itemImage = new Bitmap (Width - 2' _itemHeight);  	Graphics g = Graphics.FromImage (itemImage);  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.FillPath (br2' path2);  	g.FillPath (br1' path1);  	g.FillPath (br3' path3);  	_imagesCache [color] = itemImage;  }  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: if (!_imagesCache.ContainsKey (color)) {  	Rectangle rc = new Rectangle (0' 0' Width' _itemHeight);  	itemImage = new Bitmap (rc.Width' rc.Height);  	/// Create button  	rc.Inflate (-3' -3);  	GraphicsPath path1 = GetPath (rc' 10);  	rc.Inflate (0' 6);  	LinearGradientBrush br1 = new LinearGradientBrush (rc' color' Color.White' LinearGradientMode.Vertical);  	rc.Inflate (0' -6);  	/// Create shadow  	Rectangle rc2 = rc;  	rc2.Offset (8' 8);  	GraphicsPath path2 = GetPath (rc2' 20);  	PathGradientBrush br2 = new PathGradientBrush (path2);  	br2.CenterColor = ControlPaint.DarkDark (Color.Silver);  	br2.SurroundColors = new Color[] {  		Color.White  	};  	/// Create bubble  	Rectangle rc3 = rc;  	rc3.Inflate (-15' -rc.Height / 3);  	rc3.Y = rc3.Y - 2;  	//rc3.Height = rc3.Height;  	GraphicsPath path3 = GetPath (rc3' rc3.Height);  	LinearGradientBrush br3 = new LinearGradientBrush (rc3' Color.FromArgb (255' Color.White)' Color.FromArgb (0' Color.White)' LinearGradientMode.Vertical);  	itemImage = new Bitmap (Width - 2' _itemHeight);  	Graphics g = Graphics.FromImage (itemImage);  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.FillPath (br2' path2);  	g.FillPath (br1' path1);  	g.FillPath (br3' path3);  	_imagesCache [color] = itemImage;  }  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: if (!_imagesCache.ContainsKey (color)) {  	Rectangle rc = new Rectangle (0' 0' Width' _itemHeight);  	itemImage = new Bitmap (rc.Width' rc.Height);  	/// Create button  	rc.Inflate (-3' -3);  	GraphicsPath path1 = GetPath (rc' 10);  	rc.Inflate (0' 6);  	LinearGradientBrush br1 = new LinearGradientBrush (rc' color' Color.White' LinearGradientMode.Vertical);  	rc.Inflate (0' -6);  	/// Create shadow  	Rectangle rc2 = rc;  	rc2.Offset (8' 8);  	GraphicsPath path2 = GetPath (rc2' 20);  	PathGradientBrush br2 = new PathGradientBrush (path2);  	br2.CenterColor = ControlPaint.DarkDark (Color.Silver);  	br2.SurroundColors = new Color[] {  		Color.White  	};  	/// Create bubble  	Rectangle rc3 = rc;  	rc3.Inflate (-15' -rc.Height / 3);  	rc3.Y = rc3.Y - 2;  	//rc3.Height = rc3.Height;  	GraphicsPath path3 = GetPath (rc3' rc3.Height);  	LinearGradientBrush br3 = new LinearGradientBrush (rc3' Color.FromArgb (255' Color.White)' Color.FromArgb (0' Color.White)' LinearGradientMode.Vertical);  	itemImage = new Bitmap (Width - 2' _itemHeight);  	Graphics g = Graphics.FromImage (itemImage);  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.FillPath (br2' path2);  	g.FillPath (br1' path1);  	g.FillPath (br3' path3);  	_imagesCache [color] = itemImage;  }  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: if (!_imagesCache.ContainsKey (color)) {  	Rectangle rc = new Rectangle (0' 0' Width' _itemHeight);  	itemImage = new Bitmap (rc.Width' rc.Height);  	/// Create button  	rc.Inflate (-3' -3);  	GraphicsPath path1 = GetPath (rc' 10);  	rc.Inflate (0' 6);  	LinearGradientBrush br1 = new LinearGradientBrush (rc' color' Color.White' LinearGradientMode.Vertical);  	rc.Inflate (0' -6);  	/// Create shadow  	Rectangle rc2 = rc;  	rc2.Offset (8' 8);  	GraphicsPath path2 = GetPath (rc2' 20);  	PathGradientBrush br2 = new PathGradientBrush (path2);  	br2.CenterColor = ControlPaint.DarkDark (Color.Silver);  	br2.SurroundColors = new Color[] {  		Color.White  	};  	/// Create bubble  	Rectangle rc3 = rc;  	rc3.Inflate (-15' -rc.Height / 3);  	rc3.Y = rc3.Y - 2;  	//rc3.Height = rc3.Height;  	GraphicsPath path3 = GetPath (rc3' rc3.Height);  	LinearGradientBrush br3 = new LinearGradientBrush (rc3' Color.FromArgb (255' Color.White)' Color.FromArgb (0' Color.White)' LinearGradientMode.Vertical);  	itemImage = new Bitmap (Width - 2' _itemHeight);  	Graphics g = Graphics.FromImage (itemImage);  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.FillPath (br2' path2);  	g.FillPath (br1' path1);  	g.FillPath (br3' path3);  	_imagesCache [color] = itemImage;  }  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: if (!_imagesCache.ContainsKey (color)) {  	Rectangle rc = new Rectangle (0' 0' Width' _itemHeight);  	itemImage = new Bitmap (rc.Width' rc.Height);  	/// Create button  	rc.Inflate (-3' -3);  	GraphicsPath path1 = GetPath (rc' 10);  	rc.Inflate (0' 6);  	LinearGradientBrush br1 = new LinearGradientBrush (rc' color' Color.White' LinearGradientMode.Vertical);  	rc.Inflate (0' -6);  	/// Create shadow  	Rectangle rc2 = rc;  	rc2.Offset (8' 8);  	GraphicsPath path2 = GetPath (rc2' 20);  	PathGradientBrush br2 = new PathGradientBrush (path2);  	br2.CenterColor = ControlPaint.DarkDark (Color.Silver);  	br2.SurroundColors = new Color[] {  		Color.White  	};  	/// Create bubble  	Rectangle rc3 = rc;  	rc3.Inflate (-15' -rc.Height / 3);  	rc3.Y = rc3.Y - 2;  	//rc3.Height = rc3.Height;  	GraphicsPath path3 = GetPath (rc3' rc3.Height);  	LinearGradientBrush br3 = new LinearGradientBrush (rc3' Color.FromArgb (255' Color.White)' Color.FromArgb (0' Color.White)' LinearGradientMode.Vertical);  	itemImage = new Bitmap (Width - 2' _itemHeight);  	Graphics g = Graphics.FromImage (itemImage);  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.FillPath (br2' path2);  	g.FillPath (br1' path1);  	g.FillPath (br3' path3);  	_imagesCache [color] = itemImage;  }  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: if (!_imagesCache.ContainsKey (color)) {  	Rectangle rc = new Rectangle (0' 0' Width' _itemHeight);  	itemImage = new Bitmap (rc.Width' rc.Height);  	/// Create button  	rc.Inflate (-3' -3);  	GraphicsPath path1 = GetPath (rc' 10);  	rc.Inflate (0' 6);  	LinearGradientBrush br1 = new LinearGradientBrush (rc' color' Color.White' LinearGradientMode.Vertical);  	rc.Inflate (0' -6);  	/// Create shadow  	Rectangle rc2 = rc;  	rc2.Offset (8' 8);  	GraphicsPath path2 = GetPath (rc2' 20);  	PathGradientBrush br2 = new PathGradientBrush (path2);  	br2.CenterColor = ControlPaint.DarkDark (Color.Silver);  	br2.SurroundColors = new Color[] {  		Color.White  	};  	/// Create bubble  	Rectangle rc3 = rc;  	rc3.Inflate (-15' -rc.Height / 3);  	rc3.Y = rc3.Y - 2;  	//rc3.Height = rc3.Height;  	GraphicsPath path3 = GetPath (rc3' rc3.Height);  	LinearGradientBrush br3 = new LinearGradientBrush (rc3' Color.FromArgb (255' Color.White)' Color.FromArgb (0' Color.White)' LinearGradientMode.Vertical);  	itemImage = new Bitmap (Width - 2' _itemHeight);  	Graphics g = Graphics.FromImage (itemImage);  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.FillPath (br2' path2);  	g.FillPath (br1' path1);  	g.FillPath (br3' path3);  	_imagesCache [color] = itemImage;  }  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: if (!_imagesCache.ContainsKey (color)) {  	Rectangle rc = new Rectangle (0' 0' Width' _itemHeight);  	itemImage = new Bitmap (rc.Width' rc.Height);  	/// Create button  	rc.Inflate (-3' -3);  	GraphicsPath path1 = GetPath (rc' 10);  	rc.Inflate (0' 6);  	LinearGradientBrush br1 = new LinearGradientBrush (rc' color' Color.White' LinearGradientMode.Vertical);  	rc.Inflate (0' -6);  	/// Create shadow  	Rectangle rc2 = rc;  	rc2.Offset (8' 8);  	GraphicsPath path2 = GetPath (rc2' 20);  	PathGradientBrush br2 = new PathGradientBrush (path2);  	br2.CenterColor = ControlPaint.DarkDark (Color.Silver);  	br2.SurroundColors = new Color[] {  		Color.White  	};  	/// Create bubble  	Rectangle rc3 = rc;  	rc3.Inflate (-15' -rc.Height / 3);  	rc3.Y = rc3.Y - 2;  	//rc3.Height = rc3.Height;  	GraphicsPath path3 = GetPath (rc3' rc3.Height);  	LinearGradientBrush br3 = new LinearGradientBrush (rc3' Color.FromArgb (255' Color.White)' Color.FromArgb (0' Color.White)' LinearGradientMode.Vertical);  	itemImage = new Bitmap (Width - 2' _itemHeight);  	Graphics g = Graphics.FromImage (itemImage);  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.FillPath (br2' path2);  	g.FillPath (br1' path1);  	g.FillPath (br3' path3);  	_imagesCache [color] = itemImage;  }  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: if (!_imagesCache.ContainsKey (color)) {  	Rectangle rc = new Rectangle (0' 0' Width' _itemHeight);  	itemImage = new Bitmap (rc.Width' rc.Height);  	/// Create button  	rc.Inflate (-3' -3);  	GraphicsPath path1 = GetPath (rc' 10);  	rc.Inflate (0' 6);  	LinearGradientBrush br1 = new LinearGradientBrush (rc' color' Color.White' LinearGradientMode.Vertical);  	rc.Inflate (0' -6);  	/// Create shadow  	Rectangle rc2 = rc;  	rc2.Offset (8' 8);  	GraphicsPath path2 = GetPath (rc2' 20);  	PathGradientBrush br2 = new PathGradientBrush (path2);  	br2.CenterColor = ControlPaint.DarkDark (Color.Silver);  	br2.SurroundColors = new Color[] {  		Color.White  	};  	/// Create bubble  	Rectangle rc3 = rc;  	rc3.Inflate (-15' -rc.Height / 3);  	rc3.Y = rc3.Y - 2;  	//rc3.Height = rc3.Height;  	GraphicsPath path3 = GetPath (rc3' rc3.Height);  	LinearGradientBrush br3 = new LinearGradientBrush (rc3' Color.FromArgb (255' Color.White)' Color.FromArgb (0' Color.White)' LinearGradientMode.Vertical);  	itemImage = new Bitmap (Width - 2' _itemHeight);  	Graphics g = Graphics.FromImage (itemImage);  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.FillPath (br2' path2);  	g.FillPath (br1' path1);  	g.FillPath (br3' path3);  	_imagesCache [color] = itemImage;  }  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: if (!_imagesCache.ContainsKey (color)) {  	Rectangle rc = new Rectangle (0' 0' Width' _itemHeight);  	itemImage = new Bitmap (rc.Width' rc.Height);  	/// Create button  	rc.Inflate (-3' -3);  	GraphicsPath path1 = GetPath (rc' 10);  	rc.Inflate (0' 6);  	LinearGradientBrush br1 = new LinearGradientBrush (rc' color' Color.White' LinearGradientMode.Vertical);  	rc.Inflate (0' -6);  	/// Create shadow  	Rectangle rc2 = rc;  	rc2.Offset (8' 8);  	GraphicsPath path2 = GetPath (rc2' 20);  	PathGradientBrush br2 = new PathGradientBrush (path2);  	br2.CenterColor = ControlPaint.DarkDark (Color.Silver);  	br2.SurroundColors = new Color[] {  		Color.White  	};  	/// Create bubble  	Rectangle rc3 = rc;  	rc3.Inflate (-15' -rc.Height / 3);  	rc3.Y = rc3.Y - 2;  	//rc3.Height = rc3.Height;  	GraphicsPath path3 = GetPath (rc3' rc3.Height);  	LinearGradientBrush br3 = new LinearGradientBrush (rc3' Color.FromArgb (255' Color.White)' Color.FromArgb (0' Color.White)' LinearGradientMode.Vertical);  	itemImage = new Bitmap (Width - 2' _itemHeight);  	Graphics g = Graphics.FromImage (itemImage);  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.FillPath (br2' path2);  	g.FillPath (br1' path1);  	g.FillPath (br3' path3);  	_imagesCache [color] = itemImage;  }  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: if (!_imagesCache.ContainsKey (color)) {  	Rectangle rc = new Rectangle (0' 0' Width' _itemHeight);  	itemImage = new Bitmap (rc.Width' rc.Height);  	/// Create button  	rc.Inflate (-3' -3);  	GraphicsPath path1 = GetPath (rc' 10);  	rc.Inflate (0' 6);  	LinearGradientBrush br1 = new LinearGradientBrush (rc' color' Color.White' LinearGradientMode.Vertical);  	rc.Inflate (0' -6);  	/// Create shadow  	Rectangle rc2 = rc;  	rc2.Offset (8' 8);  	GraphicsPath path2 = GetPath (rc2' 20);  	PathGradientBrush br2 = new PathGradientBrush (path2);  	br2.CenterColor = ControlPaint.DarkDark (Color.Silver);  	br2.SurroundColors = new Color[] {  		Color.White  	};  	/// Create bubble  	Rectangle rc3 = rc;  	rc3.Inflate (-15' -rc.Height / 3);  	rc3.Y = rc3.Y - 2;  	//rc3.Height = rc3.Height;  	GraphicsPath path3 = GetPath (rc3' rc3.Height);  	LinearGradientBrush br3 = new LinearGradientBrush (rc3' Color.FromArgb (255' Color.White)' Color.FromArgb (0' Color.White)' LinearGradientMode.Vertical);  	itemImage = new Bitmap (Width - 2' _itemHeight);  	Graphics g = Graphics.FromImage (itemImage);  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.FillPath (br2' path2);  	g.FillPath (br1' path1);  	g.FillPath (br3' path3);  	_imagesCache [color] = itemImage;  }  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: if (!_imagesCache.ContainsKey (color)) {  	Rectangle rc = new Rectangle (0' 0' Width' _itemHeight);  	itemImage = new Bitmap (rc.Width' rc.Height);  	/// Create button  	rc.Inflate (-3' -3);  	GraphicsPath path1 = GetPath (rc' 10);  	rc.Inflate (0' 6);  	LinearGradientBrush br1 = new LinearGradientBrush (rc' color' Color.White' LinearGradientMode.Vertical);  	rc.Inflate (0' -6);  	/// Create shadow  	Rectangle rc2 = rc;  	rc2.Offset (8' 8);  	GraphicsPath path2 = GetPath (rc2' 20);  	PathGradientBrush br2 = new PathGradientBrush (path2);  	br2.CenterColor = ControlPaint.DarkDark (Color.Silver);  	br2.SurroundColors = new Color[] {  		Color.White  	};  	/// Create bubble  	Rectangle rc3 = rc;  	rc3.Inflate (-15' -rc.Height / 3);  	rc3.Y = rc3.Y - 2;  	//rc3.Height = rc3.Height;  	GraphicsPath path3 = GetPath (rc3' rc3.Height);  	LinearGradientBrush br3 = new LinearGradientBrush (rc3' Color.FromArgb (255' Color.White)' Color.FromArgb (0' Color.White)' LinearGradientMode.Vertical);  	itemImage = new Bitmap (Width - 2' _itemHeight);  	Graphics g = Graphics.FromImage (itemImage);  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.FillPath (br2' path2);  	g.FillPath (br1' path1);  	g.FillPath (br3' path3);  	_imagesCache [color] = itemImage;  }  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: if (!_imagesCache.ContainsKey (color)) {  	Rectangle rc = new Rectangle (0' 0' Width' _itemHeight);  	itemImage = new Bitmap (rc.Width' rc.Height);  	/// Create button  	rc.Inflate (-3' -3);  	GraphicsPath path1 = GetPath (rc' 10);  	rc.Inflate (0' 6);  	LinearGradientBrush br1 = new LinearGradientBrush (rc' color' Color.White' LinearGradientMode.Vertical);  	rc.Inflate (0' -6);  	/// Create shadow  	Rectangle rc2 = rc;  	rc2.Offset (8' 8);  	GraphicsPath path2 = GetPath (rc2' 20);  	PathGradientBrush br2 = new PathGradientBrush (path2);  	br2.CenterColor = ControlPaint.DarkDark (Color.Silver);  	br2.SurroundColors = new Color[] {  		Color.White  	};  	/// Create bubble  	Rectangle rc3 = rc;  	rc3.Inflate (-15' -rc.Height / 3);  	rc3.Y = rc3.Y - 2;  	//rc3.Height = rc3.Height;  	GraphicsPath path3 = GetPath (rc3' rc3.Height);  	LinearGradientBrush br3 = new LinearGradientBrush (rc3' Color.FromArgb (255' Color.White)' Color.FromArgb (0' Color.White)' LinearGradientMode.Vertical);  	itemImage = new Bitmap (Width - 2' _itemHeight);  	Graphics g = Graphics.FromImage (itemImage);  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.FillPath (br2' path2);  	g.FillPath (br1' path1);  	g.FillPath (br3' path3);  	_imagesCache [color] = itemImage;  }  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: if (!_imagesCache.ContainsKey (color)) {  	Rectangle rc = new Rectangle (0' 0' Width' _itemHeight);  	itemImage = new Bitmap (rc.Width' rc.Height);  	/// Create button  	rc.Inflate (-3' -3);  	GraphicsPath path1 = GetPath (rc' 10);  	rc.Inflate (0' 6);  	LinearGradientBrush br1 = new LinearGradientBrush (rc' color' Color.White' LinearGradientMode.Vertical);  	rc.Inflate (0' -6);  	/// Create shadow  	Rectangle rc2 = rc;  	rc2.Offset (8' 8);  	GraphicsPath path2 = GetPath (rc2' 20);  	PathGradientBrush br2 = new PathGradientBrush (path2);  	br2.CenterColor = ControlPaint.DarkDark (Color.Silver);  	br2.SurroundColors = new Color[] {  		Color.White  	};  	/// Create bubble  	Rectangle rc3 = rc;  	rc3.Inflate (-15' -rc.Height / 3);  	rc3.Y = rc3.Y - 2;  	//rc3.Height = rc3.Height;  	GraphicsPath path3 = GetPath (rc3' rc3.Height);  	LinearGradientBrush br3 = new LinearGradientBrush (rc3' Color.FromArgb (255' Color.White)' Color.FromArgb (0' Color.White)' LinearGradientMode.Vertical);  	itemImage = new Bitmap (Width - 2' _itemHeight);  	Graphics g = Graphics.FromImage (itemImage);  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.FillPath (br2' path2);  	g.FillPath (br1' path1);  	g.FillPath (br3' path3);  	_imagesCache [color] = itemImage;  }  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: rc.Inflate (-3' -3);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: rc.Inflate (-3' -3);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: rc.Inflate (0' 6);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: rc.Inflate (0' -6);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: rc2.Offset (8' 8);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: rc2.Offset (8' 8);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: rc3.Inflate (-15' -rc.Height / 3);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: rc3.Inflate (-15' -rc.Height / 3);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: rc3.Y = rc3.Y - 2;  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetItemsImage,The following statement contains a magic number: itemImage = new Bitmap (Width - 2' _itemHeight);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,OnPaint,The following statement contains a magic number: foreach (QueueUsageEntry entry in _queuedItems) {  	if (i > counter) {  		break;  	}  	//int top = 0;  	//int bottom = 0;  	//if (topdown)  	//{  	//    bottom = 1;  	//    top = bottom;  	//    top += i * _itemHeight;  	//    bottom += (i + 1) * _itemHeight;  	//}  	//else  	//{  	//    bottom = this.Height - 1;  	//    top = bottom;  	//    bottom -= i * _itemHeight;  	//    top -= (i + 1) * _itemHeight;  	//}  	//g.DrawLine(Pens.Black' 0' top' this.Width' top);  	string text = (entry.IsExecuting ? ">" : "") + entry.Text;  	if (i == _lastVisibleItemIndex) {  		text = "(" + (_queuedItems.Count - _maxItemsVisible) + ")...";  	}  	SizeF size = g.MeasureString (entry.Text' Font);  	//Debug.WriteLine(size.Width);  	Bitmap itemImage = GetItemsImage (entry.Color);  	RectangleF slot = _slots [i];  	//g.DrawImage(itemImage' -1' top);  	g.DrawImage (itemImage' -1' slot.Top - 2);  	//g.DrawString(text' this.Font' Brushes.Black' new RectangleF((this.Width - size.Width) / 2' top + 2' this.Width' bottom));  	g.DrawString (text' Font' Brushes.Black' slot);  	++i;  }  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,OnPaint,The following statement contains a magic number: g.DrawImage (itemImage' -1' slot.Top - 2);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetPath,The following statement contains a magic number: path.AddArc (x' y' r' r' 180' 90);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetPath,The following statement contains a magic number: path.AddArc (x' y' r' r' 180' 90);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetPath,The following statement contains a magic number: path.AddArc (x + w - r' y' r' r' 270' 90);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetPath,The following statement contains a magic number: path.AddArc (x + w - r' y' r' r' 270' 90);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetPath,The following statement contains a magic number: path.AddArc (x + w - r' y + h - r' r' r' 0' 90);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetPath,The following statement contains a magic number: path.AddArc (x' y + h - r' r' r' 90' 90);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,GetPath,The following statement contains a magic number: path.AddArc (x' y + h - r' r' r' 90' 90);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,ControlRezised,The following statement contains a magic number: _itemHeight = (int)size.Height + 5;  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,ControlRezised,The following statement contains a magic number: _pathBorder = GetPath (border' 20);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,PrepareSlots,The following statement contains a magic number: _slots = new RectangleF[_maxItemsVisible + 5];  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,PrepareSlots,The following statement contains a magic number: for (int i = 0; i < _slots.Length; i++) {  	int top;  	int bottom;  	if (topdown) {  		bottom = 1;  		top = bottom;  		top += i * _itemHeight;  		bottom += (i + 1) * _itemHeight;  	} else {  		bottom = Height - 1;  		top = bottom;  		bottom -= i * _itemHeight;  		top -= (i + 1) * _itemHeight;  	}  	_slots [i] = new RectangleF ((Width - 55) / 2' top + 2' Width' bottom);  }  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,PrepareSlots,The following statement contains a magic number: for (int i = 0; i < _slots.Length; i++) {  	int top;  	int bottom;  	if (topdown) {  		bottom = 1;  		top = bottom;  		top += i * _itemHeight;  		bottom += (i + 1) * _itemHeight;  	} else {  		bottom = Height - 1;  		top = bottom;  		bottom -= i * _itemHeight;  		top -= (i + 1) * _itemHeight;  	}  	_slots [i] = new RectangleF ((Width - 55) / 2' top + 2' Width' bottom);  }  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,PrepareSlots,The following statement contains a magic number: for (int i = 0; i < _slots.Length; i++) {  	int top;  	int bottom;  	if (topdown) {  		bottom = 1;  		top = bottom;  		top += i * _itemHeight;  		bottom += (i + 1) * _itemHeight;  	} else {  		bottom = Height - 1;  		top = bottom;  		bottom -= i * _itemHeight;  		top -= (i + 1) * _itemHeight;  	}  	_slots [i] = new RectangleF ((Width - 55) / 2' top + 2' Width' bottom);  }  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,PrepareSlots,The following statement contains a magic number: _slots [i] = new RectangleF ((Width - 55) / 2' top + 2' Width' bottom);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,PrepareSlots,The following statement contains a magic number: _slots [i] = new RectangleF ((Width - 55) / 2' top + 2' Width' bottom);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,PrepareSlots,The following statement contains a magic number: _slots [i] = new RectangleF ((Width - 55) / 2' top + 2' Width' bottom);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,InitializeComponent,The following statement contains a magic number: this.timer1.Interval = 500;  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (167' 247);  
Magic Number,UsageControl,QueueUsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\QueueUsageControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (167' 247);  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,UsageControl,The following statement contains a magic number: fixedWidth = 2 + (ovalWidth + 1) * columns + 1;  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (192' 160);  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (192' 160);  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnResize,The following statement contains a magic number: rows = (ClientRectangle.Height / 4) - 1;  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: for (i = 0; i < filledCount1; ++i) {  	for (int j = 0; j < columns; ++j) {  		DrawOval (g' Pens.LawnGreen' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  	}  }  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: for (i = 0; i < filledCount1; ++i) {  	for (int j = 0; j < columns; ++j) {  		DrawOval (g' Pens.LawnGreen' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  	}  }  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: for (i = 0; i < filledCount1; ++i) {  	for (int j = 0; j < columns; ++j) {  		DrawOval (g' Pens.LawnGreen' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  	}  }  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: for (int j = 0; j < columns; ++j) {  	DrawOval (g' Pens.LawnGreen' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  }  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: for (int j = 0; j < columns; ++j) {  	DrawOval (g' Pens.LawnGreen' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  }  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: for (int j = 0; j < columns; ++j) {  	DrawOval (g' Pens.LawnGreen' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  }  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: DrawOval (g' Pens.LawnGreen' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: DrawOval (g' Pens.LawnGreen' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: DrawOval (g' Pens.LawnGreen' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: for (; i < filledCount2; ++i) {  	for (int j = 0; j < columns; ++j) {  		DrawOval (g' Pens.Red' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  	}  }  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: for (; i < filledCount2; ++i) {  	for (int j = 0; j < columns; ++j) {  		DrawOval (g' Pens.Red' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  	}  }  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: for (; i < filledCount2; ++i) {  	for (int j = 0; j < columns; ++j) {  		DrawOval (g' Pens.Red' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  	}  }  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: for (int j = 0; j < columns; ++j) {  	DrawOval (g' Pens.Red' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  }  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: for (int j = 0; j < columns; ++j) {  	DrawOval (g' Pens.Red' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  }  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: for (int j = 0; j < columns; ++j) {  	DrawOval (g' Pens.Red' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  }  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: DrawOval (g' Pens.Red' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: DrawOval (g' Pens.Red' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: DrawOval (g' Pens.Red' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: for (; i < rows; ++i) {  	for (int j = 0; j < columns; ++j) {  		DrawOval (g' Pens.Green' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  	}  }  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: for (; i < rows; ++i) {  	for (int j = 0; j < columns; ++j) {  		DrawOval (g' Pens.Green' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  	}  }  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: for (; i < rows; ++i) {  	for (int j = 0; j < columns; ++j) {  		DrawOval (g' Pens.Green' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  	}  }  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: for (int j = 0; j < columns; ++j) {  	DrawOval (g' Pens.Green' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  }  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: for (int j = 0; j < columns; ++j) {  	DrawOval (g' Pens.Green' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  }  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: for (int j = 0; j < columns; ++j) {  	DrawOval (g' Pens.Green' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  }  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: DrawOval (g' Pens.Green' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: DrawOval (g' Pens.Green' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,OnPaint,The following statement contains a magic number: DrawOval (g' Pens.Green' 2 + j * (1 + ovalWidth)' ClientRectangle.Bottom - 5 - i * 4);  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,DrawOval,The following statement contains a magic number: g.DrawLine (pen' x + 1' y' x + ovalWidth - 2' y);  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,DrawOval,The following statement contains a magic number: g.DrawLine (pen' x + 1' y + 2' x + ovalWidth - 2' y + 2);  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,DrawOval,The following statement contains a magic number: g.DrawLine (pen' x + 1' y + 2' x + ovalWidth - 2' y + 2);  
Magic Number,UsageControl,UsageControl,F:\newReposMay17\amibar_SmartThreadPool\UsageControl\UsageControl.cs,DrawOval,The following statement contains a magic number: g.DrawLine (pen' x + 1' y + 2' x + ovalWidth - 2' y + 2);  
